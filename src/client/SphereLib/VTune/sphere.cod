; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??HVector3d@@QBE?AV0@ABV0@@Z			; Vector3d::operator+
PUBLIC	??GVector3d@@QBE?AV0@ABV0@@Z			; Vector3d::operator-
PUBLIC	??DVector3d@@QBE?AV0@M@Z			; Vector3d::operator*
PUBLIC	?Length2@Vector3d@@QBEMXZ			; Vector3d::Length2
PUBLIC	?DistanceSq@Vector3d@@QBEMABV1@@Z		; Vector3d::DistanceSq
PUBLIC	?IsInStaticRange@Vector3d@@QBE_NXZ		; Vector3d::IsInStaticRange
PUBLIC	?Set@Sphere@@QAEXABVVector3d@@M@Z		; Sphere::Set
PUBLIC	?Compute@Sphere@@QAEXABVSphereInterface@@@Z	; Sphere::Compute
PUBLIC	?RayIntersection@Sphere@@QAE_NABVVector3d@@0MPAV2@@Z ; Sphere::RayIntersection
PUBLIC	?RayIntersection@Sphere@@QAE_NABVVector3d@@0PAV2@@Z ; Sphere::RayIntersection
PUBLIC	?RayIntersectionInFront@Sphere@@QAE_NABVVector3d@@0PAV2@@Z ; Sphere::RayIntersectionInFront
PUBLIC	?Report@Sphere@@QAEXXZ				; Sphere::Report
PUBLIC	__real@00000000
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@4a47fe70
PUBLIC	__real@4cbebc20
PUBLIC	__real@bf800000
PUBLIC	__real@ca47fe70
PUBLIC	__real@ccbebc20
EXTRN	_sqrt:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@ccbebc20
CONST	SEGMENT
__real@ccbebc20 DD 0ccbebc20r			; -1e+08
CONST	ENDS
;	COMDAT __real@ca47fe70
CONST	SEGMENT
__real@ca47fe70 DD 0ca47fe70r			; -3.2767e+06
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@4cbebc20
CONST	SEGMENT
__real@4cbebc20 DD 04cbebc20r			; 1e+08
CONST	ENDS
;	COMDAT __real@4a47fe70
CONST	SEGMENT
__real@4a47fe70 DD 04a47fe70r			; 3.2767e+06
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
;	COMDAT ?Report@Sphere@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Report@Sphere@@QAEXXZ PROC				; Sphere::Report, COMDAT
; _this$ = ecx

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 128  : }

  00007	c9		 leave
  00008	c3		 ret	 0
?Report@Sphere@@QAEXXZ ENDP				; Sphere::Report
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
;	COMDAT ?RayIntersectionInFront@Sphere@@QAE_NABVVector3d@@0PAV2@@Z
_TEXT	SEGMENT
_dot$1 = -44						; size = 4
$T2 = -40						; size = 4
_this$ = -36						; size = 4
_hit$ = -29						; size = 1
_dir$3 = -28						; size = 12
_sect$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_rayOrigin$ = 8						; size = 4
_V$ = 12						; size = 4
_intersect$ = 16					; size = 4
?RayIntersectionInFront@Sphere@@QAE_NABVVector3d@@0PAV2@@Z PROC ; Sphere::RayIntersectionInFront, COMDAT
; _this$ = ecx

; 106  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	89 4d dc	 mov	 DWORD PTR _this$[ebp], ecx

; 107  :   Vector3d sect;
; 108  :   bool hit = RayIntersection(rayOrigin,V,&sect);

  00013	8d 45 f0	 lea	 eax, DWORD PTR _sect$[ebp]
  00016	50		 push	 eax
  00017	ff 75 0c	 push	 DWORD PTR _V$[ebp]
  0001a	ff 75 08	 push	 DWORD PTR _rayOrigin$[ebp]
  0001d	8b 4d dc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?RayIntersection@Sphere@@QAE_NABVVector3d@@0PAV2@@Z ; Sphere::RayIntersection
  00025	88 45 e3	 mov	 BYTE PTR _hit$[ebp], al

; 109  : 
; 110  :   if ( hit )

  00028	0f b6 45 e3	 movzx	 eax, BYTE PTR _hit$[ebp]
  0002c	85 c0		 test	 eax, eax
  0002e	0f 84 8a 00 00
	00		 je	 $LN3@RayInterse

; 111  :   {
; 112  : 
; 113  :     Vector3d dir = sect - rayOrigin;

  00034	ff 75 08	 push	 DWORD PTR _rayOrigin$[ebp]
  00037	8d 45 e4	 lea	 eax, DWORD PTR _dir$3[ebp]
  0003a	50		 push	 eax
  0003b	8d 4d f0	 lea	 ecx, DWORD PTR _sect$[ebp]
  0003e	e8 00 00 00 00	 call	 ??GVector3d@@QBE?AV0@ABV0@@Z ; Vector3d::operator-
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 201  : 		return (x * a.x + y * a.y + z * a.z );

  00043	8b 45 0c	 mov	 eax, DWORD PTR _V$[ebp]
  00046	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _dir$3[ebp]
  0004b	f3 0f 59 00	 mulss	 xmm0, DWORD PTR [eax]
  0004f	8b 45 0c	 mov	 eax, DWORD PTR _V$[ebp]
  00052	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _dir$3[ebp+4]
  00057	f3 0f 59 48 04	 mulss	 xmm1, DWORD PTR [eax+4]
  0005c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00060	8b 45 0c	 mov	 eax, DWORD PTR _V$[ebp]
  00063	f3 0f 10 4d ec	 movss	 xmm1, DWORD PTR _dir$3[ebp+8]
  00068	f3 0f 59 48 08	 mulss	 xmm1, DWORD PTR [eax+8]
  0006d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00071	f3 0f 11 45 d8	 movss	 DWORD PTR $T2[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 115  :     float dot = dir.Dot(V);

  00076	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR $T2[ebp]
  0007b	f3 0f 11 45 d4	 movss	 DWORD PTR _dot$1[ebp], xmm0

; 116  : 
; 117  :     if ( dot >= 0  ) // then it's in front!

  00080	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _dot$1[ebp]
  00085	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  0008c	72 30		 jb	 SHORT $LN3@RayInterse

; 118  :     {
; 119  :       if ( intersect ) *intersect = sect;

  0008e	83 7d 10 00	 cmp	 DWORD PTR _intersect$[ebp], 0
  00092	74 26		 je	 SHORT $LN22@RayInterse
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 57   : 	{ x=A.x; y=A.y; z=A.z;

  00094	8b 45 10	 mov	 eax, DWORD PTR _intersect$[ebp]
  00097	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _sect$[ebp]
  0009c	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  000a0	8b 45 10	 mov	 eax, DWORD PTR _intersect$[ebp]
  000a3	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _sect$[ebp+4]
  000a8	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
  000ad	8b 45 10	 mov	 eax, DWORD PTR _intersect$[ebp]
  000b0	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _sect$[ebp+8]
  000b5	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
$LN22@RayInterse:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 120  :       return true;

  000ba	b0 01		 mov	 al, 1
  000bc	eb 02		 jmp	 SHORT $LN1@RayInterse
$LN3@RayInterse:

; 121  :     }
; 122  :   }
; 123  :   return false;

  000be	32 c0		 xor	 al, al
$LN1@RayInterse:

; 124  : }

  000c0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c3	33 cd		 xor	 ecx, ebp
  000c5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ca	c9		 leave
  000cb	c2 0c 00	 ret	 12			; 0000000cH
?RayIntersectionInFront@Sphere@@QAE_NABVVector3d@@0PAV2@@Z ENDP ; Sphere::RayIntersectionInFront
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
;	COMDAT ?RayIntersection@Sphere@@QAE_NABVVector3d@@0PAV2@@Z
_TEXT	SEGMENT
_d$1 = -88						; size = 4
$T2 = -84						; size = 4
tv561 = -80						; size = 4
$T3 = -76						; size = 4
_dist2$ = -72						; size = 4
_disc$ = -68						; size = 4
_A$ = -64						; size = 4
_v$ = -60						; size = 4
_this$ = -56						; size = 4
$T4 = -52						; size = 12
$T5 = -40						; size = 12
_EO$ = -28						; size = 12
_V$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_rayOrigin$ = 8						; size = 4
_dir$ = 12						; size = 4
_intersect$ = 16					; size = 4
?RayIntersection@Sphere@@QAE_NABVVector3d@@0PAV2@@Z PROC ; Sphere::RayIntersection, COMDAT
; _this$ = ecx

; 48   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	89 4d c8	 mov	 DWORD PTR _this$[ebp], ecx

; 49   : 	//notation:
; 50   : 	//point E  = rayOrigin
; 51   : 	//point O  = sphere center
; 52   : 
; 53   : 	Vector3d EO = mCenter - rayOrigin;

  00013	ff 75 08	 push	 DWORD PTR _rayOrigin$[ebp]
  00016	8d 45 e4	 lea	 eax, DWORD PTR _EO$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	83 c1 04	 add	 ecx, 4
  00020	e8 00 00 00 00	 call	 ??GVector3d@@QBE?AV0@ABV0@@Z ; Vector3d::operator-
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 30   : 		x = a.x;

  00025	8b 45 0c	 mov	 eax, DWORD PTR _dir$[ebp]
  00028	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0002c	f3 0f 11 45 f0	 movss	 DWORD PTR _V$[ebp], xmm0

; 31   : 		y = a.y;

  00031	8b 45 0c	 mov	 eax, DWORD PTR _dir$[ebp]
  00034	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00039	f3 0f 11 45 f4	 movss	 DWORD PTR _V$[ebp+4], xmm0

; 32   : 		z = a.z;

  0003e	8b 45 0c	 mov	 eax, DWORD PTR _dir$[ebp]
  00041	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00046	f3 0f 11 45 f8	 movss	 DWORD PTR _V$[ebp+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 55   :   float dist2 = EO.x*EO.x + EO.y*EO.y + EO.z * EO.z;

  0004b	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _EO$[ebp]
  00050	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _EO$[ebp]
  00055	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _EO$[ebp+4]
  0005a	f3 0f 59 4d e8	 mulss	 xmm1, DWORD PTR _EO$[ebp+4]
  0005f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00063	f3 0f 10 4d ec	 movss	 xmm1, DWORD PTR _EO$[ebp+8]
  00068	f3 0f 59 4d ec	 mulss	 xmm1, DWORD PTR _EO$[ebp+8]
  0006d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00071	f3 0f 11 45 b8	 movss	 DWORD PTR _dist2$[ebp], xmm0

; 56   :   // Bug Fix For Gem, if origin is *inside* the sphere, invert the
; 57   :   // direction vector so that we get a valid intersection location.
; 58   :   if ( dist2 < mRadius2 ) V*=-1;

  00076	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  00079	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  0007e	0f 2f 45 b8	 comiss	 xmm0, DWORD PTR _dist2$[ebp]
  00082	76 36		 jbe	 SHORT $LN16@RayInterse
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 84   : 	{x*=s; y*=s; z*=s;}

  00084	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _V$[ebp]
  00089	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@bf800000
  00091	f3 0f 11 45 f0	 movss	 DWORD PTR _V$[ebp], xmm0
  00096	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _V$[ebp+4]
  0009b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@bf800000
  000a3	f3 0f 11 45 f4	 movss	 DWORD PTR _V$[ebp+4], xmm0
  000a8	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _V$[ebp+8]
  000ad	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@bf800000
  000b5	f3 0f 11 45 f8	 movss	 DWORD PTR _V$[ebp+8], xmm0
$LN16@RayInterse:

; 201  : 		return (x * a.x + y * a.y + z * a.z );

  000ba	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _EO$[ebp]
  000bf	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _V$[ebp]
  000c4	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _EO$[ebp+4]
  000c9	f3 0f 59 4d f4	 mulss	 xmm1, DWORD PTR _V$[ebp+4]
  000ce	f3 0f 58 c1	 addss	 xmm0, xmm1
  000d2	f3 0f 10 4d ec	 movss	 xmm1, DWORD PTR _EO$[ebp+8]
  000d7	f3 0f 59 4d f8	 mulss	 xmm1, DWORD PTR _V$[ebp+8]
  000dc	f3 0f 58 c1	 addss	 xmm0, xmm1
  000e0	f3 0f 11 45 b4	 movss	 DWORD PTR $T3[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 60   : 	float v = EO.Dot(V);

  000e5	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR $T3[ebp]
  000ea	f3 0f 11 45 c4	 movss	 DWORD PTR _v$[ebp], xmm0

; 61   : 
; 62   : 	float disc = mRadius2 - (EO.Length2() - v*v);

  000ef	8d 4d e4	 lea	 ecx, DWORD PTR _EO$[ebp]
  000f2	e8 00 00 00 00	 call	 ?Length2@Vector3d@@QBEMXZ ; Vector3d::Length2
  000f7	d9 5d b0	 fstp	 DWORD PTR tv561[ebp]
  000fa	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv561[ebp]
  000ff	f3 0f 10 4d c4	 movss	 xmm1, DWORD PTR _v$[ebp]
  00104	f3 0f 59 4d c4	 mulss	 xmm1, DWORD PTR _v$[ebp]
  00109	f3 0f 5c c1	 subss	 xmm0, xmm1
  0010d	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  00110	f3 0f 10 48 14	 movss	 xmm1, DWORD PTR [eax+20]
  00115	f3 0f 5c c8	 subss	 xmm1, xmm0
  00119	f3 0f 11 4d bc	 movss	 DWORD PTR _disc$[ebp], xmm1

; 63   : 
; 64   : 	if (disc > 0.0f)

  0011e	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _disc$[ebp]
  00123	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  0012a	76 78		 jbe	 SHORT $LN3@RayInterse

; 65   : 	{
; 66   : 
; 67   : 		if ( intersect )

  0012c	83 7d 10 00	 cmp	 DWORD PTR _intersect$[ebp], 0
  00130	74 6e		 je	 SHORT $LN44@RayInterse
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  00132	f3 0f 5a 45 bc	 cvtss2sd xmm0, DWORD PTR _disc$[ebp]
  00137	51		 push	 ecx
  00138	51		 push	 ecx
  00139	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0013e	e8 00 00 00 00	 call	 _sqrt
  00143	59		 pop	 ecx
  00144	59		 pop	 ecx
  00145	d9 5d ac	 fstp	 DWORD PTR $T2[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 70   : 		  float d = sqrtf(disc);

  00148	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR $T2[ebp]
  0014d	f3 0f 11 45 a8	 movss	 DWORD PTR _d$1[ebp], xmm0

; 71   : 
; 72   :       //float dist2 = rayOrigin.DistanceSq(mCenter);
; 73   : 
; 74   :       *intersect = rayOrigin + V*(v-d);

  00152	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _v$[ebp]
  00157	f3 0f 5c 45 a8	 subss	 xmm0, DWORD PTR _d$1[ebp]
  0015c	51		 push	 ecx
  0015d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00162	8d 45 d8	 lea	 eax, DWORD PTR $T5[ebp]
  00165	50		 push	 eax
  00166	8d 4d f0	 lea	 ecx, DWORD PTR _V$[ebp]
  00169	e8 00 00 00 00	 call	 ??DVector3d@@QBE?AV0@M@Z ; Vector3d::operator*
  0016e	50		 push	 eax
  0016f	8d 45 cc	 lea	 eax, DWORD PTR $T4[ebp]
  00172	50		 push	 eax
  00173	8b 4d 08	 mov	 ecx, DWORD PTR _rayOrigin$[ebp]
  00176	e8 00 00 00 00	 call	 ??HVector3d@@QBE?AV0@ABV0@@Z ; Vector3d::operator+
  0017b	89 45 c0	 mov	 DWORD PTR _A$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 57   : 	{ x=A.x; y=A.y; z=A.z;

  0017e	8b 45 10	 mov	 eax, DWORD PTR _intersect$[ebp]
  00181	8b 4d c0	 mov	 ecx, DWORD PTR _A$[ebp]
  00184	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00186	89 08		 mov	 DWORD PTR [eax], ecx
  00188	8b 45 10	 mov	 eax, DWORD PTR _intersect$[ebp]
  0018b	8b 4d c0	 mov	 ecx, DWORD PTR _A$[ebp]
  0018e	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00191	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00194	8b 45 10	 mov	 eax, DWORD PTR _intersect$[ebp]
  00197	8b 4d c0	 mov	 ecx, DWORD PTR _A$[ebp]
  0019a	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0019d	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN44@RayInterse:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 78   : 		return true;

  001a0	b0 01		 mov	 al, 1
  001a2	eb 02		 jmp	 SHORT $LN1@RayInterse
$LN3@RayInterse:

; 79   : 	}
; 80   : 	return false;

  001a4	32 c0		 xor	 al, al
$LN1@RayInterse:

; 81   : }

  001a6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a9	33 cd		 xor	 ecx, ebp
  001ab	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001b0	c9		 leave
  001b1	c2 0c 00	 ret	 12			; 0000000cH
?RayIntersection@Sphere@@QAE_NABVVector3d@@0PAV2@@Z ENDP ; Sphere::RayIntersection
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
;	COMDAT ?RayIntersection@Sphere@@QAE_NABVVector3d@@0MPAV2@@Z
_TEXT	SEGMENT
_d$1 = -28						; size = 4
_this$ = -24						; size = 4
_hit$ = -17						; size = 1
_sect$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_rayOrigin$ = 8						; size = 4
_V$ = 12						; size = 4
_distance$ = 16						; size = 4
_intersect$ = 20					; size = 4
?RayIntersection@Sphere@@QAE_NABVVector3d@@0MPAV2@@Z PROC ; Sphere::RayIntersection, COMDAT
; _this$ = ecx

; 88   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :   Vector3d sect;
; 90   :   bool hit = RayIntersectionInFront(rayOrigin,V,&sect);

  00013	8d 45 f0	 lea	 eax, DWORD PTR _sect$[ebp]
  00016	50		 push	 eax
  00017	ff 75 0c	 push	 DWORD PTR _V$[ebp]
  0001a	ff 75 08	 push	 DWORD PTR _rayOrigin$[ebp]
  0001d	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?RayIntersectionInFront@Sphere@@QAE_NABVVector3d@@0PAV2@@Z ; Sphere::RayIntersectionInFront
  00025	88 45 ef	 mov	 BYTE PTR _hit$[ebp], al

; 91   : 
; 92   :   if ( hit )

  00028	0f b6 45 ef	 movzx	 eax, BYTE PTR _hit$[ebp]
  0002c	85 c0		 test	 eax, eax
  0002e	74 57		 je	 SHORT $LN2@RayInterse

; 93   :   {
; 94   :     float d = rayOrigin.DistanceSq(sect);

  00030	8d 45 f0	 lea	 eax, DWORD PTR _sect$[ebp]
  00033	50		 push	 eax
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _rayOrigin$[ebp]
  00037	e8 00 00 00 00	 call	 ?DistanceSq@Vector3d@@QBEMABV1@@Z ; Vector3d::DistanceSq
  0003c	d9 5d e4	 fstp	 DWORD PTR _d$1[ebp]

; 95   :     if ( d > (distance*distance) ) return false;

  0003f	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _distance$[ebp]
  00044	f3 0f 59 45 10	 mulss	 xmm0, DWORD PTR _distance$[ebp]
  00049	f3 0f 10 4d e4	 movss	 xmm1, DWORD PTR _d$1[ebp]
  0004e	0f 2f c8	 comiss	 xmm1, xmm0
  00051	76 04		 jbe	 SHORT $LN3@RayInterse
  00053	32 c0		 xor	 al, al
  00055	eb 32		 jmp	 SHORT $LN1@RayInterse
$LN3@RayInterse:

; 96   :     if ( intersect ) *intersect = sect;

  00057	83 7d 14 00	 cmp	 DWORD PTR _intersect$[ebp], 0
  0005b	74 26		 je	 SHORT $LN12@RayInterse
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 57   : 	{ x=A.x; y=A.y; z=A.z;

  0005d	8b 45 14	 mov	 eax, DWORD PTR _intersect$[ebp]
  00060	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _sect$[ebp]
  00065	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00069	8b 45 14	 mov	 eax, DWORD PTR _intersect$[ebp]
  0006c	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _sect$[ebp+4]
  00071	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
  00076	8b 45 14	 mov	 eax, DWORD PTR _intersect$[ebp]
  00079	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _sect$[ebp+8]
  0007e	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
$LN12@RayInterse:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 97   :     return true;

  00083	b0 01		 mov	 al, 1
  00085	eb 02		 jmp	 SHORT $LN1@RayInterse
$LN2@RayInterse:

; 98   :   }
; 99   :   return false;

  00087	32 c0		 xor	 al, al
$LN1@RayInterse:

; 100  : }

  00089	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0008c	33 cd		 xor	 ecx, ebp
  0008e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00093	c9		 leave
  00094	c2 10 00	 ret	 16			; 00000010H
?RayIntersection@Sphere@@QAE_NABVVector3d@@0MPAV2@@Z ENDP ; Sphere::RayIntersection
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
;	COMDAT ?Compute@Sphere@@QAEXABVSphereInterface@@@Z
_TEXT	SEGMENT
_cz$1 = -300						; size = 4
$T2 = -296						; size = 4
$T3 = -292						; size = 4
$T4 = -288						; size = 4
$T5 = -284						; size = 4
$T6 = -280						; size = 4
$T7 = -276						; size = 4
$T8 = -272						; size = 4
$T9 = -268						; size = 4
$T10 = -264						; size = 4
$T11 = -260						; size = 4
_cy$12 = -256						; size = 4
_cx$13 = -252						; size = 4
$T14 = -248						; size = 4
$T15 = -244						; size = 4
$T16 = -240						; size = 4
$T17 = -236						; size = 4
$T18 = -232						; size = 4
$T19 = -228						; size = 4
$T20 = -224						; size = 4
$T21 = -220						; size = 4
$T22 = -216						; size = 4
$T23 = -212						; size = 4
$T24 = -208						; size = 4
$T25 = -204						; size = 4
$T26 = -200						; size = 4
$T27 = -196						; size = 4
$T28 = -192						; size = 4
$T29 = -188						; size = 4
$T30 = -184						; size = 4
$T31 = -180						; size = 4
$T32 = -176						; size = 4
$T33 = -172						; size = 4
$T34 = -168						; size = 4
$T35 = -164						; size = 4
$T36 = -160						; size = 4
$T37 = -156						; size = 4
_zspan$ = -152						; size = 4
_xspan$ = -148						; size = 4
$T38 = -144						; size = 4
$T39 = -140						; size = 4
$T40 = -136						; size = 4
$T41 = -132						; size = 4
$T42 = -128						; size = 4
$T43 = -124						; size = 4
$T44 = -120						; size = 4
$T45 = -116						; size = 4
$T46 = -112						; size = 4
$T47 = -108						; size = 4
$T48 = -104						; size = 4
$T49 = -100						; size = 4
$T50 = -96						; size = 4
$T51 = -92						; size = 4
$T52 = -88						; size = 4
$T53 = -84						; size = 4
$T54 = -80						; size = 4
$T55 = -76						; size = 4
$T56 = -72						; size = 4
$T57 = -68						; size = 4
_old_to_p_sq$58 = -64					; size = 4
_count$ = -60						; size = 4
_yspan$ = -56						; size = 4
_this$ = -52						; size = 4
_recip$59 = -48						; size = 4
_old_to_new$60 = -44					; size = 4
_old_to_p$61 = -40					; size = 4
_maxspan$ = -36						; size = 4
_j$62 = -32						; size = 4
_i$63 = -28						; size = 4
_dz$ = -24						; size = 4
_dy$ = -20						; size = 4
_dx$ = -16						; size = 4
_this$ = -12						; size = 4
_caller_p$64 = -8					; size = 12
_dia1$ = 4						; size = 12
_zmax$ = 16						; size = 12
_zmin$ = 28						; size = 12
_ymax$ = 40						; size = 12
_ymin$ = 52						; size = 12
_xmax$ = 64						; size = 12
_xmin$ = 76						; size = 12
_dia2$ = 88						; size = 12
_caller_p$65 = 100					; size = 12
__$ArrayPad$ = 112					; size = 4
_source$ = 124						; size = 4
?Compute@Sphere@@QAEXABVSphereInterface@@@Z PROC	; Sphere::Compute, COMDAT
; _this$ = ecx

; 146  : {

  00000	55		 push	 ebp
  00001	8d 6c 24 8c	 lea	 ebp, DWORD PTR [esp-116]
  00005	81 ec a0 01 00
	00		 sub	 esp, 416		; 000001a0H
  0000b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00010	33 c5		 xor	 eax, ebp
  00012	89 45 70	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00015	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 107  : 		x = a;

  00018	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4cbebc20
  00020	f3 0f 11 45 4c	 movss	 DWORD PTR _xmin$[ebp], xmm0

; 108  : 		y = b;

  00025	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4cbebc20
  0002d	f3 0f 11 45 50	 movss	 DWORD PTR _xmin$[ebp+4], xmm0

; 109  : 		z = c;

  00032	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4cbebc20
  0003a	f3 0f 11 45 54	 movss	 DWORD PTR _xmin$[ebp+8], xmm0

; 107  : 		x = a;

  0003f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@ccbebc20
  00047	f3 0f 11 45 40	 movss	 DWORD PTR _xmax$[ebp], xmm0

; 108  : 		y = b;

  0004c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@ccbebc20
  00054	f3 0f 11 45 44	 movss	 DWORD PTR _xmax$[ebp+4], xmm0

; 109  : 		z = c;

  00059	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@ccbebc20
  00061	f3 0f 11 45 48	 movss	 DWORD PTR _xmax$[ebp+8], xmm0

; 107  : 		x = a;

  00066	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4cbebc20
  0006e	f3 0f 11 45 34	 movss	 DWORD PTR _ymin$[ebp], xmm0

; 108  : 		y = b;

  00073	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4cbebc20
  0007b	f3 0f 11 45 38	 movss	 DWORD PTR _ymin$[ebp+4], xmm0

; 109  : 		z = c;

  00080	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4cbebc20
  00088	f3 0f 11 45 3c	 movss	 DWORD PTR _ymin$[ebp+8], xmm0

; 107  : 		x = a;

  0008d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@ccbebc20
  00095	f3 0f 11 45 28	 movss	 DWORD PTR _ymax$[ebp], xmm0

; 108  : 		y = b;

  0009a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@ccbebc20
  000a2	f3 0f 11 45 2c	 movss	 DWORD PTR _ymax$[ebp+4], xmm0

; 109  : 		z = c;

  000a7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@ccbebc20
  000af	f3 0f 11 45 30	 movss	 DWORD PTR _ymax$[ebp+8], xmm0

; 107  : 		x = a;

  000b4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4cbebc20
  000bc	f3 0f 11 45 1c	 movss	 DWORD PTR _zmin$[ebp], xmm0

; 108  : 		y = b;

  000c1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4cbebc20
  000c9	f3 0f 11 45 20	 movss	 DWORD PTR _zmin$[ebp+4], xmm0

; 109  : 		z = c;

  000ce	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4cbebc20
  000d6	f3 0f 11 45 24	 movss	 DWORD PTR _zmin$[ebp+8], xmm0

; 107  : 		x = a;

  000db	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@ccbebc20
  000e3	f3 0f 11 45 10	 movss	 DWORD PTR _zmax$[ebp], xmm0

; 108  : 		y = b;

  000e8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@ccbebc20
  000f0	f3 0f 11 45 14	 movss	 DWORD PTR _zmax$[ebp+4], xmm0

; 109  : 		z = c;

  000f5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@ccbebc20
  000fd	f3 0f 11 45 18	 movss	 DWORD PTR _zmax$[ebp+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 158  :   int count = source.GetVertexCount();

  00102	8b 45 7c	 mov	 eax, DWORD PTR _source$[ebp]
  00105	8b 00		 mov	 eax, DWORD PTR [eax]
  00107	8b 4d 7c	 mov	 ecx, DWORD PTR _source$[ebp]
  0010a	ff 50 04	 call	 DWORD PTR [eax+4]
  0010d	89 45 c4	 mov	 DWORD PTR _count$[ebp], eax

; 159  : 
; 160  :   for (int i=0; i<count; i++)

  00110	83 65 e4 00	 and	 DWORD PTR _i$63[ebp], 0
  00114	eb 07		 jmp	 SHORT $LN4@Compute
$LN2@Compute:
  00116	8b 45 e4	 mov	 eax, DWORD PTR _i$63[ebp]
  00119	40		 inc	 eax
  0011a	89 45 e4	 mov	 DWORD PTR _i$63[ebp], eax
$LN4@Compute:
  0011d	8b 45 e4	 mov	 eax, DWORD PTR _i$63[ebp]
  00120	3b 45 c4	 cmp	 eax, DWORD PTR _count$[ebp]
  00123	0f 8d c1 01 00
	00		 jge	 $LN3@Compute

; 161  : 	{
; 162  :     Vector3d caller_p;
; 163  :     source.GetVertex(i,caller_p);

  00129	8d 45 64	 lea	 eax, DWORD PTR _caller_p$65[ebp]
  0012c	50		 push	 eax
  0012d	ff 75 e4	 push	 DWORD PTR _i$63[ebp]
  00130	8b 45 7c	 mov	 eax, DWORD PTR _source$[ebp]
  00133	8b 00		 mov	 eax, DWORD PTR [eax]
  00135	8b 4d 7c	 mov	 ecx, DWORD PTR _source$[ebp]
  00138	ff 50 08	 call	 DWORD PTR [eax+8]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 97   : 	float GetX(void) const { return x; };

  0013b	f3 0f 10 45 64	 movss	 xmm0, DWORD PTR _caller_p$65[ebp]
  00140	f3 0f 11 85 f8
	fe ff ff	 movss	 DWORD PTR $T10[ebp], xmm0
  00148	f3 0f 10 45 4c	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  0014d	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR $T21[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 165  :   	if (caller_p.GetX()<xmin.GetX()) 	xmin = caller_p; /* New xminimum point */

  00155	f3 0f 10 85 24
	ff ff ff	 movss	 xmm0, DWORD PTR $T21[ebp]
  0015d	0f 2f 85 f8 fe
	ff ff		 comiss	 xmm0, DWORD PTR $T10[ebp]
  00164	76 1e		 jbe	 SHORT $LN70@Compute
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 57   : 	{ x=A.x; y=A.y; z=A.z;

  00166	f3 0f 10 45 64	 movss	 xmm0, DWORD PTR _caller_p$65[ebp]
  0016b	f3 0f 11 45 4c	 movss	 DWORD PTR _xmin$[ebp], xmm0
  00170	f3 0f 10 45 68	 movss	 xmm0, DWORD PTR _caller_p$65[ebp+4]
  00175	f3 0f 11 45 50	 movss	 DWORD PTR _xmin$[ebp+4], xmm0
  0017a	f3 0f 10 45 6c	 movss	 xmm0, DWORD PTR _caller_p$65[ebp+8]
  0017f	f3 0f 11 45 54	 movss	 DWORD PTR _xmin$[ebp+8], xmm0
$LN70@Compute:

; 97   : 	float GetX(void) const { return x; };

  00184	f3 0f 10 45 64	 movss	 xmm0, DWORD PTR _caller_p$65[ebp]
  00189	f3 0f 11 85 f4
	fe ff ff	 movss	 DWORD PTR $T9[ebp], xmm0
  00191	f3 0f 10 45 40	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  00196	f3 0f 11 85 f0
	fe ff ff	 movss	 DWORD PTR $T8[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 166  :   	if (caller_p.GetX()>xmax.GetX())	xmax = caller_p;

  0019e	f3 0f 10 85 f4
	fe ff ff	 movss	 xmm0, DWORD PTR $T9[ebp]
  001a6	0f 2f 85 f0 fe
	ff ff		 comiss	 xmm0, DWORD PTR $T8[ebp]
  001ad	76 1e		 jbe	 SHORT $LN76@Compute
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 57   : 	{ x=A.x; y=A.y; z=A.z;

  001af	f3 0f 10 45 64	 movss	 xmm0, DWORD PTR _caller_p$65[ebp]
  001b4	f3 0f 11 45 40	 movss	 DWORD PTR _xmax$[ebp], xmm0
  001b9	f3 0f 10 45 68	 movss	 xmm0, DWORD PTR _caller_p$65[ebp+4]
  001be	f3 0f 11 45 44	 movss	 DWORD PTR _xmax$[ebp+4], xmm0
  001c3	f3 0f 10 45 6c	 movss	 xmm0, DWORD PTR _caller_p$65[ebp+8]
  001c8	f3 0f 11 45 48	 movss	 DWORD PTR _xmax$[ebp+8], xmm0
$LN76@Compute:

; 98   : 	float GetY(void) const { return y; };

  001cd	f3 0f 10 45 68	 movss	 xmm0, DWORD PTR _caller_p$65[ebp+4]
  001d2	f3 0f 11 85 e8
	fe ff ff	 movss	 DWORD PTR $T6[ebp], xmm0
  001da	f3 0f 10 45 38	 movss	 xmm0, DWORD PTR _ymin$[ebp+4]
  001df	f3 0f 11 85 ec
	fe ff ff	 movss	 DWORD PTR $T7[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 167  :   	if (caller_p.GetY()<ymin.GetY())	ymin = caller_p;

  001e7	f3 0f 10 85 ec
	fe ff ff	 movss	 xmm0, DWORD PTR $T7[ebp]
  001ef	0f 2f 85 e8 fe
	ff ff		 comiss	 xmm0, DWORD PTR $T6[ebp]
  001f6	76 1e		 jbe	 SHORT $LN82@Compute
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 57   : 	{ x=A.x; y=A.y; z=A.z;

  001f8	f3 0f 10 45 64	 movss	 xmm0, DWORD PTR _caller_p$65[ebp]
  001fd	f3 0f 11 45 34	 movss	 DWORD PTR _ymin$[ebp], xmm0
  00202	f3 0f 10 45 68	 movss	 xmm0, DWORD PTR _caller_p$65[ebp+4]
  00207	f3 0f 11 45 38	 movss	 DWORD PTR _ymin$[ebp+4], xmm0
  0020c	f3 0f 10 45 6c	 movss	 xmm0, DWORD PTR _caller_p$65[ebp+8]
  00211	f3 0f 11 45 3c	 movss	 DWORD PTR _ymin$[ebp+8], xmm0
$LN82@Compute:

; 98   : 	float GetY(void) const { return y; };

  00216	f3 0f 10 45 68	 movss	 xmm0, DWORD PTR _caller_p$65[ebp+4]
  0021b	f3 0f 11 85 e4
	fe ff ff	 movss	 DWORD PTR $T5[ebp], xmm0
  00223	f3 0f 10 45 2c	 movss	 xmm0, DWORD PTR _ymax$[ebp+4]
  00228	f3 0f 11 85 e0
	fe ff ff	 movss	 DWORD PTR $T4[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 168  :   	if (caller_p.GetY()>ymax.GetY())	ymax = caller_p;

  00230	f3 0f 10 85 e4
	fe ff ff	 movss	 xmm0, DWORD PTR $T5[ebp]
  00238	0f 2f 85 e0 fe
	ff ff		 comiss	 xmm0, DWORD PTR $T4[ebp]
  0023f	76 1e		 jbe	 SHORT $LN88@Compute
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 57   : 	{ x=A.x; y=A.y; z=A.z;

  00241	f3 0f 10 45 64	 movss	 xmm0, DWORD PTR _caller_p$65[ebp]
  00246	f3 0f 11 45 28	 movss	 DWORD PTR _ymax$[ebp], xmm0
  0024b	f3 0f 10 45 68	 movss	 xmm0, DWORD PTR _caller_p$65[ebp+4]
  00250	f3 0f 11 45 2c	 movss	 DWORD PTR _ymax$[ebp+4], xmm0
  00255	f3 0f 10 45 6c	 movss	 xmm0, DWORD PTR _caller_p$65[ebp+8]
  0025a	f3 0f 11 45 30	 movss	 DWORD PTR _ymax$[ebp+8], xmm0
$LN88@Compute:

; 99   : 	float GetZ(void) const { return z; };

  0025f	f3 0f 10 45 6c	 movss	 xmm0, DWORD PTR _caller_p$65[ebp+8]
  00264	f3 0f 11 85 d8
	fe ff ff	 movss	 DWORD PTR $T2[ebp], xmm0
  0026c	f3 0f 10 45 24	 movss	 xmm0, DWORD PTR _zmin$[ebp+8]
  00271	f3 0f 11 85 dc
	fe ff ff	 movss	 DWORD PTR $T3[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 169  :   	if (caller_p.GetZ()<zmin.GetZ())	zmin = caller_p;

  00279	f3 0f 10 85 dc
	fe ff ff	 movss	 xmm0, DWORD PTR $T3[ebp]
  00281	0f 2f 85 d8 fe
	ff ff		 comiss	 xmm0, DWORD PTR $T2[ebp]
  00288	76 1e		 jbe	 SHORT $LN94@Compute
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 57   : 	{ x=A.x; y=A.y; z=A.z;

  0028a	f3 0f 10 45 64	 movss	 xmm0, DWORD PTR _caller_p$65[ebp]
  0028f	f3 0f 11 45 1c	 movss	 DWORD PTR _zmin$[ebp], xmm0
  00294	f3 0f 10 45 68	 movss	 xmm0, DWORD PTR _caller_p$65[ebp+4]
  00299	f3 0f 11 45 20	 movss	 DWORD PTR _zmin$[ebp+4], xmm0
  0029e	f3 0f 10 45 6c	 movss	 xmm0, DWORD PTR _caller_p$65[ebp+8]
  002a3	f3 0f 11 45 24	 movss	 DWORD PTR _zmin$[ebp+8], xmm0
$LN94@Compute:

; 99   : 	float GetZ(void) const { return z; };

  002a8	f3 0f 10 45 6c	 movss	 xmm0, DWORD PTR _caller_p$65[ebp+8]
  002ad	f3 0f 11 45 bc	 movss	 DWORD PTR $T57[ebp], xmm0
  002b2	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _zmax$[ebp+8]
  002b7	f3 0f 11 45 b8	 movss	 DWORD PTR $T56[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 170  :   	if (caller_p.GetZ()>zmax.GetZ()) zmax = caller_p;

  002bc	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR $T57[ebp]
  002c1	0f 2f 45 b8	 comiss	 xmm0, DWORD PTR $T56[ebp]
  002c5	76 1e		 jbe	 SHORT $LN100@Compute
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 57   : 	{ x=A.x; y=A.y; z=A.z;

  002c7	f3 0f 10 45 64	 movss	 xmm0, DWORD PTR _caller_p$65[ebp]
  002cc	f3 0f 11 45 10	 movss	 DWORD PTR _zmax$[ebp], xmm0
  002d1	f3 0f 10 45 68	 movss	 xmm0, DWORD PTR _caller_p$65[ebp+4]
  002d6	f3 0f 11 45 14	 movss	 DWORD PTR _zmax$[ebp+4], xmm0
  002db	f3 0f 10 45 6c	 movss	 xmm0, DWORD PTR _caller_p$65[ebp+8]
  002e0	f3 0f 11 45 18	 movss	 DWORD PTR _zmax$[ebp+8], xmm0
$LN100@Compute:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 171  : 	}

  002e5	e9 2c fe ff ff	 jmp	 $LN2@Compute
$LN3@Compute:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 97   : 	float GetX(void) const { return x; };

  002ea	f3 0f 10 45 40	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  002ef	f3 0f 11 45 b4	 movss	 DWORD PTR $T55[ebp], xmm0
  002f4	f3 0f 10 45 4c	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  002f9	f3 0f 11 45 b0	 movss	 DWORD PTR $T54[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 174  :   float dx = xmax.GetX() - xmin.GetX();

  002fe	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR $T55[ebp]
  00303	f3 0f 5c 45 b0	 subss	 xmm0, DWORD PTR $T54[ebp]
  00308	f3 0f 11 45 f0	 movss	 DWORD PTR _dx$[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 98   : 	float GetY(void) const { return y; };

  0030d	f3 0f 10 45 44	 movss	 xmm0, DWORD PTR _xmax$[ebp+4]
  00312	f3 0f 11 45 ac	 movss	 DWORD PTR $T53[ebp], xmm0
  00317	f3 0f 10 45 50	 movss	 xmm0, DWORD PTR _xmin$[ebp+4]
  0031c	f3 0f 11 45 a8	 movss	 DWORD PTR $T52[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 175  :   float dy = xmax.GetY() - xmin.GetY();

  00321	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR $T53[ebp]
  00326	f3 0f 5c 45 a8	 subss	 xmm0, DWORD PTR $T52[ebp]
  0032b	f3 0f 11 45 ec	 movss	 DWORD PTR _dy$[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 99   : 	float GetZ(void) const { return z; };

  00330	f3 0f 10 45 48	 movss	 xmm0, DWORD PTR _xmax$[ebp+8]
  00335	f3 0f 11 45 a4	 movss	 DWORD PTR $T51[ebp], xmm0
  0033a	f3 0f 10 45 54	 movss	 xmm0, DWORD PTR _xmin$[ebp+8]
  0033f	f3 0f 11 45 a0	 movss	 DWORD PTR $T50[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 176  :   float dz = xmax.GetZ() - xmin.GetZ();

  00344	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR $T51[ebp]
  00349	f3 0f 5c 45 a0	 subss	 xmm0, DWORD PTR $T50[ebp]
  0034e	f3 0f 11 45 e8	 movss	 DWORD PTR _dz$[ebp], xmm0

; 177  :   float xspan = dx*dx + dy*dy + dz*dz;

  00353	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _dx$[ebp]
  00358	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _dx$[ebp]
  0035d	f3 0f 10 4d ec	 movss	 xmm1, DWORD PTR _dy$[ebp]
  00362	f3 0f 59 4d ec	 mulss	 xmm1, DWORD PTR _dy$[ebp]
  00367	f3 0f 58 c1	 addss	 xmm0, xmm1
  0036b	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _dz$[ebp]
  00370	f3 0f 59 4d e8	 mulss	 xmm1, DWORD PTR _dz$[ebp]
  00375	f3 0f 58 c1	 addss	 xmm0, xmm1
  00379	f3 0f 11 85 6c
	ff ff ff	 movss	 DWORD PTR _xspan$[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 97   : 	float GetX(void) const { return x; };

  00381	f3 0f 10 45 28	 movss	 xmm0, DWORD PTR _ymax$[ebp]
  00386	f3 0f 11 45 9c	 movss	 DWORD PTR $T49[ebp], xmm0
  0038b	f3 0f 10 45 34	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  00390	f3 0f 11 45 98	 movss	 DWORD PTR $T48[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 180  :   dx = ymax.GetX() - ymin.GetX();

  00395	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR $T49[ebp]
  0039a	f3 0f 5c 45 98	 subss	 xmm0, DWORD PTR $T48[ebp]
  0039f	f3 0f 11 45 f0	 movss	 DWORD PTR _dx$[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 98   : 	float GetY(void) const { return y; };

  003a4	f3 0f 10 45 2c	 movss	 xmm0, DWORD PTR _ymax$[ebp+4]
  003a9	f3 0f 11 45 94	 movss	 DWORD PTR $T47[ebp], xmm0
  003ae	f3 0f 10 45 38	 movss	 xmm0, DWORD PTR _ymin$[ebp+4]
  003b3	f3 0f 11 45 90	 movss	 DWORD PTR $T46[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 181  :   dy = ymax.GetY() - ymin.GetY();

  003b8	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR $T47[ebp]
  003bd	f3 0f 5c 45 90	 subss	 xmm0, DWORD PTR $T46[ebp]
  003c2	f3 0f 11 45 ec	 movss	 DWORD PTR _dy$[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 99   : 	float GetZ(void) const { return z; };

  003c7	f3 0f 10 45 30	 movss	 xmm0, DWORD PTR _ymax$[ebp+8]
  003cc	f3 0f 11 45 8c	 movss	 DWORD PTR $T45[ebp], xmm0
  003d1	f3 0f 10 45 3c	 movss	 xmm0, DWORD PTR _ymin$[ebp+8]
  003d6	f3 0f 11 45 88	 movss	 DWORD PTR $T44[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 182  :   dz = ymax.GetZ() - ymin.GetZ();

  003db	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR $T45[ebp]
  003e0	f3 0f 5c 45 88	 subss	 xmm0, DWORD PTR $T44[ebp]
  003e5	f3 0f 11 45 e8	 movss	 DWORD PTR _dz$[ebp], xmm0

; 183  :   float yspan = dx*dx + dy*dy + dz*dz;

  003ea	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _dx$[ebp]
  003ef	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _dx$[ebp]
  003f4	f3 0f 10 4d ec	 movss	 xmm1, DWORD PTR _dy$[ebp]
  003f9	f3 0f 59 4d ec	 mulss	 xmm1, DWORD PTR _dy$[ebp]
  003fe	f3 0f 58 c1	 addss	 xmm0, xmm1
  00402	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _dz$[ebp]
  00407	f3 0f 59 4d e8	 mulss	 xmm1, DWORD PTR _dz$[ebp]
  0040c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00410	f3 0f 11 45 c8	 movss	 DWORD PTR _yspan$[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 97   : 	float GetX(void) const { return x; };

  00415	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _zmax$[ebp]
  0041a	f3 0f 11 45 84	 movss	 DWORD PTR $T43[ebp], xmm0
  0041f	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _zmin$[ebp]
  00424	f3 0f 11 45 80	 movss	 DWORD PTR $T42[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 185  :   dx = zmax.GetX() - zmin.GetX();

  00429	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR $T43[ebp]
  0042e	f3 0f 5c 45 80	 subss	 xmm0, DWORD PTR $T42[ebp]
  00433	f3 0f 11 45 f0	 movss	 DWORD PTR _dx$[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 98   : 	float GetY(void) const { return y; };

  00438	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _zmax$[ebp+4]
  0043d	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR $T41[ebp], xmm0
  00445	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _zmin$[ebp+4]
  0044a	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR $T40[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 186  :   dy = zmax.GetY() - zmin.GetY();

  00452	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR $T41[ebp]
  0045a	f3 0f 5c 85 78
	ff ff ff	 subss	 xmm0, DWORD PTR $T40[ebp]
  00462	f3 0f 11 45 ec	 movss	 DWORD PTR _dy$[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 99   : 	float GetZ(void) const { return z; };

  00467	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _zmax$[ebp+8]
  0046c	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR $T39[ebp], xmm0
  00474	f3 0f 10 45 24	 movss	 xmm0, DWORD PTR _zmin$[ebp+8]
  00479	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR $T38[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 187  :   dz = zmax.GetZ() - zmin.GetZ();

  00481	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR $T39[ebp]
  00489	f3 0f 5c 85 70
	ff ff ff	 subss	 xmm0, DWORD PTR $T38[ebp]
  00491	f3 0f 11 45 e8	 movss	 DWORD PTR _dz$[ebp], xmm0

; 188  :   float zspan = dx*dx + dy*dy + dz*dz;

  00496	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _dx$[ebp]
  0049b	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _dx$[ebp]
  004a0	f3 0f 10 4d ec	 movss	 xmm1, DWORD PTR _dy$[ebp]
  004a5	f3 0f 59 4d ec	 mulss	 xmm1, DWORD PTR _dy$[ebp]
  004aa	f3 0f 58 c1	 addss	 xmm0, xmm1
  004ae	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _dz$[ebp]
  004b3	f3 0f 59 4d e8	 mulss	 xmm1, DWORD PTR _dz$[ebp]
  004b8	f3 0f 58 c1	 addss	 xmm0, xmm1
  004bc	f3 0f 11 85 68
	ff ff ff	 movss	 DWORD PTR _zspan$[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 57   : 	{ x=A.x; y=A.y; z=A.z;

  004c4	f3 0f 10 45 4c	 movss	 xmm0, DWORD PTR _xmin$[ebp]
  004c9	f3 0f 11 45 04	 movss	 DWORD PTR _dia1$[ebp], xmm0
  004ce	f3 0f 10 45 50	 movss	 xmm0, DWORD PTR _xmin$[ebp+4]
  004d3	f3 0f 11 45 08	 movss	 DWORD PTR _dia1$[ebp+4], xmm0
  004d8	f3 0f 10 45 54	 movss	 xmm0, DWORD PTR _xmin$[ebp+8]
  004dd	f3 0f 11 45 0c	 movss	 DWORD PTR _dia1$[ebp+8], xmm0
  004e2	f3 0f 10 45 40	 movss	 xmm0, DWORD PTR _xmax$[ebp]
  004e7	f3 0f 11 45 58	 movss	 DWORD PTR _dia2$[ebp], xmm0
  004ec	f3 0f 10 45 44	 movss	 xmm0, DWORD PTR _xmax$[ebp+4]
  004f1	f3 0f 11 45 5c	 movss	 DWORD PTR _dia2$[ebp+4], xmm0
  004f6	f3 0f 10 45 48	 movss	 xmm0, DWORD PTR _xmax$[ebp+8]
  004fb	f3 0f 11 45 60	 movss	 DWORD PTR _dia2$[ebp+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 193  :   float maxspan = xspan;

  00500	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _xspan$[ebp]
  00508	f3 0f 11 45 dc	 movss	 DWORD PTR _maxspan$[ebp], xmm0

; 194  : 
; 195  :   if (yspan>maxspan)

  0050d	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _yspan$[ebp]
  00512	0f 2f 45 dc	 comiss	 xmm0, DWORD PTR _maxspan$[ebp]
  00516	76 46		 jbe	 SHORT $LN144@Compute

; 196  : 	{
; 197  : 	  maxspan = yspan;

  00518	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _yspan$[ebp]
  0051d	f3 0f 11 45 dc	 movss	 DWORD PTR _maxspan$[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 57   : 	{ x=A.x; y=A.y; z=A.z;

  00522	f3 0f 10 45 34	 movss	 xmm0, DWORD PTR _ymin$[ebp]
  00527	f3 0f 11 45 04	 movss	 DWORD PTR _dia1$[ebp], xmm0
  0052c	f3 0f 10 45 38	 movss	 xmm0, DWORD PTR _ymin$[ebp+4]
  00531	f3 0f 11 45 08	 movss	 DWORD PTR _dia1$[ebp+4], xmm0
  00536	f3 0f 10 45 3c	 movss	 xmm0, DWORD PTR _ymin$[ebp+8]
  0053b	f3 0f 11 45 0c	 movss	 DWORD PTR _dia1$[ebp+8], xmm0
  00540	f3 0f 10 45 28	 movss	 xmm0, DWORD PTR _ymax$[ebp]
  00545	f3 0f 11 45 58	 movss	 DWORD PTR _dia2$[ebp], xmm0
  0054a	f3 0f 10 45 2c	 movss	 xmm0, DWORD PTR _ymax$[ebp+4]
  0054f	f3 0f 11 45 5c	 movss	 DWORD PTR _dia2$[ebp+4], xmm0
  00554	f3 0f 10 45 30	 movss	 xmm0, DWORD PTR _ymax$[ebp+8]
  00559	f3 0f 11 45 60	 movss	 DWORD PTR _dia2$[ebp+8], xmm0
$LN144@Compute:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 202  :   if (zspan>maxspan)

  0055e	f3 0f 10 85 68
	ff ff ff	 movss	 xmm0, DWORD PTR _zspan$[ebp]
  00566	0f 2f 45 dc	 comiss	 xmm0, DWORD PTR _maxspan$[ebp]
  0056a	76 3c		 jbe	 SHORT $LN148@Compute
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 57   : 	{ x=A.x; y=A.y; z=A.z;

  0056c	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _zmin$[ebp]
  00571	f3 0f 11 45 04	 movss	 DWORD PTR _dia1$[ebp], xmm0
  00576	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _zmin$[ebp+4]
  0057b	f3 0f 11 45 08	 movss	 DWORD PTR _dia1$[ebp+4], xmm0
  00580	f3 0f 10 45 24	 movss	 xmm0, DWORD PTR _zmin$[ebp+8]
  00585	f3 0f 11 45 0c	 movss	 DWORD PTR _dia1$[ebp+8], xmm0
  0058a	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _zmax$[ebp]
  0058f	f3 0f 11 45 58	 movss	 DWORD PTR _dia2$[ebp], xmm0
  00594	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _zmax$[ebp+4]
  00599	f3 0f 11 45 5c	 movss	 DWORD PTR _dia2$[ebp+4], xmm0
  0059e	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _zmax$[ebp+8]
  005a3	f3 0f 11 45 60	 movss	 DWORD PTR _dia2$[ebp+8], xmm0
$LN148@Compute:

; 97   : 	float GetX(void) const { return x; };

  005a8	f3 0f 10 45 04	 movss	 xmm0, DWORD PTR _dia1$[ebp]
  005ad	f3 0f 11 85 64
	ff ff ff	 movss	 DWORD PTR $T37[ebp], xmm0
  005b5	f3 0f 10 45 58	 movss	 xmm0, DWORD PTR _dia2$[ebp]
  005ba	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR $T36[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 211  :   mCenter.SetX( (dia1.GetX()+dia2.GetX())*0.5f );

  005c2	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR $T37[ebp]
  005ca	f3 0f 58 85 60
	ff ff ff	 addss	 xmm0, DWORD PTR $T36[ebp]
  005d2	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 101  : 	void SetX(float t)   { x   = t; };

  005da	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  005dd	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 98   : 	float GetY(void) const { return y; };

  005e2	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _dia1$[ebp+4]
  005e7	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR $T35[ebp], xmm0
  005ef	f3 0f 10 45 5c	 movss	 xmm0, DWORD PTR _dia2$[ebp+4]
  005f4	f3 0f 11 85 58
	ff ff ff	 movss	 DWORD PTR $T34[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 212  :   mCenter.SetY( (dia1.GetY()+dia2.GetY())*0.5f );

  005fc	f3 0f 10 85 5c
	ff ff ff	 movss	 xmm0, DWORD PTR $T35[ebp]
  00604	f3 0f 58 85 58
	ff ff ff	 addss	 xmm0, DWORD PTR $T34[ebp]
  0060c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 102  : 	void SetY(float t)   { y   = t; };

  00614	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00617	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 99   : 	float GetZ(void) const { return z; };

  0061c	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _dia1$[ebp+8]
  00621	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR $T33[ebp], xmm0
  00629	f3 0f 10 45 60	 movss	 xmm0, DWORD PTR _dia2$[ebp+8]
  0062e	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR $T32[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 213  :   mCenter.SetZ( (dia1.GetZ()+dia2.GetZ())*0.5f );

  00636	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR $T33[ebp]
  0063e	f3 0f 58 85 50
	ff ff ff	 addss	 xmm0, DWORD PTR $T32[ebp]
  00646	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 103  : 	void SetZ(float t)   { z   = t; };

  0064e	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00651	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 97   : 	float GetX(void) const { return x; };

  00656	f3 0f 10 45 58	 movss	 xmm0, DWORD PTR _dia2$[ebp]
  0065b	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR $T31[ebp], xmm0
  00663	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00666	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0066b	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR $T30[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 215  :   dx = dia2.GetX()-mCenter.GetX(); /* x component of radius vector */

  00673	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR $T31[ebp]
  0067b	f3 0f 5c 85 48
	ff ff ff	 subss	 xmm0, DWORD PTR $T30[ebp]
  00683	f3 0f 11 45 f0	 movss	 DWORD PTR _dx$[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 98   : 	float GetY(void) const { return y; };

  00688	f3 0f 10 45 5c	 movss	 xmm0, DWORD PTR _dia2$[ebp+4]
  0068d	f3 0f 11 85 44
	ff ff ff	 movss	 DWORD PTR $T29[ebp], xmm0
  00695	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00698	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0069d	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR $T28[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 216  :   dy = dia2.GetY()-mCenter.GetY(); /* y component of radius vector */

  006a5	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR $T29[ebp]
  006ad	f3 0f 5c 85 40
	ff ff ff	 subss	 xmm0, DWORD PTR $T28[ebp]
  006b5	f3 0f 11 45 ec	 movss	 DWORD PTR _dy$[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 99   : 	float GetZ(void) const { return z; };

  006ba	f3 0f 10 45 60	 movss	 xmm0, DWORD PTR _dia2$[ebp+8]
  006bf	f3 0f 11 85 3c
	ff ff ff	 movss	 DWORD PTR $T27[ebp], xmm0
  006c7	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  006ca	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  006cf	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR $T26[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 217  :   dz = dia2.GetZ()-mCenter.GetZ(); /* z component of radius vector */

  006d7	f3 0f 10 85 3c
	ff ff ff	 movss	 xmm0, DWORD PTR $T27[ebp]
  006df	f3 0f 5c 85 38
	ff ff ff	 subss	 xmm0, DWORD PTR $T26[ebp]
  006e7	f3 0f 11 45 e8	 movss	 DWORD PTR _dz$[ebp], xmm0

; 218  :   mRadius2 = dx*dx + dy*dy + dz*dz;

  006ec	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _dx$[ebp]
  006f1	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _dx$[ebp]
  006f6	f3 0f 10 4d ec	 movss	 xmm1, DWORD PTR _dy$[ebp]
  006fb	f3 0f 59 4d ec	 mulss	 xmm1, DWORD PTR _dy$[ebp]
  00700	f3 0f 58 c1	 addss	 xmm0, xmm1
  00704	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _dz$[ebp]
  00709	f3 0f 59 4d e8	 mulss	 xmm1, DWORD PTR _dz$[ebp]
  0070e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00712	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00715	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 219  :   mRadius = float(sqrt(mRadius2));

  0071a	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0071d	f3 0f 5a 40 14	 cvtss2sd xmm0, DWORD PTR [eax+20]
  00722	51		 push	 ecx
  00723	51		 push	 ecx
  00724	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00729	e8 00 00 00 00	 call	 _sqrt
  0072e	59		 pop	 ecx
  0072f	59		 pop	 ecx
  00730	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00733	d9 58 10	 fstp	 DWORD PTR [eax+16]

; 220  : 
; 221  :   /* SECOND PASS: increment current sphere */
; 222  : 
; 223  :   for (int j=0; j<count; j++)

  00736	83 65 e0 00	 and	 DWORD PTR _j$62[ebp], 0
  0073a	eb 07		 jmp	 SHORT $LN7@Compute
$LN5@Compute:
  0073c	8b 45 e0	 mov	 eax, DWORD PTR _j$62[ebp]
  0073f	40		 inc	 eax
  00740	89 45 e0	 mov	 DWORD PTR _j$62[ebp], eax
$LN7@Compute:
  00743	8b 45 e0	 mov	 eax, DWORD PTR _j$62[ebp]
  00746	3b 45 c4	 cmp	 eax, DWORD PTR _count$[ebp]
  00749	0f 8d 72 02 00
	00		 jge	 $LN6@Compute

; 224  : 	{
; 225  :     Vector3d caller_p;
; 226  :     source.GetVertex(j,caller_p);

  0074f	8d 45 f8	 lea	 eax, DWORD PTR _caller_p$64[ebp]
  00752	50		 push	 eax
  00753	ff 75 e0	 push	 DWORD PTR _j$62[ebp]
  00756	8b 45 7c	 mov	 eax, DWORD PTR _source$[ebp]
  00759	8b 00		 mov	 eax, DWORD PTR [eax]
  0075b	8b 4d 7c	 mov	 ecx, DWORD PTR _source$[ebp]
  0075e	ff 50 08	 call	 DWORD PTR [eax+8]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 97   : 	float GetX(void) const { return x; };

  00761	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _caller_p$64[ebp]
  00766	f3 0f 11 85 34
	ff ff ff	 movss	 DWORD PTR $T25[ebp], xmm0
  0076e	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00771	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00776	f3 0f 11 85 30
	ff ff ff	 movss	 DWORD PTR $T24[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 227  :   	dx = caller_p.GetX()-mCenter.GetX();

  0077e	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR $T25[ebp]
  00786	f3 0f 5c 85 30
	ff ff ff	 subss	 xmm0, DWORD PTR $T24[ebp]
  0078e	f3 0f 11 45 f0	 movss	 DWORD PTR _dx$[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 98   : 	float GetY(void) const { return y; };

  00793	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _caller_p$64[ebp+4]
  00798	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR $T23[ebp], xmm0
  007a0	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  007a3	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  007a8	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR $T22[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 228  : 	  dy = caller_p.GetY()-mCenter.GetY();

  007b0	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR $T23[ebp]
  007b8	f3 0f 5c 85 28
	ff ff ff	 subss	 xmm0, DWORD PTR $T22[ebp]
  007c0	f3 0f 11 45 ec	 movss	 DWORD PTR _dy$[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 99   : 	float GetZ(void) const { return z; };

  007c5	f3 0f 10 45 00	 movss	 xmm0, DWORD PTR _caller_p$64[ebp+8]
  007ca	f3 0f 11 85 fc
	fe ff ff	 movss	 DWORD PTR $T11[ebp], xmm0
  007d2	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  007d5	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  007da	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR $T20[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 229  :   	dz = caller_p.GetZ()-mCenter.GetZ();

  007e2	f3 0f 10 85 fc
	fe ff ff	 movss	 xmm0, DWORD PTR $T11[ebp]
  007ea	f3 0f 5c 85 20
	ff ff ff	 subss	 xmm0, DWORD PTR $T20[ebp]
  007f2	f3 0f 11 45 e8	 movss	 DWORD PTR _dz$[ebp], xmm0

; 230  : 	  float old_to_p_sq = dx*dx + dy*dy + dz*dz;

  007f7	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _dx$[ebp]
  007fc	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _dx$[ebp]
  00801	f3 0f 10 4d ec	 movss	 xmm1, DWORD PTR _dy$[ebp]
  00806	f3 0f 59 4d ec	 mulss	 xmm1, DWORD PTR _dy$[ebp]
  0080b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0080f	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _dz$[ebp]
  00814	f3 0f 59 4d e8	 mulss	 xmm1, DWORD PTR _dz$[ebp]
  00819	f3 0f 58 c1	 addss	 xmm0, xmm1
  0081d	f3 0f 11 45 c0	 movss	 DWORD PTR _old_to_p_sq$58[ebp], xmm0

; 231  :   	if (old_to_p_sq > mRadius2) 	/* do r**2 test first */

  00822	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00825	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _old_to_p_sq$58[ebp]
  0082a	0f 2f 40 14	 comiss	 xmm0, DWORD PTR [eax+20]
  0082e	0f 86 88 01 00
	00		 jbe	 $LN208@Compute

; 232  : 		{ 	/* this point is outside of current sphere */
; 233  : 	  	float old_to_p = float(sqrt(old_to_p_sq));

  00834	f3 0f 5a 45 c0	 cvtss2sd xmm0, DWORD PTR _old_to_p_sq$58[ebp]
  00839	51		 push	 ecx
  0083a	51		 push	 ecx
  0083b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00840	e8 00 00 00 00	 call	 _sqrt
  00845	59		 pop	 ecx
  00846	59		 pop	 ecx
  00847	d9 5d d8	 fstp	 DWORD PTR _old_to_p$61[ebp]

; 234  : 		  /* calc radius of new sphere */
; 235  :   		mRadius = (mRadius + old_to_p) * 0.5f;

  0084a	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0084d	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00852	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _old_to_p$61[ebp]
  00857	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  0085f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00862	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 236  : 	  	mRadius2 = mRadius*mRadius; 	/* for next r**2 compare */

  00867	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0086a	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0086d	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00872	f3 0f 59 41 10	 mulss	 xmm0, DWORD PTR [ecx+16]
  00877	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0087a	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 237  :   		float old_to_new = old_to_p - mRadius;

  0087f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00882	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _old_to_p$61[ebp]
  00887	f3 0f 5c 40 10	 subss	 xmm0, DWORD PTR [eax+16]
  0088c	f3 0f 11 45 d4	 movss	 DWORD PTR _old_to_new$60[ebp], xmm0

; 238  : 	  	/* calc center of new sphere */
; 239  :       float recip = 1.0f /old_to_p;

  00891	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00899	f3 0f 5e 45 d8	 divss	 xmm0, DWORD PTR _old_to_p$61[ebp]
  0089e	f3 0f 11 45 d0	 movss	 DWORD PTR _recip$59[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 97   : 	float GetX(void) const { return x; };

  008a3	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  008a6	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  008ab	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR $T19[ebp], xmm0
  008b3	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _caller_p$64[ebp]
  008b8	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR $T18[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 241  :   		float cx = (mRadius*mCenter.GetX() + old_to_new*caller_p.GetX()) * recip;

  008c0	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  008c3	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR $T19[ebp]
  008cb	f3 0f 59 40 10	 mulss	 xmm0, DWORD PTR [eax+16]
  008d0	f3 0f 10 8d 18
	ff ff ff	 movss	 xmm1, DWORD PTR $T18[ebp]
  008d8	f3 0f 59 4d d4	 mulss	 xmm1, DWORD PTR _old_to_new$60[ebp]
  008dd	f3 0f 58 c1	 addss	 xmm0, xmm1
  008e1	f3 0f 59 45 d0	 mulss	 xmm0, DWORD PTR _recip$59[ebp]
  008e6	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR _cx$13[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 98   : 	float GetY(void) const { return y; };

  008ee	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  008f1	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  008f6	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR $T17[ebp], xmm0
  008fe	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _caller_p$64[ebp+4]
  00903	f3 0f 11 85 10
	ff ff ff	 movss	 DWORD PTR $T16[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 242  : 	  	float cy = (mRadius*mCenter.GetY() + old_to_new*caller_p.GetY()) * recip;

  0090b	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0090e	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR $T17[ebp]
  00916	f3 0f 59 40 10	 mulss	 xmm0, DWORD PTR [eax+16]
  0091b	f3 0f 10 8d 10
	ff ff ff	 movss	 xmm1, DWORD PTR $T16[ebp]
  00923	f3 0f 59 4d d4	 mulss	 xmm1, DWORD PTR _old_to_new$60[ebp]
  00928	f3 0f 58 c1	 addss	 xmm0, xmm1
  0092c	f3 0f 59 45 d0	 mulss	 xmm0, DWORD PTR _recip$59[ebp]
  00931	f3 0f 11 85 00
	ff ff ff	 movss	 DWORD PTR _cy$12[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 99   : 	float GetZ(void) const { return z; };

  00939	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0093c	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00941	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR $T15[ebp], xmm0
  00949	f3 0f 10 45 00	 movss	 xmm0, DWORD PTR _caller_p$64[ebp+8]
  0094e	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR $T14[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 243  : 		  float cz = (mRadius*mCenter.GetZ() + old_to_new*caller_p.GetZ()) * recip;

  00956	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00959	f3 0f 10 85 0c
	ff ff ff	 movss	 xmm0, DWORD PTR $T15[ebp]
  00961	f3 0f 59 40 10	 mulss	 xmm0, DWORD PTR [eax+16]
  00966	f3 0f 10 8d 08
	ff ff ff	 movss	 xmm1, DWORD PTR $T14[ebp]
  0096e	f3 0f 59 4d d4	 mulss	 xmm1, DWORD PTR _old_to_new$60[ebp]
  00973	f3 0f 58 c1	 addss	 xmm0, xmm1
  00977	f3 0f 59 45 d0	 mulss	 xmm0, DWORD PTR _recip$59[ebp]
  0097c	f3 0f 11 85 d4
	fe ff ff	 movss	 DWORD PTR _cz$1[ebp], xmm0

; 244  : 
; 245  :       mCenter.Set(cx,cy,cz);

  00984	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00987	83 c0 04	 add	 eax, 4
  0098a	89 45 cc	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 107  : 		x = a;

  0098d	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00990	f3 0f 10 85 04
	ff ff ff	 movss	 xmm0, DWORD PTR _cx$13[ebp]
  00998	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 108  : 		y = b;

  0099c	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  0099f	f3 0f 10 85 00
	ff ff ff	 movss	 xmm0, DWORD PTR _cy$12[ebp]
  009a7	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 109  : 		z = c;

  009ac	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  009af	f3 0f 10 85 d4
	fe ff ff	 movss	 xmm0, DWORD PTR _cz$1[ebp]
  009b7	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
$LN208@Compute:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 247  : 	}

  009bc	e9 7b fd ff ff	 jmp	 $LN5@Compute
$LN6@Compute:

; 248  : }

  009c1	8b 4d 70	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  009c4	33 cd		 xor	 ecx, ebp
  009c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  009cb	83 c5 74	 add	 ebp, 116		; 00000074H
  009ce	c9		 leave
  009cf	c2 04 00	 ret	 4
?Compute@Sphere@@QAEXABVSphereInterface@@@Z ENDP	; Sphere::Compute
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
;	COMDAT ?Set@Sphere@@QAEXABVVector3d@@M@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_this$ = -4						; size = 4
_center$ = 8						; size = 4
_radius$ = 12						; size = 4
?Set@Sphere@@QAEXABVVector3d@@M@Z PROC			; Sphere::Set, COMDAT
; _this$ = ecx

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 32   : #ifdef __STATIC_RANGE__
; 33   : 	assert(center.IsInStaticRange());
; 34   : #endif
; 35   : 	mCenter = center;

  00008	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	83 c0 04	 add	 eax, 4
  0000e	89 45 fc	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 57   : 	{ x=A.x; y=A.y; z=A.z;

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 08	 mov	 ecx, DWORD PTR _center$[ebp]
  00017	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00019	89 08		 mov	 DWORD PTR [eax], ecx
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _center$[ebp]
  00021	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00024	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _center$[ebp]
  0002d	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00030	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp

; 36   : 	mRadius = radius;

  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _radius$[ebp]
  0003b	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 37   : 	mRadius2 = radius*radius;

  00040	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _radius$[ebp]
  00045	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _radius$[ebp]
  0004a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 38   : }

  00052	c9		 leave
  00053	c2 08 00	 ret	 8
?Set@Sphere@@QAEXABVVector3d@@M@Z ENDP			; Sphere::Set
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.cpp
;	COMDAT ?IsInStaticRange@Vector3d@@QBE_NXZ
_TEXT	SEGMENT
_LIMIT$ = -8						; size = 4
_this$ = -4						; size = 4
?IsInStaticRange@Vector3d@@QBE_NXZ PROC			; Vector3d::IsInStaticRange, COMDAT
; _this$ = ecx

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 21   : 	const float LIMIT = 3276700.0f;

  00008	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4a47fe70
  00010	f3 0f 11 45 f8	 movss	 DWORD PTR _LIMIT$[ebp], xmm0

; 22   : 	if (x<LIMIT && x>-LIMIT)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4a47fe70
  00020	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00023	76 58		 jbe	 SHORT $LN4@IsInStatic
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0002c	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@ca47fe70
  00033	76 48		 jbe	 SHORT $LN4@IsInStatic

; 23   : 		if (y<LIMIT && y>-LIMIT)

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4a47fe70
  00040	0f 2f 40 04	 comiss	 xmm0, DWORD PTR [eax+4]
  00044	76 37		 jbe	 SHORT $LN4@IsInStatic
  00046	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00049	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0004e	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@ca47fe70
  00055	76 26		 jbe	 SHORT $LN4@IsInStatic

; 24   : 			if (z<LIMIT && z>-LIMIT)

  00057	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4a47fe70
  00062	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  00066	76 15		 jbe	 SHORT $LN4@IsInStatic
  00068	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00070	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@ca47fe70
  00077	76 04		 jbe	 SHORT $LN4@IsInStatic

; 25   : 				return true;

  00079	b0 01		 mov	 al, 1
  0007b	eb 02		 jmp	 SHORT $LN1@IsInStatic
$LN4@IsInStatic:

; 26   : 
; 27   : 	return false;

  0007d	32 c0		 xor	 al, al
$LN1@IsInStatic:

; 28   : }

  0007f	c9		 leave
  00080	c3		 ret	 0
?IsInStaticRange@Vector3d@@QBE_NXZ ENDP			; Vector3d::IsInStaticRange
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
;	COMDAT ?DistanceSq@Vector3d@@QBEMABV1@@Z
_TEXT	SEGMENT
tv147 = -20						; size = 4
_dz$ = -16						; size = 4
_dy$ = -12						; size = 4
_dx$ = -8						; size = 4
_this$ = -4						; size = 4
_a$ = 8							; size = 4
?DistanceSq@Vector3d@@QBEMABV1@@Z PROC			; Vector3d::DistanceSq, COMDAT
; _this$ = ecx

; 169  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 170  : 		float dx = a.x - x;

  00009	8b 45 08	 mov	 eax, DWORD PTR _a$[ebp]
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00017	f3 0f 11 45 f8	 movss	 DWORD PTR _dx$[ebp], xmm0

; 171  : 		float dy = a.y - y;

  0001c	8b 45 08	 mov	 eax, DWORD PTR _a$[ebp]
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00027	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  0002c	f3 0f 11 45 f4	 movss	 DWORD PTR _dy$[ebp], xmm0

; 172  : 		float dz = a.z - z;

  00031	8b 45 08	 mov	 eax, DWORD PTR _a$[ebp]
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0003c	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00041	f3 0f 11 45 f0	 movss	 DWORD PTR _dz$[ebp], xmm0

; 173  : 		return dx*dx + dy*dy + dz*dz;

  00046	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _dx$[ebp]
  0004b	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _dx$[ebp]
  00050	f3 0f 10 4d f4	 movss	 xmm1, DWORD PTR _dy$[ebp]
  00055	f3 0f 59 4d f4	 mulss	 xmm1, DWORD PTR _dy$[ebp]
  0005a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0005e	f3 0f 10 4d f0	 movss	 xmm1, DWORD PTR _dz$[ebp]
  00063	f3 0f 59 4d f0	 mulss	 xmm1, DWORD PTR _dz$[ebp]
  00068	f3 0f 58 c1	 addss	 xmm0, xmm1
  0006c	f3 0f 11 45 ec	 movss	 DWORD PTR tv147[ebp], xmm0
  00071	d9 45 ec	 fld	 DWORD PTR tv147[ebp]

; 174  : 	};

  00074	c9		 leave
  00075	c2 04 00	 ret	 4
?DistanceSq@Vector3d@@QBEMABV1@@Z ENDP			; Vector3d::DistanceSq
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
;	COMDAT ?Length2@Vector3d@@QBEMXZ
_TEXT	SEGMENT
_l2$ = -8						; size = 4
_this$ = -4						; size = 4
?Length2@Vector3d@@QBEMXZ PROC				; Vector3d::Length2, COMDAT
; _this$ = ecx

; 145  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 146  : 		float l2 = x*x+y*y+z*z;

  00008	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00012	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	f3 0f 10 48 04	 movss	 xmm1, DWORD PTR [eax+4]
  00021	f3 0f 59 49 04	 mulss	 xmm1, DWORD PTR [ecx+4]
  00026	f3 0f 58 c1	 addss	 xmm0, xmm1
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  00035	f3 0f 59 49 08	 mulss	 xmm1, DWORD PTR [ecx+8]
  0003a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0003e	f3 0f 11 45 f8	 movss	 DWORD PTR _l2$[ebp], xmm0

; 147  : 		return l2;

  00043	d9 45 f8	 fld	 DWORD PTR _l2$[ebp]

; 148  : 	};

  00046	c9		 leave
  00047	c3		 ret	 0
?Length2@Vector3d@@QBEMXZ ENDP				; Vector3d::Length2
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
;	COMDAT ??DVector3d@@QBE?AV0@M@Z
_TEXT	SEGMENT
_c$ = -32						; size = 4
_b$ = -28						; size = 4
_a$ = -24						; size = 4
_this$ = -20						; size = 4
_Scaled$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_s$ = 12						; size = 4
??DVector3d@@QBE?AV0@M@Z PROC				; Vector3d::operator*, COMDAT
; _this$ = ecx

; 69   : 	{ Vector3d Scaled(x*s, y*s, z*s);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00013	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00016	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0001a	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _s$[ebp]
  0001f	f3 0f 11 45 e8	 movss	 DWORD PTR _a$[ebp], xmm0
  00024	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00027	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0002c	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _s$[ebp]
  00031	f3 0f 11 45 e4	 movss	 DWORD PTR _b$[ebp], xmm0
  00036	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00039	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0003e	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _s$[ebp]
  00043	f3 0f 11 45 e0	 movss	 DWORD PTR _c$[ebp], xmm0

; 37   : 		x = a;

  00048	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _a$[ebp]
  0004d	f3 0f 11 45 f0	 movss	 DWORD PTR _Scaled$[ebp], xmm0

; 38   : 		y = b;

  00052	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _b$[ebp]
  00057	f3 0f 11 45 f4	 movss	 DWORD PTR _Scaled$[ebp+4], xmm0

; 39   : 		z = c;

  0005c	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _c$[ebp]
  00061	f3 0f 11 45 f8	 movss	 DWORD PTR _Scaled$[ebp+8], xmm0

; 30   : 		x = a.x;

  00066	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00069	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _Scaled$[ebp]
  0006e	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 31   : 		y = a.y;

  00072	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00075	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _Scaled$[ebp+4]
  0007a	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 32   : 		z = a.z;

  0007f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00082	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _Scaled$[ebp+8]
  00087	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 70   : 	return(Scaled); };

  0008c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0008f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00092	33 cd		 xor	 ecx, ebp
  00094	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00099	c9		 leave
  0009a	c2 08 00	 ret	 8
??DVector3d@@QBE?AV0@M@Z ENDP				; Vector3d::operator*
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
;	COMDAT ??GVector3d@@QBE?AV0@ABV0@@Z
_TEXT	SEGMENT
_c$ = -32						; size = 4
_b$ = -28						; size = 4
_a$ = -24						; size = 4
_this$ = -20						; size = 4
_Diff$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_A$ = 12						; size = 4
??GVector3d@@QBE?AV0@ABV0@@Z PROC			; Vector3d::operator-, COMDAT
; _this$ = ecx

; 65   : 	{ Vector3d Diff(x-A.x, y-A.y, z-A.z);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00013	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR _A$[ebp]
  00019	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0001d	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00021	f3 0f 11 45 e8	 movss	 DWORD PTR _a$[ebp], xmm0
  00026	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 0c	 mov	 ecx, DWORD PTR _A$[ebp]
  0002c	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00031	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00036	f3 0f 11 45 e4	 movss	 DWORD PTR _b$[ebp], xmm0
  0003b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 4d 0c	 mov	 ecx, DWORD PTR _A$[ebp]
  00041	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00046	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  0004b	f3 0f 11 45 e0	 movss	 DWORD PTR _c$[ebp], xmm0

; 37   : 		x = a;

  00050	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _a$[ebp]
  00055	f3 0f 11 45 f0	 movss	 DWORD PTR _Diff$[ebp], xmm0

; 38   : 		y = b;

  0005a	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _b$[ebp]
  0005f	f3 0f 11 45 f4	 movss	 DWORD PTR _Diff$[ebp+4], xmm0

; 39   : 		z = c;

  00064	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _c$[ebp]
  00069	f3 0f 11 45 f8	 movss	 DWORD PTR _Diff$[ebp+8], xmm0

; 30   : 		x = a.x;

  0006e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00071	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _Diff$[ebp]
  00076	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 31   : 		y = a.y;

  0007a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0007d	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _Diff$[ebp+4]
  00082	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 32   : 		z = a.z;

  00087	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0008a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _Diff$[ebp+8]
  0008f	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 66   : 	return(Diff); };

  00094	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00097	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009a	33 cd		 xor	 ecx, ebp
  0009c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a1	c9		 leave
  000a2	c2 08 00	 ret	 8
??GVector3d@@QBE?AV0@ABV0@@Z ENDP			; Vector3d::operator-
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
;	COMDAT ??HVector3d@@QBE?AV0@ABV0@@Z
_TEXT	SEGMENT
_c$ = -32						; size = 4
_b$ = -28						; size = 4
_a$ = -24						; size = 4
_this$ = -20						; size = 4
_Sum$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_A$ = 12						; size = 4
??HVector3d@@QBE?AV0@ABV0@@Z PROC			; Vector3d::operator+, COMDAT
; _this$ = ecx

; 61   : 	{ Vector3d Sum(x+A.x, y+A.y, z+A.z);

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00013	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR _A$[ebp]
  00019	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0001d	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  00021	f3 0f 11 45 e8	 movss	 DWORD PTR _a$[ebp], xmm0
  00026	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 0c	 mov	 ecx, DWORD PTR _A$[ebp]
  0002c	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00031	f3 0f 58 41 04	 addss	 xmm0, DWORD PTR [ecx+4]
  00036	f3 0f 11 45 e4	 movss	 DWORD PTR _b$[ebp], xmm0
  0003b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 4d 0c	 mov	 ecx, DWORD PTR _A$[ebp]
  00041	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00046	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  0004b	f3 0f 11 45 e0	 movss	 DWORD PTR _c$[ebp], xmm0

; 37   : 		x = a;

  00050	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _a$[ebp]
  00055	f3 0f 11 45 f0	 movss	 DWORD PTR _Sum$[ebp], xmm0

; 38   : 		y = b;

  0005a	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _b$[ebp]
  0005f	f3 0f 11 45 f4	 movss	 DWORD PTR _Sum$[ebp+4], xmm0

; 39   : 		z = c;

  00064	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _c$[ebp]
  00069	f3 0f 11 45 f8	 movss	 DWORD PTR _Sum$[ebp+8], xmm0

; 30   : 		x = a.x;

  0006e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00071	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _Sum$[ebp]
  00076	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 31   : 		y = a.y;

  0007a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0007d	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _Sum$[ebp+4]
  00082	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 32   : 		z = a.z;

  00087	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0008a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _Sum$[ebp+8]
  0008f	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 62   : 	return(Sum); };

  00094	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00097	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009a	33 cd		 xor	 ecx, ebp
  0009c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a1	c9		 leave
  000a2	c2 08 00	 ret	 8
??HVector3d@@QBE?AV0@ABV0@@Z ENDP			; Vector3d::operator+
_TEXT	ENDS
END
