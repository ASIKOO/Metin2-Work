; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?Length@Vector3d@@QBEMXZ			; Vector3d::Length
PUBLIC	?DistanceSq@Vector3d@@QBEMABV1@@Z		; Vector3d::DistanceSq
PUBLIC	?Normalize@Vector3d@@QAEMXZ			; Vector3d::Normalize
PUBLIC	??_GSphere@@UAEPAXI@Z				; Sphere::`scalar deleting destructor'
PUBLIC	??1SpherePackCallback@@UAE@XZ			; SpherePackCallback::~SpherePackCallback
PUBLIC	?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ; SpherePackCallback::VisibilityCallback
PUBLIC	?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ; SpherePackCallback::RayTraceCallback
PUBLIC	?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ; SpherePackCallback::RangeTestCallback
PUBLIC	?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ; SpherePackCallback::PointTest2dCallback
PUBLIC	??_GSpherePackCallback@@UAEPAXI@Z		; SpherePackCallback::`scalar deleting destructor'
PUBLIC	??0SpherePack@@QAE@XZ				; SpherePack::SpherePack
PUBLIC	??1SpherePack@@UAE@XZ				; SpherePack::~SpherePack
PUBLIC	?Init@SpherePack@@QAEXPAVSpherePackFactory@@ABVVector3d@@MPAX_N@Z ; SpherePack::Init
PUBLIC	?NewPosRadius@SpherePack@@QAEXABVVector3d@@M@Z	; SpherePack::NewPosRadius
PUBLIC	?Unlink@SpherePack@@QAEXXZ			; SpherePack::Unlink
PUBLIC	?AddChild@SpherePack@@QAEXPAV1@@Z		; SpherePack::AddChild
PUBLIC	?LostChild@SpherePack@@QAEXPAV1@@Z		; SpherePack::LostChild
PUBLIC	?Recompute@SpherePack@@QAE_NM@Z			; SpherePack::Recompute
PUBLIC	?ComputeBindingDistance@SpherePack@@QAEXPAV1@@Z	; SpherePack::ComputeBindingDistance
PUBLIC	?VisibilityTest@SpherePack@@QAEXABVFrustum@@PAVSpherePackCallback@@W4ViewState@@@Z ; SpherePack::VisibilityTest
PUBLIC	?RayTrace@SpherePack@@QAEXABVVector3d@@0MPAVSpherePackCallback@@@Z ; SpherePack::RayTrace
PUBLIC	?RangeTest@SpherePack@@QAEXABVVector3d@@MPAVSpherePackCallback@@W4ViewState@@@Z ; SpherePack::RangeTest
PUBLIC	?PointTest2d@SpherePack@@QAEXABVVector3d@@PAVSpherePackCallback@@W4ViewState@@@Z ; SpherePack::PointTest2d
PUBLIC	?Reset@SpherePack@@QAEXXZ			; SpherePack::Reset
PUBLIC	??_ESpherePack@@UAEPAXI@Z			; SpherePack::`vector deleting destructor'
PUBLIC	??0SpherePackFifo@@QAE@H@Z			; SpherePackFifo::SpherePackFifo
PUBLIC	?Push@SpherePackFifo@@QAEPAPAVSpherePack@@PAV2@@Z ; SpherePackFifo::Push
PUBLIC	?Pop@SpherePackFifo@@QAEPAVSpherePack@@XZ	; SpherePackFifo::Pop
PUBLIC	??_GSpherePackFifo@@UAEPAXI@Z			; SpherePackFifo::`scalar deleting destructor'
PUBLIC	??0SpherePackFactory@@QAE@HMMM@Z		; SpherePackFactory::SpherePackFactory
PUBLIC	??1SpherePackFactory@@UAE@XZ			; SpherePackFactory::~SpherePackFactory
PUBLIC	?Process@SpherePackFactory@@QAEXXZ		; SpherePackFactory::Process
PUBLIC	?AddSphere_@SpherePackFactory@@QAEPAVSpherePack@@ABVVector3d@@MPAX_NH@Z ; SpherePackFactory::AddSphere_
PUBLIC	?AddIntegrate@SpherePackFactory@@QAEXPAVSpherePack@@@Z ; SpherePackFactory::AddIntegrate
PUBLIC	?AddRecompute@SpherePackFactory@@QAEXPAVSpherePack@@@Z ; SpherePackFactory::AddRecompute
PUBLIC	?Integrate@SpherePackFactory@@QAEXPAVSpherePack@@0M@Z ; SpherePackFactory::Integrate
PUBLIC	?Render@SpherePackFactory@@QAEXXZ		; SpherePackFactory::Render
PUBLIC	?Remove@SpherePackFactory@@QAEXPAVSpherePack@@@Z ; SpherePackFactory::Remove
PUBLIC	?FrustumTest@SpherePackFactory@@QAEXABVFrustum@@PAVSpherePackCallback@@@Z ; SpherePackFactory::FrustumTest
PUBLIC	?RayTrace@SpherePackFactory@@QAEXABVVector3d@@0PAVSpherePackCallback@@@Z ; SpherePackFactory::RayTrace
PUBLIC	?RangeTest@SpherePackFactory@@QAEXABVVector3d@@MPAVSpherePackCallback@@@Z ; SpherePackFactory::RangeTest
PUBLIC	?PointTest2d@SpherePackFactory@@QAEXABVVector3d@@PAVSpherePackCallback@@@Z ; SpherePackFactory::PointTest2d
PUBLIC	?RayTraceCallback@SpherePackFactory@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ; SpherePackFactory::RayTraceCallback
PUBLIC	?RangeTestCallback@SpherePackFactory@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ; SpherePackFactory::RangeTestCallback
PUBLIC	?PointTest2dCallback@SpherePackFactory@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ; SpherePackFactory::PointTest2dCallback
PUBLIC	?VisibilityCallback@SpherePackFactory@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ; SpherePackFactory::VisibilityCallback
PUBLIC	?Reset@SpherePackFactory@@QAEXXZ		; SpherePackFactory::Reset
PUBLIC	??1?$Pool@VSpherePack@@@@QAE@XZ			; Pool<SpherePack>::~Pool<SpherePack>
PUBLIC	?Set@?$Pool@VSpherePack@@@@QAEXH@Z		; Pool<SpherePack>::Set
PUBLIC	?Release@?$Pool@VSpherePack@@@@QAEXPAVSpherePack@@@Z ; Pool<SpherePack>::Release
PUBLIC	?GetFreeLink@?$Pool@VSpherePack@@@@QAEPAVSpherePack@@XZ ; Pool<SpherePack>::GetFreeLink
PUBLIC	??_GSpherePackFactory@@UAEPAXI@Z		; SpherePackFactory::`scalar deleting destructor'
PUBLIC	??_7Sphere@@6B@					; Sphere::`vftable'
PUBLIC	??_7SpherePackCallback@@6B@			; SpherePackCallback::`vftable'
PUBLIC	??_7SpherePack@@6B@				; SpherePack::`vftable'
PUBLIC	??_7SpherePackFifo@@6B@				; SpherePackFifo::`vftable'
PUBLIC	??_7SpherePackFactory@@6B@			; SpherePackFactory::`vftable'
PUBLIC	??_R4Sphere@@6B@				; Sphere::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSphere@@@8				; Sphere `RTTI Type Descriptor'
PUBLIC	??_R3Sphere@@8					; Sphere::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Sphere@@8					; Sphere::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Sphere@@8				; Sphere::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SpherePackFactory@@6B@			; SpherePackFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSpherePackFactory@@@8			; SpherePackFactory `RTTI Type Descriptor'
PUBLIC	??_R3SpherePackFactory@@8			; SpherePackFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SpherePackFactory@@8			; SpherePackFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SpherePackFactory@@8		; SpherePackFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@SpherePackCallback@@8		; SpherePackCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVSpherePackCallback@@@8			; SpherePackCallback `RTTI Type Descriptor'
PUBLIC	??_R3SpherePackCallback@@8			; SpherePackCallback::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SpherePackCallback@@8			; SpherePackCallback::`RTTI Base Class Array'
PUBLIC	??_R4SpherePack@@6B@				; SpherePack::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSpherePack@@@8				; SpherePack `RTTI Type Descriptor'
PUBLIC	??_R3SpherePack@@8				; SpherePack::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SpherePack@@8				; SpherePack::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SpherePack@@8			; SpherePack::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SpherePackCallback@@6B@			; SpherePackCallback::`RTTI Complete Object Locator'
PUBLIC	??_R4SpherePackFifo@@6B@			; SpherePackFifo::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSpherePackFifo@@@8			; SpherePackFifo `RTTI Type Descriptor'
PUBLIC	??_R3SpherePackFifo@@8				; SpherePackFifo::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SpherePackFifo@@8				; SpherePackFifo::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SpherePackFifo@@8			; SpherePackFifo::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
PUBLIC	__real@49c80000
PUBLIC	__real@4ac80000
PUBLIC	__real@7e967699
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??_L@YGXPAXIIP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	_sqrt:PROC
EXTRN	?RayIntersection@Sphere@@QAE_NABVVector3d@@0MPAV2@@Z:PROC ; Sphere::RayIntersection
EXTRN	?RayIntersectionInFront@Sphere@@QAE_NABVVector3d@@0PAV2@@Z:PROC ; Sphere::RayIntersectionInFront
EXTRN	??_ESphere@@UAEPAXI@Z:PROC			; Sphere::`vector deleting destructor'
EXTRN	?ViewVolumeTest@Frustum@@QBE?AW4ViewState@@ABVVector3d@@M@Z:PROC ; Frustum::ViewVolumeTest
EXTRN	??_ESpherePackCallback@@UAEPAXI@Z:PROC		; SpherePackCallback::`vector deleting destructor'
EXTRN	??_ESpherePackFifo@@UAEPAXI@Z:PROC		; SpherePackFifo::`vector deleting destructor'
EXTRN	??_ESpherePackFactory@@UAEPAXI@Z:PROC		; SpherePackFactory::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@7e967699
CONST	SEGMENT
__real@7e967699 DD 07e967699r			; 1e+38
CONST	ENDS
;	COMDAT __real@4ac80000
CONST	SEGMENT
__real@4ac80000 DD 04ac80000r			; 6.5536e+06
CONST	ENDS
;	COMDAT __real@49c80000
CONST	SEGMENT
__real@49c80000 DD 049c80000r			; 1.6384e+06
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@SpherePackFifo@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SpherePackFifo@@8 DD FLAT:??_R0?AVSpherePackFifo@@@8 ; SpherePackFifo::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SpherePackFifo@@8
rdata$r	ENDS
;	COMDAT ??_R2SpherePackFifo@@8
rdata$r	SEGMENT
??_R2SpherePackFifo@@8 DD FLAT:??_R1A@?0A@EA@SpherePackFifo@@8 ; SpherePackFifo::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SpherePackFifo@@8
rdata$r	SEGMENT
??_R3SpherePackFifo@@8 DD 00H				; SpherePackFifo::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SpherePackFifo@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSpherePackFifo@@@8
data$rs	SEGMENT
??_R0?AVSpherePackFifo@@@8 DD FLAT:??_7type_info@@6B@	; SpherePackFifo `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSpherePackFifo@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SpherePackFifo@@6B@
rdata$r	SEGMENT
??_R4SpherePackFifo@@6B@ DD 00H				; SpherePackFifo::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSpherePackFifo@@@8
	DD	FLAT:??_R3SpherePackFifo@@8
rdata$r	ENDS
;	COMDAT ??_R4SpherePackCallback@@6B@
rdata$r	SEGMENT
??_R4SpherePackCallback@@6B@ DD 00H			; SpherePackCallback::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSpherePackCallback@@@8
	DD	FLAT:??_R3SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SpherePack@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SpherePack@@8 DD FLAT:??_R0?AVSpherePack@@@8 ; SpherePack::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SpherePack@@8
rdata$r	ENDS
;	COMDAT ??_R2SpherePack@@8
rdata$r	SEGMENT
??_R2SpherePack@@8 DD FLAT:??_R1A@?0A@EA@SpherePack@@8	; SpherePack::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Sphere@@8
rdata$r	ENDS
;	COMDAT ??_R3SpherePack@@8
rdata$r	SEGMENT
??_R3SpherePack@@8 DD 00H				; SpherePack::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SpherePack@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSpherePack@@@8
data$rs	SEGMENT
??_R0?AVSpherePack@@@8 DD FLAT:??_7type_info@@6B@	; SpherePack `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSpherePack@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SpherePack@@6B@
rdata$r	SEGMENT
??_R4SpherePack@@6B@ DD 00H				; SpherePack::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSpherePack@@@8
	DD	FLAT:??_R3SpherePack@@8
rdata$r	ENDS
;	COMDAT ??_R2SpherePackCallback@@8
rdata$r	SEGMENT
??_R2SpherePackCallback@@8 DD FLAT:??_R1A@?0A@EA@SpherePackCallback@@8 ; SpherePackCallback::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SpherePackCallback@@8
rdata$r	SEGMENT
??_R3SpherePackCallback@@8 DD 00H			; SpherePackCallback::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSpherePackCallback@@@8
data$rs	SEGMENT
??_R0?AVSpherePackCallback@@@8 DD FLAT:??_7type_info@@6B@ ; SpherePackCallback `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSpherePackCallback@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@SpherePackCallback@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SpherePackCallback@@8 DD FLAT:??_R0?AVSpherePackCallback@@@8 ; SpherePackCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SpherePackFactory@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SpherePackFactory@@8 DD FLAT:??_R0?AVSpherePackFactory@@@8 ; SpherePackFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SpherePackFactory@@8
rdata$r	ENDS
;	COMDAT ??_R2SpherePackFactory@@8
rdata$r	SEGMENT
??_R2SpherePackFactory@@8 DD FLAT:??_R1A@?0A@EA@SpherePackFactory@@8 ; SpherePackFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SpherePackCallback@@8
rdata$r	ENDS
;	COMDAT ??_R3SpherePackFactory@@8
rdata$r	SEGMENT
??_R3SpherePackFactory@@8 DD 00H			; SpherePackFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SpherePackFactory@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSpherePackFactory@@@8
data$rs	SEGMENT
??_R0?AVSpherePackFactory@@@8 DD FLAT:??_7type_info@@6B@ ; SpherePackFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSpherePackFactory@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SpherePackFactory@@6B@
rdata$r	SEGMENT
??_R4SpherePackFactory@@6B@ DD 00H			; SpherePackFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSpherePackFactory@@@8
	DD	FLAT:??_R3SpherePackFactory@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Sphere@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Sphere@@8 DD FLAT:??_R0?AVSphere@@@8	; Sphere::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Sphere@@8
rdata$r	ENDS
;	COMDAT ??_R2Sphere@@8
rdata$r	SEGMENT
??_R2Sphere@@8 DD FLAT:??_R1A@?0A@EA@Sphere@@8		; Sphere::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Sphere@@8
rdata$r	SEGMENT
??_R3Sphere@@8 DD 00H					; Sphere::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Sphere@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSphere@@@8
data$rs	SEGMENT
??_R0?AVSphere@@@8 DD FLAT:??_7type_info@@6B@		; Sphere `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSphere@@', 00H
data$rs	ENDS
;	COMDAT ??_R4Sphere@@6B@
rdata$r	SEGMENT
??_R4Sphere@@6B@ DD 00H					; Sphere::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSphere@@@8
	DD	FLAT:??_R3Sphere@@8
rdata$r	ENDS
;	COMDAT ??_7SpherePackFactory@@6B@
CONST	SEGMENT
??_7SpherePackFactory@@6B@ DD FLAT:??_R4SpherePackFactory@@6B@ ; SpherePackFactory::`vftable'
	DD	FLAT:??_ESpherePackFactory@@UAEPAXI@Z
	DD	FLAT:?VisibilityCallback@SpherePackFactory@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?RayTraceCallback@SpherePackFactory@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
	DD	FLAT:?RangeTestCallback@SpherePackFactory@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?PointTest2dCallback@SpherePackFactory@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
CONST	ENDS
;	COMDAT ??_7SpherePackFifo@@6B@
CONST	SEGMENT
??_7SpherePackFifo@@6B@ DD FLAT:??_R4SpherePackFifo@@6B@ ; SpherePackFifo::`vftable'
	DD	FLAT:??_ESpherePackFifo@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7SpherePack@@6B@
CONST	SEGMENT
??_7SpherePack@@6B@ DD FLAT:??_R4SpherePack@@6B@	; SpherePack::`vftable'
	DD	FLAT:??_ESpherePack@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7SpherePackCallback@@6B@
CONST	SEGMENT
??_7SpherePackCallback@@6B@ DD FLAT:??_R4SpherePackCallback@@6B@ ; SpherePackCallback::`vftable'
	DD	FLAT:??_ESpherePackCallback@@UAEPAXI@Z
	DD	FLAT:?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
	DD	FLAT:?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
	DD	FLAT:?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
CONST	ENDS
;	COMDAT ??_7Sphere@@6B@
CONST	SEGMENT
??_7Sphere@@6B@ DD FLAT:??_R4Sphere@@6B@		; Sphere::`vftable'
	DD	FLAT:??_ESphere@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Set@?$Pool@VSpherePack@@@@QAEXH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Set@?$Pool@VSpherePack@@@@QAEXH@Z$0
__ehfuncinfo$?Set@?$Pool@VSpherePack@@@@QAEXH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Set@?$Pool@VSpherePack@@@@QAEXH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SpherePackFactory@@QAE@HMMM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SpherePackFactory@@QAE@HMMM@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0SpherePackFactory@@QAE@HMMM@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0SpherePackFactory@@QAE@HMMM@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$??0SpherePackFactory@@QAE@HMMM@Z$3
__ehfuncinfo$??0SpherePackFactory@@QAE@HMMM@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0SpherePackFactory@@QAE@HMMM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_ESpherePack@@UAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_GSpherePackFactory@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSpherePackFactory@@UAEPAXI@Z PROC			; SpherePackFactory::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1SpherePackFactory@@UAE@XZ ; SpherePackFactory::~SpherePackFactory
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0c		 je	 SHORT $LN2@scalar
  00017	6a 40		 push	 64			; 00000040H
  00019	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00021	59		 pop	 ecx
  00022	59		 pop	 ecx
$LN2@scalar:
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c9		 leave
  00027	c2 04 00	 ret	 4
??_GSpherePackFactory@@UAEPAXI@Z ENDP			; SpherePackFactory::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
;	COMDAT ?GetFreeLink@?$Pool@VSpherePack@@@@QAEPAVSpherePack@@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
_this$ = -20						; size = 4
$T1 = -16						; size = 4
_temp$ = -12						; size = 4
_ret$ = -8						; size = 4
_this$ = -4						; size = 4
?GetFreeLink@?$Pool@VSpherePack@@@@QAEPAVSpherePack@@XZ PROC ; Pool<SpherePack>::GetFreeLink, COMDAT
; _this$ = ecx

; 184  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 185  : 		// Free allocated items are always added to the head of the list
; 186  : 		if ( !mFree ) return 0;

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00010	75 04		 jne	 SHORT $LN2@GetFreeLin
  00012	33 c0		 xor	 eax, eax
  00014	eb 7b		 jmp	 SHORT $LN1@GetFreeLin
$LN2@GetFreeLin:

; 187  : 		Type *ret = mFree;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0001c	89 45 f8	 mov	 DWORD PTR _ret$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 203  : 	SpherePack * GetNext(void)     const { return mNext; };

  0001f	8b 45 f8	 mov	 eax, DWORD PTR _ret$[ebp]
  00022	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  00025	89 45 f0	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h

; 188  : 		mFree = ret->GetNext(); // new head of free list

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR $T1[ebp]
  0002e	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 189  : 		Type *temp = mHead; // current head of list

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00037	89 45 f4	 mov	 DWORD PTR _temp$[ebp], eax

; 190  : 		mHead = ret;        // new head of list is this free one

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _ret$[ebp]
  00040	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 191  : 		if ( temp ) temp->SetPrevious(ret);

  00043	83 7d f4 00	 cmp	 DWORD PTR _temp$[ebp], 0
  00047	74 09		 je	 SHORT $LN3@GetFreeLin
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 207  : 	void SetPrevious(SpherePack *pack) { mPrevious = pack; };

  00049	8b 45 f4	 mov	 eax, DWORD PTR _temp$[ebp]
  0004c	8b 4d f8	 mov	 ecx, DWORD PTR _ret$[ebp]
  0004f	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
$LN3@GetFreeLin:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h

; 192  : 		mHead->SetNext(temp);

  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00058	89 45 ec	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 206  : 	void SetNext(SpherePack *pack) { mNext = pack; };

  0005b	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 4d f4	 mov	 ecx, DWORD PTR _temp$[ebp]
  00061	89 48 18	 mov	 DWORD PTR [eax+24], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h

; 193  : 		mHead->SetPrevious(0);

  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0006a	89 45 e8	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 207  : 	void SetPrevious(SpherePack *pack) { mPrevious = pack; };

  0006d	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00070	83 60 1c 00	 and	 DWORD PTR [eax+28], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h

; 194  : 		mUsedCount++;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00077	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  0007a	40		 inc	 eax
  0007b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007e	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 195  : 		mFreeCount--;

  00081	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00084	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  00087	48		 dec	 eax
  00088	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 196  : 		return ret;

  0008e	8b 45 f8	 mov	 eax, DWORD PTR _ret$[ebp]
$LN1@GetFreeLin:

; 197  : 	};

  00091	c9		 leave
  00092	c3		 ret	 0
?GetFreeLink@?$Pool@VSpherePack@@@@QAEPAVSpherePack@@XZ ENDP ; Pool<SpherePack>::GetFreeLink
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
;	COMDAT ?Release@?$Pool@VSpherePack@@@@QAEXPAVSpherePack@@@Z
_TEXT	SEGMENT
_temp$ = -28						; size = 4
_this$ = -24						; size = 4
_next$1 = -20						; size = 4
$T2 = -16						; size = 4
_prev$ = -12						; size = 4
_next$3 = -8						; size = 4
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?Release@?$Pool@VSpherePack@@@@QAEXPAVSpherePack@@@Z PROC ; Pool<SpherePack>::Release, COMDAT
; _this$ = ecx

; 140  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 142  : 		if ( t == mCurrent ) mCurrent = t->GetNext();

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  0000f	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00012	75 12		 jne	 SHORT $LN2@Release
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 203  : 	SpherePack * GetNext(void)     const { return mNext; };

  00014	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00017	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  0001a	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h

; 142  : 		if ( t == mCurrent ) mCurrent = t->GetNext();

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 4d f0	 mov	 ecx, DWORD PTR $T2[ebp]
  00023	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN2@Release:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 204  : 	SpherePack * GetPrevious(void) const { return mPrevious; };

  00026	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00029	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  0002c	89 45 f4	 mov	 DWORD PTR _prev$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h

; 147  : 		if ( prev )

  0002f	83 7d f4 00	 cmp	 DWORD PTR _prev$[ebp], 0
  00033	74 23		 je	 SHORT $LN3@Release
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 203  : 	SpherePack * GetNext(void)     const { return mNext; };

  00035	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00038	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  0003b	89 45 f8	 mov	 DWORD PTR _next$3[ebp], eax

; 206  : 	void SetNext(SpherePack *pack) { mNext = pack; };

  0003e	8b 45 f4	 mov	 eax, DWORD PTR _prev$[ebp]
  00041	8b 4d f8	 mov	 ecx, DWORD PTR _next$3[ebp]
  00044	89 48 18	 mov	 DWORD PTR [eax+24], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h

; 151  : 			if ( next ) next->SetPrevious(prev);

  00047	83 7d f8 00	 cmp	 DWORD PTR _next$3[ebp], 0
  0004b	74 09		 je	 SHORT $LN5@Release
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 207  : 	void SetPrevious(SpherePack *pack) { mPrevious = pack; };

  0004d	8b 45 f8	 mov	 eax, DWORD PTR _next$3[ebp]
  00050	8b 4d f4	 mov	 ecx, DWORD PTR _prev$[ebp]
  00053	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
$LN5@Release:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h

; 153  : 		}

  00056	eb 2b		 jmp	 SHORT $LN4@Release
$LN3@Release:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 203  : 	SpherePack * GetNext(void)     const { return mNext; };

  00058	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  0005b	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  0005e	89 45 ec	 mov	 DWORD PTR _next$1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h

; 157  : 			mHead = next;

  00061	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00064	8b 4d ec	 mov	 ecx, DWORD PTR _next$1[ebp]
  00067	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 158  : 			if ( mHead ) mHead->SetPrevious(0);

  0006a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006d	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00071	74 10		 je	 SHORT $LN4@Release
  00073	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00076	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00079	89 45 e8	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 207  : 	void SetPrevious(SpherePack *pack) { mPrevious = pack; };

  0007c	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	83 60 1c 00	 and	 DWORD PTR [eax+28], 0
$LN4@Release:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h

; 161  : 		Type *temp = mFree; // old head of free list.

  00083	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00086	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00089	89 45 e4	 mov	 DWORD PTR _temp$[ebp], eax

; 162  : 		mFree = t; // new head of linked list.

  0008c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008f	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  00092	89 48 10	 mov	 DWORD PTR [eax+16], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 207  : 	void SetPrevious(SpherePack *pack) { mPrevious = pack; };

  00095	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  00098	83 60 1c 00	 and	 DWORD PTR [eax+28], 0

; 206  : 	void SetNext(SpherePack *pack) { mNext = pack; };

  0009c	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  0009f	8b 4d e4	 mov	 ecx, DWORD PTR _temp$[ebp]
  000a2	89 48 18	 mov	 DWORD PTR [eax+24], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h

; 166  : 		mUsedCount--;

  000a5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a8	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  000ab	48		 dec	 eax
  000ac	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000af	89 41 14	 mov	 DWORD PTR [ecx+20], eax

; 167  : 		mFreeCount++;

  000b2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b5	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  000b8	40		 inc	 eax
  000b9	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 168  : 	};

  000bf	c9		 leave
  000c0	c2 04 00	 ret	 4
?Release@?$Pool@VSpherePack@@@@QAEXPAVSpherePack@@@Z ENDP ; Pool<SpherePack>::Release
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
;	COMDAT ?Set@?$Pool@VSpherePack@@@@QAEXH@Z
_TEXT	SEGMENT
_pack$ = -88						; size = 4
_this$ = -84						; size = 4
_this$ = -80						; size = 4
_pack$ = -76						; size = 4
_this$ = -72						; size = 4
_this$ = -68						; size = 4
_pack$ = -64						; size = 4
_this$ = -60						; size = 4
$T2 = -56						; size = 4
tv83 = -52						; size = 4
tv155 = -48						; size = 4
tv82 = -44						; size = 4
$T3 = -40						; size = 4
$T4 = -36						; size = 4
$T5 = -32						; size = 4
_loopValue$ = -28					; size = 4
$T6 = -24						; size = 4
_i$7 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_maxitems$ = 8						; size = 4
?Set@?$Pool@VSpherePack@@@@QAEXH@Z PROC			; Pool<SpherePack>::Set, COMDAT
; _this$ = ecx

; 54   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Set@?$Pool@VSpherePack@@@@QAEXH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	53		 push	 ebx
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 55   : 		if (mData)

  00029	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00030	74 4f		 je	 SHORT $LN5@Set

; 56   : 			delete [] mData; // delete any previous incarnation.

  00032	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00035	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00038	89 45 e0	 mov	 DWORD PTR $T5[ebp], eax
  0003b	8b 45 e0	 mov	 eax, DWORD PTR $T5[ebp]
  0003e	89 45 dc	 mov	 DWORD PTR $T4[ebp], eax
  00041	83 7d dc 00	 cmp	 DWORD PTR $T4[ebp], 0
  00045	74 36		 je	 SHORT $LN11@Set
  00047	8b 45 dc	 mov	 eax, DWORD PTR $T4[ebp]
  0004a	83 78 fc 00	 cmp	 DWORD PTR [eax-4], 0
  0004e	74 11		 je	 SHORT $LN9@Set
  00050	6a 03		 push	 3
  00052	8b 45 e0	 mov	 eax, DWORD PTR $T5[ebp]
  00055	8b 00		 mov	 eax, DWORD PTR [eax]
  00057	8b 4d e0	 mov	 ecx, DWORD PTR $T5[ebp]
  0005a	ff 10		 call	 DWORD PTR [eax]
  0005c	89 45 d4	 mov	 DWORD PTR tv82[ebp], eax
  0005f	eb 14		 jmp	 SHORT $LN10@Set
$LN9@Set:
  00061	6a 04		 push	 4
  00063	8b 45 dc	 mov	 eax, DWORD PTR $T4[ebp]
  00066	83 e8 04	 sub	 eax, 4
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0006f	59		 pop	 ecx
  00070	59		 pop	 ecx
  00071	83 65 d4 00	 and	 DWORD PTR tv82[ebp], 0
$LN10@Set:
  00075	8b 45 d4	 mov	 eax, DWORD PTR tv82[ebp]
  00078	89 45 cc	 mov	 DWORD PTR tv83[ebp], eax
  0007b	eb 04		 jmp	 SHORT $LN5@Set
$LN11@Set:
  0007d	83 65 cc 00	 and	 DWORD PTR tv83[ebp], 0
$LN5@Set:

; 57   : 		mMaxItems = maxitems;

  00081	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00084	8b 4d 08	 mov	 ecx, DWORD PTR _maxitems$[ebp]
  00087	89 08		 mov	 DWORD PTR [eax], ecx

; 58   : 		mData = new Type[mMaxItems];

  00089	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	8b 00		 mov	 eax, DWORD PTR [eax]
  0008e	89 45 d8	 mov	 DWORD PTR $T3[ebp], eax
  00091	33 c9		 xor	 ecx, ecx
  00093	8b 45 d8	 mov	 eax, DWORD PTR $T3[ebp]
  00096	6a 50		 push	 80			; 00000050H
  00098	5a		 pop	 edx
  00099	f7 e2		 mul	 edx
  0009b	0f 90 c1	 seto	 cl
  0009e	f7 d9		 neg	 ecx
  000a0	0b c8		 or	 ecx, eax
  000a2	33 c0		 xor	 eax, eax
  000a4	83 c1 04	 add	 ecx, 4
  000a7	0f 92 c0	 setb	 al
  000aa	f7 d8		 neg	 eax
  000ac	0b c1		 or	 eax, ecx
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  000b4	59		 pop	 ecx
  000b5	89 45 e8	 mov	 DWORD PTR $T6[ebp], eax
  000b8	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  000bc	83 7d e8 00	 cmp	 DWORD PTR $T6[ebp], 0
  000c0	74 2e		 je	 SHORT $LN13@Set
  000c2	8b 45 e8	 mov	 eax, DWORD PTR $T6[ebp]
  000c5	8b 4d d8	 mov	 ecx, DWORD PTR $T3[ebp]
  000c8	89 08		 mov	 DWORD PTR [eax], ecx
  000ca	68 00 00 00 00	 push	 OFFSET ??1SpherePack@@UAE@XZ ; SpherePack::~SpherePack
  000cf	68 00 00 00 00	 push	 OFFSET ??0SpherePack@@QAE@XZ ; SpherePack::SpherePack
  000d4	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000d7	6a 50		 push	 80			; 00000050H
  000d9	8b 45 e8	 mov	 eax, DWORD PTR $T6[ebp]
  000dc	83 c0 04	 add	 eax, 4
  000df	50		 push	 eax
  000e0	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z
  000e5	8b 45 e8	 mov	 eax, DWORD PTR $T6[ebp]
  000e8	83 c0 04	 add	 eax, 4
  000eb	89 45 d0	 mov	 DWORD PTR tv155[ebp], eax
  000ee	eb 04		 jmp	 SHORT $LN14@Set
$LN13@Set:
  000f0	83 65 d0 00	 and	 DWORD PTR tv155[ebp], 0
$LN14@Set:
  000f4	8b 45 d0	 mov	 eax, DWORD PTR tv155[ebp]
  000f7	89 45 c8	 mov	 DWORD PTR $T2[ebp], eax
  000fa	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000fe	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00101	8b 4d c8	 mov	 ecx, DWORD PTR $T2[ebp]
  00104	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 59   : 		mFree = mData;

  00107	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0010a	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0010d	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00110	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 60   : 		mHead = 0;

  00113	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00116	83 60 0c 00	 and	 DWORD PTR [eax+12], 0

; 61   : 		int loopValue = (mMaxItems-1);

  0011a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 00		 mov	 eax, DWORD PTR [eax]
  0011f	48		 dec	 eax
  00120	89 45 e4	 mov	 DWORD PTR _loopValue$[ebp], eax

; 62   : 		for (int i=0; i<loopValue; i++)

  00123	83 65 ec 00	 and	 DWORD PTR _i$7[ebp], 0
  00127	eb 07		 jmp	 SHORT $LN4@Set
$LN2@Set:
  00129	8b 45 ec	 mov	 eax, DWORD PTR _i$7[ebp]
  0012c	40		 inc	 eax
  0012d	89 45 ec	 mov	 DWORD PTR _i$7[ebp], eax
$LN4@Set:
  00130	8b 45 ec	 mov	 eax, DWORD PTR _i$7[ebp]
  00133	3b 45 e4	 cmp	 eax, DWORD PTR _loopValue$[ebp]
  00136	7d 6a		 jge	 SHORT $LN3@Set

; 63   : 		{
; 64   : 			mData[i].SetNext( &mData[i+1] );

  00138	8b 45 ec	 mov	 eax, DWORD PTR _i$7[ebp]
  0013b	40		 inc	 eax
  0013c	6b c0 50	 imul	 eax, eax, 80
  0013f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00142	03 41 08	 add	 eax, DWORD PTR [ecx+8]
  00145	89 45 c0	 mov	 DWORD PTR _pack$[ebp], eax
  00148	6b 45 ec 50	 imul	 eax, DWORD PTR _i$7[ebp], 80
  0014c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0014f	03 41 08	 add	 eax, DWORD PTR [ecx+8]
  00152	89 45 c4	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 206  : 	void SetNext(SpherePack *pack) { mNext = pack; };

  00155	8b 45 c4	 mov	 eax, DWORD PTR _this$[ebp]
  00158	8b 4d c0	 mov	 ecx, DWORD PTR _pack$[ebp]
  0015b	89 48 18	 mov	 DWORD PTR [eax+24], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h

; 65   : 			if ( i == 0 )

  0015e	83 7d ec 00	 cmp	 DWORD PTR _i$7[ebp], 0
  00162	75 16		 jne	 SHORT $LN6@Set

; 66   : 				mData[i].SetPrevious( 0 );

  00164	6b 45 ec 50	 imul	 eax, DWORD PTR _i$7[ebp], 80
  00168	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0016b	03 41 08	 add	 eax, DWORD PTR [ecx+8]
  0016e	89 45 bc	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 207  : 	void SetPrevious(SpherePack *pack) { mPrevious = pack; };

  00171	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  00174	83 60 1c 00	 and	 DWORD PTR [eax+28], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h

; 66   : 				mData[i].SetPrevious( 0 );

  00178	eb 26		 jmp	 SHORT $LN7@Set
$LN6@Set:

; 67   : 			else
; 68   : 				mData[i].SetPrevious( &mData[i-1] );

  0017a	8b 45 ec	 mov	 eax, DWORD PTR _i$7[ebp]
  0017d	48		 dec	 eax
  0017e	6b c0 50	 imul	 eax, eax, 80
  00181	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00184	03 41 08	 add	 eax, DWORD PTR [ecx+8]
  00187	89 45 b4	 mov	 DWORD PTR _pack$[ebp], eax
  0018a	6b 45 ec 50	 imul	 eax, DWORD PTR _i$7[ebp], 80
  0018e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00191	03 41 08	 add	 eax, DWORD PTR [ecx+8]
  00194	89 45 b8	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 207  : 	void SetPrevious(SpherePack *pack) { mPrevious = pack; };

  00197	8b 45 b8	 mov	 eax, DWORD PTR _this$[ebp]
  0019a	8b 4d b4	 mov	 ecx, DWORD PTR _pack$[ebp]
  0019d	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
$LN7@Set:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h

; 69   : 		}

  001a0	eb 87		 jmp	 SHORT $LN2@Set
$LN3@Set:

; 70   : 		
; 71   : 		mData[loopValue].SetNext(0);

  001a2	6b 45 e4 50	 imul	 eax, DWORD PTR _loopValue$[ebp], 80
  001a6	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001a9	03 41 08	 add	 eax, DWORD PTR [ecx+8]
  001ac	89 45 b0	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 206  : 	void SetNext(SpherePack *pack) { mNext = pack; };

  001af	8b 45 b0	 mov	 eax, DWORD PTR _this$[ebp]
  001b2	83 60 18 00	 and	 DWORD PTR [eax+24], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h

; 72   : 		mData[loopValue].SetPrevious( &mData[loopValue-1] );

  001b6	8b 45 e4	 mov	 eax, DWORD PTR _loopValue$[ebp]
  001b9	48		 dec	 eax
  001ba	6b c0 50	 imul	 eax, eax, 80
  001bd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001c0	03 41 08	 add	 eax, DWORD PTR [ecx+8]
  001c3	89 45 a8	 mov	 DWORD PTR _pack$[ebp], eax
  001c6	6b 45 e4 50	 imul	 eax, DWORD PTR _loopValue$[ebp], 80
  001ca	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001cd	03 41 08	 add	 eax, DWORD PTR [ecx+8]
  001d0	89 45 ac	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 207  : 	void SetPrevious(SpherePack *pack) { mPrevious = pack; };

  001d3	8b 45 ac	 mov	 eax, DWORD PTR _this$[ebp]
  001d6	8b 4d a8	 mov	 ecx, DWORD PTR _pack$[ebp]
  001d9	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h

; 73   : 		mCurrent = 0; // there is no current, currently. <g>

  001dc	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001df	83 60 04 00	 and	 DWORD PTR [eax+4], 0

; 74   : 		mFreeCount = maxitems;

  001e3	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001e6	8b 4d 08	 mov	 ecx, DWORD PTR _maxitems$[ebp]
  001e9	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 75   : 		mUsedCount = 0;

  001ec	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001ef	83 60 14 00	 and	 DWORD PTR [eax+20], 0

; 76   : 	};

  001f3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001f6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001fd	59		 pop	 ecx
  001fe	5b		 pop	 ebx
  001ff	c9		 leave
  00200	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Set@?$Pool@VSpherePack@@@@QAEXH@Z$0:
  00000	33 db		 xor	 ebx, ebx
  00002	8b 45 d8	 mov	 eax, DWORD PTR $T3[ebp]
  00005	6a 50		 push	 80			; 00000050H
  00007	59		 pop	 ecx
  00008	f7 e1		 mul	 ecx
  0000a	0f 90 c3	 seto	 bl
  0000d	f7 db		 neg	 ebx
  0000f	0b d8		 or	 ebx, eax
  00011	33 c0		 xor	 eax, eax
  00013	83 c3 04	 add	 ebx, 4
  00016	0f 92 c0	 setb	 al
  00019	f7 d8		 neg	 eax
  0001b	0b c3		 or	 eax, ebx
  0001d	50		 push	 eax
  0001e	ff 75 e8	 push	 DWORD PTR $T6[ebp]
  00021	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00026	59		 pop	 ecx
  00027	59		 pop	 ecx
  00028	c3		 ret	 0
  00029	cc		 int	 3
  0002a	cc		 int	 3
  0002b	cc		 int	 3
  0002c	cc		 int	 3
  0002d	cc		 int	 3
__ehhandler$?Set@?$Pool@VSpherePack@@@@QAEXH@Z:
  0002e	90		 npad	 1
  0002f	90		 npad	 1
  00030	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00034	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00037	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0003a	33 c8		 xor	 ecx, eax
  0003c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00041	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Set@?$Pool@VSpherePack@@@@QAEXH@Z
  00046	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Set@?$Pool@VSpherePack@@@@QAEXH@Z ENDP			; Pool<SpherePack>::Set
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
;	COMDAT ??1?$Pool@VSpherePack@@@@QAE@XZ
_TEXT	SEGMENT
tv83 = -20						; size = 4
tv82 = -16						; size = 4
_this$ = -12						; size = 4
$T1 = -8						; size = 4
$T2 = -4						; size = 4
??1?$Pool@VSpherePack@@@@QAE@XZ PROC			; Pool<SpherePack>::~Pool<SpherePack>, COMDAT
; _this$ = ecx

; 33   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 34   : 		if (mData)

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00010	74 4f		 je	 SHORT $LN3@Pool

; 35   : 			delete [] mData;

  00012	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00018	89 45 fc	 mov	 DWORD PTR $T2[ebp], eax
  0001b	8b 45 fc	 mov	 eax, DWORD PTR $T2[ebp]
  0001e	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  00021	83 7d f8 00	 cmp	 DWORD PTR $T1[ebp], 0
  00025	74 36		 je	 SHORT $LN6@Pool
  00027	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]
  0002a	83 78 fc 00	 cmp	 DWORD PTR [eax-4], 0
  0002e	74 11		 je	 SHORT $LN4@Pool
  00030	6a 03		 push	 3
  00032	8b 45 fc	 mov	 eax, DWORD PTR $T2[ebp]
  00035	8b 00		 mov	 eax, DWORD PTR [eax]
  00037	8b 4d fc	 mov	 ecx, DWORD PTR $T2[ebp]
  0003a	ff 10		 call	 DWORD PTR [eax]
  0003c	89 45 f0	 mov	 DWORD PTR tv82[ebp], eax
  0003f	eb 14		 jmp	 SHORT $LN5@Pool
$LN4@Pool:
  00041	6a 04		 push	 4
  00043	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]
  00046	83 e8 04	 sub	 eax, 4
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  0004f	59		 pop	 ecx
  00050	59		 pop	 ecx
  00051	83 65 f0 00	 and	 DWORD PTR tv82[ebp], 0
$LN5@Pool:
  00055	8b 45 f0	 mov	 eax, DWORD PTR tv82[ebp]
  00058	89 45 ec	 mov	 DWORD PTR tv83[ebp], eax
  0005b	eb 04		 jmp	 SHORT $LN3@Pool
$LN6@Pool:
  0005d	83 65 ec 00	 and	 DWORD PTR tv83[ebp], 0
$LN3@Pool:

; 36   : 	};

  00061	c9		 leave
  00062	c3		 ret	 0
??1?$Pool@VSpherePack@@@@QAE@XZ ENDP			; Pool<SpherePack>::~Pool<SpherePack>
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?Reset@SpherePackFactory@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Reset@SpherePackFactory@@QAEXXZ PROC			; SpherePackFactory::Reset, COMDAT
; _this$ = ecx

; 852  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 853  : 	mRoot->Reset();

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000d	e8 00 00 00 00	 call	 ?Reset@SpherePack@@QAEXXZ ; SpherePack::Reset

; 854  : 	mLeaf->Reset();

  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00018	e8 00 00 00 00	 call	 ?Reset@SpherePack@@QAEXXZ ; SpherePack::Reset

; 855  : }

  0001d	c9		 leave
  0001e	c3		 ret	 0
?Reset@SpherePackFactory@@QAEXXZ ENDP			; SpherePackFactory::Reset
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?VisibilityCallback@SpherePackFactory@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_link$ = -4						; size = 4
_f$ = 8							; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?VisibilityCallback@SpherePackFactory@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z PROC ; SpherePackFactory::VisibilityCallback, COMDAT
; _this$ = ecx

; 871  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 209  : 	void * GetUserData(void) const { return mUserData; };

  00008	8b 45 0c	 mov	 eax, DWORD PTR _sphere$[ebp]
  0000b	8b 40 44	 mov	 eax, DWORD PTR [eax+68]
  0000e	89 45 fc	 mov	 DWORD PTR _link$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 877  : 	if (link) link->VisibilityTest(f,mCallback,state);

  00011	83 7d fc 00	 cmp	 DWORD PTR _link$[ebp], 0
  00015	74 14		 je	 SHORT $LN1@Visibility
  00017	ff 75 10	 push	 DWORD PTR _state$[ebp]
  0001a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	ff 70 0c	 push	 DWORD PTR [eax+12]
  00020	ff 75 08	 push	 DWORD PTR _f$[ebp]
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _link$[ebp]
  00026	e8 00 00 00 00	 call	 ?VisibilityTest@SpherePack@@QAEXABVFrustum@@PAVSpherePackCallback@@W4ViewState@@@Z ; SpherePack::VisibilityTest
$LN1@Visibility:

; 878  : }

  0002b	c9		 leave
  0002c	c2 0c 00	 ret	 12			; 0000000cH
?VisibilityCallback@SpherePackFactory@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ENDP ; SpherePackFactory::VisibilityCallback
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?PointTest2dCallback@SpherePackFactory@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_link$ = -4						; size = 4
_p$ = 8							; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?PointTest2dCallback@SpherePackFactory@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z PROC ; SpherePackFactory::PointTest2dCallback, COMDAT
; _this$ = ecx

; 787  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 209  : 	void * GetUserData(void) const { return mUserData; };

  00008	8b 45 0c	 mov	 eax, DWORD PTR _sphere$[ebp]
  0000b	8b 40 44	 mov	 eax, DWORD PTR [eax+68]
  0000e	89 45 fc	 mov	 DWORD PTR _link$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 793  : 	if (link) link->PointTest2d(p, mCallback,state);

  00011	83 7d fc 00	 cmp	 DWORD PTR _link$[ebp], 0
  00015	74 14		 je	 SHORT $LN1@PointTest2
  00017	ff 75 10	 push	 DWORD PTR _state$[ebp]
  0001a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	ff 70 0c	 push	 DWORD PTR [eax+12]
  00020	ff 75 08	 push	 DWORD PTR _p$[ebp]
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _link$[ebp]
  00026	e8 00 00 00 00	 call	 ?PointTest2d@SpherePack@@QAEXABVVector3d@@PAVSpherePackCallback@@W4ViewState@@@Z ; SpherePack::PointTest2d
$LN1@PointTest2:

; 794  : };

  0002b	c9		 leave
  0002c	c2 0c 00	 ret	 12			; 0000000cH
?PointTest2dCallback@SpherePackFactory@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ENDP ; SpherePackFactory::PointTest2dCallback
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?RangeTestCallback@SpherePackFactory@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_link$ = -4						; size = 4
_p$ = 8							; size = 4
_distance$ = 12						; size = 4
_sphere$ = 16						; size = 4
_state$ = 20						; size = 4
?RangeTestCallback@SpherePackFactory@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z PROC ; SpherePackFactory::RangeTestCallback, COMDAT
; _this$ = ecx

; 777  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 209  : 	void * GetUserData(void) const { return mUserData; };

  00008	8b 45 10	 mov	 eax, DWORD PTR _sphere$[ebp]
  0000b	8b 40 44	 mov	 eax, DWORD PTR [eax+68]
  0000e	89 45 fc	 mov	 DWORD PTR _link$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 783  : 	if (link) link->RangeTest(p,distance,mCallback,state);

  00011	83 7d fc 00	 cmp	 DWORD PTR _link$[ebp], 0
  00015	74 1f		 je	 SHORT $LN2@RangeTestC
  00017	ff 75 14	 push	 DWORD PTR _state$[ebp]
  0001a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	ff 70 0c	 push	 DWORD PTR [eax+12]
  00020	51		 push	 ecx
  00021	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _distance$[ebp]
  00026	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002b	ff 75 08	 push	 DWORD PTR _p$[ebp]
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _link$[ebp]
  00031	e8 00 00 00 00	 call	 ?RangeTest@SpherePack@@QAEXABVVector3d@@MPAVSpherePackCallback@@W4ViewState@@@Z ; SpherePack::RangeTest
$LN2@RangeTestC:

; 784  : };

  00036	c9		 leave
  00037	c2 10 00	 ret	 16			; 00000010H
?RangeTestCallback@SpherePackFactory@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ENDP ; SpherePackFactory::RangeTestCallback
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?RayTraceCallback@SpherePackFactory@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_link$ = -4						; size = 4
_p1$ = 8						; size = 4
_dir$ = 12						; size = 4
_distance$ = 16						; size = 4
___formal$ = 20						; size = 4
_sphere$ = 24						; size = 4
?RayTraceCallback@SpherePackFactory@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z PROC ; SpherePackFactory::RayTraceCallback, COMDAT
; _this$ = ecx

; 839  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 209  : 	void * GetUserData(void) const { return mUserData; };

  00008	8b 45 18	 mov	 eax, DWORD PTR _sphere$[ebp]
  0000b	8b 40 44	 mov	 eax, DWORD PTR [eax+68]
  0000e	89 45 fc	 mov	 DWORD PTR _link$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 845  : 	if (link) link->RayTrace(p1,dir,distance,mCallback);

  00011	83 7d fc 00	 cmp	 DWORD PTR _link$[ebp], 0
  00015	74 1f		 je	 SHORT $LN2@RayTraceCa
  00017	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	ff 70 0c	 push	 DWORD PTR [eax+12]
  0001d	51		 push	 ecx
  0001e	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _distance$[ebp]
  00023	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00028	ff 75 0c	 push	 DWORD PTR _dir$[ebp]
  0002b	ff 75 08	 push	 DWORD PTR _p1$[ebp]
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _link$[ebp]
  00031	e8 00 00 00 00	 call	 ?RayTrace@SpherePack@@QAEXABVVector3d@@0MPAVSpherePackCallback@@@Z ; SpherePack::RayTrace
$LN2@RayTraceCa:

; 846  : };

  00036	c9		 leave
  00037	c2 14 00	 ret	 20			; 00000014H
?RayTraceCallback@SpherePackFactory@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ENDP ; SpherePackFactory::RayTraceCallback
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?PointTest2d@SpherePackFactory@@QAEXABVVector3d@@PAVSpherePackCallback@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_center$ = 8						; size = 4
_callback$ = 12						; size = 4
?PointTest2d@SpherePackFactory@@QAEXABVVector3d@@PAVSpherePackCallback@@@Z PROC ; SpherePackFactory::PointTest2d, COMDAT
; _this$ = ecx

; 671  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 672  : #ifdef __STATIC_RANGE__
; 673  : 	if (!center.IsInStaticRange())
; 674  : 	{
; 675  : 		TraceError("SpherePackFactory::RangeTest2d - RANGE ERROR %f, %f, %f",
; 676  : 			center.x, center.y, center.z);
; 677  : 		assert("SpherePackFactory::RangeTest2d - RANGE ERROR");
; 678  : 		return;
; 679  : 	}
; 680  : #endif
; 681  : 	mCallback = callback;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR _callback$[ebp]
  0000d	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 682  : 
; 683  : #ifdef SPHERELIB_STRICT
; 684  : 	mRoot->PointTest2d(center, this,VS_PARTIAL);
; 685  : 	extern bool MAPOUTDOOR_GET_HEIGHT_TRACE;
; 686  : 	if (MAPOUTDOOR_GET_HEIGHT_TRACE)
; 687  : 		puts("================================================");
; 688  : #else
; 689  : 	mRoot->PointTest2d(center, this,VS_PARTIAL);

  00010	6a 01		 push	 1
  00012	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  00015	ff 75 08	 push	 DWORD PTR _center$[ebp]
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001e	e8 00 00 00 00	 call	 ?PointTest2d@SpherePack@@QAEXABVVector3d@@PAVSpherePackCallback@@W4ViewState@@@Z ; SpherePack::PointTest2d

; 690  : 	
; 691  : #endif
; 692  : 	
; 693  : }

  00023	c9		 leave
  00024	c2 08 00	 ret	 8
?PointTest2d@SpherePackFactory@@QAEXABVVector3d@@PAVSpherePackCallback@@@Z ENDP ; SpherePackFactory::PointTest2d
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?RangeTest@SpherePackFactory@@QAEXABVVector3d@@MPAVSpherePackCallback@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_center$ = 8						; size = 4
_radius$ = 12						; size = 4
_callback$ = 16						; size = 4
?RangeTest@SpherePackFactory@@QAEXABVVector3d@@MPAVSpherePackCallback@@@Z PROC ; SpherePackFactory::RangeTest, COMDAT
; _this$ = ecx

; 656  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 657  : #ifdef __STATIC_RANGE__
; 658  : 	if (!center.IsInStaticRange())
; 659  : 	{
; 660  : 		TraceError("SpherePackFactory::RangeTest - RANGE ERROR %f, %f, %f",
; 661  : 			center.x, center.y, center.z);
; 662  : 		assert("SpherePackFactory::RangeTest - RANGE ERROR");
; 663  : 		return;
; 664  : 	}
; 665  : #endif
; 666  : 	mCallback = callback;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 10	 mov	 ecx, DWORD PTR _callback$[ebp]
  0000d	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 667  : 	mRoot->RangeTest(center,radius,this,VS_PARTIAL);

  00010	6a 01		 push	 1
  00012	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  00015	51		 push	 ecx
  00016	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _radius$[ebp]
  0001b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00020	ff 75 08	 push	 DWORD PTR _center$[ebp]
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00029	e8 00 00 00 00	 call	 ?RangeTest@SpherePack@@QAEXABVVector3d@@MPAVSpherePackCallback@@W4ViewState@@@Z ; SpherePack::RangeTest

; 668  : }

  0002e	c9		 leave
  0002f	c2 0c 00	 ret	 12			; 0000000cH
?RangeTest@SpherePackFactory@@QAEXABVVector3d@@MPAVSpherePackCallback@@@Z ENDP ; SpherePackFactory::RangeTest
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?RayTrace@SpherePackFactory@@QAEXABVVector3d@@0PAVSpherePackCallback@@@Z
_TEXT	SEGMENT
_dist$ = -24						; size = 4
_this$ = -20						; size = 4
_dir$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_p1$ = 8						; size = 4
_p2$ = 12						; size = 4
_callback$ = 16						; size = 4
?RayTrace@SpherePackFactory@@QAEXABVVector3d@@0PAVSpherePackCallback@@@Z PROC ; SpherePackFactory::RayTrace, COMDAT
; _this$ = ecx

; 645  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 30   : 		x = a.x;

  00013	8b 45 0c	 mov	 eax, DWORD PTR _p2$[ebp]
  00016	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0001a	f3 0f 11 45 f0	 movss	 DWORD PTR _dir$[ebp], xmm0

; 31   : 		y = a.y;

  0001f	8b 45 0c	 mov	 eax, DWORD PTR _p2$[ebp]
  00022	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00027	f3 0f 11 45 f4	 movss	 DWORD PTR _dir$[ebp+4], xmm0

; 32   : 		z = a.z;

  0002c	8b 45 0c	 mov	 eax, DWORD PTR _p2$[ebp]
  0002f	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00034	f3 0f 11 45 f8	 movss	 DWORD PTR _dir$[ebp+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 648  : 	float dist = dir.Normalize();

  00039	8d 4d f0	 lea	 ecx, DWORD PTR _dir$[ebp]
  0003c	e8 00 00 00 00	 call	 ?Normalize@Vector3d@@QAEMXZ ; Vector3d::Normalize
  00041	d9 5d e8	 fstp	 DWORD PTR _dist$[ebp]

; 649  : 	mCallback = callback;

  00044	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 4d 10	 mov	 ecx, DWORD PTR _callback$[ebp]
  0004a	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 650  : 	mRoot->RayTrace(p1,dir,dist,this);

  0004d	ff 75 ec	 push	 DWORD PTR _this$[ebp]
  00050	51		 push	 ecx
  00051	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _dist$[ebp]
  00056	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005b	8d 45 f0	 lea	 eax, DWORD PTR _dir$[ebp]
  0005e	50		 push	 eax
  0005f	ff 75 08	 push	 DWORD PTR _p1$[ebp]
  00062	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00065	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00068	e8 00 00 00 00	 call	 ?RayTrace@SpherePack@@QAEXABVVector3d@@0MPAVSpherePackCallback@@@Z ; SpherePack::RayTrace

; 651  : }

  0006d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00070	33 cd		 xor	 ecx, ebp
  00072	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00077	c9		 leave
  00078	c2 0c 00	 ret	 12			; 0000000cH
?RayTrace@SpherePackFactory@@QAEXABVVector3d@@0PAVSpherePackCallback@@@Z ENDP ; SpherePackFactory::RayTrace
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?FrustumTest@SpherePackFactory@@QAEXABVFrustum@@PAVSpherePackCallback@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_f$ = 8							; size = 4
_callback$ = 12						; size = 4
?FrustumTest@SpherePackFactory@@QAEXABVFrustum@@PAVSpherePackCallback@@@Z PROC ; SpherePackFactory::FrustumTest, COMDAT
; _this$ = ecx

; 554  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 555  : 	// test case here, just traverse children.
; 556  : 	mCallback = callback;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR _callback$[ebp]
  0000d	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 557  : 	mRoot->VisibilityTest(f,this,VS_PARTIAL);

  00010	6a 01		 push	 1
  00012	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  00015	ff 75 08	 push	 DWORD PTR _f$[ebp]
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001e	e8 00 00 00 00	 call	 ?VisibilityTest@SpherePack@@QAEXABVFrustum@@PAVSpherePackCallback@@W4ViewState@@@Z ; SpherePack::VisibilityTest

; 558  : }

  00023	c9		 leave
  00024	c2 08 00	 ret	 8
?FrustumTest@SpherePackFactory@@QAEXABVFrustum@@PAVSpherePackCallback@@@Z ENDP ; SpherePackFactory::FrustumTest
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?Remove@SpherePackFactory@@QAEXPAVSpherePack@@@Z
_TEXT	SEGMENT
_link$1 = -12						; size = 4
_this$ = -8						; size = 4
$T2 = -3						; size = 1
$T3 = -2						; size = 1
$T4 = -1						; size = 1
_pack$ = 8						; size = 4
?Remove@SpherePackFactory@@QAEXPAVSpherePack@@@Z PROC	; SpherePackFactory::Remove, COMDAT
; _this$ = ecx

; 367  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  00009	8b 45 08	 mov	 eax, DWORD PTR _pack$[ebp]
  0000c	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  0000f	83 e0 08	 and	 eax, 8
  00012	74 06		 je	 SHORT $LN6@Remove
  00014	c6 45 ff 01	 mov	 BYTE PTR $T4[ebp], 1
  00018	eb 04		 jmp	 SHORT $LN5@Remove
$LN6@Remove:

; 134  : 		return false;

  0001a	c6 45 ff 00	 mov	 BYTE PTR $T4[ebp], 0
$LN5@Remove:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 369  : 	if (pack->HasSpherePackFlag(SPF_ROOTNODE)) return; // CAN NEVER REMOVE THE ROOT NODE EVER!!!

  0001e	0f b6 45 ff	 movzx	 eax, BYTE PTR $T4[ebp]
  00022	85 c0		 test	 eax, eax
  00024	74 02		 je	 SHORT $LN2@Remove
  00026	eb 64		 jmp	 SHORT $LN1@Remove
$LN2@Remove:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  00028	8b 45 08	 mov	 eax, DWORD PTR _pack$[ebp]
  0002b	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  0002e	83 e0 01	 and	 eax, 1
  00031	74 06		 je	 SHORT $LN9@Remove
  00033	c6 45 fe 01	 mov	 BYTE PTR $T3[ebp], 1
  00037	eb 04		 jmp	 SHORT $LN8@Remove
$LN9@Remove:

; 134  : 		return false;

  00039	c6 45 fe 00	 mov	 BYTE PTR $T3[ebp], 0
$LN8@Remove:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 371  : 	if (pack->HasSpherePackFlag(SPF_SUPERSPHERE) && pack->HasSpherePackFlag(SPF_LEAF_TREE))

  0003d	0f b6 45 fe	 movzx	 eax, BYTE PTR $T3[ebp]
  00041	85 c0		 test	 eax, eax
  00043	74 31		 je	 SHORT $LN3@Remove
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  00045	8b 45 08	 mov	 eax, DWORD PTR _pack$[ebp]
  00048	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  0004b	83 e0 04	 and	 eax, 4
  0004e	74 06		 je	 SHORT $LN12@Remove
  00050	c6 45 fd 01	 mov	 BYTE PTR $T2[ebp], 1
  00054	eb 04		 jmp	 SHORT $LN11@Remove
$LN12@Remove:

; 134  : 		return false;

  00056	c6 45 fd 00	 mov	 BYTE PTR $T2[ebp], 0
$LN11@Remove:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 371  : 	if (pack->HasSpherePackFlag(SPF_SUPERSPHERE) && pack->HasSpherePackFlag(SPF_LEAF_TREE))

  0005a	0f b6 45 fd	 movzx	 eax, BYTE PTR $T2[ebp]
  0005e	85 c0		 test	 eax, eax
  00060	74 14		 je	 SHORT $LN3@Remove
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 209  : 	void * GetUserData(void) const { return mUserData; };

  00062	8b 45 08	 mov	 eax, DWORD PTR _pack$[ebp]
  00065	8b 40 44	 mov	 eax, DWORD PTR [eax+68]
  00068	89 45 f4	 mov	 DWORD PTR _link$1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 379  : 		Remove(link);

  0006b	ff 75 f4	 push	 DWORD PTR _link$1[ebp]
  0006e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00071	e8 00 00 00 00	 call	 ?Remove@SpherePackFactory@@QAEXPAVSpherePack@@@Z ; SpherePackFactory::Remove
$LN3@Remove:

; 380  : 	}
; 381  : 	
; 382  : 	pack->Unlink();

  00076	8b 4d 08	 mov	 ecx, DWORD PTR _pack$[ebp]
  00079	e8 00 00 00 00	 call	 ?Unlink@SpherePack@@QAEXXZ ; SpherePack::Unlink

; 383  : 	
; 384  : 	mSpheres.Release(pack);

  0007e	ff 75 08	 push	 DWORD PTR _pack$[ebp]
  00081	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00084	83 c1 10	 add	 ecx, 16			; 00000010H
  00087	e8 00 00 00 00	 call	 ?Release@?$Pool@VSpherePack@@@@QAEXPAVSpherePack@@@Z ; Pool<SpherePack>::Release
$LN1@Remove:

; 385  : }

  0008c	c9		 leave
  0008d	c2 04 00	 ret	 4
?Remove@SpherePackFactory@@QAEXPAVSpherePack@@@Z ENDP	; SpherePackFactory::Remove
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?Render@SpherePackFactory@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Render@SpherePackFactory@@QAEXXZ PROC			; SpherePackFactory::Render, COMDAT
; _this$ = ecx

; 172  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 173  : #if DEMO
; 174  : 	mRoot->Render(mRoot->GetColor());
; 175  : 	mLeaf->Render(mLeaf->GetColor());
; 176  : #endif
; 177  : }

  00007	c9		 leave
  00008	c3		 ret	 0
?Render@SpherePackFactory@@QAEXXZ ENDP			; SpherePackFactory::Render
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?Integrate@SpherePackFactory@@QAEXPAVSpherePack@@0M@Z
_TEXT	SEGMENT
_link$1 = -116						; size = 4
$T2 = -112						; size = 4
$T3 = -108						; size = 4
_link$4 = -104						; size = 4
$T5 = -100						; size = 4
$T6 = -96						; size = 4
_link$7 = -92						; size = 4
$T8 = -88						; size = 4
$T9 = -84						; size = 4
$T10 = -80						; size = 4
$T11 = -76						; size = 4
_d$12 = -72						; size = 4
$T13 = -68						; size = 4
$T14 = -64						; size = 4
$T15 = -60						; size = 4
$T16 = -56						; size = 4
$T17 = -52						; size = 4
_neardist2$ = -48					; size = 4
_d$18 = -44						; size = 4
_neardist1$ = -40					; size = 4
_newsize$19 = -36					; size = 4
_dist$20 = -32						; size = 4
_this$ = -28						; size = 4
_nearest1$ = -24					; size = 4
$T21 = -19						; size = 1
$T22 = -18						; size = 1
_newsphere$23 = -17					; size = 1
$T24 = -16						; size = 1
$T25 = -15						; size = 1
$T26 = -14						; size = 1
$T27 = -13						; size = 1
_nearest2$ = -12					; size = 4
_search$ = -8						; size = 4
_parent$28 = -4						; size = 4
_pack$ = 8						; size = 4
_supersphere$ = 12					; size = 4
_node_size$ = 16					; size = 4
?Integrate@SpherePackFactory@@QAEXPAVSpherePack@@0M@Z PROC ; SpherePackFactory::Integrate, COMDAT
; _this$ = ecx

; 400  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 201  : 	SpherePack * GetChildren(void)    const { return mChildren; }

  00009	8b 45 0c	 mov	 eax, DWORD PTR _supersphere$[ebp]
  0000c	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  0000f	89 45 f8	 mov	 DWORD PTR _search$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 406  : 	SpherePack *nearest1 = 0;  // nearest supersphere we are completely

  00012	83 65 e8 00	 and	 DWORD PTR _nearest1$[ebp], 0

; 407  : 	float neardist1 = 1e38f;     // enclosed within

  00016	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@7e967699
  0001e	f3 0f 11 45 d8	 movss	 DWORD PTR _neardist1$[ebp], xmm0

; 408  : 	
; 409  : 	SpherePack *nearest2 = 0; // supersphere we must grow the least to

  00023	83 65 f4 00	 and	 DWORD PTR _nearest2$[ebp], 0

; 410  : 	float neardist2 = 1e38f;    // add ourselves to.

  00027	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@7e967699
  0002f	f3 0f 11 45 d0	 movss	 DWORD PTR _neardist2$[ebp], xmm0
$LN2@Integrate:

; 411  : 	
; 412  : 	//int scount = 1;
; 413  : 	
; 414  : 	while (search)

  00034	83 7d f8 00	 cmp	 DWORD PTR _search$[ebp], 0
  00038	0f 84 69 01 00
	00		 je	 $LN3@Integrate
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  0003e	8b 45 f8	 mov	 eax, DWORD PTR _search$[ebp]
  00041	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00044	83 e0 01	 and	 eax, 1
  00047	74 06		 je	 SHORT $LN26@Integrate
  00049	c6 45 f3 01	 mov	 BYTE PTR $T27[ebp], 1
  0004d	eb 04		 jmp	 SHORT $LN25@Integrate
$LN26@Integrate:

; 134  : 		return false;

  0004f	c6 45 f3 00	 mov	 BYTE PTR $T27[ebp], 0
$LN25@Integrate:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 416  : 		if (search->HasSpherePackFlag(SPF_SUPERSPHERE) && !search->HasSpherePackFlag(SPF_ROOTNODE) && search->GetChildCount())

  00053	0f b6 45 f3	 movzx	 eax, BYTE PTR $T27[ebp]
  00057	85 c0		 test	 eax, eax
  00059	0f 84 3a 01 00
	00		 je	 $LN11@Integrate
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  0005f	8b 45 f8	 mov	 eax, DWORD PTR _search$[ebp]
  00062	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00065	83 e0 08	 and	 eax, 8
  00068	74 06		 je	 SHORT $LN29@Integrate
  0006a	c6 45 f2 01	 mov	 BYTE PTR $T26[ebp], 1
  0006e	eb 04		 jmp	 SHORT $LN28@Integrate
$LN29@Integrate:

; 134  : 		return false;

  00070	c6 45 f2 00	 mov	 BYTE PTR $T26[ebp], 0
$LN28@Integrate:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 416  : 		if (search->HasSpherePackFlag(SPF_SUPERSPHERE) && !search->HasSpherePackFlag(SPF_ROOTNODE) && search->GetChildCount())

  00074	0f b6 45 f2	 movzx	 eax, BYTE PTR $T26[ebp]
  00078	85 c0		 test	 eax, eax
  0007a	0f 85 19 01 00
	00		 jne	 $LN11@Integrate
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 223  : 	int GetChildCount(void) const { return mChildCount; };

  00080	8b 45 f8	 mov	 eax, DWORD PTR _search$[ebp]
  00083	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]
  00086	89 45 cc	 mov	 DWORD PTR $T17[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 416  : 		if (search->HasSpherePackFlag(SPF_SUPERSPHERE) && !search->HasSpherePackFlag(SPF_ROOTNODE) && search->GetChildCount())

  00089	83 7d cc 00	 cmp	 DWORD PTR $T17[ebp], 0
  0008d	0f 84 06 01 00
	00		 je	 $LN11@Integrate
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 212  : 	float DistanceSquared(const SpherePack *pack) const { return mCenter.DistanceSq( pack->mCenter );  };

  00093	8b 45 f8	 mov	 eax, DWORD PTR _search$[ebp]
  00096	83 c0 04	 add	 eax, 4
  00099	50		 push	 eax
  0009a	8b 4d 08	 mov	 ecx, DWORD PTR _pack$[ebp]
  0009d	83 c1 04	 add	 ecx, 4
  000a0	e8 00 00 00 00	 call	 ?DistanceSq@Vector3d@@QBEMABV1@@Z ; Vector3d::DistanceSq
  000a5	d9 5d c8	 fstp	 DWORD PTR $T16[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 419  : 			float dist = pack->DistanceSquared(search);

  000a8	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR $T16[ebp]
  000ad	f3 0f 11 45 e0	 movss	 DWORD PTR _dist$20[ebp], xmm0

; 420  : 			
; 421  : 			if (nearest1)

  000b2	83 7d e8 00	 cmp	 DWORD PTR _nearest1$[ebp], 0
  000b6	74 67		 je	 SHORT $LN5@Integrate

; 422  : 			{
; 423  : 				if (dist < neardist1)

  000b8	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _neardist1$[ebp]
  000bd	0f 2f 45 e0	 comiss	 xmm0, DWORD PTR _dist$20[ebp]
  000c1	76 5a		 jbe	 SHORT $LN8@Integrate
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  000c3	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _dist$20[ebp]
  000c8	51		 push	 ecx
  000c9	51		 push	 ecx
  000ca	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000cf	e8 00 00 00 00	 call	 _sqrt
  000d4	59		 pop	 ecx
  000d5	59		 pop	 ecx
  000d6	d9 5d c4	 fstp	 DWORD PTR $T15[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 45   : 	float GetRadius(void) const { return mRadius; };

  000d9	8b 45 08	 mov	 eax, DWORD PTR _pack$[ebp]
  000dc	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  000e1	f3 0f 11 45 c0	 movss	 DWORD PTR $T14[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 426  : 					float d = sqrtf(dist)+pack->GetRadius();

  000e6	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR $T15[ebp]
  000eb	f3 0f 58 45 c0	 addss	 xmm0, DWORD PTR $T14[ebp]
  000f0	f3 0f 11 45 b8	 movss	 DWORD PTR _d$12[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 45   : 	float GetRadius(void) const { return mRadius; };

  000f5	8b 45 f8	 mov	 eax, DWORD PTR _search$[ebp]
  000f8	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  000fd	f3 0f 11 45 bc	 movss	 DWORD PTR $T13[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 428  : 					if (d <= search->GetRadius())

  00102	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR $T13[ebp]
  00107	0f 2f 45 b8	 comiss	 xmm0, DWORD PTR _d$12[ebp]
  0010b	72 10		 jb	 SHORT $LN8@Integrate

; 429  : 					{
; 430  : 						neardist1 = dist;

  0010d	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _dist$20[ebp]
  00112	f3 0f 11 45 d8	 movss	 DWORD PTR _neardist1$[ebp], xmm0

; 431  : 						nearest1  = search;

  00117	8b 45 f8	 mov	 eax, DWORD PTR _search$[ebp]
  0011a	89 45 e8	 mov	 DWORD PTR _nearest1$[ebp], eax
$LN8@Integrate:

; 432  : 					}
; 433  : 				}
; 434  : 			}

  0011d	eb 7a		 jmp	 SHORT $LN11@Integrate
$LN5@Integrate:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  0011f	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _dist$20[ebp]
  00124	51		 push	 ecx
  00125	51		 push	 ecx
  00126	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0012b	e8 00 00 00 00	 call	 _sqrt
  00130	59		 pop	 ecx
  00131	59		 pop	 ecx
  00132	d9 5d b4	 fstp	 DWORD PTR $T11[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 45   : 	float GetRadius(void) const { return mRadius; };

  00135	8b 45 08	 mov	 eax, DWORD PTR _pack$[ebp]
  00138	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  0013d	f3 0f 11 45 b0	 movss	 DWORD PTR $T10[ebp], xmm0
  00142	8b 45 f8	 mov	 eax, DWORD PTR _search$[ebp]
  00145	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  0014a	f3 0f 11 45 ac	 movss	 DWORD PTR $T9[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 438  : 				float d = (sqrtf(dist) + pack->GetRadius())-search->GetRadius();

  0014f	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR $T11[ebp]
  00154	f3 0f 58 45 b0	 addss	 xmm0, DWORD PTR $T10[ebp]
  00159	f3 0f 5c 45 ac	 subss	 xmm0, DWORD PTR $T9[ebp]
  0015e	f3 0f 11 45 d4	 movss	 DWORD PTR _d$18[ebp], xmm0

; 439  : 				
; 440  : 				if (d < neardist2)

  00163	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _neardist2$[ebp]
  00168	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _d$18[ebp]
  0016c	76 2b		 jbe	 SHORT $LN11@Integrate

; 441  : 				{
; 442  : 					if (d < 0)

  0016e	0f 57 c0	 xorps	 xmm0, xmm0
  00171	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _d$18[ebp]
  00175	76 12		 jbe	 SHORT $LN10@Integrate

; 443  : 					{
; 444  : 						neardist1 = dist;

  00177	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _dist$20[ebp]
  0017c	f3 0f 11 45 d8	 movss	 DWORD PTR _neardist1$[ebp], xmm0

; 445  : 						nearest1  = search;

  00181	8b 45 f8	 mov	 eax, DWORD PTR _search$[ebp]
  00184	89 45 e8	 mov	 DWORD PTR _nearest1$[ebp], eax

; 446  : 					}

  00187	eb 10		 jmp	 SHORT $LN11@Integrate
$LN10@Integrate:

; 447  : 					else
; 448  : 					{
; 449  : 						neardist2 = d;

  00189	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _d$18[ebp]
  0018e	f3 0f 11 45 d0	 movss	 DWORD PTR _neardist2$[ebp], xmm0

; 450  : 						nearest2  = search;

  00193	8b 45 f8	 mov	 eax, DWORD PTR _search$[ebp]
  00196	89 45 f4	 mov	 DWORD PTR _nearest2$[ebp], eax
$LN11@Integrate:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 195  : 		return mNextSibling; 

  00199	8b 45 f8	 mov	 eax, DWORD PTR _search$[ebp]
  0019c	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  0019f	89 45 f8	 mov	 DWORD PTR _search$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 456  : 	}

  001a2	e9 8d fe ff ff	 jmp	 $LN2@Integrate
$LN3@Integrate:

; 457  : 	
; 458  : 	// ok...now..on exit let's see what we got.
; 459  : 	if (nearest1)

  001a7	83 7d e8 00	 cmp	 DWORD PTR _nearest1$[ebp], 0
  001ab	0f 84 86 00 00
	00		 je	 $LN12@Integrate

; 460  : 	{
; 461  : 		// if we are inside an existing supersphere, we are all good!
; 462  : 		// we need to detach item from wherever it is, and then add it to
; 463  : 		// this supersphere as a child.
; 464  : 		pack->Unlink();

  001b1	8b 4d 08	 mov	 ecx, DWORD PTR _pack$[ebp]
  001b4	e8 00 00 00 00	 call	 ?Unlink@SpherePack@@QAEXXZ ; SpherePack::Unlink

; 465  : 		nearest1->AddChild(pack);

  001b9	ff 75 08	 push	 DWORD PTR _pack$[ebp]
  001bc	8b 4d e8	 mov	 ecx, DWORD PTR _nearest1$[ebp]
  001bf	e8 00 00 00 00	 call	 ?AddChild@SpherePack@@QAEXPAV1@@Z ; SpherePack::AddChild

; 466  : 		pack->ComputeBindingDistance(nearest1);

  001c4	ff 75 e8	 push	 DWORD PTR _nearest1$[ebp]
  001c7	8b 4d 08	 mov	 ecx, DWORD PTR _pack$[ebp]
  001ca	e8 00 00 00 00	 call	 ?ComputeBindingDistance@SpherePack@@QAEXPAV1@@Z ; SpherePack::ComputeBindingDistance

; 467  : 		nearest1->Recompute(mSuperSphereGravy);

  001cf	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  001d2	51		 push	 ecx
  001d3	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  001d8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001dd	8b 4d e8	 mov	 ecx, DWORD PTR _nearest1$[ebp]
  001e0	e8 00 00 00 00	 call	 ?Recompute@SpherePack@@QAE_NM@Z ; SpherePack::Recompute
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  001e5	8b 45 e8	 mov	 eax, DWORD PTR _nearest1$[ebp]
  001e8	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  001eb	83 e0 04	 and	 eax, 4
  001ee	74 06		 je	 SHORT $LN74@Integrate
  001f0	c6 45 f1 01	 mov	 BYTE PTR $T25[ebp], 1
  001f4	eb 04		 jmp	 SHORT $LN73@Integrate
$LN74@Integrate:

; 134  : 		return false;

  001f6	c6 45 f1 00	 mov	 BYTE PTR $T25[ebp], 0
$LN73@Integrate:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 469  : 		if (nearest1->HasSpherePackFlag(SPF_LEAF_TREE))

  001fa	0f b6 45 f1	 movzx	 eax, BYTE PTR $T25[ebp]
  001fe	85 c0		 test	 eax, eax
  00200	74 30		 je	 SHORT $LN14@Integrate
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 209  : 	void * GetUserData(void) const { return mUserData; };

  00202	8b 45 e8	 mov	 eax, DWORD PTR _nearest1$[ebp]
  00205	8b 40 44	 mov	 eax, DWORD PTR [eax+68]
  00208	89 45 a4	 mov	 DWORD PTR _link$7[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 45   : 	float GetRadius(void) const { return mRadius; };

  0020b	8b 45 e8	 mov	 eax, DWORD PTR _nearest1$[ebp]
  0020e	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00213	f3 0f 11 45 a8	 movss	 DWORD PTR $T8[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 476  : 			link->NewPosRadius(nearest1->GetPos(), nearest1->GetRadius());

  00218	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR $T8[ebp]
  0021d	51		 push	 ecx
  0021e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 217  : 	const Vector3d& GetPos(void) const { return mCenter; };

  00223	8b 45 e8	 mov	 eax, DWORD PTR _nearest1$[ebp]
  00226	83 c0 04	 add	 eax, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 476  : 			link->NewPosRadius(nearest1->GetPos(), nearest1->GetRadius());

  00229	50		 push	 eax
  0022a	8b 4d a4	 mov	 ecx, DWORD PTR _link$7[ebp]
  0022d	e8 00 00 00 00	 call	 ?NewPosRadius@SpherePack@@QAEXABVVector3d@@M@Z ; SpherePack::NewPosRadius
$LN14@Integrate:

; 477  : 		}
; 478  : 		
; 479  : 	}

  00232	e9 1e 02 00 00	 jmp	 $LN190@Integrate
$LN12@Integrate:

; 480  : 	else
; 481  : 	{
; 482  : 		bool newsphere = true;

  00237	c6 45 ef 01	 mov	 BYTE PTR _newsphere$23[ebp], 1

; 483  : 		
; 484  : 		if (nearest2)

  0023b	83 7d f4 00	 cmp	 DWORD PTR _nearest2$[ebp], 0
  0023f	0f 84 d7 00 00
	00		 je	 $LN16@Integrate
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 45   : 	float GetRadius(void) const { return mRadius; };

  00245	8b 45 f4	 mov	 eax, DWORD PTR _nearest2$[ebp]
  00248	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  0024d	f3 0f 11 45 a0	 movss	 DWORD PTR $T6[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 486  : 			float newsize = neardist2 + nearest2->GetRadius() + mSuperSphereGravy;

  00252	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR $T6[ebp]
  00257	f3 0f 58 45 d0	 addss	 xmm0, DWORD PTR _neardist2$[ebp]
  0025c	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  0025f	f3 0f 58 40 3c	 addss	 xmm0, DWORD PTR [eax+60]
  00264	f3 0f 11 45 dc	 movss	 DWORD PTR _newsize$19[ebp], xmm0

; 487  : 			
; 488  : 			if (newsize <= node_size)

  00269	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _node_size$[ebp]
  0026e	0f 2f 45 dc	 comiss	 xmm0, DWORD PTR _newsize$19[ebp]
  00272	0f 82 a4 00 00
	00		 jb	 $LN16@Integrate

; 489  : 			{
; 490  : 				pack->Unlink();

  00278	8b 4d 08	 mov	 ecx, DWORD PTR _pack$[ebp]
  0027b	e8 00 00 00 00	 call	 ?Unlink@SpherePack@@QAEXXZ ; SpherePack::Unlink
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 67   : 		mRadius = radius;

  00280	8b 45 f4	 mov	 eax, DWORD PTR _nearest2$[ebp]
  00283	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _newsize$19[ebp]
  00288	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 68   : 		mRadius2 = radius*radius;

  0028d	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _newsize$19[ebp]
  00292	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _newsize$19[ebp]
  00297	8b 45 f4	 mov	 eax, DWORD PTR _nearest2$[ebp]
  0029a	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 493  : 				nearest2->AddChild(pack);

  0029f	ff 75 08	 push	 DWORD PTR _pack$[ebp]
  002a2	8b 4d f4	 mov	 ecx, DWORD PTR _nearest2$[ebp]
  002a5	e8 00 00 00 00	 call	 ?AddChild@SpherePack@@QAEXPAV1@@Z ; SpherePack::AddChild

; 494  : 				nearest2->Recompute(mSuperSphereGravy);

  002aa	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  002ad	51		 push	 ecx
  002ae	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  002b3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002b8	8b 4d f4	 mov	 ecx, DWORD PTR _nearest2$[ebp]
  002bb	e8 00 00 00 00	 call	 ?Recompute@SpherePack@@QAE_NM@Z ; SpherePack::Recompute

; 495  : 				pack->ComputeBindingDistance(nearest2);

  002c0	ff 75 f4	 push	 DWORD PTR _nearest2$[ebp]
  002c3	8b 4d 08	 mov	 ecx, DWORD PTR _pack$[ebp]
  002c6	e8 00 00 00 00	 call	 ?ComputeBindingDistance@SpherePack@@QAEXPAV1@@Z ; SpherePack::ComputeBindingDistance
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  002cb	8b 45 f4	 mov	 eax, DWORD PTR _nearest2$[ebp]
  002ce	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  002d1	83 e0 04	 and	 eax, 4
  002d4	74 06		 je	 SHORT $LN111@Integrate
  002d6	c6 45 f0 01	 mov	 BYTE PTR $T24[ebp], 1
  002da	eb 04		 jmp	 SHORT $LN110@Integrate
$LN111@Integrate:

; 134  : 		return false;

  002dc	c6 45 f0 00	 mov	 BYTE PTR $T24[ebp], 0
$LN110@Integrate:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 497  : 				if (nearest2->HasSpherePackFlag(SPF_LEAF_TREE))

  002e0	0f b6 45 f0	 movzx	 eax, BYTE PTR $T24[ebp]
  002e4	85 c0		 test	 eax, eax
  002e6	74 30		 je	 SHORT $LN17@Integrate
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 209  : 	void * GetUserData(void) const { return mUserData; };

  002e8	8b 45 f4	 mov	 eax, DWORD PTR _nearest2$[ebp]
  002eb	8b 40 44	 mov	 eax, DWORD PTR [eax+68]
  002ee	89 45 98	 mov	 DWORD PTR _link$4[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 45   : 	float GetRadius(void) const { return mRadius; };

  002f1	8b 45 f4	 mov	 eax, DWORD PTR _nearest2$[ebp]
  002f4	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  002f9	f3 0f 11 45 9c	 movss	 DWORD PTR $T5[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 504  : 					link->NewPosRadius(nearest2->GetPos(), nearest2->GetRadius());

  002fe	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR $T5[ebp]
  00303	51		 push	 ecx
  00304	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 217  : 	const Vector3d& GetPos(void) const { return mCenter; };

  00309	8b 45 f4	 mov	 eax, DWORD PTR _nearest2$[ebp]
  0030c	83 c0 04	 add	 eax, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 504  : 					link->NewPosRadius(nearest2->GetPos(), nearest2->GetRadius());

  0030f	50		 push	 eax
  00310	8b 4d 98	 mov	 ecx, DWORD PTR _link$4[ebp]
  00313	e8 00 00 00 00	 call	 ?NewPosRadius@SpherePack@@QAEXABVVector3d@@M@Z ; SpherePack::NewPosRadius
$LN17@Integrate:

; 505  : 				}
; 506  : 				
; 507  : 				newsphere = false;

  00318	c6 45 ef 00	 mov	 BYTE PTR _newsphere$23[ebp], 0
$LN16@Integrate:

; 508  : 				
; 509  : 			}
; 510  : 			
; 511  : 		}
; 512  : 		
; 513  : 		if (newsphere)

  0031c	0f b6 45 ef	 movzx	 eax, BYTE PTR _newsphere$23[ebp]
  00320	85 c0		 test	 eax, eax
  00322	0f 84 2d 01 00
	00		 je	 $LN190@Integrate

; 514  : 		{
; 515  : 			assert(supersphere->HasSpherePackFlag(SPF_ROOTNODE));
; 516  : 			// we are going to create a new superesphere around this guy!
; 517  : 			pack->Unlink();

  00328	8b 4d 08	 mov	 ecx, DWORD PTR _pack$[ebp]
  0032b	e8 00 00 00 00	 call	 ?Unlink@SpherePack@@QAEXXZ ; SpherePack::Unlink

; 518  : 			
; 519  : 			SpherePack *parent = mSpheres.GetFreeLink();

  00330	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00333	83 c1 10	 add	 ecx, 16			; 00000010H
  00336	e8 00 00 00 00	 call	 ?GetFreeLink@?$Pool@VSpherePack@@@@QAEPAVSpherePack@@XZ ; Pool<SpherePack>::GetFreeLink
  0033b	89 45 fc	 mov	 DWORD PTR _parent$28[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 45   : 	float GetRadius(void) const { return mRadius; };

  0033e	8b 45 08	 mov	 eax, DWORD PTR _pack$[ebp]
  00341	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00346	f3 0f 11 45 94	 movss	 DWORD PTR $T3[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 521  : 			parent->Init(this, pack->GetPos(), pack->GetRadius()+mSuperSphereGravy, 0, false);

  0034b	6a 00		 push	 0
  0034d	6a 00		 push	 0
  0034f	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR $T3[ebp]
  00354	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00357	f3 0f 58 40 3c	 addss	 xmm0, DWORD PTR [eax+60]
  0035c	51		 push	 ecx
  0035d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 217  : 	const Vector3d& GetPos(void) const { return mCenter; };

  00362	8b 45 08	 mov	 eax, DWORD PTR _pack$[ebp]
  00365	83 c0 04	 add	 eax, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 521  : 			parent->Init(this, pack->GetPos(), pack->GetRadius()+mSuperSphereGravy, 0, false);

  00368	50		 push	 eax
  00369	ff 75 e4	 push	 DWORD PTR _this$[ebp]
  0036c	8b 4d fc	 mov	 ecx, DWORD PTR _parent$28[ebp]
  0036f	e8 00 00 00 00	 call	 ?Init@SpherePack@@QAEXPAVSpherePackFactory@@ABVVector3d@@MPAX_N@Z ; SpherePack::Init
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  00374	8b 45 0c	 mov	 eax, DWORD PTR _supersphere$[ebp]
  00377	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  0037a	83 e0 02	 and	 eax, 2
  0037d	74 06		 je	 SHORT $LN145@Integrate
  0037f	c6 45 ee 01	 mov	 BYTE PTR $T22[ebp], 1
  00383	eb 04		 jmp	 SHORT $LN144@Integrate
$LN145@Integrate:

; 134  : 		return false;

  00385	c6 45 ee 00	 mov	 BYTE PTR $T22[ebp], 0
$LN144@Integrate:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 523  : 			if (supersphere->HasSpherePackFlag(SPF_ROOT_TREE))

  00389	0f b6 45 ee	 movzx	 eax, BYTE PTR $T22[ebp]
  0038d	85 c0		 test	 eax, eax
  0038f	74 11		 je	 SHORT $LN19@Integrate
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 129  : 	void SetSpherePackFlag(SpherePackFlag flag) { mFlags|=flag; };

  00391	8b 45 fc	 mov	 eax, DWORD PTR _parent$28[ebp]
  00394	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00397	83 c8 02	 or	 eax, 2
  0039a	8b 4d fc	 mov	 ecx, DWORD PTR _parent$28[ebp]
  0039d	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 524  : 				parent->SetSpherePackFlag(SPF_ROOT_TREE);

  003a0	eb 0f		 jmp	 SHORT $LN149@Integrate
$LN19@Integrate:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 129  : 	void SetSpherePackFlag(SpherePackFlag flag) { mFlags|=flag; };

  003a2	8b 45 fc	 mov	 eax, DWORD PTR _parent$28[ebp]
  003a5	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  003a8	83 c8 04	 or	 eax, 4
  003ab	8b 4d fc	 mov	 ecx, DWORD PTR _parent$28[ebp]
  003ae	89 41 38	 mov	 DWORD PTR [ecx+56], eax
$LN149@Integrate:
  003b1	8b 45 fc	 mov	 eax, DWORD PTR _parent$28[ebp]
  003b4	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  003b7	83 c8 01	 or	 eax, 1
  003ba	8b 4d fc	 mov	 ecx, DWORD PTR _parent$28[ebp]
  003bd	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 532  : 			parent->AddChild(pack);

  003c0	ff 75 08	 push	 DWORD PTR _pack$[ebp]
  003c3	8b 4d fc	 mov	 ecx, DWORD PTR _parent$28[ebp]
  003c6	e8 00 00 00 00	 call	 ?AddChild@SpherePack@@QAEXPAV1@@Z ; SpherePack::AddChild

; 533  : 			
; 534  : 			supersphere->AddChild(parent);

  003cb	ff 75 fc	 push	 DWORD PTR _parent$28[ebp]
  003ce	8b 4d 0c	 mov	 ecx, DWORD PTR _supersphere$[ebp]
  003d1	e8 00 00 00 00	 call	 ?AddChild@SpherePack@@QAEXPAV1@@Z ; SpherePack::AddChild

; 535  : 			
; 536  : 			parent->Recompute(mSuperSphereGravy);

  003d6	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  003d9	51		 push	 ecx
  003da	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  003df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003e4	8b 4d fc	 mov	 ecx, DWORD PTR _parent$28[ebp]
  003e7	e8 00 00 00 00	 call	 ?Recompute@SpherePack@@QAE_NM@Z ; SpherePack::Recompute

; 537  : 			pack->ComputeBindingDistance(parent);

  003ec	ff 75 fc	 push	 DWORD PTR _parent$28[ebp]
  003ef	8b 4d 08	 mov	 ecx, DWORD PTR _pack$[ebp]
  003f2	e8 00 00 00 00	 call	 ?ComputeBindingDistance@SpherePack@@QAEXPAV1@@Z ; SpherePack::ComputeBindingDistance
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  003f7	8b 45 fc	 mov	 eax, DWORD PTR _parent$28[ebp]
  003fa	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  003fd	83 e0 04	 and	 eax, 4
  00400	74 06		 je	 SHORT $LN184@Integrate
  00402	c6 45 ed 01	 mov	 BYTE PTR $T21[ebp], 1
  00406	eb 04		 jmp	 SHORT $LN183@Integrate
$LN184@Integrate:

; 134  : 		return false;

  00408	c6 45 ed 00	 mov	 BYTE PTR $T21[ebp], 0
$LN183@Integrate:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 539  : 			if (parent->HasSpherePackFlag(SPF_LEAF_TREE))

  0040c	0f b6 45 ed	 movzx	 eax, BYTE PTR $T21[ebp]
  00410	85 c0		 test	 eax, eax
  00412	74 41		 je	 SHORT $LN190@Integrate
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 45   : 	float GetRadius(void) const { return mRadius; };

  00414	8b 45 fc	 mov	 eax, DWORD PTR _parent$28[ebp]
  00417	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  0041c	f3 0f 11 45 90	 movss	 DWORD PTR $T2[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 542  : 				SpherePack *link = AddSphere_(parent->GetPos(), parent->GetRadius(), parent, true, SPF_ROOT_TREE);

  00421	6a 02		 push	 2
  00423	6a 01		 push	 1
  00425	ff 75 fc	 push	 DWORD PTR _parent$28[ebp]
  00428	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR $T2[ebp]
  0042d	51		 push	 ecx
  0042e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 217  : 	const Vector3d& GetPos(void) const { return mCenter; };

  00433	8b 45 fc	 mov	 eax, DWORD PTR _parent$28[ebp]
  00436	83 c0 04	 add	 eax, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 542  : 				SpherePack *link = AddSphere_(parent->GetPos(), parent->GetRadius(), parent, true, SPF_ROOT_TREE);

  00439	50		 push	 eax
  0043a	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  0043d	e8 00 00 00 00	 call	 ?AddSphere_@SpherePackFactory@@QAEPAVSpherePack@@ABVVector3d@@MPAX_NH@Z ; SpherePackFactory::AddSphere_
  00442	89 45 8c	 mov	 DWORD PTR _link$1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 210  : 	void   SetUserData(void *data, bool isSphere) { mUserData = data; IS_SPHERE=isSphere;};

  00445	8b 45 fc	 mov	 eax, DWORD PTR _parent$28[ebp]
  00448	8b 4d 8c	 mov	 ecx, DWORD PTR _link$1[ebp]
  0044b	89 48 44	 mov	 DWORD PTR [eax+68], ecx
  0044e	8b 45 fc	 mov	 eax, DWORD PTR _parent$28[ebp]
  00451	c6 40 4c 01	 mov	 BYTE PTR [eax+76], 1
$LN190@Integrate:

; 130  : 	void ClearSpherePackFlag(SpherePackFlag flag) { mFlags&=~flag; };

  00455	6a 20		 push	 32			; 00000020H
  00457	58		 pop	 eax
  00458	f7 d0		 not	 eax
  0045a	8b 4d 08	 mov	 ecx, DWORD PTR _pack$[ebp]
  0045d	23 41 38	 and	 eax, DWORD PTR [ecx+56]
  00460	8b 4d 08	 mov	 ecx, DWORD PTR _pack$[ebp]
  00463	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 550  : }

  00466	c9		 leave
  00467	c2 0c 00	 ret	 12			; 0000000cH
?Integrate@SpherePackFactory@@QAEXPAVSpherePack@@0M@Z ENDP ; SpherePackFactory::Integrate
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?AddRecompute@SpherePackFactory@@QAEXPAVSpherePack@@@Z
_TEXT	SEGMENT
_fifo$1 = -16						; size = 4
$T2 = -12						; size = 4
_this$ = -8						; size = 4
$T3 = -1						; size = 1
_recompute$ = 8						; size = 4
?AddRecompute@SpherePackFactory@@QAEXPAVSpherePack@@@Z PROC ; SpherePackFactory::AddRecompute, COMDAT
; _this$ = ecx

; 155  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  00009	8b 45 08	 mov	 eax, DWORD PTR _recompute$[ebp]
  0000c	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  0000f	83 e0 10	 and	 eax, 16			; 00000010H
  00012	74 06		 je	 SHORT $LN7@AddRecompu
  00014	c6 45 ff 01	 mov	 BYTE PTR $T3[ebp], 1
  00018	eb 04		 jmp	 SHORT $LN6@AddRecompu
$LN7@AddRecompu:

; 134  : 		return false;

  0001a	c6 45 ff 00	 mov	 BYTE PTR $T3[ebp], 0
$LN6@AddRecompu:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 156  : 	if (!recompute->HasSpherePackFlag(SPF_RECOMPUTE))

  0001e	0f b6 45 ff	 movzx	 eax, BYTE PTR $T3[ebp]
  00022	85 c0		 test	 eax, eax
  00024	75 45		 jne	 SHORT $LN1@AddRecompu
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 223  : 	int GetChildCount(void) const { return mChildCount; };

  00026	8b 45 08	 mov	 eax, DWORD PTR _recompute$[ebp]
  00029	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]
  0002c	89 45 f4	 mov	 DWORD PTR $T2[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 158  : 		if (recompute->GetChildCount())

  0002f	83 7d f4 00	 cmp	 DWORD PTR $T2[ebp], 0
  00033	74 2b		 je	 SHORT $LN3@AddRecompu
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 129  : 	void SetSpherePackFlag(SpherePackFlag flag) { mFlags|=flag; };

  00035	8b 45 08	 mov	 eax, DWORD PTR _recompute$[ebp]
  00038	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  0003b	83 c8 10	 or	 eax, 16			; 00000010H
  0003e	8b 4d 08	 mov	 ecx, DWORD PTR _recompute$[ebp]
  00041	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 161  : 			SpherePack **fifo = mRecompute->Push(recompute);

  00044	ff 75 08	 push	 DWORD PTR _recompute$[ebp]
  00047	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  0004d	e8 00 00 00 00	 call	 ?Push@SpherePackFifo@@QAEPAPAVSpherePack@@PAV2@@Z ; SpherePackFifo::Push
  00052	89 45 f0	 mov	 DWORD PTR _fifo$1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 232  : 		mFifo1 = fifo;

  00055	8b 45 08	 mov	 eax, DWORD PTR _recompute$[ebp]
  00058	8b 4d f0	 mov	 ecx, DWORD PTR _fifo$1[ebp]
  0005b	89 48 30	 mov	 DWORD PTR [eax+48], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 163  : 		}

  0005e	eb 0b		 jmp	 SHORT $LN1@AddRecompu
$LN3@AddRecompu:

; 164  : 		else
; 165  : 		{
; 166  : 			Remove(recompute);

  00060	ff 75 08	 push	 DWORD PTR _recompute$[ebp]
  00063	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00066	e8 00 00 00 00	 call	 ?Remove@SpherePackFactory@@QAEXPAVSpherePack@@@Z ; SpherePackFactory::Remove
$LN1@AddRecompu:

; 167  : 		}
; 168  : 	}
; 169  : }

  0006b	c9		 leave
  0006c	c2 04 00	 ret	 4
?AddRecompute@SpherePackFactory@@QAEXPAVSpherePack@@@Z ENDP ; SpherePackFactory::AddRecompute
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?AddIntegrate@SpherePackFactory@@QAEXPAVSpherePack@@@Z
_TEXT	SEGMENT
_fifo$ = -12						; size = 4
_this$ = -8						; size = 4
$T1 = -1						; size = 1
_pack$ = 8						; size = 4
?AddIntegrate@SpherePackFactory@@QAEXPAVSpherePack@@@Z PROC ; SpherePackFactory::AddIntegrate, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  00009	8b 45 08	 mov	 eax, DWORD PTR _pack$[ebp]
  0000c	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  0000f	83 e0 02	 and	 eax, 2
  00012	74 06		 je	 SHORT $LN6@AddIntegra
  00014	c6 45 ff 01	 mov	 BYTE PTR $T1[ebp], 1
  00018	eb 04		 jmp	 SHORT $LN5@AddIntegra
$LN6@AddIntegra:

; 134  : 		return false;

  0001a	c6 45 ff 00	 mov	 BYTE PTR $T1[ebp], 0
$LN5@AddIntegra:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 144  : 	if (pack->HasSpherePackFlag(SPF_ROOT_TREE))

  0001e	0f b6 45 ff	 movzx	 eax, BYTE PTR $T1[ebp]
  00022	85 c0		 test	 eax, eax
  00024	74 10		 je	 SHORT $LN2@AddIntegra

; 145  : 		mRoot->AddChild(pack);

  00026	ff 75 08	 push	 DWORD PTR _pack$[ebp]
  00029	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002f	e8 00 00 00 00	 call	 ?AddChild@SpherePack@@QAEXPAV1@@Z ; SpherePack::AddChild
  00034	eb 0e		 jmp	 SHORT $LN3@AddIntegra
$LN2@AddIntegra:

; 146  : 	else
; 147  : 		mLeaf->AddChild(pack);

  00036	ff 75 08	 push	 DWORD PTR _pack$[ebp]
  00039	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0003f	e8 00 00 00 00	 call	 ?AddChild@SpherePack@@QAEXPAV1@@Z ; SpherePack::AddChild
$LN3@AddIntegra:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 129  : 	void SetSpherePackFlag(SpherePackFlag flag) { mFlags|=flag; };

  00044	8b 45 08	 mov	 eax, DWORD PTR _pack$[ebp]
  00047	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  0004a	83 c8 20	 or	 eax, 32			; 00000020H
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR _pack$[ebp]
  00050	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 150  : 	SpherePack **fifo = mIntegrate->Push(pack); // add it to the integration stack.

  00053	ff 75 08	 push	 DWORD PTR _pack$[ebp]
  00056	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00059	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0005c	e8 00 00 00 00	 call	 ?Push@SpherePackFifo@@QAEPAPAVSpherePack@@PAV2@@Z ; SpherePackFifo::Push
  00061	89 45 f4	 mov	 DWORD PTR _fifo$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 237  : 		mFifo2 = fifo;

  00064	8b 45 08	 mov	 eax, DWORD PTR _pack$[ebp]
  00067	8b 4d f4	 mov	 ecx, DWORD PTR _fifo$[ebp]
  0006a	89 48 34	 mov	 DWORD PTR [eax+52], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 152  : }

  0006d	c9		 leave
  0006e	c2 04 00	 ret	 4
?AddIntegrate@SpherePackFactory@@QAEXPAVSpherePack@@@Z ENDP ; SpherePackFactory::AddIntegrate
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?AddSphere_@SpherePackFactory@@QAEPAVSpherePack@@ABVVector3d@@MPAX_NH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pack$ = -4						; size = 4
_pos$ = 8						; size = 4
_radius$ = 12						; size = 4
_userdata$ = 16						; size = 4
_isSphere$ = 20						; size = 1
_flags$ = 24						; size = 4
?AddSphere_@SpherePackFactory@@QAEPAVSpherePack@@ABVVector3d@@MPAX_NH@Z PROC ; SpherePackFactory::AddSphere_, COMDAT
; _this$ = ecx

; 117  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 118  : 	
; 119  : 	SpherePack *pack = mSpheres.GetFreeLink();

  00008	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 10	 add	 ecx, 16			; 00000010H
  0000e	e8 00 00 00 00	 call	 ?GetFreeLink@?$Pool@VSpherePack@@@@QAEPAVSpherePack@@XZ ; Pool<SpherePack>::GetFreeLink
  00013	89 45 fc	 mov	 DWORD PTR _pack$[ebp], eax

; 120  : 	
; 121  : 	assert(pack);
; 122  : 	
; 123  : 	if (pack)

  00016	83 7d fc 00	 cmp	 DWORD PTR _pack$[ebp], 0
  0001a	74 7c		 je	 SHORT $LN4@AddSphere_

; 124  : 	{
; 125  : 		if (flags & SPF_ROOT_TREE)

  0001c	8b 45 18	 mov	 eax, DWORD PTR _flags$[ebp]
  0001f	83 e0 02	 and	 eax, 2
  00022	74 3b		 je	 SHORT $LN3@AddSphere_

; 126  : 		{
; 127  : 			pack->Init(this,pos,radius,userdata, isSphere);

  00024	ff 75 14	 push	 DWORD PTR _isSphere$[ebp]
  00027	ff 75 10	 push	 DWORD PTR _userdata$[ebp]
  0002a	51		 push	 ecx
  0002b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _radius$[ebp]
  00030	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00035	ff 75 08	 push	 DWORD PTR _pos$[ebp]
  00038	ff 75 f8	 push	 DWORD PTR _this$[ebp]
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _pack$[ebp]
  0003e	e8 00 00 00 00	 call	 ?Init@SpherePack@@QAEXPAVSpherePackFactory@@ABVVector3d@@MPAX_N@Z ; SpherePack::Init
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 129  : 	void SetSpherePackFlag(SpherePackFlag flag) { mFlags|=flag; };

  00043	8b 45 fc	 mov	 eax, DWORD PTR _pack$[ebp]
  00046	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00049	83 c8 02	 or	 eax, 2
  0004c	8b 4d fc	 mov	 ecx, DWORD PTR _pack$[ebp]
  0004f	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 129  : 			AddIntegrate(pack); // add to integration list.

  00052	ff 75 fc	 push	 DWORD PTR _pack$[ebp]
  00055	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	e8 00 00 00 00	 call	 ?AddIntegrate@SpherePackFactory@@QAEXPAVSpherePack@@@Z ; SpherePackFactory::AddIntegrate

; 130  : 		}

  0005d	eb 39		 jmp	 SHORT $LN4@AddSphere_
$LN3@AddSphere_:

; 131  : 		else
; 132  : 		{
; 133  : 			pack->Init(this,pos,radius,userdata, isSphere);

  0005f	ff 75 14	 push	 DWORD PTR _isSphere$[ebp]
  00062	ff 75 10	 push	 DWORD PTR _userdata$[ebp]
  00065	51		 push	 ecx
  00066	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _radius$[ebp]
  0006b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00070	ff 75 08	 push	 DWORD PTR _pos$[ebp]
  00073	ff 75 f8	 push	 DWORD PTR _this$[ebp]
  00076	8b 4d fc	 mov	 ecx, DWORD PTR _pack$[ebp]
  00079	e8 00 00 00 00	 call	 ?Init@SpherePack@@QAEXPAVSpherePackFactory@@ABVVector3d@@MPAX_N@Z ; SpherePack::Init
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 129  : 	void SetSpherePackFlag(SpherePackFlag flag) { mFlags|=flag; };

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _pack$[ebp]
  00081	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00084	83 c8 04	 or	 eax, 4
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _pack$[ebp]
  0008a	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 135  : 			AddIntegrate(pack); // add to integration list.

  0008d	ff 75 fc	 push	 DWORD PTR _pack$[ebp]
  00090	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00093	e8 00 00 00 00	 call	 ?AddIntegrate@SpherePackFactory@@QAEXPAVSpherePack@@@Z ; SpherePackFactory::AddIntegrate
$LN4@AddSphere_:

; 136  : 		}
; 137  : 	}
; 138  : 	
; 139  : 	return pack;

  00098	8b 45 fc	 mov	 eax, DWORD PTR _pack$[ebp]

; 140  : }

  0009b	c9		 leave
  0009c	c2 14 00	 ret	 20			; 00000014H
?AddSphere_@SpherePackFactory@@QAEPAVSpherePack@@ABVVector3d@@MPAX_NH@Z ENDP ; SpherePackFactory::AddSphere_
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?Process@SpherePackFactory@@QAEXXZ
_TEXT	SEGMENT
_maxintegrate$1 = -32					; size = 4
_maxrecompute$2 = -28					; size = 4
_i$3 = -24						; size = 4
_i$4 = -20						; size = 4
_pack$5 = -16						; size = 4
_pack$6 = -12						; size = 4
_this$ = -8						; size = 4
_kill$7 = -2						; size = 1
$T8 = -1						; size = 1
?Process@SpherePackFactory@@QAEXXZ PROC			; SpherePackFactory::Process, COMDAT
; _this$ = ecx

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 356  : 	int GetCount(void) const { return mCount; };

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  0000f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00012	89 45 e4	 mov	 DWORD PTR _maxrecompute$2[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 81   : 		for (int i = 0; i < maxrecompute; ++i)

  00015	83 65 ec 00	 and	 DWORD PTR _i$4[ebp], 0
  00019	eb 07		 jmp	 SHORT $LN4@Process
$LN2@Process:
  0001b	8b 45 ec	 mov	 eax, DWORD PTR _i$4[ebp]
  0001e	40		 inc	 eax
  0001f	89 45 ec	 mov	 DWORD PTR _i$4[ebp], eax
$LN4@Process:
  00022	8b 45 ec	 mov	 eax, DWORD PTR _i$4[ebp]
  00025	3b 45 e4	 cmp	 eax, DWORD PTR _maxrecompute$2[ebp]
  00028	7d 4b		 jge	 SHORT $LN3@Process

; 82   : 		{
; 83   : 			SpherePack * pack = mRecompute->Pop();

  0002a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00030	e8 00 00 00 00	 call	 ?Pop@SpherePackFifo@@QAEPAVSpherePack@@XZ ; SpherePackFifo::Pop
  00035	89 45 f0	 mov	 DWORD PTR _pack$5[ebp], eax

; 84   : 			if (!pack) break;

  00038	83 7d f0 00	 cmp	 DWORD PTR _pack$5[ebp], 0
  0003c	75 02		 jne	 SHORT $LN8@Process
  0003e	eb 35		 jmp	 SHORT $LN3@Process
$LN8@Process:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 232  : 		mFifo1 = fifo;

  00040	8b 45 f0	 mov	 eax, DWORD PTR _pack$5[ebp]
  00043	83 60 30 00	 and	 DWORD PTR [eax+48], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 86   : 			bool kill = pack->Recompute(mSuperSphereGravy);

  00047	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	51		 push	 ecx
  0004b	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  00050	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00055	8b 4d f0	 mov	 ecx, DWORD PTR _pack$5[ebp]
  00058	e8 00 00 00 00	 call	 ?Recompute@SpherePack@@QAE_NM@Z ; SpherePack::Recompute
  0005d	88 45 fe	 mov	 BYTE PTR _kill$7[ebp], al

; 87   : 			if (kill) Remove(pack);

  00060	0f b6 45 fe	 movzx	 eax, BYTE PTR _kill$7[ebp]
  00064	85 c0		 test	 eax, eax
  00066	74 0b		 je	 SHORT $LN9@Process
  00068	ff 75 f0	 push	 DWORD PTR _pack$5[ebp]
  0006b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ?Remove@SpherePackFactory@@QAEXPAVSpherePack@@@Z ; SpherePackFactory::Remove
$LN9@Process:

; 88   : 		}

  00073	eb a6		 jmp	 SHORT $LN2@Process
$LN3@Process:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 356  : 	int GetCount(void) const { return mCount; };

  00075	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00078	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  0007b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0007e	89 45 e0	 mov	 DWORD PTR _maxintegrate$1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 95   : 		for (int i = 0; i < maxintegrate; ++i)

  00081	83 65 e8 00	 and	 DWORD PTR _i$3[ebp], 0
  00085	eb 07		 jmp	 SHORT $LN7@Process
$LN5@Process:
  00087	8b 45 e8	 mov	 eax, DWORD PTR _i$3[ebp]
  0008a	40		 inc	 eax
  0008b	89 45 e8	 mov	 DWORD PTR _i$3[ebp], eax
$LN7@Process:
  0008e	8b 45 e8	 mov	 eax, DWORD PTR _i$3[ebp]
  00091	3b 45 e0	 cmp	 eax, DWORD PTR _maxintegrate$1[ebp]
  00094	7d 7f		 jge	 SHORT $LN6@Process

; 96   : 		{
; 97   : 			SpherePack * pack = mIntegrate->Pop();

  00096	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00099	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0009c	e8 00 00 00 00	 call	 ?Pop@SpherePackFifo@@QAEPAVSpherePack@@XZ ; SpherePackFifo::Pop
  000a1	89 45 f4	 mov	 DWORD PTR _pack$6[ebp], eax

; 98   : 			if (!pack)

  000a4	83 7d f4 00	 cmp	 DWORD PTR _pack$6[ebp], 0
  000a8	75 02		 jne	 SHORT $LN10@Process

; 99   : 				break;

  000aa	eb 69		 jmp	 SHORT $LN6@Process
$LN10@Process:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 237  : 		mFifo2 = fifo;

  000ac	8b 45 f4	 mov	 eax, DWORD PTR _pack$6[ebp]
  000af	83 60 34 00	 and	 DWORD PTR [eax+52], 0

; 133  : 		if ( mFlags & flag ) return true;

  000b3	8b 45 f4	 mov	 eax, DWORD PTR _pack$6[ebp]
  000b6	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  000b9	83 e0 02	 and	 eax, 2
  000bc	74 06		 je	 SHORT $LN35@Process
  000be	c6 45 ff 01	 mov	 BYTE PTR $T8[ebp], 1
  000c2	eb 04		 jmp	 SHORT $LN34@Process
$LN35@Process:

; 134  : 		return false;

  000c4	c6 45 ff 00	 mov	 BYTE PTR $T8[ebp], 0
$LN34@Process:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 102  : 			if (pack->HasSpherePackFlag(SPF_ROOT_TREE))

  000c8	0f b6 45 ff	 movzx	 eax, BYTE PTR $T8[ebp]
  000cc	85 c0		 test	 eax, eax
  000ce	74 21		 je	 SHORT $LN11@Process

; 103  : 				Integrate(pack,mRoot,mMaxRootSize); // integrate this one single dude against the root node.

  000d0	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000d3	51		 push	 ecx
  000d4	f3 0f 10 40 34	 movss	 xmm0, DWORD PTR [eax+52]
  000d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000de	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e1	ff 70 04	 push	 DWORD PTR [eax+4]
  000e4	ff 75 f4	 push	 DWORD PTR _pack$6[ebp]
  000e7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ea	e8 00 00 00 00	 call	 ?Integrate@SpherePackFactory@@QAEXPAVSpherePack@@0M@Z ; SpherePackFactory::Integrate
  000ef	eb 1f		 jmp	 SHORT $LN12@Process
$LN11@Process:

; 104  : 			else
; 105  : 				Integrate(pack,mLeaf,mMaxLeafSize); // integrate this one single dude against the root node.

  000f1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000f4	51		 push	 ecx
  000f5	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
  000fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ff	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00102	ff 70 08	 push	 DWORD PTR [eax+8]
  00105	ff 75 f4	 push	 DWORD PTR _pack$6[ebp]
  00108	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0010b	e8 00 00 00 00	 call	 ?Integrate@SpherePackFactory@@QAEXPAVSpherePack@@0M@Z ; SpherePackFactory::Integrate
$LN12@Process:

; 106  : 		}

  00110	e9 72 ff ff ff	 jmp	 $LN5@Process
$LN6@Process:

; 107  : 	}
; 108  : 	
; 109  : }

  00115	c9		 leave
  00116	c3		 ret	 0
?Process@SpherePackFactory@@QAEXXZ ENDP			; SpherePackFactory::Process
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ??1SpherePackFactory@@UAE@XZ
_TEXT	SEGMENT
tv91 = -20						; size = 4
tv83 = -16						; size = 4
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
??1SpherePackFactory@@UAE@XZ PROC			; SpherePackFactory::~SpherePackFactory, COMDAT
; _this$ = ecx

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7SpherePackFactory@@6B@

; 69   : 	delete mIntegrate;  // free up integration fifo

  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  00018	89 45 f8	 mov	 DWORD PTR $T2[ebp], eax
  0001b	83 7d f8 00	 cmp	 DWORD PTR $T2[ebp], 0
  0001f	74 11		 je	 SHORT $LN3@SpherePack
  00021	6a 01		 push	 1
  00023	8b 45 f8	 mov	 eax, DWORD PTR $T2[ebp]
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	8b 4d f8	 mov	 ecx, DWORD PTR $T2[ebp]
  0002b	ff 10		 call	 DWORD PTR [eax]
  0002d	89 45 f0	 mov	 DWORD PTR tv83[ebp], eax
  00030	eb 04		 jmp	 SHORT $LN4@SpherePack
$LN3@SpherePack:
  00032	83 65 f0 00	 and	 DWORD PTR tv83[ebp], 0
$LN4@SpherePack:

; 70   : 	delete mRecompute;  // free up recomputation fifo.

  00036	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00039	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  0003c	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
  0003f	83 7d f4 00	 cmp	 DWORD PTR $T1[ebp], 0
  00043	74 11		 je	 SHORT $LN5@SpherePack
  00045	6a 01		 push	 1
  00047	8b 45 f4	 mov	 eax, DWORD PTR $T1[ebp]
  0004a	8b 00		 mov	 eax, DWORD PTR [eax]
  0004c	8b 4d f4	 mov	 ecx, DWORD PTR $T1[ebp]
  0004f	ff 10		 call	 DWORD PTR [eax]
  00051	89 45 ec	 mov	 DWORD PTR tv91[ebp], eax
  00054	eb 04		 jmp	 SHORT $LN1@SpherePack
$LN5@SpherePack:
  00056	83 65 ec 00	 and	 DWORD PTR tv91[ebp], 0
$LN1@SpherePack:

; 71   : }

  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	83 c1 10	 add	 ecx, 16			; 00000010H
  00060	e8 00 00 00 00	 call	 ??1?$Pool@VSpherePack@@@@QAE@XZ ; Pool<SpherePack>::~Pool<SpherePack>
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 56   : 	virtual ~SpherePackCallback() {}

  00065	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00068	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7SpherePackCallback@@6B@
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 71   : }

  0006e	c9		 leave
  0006f	c3		 ret	 0
??1SpherePackFactory@@UAE@XZ ENDP			; SpherePackFactory::~SpherePackFactory
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ??0SpherePackFactory@@QAE@HMMM@Z
_TEXT	SEGMENT
$T2 = -68						; size = 4
$T3 = -64						; size = 4
_this$ = -60						; size = 4
_this$ = -56						; size = 4
tv147 = -52						; size = 4
$T4 = -48						; size = 4
tv134 = -44						; size = 4
$T5 = -40						; size = 4
_this$ = -36						; size = 4
_this$ = -32						; size = 4
_p$ = -28						; size = 12
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_maxspheres$ = 8					; size = 4
_rootsize$ = 12						; size = 4
_leafsize$ = 16						; size = 4
_gravy$ = 20						; size = 4
??0SpherePackFactory@@QAE@HMMM@Z PROC			; SpherePackFactory::SpherePackFactory, COMDAT
; _this$ = ecx

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0SpherePackFactory@@QAE@HMMM@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 55   : 	SpherePackCallback() {}

  0002e	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00031	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7SpherePackCallback@@6B@
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 21   : {

  00037	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0003b	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7SpherePackFactory@@6B@
  00044	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00047	83 c0 10	 add	 eax, 16			; 00000010H
  0004a	89 45 dc	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\pool.h

; 24   : 		mHead = 0;

  0004d	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 60 0c 00	 and	 DWORD PTR [eax+12], 0

; 25   : 		mFree = 0;

  00054	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
  00057	83 60 10 00	 and	 DWORD PTR [eax+16], 0

; 26   : 		mData = 0;

  0005b	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	83 60 08 00	 and	 DWORD PTR [eax+8], 0

; 27   : 		mCurrent = 0;

  00062	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
  00065	83 60 04 00	 and	 DWORD PTR [eax+4], 0

; 28   : 		mFreeCount = 0;

  00069	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	83 60 18 00	 and	 DWORD PTR [eax+24], 0

; 29   : 		mUsedCount = 0;

  00070	8b 45 dc	 mov	 eax, DWORD PTR _this$[ebp]
  00073	83 60 14 00	 and	 DWORD PTR [eax+20], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 21   : {

  00077	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 22   : 	NANOBEGIN

  0007b	eb		 DB	 -21			; ffffffebH
  0007c	03		 DB	 3
  0007d	d6		 DB	 -42			; ffffffd6H
  0007e	d7		 DB	 -41			; ffffffd7H
  0007f	01		 DB	 1
  00080	8b 45 08	 mov	 eax, DWORD PTR _maxspheres$[ebp]
  00083	c1 e0 02	 shl	 eax, 2
  00086	89 45 08	 mov	 DWORD PTR _maxspheres$[ebp], eax

; 23   : 	maxspheres *= 4; // include room for both trees, the root node and leaf node tree, and the superspheres
; 24   : 	mMaxRootSize      = rootsize;

  00089	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _rootsize$[ebp]
  00091	f3 0f 11 40 34	 movss	 DWORD PTR [eax+52], xmm0

; 25   : 	mMaxLeafSize      = leafsize;

  00096	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00099	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _leafsize$[ebp]
  0009e	f3 0f 11 40 38	 movss	 DWORD PTR [eax+56], xmm0

; 26   : 	mSuperSphereGravy = gravy;

  000a3	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  000a6	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _gravy$[ebp]
  000ab	f3 0f 11 40 3c	 movss	 DWORD PTR [eax+60], xmm0

; 27   : 	mIntegrate        = new SpherePackFifo(maxspheres);

  000b0	6a 18		 push	 24			; 00000018H
  000b2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000b7	59		 pop	 ecx
  000b8	89 45 d8	 mov	 DWORD PTR $T5[ebp], eax
  000bb	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000bf	83 7d d8 00	 cmp	 DWORD PTR $T5[ebp], 0
  000c3	74 10		 je	 SHORT $LN3@SpherePack
  000c5	ff 75 08	 push	 DWORD PTR _maxspheres$[ebp]
  000c8	8b 4d d8	 mov	 ecx, DWORD PTR $T5[ebp]
  000cb	e8 00 00 00 00	 call	 ??0SpherePackFifo@@QAE@H@Z ; SpherePackFifo::SpherePackFifo
  000d0	89 45 d4	 mov	 DWORD PTR tv134[ebp], eax
  000d3	eb 04		 jmp	 SHORT $LN4@SpherePack
$LN3@SpherePack:
  000d5	83 65 d4 00	 and	 DWORD PTR tv134[ebp], 0
$LN4@SpherePack:
  000d9	8b 45 d4	 mov	 eax, DWORD PTR tv134[ebp]
  000dc	89 45 c0	 mov	 DWORD PTR $T3[ebp], eax
  000df	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000e3	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 4d c0	 mov	 ecx, DWORD PTR $T3[ebp]
  000e9	89 48 2c	 mov	 DWORD PTR [eax+44], ecx

; 28   : 	mRecompute        = new SpherePackFifo(maxspheres);

  000ec	6a 18		 push	 24			; 00000018H
  000ee	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000f3	59		 pop	 ecx
  000f4	89 45 d0	 mov	 DWORD PTR $T4[ebp], eax
  000f7	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000fb	83 7d d0 00	 cmp	 DWORD PTR $T4[ebp], 0
  000ff	74 10		 je	 SHORT $LN5@SpherePack
  00101	ff 75 08	 push	 DWORD PTR _maxspheres$[ebp]
  00104	8b 4d d0	 mov	 ecx, DWORD PTR $T4[ebp]
  00107	e8 00 00 00 00	 call	 ??0SpherePackFifo@@QAE@H@Z ; SpherePackFifo::SpherePackFifo
  0010c	89 45 cc	 mov	 DWORD PTR tv147[ebp], eax
  0010f	eb 04		 jmp	 SHORT $LN6@SpherePack
$LN5@SpherePack:
  00111	83 65 cc 00	 and	 DWORD PTR tv147[ebp], 0
$LN6@SpherePack:
  00115	8b 45 cc	 mov	 eax, DWORD PTR tv147[ebp]
  00118	89 45 bc	 mov	 DWORD PTR $T2[ebp], eax
  0011b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0011f	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00122	8b 4d bc	 mov	 ecx, DWORD PTR $T2[ebp]
  00125	89 48 30	 mov	 DWORD PTR [eax+48], ecx

; 29   : 	
; 30   : 	mSpheres.Set(maxspheres);       // init pool to hold all possible SpherePack instances.

  00128	ff 75 08	 push	 DWORD PTR _maxspheres$[ebp]
  0012b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0012e	83 c1 10	 add	 ecx, 16			; 00000010H
  00131	e8 00 00 00 00	 call	 ?Set@?$Pool@VSpherePack@@@@QAEXH@Z ; Pool<SpherePack>::Set
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 37   : 		x = a;

  00136	0f 57 c0	 xorps	 xmm0, xmm0
  00139	f3 0f 11 45 e4	 movss	 DWORD PTR _p$[ebp], xmm0

; 38   : 		y = b;

  0013e	0f 57 c0	 xorps	 xmm0, xmm0
  00141	f3 0f 11 45 e8	 movss	 DWORD PTR _p$[ebp+4], xmm0

; 39   : 		z = c;

  00146	0f 57 c0	 xorps	 xmm0, xmm0
  00149	f3 0f 11 45 ec	 movss	 DWORD PTR _p$[ebp+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 34   : 	mRoot = mSpheres.GetFreeLink(); // initially empty

  0014e	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00151	83 c1 10	 add	 ecx, 16			; 00000010H
  00154	e8 00 00 00 00	 call	 ?GetFreeLink@?$Pool@VSpherePack@@@@QAEPAVSpherePack@@XZ ; Pool<SpherePack>::GetFreeLink
  00159	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0015c	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 35   : 	mRoot->Init(this,p,6553600,0, false);

  0015f	6a 00		 push	 0
  00161	6a 00		 push	 0
  00163	51		 push	 ecx
  00164	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4ac80000
  0016c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00171	8d 45 e4	 lea	 eax, DWORD PTR _p$[ebp]
  00174	50		 push	 eax
  00175	ff 75 e0	 push	 DWORD PTR _this$[ebp]
  00178	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0017b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0017e	e8 00 00 00 00	 call	 ?Init@SpherePack@@QAEXPAVSpherePackFactory@@ABVVector3d@@MPAX_N@Z ; SpherePack::Init

; 36   : 	mRoot->SetSpherePackFlag(SpherePackFlag(SPF_SUPERSPHERE | SPF_ROOTNODE | SPF_ROOT_TREE));

  00183	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00186	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00189	89 45 c8	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 129  : 	void SetSpherePackFlag(SpherePackFlag flag) { mFlags|=flag; };

  0018c	8b 45 c8	 mov	 eax, DWORD PTR _this$[ebp]
  0018f	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00192	83 c8 0b	 or	 eax, 11			; 0000000bH
  00195	8b 4d c8	 mov	 ecx, DWORD PTR _this$[ebp]
  00198	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 42   : 	mLeaf = mSpheres.GetFreeLink();; // initially empty

  0019b	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0019e	83 c1 10	 add	 ecx, 16			; 00000010H
  001a1	e8 00 00 00 00	 call	 ?GetFreeLink@?$Pool@VSpherePack@@@@QAEPAVSpherePack@@XZ ; Pool<SpherePack>::GetFreeLink
  001a6	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  001a9	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 43   : 	mLeaf->Init(this,p,1638400,0,false);

  001ac	6a 00		 push	 0
  001ae	6a 00		 push	 0
  001b0	51		 push	 ecx
  001b1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@49c80000
  001b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001be	8d 45 e4	 lea	 eax, DWORD PTR _p$[ebp]
  001c1	50		 push	 eax
  001c2	ff 75 e0	 push	 DWORD PTR _this$[ebp]
  001c5	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  001c8	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cb	e8 00 00 00 00	 call	 ?Init@SpherePack@@QAEXPAVSpherePackFactory@@ABVVector3d@@MPAX_N@Z ; SpherePack::Init

; 44   : 	mLeaf->SetSpherePackFlag(SpherePackFlag(SPF_SUPERSPHERE | SPF_ROOTNODE | SPF_LEAF_TREE));

  001d0	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  001d3	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  001d6	89 45 c4	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 129  : 	void SetSpherePackFlag(SpherePackFlag flag) { mFlags|=flag; };

  001d9	8b 45 c4	 mov	 eax, DWORD PTR _this$[ebp]
  001dc	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  001df	83 c8 0d	 or	 eax, 13			; 0000000dH
  001e2	8b 4d c4	 mov	 ecx, DWORD PTR _this$[ebp]
  001e5	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 64   : 	NANOEND

  001e8	eb		 DB	 -21			; ffffffebH
  001e9	03		 DB	 3
  001ea	d6		 DB	 -42			; ffffffd6H
  001eb	d7		 DB	 -41			; ffffffd7H
  001ec	00		 DB	 0
  001ed	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  001f1	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  001f4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001f7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001fe	59		 pop	 ecx
  001ff	5f		 pop	 edi
  00200	5e		 pop	 esi
  00201	5b		 pop	 ebx
  00202	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00205	33 cd		 xor	 ecx, ebp
  00207	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0020c	c9		 leave
  0020d	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SpherePackFactory@@QAE@HMMM@Z$0:
  00000	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1SpherePackCallback@@UAE@XZ ; SpherePackCallback::~SpherePackCallback
__unwindfunclet$??0SpherePackFactory@@QAE@HMMM@Z$1:
  00008	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 10	 add	 ecx, 16			; 00000010H
  0000e	e9 00 00 00 00	 jmp	 ??1?$Pool@VSpherePack@@@@QAE@XZ ; Pool<SpherePack>::~Pool<SpherePack>
__unwindfunclet$??0SpherePackFactory@@QAE@HMMM@Z$2:
  00013	6a 18		 push	 24			; 00000018H
  00015	ff 75 d8	 push	 DWORD PTR $T5[ebp]
  00018	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001d	59		 pop	 ecx
  0001e	59		 pop	 ecx
  0001f	c3		 ret	 0
__unwindfunclet$??0SpherePackFactory@@QAE@HMMM@Z$3:
  00020	6a 18		 push	 24			; 00000018H
  00022	ff 75 d0	 push	 DWORD PTR $T4[ebp]
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	59		 pop	 ecx
  0002b	59		 pop	 ecx
  0002c	c3		 ret	 0
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
  00030	cc		 int	 3
  00031	cc		 int	 3
__ehhandler$??0SpherePackFactory@@QAE@HMMM@Z:
  00032	90		 npad	 1
  00033	90		 npad	 1
  00034	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00038	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003b	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  0003e	33 c8		 xor	 ecx, eax
  00040	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00045	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00048	33 c8		 xor	 ecx, eax
  0004a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0SpherePackFactory@@QAE@HMMM@Z
  00054	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0SpherePackFactory@@QAE@HMMM@Z ENDP			; SpherePackFactory::SpherePackFactory
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
;	COMDAT ??_GSpherePackFifo@@UAEPAXI@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSpherePackFifo@@UAEPAXI@Z PROC			; SpherePackFifo::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 312  : 	{

  00008	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7SpherePackFifo@@6B@

; 313  : 		delete [] mFifo;

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  00017	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0001a	ff 75 f8	 push	 DWORD PTR $T1[ebp]
  0001d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00022	59		 pop	 ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00026	83 e0 01	 and	 eax, 1
  00029	74 0c		 je	 SHORT $LN2@scalar
  0002b	6a 18		 push	 24			; 00000018H
  0002d	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00035	59		 pop	 ecx
  00036	59		 pop	 ecx
$LN2@scalar:
  00037	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	c9		 leave
  0003b	c2 04 00	 ret	 4
??_GSpherePackFifo@@UAEPAXI@Z ENDP			; SpherePackFifo::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
;	COMDAT ?Pop@SpherePackFifo@@QAEPAVSpherePack@@XZ
_TEXT	SEGMENT
_ret$1 = -8						; size = 4
_this$ = -4						; size = 4
?Pop@SpherePackFifo@@QAEPAVSpherePack@@XZ PROC		; SpherePackFifo::Pop, COMDAT
; _this$ = ecx

; 327  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN2@Pop:

; 328  : 		while ( mSP != mBottom )

  00008	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00011	3b 41 0c	 cmp	 eax, DWORD PTR [ecx+12]
  00014	74 4e		 je	 SHORT $LN3@Pop

; 329  : 		{
; 330  : 			mCount--;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001c	48		 dec	 eax
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 331  : 			SpherePack *ret = mFifo[mBottom];

  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  0002f	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
  00032	89 45 f8	 mov	 DWORD PTR _ret$1[ebp], eax

; 332  : 			mBottom++;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0003b	40		 inc	 eax
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 333  : 			if ( mBottom == mFifoSize ) mBottom = 0;

  00042	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0004b	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  0004e	75 07		 jne	 SHORT $LN4@Pop
  00050	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00053	83 60 0c 00	 and	 DWORD PTR [eax+12], 0
$LN4@Pop:

; 334  : 			if ( ret ) return ret;

  00057	83 7d f8 00	 cmp	 DWORD PTR _ret$1[ebp], 0
  0005b	74 05		 je	 SHORT $LN5@Pop
  0005d	8b 45 f8	 mov	 eax, DWORD PTR _ret$1[ebp]
  00060	eb 04		 jmp	 SHORT $LN1@Pop
$LN5@Pop:

; 335  : 		}

  00062	eb a4		 jmp	 SHORT $LN2@Pop
$LN3@Pop:

; 336  : 		return 0;

  00064	33 c0		 xor	 eax, eax
$LN1@Pop:

; 337  : 	}

  00066	c9		 leave
  00067	c3		 ret	 0
?Pop@SpherePackFifo@@QAEPAVSpherePack@@XZ ENDP		; SpherePackFifo::Pop
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
;	COMDAT ?Push@SpherePackFifo@@QAEPAPAVSpherePack@@PAV2@@Z
_TEXT	SEGMENT
_ret$ = -8						; size = 4
_this$ = -4						; size = 4
_sphere$ = 8						; size = 4
?Push@SpherePackFifo@@QAEPAPAVSpherePack@@PAV2@@Z PROC	; SpherePackFifo::Push, COMDAT
; _this$ = ecx

; 317  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 318  : 		mCount++;

  00008	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000e	40		 inc	 eax
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 319  : 		SpherePack **ret = &mFifo[mSP];

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00021	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  00024	89 45 f8	 mov	 DWORD PTR _ret$[ebp], eax

; 320  : 		mFifo[mSP] = sphere;

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00033	8b 55 08	 mov	 edx, DWORD PTR _sphere$[ebp]
  00036	89 14 81	 mov	 DWORD PTR [ecx+eax*4], edx

; 321  : 		mSP++;

  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0003f	40		 inc	 eax
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 322  : 		if ( mSP == mFifoSize ) mSP = 0;

  00046	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0004f	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  00052	75 07		 jne	 SHORT $LN2@Push
  00054	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00057	83 60 08 00	 and	 DWORD PTR [eax+8], 0
$LN2@Push:

; 323  : 		return ret;

  0005b	8b 45 f8	 mov	 eax, DWORD PTR _ret$[ebp]

; 324  : 	};

  0005e	c9		 leave
  0005f	c2 04 00	 ret	 4
?Push@SpherePackFifo@@QAEPAPAVSpherePack@@PAV2@@Z ENDP	; SpherePackFifo::Push
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
;	COMDAT ??0SpherePackFifo@@QAE@H@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
_fifosize$ = 8						; size = 4
??0SpherePackFifo@@QAE@H@Z PROC				; SpherePackFifo::SpherePackFifo, COMDAT
; _this$ = ecx

; 302  : 	SpherePackFifo(int fifosize)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00008	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7SpherePackFifo@@6B@

; 303  : 	{
; 304  : 		mCount = 0;

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	83 60 04 00	 and	 DWORD PTR [eax+4], 0

; 305  : 		mSP = 0;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 60 08 00	 and	 DWORD PTR [eax+8], 0

; 306  : 		mBottom = 0;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 60 0c 00	 and	 DWORD PTR [eax+12], 0

; 307  : 		mFifoSize = fifosize;

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _fifosize$[ebp]
  0002c	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 308  : 		mFifo = new SpherePack *[mFifoSize];

  0002f	33 c9		 xor	 ecx, ecx
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00037	6a 04		 push	 4
  00039	5a		 pop	 edx
  0003a	f7 e2		 mul	 edx
  0003c	0f 90 c1	 seto	 cl
  0003f	f7 d9		 neg	 ecx
  00041	0b c8		 or	 ecx, eax
  00043	51		 push	 ecx
  00044	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00049	59		 pop	 ecx
  0004a	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00053	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 309  : 	};

  00056	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00059	c9		 leave
  0005a	c2 04 00	 ret	 4
??0SpherePackFifo@@QAE@H@Z ENDP				; SpherePackFifo::SpherePackFifo
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
;	COMDAT ??_ESpherePack@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_ESpherePack@@UAEPAXI@Z PROC				; SpherePack::`vector deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_ESpherePack@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00029	83 e0 02	 and	 eax, 2
  0002c	74 3e		 je	 SHORT $LN2@vector
  0002e	68 00 00 00 00	 push	 OFFSET ??1SpherePack@@UAE@XZ ; SpherePack::~SpherePack
  00033	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00036	ff 70 fc	 push	 DWORD PTR [eax-4]
  00039	6a 50		 push	 80			; 00000050H
  0003b	ff 75 f0	 push	 DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00043	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00046	83 e0 01	 and	 eax, 1
  00049	74 19		 je	 SHORT $LN3@vector
  0004b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	6b 40 fc 50	 imul	 eax, DWORD PTR [eax-4], 80
  00052	83 c0 04	 add	 eax, 4
  00055	50		 push	 eax
  00056	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00059	83 e8 04	 sub	 eax, 4
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ??_V@YAXPAXI@Z		; operator delete[]
  00062	59		 pop	 ecx
  00063	59		 pop	 ecx
$LN3@vector:
  00064	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00067	83 e8 04	 sub	 eax, 4
  0006a	eb 29		 jmp	 SHORT $LN5@vector
$LN2@vector:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 107  : 	{

  0006c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7SpherePack@@6B@
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 39   : 	virtual ~Sphere() {}

  00075	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00078	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Sphere@@6B@
  0007e	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00081	83 e0 01	 and	 eax, 1
  00084	74 0c		 je	 SHORT $LN4@vector
  00086	6a 50		 push	 80			; 00000050H
  00088	ff 75 f0	 push	 DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00090	59		 pop	 ecx
  00091	59		 pop	 ecx
$LN4@vector:
  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@vector:
  00095	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009f	59		 pop	 ecx
  000a0	c9		 leave
  000a1	c2 04 00	 ret	 4
  000a4	cc		 int	 3
  000a5	cc		 int	 3
  000a6	cc		 int	 3
  000a7	cc		 int	 3
  000a8	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_ESpherePack@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_ESpherePack@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_ESpherePack@@UAEPAXI@Z ENDP				; SpherePack::`vector deleting destructor'
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?Reset@SpherePack@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pack$ = -4						; size = 4
?Reset@SpherePack@@QAEXXZ PROC				; SpherePack::Reset, COMDAT
; _this$ = ecx

; 859  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 130  : 	void ClearSpherePackFlag(SpherePackFlag flag) { mFlags&=~flag; };

  00008	b8 c0 01 00 00	 mov	 eax, 448		; 000001c0H
  0000d	f7 d0		 not	 eax
  0000f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	23 41 38	 and	 eax, DWORD PTR [ecx+56]
  00015	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 862  : 	SpherePack *pack = mChildren;

  0001b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  00021	89 45 fc	 mov	 DWORD PTR _pack$[ebp], eax
$LN2@Reset:

; 863  : 	while (pack)

  00024	83 7d fc 00	 cmp	 DWORD PTR _pack$[ebp], 0
  00028	74 13		 je	 SHORT $LN1@Reset

; 864  : 	{
; 865  : 		pack->Reset();

  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _pack$[ebp]
  0002d	e8 00 00 00 00	 call	 ?Reset@SpherePack@@QAEXXZ ; SpherePack::Reset
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 195  : 		return mNextSibling; 

  00032	8b 45 fc	 mov	 eax, DWORD PTR _pack$[ebp]
  00035	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  00038	89 45 fc	 mov	 DWORD PTR _pack$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 867  : 	}

  0003b	eb e7		 jmp	 SHORT $LN2@Reset
$LN1@Reset:

; 868  : }

  0003d	c9		 leave
  0003e	c3		 ret	 0
?Reset@SpherePack@@QAEXXZ ENDP				; SpherePack::Reset
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?PointTest2d@SpherePack@@QAEXABVVector3d@@PAVSpherePackCallback@@W4ViewState@@@Z
_TEXT	SEGMENT
$T1 = -32						; size = 4
$T2 = -28						; size = 4
_distSquare$3 = -24					; size = 4
_dy$4 = -20						; size = 4
_dx$5 = -16						; size = 4
_pack$6 = -12						; size = 4
_this$ = -8						; size = 4
$T7 = -1						; size = 1
_p$ = 8							; size = 4
_callback$ = 12						; size = 4
_state$ = 16						; size = 4
?PointTest2d@SpherePack@@QAEXABVVector3d@@PAVSpherePackCallback@@W4ViewState@@@Z PROC ; SpherePack::PointTest2d, COMDAT
; _this$ = ecx

; 733  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 734  : 	if (state == VS_PARTIAL)

  00009	83 7d 10 01	 cmp	 DWORD PTR _state$[ebp], 1
  0000d	0f 85 86 00 00
	00		 jne	 $LN6@PointTest2

; 735  : 	{
; 736  : 		float dx=p.x-mCenter.x;

  00013	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00016	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0001d	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00022	f3 0f 11 45 f0	 movss	 DWORD PTR _dx$5[ebp], xmm0

; 737  : 		float dy=p.y-mCenter.y;

  00027	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  0002a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00032	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00037	f3 0f 11 45 ec	 movss	 DWORD PTR _dy$4[ebp], xmm0

; 738  : 		float distSquare = (dx*dx)+(dy*dy);

  0003c	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _dx$5[ebp]
  00041	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _dx$5[ebp]
  00046	f3 0f 10 4d ec	 movss	 xmm1, DWORD PTR _dy$4[ebp]
  0004b	f3 0f 59 4d ec	 mulss	 xmm1, DWORD PTR _dy$4[ebp]
  00050	f3 0f 58 c1	 addss	 xmm0, xmm1
  00054	f3 0f 11 45 e8	 movss	 DWORD PTR _distSquare$3[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 46   : 	float GetRadius2(void) const { return mRadius2; };

  00059	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00061	f3 0f 11 45 e4	 movss	 DWORD PTR $T2[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 740  : 		if (distSquare > GetRadius2()) return;;

  00066	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _distSquare$3[ebp]
  0006b	0f 2f 45 e4	 comiss	 xmm0, DWORD PTR $T2[ebp]
  0006f	76 05		 jbe	 SHORT $LN5@PointTest2
  00071	e9 81 00 00 00	 jmp	 $LN1@PointTest2
$LN5@PointTest2:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 46   : 	float GetRadius2(void) const { return mRadius2; };

  00076	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00079	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  0007e	f3 0f 11 45 e0	 movss	 DWORD PTR $T1[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 741  : 		if (GetRadius2() < -distSquare) state = VS_INSIDE;

  00083	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _distSquare$3[ebp]
  00088	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0008f	0f 2f 45 e0	 comiss	 xmm0, DWORD PTR $T1[ebp]
  00093	76 04		 jbe	 SHORT $LN6@PointTest2
  00095	83 65 10 00	 and	 DWORD PTR _state$[ebp], 0
$LN6@PointTest2:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  00099	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0009c	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  0009f	83 e0 01	 and	 eax, 1
  000a2	74 06		 je	 SHORT $LN15@PointTest2
  000a4	c6 45 ff 01	 mov	 BYTE PTR $T7[ebp], 1
  000a8	eb 04		 jmp	 SHORT $LN14@PointTest2
$LN15@PointTest2:

; 134  : 		return false;

  000aa	c6 45 ff 00	 mov	 BYTE PTR $T7[ebp], 0
$LN14@PointTest2:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 744  : 	if (HasSpherePackFlag(SPF_SUPERSPHERE))

  000ae	0f b6 45 ff	 movzx	 eax, BYTE PTR $T7[ebp]
  000b2	85 c0		 test	 eax, eax
  000b4	74 2d		 je	 SHORT $LN7@PointTest2

; 745  : 	{
; 746  : #if DEMO
; 747  : 		if (state == VS_PARTIAL)
; 748  : 		{
; 749  : 			DrawCircle(int(mCenter.x), int(mCenter.y), int(GetRadius()), 0x404040);
; 750  : 		}
; 751  : #endif
; 752  : 		SpherePack *pack = mChildren;

  000b6	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b9	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  000bc	89 45 f4	 mov	 DWORD PTR _pack$6[ebp], eax
$LN2@PointTest2:

; 753  : 		while (pack)

  000bf	83 7d f4 00	 cmp	 DWORD PTR _pack$6[ebp], 0
  000c3	74 1c		 je	 SHORT $LN3@PointTest2

; 754  : 		{
; 755  : 			pack->PointTest2d(p, callback, state);

  000c5	ff 75 10	 push	 DWORD PTR _state$[ebp]
  000c8	ff 75 0c	 push	 DWORD PTR _callback$[ebp]
  000cb	ff 75 08	 push	 DWORD PTR _p$[ebp]
  000ce	8b 4d f4	 mov	 ecx, DWORD PTR _pack$6[ebp]
  000d1	e8 00 00 00 00	 call	 ?PointTest2d@SpherePack@@QAEXABVVector3d@@PAVSpherePackCallback@@W4ViewState@@@Z ; SpherePack::PointTest2d
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 195  : 		return mNextSibling; 

  000d6	8b 45 f4	 mov	 eax, DWORD PTR _pack$6[ebp]
  000d9	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  000dc	89 45 f4	 mov	 DWORD PTR _pack$6[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 757  : 		}

  000df	eb de		 jmp	 SHORT $LN2@PointTest2
$LN3@PointTest2:

; 758  : 		
; 759  : 	}

  000e1	eb 14		 jmp	 SHORT $LN8@PointTest2
$LN7@PointTest2:

; 760  : 	else
; 761  : 	{
; 762  : #ifdef SPHERELIB_STRICT
; 763  : 		extern bool MAPOUTDOOR_GET_HEIGHT_TRACE;
; 764  : 		if (MAPOUTDOOR_GET_HEIGHT_TRACE)
; 765  : 		{
; 766  : 			float dx=p.x-mCenter.x;
; 767  : 			float dy=p.y-mCenter.y;
; 768  : 			float distSquare = (dx*dx)+(dy*dy);
; 769  : 			printf("--- (%f, %f) dist %f radius %f isSphere %d\n", mCenter.x, mCenter.y, distSquare, GetRadius(), IS_SPHERE);
; 770  : 		}
; 771  : #endif
; 772  : 		callback->PointTest2dCallback(p, this, state);

  000e3	ff 75 10	 push	 DWORD PTR _state$[ebp]
  000e6	ff 75 f8	 push	 DWORD PTR _this$[ebp]
  000e9	ff 75 08	 push	 DWORD PTR _p$[ebp]
  000ec	8b 45 0c	 mov	 eax, DWORD PTR _callback$[ebp]
  000ef	8b 00		 mov	 eax, DWORD PTR [eax]
  000f1	8b 4d 0c	 mov	 ecx, DWORD PTR _callback$[ebp]
  000f4	ff 50 10	 call	 DWORD PTR [eax+16]
$LN8@PointTest2:
$LN1@PointTest2:

; 773  : 	}
; 774  : }

  000f7	c9		 leave
  000f8	c2 0c 00	 ret	 12			; 0000000cH
?PointTest2d@SpherePack@@QAEXABVVector3d@@PAVSpherePackCallback@@W4ViewState@@@Z ENDP ; SpherePack::PointTest2d
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?RangeTest@SpherePack@@QAEXABVVector3d@@MPAVSpherePackCallback@@W4ViewState@@@Z
_TEXT	SEGMENT
$T1 = -36						; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
$T4 = -24						; size = 4
__X$ = -20						; size = 4
_d$5 = -16						; size = 4
_pack$6 = -12						; size = 4
_this$ = -8						; size = 4
$T7 = -1						; size = 1
_p$ = 8							; size = 4
_distance$ = 12						; size = 4
_callback$ = 16						; size = 4
_state$ = 20						; size = 4
?RangeTest@SpherePack@@QAEXABVVector3d@@MPAVSpherePackCallback@@W4ViewState@@@Z PROC ; SpherePack::RangeTest, COMDAT
; _this$ = ecx

; 699  : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 700  : 
; 701  : 	if (state == VS_PARTIAL)

  00009	83 7d 14 01	 cmp	 DWORD PTR _state$[ebp], 1
  0000d	0f 85 83 00 00
	00		 jne	 $LN6@RangeTest

; 703  : 		float d = p.Distance(mCenter);

  00013	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00016	83 c0 04	 add	 eax, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 152  : 		return sqrtf(DistanceSq(a));

  00019	50		 push	 eax
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  0001d	e8 00 00 00 00	 call	 ?DistanceSq@Vector3d@@QBEMABV1@@Z ; Vector3d::DistanceSq
  00022	d9 5d ec	 fstp	 DWORD PTR __X$[ebp]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  00025	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0002a	51		 push	 ecx
  0002b	51		 push	 ecx
  0002c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00031	e8 00 00 00 00	 call	 _sqrt
  00036	59		 pop	 ecx
  00037	59		 pop	 ecx
  00038	d9 5d e8	 fstp	 DWORD PTR $T4[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 152  : 		return sqrtf(DistanceSq(a));

  0003b	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR $T4[ebp]
  00040	f3 0f 11 45 e4	 movss	 DWORD PTR $T3[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 703  : 		float d = p.Distance(mCenter);

  00045	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR $T3[ebp]
  0004a	f3 0f 11 45 f0	 movss	 DWORD PTR _d$5[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 45   : 	float GetRadius(void) const { return mRadius; };

  0004f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00052	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00057	f3 0f 11 45 e0	 movss	 DWORD PTR $T2[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 704  : 		if ((d-distance) > GetRadius()) return;;

  0005c	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _d$5[ebp]
  00061	f3 0f 5c 45 0c	 subss	 xmm0, DWORD PTR _distance$[ebp]
  00066	0f 2f 45 e0	 comiss	 xmm0, DWORD PTR $T2[ebp]
  0006a	76 05		 jbe	 SHORT $LN5@RangeTest
  0006c	e9 99 00 00 00	 jmp	 $LN1@RangeTest
$LN5@RangeTest:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 45   : 	float GetRadius(void) const { return mRadius; };

  00071	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00074	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00079	f3 0f 11 45 dc	 movss	 DWORD PTR $T1[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 705  : 		if ((GetRadius()+d) < distance) state = VS_INSIDE;

  0007e	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR $T1[ebp]
  00083	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _d$5[ebp]
  00088	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _distance$[ebp]
  0008d	0f 2f c8	 comiss	 xmm1, xmm0
  00090	76 04		 jbe	 SHORT $LN6@RangeTest
  00092	83 65 14 00	 and	 DWORD PTR _state$[ebp], 0
$LN6@RangeTest:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  00096	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00099	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  0009c	83 e0 01	 and	 eax, 1
  0009f	74 06		 je	 SHORT $LN21@RangeTest
  000a1	c6 45 ff 01	 mov	 BYTE PTR $T7[ebp], 1
  000a5	eb 04		 jmp	 SHORT $LN20@RangeTest
$LN21@RangeTest:

; 134  : 		return false;

  000a7	c6 45 ff 00	 mov	 BYTE PTR $T7[ebp], 0
$LN20@RangeTest:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 708  : 	if (HasSpherePackFlag(SPF_SUPERSPHERE))

  000ab	0f b6 45 ff	 movzx	 eax, BYTE PTR $T7[ebp]
  000af	85 c0		 test	 eax, eax
  000b1	74 38		 je	 SHORT $LN7@RangeTest

; 709  : 	{
; 710  : #if DEMO
; 711  : 		if (state == VS_PARTIAL)
; 712  : 		{
; 713  : 			DrawCircle(int(mCenter.x), int(mCenter.y), int(GetRadius()), 0x404040);
; 714  : 		}
; 715  : #endif
; 716  : 		SpherePack *pack = mChildren;

  000b3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b6	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  000b9	89 45 f4	 mov	 DWORD PTR _pack$6[ebp], eax
$LN2@RangeTest:

; 717  : 		while (pack)

  000bc	83 7d f4 00	 cmp	 DWORD PTR _pack$6[ebp], 0
  000c0	74 27		 je	 SHORT $LN3@RangeTest

; 718  : 		{
; 719  : 			pack->RangeTest(p,distance,callback,state);

  000c2	ff 75 14	 push	 DWORD PTR _state$[ebp]
  000c5	ff 75 10	 push	 DWORD PTR _callback$[ebp]
  000c8	51		 push	 ecx
  000c9	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _distance$[ebp]
  000ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d3	ff 75 08	 push	 DWORD PTR _p$[ebp]
  000d6	8b 4d f4	 mov	 ecx, DWORD PTR _pack$6[ebp]
  000d9	e8 00 00 00 00	 call	 ?RangeTest@SpherePack@@QAEXABVVector3d@@MPAVSpherePackCallback@@W4ViewState@@@Z ; SpherePack::RangeTest
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 195  : 		return mNextSibling; 

  000de	8b 45 f4	 mov	 eax, DWORD PTR _pack$6[ebp]
  000e1	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  000e4	89 45 f4	 mov	 DWORD PTR _pack$6[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 721  : 		}

  000e7	eb d3		 jmp	 SHORT $LN2@RangeTest
$LN3@RangeTest:

; 722  : 		
; 723  : 	}

  000e9	eb 1f		 jmp	 SHORT $LN8@RangeTest
$LN7@RangeTest:

; 724  : 	else
; 725  : 	{		
; 726  : 		callback->RangeTestCallback(p,distance,this,state);

  000eb	ff 75 14	 push	 DWORD PTR _state$[ebp]
  000ee	ff 75 f8	 push	 DWORD PTR _this$[ebp]
  000f1	51		 push	 ecx
  000f2	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _distance$[ebp]
  000f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fc	ff 75 08	 push	 DWORD PTR _p$[ebp]
  000ff	8b 45 10	 mov	 eax, DWORD PTR _callback$[ebp]
  00102	8b 00		 mov	 eax, DWORD PTR [eax]
  00104	8b 4d 10	 mov	 ecx, DWORD PTR _callback$[ebp]
  00107	ff 50 0c	 call	 DWORD PTR [eax+12]
$LN8@RangeTest:
$LN1@RangeTest:

; 727  : 	}
; 728  : }

  0010a	c9		 leave
  0010b	c2 10 00	 ret	 16			; 00000010H
?RangeTest@SpherePack@@QAEXABVVector3d@@MPAVSpherePackCallback@@W4ViewState@@@Z ENDP ; SpherePack::RangeTest
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?RayTrace@SpherePack@@QAEXABVVector3d@@0MPAVSpherePackCallback@@@Z
_TEXT	SEGMENT
_pack$1 = -28						; size = 4
_this$ = -24						; size = 4
$T2 = -18						; size = 1
_hit$ = -17						; size = 1
_sect$3 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_p1$ = 8						; size = 4
_dir$ = 12						; size = 4
_distance$ = 16						; size = 4
_callback$ = 20						; size = 4
?RayTrace@SpherePack@@QAEXABVVector3d@@0MPAVSpherePackCallback@@@Z PROC ; SpherePack::RayTrace, COMDAT
; _this$ = ecx

; 800  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 801  : 	bool hit = false;

  00013	c6 45 ef 00	 mov	 BYTE PTR _hit$[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  00017	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  0001d	83 e0 01	 and	 eax, 1
  00020	74 06		 je	 SHORT $LN10@RayTrace
  00022	c6 45 ee 01	 mov	 BYTE PTR $T2[ebp], 1
  00026	eb 04		 jmp	 SHORT $LN9@RayTrace
$LN10@RayTrace:

; 134  : 		return false;

  00028	c6 45 ee 00	 mov	 BYTE PTR $T2[ebp], 0
$LN9@RayTrace:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 803  : 	if (HasSpherePackFlag(SPF_SUPERSPHERE))

  0002c	0f b6 45 ee	 movzx	 eax, BYTE PTR $T2[ebp]
  00030	85 c0		 test	 eax, eax
  00032	74 53		 je	 SHORT $LN4@RayTrace

; 804  : 	{
; 805  : 		
; 806  : 		hit = RayIntersectionInFront(p1,dir,0);

  00034	6a 00		 push	 0
  00036	ff 75 0c	 push	 DWORD PTR _dir$[ebp]
  00039	ff 75 08	 push	 DWORD PTR _p1$[ebp]
  0003c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?RayIntersectionInFront@Sphere@@QAE_NABVVector3d@@0PAV2@@Z ; Sphere::RayIntersectionInFront
  00044	88 45 ef	 mov	 BYTE PTR _hit$[ebp], al

; 807  : 		
; 808  : 		if (hit)

  00047	0f b6 45 ef	 movzx	 eax, BYTE PTR _hit$[ebp]
  0004b	85 c0		 test	 eax, eax
  0004d	74 36		 je	 SHORT $LN3@RayTrace

; 809  : 		{
; 810  : #if DEMO
; 811  : 			DrawCircle(int(mCenter.x), int(mCenter.y), int(GetRadius()), 0x404040);
; 812  : #endif
; 813  : 			SpherePack *pack = mChildren;

  0004f	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00052	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  00055	89 45 e4	 mov	 DWORD PTR _pack$1[ebp], eax
$LN2@RayTrace:

; 814  : 			
; 815  : 			while (pack)

  00058	83 7d e4 00	 cmp	 DWORD PTR _pack$1[ebp], 0
  0005c	74 27		 je	 SHORT $LN3@RayTrace

; 816  : 			{
; 817  : 				pack->RayTrace(p1,dir,distance,callback);

  0005e	ff 75 14	 push	 DWORD PTR _callback$[ebp]
  00061	51		 push	 ecx
  00062	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _distance$[ebp]
  00067	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006c	ff 75 0c	 push	 DWORD PTR _dir$[ebp]
  0006f	ff 75 08	 push	 DWORD PTR _p1$[ebp]
  00072	8b 4d e4	 mov	 ecx, DWORD PTR _pack$1[ebp]
  00075	e8 00 00 00 00	 call	 ?RayTrace@SpherePack@@QAEXABVVector3d@@0MPAVSpherePackCallback@@@Z ; SpherePack::RayTrace
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 195  : 		return mNextSibling; 

  0007a	8b 45 e4	 mov	 eax, DWORD PTR _pack$1[ebp]
  0007d	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  00080	89 45 e4	 mov	 DWORD PTR _pack$1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 819  : 			}

  00083	eb d3		 jmp	 SHORT $LN2@RayTrace
$LN3@RayTrace:

; 820  : 		}
; 821  : 		
; 822  : 	}

  00085	eb 4b		 jmp	 SHORT $LN7@RayTrace
$LN4@RayTrace:

; 823  : 	else
; 824  : 	{
; 825  : 		Vector3d sect;
; 826  : 		hit = RayIntersection(p1,dir,distance,&sect);

  00087	8d 45 f0	 lea	 eax, DWORD PTR _sect$3[ebp]
  0008a	50		 push	 eax
  0008b	51		 push	 ecx
  0008c	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _distance$[ebp]
  00091	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00096	ff 75 0c	 push	 DWORD PTR _dir$[ebp]
  00099	ff 75 08	 push	 DWORD PTR _p1$[ebp]
  0009c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009f	e8 00 00 00 00	 call	 ?RayIntersection@Sphere@@QAE_NABVVector3d@@0MPAV2@@Z ; Sphere::RayIntersection
  000a4	88 45 ef	 mov	 BYTE PTR _hit$[ebp], al

; 827  : 		if (hit)

  000a7	0f b6 45 ef	 movzx	 eax, BYTE PTR _hit$[ebp]
  000ab	85 c0		 test	 eax, eax
  000ad	74 23		 je	 SHORT $LN7@RayTrace

; 828  : 		{
; 829  : 			callback->RayTraceCallback(p1,dir,distance,sect,this);

  000af	ff 75 e8	 push	 DWORD PTR _this$[ebp]
  000b2	8d 45 f0	 lea	 eax, DWORD PTR _sect$3[ebp]
  000b5	50		 push	 eax
  000b6	51		 push	 ecx
  000b7	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _distance$[ebp]
  000bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c1	ff 75 0c	 push	 DWORD PTR _dir$[ebp]
  000c4	ff 75 08	 push	 DWORD PTR _p1$[ebp]
  000c7	8b 45 14	 mov	 eax, DWORD PTR _callback$[ebp]
  000ca	8b 00		 mov	 eax, DWORD PTR [eax]
  000cc	8b 4d 14	 mov	 ecx, DWORD PTR _callback$[ebp]
  000cf	ff 50 08	 call	 DWORD PTR [eax+8]
$LN7@RayTrace:

; 830  : 		}
; 831  : 	}
; 832  : }

  000d2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d5	33 cd		 xor	 ecx, ebp
  000d7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000dc	c9		 leave
  000dd	c2 10 00	 ret	 16			; 00000010H
?RayTrace@SpherePack@@QAEXABVVector3d@@0MPAVSpherePackCallback@@@Z ENDP ; SpherePack::RayTrace
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?VisibilityTest@SpherePack@@QAEXABVFrustum@@PAVSpherePackCallback@@W4ViewState@@@Z
_TEXT	SEGMENT
$T1 = -24						; size = 4
tv149 = -20						; size = 4
_pack$2 = -16						; size = 4
_this$ = -12						; size = 4
$T3 = -5						; size = 1
$T4 = -4						; size = 1
$T5 = -3						; size = 1
$T6 = -2						; size = 1
$T7 = -1						; size = 1
_f$ = 8							; size = 4
_callback$ = 12						; size = 4
_state$ = 16						; size = 4
?VisibilityTest@SpherePack@@QAEXABVFrustum@@PAVSpherePackCallback@@W4ViewState@@@Z PROC ; SpherePack::VisibilityTest, COMDAT
; _this$ = ecx

; 562  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 563  : 	
; 564  : 	if (state == VS_PARTIAL)

  00009	83 7d 10 01	 cmp	 DWORD PTR _state$[ebp], 1
  0000d	75 2a		 jne	 SHORT $LN6@Visibility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 45   : 	float GetRadius(void) const { return mRadius; };

  0000f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00012	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00017	f3 0f 11 45 e8	 movss	 DWORD PTR $T1[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 566  : 		state = f.ViewVolumeTest(mCenter, GetRadius());

  0001c	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR $T1[ebp]
  00021	51		 push	 ecx
  00022	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00027	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	83 c0 04	 add	 eax, 4
  0002d	50		 push	 eax
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _f$[ebp]
  00031	e8 00 00 00 00	 call	 ?ViewVolumeTest@Frustum@@QBE?AW4ViewState@@ABVVector3d@@M@Z ; Frustum::ViewVolumeTest
  00036	89 45 10	 mov	 DWORD PTR _state$[ebp], eax
$LN6@Visibility:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  00039	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  0003f	83 e0 01	 and	 eax, 1
  00042	74 06		 je	 SHORT $LN24@Visibility
  00044	c6 45 ff 01	 mov	 BYTE PTR $T7[ebp], 1
  00048	eb 04		 jmp	 SHORT $LN23@Visibility
$LN24@Visibility:

; 134  : 		return false;

  0004a	c6 45 ff 00	 mov	 BYTE PTR $T7[ebp], 0
$LN23@Visibility:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 575  : 	if (HasSpherePackFlag(SPF_SUPERSPHERE))

  0004e	0f b6 45 ff	 movzx	 eax, BYTE PTR $T7[ebp]
  00052	85 c0		 test	 eax, eax
  00054	0f 84 f0 00 00
	00		 je	 $LN7@Visibility

; 576  : 	{
; 577  : 		
; 578  : 		
; 579  : 		if (state == VS_OUTSIDE)

  0005a	83 7d 10 02	 cmp	 DWORD PTR _state$[ebp], 2
  0005e	75 46		 jne	 SHORT $LN9@Visibility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  00060	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00066	83 e0 40	 and	 eax, 64			; 00000040H
  00069	74 06		 je	 SHORT $LN27@Visibility
  0006b	c6 45 fe 01	 mov	 BYTE PTR $T6[ebp], 1
  0006f	eb 04		 jmp	 SHORT $LN26@Visibility
$LN27@Visibility:

; 134  : 		return false;

  00071	c6 45 fe 00	 mov	 BYTE PTR $T6[ebp], 0
$LN26@Visibility:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 581  : 			if (HasSpherePackFlag(SPF_HIDDEN)) return; // no state change

  00075	0f b6 45 fe	 movzx	 eax, BYTE PTR $T6[ebp]
  00079	85 c0		 test	 eax, eax
  0007b	74 05		 je	 SHORT $LN11@Visibility
  0007d	e9 d2 01 00 00	 jmp	 $LN1@Visibility
$LN11@Visibility:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 130  : 	void ClearSpherePackFlag(SpherePackFlag flag) { mFlags&=~flag; };

  00082	b8 80 01 00 00	 mov	 eax, 384		; 00000180H
  00087	f7 d0		 not	 eax
  00089	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	23 41 38	 and	 eax, DWORD PTR [ecx+56]
  0008f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 129  : 	void SetSpherePackFlag(SpherePackFlag flag) { mFlags|=flag; };

  00095	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00098	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  0009b	83 c8 40	 or	 eax, 64			; 00000040H
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 584  : 		}

  000a4	eb 74		 jmp	 SHORT $LN42@Visibility
$LN9@Visibility:

; 585  : 		else
; 586  : 		{
; 587  : 			if (state == VS_INSIDE)

  000a6	83 7d 10 00	 cmp	 DWORD PTR _state$[ebp], 0
  000aa	75 4a		 jne	 SHORT $LN12@Visibility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  000ac	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  000af	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  000b2	25 00 01 00 00	 and	 eax, 256		; 00000100H
  000b7	74 06		 je	 SHORT $LN34@Visibility
  000b9	c6 45 fd 01	 mov	 BYTE PTR $T5[ebp], 1
  000bd	eb 04		 jmp	 SHORT $LN33@Visibility
$LN34@Visibility:

; 134  : 		return false;

  000bf	c6 45 fd 00	 mov	 BYTE PTR $T5[ebp], 0
$LN33@Visibility:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 589  : 				if (HasSpherePackFlag(SPF_INSIDE)) return; // no state change

  000c3	0f b6 45 fd	 movzx	 eax, BYTE PTR $T5[ebp]
  000c7	85 c0		 test	 eax, eax
  000c9	74 05		 je	 SHORT $LN14@Visibility
  000cb	e9 84 01 00 00	 jmp	 $LN1@Visibility
$LN14@Visibility:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 130  : 	void ClearSpherePackFlag(SpherePackFlag flag) { mFlags&=~flag; };

  000d0	b8 c0 00 00 00	 mov	 eax, 192		; 000000c0H
  000d5	f7 d0		 not	 eax
  000d7	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	23 41 38	 and	 eax, DWORD PTR [ecx+56]
  000dd	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000e0	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 129  : 	void SetSpherePackFlag(SpherePackFlag flag) { mFlags|=flag; };

  000e3	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  000e9	0d 00 01 00 00	 or	 eax, 256		; 00000100H
  000ee	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000f1	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 592  : 			}

  000f4	eb 24		 jmp	 SHORT $LN42@Visibility
$LN12@Visibility:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 130  : 	void ClearSpherePackFlag(SpherePackFlag flag) { mFlags&=~flag; };

  000f6	b8 40 01 00 00	 mov	 eax, 320		; 00000140H
  000fb	f7 d0		 not	 eax
  000fd	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00100	23 41 38	 and	 eax, DWORD PTR [ecx+56]
  00103	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00106	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 129  : 	void SetSpherePackFlag(SpherePackFlag flag) { mFlags|=flag; };

  00109	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0010c	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  0010f	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  00114	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00117	89 41 38	 mov	 DWORD PTR [ecx+56], eax
$LN42@Visibility:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 600  : 		SpherePack *pack = mChildren;

  0011a	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  00120	89 45 f0	 mov	 DWORD PTR _pack$2[ebp], eax
$LN2@Visibility:

; 601  : 		
; 602  : 		while (pack)

  00123	83 7d f0 00	 cmp	 DWORD PTR _pack$2[ebp], 0
  00127	74 1c		 je	 SHORT $LN3@Visibility

; 603  : 		{
; 604  : 			pack->VisibilityTest(f,callback,state);

  00129	ff 75 10	 push	 DWORD PTR _state$[ebp]
  0012c	ff 75 0c	 push	 DWORD PTR _callback$[ebp]
  0012f	ff 75 08	 push	 DWORD PTR _f$[ebp]
  00132	8b 4d f0	 mov	 ecx, DWORD PTR _pack$2[ebp]
  00135	e8 00 00 00 00	 call	 ?VisibilityTest@SpherePack@@QAEXABVFrustum@@PAVSpherePackCallback@@W4ViewState@@@Z ; SpherePack::VisibilityTest
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 195  : 		return mNextSibling; 

  0013a	8b 45 f0	 mov	 eax, DWORD PTR _pack$2[ebp]
  0013d	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  00140	89 45 f0	 mov	 DWORD PTR _pack$2[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 606  : 		}

  00143	eb de		 jmp	 SHORT $LN2@Visibility
$LN3@Visibility:

; 607  : 		
; 608  : 	}

  00145	e9 0a 01 00 00	 jmp	 $LN4@Visibility
$LN7@Visibility:

; 609  : 	else
; 610  : 	{
; 611  : 		switch (state)

  0014a	8b 45 10	 mov	 eax, DWORD PTR _state$[ebp]
  0014d	89 45 ec	 mov	 DWORD PTR tv149[ebp], eax
  00150	83 7d ec 00	 cmp	 DWORD PTR tv149[ebp], 0
  00154	74 15		 je	 SHORT $LN15@Visibility
  00156	83 7d ec 01	 cmp	 DWORD PTR tv149[ebp], 1
  0015a	0f 84 bc 00 00
	00		 je	 $LN19@Visibility
  00160	83 7d ec 02	 cmp	 DWORD PTR tv149[ebp], 2
  00164	74 61		 je	 SHORT $LN17@Visibility
  00166	e9 e9 00 00 00	 jmp	 $LN4@Visibility
$LN15@Visibility:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  0016b	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0016e	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00171	25 00 01 00 00	 and	 eax, 256		; 00000100H
  00176	74 06		 je	 SHORT $LN47@Visibility
  00178	c6 45 fc 01	 mov	 BYTE PTR $T4[ebp], 1
  0017c	eb 04		 jmp	 SHORT $LN46@Visibility
$LN47@Visibility:

; 134  : 		return false;

  0017e	c6 45 fc 00	 mov	 BYTE PTR $T4[ebp], 0
$LN46@Visibility:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 614  : 			if (!HasSpherePackFlag(SPF_INSIDE))

  00182	0f b6 45 fc	 movzx	 eax, BYTE PTR $T4[ebp]
  00186	85 c0		 test	 eax, eax
  00188	75 38		 jne	 SHORT $LN16@Visibility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 130  : 	void ClearSpherePackFlag(SpherePackFlag flag) { mFlags&=~flag; };

  0018a	b8 c0 00 00 00	 mov	 eax, 192		; 000000c0H
  0018f	f7 d0		 not	 eax
  00191	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00194	23 41 38	 and	 eax, DWORD PTR [ecx+56]
  00197	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0019a	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 129  : 	void SetSpherePackFlag(SpherePackFlag flag) { mFlags|=flag; };

  0019d	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  001a0	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  001a3	0d 00 01 00 00	 or	 eax, 256		; 00000100H
  001a8	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  001ab	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 618  : 				callback->VisibilityCallback(f,this,state);

  001ae	ff 75 10	 push	 DWORD PTR _state$[ebp]
  001b1	ff 75 f4	 push	 DWORD PTR _this$[ebp]
  001b4	ff 75 08	 push	 DWORD PTR _f$[ebp]
  001b7	8b 45 0c	 mov	 eax, DWORD PTR _callback$[ebp]
  001ba	8b 00		 mov	 eax, DWORD PTR [eax]
  001bc	8b 4d 0c	 mov	 ecx, DWORD PTR _callback$[ebp]
  001bf	ff 50 04	 call	 DWORD PTR [eax+4]
$LN16@Visibility:

; 619  : 			}
; 620  : 			break;

  001c2	e9 8d 00 00 00	 jmp	 $LN4@Visibility
$LN17@Visibility:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  001c7	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  001ca	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  001cd	83 e0 40	 and	 eax, 64			; 00000040H
  001d0	74 06		 je	 SHORT $LN54@Visibility
  001d2	c6 45 fb 01	 mov	 BYTE PTR $T3[ebp], 1
  001d6	eb 04		 jmp	 SHORT $LN53@Visibility
$LN54@Visibility:

; 134  : 		return false;

  001d8	c6 45 fb 00	 mov	 BYTE PTR $T3[ebp], 0
$LN53@Visibility:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 622  : 			if (!HasSpherePackFlag(SPF_HIDDEN))

  001dc	0f b6 45 fb	 movzx	 eax, BYTE PTR $T3[ebp]
  001e0	85 c0		 test	 eax, eax
  001e2	75 36		 jne	 SHORT $LN18@Visibility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 130  : 	void ClearSpherePackFlag(SpherePackFlag flag) { mFlags&=~flag; };

  001e4	b8 80 01 00 00	 mov	 eax, 384		; 00000180H
  001e9	f7 d0		 not	 eax
  001eb	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  001ee	23 41 38	 and	 eax, DWORD PTR [ecx+56]
  001f1	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  001f4	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 129  : 	void SetSpherePackFlag(SpherePackFlag flag) { mFlags|=flag; };

  001f7	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  001fa	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  001fd	83 c8 40	 or	 eax, 64			; 00000040H
  00200	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00203	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 626  : 				callback->VisibilityCallback(f,this,state);

  00206	ff 75 10	 push	 DWORD PTR _state$[ebp]
  00209	ff 75 f4	 push	 DWORD PTR _this$[ebp]
  0020c	ff 75 08	 push	 DWORD PTR _f$[ebp]
  0020f	8b 45 0c	 mov	 eax, DWORD PTR _callback$[ebp]
  00212	8b 00		 mov	 eax, DWORD PTR [eax]
  00214	8b 4d 0c	 mov	 ecx, DWORD PTR _callback$[ebp]
  00217	ff 50 04	 call	 DWORD PTR [eax+4]
$LN18@Visibility:

; 627  : 			}
; 628  : 			break;

  0021a	eb 38		 jmp	 SHORT $LN4@Visibility
$LN19@Visibility:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 130  : 	void ClearSpherePackFlag(SpherePackFlag flag) { mFlags&=~flag; };

  0021c	b8 40 01 00 00	 mov	 eax, 320		; 00000140H
  00221	f7 d0		 not	 eax
  00223	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00226	23 41 38	 and	 eax, DWORD PTR [ecx+56]
  00229	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0022c	89 41 38	 mov	 DWORD PTR [ecx+56], eax

; 129  : 	void SetSpherePackFlag(SpherePackFlag flag) { mFlags|=flag; };

  0022f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00232	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00235	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  0023a	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0023d	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 634  : 				callback->VisibilityCallback(f,this,state);

  00240	ff 75 10	 push	 DWORD PTR _state$[ebp]
  00243	ff 75 f4	 push	 DWORD PTR _this$[ebp]
  00246	ff 75 08	 push	 DWORD PTR _f$[ebp]
  00249	8b 45 0c	 mov	 eax, DWORD PTR _callback$[ebp]
  0024c	8b 00		 mov	 eax, DWORD PTR [eax]
  0024e	8b 4d 0c	 mov	 ecx, DWORD PTR _callback$[ebp]
  00251	ff 50 04	 call	 DWORD PTR [eax+4]
$LN4@Visibility:
$LN1@Visibility:

; 635  : 			}
; 636  : 			break;
; 637  : 		}
; 638  : 		
; 639  : 	}
; 640  : }

  00254	c9		 leave
  00255	c2 0c 00	 ret	 12			; 0000000cH
?VisibilityTest@SpherePack@@QAEXABVFrustum@@PAVSpherePackCallback@@W4ViewState@@@Z ENDP ; SpherePack::VisibilityTest
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
;	COMDAT ?ComputeBindingDistance@SpherePack@@QAEXPAV1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
_parent$ = 8						; size = 4
?ComputeBindingDistance@SpherePack@@QAEXPAV1@@Z PROC	; SpherePack::ComputeBindingDistance, COMDAT
; _this$ = ecx

; 241  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 45   : 	float GetRadius(void) const { return mRadius; };

  00009	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]
  0000c	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00011	f3 0f 11 45 f8	 movss	 DWORD PTR $T2[ebp], xmm0
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  0001e	f3 0f 11 45 f4	 movss	 DWORD PTR $T1[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 242  : 		mBindingDistance = parent->GetRadius() - GetRadius();

  00023	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR $T2[ebp]
  00028	f3 0f 5c 45 f4	 subss	 xmm0, DWORD PTR $T1[ebp]
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	f3 0f 11 40 40	 movss	 DWORD PTR [eax+64], xmm0

; 243  : 		if ( mBindingDistance <= 0 )

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	0f 57 c0	 xorps	 xmm0, xmm0
  0003b	0f 2f 40 40	 comiss	 xmm0, DWORD PTR [eax+64]
  0003f	72 0d		 jb	 SHORT $LN2@ComputeBin

; 244  : 			mBindingDistance = 0;

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	0f 57 c0	 xorps	 xmm0, xmm0
  00047	f3 0f 11 40 40	 movss	 DWORD PTR [eax+64], xmm0
  0004c	eb 18		 jmp	 SHORT $LN3@ComputeBin
$LN2@ComputeBin:

; 245  : 		else
; 246  : 			mBindingDistance*=mBindingDistance;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	f3 0f 10 40 40	 movss	 xmm0, DWORD PTR [eax+64]
  00059	f3 0f 59 41 40	 mulss	 xmm0, DWORD PTR [ecx+64]
  0005e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00061	f3 0f 11 40 40	 movss	 DWORD PTR [eax+64], xmm0
$LN3@ComputeBin:

; 247  : 	}

  00066	c9		 leave
  00067	c2 04 00	 ret	 4
?ComputeBindingDistance@SpherePack@@QAEXPAV1@@Z ENDP	; SpherePack::ComputeBindingDistance
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?Recompute@SpherePack@@QAE_NM@Z
_TEXT	SEGMENT
$T1 = -108						; size = 12
$T2 = -96						; size = 4
$T3 = -92						; size = 4
$T4 = -88						; size = 4
_dist$5 = -84						; size = 4
$T6 = -80						; size = 4
_radius$7 = -76						; size = 4
_this$ = -72						; size = 4
_this$ = -68						; size = 4
_a$ = -64						; size = 4
_recip$8 = -60						; size = 4
_a$ = -56						; size = 4
_this$ = -52						; size = 4
_count$ = -48						; size = 4
_maxradius$9 = -44					; size = 4
$T10 = -37						; size = 1
_pack$ = -36						; size = 4
_this$ = -32						; size = 4
_oldpos$11 = -28					; size = 12
_total$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_gravy$ = 8						; size = 4
?Recompute@SpherePack@@QAE_NM@Z PROC			; SpherePack::Recompute, COMDAT
; _this$ = ecx

; 245  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 246  : 	if (!mChildren) return true; // kill it!

  00013	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00016	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  0001a	75 07		 jne	 SHORT $LN8@Recompute
  0001c	b0 01		 mov	 al, 1
  0001e	e9 c0 02 00 00	 jmp	 $LN1@Recompute
$LN8@Recompute:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  00023	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00029	83 e0 08	 and	 eax, 8
  0002c	74 06		 je	 SHORT $LN15@Recompute
  0002e	c6 45 db 01	 mov	 BYTE PTR $T10[ebp], 1
  00032	eb 04		 jmp	 SHORT $LN14@Recompute
$LN15@Recompute:

; 134  : 		return false;

  00034	c6 45 db 00	 mov	 BYTE PTR $T10[ebp], 0
$LN14@Recompute:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 247  : 	if (HasSpherePackFlag(SPF_ROOTNODE)) return false; // don't recompute root nodes!

  00038	0f b6 45 db	 movzx	 eax, BYTE PTR $T10[ebp]
  0003c	85 c0		 test	 eax, eax
  0003e	74 07		 je	 SHORT $LN9@Recompute
  00040	32 c0		 xor	 al, al
  00042	e9 9c 02 00 00	 jmp	 $LN1@Recompute
$LN9@Recompute:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 37   : 		x = a;

  00047	0f 57 c0	 xorps	 xmm0, xmm0
  0004a	f3 0f 11 45 f0	 movss	 DWORD PTR _total$[ebp], xmm0

; 38   : 		y = b;

  0004f	0f 57 c0	 xorps	 xmm0, xmm0
  00052	f3 0f 11 45 f4	 movss	 DWORD PTR _total$[ebp+4], xmm0

; 39   : 		z = c;

  00057	0f 57 c0	 xorps	 xmm0, xmm0
  0005a	f3 0f 11 45 f8	 movss	 DWORD PTR _total$[ebp+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 252  : 	int count=0;

  0005f	83 65 d0 00	 and	 DWORD PTR _count$[ebp], 0

; 253  : 	SpherePack *pack = mChildren;

  00063	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00066	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  00069	89 45 dc	 mov	 DWORD PTR _pack$[ebp], eax
$LN2@Recompute:

; 254  : 	while (pack)

  0006c	83 7d dc 00	 cmp	 DWORD PTR _pack$[ebp], 0
  00070	74 70		 je	 SHORT $LN3@Recompute

; 255  : 	{
; 256  : 		total+=pack->mCenter;

  00072	8b 45 dc	 mov	 eax, DWORD PTR _pack$[ebp]
  00075	83 c0 04	 add	 eax, 4
  00078	89 45 c8	 mov	 DWORD PTR _a$[ebp], eax
  0007b	8d 45 94	 lea	 eax, DWORD PTR $T1[ebp]
  0007e	89 45 cc	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 30   : 		x = a.x;

  00081	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  00084	8b 4d c8	 mov	 ecx, DWORD PTR _a$[ebp]
  00087	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00089	89 08		 mov	 DWORD PTR [eax], ecx

; 31   : 		y = a.y;

  0008b	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  0008e	8b 4d c8	 mov	 ecx, DWORD PTR _a$[ebp]
  00091	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00094	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 32   : 		z = a.z;

  00097	8b 45 cc	 mov	 eax, DWORD PTR _this$[ebp]
  0009a	8b 4d c8	 mov	 ecx, DWORD PTR _a$[ebp]
  0009d	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  000a0	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 80   : 	{ x+=A.x; y+=A.y; z+=A.z; };

  000a3	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _total$[ebp]
  000a8	f3 0f 58 45 94	 addss	 xmm0, DWORD PTR $T1[ebp]
  000ad	f3 0f 11 45 f0	 movss	 DWORD PTR _total$[ebp], xmm0
  000b2	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _total$[ebp+4]
  000b7	f3 0f 58 45 98	 addss	 xmm0, DWORD PTR $T1[ebp+4]
  000bc	f3 0f 11 45 f4	 movss	 DWORD PTR _total$[ebp+4], xmm0
  000c1	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _total$[ebp+8]
  000c6	f3 0f 58 45 9c	 addss	 xmm0, DWORD PTR $T1[ebp+8]
  000cb	f3 0f 11 45 f8	 movss	 DWORD PTR _total$[ebp+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 257  : 		count++;

  000d0	8b 45 d0	 mov	 eax, DWORD PTR _count$[ebp]
  000d3	40		 inc	 eax
  000d4	89 45 d0	 mov	 DWORD PTR _count$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 195  : 		return mNextSibling; 

  000d7	8b 45 dc	 mov	 eax, DWORD PTR _pack$[ebp]
  000da	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  000dd	89 45 dc	 mov	 DWORD PTR _pack$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 259  : 	}

  000e0	eb 8a		 jmp	 SHORT $LN2@Recompute
$LN3@Recompute:

; 260  : 	
; 261  : 	if (count)

  000e2	83 7d d0 00	 cmp	 DWORD PTR _count$[ebp], 0
  000e6	0f 84 e4 01 00
	00		 je	 $LN7@Recompute

; 262  : 	{
; 263  : 		float recip = 1.0f / float(count);

  000ec	f3 0f 2a 45 d0	 cvtsi2ss xmm0, DWORD PTR _count$[ebp]
  000f1	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  000f9	f3 0f 5e c8	 divss	 xmm1, xmm0
  000fd	f3 0f 11 4d c4	 movss	 DWORD PTR _recip$8[ebp], xmm1
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 84   : 	{x*=s; y*=s; z*=s;}

  00102	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _total$[ebp]
  00107	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _recip$8[ebp]
  0010c	f3 0f 11 45 f0	 movss	 DWORD PTR _total$[ebp], xmm0
  00111	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _total$[ebp+4]
  00116	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _recip$8[ebp]
  0011b	f3 0f 11 45 f4	 movss	 DWORD PTR _total$[ebp+4], xmm0
  00120	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _total$[ebp+8]
  00125	f3 0f 59 45 c4	 mulss	 xmm0, DWORD PTR _recip$8[ebp]
  0012a	f3 0f 11 45 f8	 movss	 DWORD PTR _total$[ebp+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 266  : 		Vector3d oldpos = mCenter;

  0012f	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00132	83 c0 04	 add	 eax, 4
  00135	89 45 c0	 mov	 DWORD PTR _a$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 30   : 		x = a.x;

  00138	8b 45 c0	 mov	 eax, DWORD PTR _a$[ebp]
  0013b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0013f	f3 0f 11 45 e4	 movss	 DWORD PTR _oldpos$11[ebp], xmm0

; 31   : 		y = a.y;

  00144	8b 45 c0	 mov	 eax, DWORD PTR _a$[ebp]
  00147	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0014c	f3 0f 11 45 e8	 movss	 DWORD PTR _oldpos$11[ebp+4], xmm0

; 32   : 		z = a.z;

  00151	8b 45 c0	 mov	 eax, DWORD PTR _a$[ebp]
  00154	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00159	f3 0f 11 45 ec	 movss	 DWORD PTR _oldpos$11[ebp+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 271  : 		mCenter = total; // new origin!

  0015e	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00161	83 c0 04	 add	 eax, 4
  00164	89 45 bc	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 57   : 	{ x=A.x; y=A.y; z=A.z;

  00167	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  0016a	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _total$[ebp]
  0016f	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00173	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  00176	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _total$[ebp+4]
  0017b	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
  00180	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  00183	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _total$[ebp+8]
  00188	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 272  : 		float maxradius = 0;

  0018d	0f 57 c0	 xorps	 xmm0, xmm0
  00190	f3 0f 11 45 d4	 movss	 DWORD PTR _maxradius$9[ebp], xmm0

; 273  : 		
; 274  : 		pack = mChildren;

  00195	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00198	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  0019b	89 45 dc	 mov	 DWORD PTR _pack$[ebp], eax
$LN4@Recompute:

; 275  : 		
; 276  : 		while (pack)

  0019e	83 7d dc 00	 cmp	 DWORD PTR _pack$[ebp], 0
  001a2	0f 84 d5 00 00
	00		 je	 $LN5@Recompute
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 212  : 	float DistanceSquared(const SpherePack *pack) const { return mCenter.DistanceSq( pack->mCenter );  };

  001a8	8b 45 dc	 mov	 eax, DWORD PTR _pack$[ebp]
  001ab	83 c0 04	 add	 eax, 4
  001ae	50		 push	 eax
  001af	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  001b2	83 c1 04	 add	 ecx, 4
  001b5	e8 00 00 00 00	 call	 ?DistanceSq@Vector3d@@QBEMABV1@@Z ; Vector3d::DistanceSq
  001ba	d9 5d b0	 fstp	 DWORD PTR $T6[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 278  : 			float dist = DistanceSquared(pack);

  001bd	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR $T6[ebp]
  001c2	f3 0f 11 45 ac	 movss	 DWORD PTR _dist$5[ebp], xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  001c7	f3 0f 5a 45 ac	 cvtss2sd xmm0, DWORD PTR _dist$5[ebp]
  001cc	51		 push	 ecx
  001cd	51		 push	 ecx
  001ce	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001d3	e8 00 00 00 00	 call	 _sqrt
  001d8	59		 pop	 ecx
  001d9	59		 pop	 ecx
  001da	d9 5d a8	 fstp	 DWORD PTR $T4[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 45   : 	float GetRadius(void) const { return mRadius; };

  001dd	8b 45 dc	 mov	 eax, DWORD PTR _pack$[ebp]
  001e0	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  001e5	f3 0f 11 45 a4	 movss	 DWORD PTR $T3[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 279  : 			float radius = sqrtf(dist) + pack->GetRadius();

  001ea	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR $T4[ebp]
  001ef	f3 0f 58 45 a4	 addss	 xmm0, DWORD PTR $T3[ebp]
  001f4	f3 0f 11 45 b4	 movss	 DWORD PTR _radius$7[ebp], xmm0

; 280  : 			if (radius > maxradius)

  001f9	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _radius$7[ebp]
  001fe	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _maxradius$9[ebp]
  00202	76 6b		 jbe	 SHORT $LN12@Recompute

; 281  : 			{
; 282  : 				maxradius = radius;

  00204	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _radius$7[ebp]
  00209	f3 0f 11 45 d4	 movss	 DWORD PTR _maxradius$9[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 45   : 	float GetRadius(void) const { return mRadius; };

  0020e	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00211	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00216	f3 0f 11 45 a0	 movss	 DWORD PTR $T2[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 283  : 				if ((maxradius+gravy) >= GetRadius())

  0021b	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _maxradius$9[ebp]
  00220	f3 0f 58 45 08	 addss	 xmm0, DWORD PTR _gravy$[ebp]
  00225	0f 2f 45 a0	 comiss	 xmm0, DWORD PTR $T2[ebp]
  00229	72 44		 jb	 SHORT $LN12@Recompute

; 284  : 				{
; 285  : #ifdef __STATIC_RANGE__
; 286  : 					assert(oldpos.IsInStaticRange());
; 287  : #endif
; 288  : 					mCenter = oldpos;

  0022b	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0022e	83 c0 04	 add	 eax, 4
  00231	89 45 b8	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 57   : 	{ x=A.x; y=A.y; z=A.z;

  00234	8b 45 b8	 mov	 eax, DWORD PTR _this$[ebp]
  00237	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _oldpos$11[ebp]
  0023c	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00240	8b 45 b8	 mov	 eax, DWORD PTR _this$[ebp]
  00243	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _oldpos$11[ebp+4]
  00248	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
  0024d	8b 45 b8	 mov	 eax, DWORD PTR _this$[ebp]
  00250	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _oldpos$11[ebp+8]
  00255	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 130  : 	void ClearSpherePackFlag(SpherePackFlag flag) { mFlags&=~flag; };

  0025a	6a 10		 push	 16			; 00000010H
  0025c	58		 pop	 eax
  0025d	f7 d0		 not	 eax
  0025f	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00262	23 41 38	 and	 eax, DWORD PTR [ecx+56]
  00265	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00268	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 290  : 					return false;

  0026b	32 c0		 xor	 al, al
  0026d	eb 74		 jmp	 SHORT $LN1@Recompute
$LN12@Recompute:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 195  : 		return mNextSibling; 

  0026f	8b 45 dc	 mov	 eax, DWORD PTR _pack$[ebp]
  00272	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  00275	89 45 dc	 mov	 DWORD PTR _pack$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 294  : 		}

  00278	e9 21 ff ff ff	 jmp	 $LN4@Recompute
$LN5@Recompute:

; 295  : 		
; 296  : 		maxradius+=gravy;

  0027d	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _maxradius$9[ebp]
  00282	f3 0f 58 45 08	 addss	 xmm0, DWORD PTR _gravy$[ebp]
  00287	f3 0f 11 45 d4	 movss	 DWORD PTR _maxradius$9[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 67   : 		mRadius = radius;

  0028c	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0028f	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _maxradius$9[ebp]
  00294	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 68   : 		mRadius2 = radius*radius;

  00299	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _maxradius$9[ebp]
  0029e	f3 0f 59 45 d4	 mulss	 xmm0, DWORD PTR _maxradius$9[ebp]
  002a3	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  002a6	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 301  : 		pack = mChildren;

  002ab	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  002ae	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  002b1	89 45 dc	 mov	 DWORD PTR _pack$[ebp], eax
$LN6@Recompute:

; 302  : 		
; 303  : 		while (pack)

  002b4	83 7d dc 00	 cmp	 DWORD PTR _pack$[ebp], 0
  002b8	74 16		 je	 SHORT $LN7@Recompute

; 304  : 		{
; 305  : 			pack->ComputeBindingDistance(this);

  002ba	ff 75 e0	 push	 DWORD PTR _this$[ebp]
  002bd	8b 4d dc	 mov	 ecx, DWORD PTR _pack$[ebp]
  002c0	e8 00 00 00 00	 call	 ?ComputeBindingDistance@SpherePack@@QAEXPAV1@@Z ; SpherePack::ComputeBindingDistance
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 195  : 		return mNextSibling; 

  002c5	8b 45 dc	 mov	 eax, DWORD PTR _pack$[ebp]
  002c8	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  002cb	89 45 dc	 mov	 DWORD PTR _pack$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 307  : 		}

  002ce	eb e4		 jmp	 SHORT $LN6@Recompute
$LN7@Recompute:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 130  : 	void ClearSpherePackFlag(SpherePackFlag flag) { mFlags&=~flag; };

  002d0	6a 10		 push	 16			; 00000010H
  002d2	58		 pop	 eax
  002d3	f7 d0		 not	 eax
  002d5	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  002d8	23 41 38	 and	 eax, DWORD PTR [ecx+56]
  002db	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  002de	89 41 38	 mov	 DWORD PTR [ecx+56], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 315  : 	return false;

  002e1	32 c0		 xor	 al, al
$LN1@Recompute:

; 316  : }

  002e3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002e6	33 cd		 xor	 ecx, ebp
  002e8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002ed	c9		 leave
  002ee	c2 04 00	 ret	 4
?Recompute@SpherePack@@QAE_NM@Z ENDP			; SpherePack::Recompute
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp
;	COMDAT ?LostChild@SpherePack@@QAEXPAV1@@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
_next$1 = -20						; size = 4
_prev$ = -16						; size = 4
_next$2 = -12						; size = 4
_this$ = -8						; size = 4
$T3 = -1						; size = 1
_t$ = 8							; size = 4
?LostChild@SpherePack@@QAEXPAV1@@Z PROC			; SpherePack::LostChild, COMDAT
; _this$ = ecx

; 320  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 199  : 		return mPrevSibling; 

  00009	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  0000c	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  0000f	89 45 f0	 mov	 DWORD PTR _prev$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 344  : 	if (prev)

  00012	83 7d f0 00	 cmp	 DWORD PTR _prev$[ebp], 0
  00016	74 23		 je	 SHORT $LN2@LostChild
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 195  : 		return mNextSibling; 

  00018	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  0001b	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  0001e	89 45 f4	 mov	 DWORD PTR _next$2[ebp], eax

; 190  : 	void SetNextSibling(SpherePack *child) { mNextSibling = child; }

  00021	8b 45 f0	 mov	 eax, DWORD PTR _prev$[ebp]
  00024	8b 4d f4	 mov	 ecx, DWORD PTR _next$2[ebp]
  00027	89 48 28	 mov	 DWORD PTR [eax+40], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 348  : 		if (next) next->SetPrevSibling(prev);

  0002a	83 7d f4 00	 cmp	 DWORD PTR _next$2[ebp], 0
  0002e	74 09		 je	 SHORT $LN4@LostChild
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 191  : 	void SetPrevSibling(SpherePack *child) { mPrevSibling = child; }

  00030	8b 45 f4	 mov	 eax, DWORD PTR _next$2[ebp]
  00033	8b 4d f0	 mov	 ecx, DWORD PTR _prev$[ebp]
  00036	89 48 2c	 mov	 DWORD PTR [eax+44], ecx
$LN4@LostChild:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 350  : 	}

  00039	eb 2b		 jmp	 SHORT $LN3@LostChild
$LN2@LostChild:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 195  : 		return mNextSibling; 

  0003b	8b 45 08	 mov	 eax, DWORD PTR _t$[ebp]
  0003e	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  00041	89 45 ec	 mov	 DWORD PTR _next$1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 354  : 		mChildren = next;

  00044	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 4d ec	 mov	 ecx, DWORD PTR _next$1[ebp]
  0004a	89 48 24	 mov	 DWORD PTR [eax+36], ecx

; 355  : 		if (mChildren) mChildren->SetPrevSibling(0);

  0004d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  00054	74 10		 je	 SHORT $LN3@LostChild
  00056	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00059	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  0005c	89 45 e8	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 191  : 	void SetPrevSibling(SpherePack *child) { mPrevSibling = child; }

  0005f	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00062	83 60 2c 00	 and	 DWORD PTR [eax+44], 0
$LN3@LostChild:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 358  : 	mChildCount--;

  00066	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00069	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]
  0006c	48		 dec	 eax
  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 360  : 	if (!mChildCount && HasSpherePackFlag(SPF_SUPERSPHERE))

  00073	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00076	83 78 3c 00	 cmp	 DWORD PTR [eax+60], 0
  0007a	75 2b		 jne	 SHORT $LN1@LostChild
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 133  : 		if ( mFlags & flag ) return true;

  0007c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00082	83 e0 01	 and	 eax, 1
  00085	74 06		 je	 SHORT $LN21@LostChild
  00087	c6 45 ff 01	 mov	 BYTE PTR $T3[ebp], 1
  0008b	eb 04		 jmp	 SHORT $LN20@LostChild
$LN21@LostChild:

; 134  : 		return false;

  0008d	c6 45 ff 00	 mov	 BYTE PTR $T3[ebp], 0
$LN20@LostChild:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.cpp

; 360  : 	if (!mChildCount && HasSpherePackFlag(SPF_SUPERSPHERE))

  00091	0f b6 45 ff	 movzx	 eax, BYTE PTR $T3[ebp]
  00095	85 c0		 test	 eax, eax
  00097	74 0e		 je	 SHORT $LN1@LostChild

; 361  : 	{
; 362  : 		mFactory->Remove(this);

  00099	ff 75 f8	 push	 DWORD PTR _this$[ebp]
  0009c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  000a2	e8 00 00 00 00	 call	 ?Remove@SpherePackFactory@@QAEXPAVSpherePack@@@Z ; SpherePackFactory::Remove
$LN1@LostChild:

; 363  : 	}
; 364  : }

  000a7	c9		 leave
  000a8	c2 04 00	 ret	 4
?LostChild@SpherePack@@QAEXPAV1@@Z ENDP			; SpherePack::LostChild
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
;	COMDAT ?AddChild@SpherePack@@QAEXPAV1@@Z
_TEXT	SEGMENT
_my_child$ = -8						; size = 4
_this$ = -4						; size = 4
_pack$ = 8						; size = 4
?AddChild@SpherePack@@QAEXPAV1@@Z PROC			; SpherePack::AddChild, COMDAT
; _this$ = ecx

; 169  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 170  : 		
; 171  : 		SpherePack *my_child = mChildren;

  00008	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  0000e	89 45 f8	 mov	 DWORD PTR _my_child$[ebp], eax

; 172  : 		mChildren = pack; // new head of list

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 08	 mov	 ecx, DWORD PTR _pack$[ebp]
  00017	89 48 24	 mov	 DWORD PTR [eax+36], ecx

; 190  : 	void SetNextSibling(SpherePack *child) { mNextSibling = child; }

  0001a	8b 45 08	 mov	 eax, DWORD PTR _pack$[ebp]
  0001d	8b 4d f8	 mov	 ecx, DWORD PTR _my_child$[ebp]
  00020	89 48 28	 mov	 DWORD PTR [eax+40], ecx

; 191  : 	void SetPrevSibling(SpherePack *child) { mPrevSibling = child; }

  00023	8b 45 08	 mov	 eax, DWORD PTR _pack$[ebp]
  00026	83 60 2c 00	 and	 DWORD PTR [eax+44], 0

; 138  : 	void SetParent(SpherePack *pack) { mParent = pack; };

  0002a	8b 45 08	 mov	 eax, DWORD PTR _pack$[ebp]
  0002d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	89 48 20	 mov	 DWORD PTR [eax+32], ecx

; 173  : 		
; 174  : 		pack->SetNextSibling(my_child); // his next is my old next
; 175  : 		pack->SetPrevSibling(0); // at head of list, no previous
; 176  : 		pack->SetParent(this);
; 177  : 		
; 178  : 		if ( my_child ) my_child->SetPrevSibling(pack); // previous now this..

  00033	83 7d f8 00	 cmp	 DWORD PTR _my_child$[ebp], 0
  00037	74 09		 je	 SHORT $LN2@AddChild

; 191  : 	void SetPrevSibling(SpherePack *child) { mPrevSibling = child; }

  00039	8b 45 f8	 mov	 eax, DWORD PTR _my_child$[ebp]
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _pack$[ebp]
  0003f	89 48 2c	 mov	 DWORD PTR [eax+44], ecx
$LN2@AddChild:

; 179  : 		
; 180  : 		mChildCount++;

  00042	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]
  00048	40		 inc	 eax
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004c	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 181  : 
; 182  : #if defined(_DEBUG)
; 183  : 		float dist = DistanceSquared(pack);
; 184  : 		float radius = sqrtf(dist) + pack->GetRadius();
; 185  : 		
; 186  : 		assert( radius <= GetRadius()+0.0001f );
; 187  : #endif
; 188  : 	}

  0004f	c9		 leave
  00050	c2 04 00	 ret	 4
?AddChild@SpherePack@@QAEXPAV1@@Z ENDP			; SpherePack::AddChild
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
;	COMDAT ?Unlink@SpherePack@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Unlink@SpherePack@@QAEXXZ PROC				; SpherePack::Unlink, COMDAT
; _this$ = ecx

; 147  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 148  : 		if ( mFifo1 ) // if we belong to fifo1, null us out

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 78 30 00	 cmp	 DWORD PTR [eax+48], 0
  0000e	74 10		 je	 SHORT $LN2@Unlink

; 149  : 		{
; 150  : 			*mFifo1 = 0;

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  00016	83 20 00	 and	 DWORD PTR [eax], 0

; 151  : 			mFifo1 = 0;

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	83 60 30 00	 and	 DWORD PTR [eax+48], 0
$LN2@Unlink:

; 152  : 		}
; 153  : 		
; 154  : 		if ( mFifo2 ) // if we belong to fifo2, null us out

  00020	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00023	83 78 34 00	 cmp	 DWORD PTR [eax+52], 0
  00027	74 10		 je	 SHORT $LN3@Unlink

; 155  : 		{
; 156  : 			*mFifo2 = 0;

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 40 34	 mov	 eax, DWORD PTR [eax+52]
  0002f	83 20 00	 and	 DWORD PTR [eax], 0

; 157  : 			mFifo2 = 0;

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	83 60 34 00	 and	 DWORD PTR [eax+52], 0
$LN3@Unlink:

; 158  : 		}
; 159  : 		
; 160  : 		if ( mParent ) mParent->LostChild(this);

  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  00040	74 0e		 je	 SHORT $LN4@Unlink
  00042	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0004b	e8 00 00 00 00	 call	 ?LostChild@SpherePack@@QAEXPAV1@@Z ; SpherePack::LostChild
$LN4@Unlink:

; 161  : 		
; 162  : 		assert( !mChildren ); // can't unlink guys with children!
; 163  : 		
; 164  : 		mParent = 0; // got no father anymore

  00050	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00053	83 60 20 00	 and	 DWORD PTR [eax+32], 0

; 165  : 	}

  00057	c9		 leave
  00058	c3		 ret	 0
?Unlink@SpherePack@@QAEXXZ ENDP				; SpherePack::Unlink
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
;	COMDAT ?NewPosRadius@SpherePack@@QAEXABVVector3d@@M@Z
_TEXT	SEGMENT
_dist$1 = -28						; size = 4
$T2 = -24						; size = 4
_pack$ = -20						; size = 4
$T3 = -16						; size = 4
_this$ = -12						; size = 4
_this$ = -8						; size = 4
$T4 = -1						; size = 1
_pos$ = 8						; size = 4
_radius$ = 12						; size = 4
?NewPosRadius@SpherePack@@QAEXABVVector3d@@M@Z PROC	; SpherePack::NewPosRadius, COMDAT
; _this$ = ecx

; 471  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 472  : 	// New position and, possibly, a new radius.
; 473  : 	mCenter = pos;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	89 45 f4	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 57   : 	{ x=A.x; y=A.y; z=A.z;

  00012	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _pos$[ebp]
  00018	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0001a	89 08		 mov	 DWORD PTR [eax], ecx
  0001c	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _pos$[ebp]
  00022	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00025	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00028	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _pos$[ebp]
  0002e	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00031	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 475  : 	if (mParent && !HasSpherePackFlag(SPF_INTEGRATE))

  00034	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	83 78 20 00	 cmp	 DWORD PTR [eax+32], 0
  0003b	0f 84 c7 00 00
	00		 je	 $LN4@NewPosRadi

; 133  : 		if ( mFlags & flag ) return true;

  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00047	83 e0 20	 and	 eax, 32			; 00000020H
  0004a	74 06		 je	 SHORT $LN9@NewPosRadi
  0004c	c6 45 ff 01	 mov	 BYTE PTR $T4[ebp], 1
  00050	eb 04		 jmp	 SHORT $LN8@NewPosRadi
$LN9@NewPosRadi:

; 134  : 		return false;

  00052	c6 45 ff 00	 mov	 BYTE PTR $T4[ebp], 0
$LN8@NewPosRadi:

; 475  : 	if (mParent && !HasSpherePackFlag(SPF_INTEGRATE))

  00056	0f b6 45 ff	 movzx	 eax, BYTE PTR $T4[ebp]
  0005a	85 c0		 test	 eax, eax
  0005c	0f 85 a6 00 00
	00		 jne	 $LN4@NewPosRadi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 45   : 	float GetRadius(void) const { return mRadius; };

  00062	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00065	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  0006a	f3 0f 11 45 f0	 movss	 DWORD PTR $T3[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 477  : 		if (radius != GetRadius())

  0006f	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _radius$[ebp]
  00074	0f 2e 45 f0	 ucomiss xmm0, DWORD PTR $T3[ebp]
  00078	9f		 lahf
  00079	f6 c4 44	 test	 ah, 68			; 00000044H
  0007c	7b 2d		 jnp	 SHORT $LN3@NewPosRadi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 67   : 		mRadius = radius;

  0007e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00081	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _radius$[ebp]
  00086	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 68   : 		mRadius2 = radius*radius;

  0008b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _radius$[ebp]
  00090	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _radius$[ebp]
  00095	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00098	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 480  : 			ComputeBindingDistance(mParent);

  0009d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000a0	ff 70 20	 push	 DWORD PTR [eax+32]
  000a3	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a6	e8 00 00 00 00	 call	 ?ComputeBindingDistance@SpherePack@@QAEXPAV1@@Z ; SpherePack::ComputeBindingDistance
$LN3@NewPosRadi:

; 481  : 		}
; 482  : 		
; 483  : 		mFactory->AddRecompute(mParent);

  000ab	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	ff 70 20	 push	 DWORD PTR [eax+32]
  000b1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000b4	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  000b7	e8 00 00 00 00	 call	 ?AddRecompute@SpherePackFactory@@QAEXPAVSpherePack@@@Z ; SpherePackFactory::AddRecompute

; 484  : 
; 485  : 		float dist = DistanceSquared(mParent);

  000bc	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  000c2	89 45 ec	 mov	 DWORD PTR _pack$[ebp], eax

; 212  : 	float DistanceSquared(const SpherePack *pack) const { return mCenter.DistanceSq( pack->mCenter );  };

  000c5	8b 45 ec	 mov	 eax, DWORD PTR _pack$[ebp]
  000c8	83 c0 04	 add	 eax, 4
  000cb	50		 push	 eax
  000cc	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000cf	83 c1 04	 add	 ecx, 4
  000d2	e8 00 00 00 00	 call	 ?DistanceSq@Vector3d@@QBEMABV1@@Z ; Vector3d::DistanceSq
  000d7	d9 5d e8	 fstp	 DWORD PTR $T2[ebp]

; 484  : 
; 485  : 		float dist = DistanceSquared(mParent);

  000da	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR $T2[ebp]
  000df	f3 0f 11 45 e4	 movss	 DWORD PTR _dist$1[ebp], xmm0

; 486  : 	
; 487  : 		if (dist >= mBindingDistance)

  000e4	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000e7	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _dist$1[ebp]
  000ec	0f 2f 40 40	 comiss	 xmm0, DWORD PTR [eax+64]
  000f0	72 16		 jb	 SHORT $LN4@NewPosRadi

; 488  : 		{
; 489  : 			Unlink();

  000f2	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f5	e8 00 00 00 00	 call	 ?Unlink@SpherePack@@QAEXXZ ; SpherePack::Unlink

; 490  : 			mFactory->AddIntegrate(this);

  000fa	ff 75 f8	 push	 DWORD PTR _this$[ebp]
  000fd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00100	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  00103	e8 00 00 00 00	 call	 ?AddIntegrate@SpherePackFactory@@QAEXPAVSpherePack@@@Z ; SpherePackFactory::AddIntegrate
$LN4@NewPosRadi:

; 491  : 		}
; 492  : 	}
; 493  : }

  00108	c9		 leave
  00109	c2 08 00	 ret	 8
?NewPosRadius@SpherePack@@QAEXABVVector3d@@M@Z ENDP	; SpherePack::NewPosRadius
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
;	COMDAT ?Init@SpherePack@@QAEXPAVSpherePackFactory@@ABVVector3d@@MPAX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_this$ = -4						; size = 4
_factory$ = 8						; size = 4
_pos$ = 12						; size = 4
_radius$ = 16						; size = 4
_userdata$ = 20						; size = 4
_isSphere$ = 24						; size = 1
?Init@SpherePack@@QAEXPAVSpherePackFactory@@ABVVector3d@@MPAX_N@Z PROC ; SpherePack::Init, COMDAT
; _this$ = ecx

; 114  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 		IS_SPHERE			= isSphere;

  00008	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	8a 4d 18	 mov	 cl, BYTE PTR _isSphere$[ebp]
  0000e	88 48 4c	 mov	 BYTE PTR [eax+76], cl

; 116  : 		mUserData         = userdata;

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 14	 mov	 ecx, DWORD PTR _userdata$[ebp]
  00017	89 48 44	 mov	 DWORD PTR [eax+68], ecx

; 117  : 		mParent           = 0;

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 60 20 00	 and	 DWORD PTR [eax+32], 0

; 118  : 		mNextSibling      = 0;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 60 28 00	 and	 DWORD PTR [eax+40], 0

; 119  : 		mPrevSibling      = 0;

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	83 60 2c 00	 and	 DWORD PTR [eax+44], 0

; 120  : 		mFlags            = 0;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	83 60 38 00	 and	 DWORD PTR [eax+56], 0

; 121  : 		mFifo1            = 0;

  00036	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00039	83 60 30 00	 and	 DWORD PTR [eax+48], 0

; 122  : 		mFifo2            = 0;

  0003d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00040	83 60 34 00	 and	 DWORD PTR [eax+52], 0

; 123  : 		mFactory          = factory;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _factory$[ebp]
  0004a	89 48 48	 mov	 DWORD PTR [eax+72], ecx

; 124  : 		mCenter           = pos;

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	83 c0 04	 add	 eax, 4
  00053	89 45 f8	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 57   : 	{ x=A.x; y=A.y; z=A.z;

  00056	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00059	8b 4d 0c	 mov	 ecx, DWORD PTR _pos$[ebp]
  0005c	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0005e	89 08		 mov	 DWORD PTR [eax], ecx
  00060	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _pos$[ebp]
  00066	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00069	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0006c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	8b 4d 0c	 mov	 ecx, DWORD PTR _pos$[ebp]
  00072	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00075	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 67   : 		mRadius = radius;

  00078	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007b	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _radius$[ebp]
  00080	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 68   : 		mRadius2 = radius*radius;

  00085	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _radius$[ebp]
  0008a	f3 0f 59 45 10	 mulss	 xmm0, DWORD PTR _radius$[ebp]
  0008f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00092	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 126  : 	};

  00097	c9		 leave
  00098	c2 14 00	 ret	 20			; 00000014H
?Init@SpherePack@@QAEXPAVSpherePackFactory@@ABVVector3d@@MPAX_N@Z ENDP ; SpherePack::Init
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
;	COMDAT ??1SpherePack@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1SpherePack@@UAE@XZ PROC				; SpherePack::~SpherePack, COMDAT
; _this$ = ecx

; 107  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7SpherePack@@6B@
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 39   : 	virtual ~Sphere() {}

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Sphere@@6B@
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 108  : 	}

  00019	c9		 leave
  0001a	c3		 ret	 0
??1SpherePack@@UAE@XZ ENDP				; SpherePack::~SpherePack
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
;	COMDAT ??0SpherePack@@QAE@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_this$ = -8						; size = 4
_this$ = -4						; size = 4
??0SpherePack@@QAE@XZ PROC				; SpherePack::SpherePack, COMDAT
; _this$ = ecx

; 89   : 	SpherePack(void)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 103  : : mCenter(Vector3d(0.0f, 0.0f, 0.0f)), mRadius(0.0f), mRadius2(0.0f) { };

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Sphere@@6B@
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	83 c0 04	 add	 eax, 4
  00018	89 45 f8	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 37   : 		x = a;

  0001b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	0f 57 c0	 xorps	 xmm0, xmm0
  00021	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 38   : 		y = b;

  00025	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00028	0f 57 c0	 xorps	 xmm0, xmm0
  0002b	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 39   : 		z = c;

  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	0f 57 c0	 xorps	 xmm0, xmm0
  00036	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 103  : : mCenter(Vector3d(0.0f, 0.0f, 0.0f)), mRadius(0.0f), mRadius2(0.0f) { };

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	0f 57 c0	 xorps	 xmm0, xmm0
  00041	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0
  00046	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00049	0f 57 c0	 xorps	 xmm0, xmm0
  0004c	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 89   : 	SpherePack(void)

  00051	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00054	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7SpherePack@@6B@

; 90   : 	{		
; 91   : 		mUserData         = 0; // default user data is null

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	83 60 44 00	 and	 DWORD PTR [eax+68], 0

; 92   : 		mFactory          = 0; // factory we are a member of

  00061	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00064	83 60 48 00	 and	 DWORD PTR [eax+72], 0

; 93   : 		mNext             = 0; // linked list pointers

  00068	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	83 60 18 00	 and	 DWORD PTR [eax+24], 0

; 94   : 		mPrevious         = 0;

  0006f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00072	83 60 1c 00	 and	 DWORD PTR [eax+28], 0

; 95   : 		mParent           = 0;

  00076	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00079	83 60 20 00	 and	 DWORD PTR [eax+32], 0

; 96   : 		mNextSibling      = 0; // our brothers and sisters at this level.

  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	83 60 28 00	 and	 DWORD PTR [eax+40], 0

; 97   : 		mPrevSibling      = 0;

  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	83 60 2c 00	 and	 DWORD PTR [eax+44], 0

; 98   : 		mChildren         = 0; // our children.

  0008b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008e	83 60 24 00	 and	 DWORD PTR [eax+36], 0

; 99   : 		mChildCount       = 0; // number of children we have.

  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	83 60 3c 00	 and	 DWORD PTR [eax+60], 0

; 100  : 		mFifo1            = 0; // our FIFO1 location if we have one.

  00099	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009c	83 60 30 00	 and	 DWORD PTR [eax+48], 0

; 101  : 		mFifo2            = 0; // our FIFO2 location if we have one.

  000a0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a3	83 60 34 00	 and	 DWORD PTR [eax+52], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h

; 67   : 		mRadius = radius;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	0f 57 c0	 xorps	 xmm0, xmm0
  000ad	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 68   : 		mRadius2 = radius*radius;

  000b2	0f 57 c0	 xorps	 xmm0, xmm0
  000b5	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@00000000
  000bd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c0	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 103  : 		mCenter.Set(0,0,0);    // default center position.

  000c5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c8	83 c0 04	 add	 eax, 4
  000cb	89 45 f4	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 107  : 		x = a;

  000ce	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  000d1	0f 57 c0	 xorps	 xmm0, xmm0
  000d4	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 108  : 		y = b;

  000d8	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  000db	0f 57 c0	 xorps	 xmm0, xmm0
  000de	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 109  : 		z = c;

  000e3	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	0f 57 c0	 xorps	 xmm0, xmm0
  000e9	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h

; 104  : 		IS_SPHERE	= false;

  000ee	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f1	c6 40 4c 00	 mov	 BYTE PTR [eax+76], 0

; 105  : 	};

  000f5	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f8	c9		 leave
  000f9	c3		 ret	 0
??0SpherePack@@QAE@XZ ENDP				; SpherePack::SpherePack
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
;	COMDAT ??_GSpherePackCallback@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSpherePackCallback@@UAEPAXI@Z PROC			; SpherePackCallback::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 56   : 	virtual ~SpherePackCallback() {}

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7SpherePackCallback@@6B@
  00010	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00013	83 e0 01	 and	 eax, 1
  00016	74 0c		 je	 SHORT $LN2@scalar
  00018	6a 04		 push	 4
  0001a	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00022	59		 pop	 ecx
  00023	59		 pop	 ecx
$LN2@scalar:
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	c9		 leave
  00028	c2 04 00	 ret	 4
??_GSpherePackCallback@@UAEPAXI@Z ENDP			; SpherePackCallback::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
;	COMDAT ?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_searchpos$ = 8						; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z PROC ; SpherePackCallback::PointTest2dCallback, COMDAT
; _this$ = ecx

; 79   : 	{};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	c9		 leave
  00008	c2 0c 00	 ret	 12			; 0000000cH
?PointTest2dCallback@SpherePackCallback@@UAEXABVVector3d@@PAVSpherePack@@W4ViewState@@@Z ENDP ; SpherePackCallback::PointTest2dCallback
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
;	COMDAT ?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_searchpos$ = 8						; size = 4
_distance$ = 12						; size = 4
_sphere$ = 16						; size = 4
_state$ = 20						; size = 4
?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z PROC ; SpherePackCallback::RangeTestCallback, COMDAT
; _this$ = ecx

; 74   : 	{};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	c9		 leave
  00008	c2 10 00	 ret	 16			; 00000010H
?RangeTestCallback@SpherePackCallback@@UAEXABVVector3d@@MPAVSpherePack@@W4ViewState@@@Z ENDP ; SpherePackCallback::RangeTestCallback
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
;	COMDAT ?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p1$ = 8						; size = 4
_dir$ = 12						; size = 4
_distance$ = 16						; size = 4
_sect$ = 20						; size = 4
_sphere$ = 24						; size = 4
?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z PROC ; SpherePackCallback::RayTraceCallback, COMDAT
; _this$ = ecx

; 68   : 	{};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	c9		 leave
  00008	c2 14 00	 ret	 20			; 00000014H
?RayTraceCallback@SpherePackCallback@@UAEXABVVector3d@@0M0PAVSpherePack@@@Z ENDP ; SpherePackCallback::RayTraceCallback
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
;	COMDAT ?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_f$ = 8							; size = 4
_sphere$ = 12						; size = 4
_state$ = 16						; size = 4
?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z PROC ; SpherePackCallback::VisibilityCallback, COMDAT
; _this$ = ecx

; 61   : 	{};

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	c9		 leave
  00008	c2 0c 00	 ret	 12			; 0000000cH
?VisibilityCallback@SpherePackCallback@@UAEXABVFrustum@@PAVSpherePack@@W4ViewState@@@Z ENDP ; SpherePackCallback::VisibilityCallback
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\spherepack.h
;	COMDAT ??1SpherePackCallback@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1SpherePackCallback@@UAE@XZ PROC			; SpherePackCallback::~SpherePackCallback, COMDAT
; _this$ = ecx

; 56   : 	virtual ~SpherePackCallback() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7SpherePackCallback@@6B@
  00010	c9		 leave
  00011	c3		 ret	 0
??1SpherePackCallback@@UAE@XZ ENDP			; SpherePackCallback::~SpherePackCallback
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\sphere.h
;	COMDAT ??_GSphere@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSphere@@UAEPAXI@Z PROC				; Sphere::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 39   : 	virtual ~Sphere() {}

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Sphere@@6B@
  00010	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00013	83 e0 01	 and	 eax, 1
  00016	74 0c		 je	 SHORT $LN2@scalar
  00018	6a 18		 push	 24			; 00000018H
  0001a	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00022	59		 pop	 ecx
  00023	59		 pop	 ecx
$LN2@scalar:
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	c9		 leave
  00028	c2 04 00	 ret	 4
??_GSphere@@UAEPAXI@Z ENDP				; Sphere::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
;	COMDAT ?Normalize@Vector3d@@QAEMXZ
_TEXT	SEGMENT
_l$ = -8						; size = 4
_this$ = -4						; size = 4
?Normalize@Vector3d@@QAEMXZ PROC			; Vector3d::Normalize, COMDAT
; _this$ = ecx

; 184  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 185  : 		float l = Length(); // get length.

  00008	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e8 00 00 00 00	 call	 ?Length@Vector3d@@QBEMXZ ; Vector3d::Length
  00010	d9 5d f8	 fstp	 DWORD PTR _l$[ebp]

; 186  : 		if ( l != 0 )

  00013	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _l$[ebp]
  00018	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  0001f	9f		 lahf
  00020	f6 c4 44	 test	 ah, 68			; 00000044H
  00023	7b 3f		 jnp	 SHORT $LN2@Normalize

; 187  : 		{
; 188  : 			x/=l;

  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0002c	f3 0f 5e 45 f8	 divss	 xmm0, DWORD PTR _l$[ebp]
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 189  : 			y/=l;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00040	f3 0f 5e 45 f8	 divss	 xmm0, DWORD PTR _l$[ebp]
  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 190  : 			z/=l;

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00050	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00055	f3 0f 5e 45 f8	 divss	 xmm0, DWORD PTR _l$[ebp]
  0005a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 191  : 		}

  00062	eb 20		 jmp	 SHORT $LN3@Normalize
$LN2@Normalize:

; 192  : 		else
; 193  : 		{
; 194  : 			x = y = z = 0;

  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	0f 57 c0	 xorps	 xmm0, xmm0
  0006a	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
  0006f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00072	0f 57 c0	 xorps	 xmm0, xmm0
  00075	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
  0007a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007d	0f 57 c0	 xorps	 xmm0, xmm0
  00080	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN3@Normalize:

; 195  : 		}
; 196  : 		return l;

  00084	d9 45 f8	 fld	 DWORD PTR _l$[ebp]

; 197  : 	};

  00087	c9		 leave
  00088	c3		 ret	 0
?Normalize@Vector3d@@QAEMXZ ENDP			; Vector3d::Normalize
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
;	COMDAT ?DistanceSq@Vector3d@@QBEMABV1@@Z
_TEXT	SEGMENT
tv147 = -20						; size = 4
_dz$ = -16						; size = 4
_dy$ = -12						; size = 4
_dx$ = -8						; size = 4
_this$ = -4						; size = 4
_a$ = 8							; size = 4
?DistanceSq@Vector3d@@QBEMABV1@@Z PROC			; Vector3d::DistanceSq, COMDAT
; _this$ = ecx

; 169  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 170  : 		float dx = a.x - x;

  00009	8b 45 08	 mov	 eax, DWORD PTR _a$[ebp]
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00017	f3 0f 11 45 f8	 movss	 DWORD PTR _dx$[ebp], xmm0

; 171  : 		float dy = a.y - y;

  0001c	8b 45 08	 mov	 eax, DWORD PTR _a$[ebp]
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00027	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  0002c	f3 0f 11 45 f4	 movss	 DWORD PTR _dy$[ebp], xmm0

; 172  : 		float dz = a.z - z;

  00031	8b 45 08	 mov	 eax, DWORD PTR _a$[ebp]
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0003c	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00041	f3 0f 11 45 f0	 movss	 DWORD PTR _dz$[ebp], xmm0

; 173  : 		return dx*dx + dy*dy + dz*dz;

  00046	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _dx$[ebp]
  0004b	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _dx$[ebp]
  00050	f3 0f 10 4d f4	 movss	 xmm1, DWORD PTR _dy$[ebp]
  00055	f3 0f 59 4d f4	 mulss	 xmm1, DWORD PTR _dy$[ebp]
  0005a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0005e	f3 0f 10 4d f0	 movss	 xmm1, DWORD PTR _dz$[ebp]
  00063	f3 0f 59 4d f0	 mulss	 xmm1, DWORD PTR _dz$[ebp]
  00068	f3 0f 58 c1	 addss	 xmm0, xmm1
  0006c	f3 0f 11 45 ec	 movss	 DWORD PTR tv147[ebp], xmm0
  00071	d9 45 ec	 fld	 DWORD PTR tv147[ebp]

; 174  : 	};

  00074	c9		 leave
  00075	c2 04 00	 ret	 4
?DistanceSq@Vector3d@@QBEMABV1@@Z ENDP			; Vector3d::DistanceSq
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
;	COMDAT ?Length@Vector3d@@QBEMXZ
_TEXT	SEGMENT
tv150 = -16						; size = 4
$T1 = -12						; size = 4
__X$ = -8						; size = 4
_this$ = -4						; size = 4
?Length@Vector3d@@QBEMXZ PROC				; Vector3d::Length, COMDAT
; _this$ = ecx

; 140  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 141  : 		return float(sqrtf( x*x + y*y + z*z ));

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00014	f3 0f 59 41 08	 mulss	 xmm0, DWORD PTR [ecx+8]
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	f3 0f 10 48 04	 movss	 xmm1, DWORD PTR [eax+4]
  00024	f3 0f 59 49 04	 mulss	 xmm1, DWORD PTR [ecx+4]
  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	f3 0f 10 10	 movss	 xmm2, DWORD PTR [eax]
  00033	f3 0f 59 11	 mulss	 xmm2, DWORD PTR [ecx]
  00037	f3 0f 58 d1	 addss	 xmm2, xmm1
  0003b	f3 0f 58 d0	 addss	 xmm2, xmm0
  0003f	f3 0f 11 55 f8	 movss	 DWORD PTR __X$[ebp], xmm2
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  00044	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  00049	51		 push	 ecx
  0004a	51		 push	 ecx
  0004b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00050	e8 00 00 00 00	 call	 _sqrt
  00055	59		 pop	 ecx
  00056	59		 pop	 ecx
  00057	d9 5d f4	 fstp	 DWORD PTR $T1[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 141  : 		return float(sqrtf( x*x + y*y + z*z ));

  0005a	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR $T1[ebp]
  0005f	f3 0f 11 45 f0	 movss	 DWORD PTR tv150[ebp], xmm0
  00064	d9 45 f0	 fld	 DWORD PTR tv150[ebp]

; 142  : 	};

  00067	c9		 leave
  00068	c3		 ret	 0
?Length@Vector3d@@QBEMXZ ENDP				; Vector3d::Length
_TEXT	ENDS
END
