; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?OnClear@CGraphicObjectInstance@@UAEXXZ		; CGraphicObjectInstance::OnClear
PUBLIC	?OnUpdate@CGraphicObjectInstance@@UAEXXZ	; CGraphicObjectInstance::OnUpdate
PUBLIC	?OnDeform@CGraphicObjectInstance@@UAEXXZ	; CGraphicObjectInstance::OnDeform
PUBLIC	?GetType@CDungeonBlock@@UBEHXZ			; CDungeonBlock::GetType
PUBLIC	??0CDungeonBlock@@QAE@XZ			; CDungeonBlock::CDungeonBlock
PUBLIC	??1CDungeonBlock@@UAE@XZ			; CDungeonBlock::~CDungeonBlock
PUBLIC	?Destroy@CDungeonBlock@@QAEXXZ			; CDungeonBlock::Destroy
PUBLIC	?BuildBoundingSphere@CDungeonBlock@@QAEXXZ	; CDungeonBlock::BuildBoundingSphere
PUBLIC	?Load@CDungeonBlock@@QAE_NPBD@Z			; CDungeonBlock::Load
PUBLIC	?Intersect@CDungeonBlock@@QAE_NPAM00@Z		; CDungeonBlock::Intersect
PUBLIC	?GetBoundBox@CDungeonBlock@@QAEXPAUD3DXVECTOR3@@0@Z ; CDungeonBlock::GetBoundBox
PUBLIC	?Update@CDungeonBlock@@QAEXXZ			; CDungeonBlock::Update
PUBLIC	?Render@CDungeonBlock@@QAEXXZ			; CDungeonBlock::Render
PUBLIC	?GetBoundingSphere@CDungeonBlock@@UAE_NAAUD3DXVECTOR3@@AAM@Z ; CDungeonBlock::GetBoundingSphere
PUBLIC	?OnUpdateCollisionData@CDungeonBlock@@UAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z ; CDungeonBlock::OnUpdateCollisionData
PUBLIC	?OnUpdateHeighInstance@CDungeonBlock@@UAEXPAVCAttributeInstance@@@Z ; CDungeonBlock::OnUpdateHeighInstance
PUBLIC	?OnGetObjectHeight@CDungeonBlock@@UAE_NMMPAM@Z	; CDungeonBlock::OnGetObjectHeight
PUBLIC	?OnRender@CDungeonBlock@@UAEXXZ			; CDungeonBlock::OnRender
PUBLIC	?OnBlendRender@CDungeonBlock@@UAEXXZ		; CDungeonBlock::OnBlendRender
PUBLIC	?OnRenderToShadowMap@CDungeonBlock@@UAEXXZ	; CDungeonBlock::OnRenderToShadowMap
PUBLIC	?OnRenderShadow@CDungeonBlock@@UAEXXZ		; CDungeonBlock::OnRenderShadow
PUBLIC	?OnRenderPCBlocker@CDungeonBlock@@UAEXXZ	; CDungeonBlock::OnRenderPCBlocker
PUBLIC	?__Initialize@CDungeonBlock@@IAEXXZ		; CDungeonBlock::__Initialize
PUBLIC	?deallocate@?$allocator@PAVCDungeonModelInstance@@@std@@QAEXQAPAVCDungeonModelInstance@@I@Z ; std::allocator<CDungeonModelInstance *>::deallocate
PUBLIC	??1?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAE@XZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::~vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >
PUBLIC	?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Reallocate_exactly
PUBLIC	?reserve@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEXI@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::reserve
PUBLIC	?clear@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEXXZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::clear
PUBLIC	?_Destroy@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXPAPAVCDungeonModelInstance@@0@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@ABEII@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXQAPAVCDungeonModelInstance@@II@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Change_array
PUBLIC	?_Tidy@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXXZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Tidy
PUBLIC	?_Xlength@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@CAXXZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Xlength
PUBLIC	?_Getal@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEAAV?$allocator@PAVCDungeonModelInstance@@@2@XZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Getal
PUBLIC	??_GCDungeonBlock@@UAEPAXI@Z			; CDungeonBlock::`scalar deleting destructor'
PUBLIC	?RenderDungeonBlock@CDungeonModelInstance@@QAEXXZ ; CDungeonModelInstance::RenderDungeonBlock
PUBLIC	?RenderDungeonBlockShadow@CDungeonModelInstance@@QAEXXZ ; CDungeonModelInstance::RenderDungeonBlockShadow
PUBLIC	??_GCDungeonModelInstance@@UAEPAXI@Z		; CDungeonModelInstance::`scalar deleting destructor'
PUBLIC	??RFUpdate@@QAEXPAVCGrannyModelInstance@@@Z	; FUpdate::operator()
PUBLIC	??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@std@@UFRender@@@std@@YA?AUFRender@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@0@0U1@@Z ; std::for_each<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDungeonModelInstance *> > >,FRender>
PUBLIC	??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@std@@UFRenderShadow@@@std@@YA?AUFRenderShadow@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@0@0U1@@Z ; std::for_each<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDungeonModelInstance *> > >,FRenderShadow>
PUBLIC	??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@std@@UFBoundBox@@@std@@YA?AUFBoundBox@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@0@0U1@@Z ; std::for_each<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDungeonModelInstance *> > >,FBoundBox>
PUBLIC	??$stl_wipe@V?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@@@YAXAAV?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@@Z ; stl_wipe<std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> > >
PUBLIC	??$emplace_back@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEXABQAVCDungeonModelInstance@@@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::emplace_back<CDungeonModelInstance * const &>
PUBLIC	??$_Emplace_back_with_unused_capacity@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXABQAVCDungeonModelInstance@@@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Emplace_back_with_unused_capacity<CDungeonModelInstance * const &>
PUBLIC	??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Emplace_reallocate<CDungeonModelInstance * const &>
PUBLIC	??$_Destroy_range@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAXPAPAVCDungeonModelInstance@@QAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CDungeonModelInstance *> >
PUBLIC	??$_Uninitialized_move@PAPAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAPAPAVCDungeonModelInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z ; std::_Uninitialized_move<CDungeonModelInstance * *,std::allocator<CDungeonModelInstance *> >
PUBLIC	??$_Copy_memmove@PAPAVCDungeonModelInstance@@PAPAV1@@std@@YAPAPAVCDungeonModelInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CDungeonModelInstance * *,CDungeonModelInstance * *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	??_7CDungeonBlock@@6B@				; CDungeonBlock::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	??_7CDungeonModelInstance@@6B@			; CDungeonModelInstance::`vftable'
PUBLIC	??_C@_0DG@ODGGGKHC@CDungeonBlock?3?3Load?$CIfilename?$DN?$CFs@ ; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CDungeonModelInstance@@6B@			; CDungeonModelInstance::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDungeonModelInstance@@@8		; CDungeonModelInstance `RTTI Type Descriptor'
PUBLIC	??_R3CDungeonModelInstance@@8			; CDungeonModelInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDungeonModelInstance@@8			; CDungeonModelInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDungeonModelInstance@@8		; CDungeonModelInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CGrannyModelInstance@@8		; CGrannyModelInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGrannyModelInstance@@@8		; CGrannyModelInstance `RTTI Type Descriptor'
PUBLIC	??_R3CGrannyModelInstance@@8			; CGrannyModelInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGrannyModelInstance@@8			; CGrannyModelInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicCollisionObject@@8	; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicCollisionObject@@@8		; CGraphicCollisionObject `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicBase@@8			; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicBase@@@8			; CGraphicBase `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicBase@@8				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicBase@@8				; CGraphicBase::`RTTI Base Class Array'
PUBLIC	??_R4CDungeonBlock@@6B@				; CDungeonBlock::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDungeonBlock@@@8			; CDungeonBlock `RTTI Type Descriptor'
PUBLIC	??_R3CDungeonBlock@@8				; CDungeonBlock::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDungeonBlock@@8				; CDungeonBlock::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDungeonBlock@@8			; CDungeonBlock::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CGraphicObjectInstance@@8		; CGraphicObjectInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicObjectInstance@@@8		; CGraphicObjectInstance `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicObjectInstance@@8			; CGraphicObjectInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicObjectInstance@@8			; CGraphicObjectInstance::`RTTI Base Class Array'
PUBLIC	__real@3f000000
PUBLIC	__real@43160000
PUBLIC	__real@4b189680
PUBLIC	__real@cb189680
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_memmove:PROC
EXTRN	_sqrt:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	_D3DXVec3TransformCoord@12:PROC
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	?AddReference@CReferenceObject@@QAEXXZ:PROC	; CReferenceObject::AddReference
EXTRN	?Release@CReferenceObject@@QAEXXZ:PROC		; CReferenceObject::Release
EXTRN	??0CGraphicVertexBuffer@@QAE@XZ:PROC		; CGraphicVertexBuffer::CGraphicVertexBuffer
EXTRN	??1CGraphicVertexBuffer@@UAE@XZ:PROC		; CGraphicVertexBuffer::~CGraphicVertexBuffer
EXTRN	?Destroy@CGraphicVertexBuffer@@QAEXXZ:PROC	; CGraphicVertexBuffer::Destroy
EXTRN	?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z:PROC ; CResourceManager::GetResourcePointer
EXTRN	?GetHeight@CAttributeInstance@@QAEHMMPAM@Z:PROC	; CAttributeInstance::GetHeight
EXTRN	??0CGraphicObjectInstance@@QAE@XZ:PROC		; CGraphicObjectInstance::CGraphicObjectInstance
EXTRN	??1CGraphicObjectInstance@@UAE@XZ:PROC		; CGraphicObjectInstance::~CGraphicObjectInstance
EXTRN	?Transform@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Transform
EXTRN	?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ:PROC ; CGraphicObjectInstance::GetTransform
EXTRN	?OnInitialize@CGraphicObjectInstance@@UAEXXZ:PROC ; CGraphicObjectInstance::OnInitialize
EXTRN	?AddCollision@CGraphicObjectInstance@@QAEXPBVCStaticCollisionData@@PBUD3DXMATRIX@@@Z:PROC ; CGraphicObjectInstance::AddCollision
EXTRN	?SetHeightInstance@CGraphicObjectInstance@@QAEXPAVCAttributeInstance@@@Z:PROC ; CGraphicObjectInstance::SetHeightInstance
EXTRN	?GetPNTD3DVertexBuffer@CGrannyModel@@QBEPAUIDirect3DVertexBuffer8@@XZ:PROC ; CGrannyModel::GetPNTD3DVertexBuffer
EXTRN	??0CGrannyModelInstance@@QAE@XZ:PROC		; CGrannyModelInstance::CGrannyModelInstance
EXTRN	??1CGrannyModelInstance@@UAE@XZ:PROC		; CGrannyModelInstance::~CGrannyModelInstance
EXTRN	?IsEmpty@CGrannyModelInstance@@QAE_NXZ:PROC	; CGrannyModelInstance::IsEmpty
EXTRN	?Update@CGrannyModelInstance@@QAEXK@Z:PROC	; CGrannyModelInstance::Update
EXTRN	?UpdateLocalTime@CGrannyModelInstance@@QAEXM@Z:PROC ; CGrannyModelInstance::UpdateLocalTime
EXTRN	?Deform@CGrannyModelInstance@@QAEXPBUD3DXMATRIX@@@Z:PROC ; CGrannyModelInstance::Deform
EXTRN	?SetMainModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@@Z:PROC ; CGrannyModelInstance::SetMainModelPointer
EXTRN	?GetVertexCount@CGrannyModelInstance@@QAEKXZ:PROC ; CGrannyModelInstance::GetVertexCount
EXTRN	?Intersect@CGrannyModelInstance@@QAE_NPBUD3DXMATRIX@@PAM11@Z:PROC ; CGrannyModelInstance::Intersect
EXTRN	?GetBoundBox@CGrannyModelInstance@@QAEXPAUD3DXVECTOR3@@0@Z:PROC ; CGrannyModelInstance::GetBoundBox
EXTRN	?RenderMeshNodeListWithTwoTexture@CGrannyModelInstance@@IAEXW4EType@CGrannyMesh@@W42CGrannyMaterial@@@Z:PROC ; CGrannyModelInstance::RenderMeshNodeListWithTwoTexture
EXTRN	?RenderMeshNodeListWithoutTexture@CGrannyModelInstance@@IAEXW4EType@CGrannyMesh@@W42CGrannyMaterial@@@Z:PROC ; CGrannyModelInstance::RenderMeshNodeListWithoutTexture
EXTRN	?GetModelPointer@CGraphicThing@@QAEPAVCGrannyModel@@H@Z:PROC ; CGraphicThing::GetModelPointer
EXTRN	?GetModelCount@CGraphicThing@@QBEHXZ:PROC	; CGraphicThing::GetModelCount
EXTRN	??_ECDungeonBlock@@UAEPAXI@Z:PROC		; CDungeonBlock::`vector deleting destructor'
EXTRN	?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SaveRenderState
EXTRN	?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z:PROC ; CStateManager::RestoreRenderState
EXTRN	?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SetRenderState
EXTRN	?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SaveTextureStageState
EXTRN	?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z:PROC ; CStateManager::RestoreTextureStageState
EXTRN	?SetVertexShader@CStateManager@@QAEXK@Z:PROC	; CStateManager::SetVertexShader
EXTRN	?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z:PROC ; CStateManager::SetStreamSource
EXTRN	??_ECDungeonModelInstance@@UAEPAXI@Z:PROC	; CDungeonModelInstance::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_pnt2VS@CGraphicBase@@1KA:DWORD		; CGraphicBase::ms_pnt2VS
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT __real@cb189680
CONST	SEGMENT
__real@cb189680 DD 0cb189680r			; -1e+07
CONST	ENDS
;	COMDAT __real@4b189680
CONST	SEGMENT
__real@4b189680 DD 04b189680r			; 1e+07
CONST	ENDS
;	COMDAT __real@43160000
CONST	SEGMENT
__real@43160000 DD 043160000r			; 150
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT ??_R2CGraphicObjectInstance@@8
rdata$r	SEGMENT
??_R2CGraphicObjectInstance@@8 DD FLAT:??_R1A@?0A@EA@CGraphicObjectInstance@@8 ; CGraphicObjectInstance::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicObjectInstance@@8
rdata$r	SEGMENT
??_R3CGraphicObjectInstance@@8 DD 00H			; CGraphicObjectInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CGraphicObjectInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicObjectInstance@@@8
data$rs	SEGMENT
??_R0?AVCGraphicObjectInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicObjectInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicObjectInstance@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicObjectInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicObjectInstance@@8 DD FLAT:??_R0?AVCGraphicObjectInstance@@@8 ; CGraphicObjectInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicObjectInstance@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDungeonBlock@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDungeonBlock@@8 DD FLAT:??_R0?AVCDungeonBlock@@@8 ; CDungeonBlock::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDungeonBlock@@8
rdata$r	ENDS
;	COMDAT ??_R2CDungeonBlock@@8
rdata$r	SEGMENT
??_R2CDungeonBlock@@8 DD FLAT:??_R1A@?0A@EA@CDungeonBlock@@8 ; CDungeonBlock::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicObjectInstance@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CDungeonBlock@@8
rdata$r	SEGMENT
??_R3CDungeonBlock@@8 DD 00H				; CDungeonBlock::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CDungeonBlock@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDungeonBlock@@@8
data$rs	SEGMENT
??_R0?AVCDungeonBlock@@@8 DD FLAT:??_7type_info@@6B@	; CDungeonBlock `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDungeonBlock@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CDungeonBlock@@6B@
rdata$r	SEGMENT
??_R4CDungeonBlock@@6B@ DD 00H				; CDungeonBlock::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDungeonBlock@@@8
	DD	FLAT:??_R3CDungeonBlock@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicBase@@8
rdata$r	SEGMENT
??_R2CGraphicBase@@8 DD FLAT:??_R1A@?0A@EA@CGraphicBase@@8 ; CGraphicBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicBase@@8
rdata$r	SEGMENT
??_R3CGraphicBase@@8 DD 00H				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicBase@@@8
data$rs	SEGMENT
??_R0?AVCGraphicBase@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicBase@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicBase@@8 DD FLAT:??_R0?AVCGraphicBase@@@8 ; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R2CGraphicCollisionObject@@8 DD FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8 ; CGraphicCollisionObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R3CGraphicCollisionObject@@8 DD 00H			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicCollisionObject@@@8
data$rs	SEGMENT
??_R0?AVCGraphicCollisionObject@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicCollisionObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicCollisionObject@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicCollisionObject@@8 DD FLAT:??_R0?AVCGraphicCollisionObject@@@8 ; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CGrannyModelInstance@@8
rdata$r	SEGMENT
??_R2CGrannyModelInstance@@8 DD FLAT:??_R1A@?0A@EA@CGrannyModelInstance@@8 ; CGrannyModelInstance::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGrannyModelInstance@@8
rdata$r	SEGMENT
??_R3CGrannyModelInstance@@8 DD 00H			; CGrannyModelInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CGrannyModelInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGrannyModelInstance@@@8
data$rs	SEGMENT
??_R0?AVCGrannyModelInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CGrannyModelInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGrannyModelInstance@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CGrannyModelInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGrannyModelInstance@@8 DD FLAT:??_R0?AVCGrannyModelInstance@@@8 ; CGrannyModelInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGrannyModelInstance@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDungeonModelInstance@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDungeonModelInstance@@8 DD FLAT:??_R0?AVCDungeonModelInstance@@@8 ; CDungeonModelInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDungeonModelInstance@@8
rdata$r	ENDS
;	COMDAT ??_R2CDungeonModelInstance@@8
rdata$r	SEGMENT
??_R2CDungeonModelInstance@@8 DD FLAT:??_R1A@?0A@EA@CDungeonModelInstance@@8 ; CDungeonModelInstance::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGrannyModelInstance@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CDungeonModelInstance@@8
rdata$r	SEGMENT
??_R3CDungeonModelInstance@@8 DD 00H			; CDungeonModelInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CDungeonModelInstance@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDungeonModelInstance@@@8
data$rs	SEGMENT
??_R0?AVCDungeonModelInstance@@@8 DD FLAT:??_7type_info@@6B@ ; CDungeonModelInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDungeonModelInstance@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CDungeonModelInstance@@6B@
rdata$r	SEGMENT
??_R4CDungeonModelInstance@@6B@ DD 00H			; CDungeonModelInstance::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDungeonModelInstance@@@8
	DD	FLAT:??_R3CDungeonModelInstance@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@ODGGGKHC@CDungeonBlock?3?3Load?$CIfilename?$DN?$CFs@
CONST	SEGMENT
??_C@_0DG@ODGGGKHC@CDungeonBlock?3?3Load?$CIfilename?$DN?$CFs@ DB 'CDunge'
	DB	'onBlock::Load(filename=%s) - model count is %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CDungeonModelInstance@@6B@
CONST	SEGMENT
??_7CDungeonModelInstance@@6B@ DD FLAT:??_R4CDungeonModelInstance@@6B@ ; CDungeonModelInstance::`vftable'
	DD	FLAT:??_ECDungeonModelInstance@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CDungeonBlock@@6B@
CONST	SEGMENT
??_7CDungeonBlock@@6B@ DD FLAT:??_R4CDungeonBlock@@6B@	; CDungeonBlock::`vftable'
	DD	FLAT:??_ECDungeonBlock@@UAEPAXI@Z
	DD	FLAT:?GetType@CDungeonBlock@@UBEHXZ
	DD	FLAT:?OnInitialize@CGraphicObjectInstance@@UAEXXZ
	DD	FLAT:?GetBoundingSphere@CDungeonBlock@@UAE_NAAUD3DXVECTOR3@@AAM@Z
	DD	FLAT:?OnRender@CDungeonBlock@@UAEXXZ
	DD	FLAT:?OnBlendRender@CDungeonBlock@@UAEXXZ
	DD	FLAT:?OnRenderToShadowMap@CDungeonBlock@@UAEXXZ
	DD	FLAT:?OnRenderShadow@CDungeonBlock@@UAEXXZ
	DD	FLAT:?OnRenderPCBlocker@CDungeonBlock@@UAEXXZ
	DD	FLAT:?OnClear@CGraphicObjectInstance@@UAEXXZ
	DD	FLAT:?OnUpdate@CGraphicObjectInstance@@UAEXXZ
	DD	FLAT:?OnDeform@CGraphicObjectInstance@@UAEXXZ
	DD	FLAT:?OnUpdateCollisionData@CDungeonBlock@@UAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z
	DD	FLAT:?OnUpdateHeighInstance@CDungeonBlock@@UAEXPAVCAttributeInstance@@@Z
	DD	FLAT:?OnGetObjectHeight@CDungeonBlock@@UAE_NMMPAM@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z$32 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z$0
__unwindtable$??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z$32
__ehfuncinfo$??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z$11 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z$0
__unwindtable$?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z$11
__ehfuncinfo$?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Load@CDungeonBlock@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Load@CDungeonBlock@@QAE_NPBD@Z$0
__ehfuncinfo$?Load@CDungeonBlock@@QAE_NPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Load@CDungeonBlock@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CDungeonBlock@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CDungeonBlock@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDungeonBlock@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDungeonBlock@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CDungeonBlock@@QAE@XZ$2
__ehfuncinfo$??0CDungeonBlock@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CDungeonBlock@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCDungeonModelInstance@@PAPAV1@@std@@YAPAPAVCDungeonModelInstance@@PAPAV1@00@Z
_TEXT	SEGMENT
__Last_ch$ = -16					; size = 4
__Count$ = -12						; size = 4
__Dest_ch$ = -8						; size = 4
__First_ch$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCDungeonModelInstance@@PAPAV1@@std@@YAPAPAVCDungeonModelInstance@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CDungeonModelInstance * *,CDungeonModelInstance * *>, COMDAT

; 4360 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 4361 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));

  00006	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00009	89 45 fc	 mov	 DWORD PTR __First_ch$[ebp], eax

; 4362 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));

  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000f	89 45 f0	 mov	 DWORD PTR __Last_ch$[ebp], eax

; 4363 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));

  00012	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00015	89 45 f8	 mov	 DWORD PTR __Dest_ch$[ebp], eax

; 4364 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00018	8b 45 f0	 mov	 eax, DWORD PTR __Last_ch$[ebp]
  0001b	2b 45 fc	 sub	 eax, DWORD PTR __First_ch$[ebp]
  0001e	89 45 f4	 mov	 DWORD PTR __Count$[ebp], eax

; 4365 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00021	ff 75 f4	 push	 DWORD PTR __Count$[ebp]
  00024	ff 75 fc	 push	 DWORD PTR __First_ch$[ebp]
  00027	ff 75 f8	 push	 DWORD PTR __Dest_ch$[ebp]
  0002a	e8 00 00 00 00	 call	 _memmove
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4366 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  00032	8b 45 f8	 mov	 eax, DWORD PTR __Dest_ch$[ebp]
  00035	03 45 f4	 add	 eax, DWORD PTR __Count$[ebp]

; 4367 : }

  00038	c9		 leave
  00039	c3		 ret	 0
??$_Copy_memmove@PAPAVCDungeonModelInstance@@PAPAV1@@std@@YAPAPAVCDungeonModelInstance@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CDungeonModelInstance * *,CDungeonModelInstance * *>
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAPAPAVCDungeonModelInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
__UFirst$ = -8						; size = 4
__ULast$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAPAPAVCDungeonModelInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z PROC ; std::_Uninitialized_move<CDungeonModelInstance * *,std::allocator<CDungeonModelInstance *> >, COMDAT

; 1685 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1686 :     // move [_First, _Last) to raw _Dest, using _Al
; 1687 :     // note: only called internally from elsewhere in the STL
; 1688 :     using _Ptrval     = typename _Alloc::value_type*;
; 1689 :     auto _UFirst      = _Get_unwrapped(_First);

  00006	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR __UFirst$[ebp], eax

; 1690 :     const auto _ULast = _Get_unwrapped(_Last);

  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000f	89 45 fc	 mov	 DWORD PTR __ULast$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  00012	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00015	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1693 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00018	ff 75 f4	 push	 DWORD PTR $T1[ebp]
  0001b	ff 75 fc	 push	 DWORD PTR __ULast$[ebp]
  0001e	ff 75 f8	 push	 DWORD PTR __UFirst$[ebp]
  00021	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCDungeonModelInstance@@PAPAV1@@std@@YAPAPAVCDungeonModelInstance@@PAPAV1@00@Z ; std::_Copy_memmove<CDungeonModelInstance * *,CDungeonModelInstance * *>
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1694 :         return _Dest + (_ULast - _UFirst);

  00029	8b 45 fc	 mov	 eax, DWORD PTR __ULast$[ebp]
  0002c	2b 45 f8	 sub	 eax, DWORD PTR __UFirst$[ebp]
  0002f	c1 f8 02	 sar	 eax, 2
  00032	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00035	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]

; 1695 :     } else {
; 1696 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1697 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1698 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1699 :         }
; 1700 : 
; 1701 :         return _Backout._Release();
; 1702 :     }
; 1703 : }

  00038	c9		 leave
  00039	c3		 ret	 0
??$_Uninitialized_move@PAPAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAPAPAVCDungeonModelInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z ENDP ; std::_Uninitialized_move<CDungeonModelInstance * *,std::allocator<CDungeonModelInstance *> >
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAXPAPAVCDungeonModelInstance@@QAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAXPAPAVCDungeonModelInstance@@QAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CDungeonModelInstance *> >, COMDAT

; 962  :     _Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {
; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy_range@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAXPAPAVCDungeonModelInstance@@QAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CDungeonModelInstance *> >
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\limits
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_new.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
__Max_possible$2 = -68					; size = 4
$T3 = -64						; size = 4
__Al$ = -60						; size = 4
__Last$ = -56						; size = 4
$T4 = -52						; size = 4
$T5 = -48						; size = 4
__First$ = -44						; size = 4
$T6 = -40						; size = 4
$T7 = -36						; size = 4
__First$ = -32						; size = 4
__Last$ = -28						; size = 4
$T8 = -24						; size = 4
$T9 = -20						; size = 4
__$EHRec$ = -16						; size = 16
$T10 = 0						; size = 4
$T11 = 4						; size = 4
$T12 = 8						; size = 4
$T13 = 12						; size = 4
$T14 = 16						; size = 4
$T15 = 20						; size = 4
$T16 = 24						; size = 4
$T17 = 28						; size = 4
$T18 = 32						; size = 4
$T19 = 36						; size = 4
$T20 = 40						; size = 4
__Newsize$ = 44						; size = 4
__Constructed_last$ = 48				; size = 4
__Oldsize$ = 52						; size = 4
tv172 = 56						; size = 4
$T21 = 60						; size = 4
$T22 = 64						; size = 4
__My_data$ = 68						; size = 4
__Constructed_first$ = 72				; size = 4
___formal$ = 76						; size = 1
__Overflow_is_possible$23 = 83				; size = 1
__Newcapacity$ = 84					; size = 4
__Mylast$ = 88						; size = 4
__Myfirst$ = 92						; size = 4
__Whereoff$ = 96					; size = 4
$T24 = 103						; size = 1
_this$ = 104						; size = 4
__Newvec$ = 108						; size = 4
__Whereptr$ = 120					; size = 4
_<_Val_0>$ = 124					; size = 4
??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Emplace_reallocate<CDungeonModelInstance * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8d 6c 24 90	 lea	 ebp, DWORD PTR [esp-112]
  00005	83 ec 70	 sub	 esp, 112		; 00000070H
  00008	6a ff		 push	 -1
  0000a	68 00 00 00 00	 push	 __ehhandler$??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z
  0000f	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00015	50		 push	 eax
  00016	51		 push	 ecx
  00017	83 ec 34	 sub	 esp, 52			; 00000034H
  0001a	53		 push	 ebx
  0001b	56		 push	 esi
  0001c	57		 push	 edi
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00022	33 c5		 xor	 eax, ebp
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00031	89 4d 68	 mov	 DWORD PTR _this$[ebp], ecx

; 1733 :         return _Mypair._Get_first();

  00034	8b 45 68	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  00037	89 45 28	 mov	 DWORD PTR $T20[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  0003a	8b 45 28	 mov	 eax, DWORD PTR $T20[ebp]
  0003d	89 45 c4	 mov	 DWORD PTR __Al$[ebp], eax

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;

  00040	8b 45 68	 mov	 eax, DWORD PTR _this$[ebp]
  00043	89 45 44	 mov	 DWORD PTR __My_data$[ebp], eax

; 729  :         pointer& _Myfirst = _My_data._Myfirst;

  00046	8b 45 44	 mov	 eax, DWORD PTR __My_data$[ebp]
  00049	89 45 5c	 mov	 DWORD PTR __Myfirst$[ebp], eax

; 730  :         pointer& _Mylast  = _My_data._Mylast;

  0004c	8b 45 44	 mov	 eax, DWORD PTR __My_data$[ebp]
  0004f	83 c0 04	 add	 eax, 4
  00052	89 45 58	 mov	 DWORD PTR __Mylast$[ebp], eax

; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00055	8b 45 5c	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  00058	8b 4d 78	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
  0005b	2b 08		 sub	 ecx, DWORD PTR [eax]
  0005d	c1 f9 02	 sar	 ecx, 2
  00060	89 4d 60	 mov	 DWORD PTR __Whereoff$[ebp], ecx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00063	8b 45 58	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00066	8b 4d 5c	 mov	 ecx, DWORD PTR __Myfirst$[ebp]
  00069	8b 00		 mov	 eax, DWORD PTR [eax]
  0006b	2b 01		 sub	 eax, DWORD PTR [ecx]
  0006d	c1 f8 02	 sar	 eax, 2
  00070	89 45 34	 mov	 DWORD PTR __Oldsize$[ebp], eax

; 1737 :         return _Mypair._Get_first();

  00073	8b 45 68	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1351 :         return *this;

  00076	89 45 24	 mov	 DWORD PTR $T19[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1737 :         return _Mypair._Get_first();

  00079	8b 45 24	 mov	 eax, DWORD PTR $T19[ebp]
  0007c	89 45 c0	 mov	 DWORD PTR $T3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 710  :         return static_cast<size_t>(-1) / sizeof(value_type);

  0007f	c7 45 40 ff ff
	ff 3f		 mov	 DWORD PTR $T22[ebp], 1073741823 ; 3fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\limits

; 557  :         return INT_MAX;

  00086	c7 45 20 ff ff
	ff 7f		 mov	 DWORD PTR $T18[ebp], 2147483647 ; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1488 :         return (_STD min)(

  0008d	8b 45 20	 mov	 eax, DWORD PTR $T18[ebp]
  00090	89 45 3c	 mov	 DWORD PTR $T21[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 68   :     return _Right < _Left ? _Right : _Left;

  00093	8b 45 40	 mov	 eax, DWORD PTR $T22[ebp]
  00096	3b 45 3c	 cmp	 eax, DWORD PTR $T21[ebp]
  00099	73 08		 jae	 SHORT $LN34@Emplace_re
  0009b	8d 45 40	 lea	 eax, DWORD PTR $T22[ebp]
  0009e	89 45 38	 mov	 DWORD PTR tv172[ebp], eax
  000a1	eb 06		 jmp	 SHORT $LN35@Emplace_re
$LN34@Emplace_re:
  000a3	8d 45 3c	 lea	 eax, DWORD PTR $T21[ebp]
  000a6	89 45 38	 mov	 DWORD PTR tv172[ebp], eax
$LN35@Emplace_re:
  000a9	8b 45 38	 mov	 eax, DWORD PTR tv172[ebp]
  000ac	89 45 1c	 mov	 DWORD PTR $T17[ebp], eax
  000af	8b 45 1c	 mov	 eax, DWORD PTR $T17[ebp]
  000b2	89 45 18	 mov	 DWORD PTR $T16[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1488 :         return (_STD min)(

  000b5	8b 45 18	 mov	 eax, DWORD PTR $T16[ebp]
  000b8	8b 00		 mov	 eax, DWORD PTR [eax]
  000ba	89 45 14	 mov	 DWORD PTR $T15[ebp], eax

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  000bd	8b 45 34	 mov	 eax, DWORD PTR __Oldsize$[ebp]
  000c0	3b 45 14	 cmp	 eax, DWORD PTR $T15[ebp]
  000c3	75 05		 jne	 SHORT $LN2@Emplace_re

; 738  :             _Xlength();

  000c5	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@CAXXZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Xlength
$LN2@Emplace_re:

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  000ca	8b 45 34	 mov	 eax, DWORD PTR __Oldsize$[ebp]
  000cd	40		 inc	 eax
  000ce	89 45 2c	 mov	 DWORD PTR __Newsize$[ebp], eax

; 742  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  000d1	ff 75 2c	 push	 DWORD PTR __Newsize$[ebp]
  000d4	8b 4d 68	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@ABEII@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Calculate_growth
  000dc	89 45 54	 mov	 DWORD PTR __Newcapacity$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  000df	c6 45 53 01	 mov	 BYTE PTR __Overflow_is_possible$23[ebp], 1

; 57   : 
; 58   :     if _CONSTEXPR_IF (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  000e3	c7 45 bc ff ff
	ff 3f		 mov	 DWORD PTR __Max_possible$2[ebp], 1073741823 ; 3fffffffH

; 60   :         if (_Count > _Max_possible) {

  000ea	81 7d 54 ff ff
	ff 3f		 cmp	 DWORD PTR __Newcapacity$[ebp], 1073741823 ; 3fffffffH
  000f1	76 05		 jbe	 SHORT $LN67@Emplace_re

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000f3	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN67@Emplace_re:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  000f8	8b 45 54	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  000fb	c1 e0 02	 shl	 eax, 2
  000fe	89 45 10	 mov	 DWORD PTR $T14[ebp], eax

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00101	ff 75 10	 push	 DWORD PTR $T14[ebp]
  00104	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  00109	59		 pop	 ecx
  0010a	89 45 6c	 mov	 DWORD PTR __Newvec$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 745  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  0010d	8b 45 60	 mov	 eax, DWORD PTR __Whereoff$[ebp]
  00110	8b 4d 6c	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  00113	8d 44 81 04	 lea	 eax, DWORD PTR [ecx+eax*4+4]
  00117	89 45 30	 mov	 DWORD PTR __Constructed_last$[ebp], eax

; 746  :         pointer _Constructed_first      = _Constructed_last;

  0011a	8b 45 30	 mov	 eax, DWORD PTR __Constructed_last$[ebp]
  0011d	89 45 48	 mov	 DWORD PTR __Constructed_first$[ebp], eax

; 747  : 
; 748  :         _TRY_BEGIN

  00120	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits

; 1443 :     return static_cast<_Ty&&>(_Arg);

  00124	8b 45 7c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  00127	89 45 08	 mov	 DWORD PTR $T12[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0012a	8b 45 60	 mov	 eax, DWORD PTR __Whereoff$[ebp]
  0012d	8b 4d 6c	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  00130	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  00133	89 45 0c	 mov	 DWORD PTR $T13[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_new.h

; 169  :         return _Where;

  00136	8b 45 0c	 mov	 eax, DWORD PTR $T13[ebp]
  00139	89 45 04	 mov	 DWORD PTR $T11[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits

; 1443 :     return static_cast<_Ty&&>(_Arg);

  0013c	8b 45 08	 mov	 eax, DWORD PTR $T12[ebp]
  0013f	89 45 00	 mov	 DWORD PTR $T10[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00142	8b 45 04	 mov	 eax, DWORD PTR $T11[ebp]
  00145	8b 4d 00	 mov	 ecx, DWORD PTR $T10[ebp]
  00148	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0014a	89 08		 mov	 DWORD PTR [eax], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 750  :         _Constructed_first = _Newvec + _Whereoff;

  0014c	8b 45 60	 mov	 eax, DWORD PTR __Whereoff$[ebp]
  0014f	8b 4d 6c	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  00152	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  00155	89 45 48	 mov	 DWORD PTR __Constructed_first$[ebp], eax

; 751  : 
; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00158	8b 45 58	 mov	 eax, DWORD PTR __Mylast$[ebp]
  0015b	8b 4d 78	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
  0015e	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00160	75 3d		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00162	8b 45 58	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00165	8b 00		 mov	 eax, DWORD PTR [eax]
  00167	89 45 e4	 mov	 DWORD PTR __Last$[ebp], eax
  0016a	8b 45 5c	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0016d	8b 00		 mov	 eax, DWORD PTR [eax]
  0016f	89 45 e0	 mov	 DWORD PTR __First$[ebp], eax

; 1607 :         _Umove_if_noexcept1(_First, _Last, _Dest,

  00172	33 c0		 xor	 eax, eax
  00174	88 45 67	 mov	 BYTE PTR $T24[ebp], al
  00177	8a 45 67	 mov	 al, BYTE PTR $T24[ebp]
  0017a	88 45 4c	 mov	 BYTE PTR ___formal$[ebp], al

; 1733 :         return _Mypair._Get_first();

  0017d	8b 45 68	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  00180	89 45 ec	 mov	 DWORD PTR $T9[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  00183	8b 45 ec	 mov	 eax, DWORD PTR $T9[ebp]
  00186	89 45 e8	 mov	 DWORD PTR $T8[ebp], eax

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00189	ff 75 e8	 push	 DWORD PTR $T8[ebp]
  0018c	ff 75 6c	 push	 DWORD PTR __Newvec$[ebp]
  0018f	ff 75 e4	 push	 DWORD PTR __Last$[ebp]
  00192	ff 75 e0	 push	 DWORD PTR __First$[ebp]
  00195	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAPAPAVCDungeonModelInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z ; std::_Uninitialized_move<CDungeonModelInstance * *,std::allocator<CDungeonModelInstance *> >
  0019a	83 c4 10	 add	 esp, 16			; 00000010H

; 754  :         } else { // provide basic guarantee

  0019d	eb 5e		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);

  0019f	8b 45 5c	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  001a2	8b 00		 mov	 eax, DWORD PTR [eax]
  001a4	89 45 d4	 mov	 DWORD PTR __First$[ebp], eax

; 1733 :         return _Mypair._Get_first();

  001a7	8b 45 68	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  001aa	89 45 dc	 mov	 DWORD PTR $T7[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  001ad	8b 45 dc	 mov	 eax, DWORD PTR $T7[ebp]
  001b0	89 45 d8	 mov	 DWORD PTR $T6[ebp], eax

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  001b3	ff 75 d8	 push	 DWORD PTR $T6[ebp]
  001b6	ff 75 6c	 push	 DWORD PTR __Newvec$[ebp]
  001b9	ff 75 78	 push	 DWORD PTR __Whereptr$[ebp]
  001bc	ff 75 d4	 push	 DWORD PTR __First$[ebp]
  001bf	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAPAPAVCDungeonModelInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z ; std::_Uninitialized_move<CDungeonModelInstance * *,std::allocator<CDungeonModelInstance *> >
  001c4	83 c4 10	 add	 esp, 16			; 00000010H

; 756  :             _Constructed_first = _Newvec;

  001c7	8b 45 6c	 mov	 eax, DWORD PTR __Newvec$[ebp]
  001ca	89 45 48	 mov	 DWORD PTR __Constructed_first$[ebp], eax

; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001cd	8b 45 58	 mov	 eax, DWORD PTR __Mylast$[ebp]
  001d0	8b 00		 mov	 eax, DWORD PTR [eax]
  001d2	89 45 c8	 mov	 DWORD PTR __Last$[ebp], eax

; 1733 :         return _Mypair._Get_first();

  001d5	8b 45 68	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  001d8	89 45 d0	 mov	 DWORD PTR $T5[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  001db	8b 45 d0	 mov	 eax, DWORD PTR $T5[ebp]
  001de	89 45 cc	 mov	 DWORD PTR $T4[ebp], eax

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  001e1	ff 75 cc	 push	 DWORD PTR $T4[ebp]

; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001e4	8b 45 60	 mov	 eax, DWORD PTR __Whereoff$[ebp]
  001e7	8b 4d 6c	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  001ea	8d 44 81 04	 lea	 eax, DWORD PTR [ecx+eax*4+4]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  001ee	50		 push	 eax
  001ef	ff 75 c8	 push	 DWORD PTR __Last$[ebp]
  001f2	ff 75 78	 push	 DWORD PTR __Whereptr$[ebp]
  001f5	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAPAPAVCDungeonModelInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z ; std::_Uninitialized_move<CDungeonModelInstance * *,std::allocator<CDungeonModelInstance *> >
  001fa	83 c4 10	 add	 esp, 16			; 00000010H
$LN5@Emplace_re:

; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001fd	eb 2b		 jmp	 SHORT $LN7@Emplace_re
__catch$??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z$0:

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);

  001ff	ff 75 30	 push	 DWORD PTR __Constructed_last$[ebp]
  00202	ff 75 48	 push	 DWORD PTR __Constructed_first$[ebp]
  00205	8b 4d 68	 mov	 ecx, DWORD PTR _this$[ebp]
  00208	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXPAPAVCDungeonModelInstance@@0@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Destroy

; 761  :         _Al.deallocate(_Newvec, _Newcapacity);

  0020d	ff 75 54	 push	 DWORD PTR __Newcapacity$[ebp]
  00210	ff 75 6c	 push	 DWORD PTR __Newvec$[ebp]
  00213	8b 4d c4	 mov	 ecx, DWORD PTR __Al$[ebp]
  00216	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCDungeonModelInstance@@@std@@QAEXQAPAVCDungeonModelInstance@@I@Z ; std::allocator<CDungeonModelInstance *>::deallocate

; 762  :         _RERAISE;

  0021b	6a 00		 push	 0
  0021d	6a 00		 push	 0
  0021f	e8 00 00 00 00	 call	 __CxxThrowException@8

; 763  :         _CATCH_END

  00224	b8 00 00 00 00	 mov	 eax, $LN10@Emplace_re
  00229	c3		 ret	 0
$LN7@Emplace_re:
  0022a	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
  0022e	eb 04		 jmp	 SHORT __tryend$??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z$1
$LN10@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
  00230	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z$1:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  00234	ff 75 54	 push	 DWORD PTR __Newcapacity$[ebp]
  00237	ff 75 2c	 push	 DWORD PTR __Newsize$[ebp]
  0023a	ff 75 6c	 push	 DWORD PTR __Newvec$[ebp]
  0023d	8b 4d 68	 mov	 ecx, DWORD PTR _this$[ebp]
  00240	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXQAPAVCDungeonModelInstance@@II@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Change_array

; 766  :         return _Newvec + _Whereoff;

  00245	8b 45 60	 mov	 eax, DWORD PTR __Whereoff$[ebp]
  00248	8b 4d 6c	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  0024b	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
$LN70@Emplace_re:

; 767  :     }

  0024e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00251	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00258	59		 pop	 ecx
  00259	5f		 pop	 edi
  0025a	5e		 pop	 esi
  0025b	5b		 pop	 ebx
  0025c	83 c5 70	 add	 ebp, 112		; 00000070H
  0025f	c9		 leave
  00260	c2 08 00	 ret	 8
  00263	cc		 int	 3
  00264	cc		 int	 3
  00265	cc		 int	 3
  00266	cc		 int	 3
  00267	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Emplace_reallocate<CDungeonModelInstance * const &>
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_new.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXABQAVCDungeonModelInstance@@@Z
_TEXT	SEGMENT
__Result$ = -44						; size = 4
$T1 = -40						; size = 4
$T2 = -36						; size = 4
$T3 = -32						; size = 4
$T4 = -28						; size = 4
$T5 = -24						; size = 4
$T6 = -20						; size = 4
__Ptr$ = -16						; size = 4
__My_data$ = -12					; size = 4
_this$ = -8						; size = 4
__Mylast$ = -4						; size = 4
_<_Val_0>$ = 8						; size = 4
??$_Emplace_back_with_unused_capacity@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXABQAVCDungeonModelInstance@@@Z PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Emplace_back_with_unused_capacity<CDungeonModelInstance * const &>, COMDAT
; _this$ = ecx

; 682  :     decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 683  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 684  :         auto& _My_data   = _Mypair._Myval2;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 f4	 mov	 DWORD PTR __My_data$[ebp], eax

; 685  :         pointer& _Mylast = _My_data._Mylast;

  0000f	8b 45 f4	 mov	 eax, DWORD PTR __My_data$[ebp]
  00012	83 c0 04	 add	 eax, 4
  00015	89 45 fc	 mov	 DWORD PTR __Mylast$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits

; 1443 :     return static_cast<_Ty&&>(_Arg);

  00018	8b 45 08	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  0001b	89 45 e4	 mov	 DWORD PTR $T4[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0001e	8b 45 fc	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00021	8b 00		 mov	 eax, DWORD PTR [eax]
  00023	89 45 f0	 mov	 DWORD PTR __Ptr$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  00026	8b 45 f0	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00029	89 45 e8	 mov	 DWORD PTR $T5[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  0002f	89 45 ec	 mov	 DWORD PTR $T6[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  00032	8b 45 ec	 mov	 eax, DWORD PTR $T6[ebp]
  00035	89 45 d8	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_new.h

; 169  :         return _Where;

  00038	8b 45 e8	 mov	 eax, DWORD PTR $T5[ebp]
  0003b	89 45 e0	 mov	 DWORD PTR $T3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits

; 1443 :     return static_cast<_Ty&&>(_Arg);

  0003e	8b 45 e4	 mov	 eax, DWORD PTR $T4[ebp]
  00041	89 45 dc	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00044	8b 45 e0	 mov	 eax, DWORD PTR $T3[ebp]
  00047	8b 4d dc	 mov	 ecx, DWORD PTR $T2[ebp]
  0004a	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0004c	89 08		 mov	 DWORD PTR [eax], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 689  :         _Ty& _Result = *_Mylast;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00051	8b 00		 mov	 eax, DWORD PTR [eax]
  00053	89 45 d4	 mov	 DWORD PTR __Result$[ebp], eax

; 690  :         ++_Mylast;

  00056	8b 45 fc	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00059	8b 00		 mov	 eax, DWORD PTR [eax]
  0005b	83 c0 04	 add	 eax, 4
  0005e	8b 4d fc	 mov	 ecx, DWORD PTR __Mylast$[ebp]
  00061	89 01		 mov	 DWORD PTR [ecx], eax

; 691  : #if _HAS_CXX17
; 692  :         return _Result;
; 693  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 694  :         (void) _Result;
; 695  : #endif // _HAS_CXX17
; 696  :     }

  00063	c9		 leave
  00064	c2 04 00	 ret	 4
??$_Emplace_back_with_unused_capacity@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXABQAVCDungeonModelInstance@@@Z ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Emplace_back_with_unused_capacity<CDungeonModelInstance * const &>
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??$emplace_back@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEXABQAVCDungeonModelInstance@@@Z
_TEXT	SEGMENT
__Result$ = -24						; size = 4
$T1 = -20						; size = 4
$T2 = -16						; size = 4
__Mylast$ = -12						; size = 4
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
_<_Val_0>$ = 8						; size = 4
??$emplace_back@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEXABQAVCDungeonModelInstance@@@Z PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::emplace_back<CDungeonModelInstance * const &>, COMDAT
; _this$ = ecx

; 700  :     decltype(auto) emplace_back(_Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 701  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 702  :         auto& _My_data   = _Mypair._Myval2;

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 f8	 mov	 DWORD PTR __My_data$[ebp], eax

; 703  :         pointer& _Mylast = _My_data._Mylast;

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00012	83 c0 04	 add	 eax, 4
  00015	89 45 f4	 mov	 DWORD PTR __Mylast$[ebp], eax

; 704  :         if (_Mylast != _My_data._Myend) {

  00018	8b 45 f4	 mov	 eax, DWORD PTR __Mylast$[ebp]
  0001b	8b 4d f8	 mov	 ecx, DWORD PTR __My_data$[ebp]
  0001e	8b 00		 mov	 eax, DWORD PTR [eax]
  00020	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00023	74 13		 je	 SHORT $LN2@emplace_ba
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits

; 1443 :     return static_cast<_Ty&&>(_Arg);

  00025	8b 45 08	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  00028	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0002b	ff 75 f0	 push	 DWORD PTR $T2[ebp]
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXABQAVCDungeonModelInstance@@@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Emplace_back_with_unused_capacity<CDungeonModelInstance * const &>
  00036	eb 19		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits

; 1443 :     return static_cast<_Ty&&>(_Arg);

  00038	8b 45 08	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  0003b	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0003e	ff 75 ec	 push	 DWORD PTR $T1[ebp]
  00041	8b 45 f4	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00044	ff 30		 push	 DWORD PTR [eax]
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEPAPAVCDungeonModelInstance@@QAPAV2@ABQAV2@@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Emplace_reallocate<CDungeonModelInstance * const &>
  0004e	89 45 e8	 mov	 DWORD PTR __Result$[ebp], eax
$LN1@emplace_ba:

; 709  : #if _HAS_CXX17
; 710  :         return _Result;
; 711  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 712  :         (void) _Result;
; 713  : #endif // _HAS_CXX17
; 714  :     }

  00051	c9		 leave
  00052	c2 04 00	 ret	 4
??$emplace_back@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEXABQAVCDungeonModelInstance@@@Z ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::emplace_back<CDungeonModelInstance * const &>
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Stl.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Stl.h
;	COMDAT ??$stl_wipe@V?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@@@YAXAAV?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@@Z
_TEXT	SEGMENT
$T1 = -72						; size = 4
$T2 = -68						; size = 4
$T3 = -64						; size = 4
$T4 = -60						; size = 4
tv95 = -56						; size = 4
$T5 = -52						; size = 4
$T6 = -48						; size = 4
$T7 = -44						; size = 4
$T8 = -40						; size = 4
___param0$ = -36					; size = 4
___param0$ = -32					; size = 4
tv173 = -28						; size = 4
tv187 = -24						; size = 4
__My_data$9 = -20					; size = 4
__My_data$10 = -16					; size = 4
$T11 = -12						; size = 4
_i$12 = -8						; size = 4
$T13 = -2						; size = 1
$T14 = -1						; size = 1
_container$ = 8						; size = 4
??$stl_wipe@V?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@@@YAXAAV?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@@Z PROC ; stl_wipe<std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> > >, COMDAT

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1410 :         auto& _My_data = _Mypair._Myval2;

  00006	8b 45 08	 mov	 eax, DWORD PTR _container$[ebp]
  00009	89 45 f0	 mov	 DWORD PTR __My_data$10[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  0000c	8b 45 f0	 mov	 eax, DWORD PTR __My_data$10[ebp]
  0000f	89 45 bc	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00012	8b 45 f0	 mov	 eax, DWORD PTR __My_data$10[ebp]
  00015	8b 00		 mov	 eax, DWORD PTR [eax]
  00017	89 45 e0	 mov	 DWORD PTR ___param0$[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0001a	8b 45 e0	 mov	 eax, DWORD PTR ___param0$[ebp]
  0001d	89 45 f8	 mov	 DWORD PTR _i$12[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Stl.h

; 95   : 	for (TContainer::iterator i = container.begin(); i != container.end(); ++i)

  00020	eb 09		 jmp	 SHORT $LN4@stl_wipe
$LN2@stl_wipe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 75   :         ++_Ptr;

  00022	8b 45 f8	 mov	 eax, DWORD PTR _i$12[ebp]
  00025	83 c0 04	 add	 eax, 4
  00028	89 45 f8	 mov	 DWORD PTR _i$12[ebp], eax
$LN4@stl_wipe:

; 1420 :         auto& _My_data = _Mypair._Myval2;

  0002b	8b 45 08	 mov	 eax, DWORD PTR _container$[ebp]
  0002e	89 45 ec	 mov	 DWORD PTR __My_data$9[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00031	8b 45 ec	 mov	 eax, DWORD PTR __My_data$9[ebp]
  00034	89 45 b8	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  00037	8b 45 ec	 mov	 eax, DWORD PTR __My_data$9[ebp]
  0003a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0003d	89 45 dc	 mov	 DWORD PTR ___param0$[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00040	8b 45 dc	 mov	 eax, DWORD PTR ___param0$[ebp]
  00043	89 45 d8	 mov	 DWORD PTR $T8[ebp], eax

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  00046	8d 45 d8	 lea	 eax, DWORD PTR $T8[ebp]
  00049	89 45 d4	 mov	 DWORD PTR $T7[ebp], eax

; 149  :         return _Ptr == _Right._Ptr;

  0004c	8b 45 d4	 mov	 eax, DWORD PTR $T7[ebp]
  0004f	8b 4d f8	 mov	 ecx, DWORD PTR _i$12[ebp]
  00052	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00054	75 09		 jne	 SHORT $LN51@stl_wipe
  00056	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR tv187[ebp], 1
  0005d	eb 04		 jmp	 SHORT $LN52@stl_wipe
$LN51@stl_wipe:
  0005f	83 65 e8 00	 and	 DWORD PTR tv187[ebp], 0
$LN52@stl_wipe:
  00063	8a 45 e8	 mov	 al, BYTE PTR tv187[ebp]
  00066	88 45 ff	 mov	 BYTE PTR $T14[ebp], al

; 153  :         return !(*this == _Right);

  00069	0f b6 45 ff	 movzx	 eax, BYTE PTR $T14[ebp]
  0006d	85 c0		 test	 eax, eax
  0006f	75 09		 jne	 SHORT $LN46@stl_wipe
  00071	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR tv173[ebp], 1
  00078	eb 04		 jmp	 SHORT $LN47@stl_wipe
$LN46@stl_wipe:
  0007a	83 65 e4 00	 and	 DWORD PTR tv173[ebp], 0
$LN47@stl_wipe:
  0007e	8a 45 e4	 mov	 al, BYTE PTR tv173[ebp]
  00081	88 45 fe	 mov	 BYTE PTR $T13[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Stl.h

; 95   : 	for (TContainer::iterator i = container.begin(); i != container.end(); ++i)

  00084	0f b6 45 fe	 movzx	 eax, BYTE PTR $T13[ebp]
  00088	85 c0		 test	 eax, eax
  0008a	74 46		 je	 SHORT $LN3@stl_wipe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 54   :         return *_Ptr;

  0008c	8b 45 f8	 mov	 eax, DWORD PTR _i$12[ebp]
  0008f	89 45 d0	 mov	 DWORD PTR $T6[ebp], eax

; 252  :         return const_cast<reference>(_Mybase::operator*());

  00092	8b 45 d0	 mov	 eax, DWORD PTR $T6[ebp]
  00095	89 45 cc	 mov	 DWORD PTR $T5[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Stl.h

; 97   : 		delete *i;

  00098	8b 45 cc	 mov	 eax, DWORD PTR $T5[ebp]
  0009b	8b 00		 mov	 eax, DWORD PTR [eax]
  0009d	89 45 f4	 mov	 DWORD PTR $T11[ebp], eax
  000a0	83 7d f4 00	 cmp	 DWORD PTR $T11[ebp], 0
  000a4	74 11		 je	 SHORT $LN6@stl_wipe
  000a6	6a 01		 push	 1
  000a8	8b 45 f4	 mov	 eax, DWORD PTR $T11[ebp]
  000ab	8b 00		 mov	 eax, DWORD PTR [eax]
  000ad	8b 4d f4	 mov	 ecx, DWORD PTR $T11[ebp]
  000b0	ff 10		 call	 DWORD PTR [eax]
  000b2	89 45 c8	 mov	 DWORD PTR tv95[ebp], eax
  000b5	eb 04		 jmp	 SHORT $LN7@stl_wipe
$LN6@stl_wipe:
  000b7	83 65 c8 00	 and	 DWORD PTR tv95[ebp], 0
$LN7@stl_wipe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 54   :         return *_Ptr;

  000bb	8b 45 f8	 mov	 eax, DWORD PTR _i$12[ebp]
  000be	89 45 c4	 mov	 DWORD PTR $T4[ebp], eax

; 252  :         return const_cast<reference>(_Mybase::operator*());

  000c1	8b 45 c4	 mov	 eax, DWORD PTR $T4[ebp]
  000c4	89 45 c0	 mov	 DWORD PTR $T3[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Stl.h

; 98   : 		*i = NULL;

  000c7	8b 45 c0	 mov	 eax, DWORD PTR $T3[ebp]
  000ca	83 20 00	 and	 DWORD PTR [eax], 0

; 99   : 	}

  000cd	e9 50 ff ff ff	 jmp	 $LN2@stl_wipe
$LN3@stl_wipe:

; 100  : 	
; 101  : 	container.clear();

  000d2	8b 4d 08	 mov	 ecx, DWORD PTR _container$[ebp]
  000d5	e8 00 00 00 00	 call	 ?clear@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEXXZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::clear

; 102  : }

  000da	c9		 leave
  000db	c3		 ret	 0
??$stl_wipe@V?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@@@YAXAAV?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@@Z ENDP ; stl_wipe<std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> > >
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
;	COMDAT ??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@std@@UFBoundBox@@@std@@YA?AUFBoundBox@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@0@0U1@@Z
_TEXT	SEGMENT
_pInstance$ = -36					; size = 4
__ULast$ = -32						; size = 4
$T1 = -28						; size = 4
$T2 = -24						; size = 4
__Ptr$3 = -20						; size = 4
$T4 = -16						; size = 4
$T5 = -12						; size = 4
__Ptr$6 = -8						; size = 4
__UFirst$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Func$ = 20						; size = 8
??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@std@@UFBoundBox@@@std@@YA?AUFBoundBox@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@0@0U1@@Z PROC ; std::for_each<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDungeonModelInstance *> > >,FBoundBox>, COMDAT

; 303  : _CONSTEXPR20 _Fn for_each(_InIt _First, _InIt _Last, _Fn _Func) { // perform function for each element [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  00006	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR __Ptr$6[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  0000c	8b 45 f8	 mov	 eax, DWORD PTR __Ptr$6[ebp]
  0000f	89 45 f4	 mov	 DWORD PTR $T5[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  00012	8b 45 f4	 mov	 eax, DWORD PTR $T5[ebp]
  00015	89 45 f0	 mov	 DWORD PTR $T4[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 305  :     auto _UFirst      = _Get_unwrapped(_First);

  00018	8b 45 f0	 mov	 eax, DWORD PTR $T4[ebp]
  0001b	89 45 fc	 mov	 DWORD PTR __UFirst$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  0001e	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  00021	89 45 ec	 mov	 DWORD PTR __Ptr$3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  00024	8b 45 ec	 mov	 eax, DWORD PTR __Ptr$3[ebp]
  00027	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  0002a	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  0002d	89 45 e4	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 306  :     const auto _ULast = _Get_unwrapped(_Last);

  00030	8b 45 e4	 mov	 eax, DWORD PTR $T1[ebp]
  00033	89 45 e0	 mov	 DWORD PTR __ULast$[ebp], eax

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00036	eb 09		 jmp	 SHORT $LN4@for_each
$LN2@for_each:
  00038	8b 45 fc	 mov	 eax, DWORD PTR __UFirst$[ebp]
  0003b	83 c0 04	 add	 eax, 4
  0003e	89 45 fc	 mov	 DWORD PTR __UFirst$[ebp], eax
$LN4@for_each:
  00041	8b 45 fc	 mov	 eax, DWORD PTR __UFirst$[ebp]
  00044	3b 45 e0	 cmp	 eax, DWORD PTR __ULast$[ebp]
  00047	74 18		 je	 SHORT $LN3@for_each

; 308  :         _Func(*_UFirst);

  00049	8b 45 fc	 mov	 eax, DWORD PTR __UFirst$[ebp]
  0004c	8b 00		 mov	 eax, DWORD PTR [eax]
  0004e	89 45 dc	 mov	 DWORD PTR _pInstance$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 120  : 		pInstance->GetBoundBox(m_pv3Min, m_pv3Max);

  00051	ff 75 18	 push	 DWORD PTR __Func$[ebp+4]
  00054	ff 75 14	 push	 DWORD PTR __Func$[ebp]
  00057	8b 4d dc	 mov	 ecx, DWORD PTR _pInstance$[ebp]
  0005a	e8 00 00 00 00	 call	 ?GetBoundBox@CGrannyModelInstance@@QAEXPAUD3DXVECTOR3@@0@Z ; CGrannyModelInstance::GetBoundBox
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 309  :     }

  0005f	eb d7		 jmp	 SHORT $LN2@for_each
$LN3@for_each:

; 310  : 
; 311  :     return _Func;

  00061	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00064	8b 4d 14	 mov	 ecx, DWORD PTR __Func$[ebp]
  00067	8b 55 18	 mov	 edx, DWORD PTR __Func$[ebp+4]
  0006a	89 08		 mov	 DWORD PTR [eax], ecx
  0006c	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0006f	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 312  : }

  00072	c9		 leave
  00073	c3		 ret	 0
??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@std@@UFBoundBox@@@std@@YA?AUFBoundBox@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@0@0U1@@Z ENDP ; std::for_each<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDungeonModelInstance *> > >,FBoundBox>
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
;	COMDAT ??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@std@@UFRenderShadow@@@std@@YA?AUFRenderShadow@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@0@0U1@@Z
_TEXT	SEGMENT
_pInstance$ = -36					; size = 4
__ULast$ = -32						; size = 4
$T1 = -28						; size = 4
$T2 = -24						; size = 4
__Ptr$3 = -20						; size = 4
$T4 = -16						; size = 4
$T5 = -12						; size = 4
__Ptr$6 = -8						; size = 4
__UFirst$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Func$ = 16						; size = 1
??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@std@@UFRenderShadow@@@std@@YA?AUFRenderShadow@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@0@0U1@@Z PROC ; std::for_each<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDungeonModelInstance *> > >,FRenderShadow>, COMDAT

; 303  : _CONSTEXPR20 _Fn for_each(_InIt _First, _InIt _Last, _Fn _Func) { // perform function for each element [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  00006	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR __Ptr$6[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  0000c	8b 45 f8	 mov	 eax, DWORD PTR __Ptr$6[ebp]
  0000f	89 45 f4	 mov	 DWORD PTR $T5[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  00012	8b 45 f4	 mov	 eax, DWORD PTR $T5[ebp]
  00015	89 45 f0	 mov	 DWORD PTR $T4[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 305  :     auto _UFirst      = _Get_unwrapped(_First);

  00018	8b 45 f0	 mov	 eax, DWORD PTR $T4[ebp]
  0001b	89 45 fc	 mov	 DWORD PTR __UFirst$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00021	89 45 ec	 mov	 DWORD PTR __Ptr$3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  00024	8b 45 ec	 mov	 eax, DWORD PTR __Ptr$3[ebp]
  00027	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  0002a	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  0002d	89 45 e4	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 306  :     const auto _ULast = _Get_unwrapped(_Last);

  00030	8b 45 e4	 mov	 eax, DWORD PTR $T1[ebp]
  00033	89 45 e0	 mov	 DWORD PTR __ULast$[ebp], eax

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00036	eb 09		 jmp	 SHORT $LN4@for_each
$LN2@for_each:
  00038	8b 45 fc	 mov	 eax, DWORD PTR __UFirst$[ebp]
  0003b	83 c0 04	 add	 eax, 4
  0003e	89 45 fc	 mov	 DWORD PTR __UFirst$[ebp], eax
$LN4@for_each:
  00041	8b 45 fc	 mov	 eax, DWORD PTR __UFirst$[ebp]
  00044	3b 45 e0	 cmp	 eax, DWORD PTR __ULast$[ebp]
  00047	74 12		 je	 SHORT $LN3@for_each

; 308  :         _Func(*_UFirst);

  00049	8b 45 fc	 mov	 eax, DWORD PTR __UFirst$[ebp]
  0004c	8b 00		 mov	 eax, DWORD PTR [eax]
  0004e	89 45 dc	 mov	 DWORD PTR _pInstance$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 99   : 		pInstance->RenderDungeonBlockShadow();

  00051	8b 4d dc	 mov	 ecx, DWORD PTR _pInstance$[ebp]
  00054	e8 00 00 00 00	 call	 ?RenderDungeonBlockShadow@CDungeonModelInstance@@QAEXXZ ; CDungeonModelInstance::RenderDungeonBlockShadow
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 309  :     }

  00059	eb dd		 jmp	 SHORT $LN2@for_each
$LN3@for_each:

; 310  : 
; 311  :     return _Func;

  0005b	8a 45 10	 mov	 al, BYTE PTR __Func$[ebp]

; 312  : }

  0005e	c9		 leave
  0005f	c3		 ret	 0
??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@std@@UFRenderShadow@@@std@@YA?AUFRenderShadow@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@0@0U1@@Z ENDP ; std::for_each<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDungeonModelInstance *> > >,FRenderShadow>
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
;	COMDAT ??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@std@@UFRender@@@std@@YA?AUFRender@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@0@0U1@@Z
_TEXT	SEGMENT
_pInstance$ = -36					; size = 4
__ULast$ = -32						; size = 4
$T1 = -28						; size = 4
$T2 = -24						; size = 4
__Ptr$3 = -20						; size = 4
$T4 = -16						; size = 4
$T5 = -12						; size = 4
__Ptr$6 = -8						; size = 4
__UFirst$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Func$ = 16						; size = 1
??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@std@@UFRender@@@std@@YA?AUFRender@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@0@0U1@@Z PROC ; std::for_each<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDungeonModelInstance *> > >,FRender>, COMDAT

; 303  : _CONSTEXPR20 _Fn for_each(_InIt _First, _InIt _Last, _Fn _Func) { // perform function for each element [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  00006	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR __Ptr$6[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  0000c	8b 45 f8	 mov	 eax, DWORD PTR __Ptr$6[ebp]
  0000f	89 45 f4	 mov	 DWORD PTR $T5[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  00012	8b 45 f4	 mov	 eax, DWORD PTR $T5[ebp]
  00015	89 45 f0	 mov	 DWORD PTR $T4[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 305  :     auto _UFirst      = _Get_unwrapped(_First);

  00018	8b 45 f0	 mov	 eax, DWORD PTR $T4[ebp]
  0001b	89 45 fc	 mov	 DWORD PTR __UFirst$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00021	89 45 ec	 mov	 DWORD PTR __Ptr$3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  00024	8b 45 ec	 mov	 eax, DWORD PTR __Ptr$3[ebp]
  00027	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  0002a	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  0002d	89 45 e4	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 306  :     const auto _ULast = _Get_unwrapped(_Last);

  00030	8b 45 e4	 mov	 eax, DWORD PTR $T1[ebp]
  00033	89 45 e0	 mov	 DWORD PTR __ULast$[ebp], eax

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00036	eb 09		 jmp	 SHORT $LN4@for_each
$LN2@for_each:
  00038	8b 45 fc	 mov	 eax, DWORD PTR __UFirst$[ebp]
  0003b	83 c0 04	 add	 eax, 4
  0003e	89 45 fc	 mov	 DWORD PTR __UFirst$[ebp], eax
$LN4@for_each:
  00041	8b 45 fc	 mov	 eax, DWORD PTR __UFirst$[ebp]
  00044	3b 45 e0	 cmp	 eax, DWORD PTR __ULast$[ebp]
  00047	74 12		 je	 SHORT $LN3@for_each

; 308  :         _Func(*_UFirst);

  00049	8b 45 fc	 mov	 eax, DWORD PTR __UFirst$[ebp]
  0004c	8b 00		 mov	 eax, DWORD PTR [eax]
  0004e	89 45 dc	 mov	 DWORD PTR _pInstance$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 83   : 		pInstance->RenderDungeonBlock();

  00051	8b 4d dc	 mov	 ecx, DWORD PTR _pInstance$[ebp]
  00054	e8 00 00 00 00	 call	 ?RenderDungeonBlock@CDungeonModelInstance@@QAEXXZ ; CDungeonModelInstance::RenderDungeonBlock
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 309  :     }

  00059	eb dd		 jmp	 SHORT $LN2@for_each
$LN3@for_each:

; 310  : 
; 311  :     return _Func;

  0005b	8a 45 10	 mov	 al, BYTE PTR __Func$[ebp]

; 312  : }

  0005e	c9		 leave
  0005f	c3		 ret	 0
??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@std@@UFRender@@@std@@YA?AUFRender@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@0@0U1@@Z ENDP ; std::for_each<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDungeonModelInstance *> > >,FRender>
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
;	COMDAT ??RFUpdate@@QAEXPAVCGrannyModelInstance@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pInstance$ = 8						; size = 4
??RFUpdate@@QAEXPAVCGrannyModelInstance@@@Z PROC	; FUpdate::operator(), COMDAT
; _this$ = ecx

; 62   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 63   : 		pInstance->Update(CGrannyModelInstance::ANIFPS_MIN);

  00007	6a 1e		 push	 30			; 0000001eH
  00009	8b 4d 08	 mov	 ecx, DWORD PTR _pInstance$[ebp]
  0000c	e8 00 00 00 00	 call	 ?Update@CGrannyModelInstance@@QAEXK@Z ; CGrannyModelInstance::Update

; 64   : 		pInstance->UpdateLocalTime(fElapsedTime);

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	51		 push	 ecx
  00015	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00019	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001e	8b 4d 08	 mov	 ecx, DWORD PTR _pInstance$[ebp]
  00021	e8 00 00 00 00	 call	 ?UpdateLocalTime@CGrannyModelInstance@@QAEXM@Z ; CGrannyModelInstance::UpdateLocalTime

; 65   : 		pInstance->Deform(pmatWorld);

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	ff 70 04	 push	 DWORD PTR [eax+4]
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _pInstance$[ebp]
  0002f	e8 00 00 00 00	 call	 ?Deform@CGrannyModelInstance@@QAEXPBUD3DXMATRIX@@@Z ; CGrannyModelInstance::Deform

; 66   : 	}

  00034	c9		 leave
  00035	c2 04 00	 ret	 4
??RFUpdate@@QAEXPAVCGrannyModelInstance@@@Z ENDP	; FUpdate::operator()
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
;	COMDAT ??_GCDungeonModelInstance@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDungeonModelInstance@@UAEPAXI@Z PROC		; CDungeonModelInstance::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 10   : 		virtual ~CDungeonModelInstance() {}

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDungeonModelInstance@@6B@
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??1CGrannyModelInstance@@UAE@XZ ; CGrannyModelInstance::~CGrannyModelInstance
  00018	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001b	83 e0 01	 and	 eax, 1
  0001e	74 0c		 je	 SHORT $LN2@scalar
  00020	6a 78		 push	 120			; 00000078H
  00022	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	59		 pop	 ecx
  0002b	59		 pop	 ecx
$LN2@scalar:
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c9		 leave
  00030	c2 04 00	 ret	 4
??_GCDungeonModelInstance@@UAEPAXI@Z ENDP		; CDungeonModelInstance::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
;	COMDAT ?RenderDungeonBlockShadow@CDungeonModelInstance@@QAEXXZ
_TEXT	SEGMENT
_lpd3dRigidPNTVtxBuf$ = -8				; size = 4
_this$ = -4						; size = 4
?RenderDungeonBlockShadow@CDungeonModelInstance@@QAEXXZ PROC ; CDungeonModelInstance::RenderDungeonBlockShadow, COMDAT
; _this$ = ecx

; 27   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 28   : 			if (IsEmpty())

  00008	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e8 00 00 00 00	 call	 ?IsEmpty@CGrannyModelInstance@@QAE_NXZ ; CGrannyModelInstance::IsEmpty
  00010	0f b6 c0	 movzx	 eax, al
  00013	85 c0		 test	 eax, eax
  00015	74 05		 je	 SHORT $LN5@RenderDung

; 29   : 				return;

  00017	e9 06 01 00 00	 jmp	 $LN1@RenderDung
$LN5@RenderDung:

; 30   : 
; 31   : 			STATEMANAGER.SetRenderState(D3DRS_TEXTUREFACTOR, 0xffffffff);

  0001c	6a ff		 push	 -1
  0001e	6a 3c		 push	 60			; 0000003cH
  00020	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00026	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 32   : 			STATEMANAGER.SaveTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TFACTOR);

  0002b	6a 03		 push	 3
  0002d	6a 02		 push	 2
  0002f	6a 00		 push	 0
  00031	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00037	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 33   : 			STATEMANAGER.SaveTextureStageState(0, D3DTSS_COLOROP,   D3DTOP_SELECTARG1);

  0003c	6a 02		 push	 2
  0003e	6a 01		 push	 1
  00040	6a 00		 push	 0
  00042	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00048	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 34   : 			STATEMANAGER.SaveTextureStageState(0, D3DTSS_ALPHAOP,   D3DTOP_DISABLE);

  0004d	6a 01		 push	 1
  0004f	6a 04		 push	 4
  00051	6a 00		 push	 0
  00053	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00059	e8 00 00 00 00	 call	 ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState

; 35   : 			STATEMANAGER.SaveRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  0005e	6a 01		 push	 1
  00060	6a 1b		 push	 27			; 0000001bH
  00062	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00068	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 36   : 			STATEMANAGER.SaveRenderState(D3DRS_SRCBLEND, D3DBLEND_ZERO);

  0006d	6a 01		 push	 1
  0006f	6a 13		 push	 19			; 00000013H
  00071	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00077	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 37   : 			STATEMANAGER.SaveRenderState(D3DRS_DESTBLEND, D3DBLEND_SRCCOLOR);

  0007c	6a 03		 push	 3
  0007e	6a 14		 push	 20			; 00000014H
  00080	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00086	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 38   : 
; 39   : 			STATEMANAGER.SetVertexShader(ms_pnt2VS);

  0008b	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_pnt2VS@CGraphicBase@@1KA ; CGraphicBase::ms_pnt2VS
  00091	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00097	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 40   : 			LPDIRECT3DVERTEXBUFFER8 lpd3dRigidPNTVtxBuf = m_pModel->GetPNTD3DVertexBuffer();

  0009c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000a2	e8 00 00 00 00	 call	 ?GetPNTD3DVertexBuffer@CGrannyModel@@QBEPAUIDirect3DVertexBuffer8@@XZ ; CGrannyModel::GetPNTD3DVertexBuffer
  000a7	89 45 f8	 mov	 DWORD PTR _lpd3dRigidPNTVtxBuf$[ebp], eax

; 41   : 			if (lpd3dRigidPNTVtxBuf)

  000aa	83 7d f8 00	 cmp	 DWORD PTR _lpd3dRigidPNTVtxBuf$[ebp], 0
  000ae	74 1e		 je	 SHORT $LN23@RenderDung

; 42   : 			{
; 43   : 				STATEMANAGER.SetStreamSource(0, lpd3dRigidPNTVtxBuf, sizeof(TPNT2Vertex));

  000b0	6a 28		 push	 40			; 00000028H
  000b2	ff 75 f8	 push	 DWORD PTR _lpd3dRigidPNTVtxBuf$[ebp]
  000b5	6a 00		 push	 0
  000b7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000bd	e8 00 00 00 00	 call	 ?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z ; CStateManager::SetStreamSource

; 44   : 				RenderMeshNodeListWithoutTexture(CGrannyMesh::TYPE_RIGID, CGrannyMaterial::TYPE_BLEND_PNT);

  000c2	6a 01		 push	 1
  000c4	6a 00		 push	 0
  000c6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c9	e8 00 00 00 00	 call	 ?RenderMeshNodeListWithoutTexture@CGrannyModelInstance@@IAEXW4EType@CGrannyMesh@@W42CGrannyMaterial@@@Z ; CGrannyModelInstance::RenderMeshNodeListWithoutTexture
$LN23@RenderDung:

; 45   : 			}
; 46   : 
; 47   : 			STATEMANAGER.RestoreTextureStageState(0, D3DTSS_COLORARG1);

  000ce	6a 02		 push	 2
  000d0	6a 00		 push	 0
  000d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000d8	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 48   : 			STATEMANAGER.RestoreTextureStageState(0, D3DTSS_COLOROP);

  000dd	6a 01		 push	 1
  000df	6a 00		 push	 0
  000e1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000e7	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 49   : 			STATEMANAGER.RestoreTextureStageState(0, D3DTSS_ALPHAOP);

  000ec	6a 04		 push	 4
  000ee	6a 00		 push	 0
  000f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000f6	e8 00 00 00 00	 call	 ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState

; 50   : 			STATEMANAGER.RestoreRenderState(D3DRS_ALPHABLENDENABLE);

  000fb	6a 1b		 push	 27			; 0000001bH
  000fd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00103	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 51   : 			STATEMANAGER.RestoreRenderState(D3DRS_SRCBLEND);

  00108	6a 13		 push	 19			; 00000013H
  0010a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00110	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 52   : 			STATEMANAGER.RestoreRenderState(D3DRS_DESTBLEND);

  00115	6a 14		 push	 20			; 00000014H
  00117	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0011d	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState
$LN1@RenderDung:

; 53   : 		}

  00122	c9		 leave
  00123	c3		 ret	 0
?RenderDungeonBlockShadow@CDungeonModelInstance@@QAEXXZ ENDP ; CDungeonModelInstance::RenderDungeonBlockShadow
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
;	COMDAT ?RenderDungeonBlock@CDungeonModelInstance@@QAEXXZ
_TEXT	SEGMENT
_lpd3dRigidPNTVtxBuf$ = -8				; size = 4
_this$ = -4						; size = 4
?RenderDungeonBlock@CDungeonModelInstance@@QAEXXZ PROC	; CDungeonModelInstance::RenderDungeonBlock, COMDAT
; _this$ = ecx

; 13   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 14   : 			if (IsEmpty())

  00008	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e8 00 00 00 00	 call	 ?IsEmpty@CGrannyModelInstance@@QAE_NXZ ; CGrannyModelInstance::IsEmpty
  00010	0f b6 c0	 movzx	 eax, al
  00013	85 c0		 test	 eax, eax
  00015	74 02		 je	 SHORT $LN5@RenderDung

; 15   : 				return;

  00017	eb 43		 jmp	 SHORT $LN1@RenderDung
$LN5@RenderDung:

; 16   : 
; 17   : 			STATEMANAGER.SetVertexShader(ms_pnt2VS);

  00019	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_pnt2VS@CGraphicBase@@1KA ; CGraphicBase::ms_pnt2VS
  0001f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00025	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 18   : 			LPDIRECT3DVERTEXBUFFER8 lpd3dRigidPNTVtxBuf = m_pModel->GetPNTD3DVertexBuffer();

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00030	e8 00 00 00 00	 call	 ?GetPNTD3DVertexBuffer@CGrannyModel@@QBEPAUIDirect3DVertexBuffer8@@XZ ; CGrannyModel::GetPNTD3DVertexBuffer
  00035	89 45 f8	 mov	 DWORD PTR _lpd3dRigidPNTVtxBuf$[ebp], eax

; 19   : 			if (lpd3dRigidPNTVtxBuf)

  00038	83 7d f8 00	 cmp	 DWORD PTR _lpd3dRigidPNTVtxBuf$[ebp], 0
  0003c	74 1e		 je	 SHORT $LN1@RenderDung

; 20   : 			{
; 21   : 				STATEMANAGER.SetStreamSource(0, lpd3dRigidPNTVtxBuf, sizeof(TPNT2Vertex));

  0003e	6a 28		 push	 40			; 00000028H
  00040	ff 75 f8	 push	 DWORD PTR _lpd3dRigidPNTVtxBuf$[ebp]
  00043	6a 00		 push	 0
  00045	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0004b	e8 00 00 00 00	 call	 ?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z ; CStateManager::SetStreamSource

; 22   : 				RenderMeshNodeListWithTwoTexture(CGrannyMesh::TYPE_RIGID, CGrannyMaterial::TYPE_BLEND_PNT);

  00050	6a 01		 push	 1
  00052	6a 00		 push	 0
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?RenderMeshNodeListWithTwoTexture@CGrannyModelInstance@@IAEXW4EType@CGrannyMesh@@W42CGrannyMaterial@@@Z ; CGrannyModelInstance::RenderMeshNodeListWithTwoTexture
$LN1@RenderDung:

; 23   : 			}
; 24   : 		}

  0005c	c9		 leave
  0005d	c3		 ret	 0
?RenderDungeonBlock@CDungeonModelInstance@@QAEXXZ ENDP	; CDungeonModelInstance::RenderDungeonBlock
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_GCDungeonBlock@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDungeonBlock@@UAEPAXI@Z PROC			; CDungeonBlock::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CDungeonBlock@@UAE@XZ ; CDungeonBlock::~CDungeonBlock
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0f		 je	 SHORT $LN2@scalar
  00017	68 bc 01 00 00	 push	 444			; 000001bcH
  0001c	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00024	59		 pop	 ecx
  00025	59		 pop	 ecx
$LN2@scalar:
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	c9		 leave
  0002a	c2 04 00	 ret	 4
??_GCDungeonBlock@@UAEPAXI@Z ENDP			; CDungeonBlock::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Getal@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEAAV?$allocator@PAVCDungeonModelInstance@@@2@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
?_Getal@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEAAV?$allocator@PAVCDungeonModelInstance@@@2@XZ PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Getal, COMDAT
; _this$ = ecx

; 1732 :     _Alty& _Getal() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1733 :         return _Mypair._Get_first();

  00008	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  0000b	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  0000e	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]

; 1734 :     }

  00011	c9		 leave
  00012	c3		 ret	 0
?_Getal@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEAAV?$allocator@PAVCDungeonModelInstance@@@2@XZ ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@CAXXZ PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Xlength, COMDAT

; 1704 :     [[noreturn]] static void _Xlength() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1705 :         _Xlength_error("vector too long");

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00008	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1706 :     }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
?_Xlength@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@CAXXZ ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Tidy@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
$T1 = -52						; size = 4
__Ptr$ = -48						; size = 4
__Count$ = -44						; size = 4
$T2 = -40						; size = 4
__First$ = -36						; size = 4
__Last$ = -32						; size = 4
$T3 = -28						; size = 4
$T4 = -24						; size = 4
__Myend$ = -20						; size = 4
__Mylast$ = -16						; size = 4
_this$ = -12						; size = 4
__My_data$ = -8						; size = 4
__Myfirst$ = -4						; size = 4
?_Tidy@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXXZ PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Tidy, COMDAT
; _this$ = ecx

; 1686 :     void _Tidy() noexcept { // free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1687 :         auto& _My_data    = _Mypair._Myval2;

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 f8	 mov	 DWORD PTR __My_data$[ebp], eax

; 1688 :         pointer& _Myfirst = _My_data._Myfirst;

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00012	89 45 fc	 mov	 DWORD PTR __Myfirst$[ebp], eax

; 1689 :         pointer& _Mylast  = _My_data._Mylast;

  00015	8b 45 f8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00018	83 c0 04	 add	 eax, 4
  0001b	89 45 f0	 mov	 DWORD PTR __Mylast$[ebp], eax

; 1690 :         pointer& _Myend   = _My_data._Myend;

  0001e	8b 45 f8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00021	83 c0 08	 add	 eax, 8
  00024	89 45 ec	 mov	 DWORD PTR __Myend$[ebp], eax

; 1691 : 
; 1692 :         _My_data._Orphan_all();
; 1693 : 
; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00027	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0002a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0002d	74 74		 je	 SHORT $LN3@Tidy

; 1695 :             _Destroy(_Myfirst, _Mylast);

  0002f	8b 45 f0	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00032	8b 00		 mov	 eax, DWORD PTR [eax]
  00034	89 45 e0	 mov	 DWORD PTR __Last$[ebp], eax
  00037	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0003a	8b 00		 mov	 eax, DWORD PTR [eax]
  0003c	89 45 dc	 mov	 DWORD PTR __First$[ebp], eax

; 1733 :         return _Mypair._Get_first();

  0003f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  00042	89 45 e8	 mov	 DWORD PTR $T4[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  00045	8b 45 e8	 mov	 eax, DWORD PTR $T4[ebp]
  00048	89 45 e4	 mov	 DWORD PTR $T3[ebp], eax

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0004b	ff 75 e4	 push	 DWORD PTR $T3[ebp]
  0004e	ff 75 e0	 push	 DWORD PTR __Last$[ebp]
  00051	ff 75 dc	 push	 DWORD PTR __First$[ebp]
  00054	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAXPAPAVCDungeonModelInstance@@QAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CDungeonModelInstance *> >
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1733 :         return _Mypair._Get_first();

  0005c	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  0005f	89 45 d8	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  00062	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
  00065	89 45 cc	 mov	 DWORD PTR $T1[ebp], eax

; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00068	8b 45 ec	 mov	 eax, DWORD PTR __Myend$[ebp]
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR __Myfirst$[ebp]
  0006e	8b 00		 mov	 eax, DWORD PTR [eax]
  00070	2b 01		 sub	 eax, DWORD PTR [ecx]
  00072	c1 f8 02	 sar	 eax, 2
  00075	89 45 d4	 mov	 DWORD PTR __Count$[ebp], eax
  00078	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0007b	8b 00		 mov	 eax, DWORD PTR [eax]
  0007d	89 45 d0	 mov	 DWORD PTR __Ptr$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00080	8b 45 d4	 mov	 eax, DWORD PTR __Count$[ebp]
  00083	c1 e0 02	 shl	 eax, 2
  00086	50		 push	 eax
  00087	ff 75 d0	 push	 DWORD PTR __Ptr$[ebp]
  0008a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008f	59		 pop	 ecx
  00090	59		 pop	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00091	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  00094	83 20 00	 and	 DWORD PTR [eax], 0

; 1699 :             _Mylast  = pointer();

  00097	8b 45 f0	 mov	 eax, DWORD PTR __Mylast$[ebp]
  0009a	83 20 00	 and	 DWORD PTR [eax], 0

; 1700 :             _Myend   = pointer();

  0009d	8b 45 ec	 mov	 eax, DWORD PTR __Myend$[ebp]
  000a0	83 20 00	 and	 DWORD PTR [eax], 0
$LN3@Tidy:

; 1701 :         }
; 1702 :     }

  000a3	c9		 leave
  000a4	c3		 ret	 0
?_Tidy@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXXZ ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Change_array@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXQAPAVCDungeonModelInstance@@II@Z
_TEXT	SEGMENT
$T1 = -52						; size = 4
__Ptr$ = -48						; size = 4
__Count$ = -44						; size = 4
$T2 = -40						; size = 4
__First$ = -36						; size = 4
__Last$ = -32						; size = 4
$T3 = -28						; size = 4
$T4 = -24						; size = 4
__Myend$ = -20						; size = 4
__Mylast$ = -16						; size = 4
_this$ = -12						; size = 4
__My_data$ = -8						; size = 4
__Myfirst$ = -4						; size = 4
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXQAPAVCDungeonModelInstance@@II@Z PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Change_array, COMDAT
; _this$ = ecx

; 1667 :     void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1668 :         // orphan all iterators, discard old array, acquire new array
; 1669 :         auto& _My_data    = _Mypair._Myval2;

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 f8	 mov	 DWORD PTR __My_data$[ebp], eax

; 1670 :         pointer& _Myfirst = _My_data._Myfirst;

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00012	89 45 fc	 mov	 DWORD PTR __Myfirst$[ebp], eax

; 1671 :         pointer& _Mylast  = _My_data._Mylast;

  00015	8b 45 f8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00018	83 c0 04	 add	 eax, 4
  0001b	89 45 f0	 mov	 DWORD PTR __Mylast$[ebp], eax

; 1672 :         pointer& _Myend   = _My_data._Myend;

  0001e	8b 45 f8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00021	83 c0 08	 add	 eax, 8
  00024	89 45 ec	 mov	 DWORD PTR __Myend$[ebp], eax

; 1673 : 
; 1674 :         _My_data._Orphan_all();
; 1675 : 
; 1676 :         if (_Myfirst) { // destroy and deallocate old array

  00027	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0002a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0002d	74 62		 je	 SHORT $LN2@Change_arr

; 1677 :             _Destroy(_Myfirst, _Mylast);

  0002f	8b 45 f0	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00032	8b 00		 mov	 eax, DWORD PTR [eax]
  00034	89 45 e0	 mov	 DWORD PTR __Last$[ebp], eax
  00037	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0003a	8b 00		 mov	 eax, DWORD PTR [eax]
  0003c	89 45 dc	 mov	 DWORD PTR __First$[ebp], eax

; 1733 :         return _Mypair._Get_first();

  0003f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  00042	89 45 e8	 mov	 DWORD PTR $T4[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  00045	8b 45 e8	 mov	 eax, DWORD PTR $T4[ebp]
  00048	89 45 e4	 mov	 DWORD PTR $T3[ebp], eax

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0004b	ff 75 e4	 push	 DWORD PTR $T3[ebp]
  0004e	ff 75 e0	 push	 DWORD PTR __Last$[ebp]
  00051	ff 75 dc	 push	 DWORD PTR __First$[ebp]
  00054	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAXPAPAVCDungeonModelInstance@@QAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CDungeonModelInstance *> >
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1733 :         return _Mypair._Get_first();

  0005c	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  0005f	89 45 d8	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  00062	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
  00065	89 45 cc	 mov	 DWORD PTR $T1[ebp], eax

; 1678 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00068	8b 45 ec	 mov	 eax, DWORD PTR __Myend$[ebp]
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR __Myfirst$[ebp]
  0006e	8b 00		 mov	 eax, DWORD PTR [eax]
  00070	2b 01		 sub	 eax, DWORD PTR [ecx]
  00072	c1 f8 02	 sar	 eax, 2
  00075	89 45 d4	 mov	 DWORD PTR __Count$[ebp], eax
  00078	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0007b	8b 00		 mov	 eax, DWORD PTR [eax]
  0007d	89 45 d0	 mov	 DWORD PTR __Ptr$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00080	8b 45 d4	 mov	 eax, DWORD PTR __Count$[ebp]
  00083	c1 e0 02	 shl	 eax, 2
  00086	50		 push	 eax
  00087	ff 75 d0	 push	 DWORD PTR __Ptr$[ebp]
  0008a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008f	59		 pop	 ecx
  00090	59		 pop	 ecx
$LN2@Change_arr:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1681 :         _Myfirst = _Newvec;

  00091	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  00094	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  00097	89 08		 mov	 DWORD PTR [eax], ecx

; 1682 :         _Mylast  = _Newvec + _Newsize;

  00099	8b 45 0c	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0009c	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  0009f	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  000a2	8b 4d f0	 mov	 ecx, DWORD PTR __Mylast$[ebp]
  000a5	89 01		 mov	 DWORD PTR [ecx], eax

; 1683 :         _Myend   = _Newvec + _Newcapacity;

  000a7	8b 45 10	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  000aa	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  000ad	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  000b0	8b 4d ec	 mov	 ecx, DWORD PTR __Myend$[ebp]
  000b3	89 01		 mov	 DWORD PTR [ecx], eax

; 1684 :     }

  000b5	c9		 leave
  000b6	c2 0c 00	 ret	 12			; 0000000cH
?_Change_array@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXQAPAVCDungeonModelInstance@@II@Z ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\limits
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Calculate_growth@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@ABEII@Z
_TEXT	SEGMENT
$T1 = -52						; size = 4
$T2 = -48						; size = 4
$T3 = -44						; size = 4
$T4 = -40						; size = 4
$T5 = -36						; size = 4
__Geometric$ = -32					; size = 4
__Max$ = -28						; size = 4
tv82 = -24						; size = 4
$T6 = -20						; size = 4
$T7 = -16						; size = 4
_this$ = -12						; size = 4
__My_data$8 = -8					; size = 4
__Oldcapacity$ = -4					; size = 4
__Newsize$ = 8						; size = 4
?_Calculate_growth@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@ABEII@Z PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Calculate_growth, COMDAT
; _this$ = ecx

; 1615 :     size_type _Calculate_growth(const size_type _Newsize) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1493 :         auto& _My_data = _Mypair._Myval2;

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 f8	 mov	 DWORD PTR __My_data$8[ebp], eax

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __My_data$8[ebp]
  00012	8b 4d f8	 mov	 ecx, DWORD PTR __My_data$8[ebp]
  00015	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00018	2b 01		 sub	 eax, DWORD PTR [ecx]
  0001a	c1 f8 02	 sar	 eax, 2
  0001d	89 45 fc	 mov	 DWORD PTR __Oldcapacity$[ebp], eax

; 1737 :         return _Mypair._Get_first();

  00020	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1351 :         return *this;

  00023	89 45 dc	 mov	 DWORD PTR $T5[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1737 :         return _Mypair._Get_first();

  00026	8b 45 dc	 mov	 eax, DWORD PTR $T5[ebp]
  00029	89 45 cc	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 710  :         return static_cast<size_t>(-1) / sizeof(value_type);

  0002c	c7 45 f0 ff ff
	ff 3f		 mov	 DWORD PTR $T7[ebp], 1073741823 ; 3fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\limits

; 557  :         return INT_MAX;

  00033	c7 45 d8 ff ff
	ff 7f		 mov	 DWORD PTR $T4[ebp], 2147483647 ; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1488 :         return (_STD min)(

  0003a	8b 45 d8	 mov	 eax, DWORD PTR $T4[ebp]
  0003d	89 45 ec	 mov	 DWORD PTR $T6[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 68   :     return _Right < _Left ? _Right : _Left;

  00040	8b 45 f0	 mov	 eax, DWORD PTR $T7[ebp]
  00043	3b 45 ec	 cmp	 eax, DWORD PTR $T6[ebp]
  00046	73 08		 jae	 SHORT $LN25@Calculate_
  00048	8d 45 f0	 lea	 eax, DWORD PTR $T7[ebp]
  0004b	89 45 e8	 mov	 DWORD PTR tv82[ebp], eax
  0004e	eb 06		 jmp	 SHORT $LN26@Calculate_
$LN25@Calculate_:
  00050	8d 45 ec	 lea	 eax, DWORD PTR $T6[ebp]
  00053	89 45 e8	 mov	 DWORD PTR tv82[ebp], eax
$LN26@Calculate_:
  00056	8b 45 e8	 mov	 eax, DWORD PTR tv82[ebp]
  00059	89 45 d4	 mov	 DWORD PTR $T3[ebp], eax
  0005c	8b 45 d4	 mov	 eax, DWORD PTR $T3[ebp]
  0005f	89 45 d0	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1488 :         return (_STD min)(

  00062	8b 45 d0	 mov	 eax, DWORD PTR $T2[ebp]
  00065	8b 00		 mov	 eax, DWORD PTR [eax]
  00067	89 45 e4	 mov	 DWORD PTR __Max$[ebp], eax

; 1616 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1617 :         const size_type _Oldcapacity = capacity();
; 1618 :         const auto _Max              = max_size();
; 1619 : 
; 1620 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0006a	8b 45 fc	 mov	 eax, DWORD PTR __Oldcapacity$[ebp]
  0006d	d1 e8		 shr	 eax, 1
  0006f	8b 4d e4	 mov	 ecx, DWORD PTR __Max$[ebp]
  00072	2b c8		 sub	 ecx, eax
  00074	39 4d fc	 cmp	 DWORD PTR __Oldcapacity$[ebp], ecx
  00077	76 05		 jbe	 SHORT $LN2@Calculate_

; 1621 :             return _Max; // geometric growth would overflow

  00079	8b 45 e4	 mov	 eax, DWORD PTR __Max$[ebp]
  0007c	eb 1b		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1622 :         }
; 1623 : 
; 1624 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR __Oldcapacity$[ebp]
  00081	d1 e8		 shr	 eax, 1
  00083	03 45 fc	 add	 eax, DWORD PTR __Oldcapacity$[ebp]
  00086	89 45 e0	 mov	 DWORD PTR __Geometric$[ebp], eax

; 1625 : 
; 1626 :         if (_Geometric < _Newsize) {

  00089	8b 45 e0	 mov	 eax, DWORD PTR __Geometric$[ebp]
  0008c	3b 45 08	 cmp	 eax, DWORD PTR __Newsize$[ebp]
  0008f	73 05		 jae	 SHORT $LN3@Calculate_

; 1627 :             return _Newsize; // geometric growth would be insufficient

  00091	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00094	eb 03		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1628 :         }
; 1629 : 
; 1630 :         return _Geometric; // geometric growth is sufficient

  00096	8b 45 e0	 mov	 eax, DWORD PTR __Geometric$[ebp]
$LN1@Calculate_:

; 1631 :     }

  00099	c9		 leave
  0009a	c2 04 00	 ret	 4
?_Calculate_growth@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@ABEII@Z ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Destroy@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXPAPAVCDungeonModelInstance@@0@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXPAPAVCDungeonModelInstance@@0@Z PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Destroy, COMDAT
; _this$ = ecx

; 1611 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1733 :         return _Mypair._Get_first();

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  0000c	89 45 f8	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  0000f	8b 45 f8	 mov	 eax, DWORD PTR $T2[ebp]
  00012	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00015	ff 75 f4	 push	 DWORD PTR $T1[ebp]
  00018	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0001b	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0001e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAXPAPAVCDungeonModelInstance@@QAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CDungeonModelInstance *> >
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1613 :     }

  00026	c9		 leave
  00027	c2 08 00	 ret	 8
?_Destroy@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXPAPAVCDungeonModelInstance@@0@Z ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?clear@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__First$ = -32						; size = 4
__Last$ = -28						; size = 4
$T1 = -24						; size = 4
$T2 = -20						; size = 4
__Myfirst$ = -16					; size = 4
__Mylast$ = -12						; size = 4
_this$ = -8						; size = 4
__My_data$ = -4						; size = 4
?clear@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEXXZ PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::clear, COMDAT
; _this$ = ecx

; 1383 :     void clear() noexcept { // erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1384 :         auto& _My_data    = _Mypair._Myval2;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 fc	 mov	 DWORD PTR __My_data$[ebp], eax

; 1385 :         pointer& _Myfirst = _My_data._Myfirst;

  0000f	8b 45 fc	 mov	 eax, DWORD PTR __My_data$[ebp]
  00012	89 45 f0	 mov	 DWORD PTR __Myfirst$[ebp], eax

; 1386 :         pointer& _Mylast  = _My_data._Mylast;

  00015	8b 45 fc	 mov	 eax, DWORD PTR __My_data$[ebp]
  00018	83 c0 04	 add	 eax, 4
  0001b	89 45 f4	 mov	 DWORD PTR __Mylast$[ebp], eax

; 1387 : 
; 1388 :         _My_data._Orphan_all();
; 1389 :         _Destroy(_Myfirst, _Mylast);

  0001e	8b 45 f4	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00021	8b 00		 mov	 eax, DWORD PTR [eax]
  00023	89 45 e4	 mov	 DWORD PTR __Last$[ebp], eax
  00026	8b 45 f0	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  00029	8b 00		 mov	 eax, DWORD PTR [eax]
  0002b	89 45 e0	 mov	 DWORD PTR __First$[ebp], eax

; 1733 :         return _Mypair._Get_first();

  0002e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  00031	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  00034	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]
  00037	89 45 e8	 mov	 DWORD PTR $T1[ebp], eax

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0003a	ff 75 e8	 push	 DWORD PTR $T1[ebp]
  0003d	ff 75 e4	 push	 DWORD PTR __Last$[ebp]
  00040	ff 75 e0	 push	 DWORD PTR __First$[ebp]
  00043	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAXPAPAVCDungeonModelInstance@@QAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z ; std::_Destroy_range<std::allocator<CDungeonModelInstance *> >
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1390 :         _Mylast = _Myfirst;

  0004b	8b 45 f4	 mov	 eax, DWORD PTR __Mylast$[ebp]
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR __Myfirst$[ebp]
  00051	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00053	89 08		 mov	 DWORD PTR [eax], ecx

; 1391 :     }

  00055	c9		 leave
  00056	c3		 ret	 0
?clear@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEXXZ ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::clear
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\limits
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?reserve@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
$T1 = -48						; size = 4
$T2 = -44						; size = 4
$T3 = -40						; size = 4
$T4 = -36						; size = 4
$T5 = -32						; size = 4
$T6 = -28						; size = 4
$T7 = -24						; size = 4
tv81 = -20						; size = 4
$T8 = -16						; size = 4
$T9 = -12						; size = 4
__My_data$10 = -8					; size = 4
_this$ = -4						; size = 4
__Newcapacity$ = 8					; size = 4
?reserve@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEXI@Z PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::reserve, COMDAT
; _this$ = ecx

; 1304 :     void reserve(_CRT_GUARDOVERFLOW const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1493 :         auto& _My_data = _Mypair._Myval2;

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 f8	 mov	 DWORD PTR __My_data$10[ebp], eax

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __My_data$10[ebp]
  00012	8b 4d f8	 mov	 ecx, DWORD PTR __My_data$10[ebp]
  00015	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00018	2b 01		 sub	 eax, DWORD PTR [ecx]
  0001a	c1 f8 02	 sar	 eax, 2
  0001d	89 45 e8	 mov	 DWORD PTR $T7[ebp], eax

; 1305 :         // increase capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1306 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  00020	8b 45 08	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  00023	3b 45 e8	 cmp	 eax, DWORD PTR $T7[ebp]
  00026	76 62		 jbe	 SHORT $LN4@reserve

; 1737 :         return _Mypair._Get_first();

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1351 :         return *this;

  0002b	89 45 e4	 mov	 DWORD PTR $T6[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1737 :         return _Mypair._Get_first();

  0002e	8b 45 e4	 mov	 eax, DWORD PTR $T6[ebp]
  00031	89 45 d0	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 710  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00034	c7 45 f4 ff ff
	ff 3f		 mov	 DWORD PTR $T9[ebp], 1073741823 ; 3fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\limits

; 557  :         return INT_MAX;

  0003b	c7 45 e0 ff ff
	ff 7f		 mov	 DWORD PTR $T5[ebp], 2147483647 ; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1488 :         return (_STD min)(

  00042	8b 45 e0	 mov	 eax, DWORD PTR $T5[ebp]
  00045	89 45 f0	 mov	 DWORD PTR $T8[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 68   :     return _Right < _Left ? _Right : _Left;

  00048	8b 45 f4	 mov	 eax, DWORD PTR $T9[ebp]
  0004b	3b 45 f0	 cmp	 eax, DWORD PTR $T8[ebp]
  0004e	73 08		 jae	 SHORT $LN25@reserve
  00050	8d 45 f4	 lea	 eax, DWORD PTR $T9[ebp]
  00053	89 45 ec	 mov	 DWORD PTR tv81[ebp], eax
  00056	eb 06		 jmp	 SHORT $LN26@reserve
$LN25@reserve:
  00058	8d 45 f0	 lea	 eax, DWORD PTR $T8[ebp]
  0005b	89 45 ec	 mov	 DWORD PTR tv81[ebp], eax
$LN26@reserve:
  0005e	8b 45 ec	 mov	 eax, DWORD PTR tv81[ebp]
  00061	89 45 dc	 mov	 DWORD PTR $T4[ebp], eax
  00064	8b 45 dc	 mov	 eax, DWORD PTR $T4[ebp]
  00067	89 45 d8	 mov	 DWORD PTR $T3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1488 :         return (_STD min)(

  0006a	8b 45 d8	 mov	 eax, DWORD PTR $T3[ebp]
  0006d	8b 00		 mov	 eax, DWORD PTR [eax]
  0006f	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax

; 1307 :             if (_Newcapacity > max_size()) {

  00072	8b 45 08	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  00075	3b 45 d4	 cmp	 eax, DWORD PTR $T2[ebp]
  00078	76 05		 jbe	 SHORT $LN3@reserve

; 1308 :                 _Xlength();

  0007a	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@CAXXZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Xlength
$LN3@reserve:

; 1309 :             }
; 1310 : 
; 1311 :             _Reallocate_exactly(_Newcapacity);

  0007f	ff 75 08	 push	 DWORD PTR __Newcapacity$[ebp]
  00082	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00085	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Reallocate_exactly
$LN4@reserve:

; 1312 :         }
; 1313 :     }

  0008a	c9		 leave
  0008b	c2 04 00	 ret	 4
?reserve@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEXI@Z ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::reserve
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
__Max_possible$2 = -80					; size = 4
$T3 = -76						; size = 4
__Size$ = -72						; size = 4
__First$ = -68						; size = 4
__Last$ = -64						; size = 4
$T4 = -60						; size = 4
$T5 = -56						; size = 4
$T6 = -52						; size = 4
$T7 = -48						; size = 4
__Myfirst$ = -44					; size = 4
__Mylast$ = -40						; size = 4
__My_data$ = -36					; size = 4
__Newvec$ = -32						; size = 4
_this$ = -28						; size = 4
___formal$ = -24					; size = 1
__Overflow_is_possible$8 = -18				; size = 1
$T9 = -17						; size = 1
__$EHRec$ = -16						; size = 16
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Reallocate_exactly, COMDAT
; _this$ = ecx

; 1251 :     void _Reallocate_exactly(const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 40	 sub	 esp, 64			; 00000040H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 1252 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1253 :         auto& _My_data    = _Mypair._Myval2;

  0002f	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00032	89 45 dc	 mov	 DWORD PTR __My_data$[ebp], eax

; 1254 :         pointer& _Myfirst = _My_data._Myfirst;

  00035	8b 45 dc	 mov	 eax, DWORD PTR __My_data$[ebp]
  00038	89 45 d4	 mov	 DWORD PTR __Myfirst$[ebp], eax

; 1255 :         pointer& _Mylast  = _My_data._Mylast;

  0003b	8b 45 dc	 mov	 eax, DWORD PTR __My_data$[ebp]
  0003e	83 c0 04	 add	 eax, 4
  00041	89 45 d8	 mov	 DWORD PTR __Mylast$[ebp], eax

; 1256 : 
; 1257 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  00044	8b 45 d8	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00047	8b 4d d4	 mov	 ecx, DWORD PTR __Myfirst$[ebp]
  0004a	8b 00		 mov	 eax, DWORD PTR [eax]
  0004c	2b 01		 sub	 eax, DWORD PTR [ecx]
  0004e	c1 f8 02	 sar	 eax, 2
  00051	89 45 b8	 mov	 DWORD PTR __Size$[ebp], eax

; 1733 :         return _Mypair._Get_first();

  00054	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  00057	89 45 d0	 mov	 DWORD PTR $T7[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  0005a	8b 45 d0	 mov	 eax, DWORD PTR $T7[ebp]
  0005d	89 45 b4	 mov	 DWORD PTR $T3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  00060	c6 45 ee 01	 mov	 BYTE PTR __Overflow_is_possible$8[ebp], 1

; 57   : 
; 58   :     if _CONSTEXPR_IF (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00064	c7 45 b0 ff ff
	ff 3f		 mov	 DWORD PTR __Max_possible$2[ebp], 1073741823 ; 3fffffffH

; 60   :         if (_Count > _Max_possible) {

  0006b	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR __Newcapacity$[ebp], 1073741823 ; 3fffffffH
  00072	76 05		 jbe	 SHORT $LN17@Reallocate

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00074	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN17@Reallocate:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00079	8b 45 08	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  0007c	c1 e0 02	 shl	 eax, 2
  0007f	89 45 cc	 mov	 DWORD PTR $T6[ebp], eax

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00082	ff 75 cc	 push	 DWORD PTR $T6[ebp]
  00085	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  0008a	59		 pop	 ecx
  0008b	89 45 e0	 mov	 DWORD PTR __Newvec$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1261 :         _TRY_BEGIN

  0008e	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0

; 1262 :         _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00092	8b 45 d8	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00095	8b 00		 mov	 eax, DWORD PTR [eax]
  00097	89 45 c0	 mov	 DWORD PTR __Last$[ebp], eax
  0009a	8b 45 d4	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0009d	8b 00		 mov	 eax, DWORD PTR [eax]
  0009f	89 45 bc	 mov	 DWORD PTR __First$[ebp], eax

; 1607 :         _Umove_if_noexcept1(_First, _Last, _Dest,

  000a2	33 c0		 xor	 eax, eax
  000a4	88 45 ef	 mov	 BYTE PTR $T9[ebp], al
  000a7	8a 45 ef	 mov	 al, BYTE PTR $T9[ebp]
  000aa	88 45 e8	 mov	 BYTE PTR ___formal$[ebp], al

; 1733 :         return _Mypair._Get_first();

  000ad	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  000b0	89 45 c8	 mov	 DWORD PTR $T5[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  000b3	8b 45 c8	 mov	 eax, DWORD PTR $T5[ebp]
  000b6	89 45 c4	 mov	 DWORD PTR $T4[ebp], eax

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000b9	ff 75 c4	 push	 DWORD PTR $T4[ebp]
  000bc	ff 75 e0	 push	 DWORD PTR __Newvec$[ebp]
  000bf	ff 75 c0	 push	 DWORD PTR __Last$[ebp]
  000c2	ff 75 bc	 push	 DWORD PTR __First$[ebp]
  000c5	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@YAPAPAVCDungeonModelInstance@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCDungeonModelInstance@@@0@@Z ; std::_Uninitialized_move<CDungeonModelInstance * *,std::allocator<CDungeonModelInstance *> >
  000ca	83 c4 10	 add	 esp, 16			; 00000010H

; 1262 :         _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  000cd	eb 24		 jmp	 SHORT $LN4@Reallocate
__catch$?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z$0:

; 1263 :         _CATCH_ALL
; 1264 :         _Getal().deallocate(_Newvec, _Newcapacity);

  000cf	ff 75 08	 push	 DWORD PTR __Newcapacity$[ebp]
  000d2	ff 75 e0	 push	 DWORD PTR __Newvec$[ebp]
  000d5	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  000d8	e8 00 00 00 00	 call	 ?_Getal@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEAAV?$allocator@PAVCDungeonModelInstance@@@2@XZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Getal
  000dd	8b c8		 mov	 ecx, eax
  000df	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PAVCDungeonModelInstance@@@std@@QAEXQAPAVCDungeonModelInstance@@I@Z ; std::allocator<CDungeonModelInstance *>::deallocate

; 1265 :         _RERAISE;

  000e4	6a 00		 push	 0
  000e6	6a 00		 push	 0
  000e8	e8 00 00 00 00	 call	 __CxxThrowException@8

; 1266 :         _CATCH_END

  000ed	b8 00 00 00 00	 mov	 eax, $LN7@Reallocate
  000f2	c3		 ret	 0
$LN4@Reallocate:
  000f3	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
  000f7	eb 04		 jmp	 SHORT __tryend$?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z$1
$LN7@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
  000f9	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z$1:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1267 : 
; 1268 :         _Change_array(_Newvec, _Size, _Newcapacity);

  000fd	ff 75 08	 push	 DWORD PTR __Newcapacity$[ebp]
  00100	ff 75 b8	 push	 DWORD PTR __Size$[ebp]
  00103	ff 75 e0	 push	 DWORD PTR __Newvec$[ebp]
  00106	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  00109	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXQAPAVCDungeonModelInstance@@II@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Change_array
$LN20@Reallocate:

; 1269 :     }

  0010e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00111	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00118	59		 pop	 ecx
  00119	5f		 pop	 edi
  0011a	5e		 pop	 esi
  0011b	5b		 pop	 ebx
  0011c	c9		 leave
  0011d	c2 04 00	 ret	 4
  00120	cc		 int	 3
  00121	cc		 int	 3
  00122	cc		 int	 3
  00123	cc		 int	 3
  00124	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Reallocate_exactly@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXI@Z ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Reallocate_exactly
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??1?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAE@XZ PROC ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::~vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 673  :         _Tidy();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXXZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Tidy

; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  0000f	c9		 leave
  00010	c3		 ret	 0
??1?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAE@XZ ENDP ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::~vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?deallocate@?$allocator@PAVCDungeonModelInstance@@@std@@QAEXQAPAVCDungeonModelInstance@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@PAVCDungeonModelInstance@@@std@@QAEXQAPAVCDungeonModelInstance@@I@Z PROC ; std::allocator<CDungeonModelInstance *>::deallocate, COMDAT
; _this$ = ecx

; 808  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 809  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0000a	c1 e0 02	 shl	 eax, 2
  0000d	50		 push	 eax
  0000e	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00011	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00016	59		 pop	 ecx
  00017	59		 pop	 ecx

; 811  :     }

  00018	c9		 leave
  00019	c2 08 00	 ret	 8
?deallocate@?$allocator@PAVCDungeonModelInstance@@@std@@QAEXQAPAVCDungeonModelInstance@@I@Z ENDP ; std::allocator<CDungeonModelInstance *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
;	COMDAT ?__Initialize@CDungeonBlock@@IAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T1 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
?__Initialize@CDungeonBlock@@IAEXXZ PROC		; CDungeonBlock::__Initialize, COMDAT
; _this$ = ecx

; 237  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 180  :     x = fx;

  00015	0f 57 c0	 xorps	 xmm0, xmm0
  00018	f3 0f 11 45 f0	 movss	 DWORD PTR $T1[ebp], xmm0

; 181  :     y = fy;

  0001d	0f 57 c0	 xorps	 xmm0, xmm0
  00020	f3 0f 11 45 f4	 movss	 DWORD PTR $T1[ebp+4], xmm0

; 182  :     z = fz;

  00025	0f 57 c0	 xorps	 xmm0, xmm0
  00028	f3 0f 11 45 f8	 movss	 DWORD PTR $T1[ebp+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 238  : 	m_v3Center = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  0002d	8b 7d ec	 mov	 edi, DWORD PTR _this$[ebp]
  00030	81 c7 7c 01 00
	00		 add	 edi, 380		; 0000017cH
  00036	8d 75 f0	 lea	 esi, DWORD PTR $T1[ebp]
  00039	a5		 movsd
  0003a	a5		 movsd
  0003b	a5		 movsd

; 239  : 	m_fRadius = 0.0f;

  0003c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	0f 57 c0	 xorps	 xmm0, xmm0
  00042	f3 0f 11 80 88
	01 00 00	 movss	 DWORD PTR [eax+392], xmm0

; 240  : 
; 241  : 	m_pThing = NULL;

  0004a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 a0 8c 01 00
	00 00		 and	 DWORD PTR [eax+396], 0

; 242  : }

  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00059	33 cd		 xor	 ecx, ebp
  0005b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00060	c9		 leave
  00061	c3		 ret	 0
?__Initialize@CDungeonBlock@@IAEXXZ ENDP		; CDungeonBlock::__Initialize
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.h
;	COMDAT ?OnRenderPCBlocker@CDungeonBlock@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnRenderPCBlocker@CDungeonBlock@@UAEXXZ PROC		; CDungeonBlock::OnRenderPCBlocker, COMDAT
; _this$ = ecx

; 44   : 		void OnRenderPCBlocker() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	c9		 leave
  00008	c3		 ret	 0
?OnRenderPCBlocker@CDungeonBlock@@UAEXXZ ENDP		; CDungeonBlock::OnRenderPCBlocker
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
;	COMDAT ?OnRenderShadow@CDungeonBlock@@UAEXXZ
_TEXT	SEGMENT
$T1 = -52						; size = 1
$T2 = -48						; size = 4
$T3 = -44						; size = 4
$T4 = -40						; size = 4
$T5 = -36						; size = 4
$T6 = -32						; size = 4
___param0$ = -28					; size = 4
$T7 = -24						; size = 4
___param0$ = -20					; size = 4
__My_data$8 = -16					; size = 4
_this$ = -12						; size = 4
__My_data$9 = -8					; size = 4
$T10 = -1						; size = 1
?OnRenderShadow@CDungeonBlock@@UAEXXZ PROC		; CDungeonBlock::OnRenderShadow, COMDAT
; _this$ = ecx

; 104  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	05 90 01 00 00	 add	 eax, 400		; 00000190H
  00011	89 45 f8	 mov	 DWORD PTR __My_data$9[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00014	8b 45 f8	 mov	 eax, DWORD PTR __My_data$9[ebp]
  00017	89 45 d4	 mov	 DWORD PTR $T3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  0001a	8b 45 f8	 mov	 eax, DWORD PTR __My_data$9[ebp]
  0001d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00020	89 45 ec	 mov	 DWORD PTR ___param0$[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00023	8b 45 ec	 mov	 eax, DWORD PTR ___param0$[ebp]
  00026	89 45 e8	 mov	 DWORD PTR $T7[ebp], eax

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  00029	8d 45 e8	 lea	 eax, DWORD PTR $T7[ebp]
  0002c	89 45 dc	 mov	 DWORD PTR $T5[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  0002f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00032	05 90 01 00 00	 add	 eax, 400		; 00000190H
  00037	89 45 f0	 mov	 DWORD PTR __My_data$8[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  0003a	8b 45 f0	 mov	 eax, DWORD PTR __My_data$8[ebp]
  0003d	89 45 d0	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00040	8b 45 f0	 mov	 eax, DWORD PTR __My_data$8[ebp]
  00043	8b 00		 mov	 eax, DWORD PTR [eax]
  00045	89 45 e4	 mov	 DWORD PTR ___param0$[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00048	8b 45 e4	 mov	 eax, DWORD PTR ___param0$[ebp]
  0004b	89 45 e0	 mov	 DWORD PTR $T6[ebp], eax

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  0004e	8d 45 e0	 lea	 eax, DWORD PTR $T6[ebp]
  00051	89 45 d8	 mov	 DWORD PTR $T4[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 105  : 	for_each(m_ModelInstanceContainer.begin(), m_ModelInstanceContainer.end(), FRenderShadow());

  00054	ff 75 cc	 push	 DWORD PTR $T1[ebp]
  00057	8b 45 dc	 mov	 eax, DWORD PTR $T5[ebp]
  0005a	ff 30		 push	 DWORD PTR [eax]
  0005c	8b 45 d8	 mov	 eax, DWORD PTR $T4[ebp]
  0005f	ff 30		 push	 DWORD PTR [eax]
  00061	e8 00 00 00 00	 call	 ??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@std@@UFRenderShadow@@@std@@YA?AUFRenderShadow@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@0@0U1@@Z ; std::for_each<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDungeonModelInstance *> > >,FRenderShadow>
  00066	83 c4 0c	 add	 esp, 12			; 0000000cH
  00069	88 45 ff	 mov	 BYTE PTR $T10[ebp], al

; 106  : }

  0006c	c9		 leave
  0006d	c3		 ret	 0
?OnRenderShadow@CDungeonBlock@@UAEXXZ ENDP		; CDungeonBlock::OnRenderShadow
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.h
;	COMDAT ?OnRenderToShadowMap@CDungeonBlock@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnRenderToShadowMap@CDungeonBlock@@UAEXXZ PROC		; CDungeonBlock::OnRenderToShadowMap, COMDAT
; _this$ = ecx

; 42   : 		void OnRenderToShadowMap() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	c9		 leave
  00008	c3		 ret	 0
?OnRenderToShadowMap@CDungeonBlock@@UAEXXZ ENDP		; CDungeonBlock::OnRenderToShadowMap
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.h
;	COMDAT ?OnBlendRender@CDungeonBlock@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnBlendRender@CDungeonBlock@@UAEXXZ PROC		; CDungeonBlock::OnBlendRender, COMDAT
; _this$ = ecx

; 41   : 		void OnBlendRender() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	c9		 leave
  00008	c3		 ret	 0
?OnBlendRender@CDungeonBlock@@UAEXXZ ENDP		; CDungeonBlock::OnBlendRender
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.h
;	COMDAT ?OnRender@CDungeonBlock@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnRender@CDungeonBlock@@UAEXXZ PROC			; CDungeonBlock::OnRender, COMDAT
; _this$ = ecx

; 40   : 		void OnRender() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	c9		 leave
  00008	c3		 ret	 0
?OnRender@CDungeonBlock@@UAEXXZ ENDP			; CDungeonBlock::OnRender
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
;	COMDAT ?OnGetObjectHeight@CDungeonBlock@@UAE_NMMPAM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fX$ = 8						; size = 4
_fY$ = 12						; size = 4
_pfHeight$ = 16						; size = 4
?OnGetObjectHeight@CDungeonBlock@@UAE_NMMPAM@Z PROC	; CDungeonBlock::OnGetObjectHeight, COMDAT
; _this$ = ecx

; 149  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 150  : 	if (m_pHeightAttributeInstance && m_pHeightAttributeInstance->GetHeight(fX, fY, pfHeight))

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 b8 78 01 00
	00 00		 cmp	 DWORD PTR [eax+376], 0
  00011	74 2f		 je	 SHORT $LN2@OnGetObjec
  00013	ff 75 10	 push	 DWORD PTR _pfHeight$[ebp]
  00016	51		 push	 ecx
  00017	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fY$[ebp]
  0001c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00021	51		 push	 ecx
  00022	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fX$[ebp]
  00027	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	8b 88 78 01 00
	00		 mov	 ecx, DWORD PTR [eax+376]
  00035	e8 00 00 00 00	 call	 ?GetHeight@CAttributeInstance@@QAEHMMPAM@Z ; CAttributeInstance::GetHeight
  0003a	85 c0		 test	 eax, eax
  0003c	74 04		 je	 SHORT $LN2@OnGetObjec

; 151  : 		return true;

  0003e	b0 01		 mov	 al, 1
  00040	eb 02		 jmp	 SHORT $LN1@OnGetObjec
$LN2@OnGetObjec:

; 152  : 	return false;

  00042	32 c0		 xor	 al, al
$LN1@OnGetObjec:

; 153  : }

  00044	c9		 leave
  00045	c2 0c 00	 ret	 12			; 0000000cH
?OnGetObjectHeight@CDungeonBlock@@UAE_NMMPAM@Z ENDP	; CDungeonBlock::OnGetObjectHeight
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
;	COMDAT ?OnUpdateHeighInstance@CDungeonBlock@@UAEXPAVCAttributeInstance@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pAttributeInstance$ = 8				; size = 4
?OnUpdateHeighInstance@CDungeonBlock@@UAEXPAVCAttributeInstance@@@Z PROC ; CDungeonBlock::OnUpdateHeighInstance, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 144  : 	assert(pAttributeInstance);
; 145  : 	SetHeightInstance(pAttributeInstance);	

  00007	ff 75 08	 push	 DWORD PTR _pAttributeInstance$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	e8 00 00 00 00	 call	 ?SetHeightInstance@CGraphicObjectInstance@@QAEXPAVCAttributeInstance@@@Z ; CGraphicObjectInstance::SetHeightInstance

; 146  : }

  00012	c9		 leave
  00013	c2 04 00	 ret	 4
?OnUpdateHeighInstance@CDungeonBlock@@UAEXPAVCAttributeInstance@@@Z ENDP ; CDungeonBlock::OnUpdateHeighInstance
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
;	COMDAT ?OnUpdateCollisionData@CDungeonBlock@@UAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z
_TEXT	SEGMENT
$T1 = -64						; size = 4
$T2 = -60						; size = 4
$T3 = -56						; size = 4
$T4 = -52						; size = 4
$T5 = -48						; size = 4
__Parg$ = -44						; size = 4
$T6 = -40						; size = 4
$T7 = -36						; size = 4
__Parg$ = -32						; size = 4
_this$ = -28						; size = 4
tv167 = -24						; size = 4
tv173 = -20						; size = 4
__My_data$8 = -16					; size = 4
__My_data$9 = -12					; size = 4
_it$ = -8						; size = 4
$T10 = -2						; size = 1
$T11 = -1						; size = 1
_pscdVector$ = 8					; size = 4
?OnUpdateCollisionData@CDungeonBlock@@UAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z PROC ; CDungeonBlock::OnUpdateCollisionData, COMDAT
; _this$ = ecx

; 133  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 40   :     _Vector_const_iterator() noexcept : _Ptr() {}

  00009	83 65 f8 00	 and	 DWORD PTR _it$[ebp], 0

; 1415 :         auto& _My_data = _Mypair._Myval2;

  0000d	8b 45 08	 mov	 eax, DWORD PTR _pscdVector$[ebp]
  00010	89 45 f4	 mov	 DWORD PTR __My_data$9[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00013	8b 45 f4	 mov	 eax, DWORD PTR __My_data$9[ebp]
  00016	89 45 c4	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1416 :         return const_iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00019	8b 45 f4	 mov	 eax, DWORD PTR __My_data$9[ebp]
  0001c	8b 00		 mov	 eax, DWORD PTR [eax]
  0001e	89 45 e0	 mov	 DWORD PTR __Parg$[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00021	8b 45 e0	 mov	 eax, DWORD PTR __Parg$[ebp]
  00024	89 45 dc	 mov	 DWORD PTR $T7[ebp], eax

; 1416 :         return const_iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00027	8d 45 dc	 lea	 eax, DWORD PTR $T7[ebp]
  0002a	89 45 d8	 mov	 DWORD PTR $T6[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 136  : 	for(it = pscdVector->begin();it!=pscdVector->end();++it)

  0002d	8b 45 d8	 mov	 eax, DWORD PTR $T6[ebp]
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	89 45 f8	 mov	 DWORD PTR _it$[ebp], eax
  00035	eb 09		 jmp	 SHORT $LN4@OnUpdateCo
$LN2@OnUpdateCo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 75   :         ++_Ptr;

  00037	8b 45 f8	 mov	 eax, DWORD PTR _it$[ebp]
  0003a	83 c0 50	 add	 eax, 80			; 00000050H
  0003d	89 45 f8	 mov	 DWORD PTR _it$[ebp], eax
$LN4@OnUpdateCo:

; 1425 :         auto& _My_data = _Mypair._Myval2;

  00040	8b 45 08	 mov	 eax, DWORD PTR _pscdVector$[ebp]
  00043	89 45 f0	 mov	 DWORD PTR __My_data$8[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00046	8b 45 f0	 mov	 eax, DWORD PTR __My_data$8[ebp]
  00049	89 45 c0	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1426 :         return const_iterator(_My_data._Mylast, _STD addressof(_My_data));

  0004c	8b 45 f0	 mov	 eax, DWORD PTR __My_data$8[ebp]
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	89 45 d4	 mov	 DWORD PTR __Parg$[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00055	8b 45 d4	 mov	 eax, DWORD PTR __Parg$[ebp]
  00058	89 45 d0	 mov	 DWORD PTR $T5[ebp], eax

; 1426 :         return const_iterator(_My_data._Mylast, _STD addressof(_My_data));

  0005b	8d 45 d0	 lea	 eax, DWORD PTR $T5[ebp]
  0005e	89 45 cc	 mov	 DWORD PTR $T4[ebp], eax

; 149  :         return _Ptr == _Right._Ptr;

  00061	8b 45 cc	 mov	 eax, DWORD PTR $T4[ebp]
  00064	8b 4d f8	 mov	 ecx, DWORD PTR _it$[ebp]
  00067	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00069	75 09		 jne	 SHORT $LN43@OnUpdateCo
  0006b	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR tv173[ebp], 1
  00072	eb 04		 jmp	 SHORT $LN44@OnUpdateCo
$LN43@OnUpdateCo:
  00074	83 65 ec 00	 and	 DWORD PTR tv173[ebp], 0
$LN44@OnUpdateCo:
  00078	8a 45 ec	 mov	 al, BYTE PTR tv173[ebp]
  0007b	88 45 ff	 mov	 BYTE PTR $T11[ebp], al

; 153  :         return !(*this == _Right);

  0007e	0f b6 45 ff	 movzx	 eax, BYTE PTR $T11[ebp]
  00082	85 c0		 test	 eax, eax
  00084	75 09		 jne	 SHORT $LN38@OnUpdateCo
  00086	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR tv167[ebp], 1
  0008d	eb 04		 jmp	 SHORT $LN39@OnUpdateCo
$LN38@OnUpdateCo:
  0008f	83 65 e8 00	 and	 DWORD PTR tv167[ebp], 0
$LN39@OnUpdateCo:
  00093	8a 45 e8	 mov	 al, BYTE PTR tv167[ebp]
  00096	88 45 fe	 mov	 BYTE PTR $T10[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 136  : 	for(it = pscdVector->begin();it!=pscdVector->end();++it)

  00099	0f b6 45 fe	 movzx	 eax, BYTE PTR $T10[ebp]
  0009d	85 c0		 test	 eax, eax
  0009f	74 1f		 je	 SHORT $LN1@OnUpdateCo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 54   :         return *_Ptr;

  000a1	8b 45 f8	 mov	 eax, DWORD PTR _it$[ebp]
  000a4	89 45 c8	 mov	 DWORD PTR $T3[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 138  : 		AddCollision(&(*it),&GetTransform());

  000a7	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  000aa	e8 00 00 00 00	 call	 ?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ ; CGraphicObjectInstance::GetTransform
  000af	50		 push	 eax
  000b0	ff 75 c8	 push	 DWORD PTR $T3[ebp]
  000b3	8b 4d e4	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	e8 00 00 00 00	 call	 ?AddCollision@CGraphicObjectInstance@@QAEXPBVCStaticCollisionData@@PBUD3DXMATRIX@@@Z ; CGraphicObjectInstance::AddCollision

; 139  : 	}

  000bb	e9 77 ff ff ff	 jmp	 $LN2@OnUpdateCo
$LN1@OnUpdateCo:

; 140  : }

  000c0	c9		 leave
  000c1	c2 04 00	 ret	 4
?OnUpdateCollisionData@CDungeonBlock@@UAEXPBV?$vector@VCStaticCollisionData@@V?$allocator@VCStaticCollisionData@@@std@@@std@@@Z ENDP ; CDungeonBlock::OnUpdateCollisionData
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
;	COMDAT ?GetBoundingSphere@CDungeonBlock@@UAE_NAAUD3DXVECTOR3@@AAM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v3Center$ = 8						; size = 4
_fRadius$ = 12						; size = 4
?GetBoundingSphere@CDungeonBlock@@UAE_NAAUD3DXVECTOR3@@AAM@Z PROC ; CDungeonBlock::GetBoundingSphere, COMDAT
; _this$ = ecx

; 125  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 126  : 	v3Center = m_v3Center;

  00009	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  0000c	81 c6 7c 01 00
	00		 add	 esi, 380		; 0000017cH
  00012	8b 7d 08	 mov	 edi, DWORD PTR _v3Center$[ebp]
  00015	a5		 movsd
  00016	a5		 movsd
  00017	a5		 movsd

; 127  : 	fRadius = m_fRadius;

  00018	8b 45 0c	 mov	 eax, DWORD PTR _fRadius$[ebp]
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	8b 89 88 01 00
	00		 mov	 ecx, DWORD PTR [ecx+392]
  00024	89 08		 mov	 DWORD PTR [eax], ecx

; 128  : 	D3DXVec3TransformCoord(&v3Center, &v3Center, &GetTransform());

  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ ; CGraphicObjectInstance::GetTransform
  0002e	50		 push	 eax
  0002f	ff 75 08	 push	 DWORD PTR _v3Center$[ebp]
  00032	ff 75 08	 push	 DWORD PTR _v3Center$[ebp]
  00035	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12

; 129  : 	return true;

  0003a	b0 01		 mov	 al, 1

; 130  : }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	c9		 leave
  0003f	c2 08 00	 ret	 8
?GetBoundingSphere@CDungeonBlock@@UAE_NAAUD3DXVECTOR3@@AAM@Z ENDP ; CDungeonBlock::GetBoundingSphere
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
;	COMDAT ?Render@CDungeonBlock@@QAEXXZ
_TEXT	SEGMENT
$T1 = -52						; size = 1
$T2 = -48						; size = 4
$T3 = -44						; size = 4
$T4 = -40						; size = 4
$T5 = -36						; size = 4
$T6 = -32						; size = 4
___param0$ = -28					; size = 4
$T7 = -24						; size = 4
___param0$ = -20					; size = 4
__My_data$8 = -16					; size = 4
_this$ = -12						; size = 4
__My_data$9 = -8					; size = 4
$T10 = -1						; size = 1
?Render@CDungeonBlock@@QAEXXZ PROC			; CDungeonBlock::Render, COMDAT
; _this$ = ecx

; 88   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	05 90 01 00 00	 add	 eax, 400		; 00000190H
  00011	89 45 f8	 mov	 DWORD PTR __My_data$9[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00014	8b 45 f8	 mov	 eax, DWORD PTR __My_data$9[ebp]
  00017	89 45 d4	 mov	 DWORD PTR $T3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  0001a	8b 45 f8	 mov	 eax, DWORD PTR __My_data$9[ebp]
  0001d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00020	89 45 ec	 mov	 DWORD PTR ___param0$[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00023	8b 45 ec	 mov	 eax, DWORD PTR ___param0$[ebp]
  00026	89 45 e8	 mov	 DWORD PTR $T7[ebp], eax

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  00029	8d 45 e8	 lea	 eax, DWORD PTR $T7[ebp]
  0002c	89 45 dc	 mov	 DWORD PTR $T5[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  0002f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00032	05 90 01 00 00	 add	 eax, 400		; 00000190H
  00037	89 45 f0	 mov	 DWORD PTR __My_data$8[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  0003a	8b 45 f0	 mov	 eax, DWORD PTR __My_data$8[ebp]
  0003d	89 45 d0	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00040	8b 45 f0	 mov	 eax, DWORD PTR __My_data$8[ebp]
  00043	8b 00		 mov	 eax, DWORD PTR [eax]
  00045	89 45 e4	 mov	 DWORD PTR ___param0$[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00048	8b 45 e4	 mov	 eax, DWORD PTR ___param0$[ebp]
  0004b	89 45 e0	 mov	 DWORD PTR $T6[ebp], eax

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  0004e	8d 45 e0	 lea	 eax, DWORD PTR $T6[ebp]
  00051	89 45 d8	 mov	 DWORD PTR $T4[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 92   : 	for_each(m_ModelInstanceContainer.begin(), m_ModelInstanceContainer.end(), FRender());

  00054	ff 75 cc	 push	 DWORD PTR $T1[ebp]
  00057	8b 45 dc	 mov	 eax, DWORD PTR $T5[ebp]
  0005a	ff 30		 push	 DWORD PTR [eax]
  0005c	8b 45 d8	 mov	 eax, DWORD PTR $T4[ebp]
  0005f	ff 30		 push	 DWORD PTR [eax]
  00061	e8 00 00 00 00	 call	 ??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@std@@UFRender@@@std@@YA?AUFRender@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@0@0U1@@Z ; std::for_each<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDungeonModelInstance *> > >,FRender>
  00066	83 c4 0c	 add	 esp, 12			; 0000000cH
  00069	88 45 ff	 mov	 BYTE PTR $T10[ebp], al

; 93   : }

  0006c	c9		 leave
  0006d	c3		 ret	 0
?Render@CDungeonBlock@@QAEXXZ ENDP			; CDungeonBlock::Render
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
;	COMDAT ?Update@CDungeonBlock@@QAEXXZ
_TEXT	SEGMENT
$T1 = -108						; size = 8
_Update$ = -100						; size = 8
__Func$ = -92						; size = 8
$T2 = -84						; size = 4
$T3 = -80						; size = 4
__ULast$4 = -76						; size = 4
$T5 = -72						; size = 4
$T6 = -68						; size = 4
__Ptr$7 = -64						; size = 4
__Last$ = -60						; size = 4
$T8 = -56						; size = 4
$T9 = -52						; size = 4
__Ptr$10 = -48						; size = 4
__First$ = -44						; size = 4
$T11 = -40						; size = 4
$T12 = -36						; size = 4
$T13 = -32						; size = 4
___param0$ = -28					; size = 4
$T14 = -24						; size = 4
___param0$ = -20					; size = 4
__My_data$15 = -16					; size = 4
__My_data$16 = -12					; size = 4
__UFirst$17 = -8					; size = 4
_this$ = -4						; size = 4
?Update@CDungeonBlock@@QAEXXZ PROC			; CDungeonBlock::Update, COMDAT
; _this$ = ecx

; 70   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 71   : 	Transform();

  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?Transform@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Transform

; 72   : 
; 73   : 	FUpdate Update;
; 74   : 	Update.fElapsedTime = 0.0f;

  00011	0f 57 c0	 xorps	 xmm0, xmm0
  00014	f3 0f 11 45 9c	 movss	 DWORD PTR _Update$[ebp], xmm0

; 75   : 	Update.pmatWorld = &m_worldMatrix;

  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	83 c0 6c	 add	 eax, 108		; 0000006cH
  0001f	89 45 a0	 mov	 DWORD PTR _Update$[ebp+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	05 90 01 00 00	 add	 eax, 400		; 00000190H
  0002a	89 45 f4	 mov	 DWORD PTR __My_data$16[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  0002d	8b 45 f4	 mov	 eax, DWORD PTR __My_data$16[ebp]
  00030	89 45 b0	 mov	 DWORD PTR $T3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  00033	8b 45 f4	 mov	 eax, DWORD PTR __My_data$16[ebp]
  00036	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00039	89 45 ec	 mov	 DWORD PTR ___param0$[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0003c	8b 45 ec	 mov	 eax, DWORD PTR ___param0$[ebp]
  0003f	89 45 e8	 mov	 DWORD PTR $T14[ebp], eax

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  00042	8d 45 e8	 lea	 eax, DWORD PTR $T14[ebp]
  00045	89 45 dc	 mov	 DWORD PTR $T12[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	05 90 01 00 00	 add	 eax, 400		; 00000190H
  00050	89 45 f0	 mov	 DWORD PTR __My_data$15[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00053	8b 45 f0	 mov	 eax, DWORD PTR __My_data$15[ebp]
  00056	89 45 ac	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00059	8b 45 f0	 mov	 eax, DWORD PTR __My_data$15[ebp]
  0005c	8b 00		 mov	 eax, DWORD PTR [eax]
  0005e	89 45 e4	 mov	 DWORD PTR ___param0$[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00061	8b 45 e4	 mov	 eax, DWORD PTR ___param0$[ebp]
  00064	89 45 e0	 mov	 DWORD PTR $T13[ebp], eax

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00067	8d 45 e0	 lea	 eax, DWORD PTR $T13[ebp]
  0006a	89 45 d8	 mov	 DWORD PTR $T11[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 76   : 	for_each(m_ModelInstanceContainer.begin(), m_ModelInstanceContainer.end(), Update);

  0006d	8b 45 9c	 mov	 eax, DWORD PTR _Update$[ebp]
  00070	8b 4d a0	 mov	 ecx, DWORD PTR _Update$[ebp+4]
  00073	89 45 a4	 mov	 DWORD PTR __Func$[ebp], eax
  00076	89 4d a8	 mov	 DWORD PTR __Func$[ebp+4], ecx
  00079	8b 45 dc	 mov	 eax, DWORD PTR $T12[ebp]
  0007c	8b 00		 mov	 eax, DWORD PTR [eax]
  0007e	89 45 c4	 mov	 DWORD PTR __Last$[ebp], eax
  00081	8b 45 d8	 mov	 eax, DWORD PTR $T11[ebp]
  00084	8b 00		 mov	 eax, DWORD PTR [eax]
  00086	89 45 d4	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  00089	8b 45 d4	 mov	 eax, DWORD PTR __First$[ebp]
  0008c	89 45 d0	 mov	 DWORD PTR __Ptr$10[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  0008f	8b 45 d0	 mov	 eax, DWORD PTR __Ptr$10[ebp]
  00092	89 45 cc	 mov	 DWORD PTR $T9[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  00095	8b 45 cc	 mov	 eax, DWORD PTR $T9[ebp]
  00098	89 45 c8	 mov	 DWORD PTR $T8[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 305  :     auto _UFirst      = _Get_unwrapped(_First);

  0009b	8b 45 c8	 mov	 eax, DWORD PTR $T8[ebp]
  0009e	89 45 f8	 mov	 DWORD PTR __UFirst$17[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  000a1	8b 45 c4	 mov	 eax, DWORD PTR __Last$[ebp]
  000a4	89 45 c0	 mov	 DWORD PTR __Ptr$7[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  000a7	8b 45 c0	 mov	 eax, DWORD PTR __Ptr$7[ebp]
  000aa	89 45 bc	 mov	 DWORD PTR $T6[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  000ad	8b 45 bc	 mov	 eax, DWORD PTR $T6[ebp]
  000b0	89 45 b8	 mov	 DWORD PTR $T5[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 306  :     const auto _ULast = _Get_unwrapped(_Last);

  000b3	8b 45 b8	 mov	 eax, DWORD PTR $T5[ebp]
  000b6	89 45 b4	 mov	 DWORD PTR __ULast$4[ebp], eax

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  000b9	eb 09		 jmp	 SHORT $LN36@Update
$LN34@Update:
  000bb	8b 45 f8	 mov	 eax, DWORD PTR __UFirst$17[ebp]
  000be	83 c0 04	 add	 eax, 4
  000c1	89 45 f8	 mov	 DWORD PTR __UFirst$17[ebp], eax
$LN36@Update:
  000c4	8b 45 f8	 mov	 eax, DWORD PTR __UFirst$17[ebp]
  000c7	3b 45 b4	 cmp	 eax, DWORD PTR __ULast$4[ebp]
  000ca	74 0f		 je	 SHORT $LN35@Update

; 308  :         _Func(*_UFirst);

  000cc	8b 45 f8	 mov	 eax, DWORD PTR __UFirst$17[ebp]
  000cf	ff 30		 push	 DWORD PTR [eax]
  000d1	8d 4d a4	 lea	 ecx, DWORD PTR __Func$[ebp]
  000d4	e8 00 00 00 00	 call	 ??RFUpdate@@QAEXPAVCGrannyModelInstance@@@Z ; FUpdate::operator()

; 309  :     }

  000d9	eb e0		 jmp	 SHORT $LN34@Update
$LN35@Update:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 76   : 	for_each(m_ModelInstanceContainer.begin(), m_ModelInstanceContainer.end(), Update);

  000db	8b 45 a4	 mov	 eax, DWORD PTR __Func$[ebp]
  000de	8b 4d a8	 mov	 ecx, DWORD PTR __Func$[ebp+4]
  000e1	89 45 94	 mov	 DWORD PTR $T1[ebp], eax
  000e4	89 4d 98	 mov	 DWORD PTR $T1[ebp+4], ecx

; 77   : }

  000e7	c9		 leave
  000e8	c3		 ret	 0
?Update@CDungeonBlock@@QAEXXZ ENDP			; CDungeonBlock::Update
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
;	COMDAT ?GetBoundBox@CDungeonBlock@@QAEXPAUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT
$T1 = -116						; size = 4
$T2 = -112						; size = 4
_pInstance$3 = -108					; size = 4
$T4 = -104						; size = 4
$T5 = -100						; size = 4
$T6 = -96						; size = 4
$T7 = -92						; size = 4
___param0$ = -88					; size = 4
___param0$ = -84					; size = 4
tv319 = -80						; size = 4
tv292 = -76						; size = 4
tv265 = -72						; size = 4
tv238 = -68						; size = 4
tv211 = -64						; size = 4
tv184 = -60						; size = 4
tv362 = -56						; size = 4
tv376 = -52						; size = 4
__My_data$8 = -48					; size = 4
_this$ = -44						; size = 4
__My_data$9 = -40					; size = 4
_itor$ = -36						; size = 4
$T10 = -30						; size = 1
$T11 = -29						; size = 1
_v3Max$12 = -28						; size = 12
_v3Min$13 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_pv3Min$ = 8						; size = 4
_pv3Max$ = 12						; size = 4
?GetBoundBox@CDungeonBlock@@QAEXPAUD3DXVECTOR3@@0@Z PROC ; CDungeonBlock::GetBoundBox, COMDAT
; _this$ = ecx

; 178  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	89 4d d4	 mov	 DWORD PTR _this$[ebp], ecx

; 179  : 	pv3Min->x = +10000000.0f;

  00013	8b 45 08	 mov	 eax, DWORD PTR _pv3Min$[ebp]
  00016	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4b189680
  0001e	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 180  : 	pv3Min->y = +10000000.0f;

  00022	8b 45 08	 mov	 eax, DWORD PTR _pv3Min$[ebp]
  00025	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4b189680
  0002d	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 181  : 	pv3Min->z = +10000000.0f;

  00032	8b 45 08	 mov	 eax, DWORD PTR _pv3Min$[ebp]
  00035	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4b189680
  0003d	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 182  : 	pv3Max->x = -10000000.0f;

  00042	8b 45 0c	 mov	 eax, DWORD PTR _pv3Max$[ebp]
  00045	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@cb189680
  0004d	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 183  : 	pv3Max->y = -10000000.0f;

  00051	8b 45 0c	 mov	 eax, DWORD PTR _pv3Max$[ebp]
  00054	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@cb189680
  0005c	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 184  : 	pv3Max->z = -10000000.0f;

  00061	8b 45 0c	 mov	 eax, DWORD PTR _pv3Max$[ebp]
  00064	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@cb189680
  0006c	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1410 :         auto& _My_data = _Mypair._Myval2;

  00071	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  00074	05 90 01 00 00	 add	 eax, 400		; 00000190H
  00079	89 45 d8	 mov	 DWORD PTR __My_data$9[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  0007c	8b 45 d8	 mov	 eax, DWORD PTR __My_data$9[ebp]
  0007f	89 45 90	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00082	8b 45 d8	 mov	 eax, DWORD PTR __My_data$9[ebp]
  00085	8b 00		 mov	 eax, DWORD PTR [eax]
  00087	89 45 ac	 mov	 DWORD PTR ___param0$[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0008a	8b 45 ac	 mov	 eax, DWORD PTR ___param0$[ebp]
  0008d	89 45 dc	 mov	 DWORD PTR _itor$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 187  : 	for (; itor != m_ModelInstanceContainer.end(); ++itor)

  00090	eb 09		 jmp	 SHORT $LN33@GetBoundBo
$LN2@GetBoundBo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 75   :         ++_Ptr;

  00092	8b 45 dc	 mov	 eax, DWORD PTR _itor$[ebp]
  00095	83 c0 04	 add	 eax, 4
  00098	89 45 dc	 mov	 DWORD PTR _itor$[ebp], eax
$LN33@GetBoundBo:

; 1420 :         auto& _My_data = _Mypair._Myval2;

  0009b	8b 45 d4	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	05 90 01 00 00	 add	 eax, 400		; 00000190H
  000a3	89 45 d0	 mov	 DWORD PTR __My_data$8[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  000a6	8b 45 d0	 mov	 eax, DWORD PTR __My_data$8[ebp]
  000a9	89 45 8c	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  000ac	8b 45 d0	 mov	 eax, DWORD PTR __My_data$8[ebp]
  000af	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000b2	89 45 a8	 mov	 DWORD PTR ___param0$[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  000b5	8b 45 a8	 mov	 eax, DWORD PTR ___param0$[ebp]
  000b8	89 45 a4	 mov	 DWORD PTR $T7[ebp], eax

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  000bb	8d 45 a4	 lea	 eax, DWORD PTR $T7[ebp]
  000be	89 45 a0	 mov	 DWORD PTR $T6[ebp], eax

; 149  :         return _Ptr == _Right._Ptr;

  000c1	8b 45 a0	 mov	 eax, DWORD PTR $T6[ebp]
  000c4	8b 4d dc	 mov	 ecx, DWORD PTR _itor$[ebp]
  000c7	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000c9	75 09		 jne	 SHORT $LN61@GetBoundBo
  000cb	c7 45 cc 01 00
	00 00		 mov	 DWORD PTR tv376[ebp], 1
  000d2	eb 04		 jmp	 SHORT $LN62@GetBoundBo
$LN61@GetBoundBo:
  000d4	83 65 cc 00	 and	 DWORD PTR tv376[ebp], 0
$LN62@GetBoundBo:
  000d8	8a 45 cc	 mov	 al, BYTE PTR tv376[ebp]
  000db	88 45 e3	 mov	 BYTE PTR $T11[ebp], al

; 153  :         return !(*this == _Right);

  000de	0f b6 45 e3	 movzx	 eax, BYTE PTR $T11[ebp]
  000e2	85 c0		 test	 eax, eax
  000e4	75 09		 jne	 SHORT $LN56@GetBoundBo
  000e6	c7 45 c8 01 00
	00 00		 mov	 DWORD PTR tv362[ebp], 1
  000ed	eb 04		 jmp	 SHORT $LN57@GetBoundBo
$LN56@GetBoundBo:
  000ef	83 65 c8 00	 and	 DWORD PTR tv362[ebp], 0
$LN57@GetBoundBo:
  000f3	8a 45 c8	 mov	 al, BYTE PTR tv362[ebp]
  000f6	88 45 e2	 mov	 BYTE PTR $T10[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 187  : 	for (; itor != m_ModelInstanceContainer.end(); ++itor)

  000f9	0f b6 45 e2	 movzx	 eax, BYTE PTR $T10[ebp]
  000fd	85 c0		 test	 eax, eax
  000ff	0f 84 5b 01 00
	00		 je	 $LN3@GetBoundBo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 54   :         return *_Ptr;

  00105	8b 45 dc	 mov	 eax, DWORD PTR _itor$[ebp]
  00108	89 45 9c	 mov	 DWORD PTR $T5[ebp], eax

; 252  :         return const_cast<reference>(_Mybase::operator*());

  0010b	8b 45 9c	 mov	 eax, DWORD PTR $T5[ebp]
  0010e	89 45 98	 mov	 DWORD PTR $T4[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 189  : 		CDungeonModelInstance * pInstance = *itor;

  00111	8b 45 98	 mov	 eax, DWORD PTR $T4[ebp]
  00114	8b 00		 mov	 eax, DWORD PTR [eax]
  00116	89 45 94	 mov	 DWORD PTR _pInstance$3[ebp], eax

; 190  : 
; 191  : 		D3DXVECTOR3 v3Min;
; 192  : 		D3DXVECTOR3 v3Max;
; 193  : 		pInstance->GetBoundBox(&v3Min, &v3Max);

  00119	8d 45 e4	 lea	 eax, DWORD PTR _v3Max$12[ebp]
  0011c	50		 push	 eax
  0011d	8d 45 f0	 lea	 eax, DWORD PTR _v3Min$13[ebp]
  00120	50		 push	 eax
  00121	8b 4d 94	 mov	 ecx, DWORD PTR _pInstance$3[ebp]
  00124	e8 00 00 00 00	 call	 ?GetBoundBox@CGrannyModelInstance@@QAEXPAUD3DXVECTOR3@@0@Z ; CGrannyModelInstance::GetBoundBox

; 194  : 
; 195  : 		pv3Min->x = min(v3Min.x, pv3Min->x);

  00129	8b 45 08	 mov	 eax, DWORD PTR _pv3Min$[ebp]
  0012c	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00130	0f 2f 45 f0	 comiss	 xmm0, DWORD PTR _v3Min$13[ebp]
  00134	76 0c		 jbe	 SHORT $LN6@GetBoundBo
  00136	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _v3Min$13[ebp]
  0013b	f3 0f 11 45 c4	 movss	 DWORD PTR tv184[ebp], xmm0
  00140	eb 0c		 jmp	 SHORT $LN7@GetBoundBo
$LN6@GetBoundBo:
  00142	8b 45 08	 mov	 eax, DWORD PTR _pv3Min$[ebp]
  00145	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00149	f3 0f 11 45 c4	 movss	 DWORD PTR tv184[ebp], xmm0
$LN7@GetBoundBo:
  0014e	8b 45 08	 mov	 eax, DWORD PTR _pv3Min$[ebp]
  00151	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR tv184[ebp]
  00156	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 196  : 		pv3Min->y = min(v3Min.x, pv3Min->y);

  0015a	8b 45 08	 mov	 eax, DWORD PTR _pv3Min$[ebp]
  0015d	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00162	0f 2f 45 f0	 comiss	 xmm0, DWORD PTR _v3Min$13[ebp]
  00166	76 0c		 jbe	 SHORT $LN8@GetBoundBo
  00168	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _v3Min$13[ebp]
  0016d	f3 0f 11 45 c0	 movss	 DWORD PTR tv211[ebp], xmm0
  00172	eb 0d		 jmp	 SHORT $LN9@GetBoundBo
$LN8@GetBoundBo:
  00174	8b 45 08	 mov	 eax, DWORD PTR _pv3Min$[ebp]
  00177	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0017c	f3 0f 11 45 c0	 movss	 DWORD PTR tv211[ebp], xmm0
$LN9@GetBoundBo:
  00181	8b 45 08	 mov	 eax, DWORD PTR _pv3Min$[ebp]
  00184	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR tv211[ebp]
  00189	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 197  : 		pv3Min->z = min(v3Min.x, pv3Min->z);

  0018e	8b 45 08	 mov	 eax, DWORD PTR _pv3Min$[ebp]
  00191	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00196	0f 2f 45 f0	 comiss	 xmm0, DWORD PTR _v3Min$13[ebp]
  0019a	76 0c		 jbe	 SHORT $LN10@GetBoundBo
  0019c	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _v3Min$13[ebp]
  001a1	f3 0f 11 45 bc	 movss	 DWORD PTR tv238[ebp], xmm0
  001a6	eb 0d		 jmp	 SHORT $LN11@GetBoundBo
$LN10@GetBoundBo:
  001a8	8b 45 08	 mov	 eax, DWORD PTR _pv3Min$[ebp]
  001ab	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  001b0	f3 0f 11 45 bc	 movss	 DWORD PTR tv238[ebp], xmm0
$LN11@GetBoundBo:
  001b5	8b 45 08	 mov	 eax, DWORD PTR _pv3Min$[ebp]
  001b8	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR tv238[ebp]
  001bd	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 198  : 		pv3Max->x = max(v3Max.x, pv3Max->x);

  001c2	8b 45 0c	 mov	 eax, DWORD PTR _pv3Max$[ebp]
  001c5	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _v3Max$12[ebp]
  001ca	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  001cd	76 0c		 jbe	 SHORT $LN12@GetBoundBo
  001cf	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _v3Max$12[ebp]
  001d4	f3 0f 11 45 b8	 movss	 DWORD PTR tv265[ebp], xmm0
  001d9	eb 0c		 jmp	 SHORT $LN13@GetBoundBo
$LN12@GetBoundBo:
  001db	8b 45 0c	 mov	 eax, DWORD PTR _pv3Max$[ebp]
  001de	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  001e2	f3 0f 11 45 b8	 movss	 DWORD PTR tv265[ebp], xmm0
$LN13@GetBoundBo:
  001e7	8b 45 0c	 mov	 eax, DWORD PTR _pv3Max$[ebp]
  001ea	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR tv265[ebp]
  001ef	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 199  : 		pv3Max->y = max(v3Max.x, pv3Max->y);

  001f3	8b 45 0c	 mov	 eax, DWORD PTR _pv3Max$[ebp]
  001f6	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _v3Max$12[ebp]
  001fb	0f 2f 40 04	 comiss	 xmm0, DWORD PTR [eax+4]
  001ff	76 0c		 jbe	 SHORT $LN14@GetBoundBo
  00201	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _v3Max$12[ebp]
  00206	f3 0f 11 45 b4	 movss	 DWORD PTR tv292[ebp], xmm0
  0020b	eb 0d		 jmp	 SHORT $LN15@GetBoundBo
$LN14@GetBoundBo:
  0020d	8b 45 0c	 mov	 eax, DWORD PTR _pv3Max$[ebp]
  00210	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00215	f3 0f 11 45 b4	 movss	 DWORD PTR tv292[ebp], xmm0
$LN15@GetBoundBo:
  0021a	8b 45 0c	 mov	 eax, DWORD PTR _pv3Max$[ebp]
  0021d	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR tv292[ebp]
  00222	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 200  : 		pv3Max->z = max(v3Max.x, pv3Max->z);

  00227	8b 45 0c	 mov	 eax, DWORD PTR _pv3Max$[ebp]
  0022a	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _v3Max$12[ebp]
  0022f	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  00233	76 0c		 jbe	 SHORT $LN16@GetBoundBo
  00235	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _v3Max$12[ebp]
  0023a	f3 0f 11 45 b0	 movss	 DWORD PTR tv319[ebp], xmm0
  0023f	eb 0d		 jmp	 SHORT $LN17@GetBoundBo
$LN16@GetBoundBo:
  00241	8b 45 0c	 mov	 eax, DWORD PTR _pv3Max$[ebp]
  00244	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00249	f3 0f 11 45 b0	 movss	 DWORD PTR tv319[ebp], xmm0
$LN17@GetBoundBo:
  0024e	8b 45 0c	 mov	 eax, DWORD PTR _pv3Max$[ebp]
  00251	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv319[ebp]
  00256	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 201  : 	}

  0025b	e9 32 fe ff ff	 jmp	 $LN2@GetBoundBo
$LN3@GetBoundBo:

; 202  : }

  00260	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00263	33 cd		 xor	 ecx, ebp
  00265	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0026a	c9		 leave
  0026b	c2 08 00	 ret	 8
?GetBoundBox@CDungeonBlock@@QAEXPAUD3DXVECTOR3@@0@Z ENDP ; CDungeonBlock::GetBoundBox
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
;	COMDAT ?Intersect@CDungeonBlock@@QAE_NPAM00@Z
_TEXT	SEGMENT
$T1 = -64						; size = 4
$T2 = -60						; size = 4
_pInstance$3 = -56					; size = 4
$T4 = -52						; size = 4
$T5 = -48						; size = 4
$T6 = -44						; size = 4
$T7 = -40						; size = 4
___param0$ = -36					; size = 4
___param0$ = -32					; size = 4
tv179 = -28						; size = 4
tv193 = -24						; size = 4
__My_data$8 = -20					; size = 4
__My_data$9 = -16					; size = 4
_this$ = -12						; size = 4
_itor$ = -8						; size = 4
$T10 = -2						; size = 1
$T11 = -1						; size = 1
_pfu$ = 8						; size = 4
_pfv$ = 12						; size = 4
_pft$ = 16						; size = 4
?Intersect@CDungeonBlock@@QAE_NPAM00@Z PROC		; CDungeonBlock::Intersect, COMDAT
; _this$ = ecx

; 165  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1410 :         auto& _My_data = _Mypair._Myval2;

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	05 90 01 00 00	 add	 eax, 400		; 00000190H
  00011	89 45 f0	 mov	 DWORD PTR __My_data$9[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00014	8b 45 f0	 mov	 eax, DWORD PTR __My_data$9[ebp]
  00017	89 45 c4	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  0001a	8b 45 f0	 mov	 eax, DWORD PTR __My_data$9[ebp]
  0001d	8b 00		 mov	 eax, DWORD PTR [eax]
  0001f	89 45 e0	 mov	 DWORD PTR ___param0$[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00022	8b 45 e0	 mov	 eax, DWORD PTR ___param0$[ebp]
  00025	89 45 f8	 mov	 DWORD PTR _itor$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 167  : 	for (; itor != m_ModelInstanceContainer.end(); ++itor)

  00028	eb 09		 jmp	 SHORT $LN4@Intersect
$LN2@Intersect:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 75   :         ++_Ptr;

  0002a	8b 45 f8	 mov	 eax, DWORD PTR _itor$[ebp]
  0002d	83 c0 04	 add	 eax, 4
  00030	89 45 f8	 mov	 DWORD PTR _itor$[ebp], eax
$LN4@Intersect:

; 1420 :         auto& _My_data = _Mypair._Myval2;

  00033	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00036	05 90 01 00 00	 add	 eax, 400		; 00000190H
  0003b	89 45 ec	 mov	 DWORD PTR __My_data$8[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  0003e	8b 45 ec	 mov	 eax, DWORD PTR __My_data$8[ebp]
  00041	89 45 c0	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  00044	8b 45 ec	 mov	 eax, DWORD PTR __My_data$8[ebp]
  00047	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004a	89 45 dc	 mov	 DWORD PTR ___param0$[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0004d	8b 45 dc	 mov	 eax, DWORD PTR ___param0$[ebp]
  00050	89 45 d8	 mov	 DWORD PTR $T7[ebp], eax

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  00053	8d 45 d8	 lea	 eax, DWORD PTR $T7[ebp]
  00056	89 45 d4	 mov	 DWORD PTR $T6[ebp], eax

; 149  :         return _Ptr == _Right._Ptr;

  00059	8b 45 d4	 mov	 eax, DWORD PTR $T6[ebp]
  0005c	8b 4d f8	 mov	 ecx, DWORD PTR _itor$[ebp]
  0005f	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00061	75 09		 jne	 SHORT $LN50@Intersect
  00063	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR tv193[ebp], 1
  0006a	eb 04		 jmp	 SHORT $LN51@Intersect
$LN50@Intersect:
  0006c	83 65 e8 00	 and	 DWORD PTR tv193[ebp], 0
$LN51@Intersect:
  00070	8a 45 e8	 mov	 al, BYTE PTR tv193[ebp]
  00073	88 45 ff	 mov	 BYTE PTR $T11[ebp], al

; 153  :         return !(*this == _Right);

  00076	0f b6 45 ff	 movzx	 eax, BYTE PTR $T11[ebp]
  0007a	85 c0		 test	 eax, eax
  0007c	75 09		 jne	 SHORT $LN45@Intersect
  0007e	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR tv179[ebp], 1
  00085	eb 04		 jmp	 SHORT $LN46@Intersect
$LN45@Intersect:
  00087	83 65 e4 00	 and	 DWORD PTR tv179[ebp], 0
$LN46@Intersect:
  0008b	8a 45 e4	 mov	 al, BYTE PTR tv179[ebp]
  0008e	88 45 fe	 mov	 BYTE PTR $T10[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 167  : 	for (; itor != m_ModelInstanceContainer.end(); ++itor)

  00091	0f b6 45 fe	 movzx	 eax, BYTE PTR $T10[ebp]
  00095	85 c0		 test	 eax, eax
  00097	74 3e		 je	 SHORT $LN3@Intersect
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 54   :         return *_Ptr;

  00099	8b 45 f8	 mov	 eax, DWORD PTR _itor$[ebp]
  0009c	89 45 d0	 mov	 DWORD PTR $T5[ebp], eax

; 252  :         return const_cast<reference>(_Mybase::operator*());

  0009f	8b 45 d0	 mov	 eax, DWORD PTR $T5[ebp]
  000a2	89 45 cc	 mov	 DWORD PTR $T4[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 169  : 		CDungeonModelInstance * pInstance = *itor;

  000a5	8b 45 cc	 mov	 eax, DWORD PTR $T4[ebp]
  000a8	8b 00		 mov	 eax, DWORD PTR [eax]
  000aa	89 45 c8	 mov	 DWORD PTR _pInstance$3[ebp], eax

; 170  : 		if (pInstance->Intersect(&CGraphicObjectInstance::GetTransform(), pfu, pfv, pft))

  000ad	ff 75 10	 push	 DWORD PTR _pft$[ebp]
  000b0	ff 75 0c	 push	 DWORD PTR _pfv$[ebp]
  000b3	ff 75 08	 push	 DWORD PTR _pfu$[ebp]
  000b6	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000b9	e8 00 00 00 00	 call	 ?GetTransform@CGraphicObjectInstance@@QAEAAUD3DXMATRIX@@XZ ; CGraphicObjectInstance::GetTransform
  000be	50		 push	 eax
  000bf	8b 4d c8	 mov	 ecx, DWORD PTR _pInstance$3[ebp]
  000c2	e8 00 00 00 00	 call	 ?Intersect@CGrannyModelInstance@@QAE_NPBUD3DXMATRIX@@PAM11@Z ; CGrannyModelInstance::Intersect
  000c7	0f b6 c0	 movzx	 eax, al
  000ca	85 c0		 test	 eax, eax
  000cc	74 04		 je	 SHORT $LN5@Intersect

; 171  : 			return true;

  000ce	b0 01		 mov	 al, 1
  000d0	eb 07		 jmp	 SHORT $LN1@Intersect
$LN5@Intersect:

; 172  : 	}

  000d2	e9 53 ff ff ff	 jmp	 $LN2@Intersect
$LN3@Intersect:

; 173  : 
; 174  : 	return false;

  000d7	32 c0		 xor	 al, al
$LN1@Intersect:

; 175  : }

  000d9	c9		 leave
  000da	c2 0c 00	 ret	 12			; 0000000cH
?Intersect@CDungeonBlock@@QAE_NPAM00@Z ENDP		; CDungeonBlock::Intersect
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
;	COMDAT ?Load@CDungeonBlock@@QAE_NPBD@Z
_TEXT	SEGMENT
_dwVertexCount$2 = -44					; size = 4
$T3 = -40						; size = 4
$T4 = -36						; size = 4
tv144 = -32						; size = 4
_pModelInstance$5 = -28					; size = 4
_i$6 = -24						; size = 4
$T7 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?Load@CDungeonBlock@@QAE_NPBD@Z PROC			; CDungeonBlock::Load, COMDAT
; _this$ = ecx

; 205  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Load@CDungeonBlock@@QAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 206  : 	Destroy();

  00028	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?Destroy@CDungeonBlock@@QAEXXZ ; CDungeonBlock::Destroy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00035	89 45 dc	 mov	 DWORD PTR $T4[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 208  : 	m_pThing = (CGraphicThing *)CResourceManager::Instance().GetResourcePointer(c_szFileName);

  00038	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  0003b	8b 4d dc	 mov	 ecx, DWORD PTR $T4[ebp]
  0003e	e8 00 00 00 00	 call	 ?GetResourcePointer@CResourceManager@@QAEPAVCResource@@PBD@Z ; CResourceManager::GetResourcePointer
  00043	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	89 81 8c 01 00
	00		 mov	 DWORD PTR [ecx+396], eax

; 209  : 
; 210  : 	m_pThing->AddReference();

  0004c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	8b 88 8c 01 00
	00		 mov	 ecx, DWORD PTR [eax+396]
  00055	e8 00 00 00 00	 call	 ?AddReference@CReferenceObject@@QAEXXZ ; CReferenceObject::AddReference

; 211  : 	if (m_pThing->GetModelCount() <= 0)

  0005a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	8b 88 8c 01 00
	00		 mov	 ecx, DWORD PTR [eax+396]
  00063	e8 00 00 00 00	 call	 ?GetModelCount@CGraphicThing@@QBEHXZ ; CGraphicThing::GetModelCount
  00068	85 c0		 test	 eax, eax
  0006a	7f 26		 jg	 SHORT $LN5@Load

; 212  : 	{
; 213  : 		TraceError("CDungeonBlock::Load(filename=%s) - model count is %d\n", c_szFileName, m_pThing->GetModelCount());

  0006c	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	8b 88 8c 01 00
	00		 mov	 ecx, DWORD PTR [eax+396]
  00075	e8 00 00 00 00	 call	 ?GetModelCount@CGraphicThing@@QBEHXZ ; CGraphicThing::GetModelCount
  0007a	50		 push	 eax
  0007b	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@ODGGGKHC@CDungeonBlock?3?3Load?$CIfilename?$DN?$CFs@
  00083	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00088	83 c4 0c	 add	 esp, 12			; 0000000cH

; 214  : 		return false;

  0008b	32 c0		 xor	 al, al
  0008d	e9 f9 00 00 00	 jmp	 $LN1@Load
$LN5@Load:

; 215  : 	}
; 216  : 
; 217  : 	m_ModelInstanceContainer.reserve(m_pThing->GetModelCount());

  00092	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00095	8b 88 8c 01 00
	00		 mov	 ecx, DWORD PTR [eax+396]
  0009b	e8 00 00 00 00	 call	 ?GetModelCount@CGraphicThing@@QBEHXZ ; CGraphicThing::GetModelCount
  000a0	50		 push	 eax
  000a1	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a4	81 c1 90 01 00
	00		 add	 ecx, 400		; 00000190H
  000aa	e8 00 00 00 00	 call	 ?reserve@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEXI@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::reserve

; 218  : 
; 219  : 	for (int i = 0; i < m_pThing->GetModelCount(); ++i)

  000af	83 65 e8 00	 and	 DWORD PTR _i$6[ebp], 0
  000b3	eb 07		 jmp	 SHORT $LN4@Load
$LN2@Load:
  000b5	8b 45 e8	 mov	 eax, DWORD PTR _i$6[ebp]
  000b8	40		 inc	 eax
  000b9	89 45 e8	 mov	 DWORD PTR _i$6[ebp], eax
$LN4@Load:
  000bc	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000bf	8b 88 8c 01 00
	00		 mov	 ecx, DWORD PTR [eax+396]
  000c5	e8 00 00 00 00	 call	 ?GetModelCount@CGraphicThing@@QBEHXZ ; CGraphicThing::GetModelCount
  000ca	39 45 e8	 cmp	 DWORD PTR _i$6[ebp], eax
  000cd	0f 8d b6 00 00
	00		 jge	 $LN3@Load

; 220  : 	{
; 221  : 		CDungeonModelInstance * pModelInstance = new CDungeonModelInstance;

  000d3	6a 78		 push	 120			; 00000078H
  000d5	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000da	59		 pop	 ecx
  000db	89 45 ec	 mov	 DWORD PTR $T7[ebp], eax
  000de	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  000e2	83 7d ec 00	 cmp	 DWORD PTR $T7[ebp], 0
  000e6	74 19		 je	 SHORT $LN7@Load

; 9    : 		CDungeonModelInstance() {}

  000e8	8b 4d ec	 mov	 ecx, DWORD PTR $T7[ebp]
  000eb	e8 00 00 00 00	 call	 ??0CGrannyModelInstance@@QAE@XZ ; CGrannyModelInstance::CGrannyModelInstance
  000f0	8b 45 ec	 mov	 eax, DWORD PTR $T7[ebp]
  000f3	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDungeonModelInstance@@6B@

; 220  : 	{
; 221  : 		CDungeonModelInstance * pModelInstance = new CDungeonModelInstance;

  000f9	8b 45 ec	 mov	 eax, DWORD PTR $T7[ebp]
  000fc	89 45 e0	 mov	 DWORD PTR tv144[ebp], eax
  000ff	eb 04		 jmp	 SHORT $LN8@Load
$LN7@Load:
  00101	83 65 e0 00	 and	 DWORD PTR tv144[ebp], 0
$LN8@Load:
  00105	8b 45 e0	 mov	 eax, DWORD PTR tv144[ebp]
  00108	89 45 d8	 mov	 DWORD PTR $T3[ebp], eax
  0010b	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0010f	8b 45 d8	 mov	 eax, DWORD PTR $T3[ebp]
  00112	89 45 e4	 mov	 DWORD PTR _pModelInstance$5[ebp], eax

; 222  : 		pModelInstance->SetMainModelPointer(m_pThing->GetModelPointer(i), &m_kDeformableVertexBuffer);

  00115	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00118	05 9c 01 00 00	 add	 eax, 412		; 0000019cH
  0011d	50		 push	 eax
  0011e	ff 75 e8	 push	 DWORD PTR _i$6[ebp]
  00121	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00124	8b 88 8c 01 00
	00		 mov	 ecx, DWORD PTR [eax+396]
  0012a	e8 00 00 00 00	 call	 ?GetModelPointer@CGraphicThing@@QAEPAVCGrannyModel@@H@Z ; CGraphicThing::GetModelPointer
  0012f	50		 push	 eax
  00130	8b 4d e4	 mov	 ecx, DWORD PTR _pModelInstance$5[ebp]
  00133	e8 00 00 00 00	 call	 ?SetMainModelPointer@CGrannyModelInstance@@QAEXPAVCGrannyModel@@PAVCGraphicVertexBuffer@@@Z ; CGrannyModelInstance::SetMainModelPointer

; 223  : 		DWORD dwVertexCount = pModelInstance->GetVertexCount();

  00138	8b 4d e4	 mov	 ecx, DWORD PTR _pModelInstance$5[ebp]
  0013b	e8 00 00 00 00	 call	 ?GetVertexCount@CGrannyModelInstance@@QAEKXZ ; CGrannyModelInstance::GetVertexCount
  00140	89 45 d4	 mov	 DWORD PTR _dwVertexCount$2[ebp], eax

; 224  : 		m_kDeformableVertexBuffer.Destroy();

  00143	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00146	81 c1 9c 01 00
	00		 add	 ecx, 412		; 0000019cH
  0014c	e8 00 00 00 00	 call	 ?Destroy@CGraphicVertexBuffer@@QAEXXZ ; CGraphicVertexBuffer::Destroy

; 225  : 		m_kDeformableVertexBuffer.Create(

  00151	6a 01		 push	 1
  00153	6a 08		 push	 8
  00155	68 12 01 00 00	 push	 274			; 00000112H
  0015a	ff 75 d4	 push	 DWORD PTR _dwVertexCount$2[ebp]
  0015d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	81 c1 9c 01 00
	00		 add	 ecx, 412		; 0000019cH
  00166	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00169	8b 80 9c 01 00
	00		 mov	 eax, DWORD PTR [eax+412]
  0016f	ff 50 04	 call	 DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 717  :         emplace_back(_Val);

  00172	8d 45 e4	 lea	 eax, DWORD PTR _pModelInstance$5[ebp]
  00175	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 230  : 		m_ModelInstanceContainer.push_back(pModelInstance);

  00176	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00179	81 c1 90 01 00
	00		 add	 ecx, 400		; 00000190H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 717  :         emplace_back(_Val);

  0017f	e8 00 00 00 00	 call	 ??$emplace_back@ABQAVCDungeonModelInstance@@@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAEXABQAVCDungeonModelInstance@@@Z ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::emplace_back<CDungeonModelInstance * const &>
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 231  : 	}

  00184	e9 2c ff ff ff	 jmp	 $LN2@Load
$LN3@Load:

; 232  : 
; 233  : 	return true;

  00189	b0 01		 mov	 al, 1
$LN1@Load:

; 234  : }

  0018b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0018e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00195	59		 pop	 ecx
  00196	c9		 leave
  00197	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Load@CDungeonBlock@@QAE_NPBD@Z$0:
  00000	6a 78		 push	 120			; 00000078H
  00002	ff 75 ec	 push	 DWORD PTR $T7[ebp]
  00005	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000a	59		 pop	 ecx
  0000b	59		 pop	 ecx
  0000c	c3		 ret	 0
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
__ehhandler$?Load@CDungeonBlock@@QAE_NPBD@Z:
  00012	90		 npad	 1
  00013	90		 npad	 1
  00014	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00018	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001b	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0001e	33 c8		 xor	 ecx, eax
  00020	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00025	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Load@CDungeonBlock@@QAE_NPBD@Z
  0002a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Load@CDungeonBlock@@QAE_NPBD@Z ENDP			; CDungeonBlock::Load
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
;	COMDAT ?BuildBoundingSphere@CDungeonBlock@@QAEXXZ
_TEXT	SEGMENT
$T1 = -52						; size = 8
$T2 = -44						; size = 4
$T3 = -40						; size = 4
$T4 = -36						; size = 8
tv484 = -28						; size = 4
tv483 = -24						; size = 4
__X$ = -20						; size = 4
_fz$ = -16						; size = 4
_fy$ = -12						; size = 4
_fx$ = -8						; size = 4
_fz$ = -4						; size = 4
_fy$ = 0						; size = 4
_fx$ = 4						; size = 4
_fz$ = 8						; size = 4
_fy$ = 12						; size = 4
_fx$ = 16						; size = 4
$T5 = 20						; size = 4
$T6 = 24						; size = 4
$T7 = 28						; size = 4
___param0$ = 32						; size = 4
$T8 = 36						; size = 4
___param0$ = 40						; size = 4
__My_data$9 = 44					; size = 4
__My_data$10 = 48					; size = 4
_this$ = 52						; size = 4
$T11 = 56						; size = 12
$T12 = 68						; size = 12
_v3Min$ = 80						; size = 12
_v3Max$ = 92						; size = 12
$T13 = 104						; size = 12
__$ArrayPad$ = 116					; size = 4
?BuildBoundingSphere@CDungeonBlock@@QAEXXZ PROC		; CDungeonBlock::BuildBoundingSphere, COMDAT
; _this$ = ecx

; 156  : {

  00000	55		 push	 ebp
  00001	8d 6c 24 88	 lea	 ebp, DWORD PTR [esp-120]
  00005	81 ec ac 00 00
	00		 sub	 esp, 172		; 000000acH
  0000b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00010	33 c5		 xor	 eax, ebp
  00012	89 45 74	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	89 4d 34	 mov	 DWORD PTR _this$[ebp], ecx

; 115  : 		m_pv3Min = pv3Min;

  0001a	8d 45 50	 lea	 eax, DWORD PTR _v3Min$[ebp]
  0001d	89 45 dc	 mov	 DWORD PTR $T4[ebp], eax

; 116  : 		m_pv3Max = pv3Max;

  00020	8d 45 5c	 lea	 eax, DWORD PTR _v3Max$[ebp]
  00023	89 45 e0	 mov	 DWORD PTR $T4[ebp+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  00026	8b 45 34	 mov	 eax, DWORD PTR _this$[ebp]
  00029	05 90 01 00 00	 add	 eax, 400		; 00000190H
  0002e	89 45 30	 mov	 DWORD PTR __My_data$10[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00031	8b 45 30	 mov	 eax, DWORD PTR __My_data$10[ebp]
  00034	89 45 d8	 mov	 DWORD PTR $T3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  00037	8b 45 30	 mov	 eax, DWORD PTR __My_data$10[ebp]
  0003a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0003d	89 45 28	 mov	 DWORD PTR ___param0$[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00040	8b 45 28	 mov	 eax, DWORD PTR ___param0$[ebp]
  00043	89 45 24	 mov	 DWORD PTR $T8[ebp], eax

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  00046	8d 45 24	 lea	 eax, DWORD PTR $T8[ebp]
  00049	89 45 18	 mov	 DWORD PTR $T6[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  0004c	8b 45 34	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	05 90 01 00 00	 add	 eax, 400		; 00000190H
  00054	89 45 2c	 mov	 DWORD PTR __My_data$9[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00057	8b 45 2c	 mov	 eax, DWORD PTR __My_data$9[ebp]
  0005a	89 45 d4	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  0005d	8b 45 2c	 mov	 eax, DWORD PTR __My_data$9[ebp]
  00060	8b 00		 mov	 eax, DWORD PTR [eax]
  00062	89 45 20	 mov	 DWORD PTR ___param0$[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00065	8b 45 20	 mov	 eax, DWORD PTR ___param0$[ebp]
  00068	89 45 1c	 mov	 DWORD PTR $T7[ebp], eax

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  0006b	8d 45 1c	 lea	 eax, DWORD PTR $T7[ebp]
  0006e	89 45 14	 mov	 DWORD PTR $T5[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 158  : 	for_each(m_ModelInstanceContainer.begin(), m_ModelInstanceContainer.end(), FBoundBox(&v3Min, &v3Max));

  00071	ff 75 e0	 push	 DWORD PTR $T4[ebp+4]
  00074	ff 75 dc	 push	 DWORD PTR $T4[ebp]
  00077	8b 45 18	 mov	 eax, DWORD PTR $T6[ebp]
  0007a	ff 30		 push	 DWORD PTR [eax]
  0007c	8b 45 14	 mov	 eax, DWORD PTR $T5[ebp]
  0007f	ff 30		 push	 DWORD PTR [eax]
  00081	8d 45 cc	 lea	 eax, DWORD PTR $T1[ebp]
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 ??$for_each@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@std@@UFBoundBox@@@std@@YA?AUFBoundBox@@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PAVCDungeonModelInstance@@@std@@@std@@@0@0U1@@Z ; std::for_each<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CDungeonModelInstance *> > >,FBoundBox>
  0008a	83 c4 14	 add	 esp, 20			; 00000014H
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0008d	f3 0f 10 45 50	 movss	 xmm0, DWORD PTR _v3Min$[ebp]
  00092	f3 0f 58 45 5c	 addss	 xmm0, DWORD PTR _v3Max$[ebp]
  00097	f3 0f 11 45 10	 movss	 DWORD PTR _fx$[ebp], xmm0
  0009c	f3 0f 10 45 54	 movss	 xmm0, DWORD PTR _v3Min$[ebp+4]
  000a1	f3 0f 58 45 60	 addss	 xmm0, DWORD PTR _v3Max$[ebp+4]
  000a6	f3 0f 11 45 0c	 movss	 DWORD PTR _fy$[ebp], xmm0
  000ab	f3 0f 10 45 58	 movss	 xmm0, DWORD PTR _v3Min$[ebp+8]
  000b0	f3 0f 58 45 64	 addss	 xmm0, DWORD PTR _v3Max$[ebp+8]
  000b5	f3 0f 11 45 08	 movss	 DWORD PTR _fz$[ebp], xmm0

; 180  :     x = fx;

  000ba	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fx$[ebp]
  000bf	f3 0f 11 45 44	 movss	 DWORD PTR $T12[ebp], xmm0

; 181  :     y = fy;

  000c4	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  000c9	f3 0f 11 45 48	 movss	 DWORD PTR $T12[ebp+4], xmm0

; 182  :     z = fz;

  000ce	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fz$[ebp]
  000d3	f3 0f 11 45 4c	 movss	 DWORD PTR $T12[ebp+8], xmm0

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  000d8	f3 0f 10 45 44	 movss	 xmm0, DWORD PTR $T12[ebp]
  000dd	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  000e5	f3 0f 11 45 04	 movss	 DWORD PTR _fx$[ebp], xmm0
  000ea	f3 0f 10 45 48	 movss	 xmm0, DWORD PTR $T12[ebp+4]
  000ef	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  000f7	f3 0f 11 45 00	 movss	 DWORD PTR _fy$[ebp], xmm0
  000fc	f3 0f 10 45 4c	 movss	 xmm0, DWORD PTR $T12[ebp+8]
  00101	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  00109	f3 0f 11 45 fc	 movss	 DWORD PTR _fz$[ebp], xmm0

; 180  :     x = fx;

  0010e	f3 0f 10 45 04	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00113	f3 0f 11 45 38	 movss	 DWORD PTR $T11[ebp], xmm0

; 181  :     y = fy;

  00118	f3 0f 10 45 00	 movss	 xmm0, DWORD PTR _fy$[ebp]
  0011d	f3 0f 11 45 3c	 movss	 DWORD PTR $T11[ebp+4], xmm0

; 182  :     z = fz;

  00122	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fz$[ebp]
  00127	f3 0f 11 45 40	 movss	 DWORD PTR $T11[ebp+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 160  : 	m_v3Center = (v3Min+v3Max) * 0.5f;

  0012c	8b 7d 34	 mov	 edi, DWORD PTR _this$[ebp]
  0012f	81 c7 7c 01 00
	00		 add	 edi, 380		; 0000017cH
  00135	8d 75 38	 lea	 esi, DWORD PTR $T11[ebp]
  00138	a5		 movsd
  00139	a5		 movsd
  0013a	a5		 movsd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0013b	f3 0f 10 45 5c	 movss	 xmm0, DWORD PTR _v3Max$[ebp]
  00140	f3 0f 5c 45 50	 subss	 xmm0, DWORD PTR _v3Min$[ebp]
  00145	f3 0f 11 45 f8	 movss	 DWORD PTR _fx$[ebp], xmm0
  0014a	f3 0f 10 45 60	 movss	 xmm0, DWORD PTR _v3Max$[ebp+4]
  0014f	f3 0f 5c 45 54	 subss	 xmm0, DWORD PTR _v3Min$[ebp+4]
  00154	f3 0f 11 45 f4	 movss	 DWORD PTR _fy$[ebp], xmm0
  00159	f3 0f 10 45 64	 movss	 xmm0, DWORD PTR _v3Max$[ebp+8]
  0015e	f3 0f 5c 45 58	 subss	 xmm0, DWORD PTR _v3Min$[ebp+8]
  00163	f3 0f 11 45 f0	 movss	 DWORD PTR _fz$[ebp], xmm0

; 180  :     x = fx;

  00168	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _fx$[ebp]
  0016d	f3 0f 11 45 68	 movss	 DWORD PTR $T13[ebp], xmm0

; 181  :     y = fy;

  00172	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00177	f3 0f 11 45 6c	 movss	 DWORD PTR $T13[ebp+4], xmm0

; 182  :     z = fz;

  0017c	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _fz$[ebp]
  00181	f3 0f 11 45 70	 movss	 DWORD PTR $T13[ebp+8], xmm0

; 1239 :     return sqrtf(pV->x * pV->x + pV->y * pV->y + pV->z * pV->z);

  00186	f3 0f 10 45 70	 movss	 xmm0, DWORD PTR $T13[ebp+8]
  0018b	f3 0f 59 45 70	 mulss	 xmm0, DWORD PTR $T13[ebp+8]
  00190	f3 0f 10 4d 6c	 movss	 xmm1, DWORD PTR $T13[ebp+4]
  00195	f3 0f 59 4d 6c	 mulss	 xmm1, DWORD PTR $T13[ebp+4]
  0019a	f3 0f 10 55 68	 movss	 xmm2, DWORD PTR $T13[ebp]
  0019f	f3 0f 59 55 68	 mulss	 xmm2, DWORD PTR $T13[ebp]
  001a4	f3 0f 58 d1	 addss	 xmm2, xmm1
  001a8	f3 0f 58 d0	 addss	 xmm2, xmm0
  001ac	f3 0f 11 55 ec	 movss	 DWORD PTR __X$[ebp], xmm2
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  001b1	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  001b6	51		 push	 ecx
  001b7	51		 push	 ecx
  001b8	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001bd	e8 00 00 00 00	 call	 _sqrt
  001c2	59		 pop	 ecx
  001c3	59		 pop	 ecx
  001c4	d9 5d e8	 fstp	 DWORD PTR tv483[ebp]
  001c7	d9 45 e8	 fld	 DWORD PTR tv483[ebp]
  001ca	d9 5d e4	 fstp	 DWORD PTR tv484[ebp]
  001cd	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR tv484[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 161  : 	m_fRadius = D3DXVec3Length(&(v3Max-v3Min))*0.5f + 150.0f; // extra length for attached objects

  001d2	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  001da	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@43160000
  001e2	8b 45 34	 mov	 eax, DWORD PTR _this$[ebp]
  001e5	f3 0f 11 80 88
	01 00 00	 movss	 DWORD PTR [eax+392], xmm0

; 162  : }

  001ed	5f		 pop	 edi
  001ee	5e		 pop	 esi
  001ef	8b 4d 74	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001f2	33 cd		 xor	 ecx, ebp
  001f4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f9	83 c5 78	 add	 ebp, 120		; 00000078H
  001fc	c9		 leave
  001fd	c3		 ret	 0
?BuildBoundingSphere@CDungeonBlock@@QAEXXZ ENDP		; CDungeonBlock::BuildBoundingSphere
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
;	COMDAT ?Destroy@CDungeonBlock@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Destroy@CDungeonBlock@@QAEXXZ PROC			; CDungeonBlock::Destroy, COMDAT
; _this$ = ecx

; 245  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 246  : 	if (m_pThing)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 b8 8c 01 00
	00 00		 cmp	 DWORD PTR [eax+396], 0
  00011	74 18		 je	 SHORT $LN2@Destroy

; 247  : 	{
; 248  : 		m_pThing->Release();

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 88 8c 01 00
	00		 mov	 ecx, DWORD PTR [eax+396]
  0001c	e8 00 00 00 00	 call	 ?Release@CReferenceObject@@QAEXXZ ; CReferenceObject::Release

; 249  : 		m_pThing = NULL;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 a0 8c 01 00
	00 00		 and	 DWORD PTR [eax+396], 0
$LN2@Destroy:

; 250  : 	}
; 251  : 
; 252  : 	stl_wipe(m_ModelInstanceContainer);

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	05 90 01 00 00	 add	 eax, 400		; 00000190H
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ??$stl_wipe@V?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@@@YAXAAV?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@@Z ; stl_wipe<std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> > >
  00039	59		 pop	 ecx

; 253  : 
; 254  : 	__Initialize();

  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?__Initialize@CDungeonBlock@@IAEXXZ ; CDungeonBlock::__Initialize

; 255  : }

  00042	c9		 leave
  00043	c3		 ret	 0
?Destroy@CDungeonBlock@@QAEXXZ ENDP			; CDungeonBlock::Destroy
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
;	COMDAT ??1CDungeonBlock@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDungeonBlock@@UAE@XZ PROC				; CDungeonBlock::~CDungeonBlock, COMDAT
; _this$ = ecx

; 262  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CDungeonBlock@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00029	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDungeonBlock@@6B@

; 263  : 	Destroy();

  0002f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?Destroy@CDungeonBlock@@QAEXXZ ; CDungeonBlock::Destroy

; 264  : }

  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	81 c1 9c 01 00
	00		 add	 ecx, 412		; 0000019cH
  00040	e8 00 00 00 00	 call	 ??1CGraphicVertexBuffer@@UAE@XZ ; CGraphicVertexBuffer::~CGraphicVertexBuffer
  00045	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00048	81 c1 90 01 00
	00		 add	 ecx, 400		; 00000190H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 673  :         _Tidy();

  0004e	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@AAEXXZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::_Tidy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 264  : }

  00053	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ??1CGraphicObjectInstance@@UAE@XZ ; CGraphicObjectInstance::~CGraphicObjectInstance
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	c9		 leave
  00067	c3		 ret	 0
  00068	cc		 int	 3
  00069	cc		 int	 3
  0006a	cc		 int	 3
  0006b	cc		 int	 3
  0006c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CDungeonBlock@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CDungeonBlock@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CDungeonBlock@@UAE@XZ ENDP				; CDungeonBlock::~CDungeonBlock
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp
;	COMDAT ??0CDungeonBlock@@QAE@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
_this$ = -24						; size = 4
_this$2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CDungeonBlock@@QAE@XZ PROC				; CDungeonBlock::CDungeonBlock, COMDAT
; _this$ = ecx

; 258  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CDungeonBlock@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00028	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ??0CGraphicObjectInstance@@QAE@XZ ; CGraphicObjectInstance::CGraphicObjectInstance
  00030	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00034	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00037	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CDungeonBlock@@6B@
  0003d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00040	05 90 01 00 00	 add	 eax, 400		; 00000190H
  00045	89 45 e8	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 445  :     vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

  00048	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	89 45 e4	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  0004e	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00051	89 45 ec	 mov	 DWORD PTR _this$2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00054	8b 45 ec	 mov	 eax, DWORD PTR _this$2[ebp]
  00057	83 20 00	 and	 DWORD PTR [eax], 0
  0005a	8b 45 ec	 mov	 eax, DWORD PTR _this$2[ebp]
  0005d	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  00061	8b 45 ec	 mov	 eax, DWORD PTR _this$2[ebp]
  00064	83 60 08 00	 and	 DWORD PTR [eax+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.cpp

; 258  : {

  00068	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0006c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	81 c1 9c 01 00
	00		 add	 ecx, 412		; 0000019cH
  00075	e8 00 00 00 00	 call	 ??0CGraphicVertexBuffer@@QAE@XZ ; CGraphicVertexBuffer::CGraphicVertexBuffer
  0007a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 259  : 	__Initialize();

  0007e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	e8 00 00 00 00	 call	 ?__Initialize@CDungeonBlock@@IAEXXZ ; CDungeonBlock::__Initialize

; 260  : }

  00086	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0008a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00090	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00097	59		 pop	 ecx
  00098	c9		 leave
  00099	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDungeonBlock@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CGraphicObjectInstance@@UAE@XZ ; CGraphicObjectInstance::~CGraphicObjectInstance
__unwindfunclet$??0CDungeonBlock@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 90 01 00
	00		 add	 ecx, 400		; 00000190H
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@PAVCDungeonModelInstance@@V?$allocator@PAVCDungeonModelInstance@@@std@@@std@@QAE@XZ ; std::vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >::~vector<CDungeonModelInstance *,std::allocator<CDungeonModelInstance *> >
__unwindfunclet$??0CDungeonBlock@@QAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	81 c1 9c 01 00
	00		 add	 ecx, 412		; 0000019cH
  0001f	e9 00 00 00 00	 jmp	 ??1CGraphicVertexBuffer@@UAE@XZ ; CGraphicVertexBuffer::~CGraphicVertexBuffer
  00024	cc		 int	 3
  00025	cc		 int	 3
  00026	cc		 int	 3
  00027	cc		 int	 3
  00028	cc		 int	 3
__ehhandler$??0CDungeonBlock@@QAE@XZ:
  00029	90		 npad	 1
  0002a	90		 npad	 1
  0002b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00032	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CDungeonBlock@@QAE@XZ
  00041	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CDungeonBlock@@QAE@XZ ENDP				; CDungeonBlock::CDungeonBlock
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\DungeonBlock.h
;	COMDAT ?GetType@CDungeonBlock@@UBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetType@CDungeonBlock@@UBEHXZ PROC			; CDungeonBlock::GetType, COMDAT
; _this$ = ecx

; 18   : 		int GetType() const { return ID; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	b8 13 1f f2 ad	 mov	 eax, -1376641261	; adf21f13H
  0000c	c9		 leave
  0000d	c3		 ret	 0
?GetType@CDungeonBlock@@UBEHXZ ENDP			; CDungeonBlock::GetType
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpObjectInstance.h
;	COMDAT ?OnDeform@CGraphicObjectInstance@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnDeform@CGraphicObjectInstance@@UAEXXZ PROC		; CGraphicObjectInstance::OnDeform, COMDAT
; _this$ = ecx

; 99   : 		virtual void			OnDeform(){}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	c9		 leave
  00008	c3		 ret	 0
?OnDeform@CGraphicObjectInstance@@UAEXXZ ENDP		; CGraphicObjectInstance::OnDeform
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpObjectInstance.h
;	COMDAT ?OnUpdate@CGraphicObjectInstance@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnUpdate@CGraphicObjectInstance@@UAEXXZ PROC		; CGraphicObjectInstance::OnUpdate, COMDAT
; _this$ = ecx

; 98   : 		virtual void			OnUpdate(){}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	c9		 leave
  00008	c3		 ret	 0
?OnUpdate@CGraphicObjectInstance@@UAEXXZ ENDP		; CGraphicObjectInstance::OnUpdate
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpObjectInstance.h
;	COMDAT ?OnClear@CGraphicObjectInstance@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnClear@CGraphicObjectInstance@@UAEXXZ PROC		; CGraphicObjectInstance::OnClear, COMDAT
; _this$ = ecx

; 97   : 		virtual void			OnClear(){}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	c9		 leave
  00008	c3		 ret	 0
?OnClear@CGraphicObjectInstance@@UAEXXZ ENDP		; CGraphicObjectInstance::OnClear
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Ptr$ = -12						; size = 4
__Block_size$ = -8					; size = 4
__Ptr_container$ = -4					; size = 4
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00006	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00009	83 c0 23	 add	 eax, 35			; 00000023H
  0000c	89 45 f8	 mov	 DWORD PTR __Block_size$[ebp], eax

; 116  :     if (_Block_size <= _Bytes) {

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __Block_size$[ebp]
  00012	3b 45 08	 cmp	 eax, DWORD PTR __Bytes$[ebp]
  00015	77 05		 ja	 SHORT $LN12@Allocate_m

; 117  :         _Throw_bad_array_new_length(); // add overflow

  00017	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN12@Allocate_m:

; 77   :         return ::operator new(_Bytes);

  0001c	ff 75 f8	 push	 DWORD PTR __Block_size$[ebp]
  0001f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00024	59		 pop	 ecx

; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00025	89 45 fc	 mov	 DWORD PTR __Ptr_container$[ebp], eax
$LN4@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00028	83 7d fc 00	 cmp	 DWORD PTR __Ptr_container$[ebp], 0
  0002c	74 02		 je	 SHORT $LN7@Allocate_m
  0002e	eb 09		 jmp	 SHORT $LN2@Allocate_m
$LN7@Allocate_m:
  00030	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
  00035	33 c0		 xor	 eax, eax
  00037	75 f7		 jne	 SHORT $LN7@Allocate_m
$LN2@Allocate_m:
  00039	33 c0		 xor	 eax, eax
  0003b	75 eb		 jne	 SHORT $LN4@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  0003d	8b 45 fc	 mov	 eax, DWORD PTR __Ptr_container$[ebp]
  00040	83 c0 23	 add	 eax, 35			; 00000023H
  00043	83 e0 e0	 and	 eax, -32		; ffffffe0H
  00046	89 45 f4	 mov	 DWORD PTR __Ptr$[ebp], eax

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00049	6a 04		 push	 4
  0004b	58		 pop	 eax
  0004c	6b c0 ff	 imul	 eax, eax, -1
  0004f	8b 4d f4	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00052	8b 55 fc	 mov	 edx, DWORD PTR __Ptr_container$[ebp]
  00055	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;

  00058	8b 45 f4	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN11@Allocate_m:

; 129  : }

  0005b	c9		 leave
  0005c	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	81 7d 08 00 10
	00 00		 cmp	 DWORD PTR __Bytes$[ebp], 4096 ; 00001000H
  0000a	72 0b		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000c	ff 75 08	 push	 DWORD PTR __Bytes$[ebp]
  0000f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00014	59		 pop	 ecx
  00015	eb 13		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00017	83 7d 08 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0001b	74 0b		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001d	ff 75 08	 push	 DWORD PTR __Bytes$[ebp]
  00020	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00025	59		 pop	 ecx

; 206  :         return _Traits::_Allocate(_Bytes);

  00026	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00028	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 210  : }

  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00022	81 7d 0c 00 10
	00 00		 cmp	 DWORD PTR __Bytes$[ebp], 4096 ; 00001000H
  00029	72 0f		 jb	 SHORT $LN2@Deallocate

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0002b	8d 45 0c	 lea	 eax, DWORD PTR __Bytes$[ebp]
  0002e	50		 push	 eax
  0002f	8d 45 08	 lea	 eax, DWORD PTR __Ptr$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
  00038	59		 pop	 ecx
  00039	59		 pop	 ecx
$LN2@Deallocate:

; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  0003a	ff 75 0c	 push	 DWORD PTR __Bytes$[ebp]
  0003d	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00040	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00045	59		 pop	 ecx
  00046	59		 pop	 ecx

; 222  : }

  00047	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00051	59		 pop	 ecx
  00052	c9		 leave
  00053	c3		 ret	 0
  00054	cc		 int	 3
  00055	cc		 int	 3
  00056	cc		 int	 3
  00057	cc		 int	 3
  00058	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z
_TEXT	SEGMENT
__Min_back_shift$ = -16					; size = 4
__Ptr_user$ = -12					; size = 4
__Ptr_container$ = -8					; size = 4
__Back_shift$ = -4					; size = 4
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 132  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 133  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 134  :     _Bytes += _Non_user_size;

  00006	8b 45 0c	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00009	8b 00		 mov	 eax, DWORD PTR [eax]
  0000b	83 c0 23	 add	 eax, 35			; 00000023H
  0000e	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00011	89 01		 mov	 DWORD PTR [ecx], eax

; 135  : 
; 136  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00013	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00016	8b 00		 mov	 eax, DWORD PTR [eax]
  00018	89 45 f4	 mov	 DWORD PTR __Ptr_user$[ebp], eax

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001b	6a 04		 push	 4
  0001d	58		 pop	 eax
  0001e	6b c0 ff	 imul	 eax, eax, -1
  00021	8b 4d f4	 mov	 ecx, DWORD PTR __Ptr_user$[ebp]
  00024	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  00027	89 45 f8	 mov	 DWORD PTR __Ptr_container$[ebp], eax

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);

  0002a	c7 45 f0 04 00
	00 00		 mov	 DWORD PTR __Min_back_shift$[ebp], 4

; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00031	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00034	8b 00		 mov	 eax, DWORD PTR [eax]
  00036	2b 45 f8	 sub	 eax, DWORD PTR __Ptr_container$[ebp]
  00039	89 45 fc	 mov	 DWORD PTR __Back_shift$[ebp], eax
$LN4@Adjust_man:

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0003c	83 7d fc 04	 cmp	 DWORD PTR __Back_shift$[ebp], 4
  00040	72 08		 jb	 SHORT $LN7@Adjust_man
  00042	83 7d fc 23	 cmp	 DWORD PTR __Back_shift$[ebp], 35 ; 00000023H
  00046	77 02		 ja	 SHORT $LN7@Adjust_man
  00048	eb 09		 jmp	 SHORT $LN2@Adjust_man
$LN7@Adjust_man:
  0004a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
  0004f	33 c0		 xor	 eax, eax
  00051	75 f7		 jne	 SHORT $LN7@Adjust_man
$LN2@Adjust_man:
  00053	33 c0		 xor	 eax, eax
  00055	75 e5		 jne	 SHORT $LN4@Adjust_man

; 152  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00057	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0005a	8b 4d f8	 mov	 ecx, DWORD PTR __Ptr_container$[ebp]
  0005d	89 08		 mov	 DWORD PTR [eax], ecx
$LN10@Adjust_man:

; 153  : }

  0005f	c9		 leave
  00060	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@Throw_bad_:

; 322  : }

  0001c	c9		 leave
  0001d	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :     {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 90   :         __std_exception_destroy(&_Data);

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	83 c0 04	 add	 eax, 4
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ___std_exception_destroy
  0001c	59		 pop	 ecx
  0001d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00020	83 e0 01	 and	 eax, 1
  00023	74 0c		 je	 SHORT $LN2@scalar
  00025	6a 0c		 push	 12			; 0000000cH
  00027	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	59		 pop	 ecx
  00030	59		 pop	 ecx
$LN2@scalar:
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	c9		 leave
  00035	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABV01@@Z ; std::exception::exception
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_array_new_length@std@@6B@
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	c9		 leave
  00028	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :     {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 90   :         __std_exception_destroy(&_Data);

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	83 c0 04	 add	 eax, 4
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ___std_exception_destroy
  0001c	59		 pop	 ecx
  0001d	c9		 leave
  0001e	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 66   :     {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 65   :         : _Data()

  00010	33 c0		 xor	 eax, eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 c1 04	 add	 ecx, 4
  00018	89 01		 mov	 DWORD PTR [ecx], eax
  0001a	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 67   :         _Data._What = _Message;

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 130  :     {

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 141  :     {

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	c9		 leave
  0003d	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :     {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 90   :         __std_exception_destroy(&_Data);

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	83 c0 04	 add	 eax, 4
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ___std_exception_destroy
  0001c	59		 pop	 ecx
  0001d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00020	83 e0 01	 and	 eax, 1
  00023	74 0c		 je	 SHORT $LN2@scalar
  00025	6a 0c		 push	 12			; 0000000cH
  00027	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	59		 pop	 ecx
  00030	59		 pop	 ecx
$LN2@scalar:
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	c9		 leave
  00035	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABV01@@Z ; std::exception::exception
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	c9		 leave
  0001f	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :     {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 90   :         __std_exception_destroy(&_Data);

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	83 c0 04	 add	 eax, 4
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ___std_exception_destroy
  0001c	59		 pop	 ecx
  0001d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00020	83 e0 01	 and	 eax, 1
  00023	74 0c		 je	 SHORT $LN2@scalar
  00025	6a 0c		 push	 12			; 0000000cH
  00027	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	59		 pop	 ecx
  00030	59		 pop	 ecx
$LN2@scalar:
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	c9		 leave
  00035	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 94   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00008	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0000f	74 0b		 je	 SHORT $LN3@what
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00017	89 45 f8	 mov	 DWORD PTR tv69[ebp], eax
  0001a	eb 07		 jmp	 SHORT $LN4@what
$LN3@what:
  0001c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
$LN4@what:
  00023	8b 45 f8	 mov	 eax, DWORD PTR tv69[ebp]

; 96   :     }

  00026	c9		 leave
  00027	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 71   :         : _Data()

  00010	33 c0		 xor	 eax, eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 c1 04	 add	 ecx, 4
  00018	89 01		 mov	 DWORD PTR [ecx], eax
  0001a	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	83 c0 04	 add	 eax, 4
  00023	50		 push	 eax
  00024	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  00027	83 c0 04	 add	 eax, 4
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ___std_exception_copy
  00030	59		 pop	 ecx
  00031	59		 pop	 ecx

; 74   :     }

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	c9		 leave
  00036	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -4						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
$LN2@vector:
  00004	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  00007	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  0000a	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000d	48		 dec	 eax
  0000e	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00011	83 7d fc 00	 cmp	 DWORD PTR tv66[ebp], 0
  00015	76 11		 jbe	 SHORT $LN1@vector
  00017	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  0001a	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001d	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  00020	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00023	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00026	eb dc		 jmp	 SHORT $LN2@vector
$LN1@vector:
  00028	c9		 leave
  00029	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
