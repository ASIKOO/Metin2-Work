; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	_sprintf
PUBLIC	__snprintf
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?_Throw_tree_length_error@std@@YAXXZ		; std::_Throw_tree_length_error
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??1?$CSingleton@VCItemManager@@@@UAE@XZ		; CSingleton<CItemManager>::~CSingleton<CItemManager>
PUBLIC	??_G?$CSingleton@VCItemManager@@@@UAEPAXI@Z	; CSingleton<CItemManager>::`scalar deleting destructor'
PUBLIC	??0CItemManager@@QAE@XZ				; CItemManager::CItemManager
PUBLIC	??1CItemManager@@UAE@XZ				; CItemManager::~CItemManager
PUBLIC	?Destroy@CItemManager@@QAEXXZ			; CItemManager::Destroy
PUBLIC	?SelectItemData@CItemManager@@QAEHK@Z		; CItemManager::SelectItemData
PUBLIC	?GetSelectedItemDataPointer@CItemManager@@QAEPAVCItemData@@XZ ; CItemManager::GetSelectedItemDataPointer
PUBLIC	?GetItemDataPointer@CItemManager@@QAEHKPAPAVCItemData@@@Z ; CItemManager::GetItemDataPointer
PUBLIC	?LoadItemDesc@CItemManager@@QAE_NPBD@Z		; CItemManager::LoadItemDesc
PUBLIC	?LoadItemList@CItemManager@@QAE_NPBD@Z		; CItemManager::LoadItemList
PUBLIC	?LoadItemTable@CItemManager@@QAE_NPBD@Z		; CItemManager::LoadItemTable
PUBLIC	?MakeItemData@CItemManager@@QAEPAVCItemData@@K@Z ; CItemManager::MakeItemData
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Insert_node
PUBLIC	?_Xlength@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@CAXXZ ; std::vector<CItemData *,std::allocator<CItemData *> >::_Xlength
PUBLIC	??_GCItemManager@@UAEPAXI@Z			; CItemManager::`scalar deleting destructor'
PUBLIC	??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::insert<0,0>
PUBLIC	?__SnapString@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@AAV12@@Z ; __SnapString
PUBLIC	?GetHashCode@@YAKPBD@Z				; GetHashCode
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Insert_node
PUBLIC	??1?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ ; std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >::~map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >
PUBLIC	??$_Emplace_reallocate@ABQAVCItemData@@@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@QAEPAPAVCItemData@@QAPAV2@ABQAV2@@Z ; std::vector<CItemData *,std::allocator<CItemData *> >::_Emplace_reallocate<CItemData * const &>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >
PUBLIC	??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@$$QAV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCItemData@@@std@@@std@@YAXPAPAVCItemData@@QAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ; std::_Destroy_range<std::allocator<CItemData *> >
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Find_lower_bound<unsigned long>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >
PUBLIC	??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::_Find_lower_bound<unsigned long>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * const &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * const &>
PUBLIC	??$_Uninitialized_move@PAPAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@YAPAPAVCItemData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ; std::_Uninitialized_move<CItemData * *,std::allocator<CItemData *> >
PUBLIC	??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *>
PUBLIC	??$_Copy_memmove@PAPAVCItemData@@PAPAV1@@std@@YAPAPAVCItemData@@PAPAV1@00@Z ; std::_Copy_memmove<CItemData * *,CItemData * *>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * &>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BB@GCADKGJO@map?1set?5too?5long@		; `string'
PUBLIC	?ms_singleton@?$CSingleton@VCLZO@@@@0PAVCLZO@@A	; CSingleton<CLZO>::ms_singleton
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A ; CSingleton<CEterPackManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A ; CSingleton<CItemManager>::ms_singleton
PUBLIC	??_7?$CSingleton@VCItemManager@@@@6B@		; CSingleton<CItemManager>::`vftable'
PUBLIC	??_7CItemManager@@6B@				; CItemManager::`vftable'
PUBLIC	??_C@_0DB@OJKGMCEF@?5CItemManager?3?3SelectItemData?5?9@ ; `string'
PUBLIC	??_C@_0DF@GPLOHCFJ@?5CItemManager?3?3GetItemDataPoint@ ; `string'
PUBLIC	??_C@_01GPOEFGEJ@?7@				; `string'
PUBLIC	??_C@_0DF@BBNNBFGM@?5CItemManager?3?3LoadItemList?$CI?$CFs?$CJ@ ; `string'
PUBLIC	??_C@_0BD@MGMLGJGK@icon?1item?1?$CF?45d?4tga@	; `string'
PUBLIC	??_C@_0CC@GKBFKKKF@d?3?1ymir?5work?1item?1weapon?1?$CF?45d?4g@ ; `string'
PUBLIC	??_C@_0DJ@OBCJLLMB@CItemManager?3?3LoadItemDesc?$CIc_sz@ ; `string'
PUBLIC	??_C@_0DP@NBGHGGP@CPythonItem?3?3LoadItemTable?3?5inv@ ; `string'
PUBLIC	??_C@_0FE@FEBCGCHP@CPythonItem?3?3LoadItemTable?3?5inv@ ; `string'
PUBLIC	??_C@_0DH@PMBKMONN@CPythonItem?3?3LoadItemTable?3?5inv@ ; `string'
PUBLIC	??_C@_0BD@KPPKEKHD@icon?1item?1?$CF05d?4tga@	; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CItemManager@@6B@				; CItemManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCItemManager@@@8			; CItemManager `RTTI Type Descriptor'
PUBLIC	??_R3CItemManager@@8				; CItemManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CItemManager@@8				; CItemManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CItemManager@@8			; CItemManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$CSingleton@VCItemManager@@@@8	; CSingleton<CItemManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$CSingleton@VCItemManager@@@@@8	; CSingleton<CItemManager> `RTTI Type Descriptor'
PUBLIC	??_R3?$CSingleton@VCItemManager@@@@8		; CSingleton<CItemManager>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CSingleton@VCItemManager@@@@8		; CSingleton<CItemManager>::`RTTI Base Class Array'
PUBLIC	??_R4?$CSingleton@VCItemManager@@@@6B@		; CSingleton<CItemManager>::`RTTI Complete Object Locator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	__atoi64:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPBD@Z:PROC		; std::_Xout_of_range
EXTRN	?Tracenf@@YAXPBDZZ:PROC				; Tracenf
EXTRN	?Tracef@@YAXPBDZZ:PROC				; Tracef
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	??0CMemoryTextFileLoader@@QAE@XZ:PROC		; CMemoryTextFileLoader::CMemoryTextFileLoader
EXTRN	??1CMemoryTextFileLoader@@UAE@XZ:PROC		; CMemoryTextFileLoader::~CMemoryTextFileLoader
EXTRN	?Bind@CMemoryTextFileLoader@@QAEXHPBX@Z:PROC	; CMemoryTextFileLoader::Bind
EXTRN	?GetLineCount@CMemoryTextFileLoader@@QAEKXZ:PROC ; CMemoryTextFileLoader::GetLineCount
EXTRN	?SplitLine@CMemoryTextFileLoader@@QAE_NKPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PBD@Z:PROC ; CMemoryTextFileLoader::SplitLine
EXTRN	?SplitLineByTab@CMemoryTextFileLoader@@QAE_NKPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z:PROC ; CMemoryTextFileLoader::SplitLineByTab
EXTRN	??0CLZObject@@QAE@XZ:PROC			; CLZObject::CLZObject
EXTRN	??1CLZObject@@QAE@XZ:PROC			; CLZObject::~CLZObject
EXTRN	?Decompress@CLZO@@QAE_NAAVCLZObject@@PBEPAK@Z:PROC ; CLZO::Decompress
EXTRN	??0CMappedFile@@QAE@XZ:PROC			; CMappedFile::CMappedFile
EXTRN	??1CMappedFile@@UAE@XZ:PROC			; CMappedFile::~CMappedFile
EXTRN	?Size@CMappedFile@@QAEKXZ:PROC			; CMappedFile::Size
EXTRN	?Read@CMappedFile@@QAEHPAXH@Z:PROC		; CMappedFile::Read
EXTRN	?Get@CEterPackManager@@QAE_NAAVCMappedFile@@PBDPAPBX@Z:PROC ; CEterPackManager::Get
EXTRN	?IsFileExist@CResourceManager@@QAE_NPBD@Z:PROC	; CResourceManager::IsFileExist
EXTRN	?SetSummary@CItemData@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; CItemData::SetSummary
EXTRN	?SetDescription@CItemData@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; CItemData::SetDescription
EXTRN	?GetTable@CItemData@@QBEPBUSItemTable@1@XZ:PROC	; CItemData::GetTable
EXTRN	?SetDefaultItemData@CItemData@@QAEXPBD0@Z:PROC	; CItemData::SetDefaultItemData
EXTRN	?SetItemTableData@CItemData@@QAEXPAUSItemTable@1@@Z:PROC ; CItemData::SetItemTableData
EXTRN	?New@CItemData@@SAPAV1@XZ:PROC			; CItemData::New
EXTRN	?Delete@CItemData@@SAXPAV1@@Z:PROC		; CItemData::Delete
EXTRN	??_E?$CSingleton@VCItemManager@@@@UAEPAXI@Z:PROC ; CSingleton<CItemManager>::`vector deleting destructor'
EXTRN	??_ECItemManager@@UAEPAXI@Z:PROC		; CItemManager::`vector deleting destructor'
EXTRN	?Vietnam_ConvertWeaponVnum@@YAKK@Z:PROC		; Vietnam_ConvertWeaponVnum
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?USE_VIETNAM_CONVERT_WEAPON_VNUM@@3HA:DWORD	; USE_VIETNAM_CONVERT_WEAPON_VNUM
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCLZO@@@@0PAVCLZO@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCLZO@@@@0PAVCLZO@@A DD 01H DUP (?) ; CSingleton<CLZO>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A DD 01H DUP (?) ; CSingleton<CEterPackManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A DD 01H DUP (?) ; CSingleton<CResourceManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A DD 01H DUP (?) ; CSingleton<CItemManager>::ms_singleton
_BSS	ENDS
;	COMDAT ??_R4?$CSingleton@VCItemManager@@@@6B@
rdata$r	SEGMENT
??_R4?$CSingleton@VCItemManager@@@@6B@ DD 00H		; CSingleton<CItemManager>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CSingleton@VCItemManager@@@@@8
	DD	FLAT:??_R3?$CSingleton@VCItemManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CSingleton@VCItemManager@@@@8
rdata$r	SEGMENT
??_R2?$CSingleton@VCItemManager@@@@8 DD FLAT:??_R1A@?0A@EA@?$CSingleton@VCItemManager@@@@8 ; CSingleton<CItemManager>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CSingleton@VCItemManager@@@@8
rdata$r	SEGMENT
??_R3?$CSingleton@VCItemManager@@@@8 DD 00H		; CSingleton<CItemManager>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CSingleton@VCItemManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CSingleton@VCItemManager@@@@@8
data$rs	SEGMENT
??_R0?AV?$CSingleton@VCItemManager@@@@@8 DD FLAT:??_7type_info@@6B@ ; CSingleton<CItemManager> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CSingleton@VCItemManager@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CSingleton@VCItemManager@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CSingleton@VCItemManager@@@@8 DD FLAT:??_R0?AV?$CSingleton@VCItemManager@@@@@8 ; CSingleton<CItemManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CSingleton@VCItemManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CItemManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CItemManager@@8 DD FLAT:??_R0?AVCItemManager@@@8 ; CItemManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CItemManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CItemManager@@8
rdata$r	SEGMENT
??_R2CItemManager@@8 DD FLAT:??_R1A@?0A@EA@CItemManager@@8 ; CItemManager::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$CSingleton@VCItemManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CItemManager@@8
rdata$r	SEGMENT
??_R3CItemManager@@8 DD 00H				; CItemManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CItemManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCItemManager@@@8
data$rs	SEGMENT
??_R0?AVCItemManager@@@8 DD FLAT:??_7type_info@@6B@	; CItemManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCItemManager@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CItemManager@@6B@
rdata$r	SEGMENT
??_R4CItemManager@@6B@ DD 00H				; CItemManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCItemManager@@@8
	DD	FLAT:??_R3CItemManager@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KPPKEKHD@icon?1item?1?$CF05d?4tga@
CONST	SEGMENT
??_C@_0BD@KPPKEKHD@icon?1item?1?$CF05d?4tga@ DB 'icon/item/%05d.tga', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@PMBKMONN@CPythonItem?3?3LoadItemTable?3?5inv@
CONST	SEGMENT
??_C@_0DH@PMBKMONN@CPythonItem?3?3LoadItemTable?3?5inv@ DB 'CPythonItem::'
	DB	'LoadItemTable: invalid item proto type %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FE@FEBCGCHP@CPythonItem?3?3LoadItemTable?3?5inv@
CONST	SEGMENT
??_C@_0FE@FEBCGCHP@CPythonItem?3?3LoadItemTable?3?5inv@ DB 'CPythonItem::'
	DB	'LoadItemTable: invalid item_proto[%s] STRIDE[%d] != sizeof(SI'
	DB	'temTable)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@NBGHGGP@CPythonItem?3?3LoadItemTable?3?5inv@
CONST	SEGMENT
??_C@_0DP@NBGHGGP@CPythonItem?3?3LoadItemTable?3?5inv@ DB 'CPythonItem::L'
	DB	'oadItemTable: invalid item_proto[%s] VERSION[%d]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@OBCJLLMB@CItemManager?3?3LoadItemDesc?$CIc_sz@
CONST	SEGMENT
??_C@_0DJ@OBCJLLMB@CItemManager?3?3LoadItemDesc?$CIc_sz@ DB 'CItemManager'
	DB	'::LoadItemDesc(c_szFileName=%s) - Load Error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GKBFKKKF@d?3?1ymir?5work?1item?1weapon?1?$CF?45d?4g@
CONST	SEGMENT
??_C@_0CC@GKBFKKKF@d?3?1ymir?5work?1item?1weapon?1?$CF?45d?4g@ DB 'd:/ymi'
	DB	'r work/item/weapon/%.5d.gr2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MGMLGJGK@icon?1item?1?$CF?45d?4tga@
CONST	SEGMENT
??_C@_0BD@MGMLGJGK@icon?1item?1?$CF?45d?4tga@ DB 'icon/item/%.5d.tga', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@BBNNBFGM@?5CItemManager?3?3LoadItemList?$CI?$CFs?$CJ@
CONST	SEGMENT
??_C@_0DF@BBNNBFGM@?5CItemManager?3?3LoadItemList?$CI?$CFs?$CJ@ DB ' CIte'
	DB	'mManager::LoadItemList(%s) - StrangeLine in %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01GPOEFGEJ@?7@
CONST	SEGMENT
??_C@_01GPOEFGEJ@?7@ DB 09H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@GPLOHCFJ@?5CItemManager?3?3GetItemDataPoint@
CONST	SEGMENT
??_C@_0DF@GPLOHCFJ@?5CItemManager?3?3GetItemDataPoint@ DB ' CItemManager:'
	DB	':GetItemDataPointer - FIND ERROR [%d]', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@OJKGMCEF@?5CItemManager?3?3SelectItemData?5?9@
CONST	SEGMENT
??_C@_0DB@OJKGMCEF@?5CItemManager?3?3SelectItemData?5?9@ DB ' CItemManage'
	DB	'r::SelectItemData - FIND ERROR [%d]', 0aH, 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?s_adwItemProtoKey@@3PAKA DD 02a4a1H			; s_adwItemProtoKey
	DD	045415aaH
	DD	0185a8be7H
	DD	01aad6abH
_DATA	ENDS
;	COMDAT ??_7CItemManager@@6B@
CONST	SEGMENT
??_7CItemManager@@6B@ DD FLAT:??_R4CItemManager@@6B@	; CItemManager::`vftable'
	DD	FLAT:??_ECItemManager@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CSingleton@VCItemManager@@@@6B@
CONST	SEGMENT
??_7?$CSingleton@VCItemManager@@@@6B@ DD FLAT:??_R4?$CSingleton@VCItemManager@@@@6B@ ; CSingleton<CItemManager>::`vftable'
	DD	FLAT:??_E?$CSingleton@VCItemManager@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BB@GCADKGJO@map?1set?5too?5long@ DB 'map/set too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@$$CBKK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@$$CBKK@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@$$CBKK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@$$CBKK@1@@Z$1
__ehfuncinfo$??$?0U?$pair@$$CBKK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@$$CBKK@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@$$CBKK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@$$CBKK@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@$$CBKPAVCItemData@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@$$CBKPAVCItemData@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z$1
__ehfuncinfo$??$?0U?$pair@$$CBKPAVCItemData@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@$$CBKPAVCItemData@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@U?$pair@$$CBKK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKK@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@$$CBKK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKK@1@@Z$2
__ehfuncinfo$??$_Emplace@U?$pair@$$CBKK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKK@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@U?$pair@$$CBKK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKK@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@U?$pair@$$CBKPAVCItemData@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@$$CBKPAVCItemData@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z$2
__ehfuncinfo$??$_Emplace@U?$pair@$$CBKPAVCItemData@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@U?$pair@$$CBKPAVCItemData@@@std@@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKK@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKK@1@@Z$2
__ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKK@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKK@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z$2
__ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadItemTable@CItemManager@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadItemTable@CItemManager@@QAE_NPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadItemTable@CItemManager@@QAE_NPBD@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?LoadItemTable@CItemManager@@QAE_NPBD@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadItemTable@CItemManager@@QAE_NPBD@Z$6
__ehfuncinfo$?LoadItemTable@CItemManager@@QAE_NPBD@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?LoadItemTable@CItemManager@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadItemList@CItemManager@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadItemList@CItemManager@@QAE_NPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadItemList@CItemManager@@QAE_NPBD@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?LoadItemList@CItemManager@@QAE_NPBD@Z$2
__ehfuncinfo$?LoadItemList@CItemManager@@QAE_NPBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?LoadItemList@CItemManager@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?LoadItemDesc@CItemManager@@QAE_NPBD@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?LoadItemDesc@CItemManager@@QAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?LoadItemDesc@CItemManager@@QAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CItemManager@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CItemManager@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CItemManager@@QAE@XZ$0
__ehfuncinfo$??0CItemManager@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CItemManager@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCItemData@@PAPAV1@@std@@YAPAPAVCItemData@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCItemData@@PAPAV1@@std@@YAPAPAVCItemData@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CItemData * *,CItemData * *>, COMDAT

; 4360 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4361 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4362 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4363 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4364 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4365 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4366 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4367 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCItemData@@PAPAV1@@std@@YAPAPAVCItemData@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CItemData * *,CItemData * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *>, COMDAT

; 271  : #if _HAS_IF_CONSTEXPR
; 272  :     if constexpr (is_array_v<_Ty>) {
; 273  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 274  :     } else
; 275  : #endif // _HAS_IF_CONSTEXPR
; 276  :     {
; 277  :         _Obj.~_Ty();
; 278  :     }
; 279  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *>, COMDAT

; 271  : #if _HAS_IF_CONSTEXPR
; 272  :     if constexpr (is_array_v<_Ty>) {
; 273  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 274  :     } else
; 275  : #endif // _HAS_IF_CONSTEXPR
; 276  :     {
; 277  :         _Obj.~_Ty();
; 278  :     }
; 279  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >, COMDAT
; _this$ = ecx

; 1057 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 18		 push	 24			; 00000018H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1058 :             _Al.deallocate(_Ptr, 1);
; 1059 :         }
; 1060 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >, COMDAT
; _this$ = ecx

; 1057 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 18		 push	 24			; 00000018H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1058 :             _Al.deallocate(_Ptr, 1);
; 1059 :         }
; 1060 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 1685 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1686 :     // move [_First, _Last) to raw _Dest, using _Al
; 1687 :     // note: only called internally from elsewhere in the STL
; 1688 :     using _Ptrval     = typename _Alloc::value_type*;
; 1689 :     auto _UFirst      = _Get_unwrapped(_First);
; 1690 :     const auto _ULast = _Get_unwrapped(_Last);
; 1691 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1692 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1693 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1694 :         return _Dest + (_ULast - _UFirst);
; 1695 :     } else {
; 1696 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1697 :         for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00009	56		 push	 esi

; 1535 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  0000a	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]

; 1686 :     // move [_First, _Last) to raw _Dest, using _Al
; 1687 :     // note: only called internally from elsewhere in the STL
; 1688 :     using _Ptrval     = typename _Alloc::value_type*;
; 1689 :     auto _UFirst      = _Get_unwrapped(_First);
; 1690 :     const auto _ULast = _Get_unwrapped(_Last);
; 1691 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1692 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1693 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1694 :         return _Dest + (_ULast - _UFirst);
; 1695 :     } else {
; 1696 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1697 :         for (; _UFirst != _ULast; ++_UFirst) {

  0000d	3b c2		 cmp	 eax, edx
  0000f	74 49		 je	 SHORT $LN3@Uninitiali

; 1535 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00011	8b ce		 mov	 ecx, esi
  00013	2b c8		 sub	 ecx, eax
  00015	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL4@Uninitiali:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00020	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00027	c7 44 01 14 00
	00 00 00	 mov	 DWORD PTR [ecx+eax+20], 0

; 2684 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0002f	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00032	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  00035	f3 0f 7e 40 10	 movq	 xmm0, QWORD PTR [eax+16]
  0003a	66 0f d6 46 10	 movq	 QWORD PTR [esi+16], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1547 :         ++_Last;

  0003f	83 c6 18	 add	 esi, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4377 :         _Mypair._Myval2._Mysize = 0;

  00042	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00049	c7 40 14 0f 00
	00 00		 mov	 DWORD PTR [eax+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00050	c6 00 00	 mov	 BYTE PTR [eax], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1547 :         ++_Last;

  00053	83 c0 18	 add	 eax, 24			; 00000018H

; 1686 :     // move [_First, _Last) to raw _Dest, using _Al
; 1687 :     // note: only called internally from elsewhere in the STL
; 1688 :     using _Ptrval     = typename _Alloc::value_type*;
; 1689 :     auto _UFirst      = _Get_unwrapped(_First);
; 1690 :     const auto _ULast = _Get_unwrapped(_Last);
; 1691 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1692 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1693 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1694 :         return _Dest + (_ULast - _UFirst);
; 1695 :     } else {
; 1696 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1697 :         for (; _UFirst != _ULast; ++_UFirst) {

  00056	3b c2		 cmp	 eax, edx
  00058	75 c6		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:

; 1541 :         _Destroy_range(_First, _Last, _Al);

  0005a	ff 75 14	 push	 DWORD PTR __Al$[ebp]
  0005d	56		 push	 esi
  0005e	56		 push	 esi
  0005f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00064	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1698 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1699 :         }
; 1700 : 
; 1701 :         return _Backout._Release();

  00067	8b c6		 mov	 eax, esi
  00069	5e		 pop	 esi

; 1702 :     }
; 1703 : }

  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@YAPAPAVCItemData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@YAPAPAVCItemData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z PROC ; std::_Uninitialized_move<CItemData * *,std::allocator<CItemData *> >, COMDAT

; 1685 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1686 :     // move [_First, _Last) to raw _Dest, using _Al
; 1687 :     // note: only called internally from elsewhere in the STL
; 1688 :     using _Ptrval     = typename _Alloc::value_type*;
; 1689 :     auto _UFirst      = _Get_unwrapped(_First);
; 1690 :     const auto _ULast = _Get_unwrapped(_Last);
; 1691 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1692 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1693 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCItemData@@PAPAV1@@std@@YAPAPAVCItemData@@PAPAV1@00@Z ; std::_Copy_memmove<CItemData * *,CItemData * *>

; 1694 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1695 :     } else {
; 1696 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1697 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1698 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1699 :         }
; 1700 : 
; 1701 :         return _Backout._Release();
; 1702 :     }
; 1703 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@YAPAPAVCItemData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ENDP ; std::_Uninitialized_move<CItemData * *,std::allocator<CItemData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::_Find_lower_bound<unsigned long>, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00008	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000b	89 02		 mov	 DWORD PTR [edx], eax
  0000d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00014	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00017	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001b	75 28		 jne	 SHORT $LN12@Find_lower
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00020	56		 push	 esi
  00021	8b 31		 mov	 esi, DWORD PTR [ecx]
$LL2@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1704 :             _Result._Location._Parent = _Trynode;

  00023	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  00025	39 70 10	 cmp	 DWORD PTR [eax+16], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00028	73 07		 jae	 SHORT $LN4@Find_lower

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	33 c9		 xor	 ecx, ecx

; 1708 :             } else {

  0002f	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;
; 1710 :                 _Result._Bound           = _Trynode;

  00031	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1711 :                 _Trynode                 = _Trynode->_Left;

  00034	b9 01 00 00 00	 mov	 ecx, 1
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0003b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00042	74 df		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  00044	5e		 pop	 esi
$LN12@Find_lower:

; 1716 :     }

  00045	8b c2		 mov	 eax, edx
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::_Find_lower_bound<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 598  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 599  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 18		 push	 24			; 00000018H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Find_lower_bound<unsigned long>, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00008	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000b	89 02		 mov	 DWORD PTR [edx], eax
  0000d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00014	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00017	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001b	75 28		 jne	 SHORT $LN12@Find_lower
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00020	56		 push	 esi
  00021	8b 31		 mov	 esi, DWORD PTR [ecx]
$LL2@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1704 :             _Result._Location._Parent = _Trynode;

  00023	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  00025	39 70 10	 cmp	 DWORD PTR [eax+16], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00028	73 07		 jae	 SHORT $LN4@Find_lower

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	33 c9		 xor	 ecx, ecx

; 1708 :             } else {

  0002f	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;
; 1710 :                 _Result._Bound           = _Trynode;

  00031	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1711 :                 _Trynode                 = _Trynode->_Left;

  00034	b9 01 00 00 00	 mov	 ecx, 1
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0003b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00042	74 df		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  00044	5e		 pop	 esi
$LN12@Find_lower:

; 1716 :     }

  00045	8b c2		 mov	 eax, edx
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Find_lower_bound<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 962  :     _Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 966  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 2d		 je	 SHORT $LN3@Destroy_ra
  0000f	90		 npad	 1
$LL4@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00010	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00013	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00016	72 0c		 jb	 SHORT $LN15@Destroy_ra

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00018	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00019	50		 push	 eax
  0001a	ff 36		 push	 DWORD PTR [esi]
  0001c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00021	83 c4 08	 add	 esp, 8
$LN15@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00024	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00032	c6 06 00	 mov	 BYTE PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 966  :         for (; _First != _Last; ++_First) {

  00035	83 c6 18	 add	 esi, 24			; 00000018H
  00038	3b f7		 cmp	 esi, edi
  0003a	75 d4		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  0003c	5f		 pop	 edi

; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  0003d	5e		 pop	 esi
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCItemData@@@std@@@std@@YAXPAPAVCItemData@@QAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCItemData@@@std@@@std@@YAXPAPAVCItemData@@QAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CItemData *> >, COMDAT

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {
; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCItemData@@@std@@@std@@YAXPAPAVCItemData@@QAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CItemData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@$$QAV21@@Z
_TEXT	SEGMENT
tv458 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
_this$1$ = -4						; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@$$QAV21@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
  00009	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0000e	53		 push	 ebx
  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	8b f9		 mov	 edi, ecx
  00013	8b 1f		 mov	 ebx, DWORD PTR [edi]
  00015	2b d3		 sub	 edx, ebx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00017	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0001a	f7 ea		 imul	 edx
  0001c	2b cb		 sub	 ecx, ebx
  0001e	c1 fa 02	 sar	 edx, 2
  00021	8b c2		 mov	 eax, edx
  00023	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00026	03 c2		 add	 eax, edx
  00028	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax
  0002b	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00030	f7 e9		 imul	 ecx
  00032	c1 fa 02	 sar	 edx, 2
  00035	8b f2		 mov	 esi, edx
  00037	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  0003a	03 f2		 add	 esi, edx

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0003c	81 fe aa aa aa
	0a		 cmp	 esi, 178956970		; 0aaaaaaaH
  00042	0f 84 26 01 00
	00		 je	 $LN58@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00048	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0004b	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00050	2b cb		 sub	 ecx, ebx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00052	46		 inc	 esi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00053	f7 e9		 imul	 ecx

; 1620 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00055	b8 aa aa aa 0a	 mov	 eax, 178956970		; 0aaaaaaaH

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0005a	89 75 f8	 mov	 DWORD PTR __Newsize$1$[ebp], esi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0005d	c1 fa 02	 sar	 edx, 2
  00060	8b ca		 mov	 ecx, edx
  00062	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00065	03 ca		 add	 ecx, edx

; 1620 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00067	8b d1		 mov	 edx, ecx
  00069	d1 ea		 shr	 edx, 1
  0006b	2b c2		 sub	 eax, edx
  0006d	3b c8		 cmp	 ecx, eax
  0006f	76 67		 jbe	 SHORT $LN12@Emplace_re

; 1621 :             return _Max; // geometric growth would overflow

  00071	b9 aa aa aa 0a	 mov	 ecx, 178956970		; 0aaaaaaaH
$LN20@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 65   :     return _Count * _Ty_size;

  00076	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  00079	c1 e0 03	 shl	 eax, 3

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007c	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0007d	89 45 f4	 mov	 DWORD PTR tv458[ebp], eax

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00080	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  00085	8b d8		 mov	 ebx, eax
  00087	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0008a	8b 45 fc	 mov	 eax, DWORD PTR __Whereoff$1$[ebp]
  0008d	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00090	8d 0c c3	 lea	 ecx, DWORD PTR [ebx+eax*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2684 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00093	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00096	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  0009d	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a4	89 4d fc	 mov	 DWORD PTR _this$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2684 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  000a7	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  000aa	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  000ad	f3 0f 7e 40 10	 movq	 xmm0, QWORD PTR [eax+16]
  000b2	66 0f d6 41 10	 movq	 QWORD PTR [ecx+16], xmm0

; 4377 :         _Mypair._Myval2._Mysize = 0;

  000b7	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000be	c7 40 14 0f 00
	00 00		 mov	 DWORD PTR [eax+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000c5	c6 00 00	 mov	 BYTE PTR [eax], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000c8	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000cb	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]
  000ce	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000d0	3b c2		 cmp	 eax, edx
  000d2	75 1c		 jne	 SHORT $LN4@Emplace_re

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000d4	8b c3		 mov	 eax, ebx

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  000d6	eb 30		 jmp	 SHORT $LN5@Emplace_re
$LN12@Emplace_re:

; 1624 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  000d8	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  000db	8b ce		 mov	 ecx, esi
  000dd	3b c6		 cmp	 eax, esi
  000df	0f 43 c8	 cmovae	 ecx, eax
  000e2	81 f9 aa aa aa
	0a		 cmp	 ecx, 178956970		; 0aaaaaaaH
  000e8	0f 87 85 00 00
	00		 ja	 $LN59@Emplace_re
  000ee	eb 86		 jmp	 SHORT $LN20@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000f0	57		 push	 edi
  000f1	53		 push	 ebx
  000f2	50		 push	 eax
  000f3	51		 push	 ecx
  000f4	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000f9	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000fc	83 c4 10	 add	 esp, 16			; 00000010H
  000ff	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  00102	83 c0 18	 add	 eax, 24			; 00000018H

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00105	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
$LN5@Emplace_re:

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  00108	57		 push	 edi
  00109	50		 push	 eax
  0010a	52		 push	 edx
  0010b	51		 push	 ecx
  0010c	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@0PAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > *,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1676 :         if (_Myfirst) { // destroy and deallocate old array

  00111	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  00113	83 c4 10	 add	 esp, 16			; 00000010H

; 1676 :         if (_Myfirst) { // destroy and deallocate old array

  00116	85 c9		 test	 ecx, ecx
  00118	74 35		 je	 SHORT $LN50@Emplace_re

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0011a	57		 push	 edi
  0011b	ff 77 04	 push	 DWORD PTR [edi+4]
  0011e	51		 push	 ecx
  0011f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1678 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00124	8b 37		 mov	 esi, DWORD PTR [edi]
  00126	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0012b	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0012e	2b ce		 sub	 ecx, esi
  00130	f7 e9		 imul	 ecx
  00132	c1 fa 02	 sar	 edx, 2
  00135	8b c2		 mov	 eax, edx
  00137	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0013a	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0013c	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0013f	c1 e0 03	 shl	 eax, 3
  00142	50		 push	 eax
  00143	56		 push	 esi
  00144	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00149	8b 75 f8	 mov	 esi, DWORD PTR __Newsize$1$[ebp]
  0014c	83 c4 14	 add	 esp, 20			; 00000014H
$LN50@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 766  :         return _Newvec + _Whereoff;

  0014f	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]

; 1682 :         _Mylast  = _Newvec + _Newsize;

  00152	8d 0c 76	 lea	 ecx, DWORD PTR [esi+esi*2]
  00155	8d 0c cb	 lea	 ecx, DWORD PTR [ebx+ecx*8]
  00158	89 1f		 mov	 DWORD PTR [edi], ebx
  0015a	89 4f 04	 mov	 DWORD PTR [edi+4], ecx

; 1683 :         _Myend   = _Newvec + _Newcapacity;

  0015d	8b 4d f4	 mov	 ecx, DWORD PTR tv458[ebp]
  00160	03 cb		 add	 ecx, ebx
  00162	89 4f 08	 mov	 DWORD PTR [edi+8], ecx

; 766  :         return _Newvec + _Whereoff;

  00165	5f		 pop	 edi
  00166	5e		 pop	 esi
  00167	5b		 pop	 ebx

; 767  :     }

  00168	8b e5		 mov	 esp, ebp
  0016a	5d		 pop	 ebp
  0016b	c2 08 00	 ret	 8
$LN58@Emplace_re:

; 738  :             _Xlength();

  0016e	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength
$LN59@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00173	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN56@Emplace_re:
  00178	cc		 int	 3
??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@$$QAV21@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 598  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 599  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 18		 push	 24			; 00000018H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCItemData@@@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@QAEPAPAVCItemData@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv435 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv434 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCItemData@@@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@QAEPAPAVCItemData@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CItemData *,std::allocator<CItemData *> >::_Emplace_reallocate<CItemData * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 c4 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1620 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 3a		 jbe	 SHORT $LN12@Emplace_re

; 1621 :             return _Max; // geometric growth would overflow

  00045	b9 ff ff ff 3f	 mov	 ecx, 1073741823		; 3fffffffH
$LN20@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 65   :     return _Count * _Ty_size;

  0004a	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00051	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00052	89 45 f4	 mov	 DWORD PTR tv435[ebp], eax

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00055	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0005a	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005d	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0005f	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00062	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00065	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00068	89 45 fc	 mov	 DWORD PTR tv434[ebp], eax
  0006b	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0006d	89 08		 mov	 DWORD PTR [eax], ecx
  0006f	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00072	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00074	3b da		 cmp	 ebx, edx
  00076	75 1b		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00078	8b 5d fc	 mov	 ebx, DWORD PTR tv434[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0007b	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0007d	eb 2b		 jmp	 SHORT $LN5@Emplace_re
$LN12@Emplace_re:

; 1624 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0007f	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00082	8b cf		 mov	 ecx, edi
  00084	3b c7		 cmp	 eax, edi
  00086	0f 43 c8	 cmovae	 ecx, eax
  00089	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0008f	77 60		 ja	 SHORT $LN40@Emplace_re
  00091	eb b7		 jmp	 SHORT $LN20@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00093	56		 push	 esi
  00094	57		 push	 edi
  00095	53		 push	 ebx
  00096	51		 push	 ecx
  00097	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@YAPAPAVCItemData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ; std::_Uninitialized_move<CItemData * *,std::allocator<CItemData *> >
  0009c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0009f	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8b 5d fc	 mov	 ebx, DWORD PTR tv434[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000a4	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a7	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000aa	56		 push	 esi
  000ab	50		 push	 eax
  000ac	52		 push	 edx
  000ad	51		 push	 ecx
  000ae	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@YAPAPAVCItemData@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ; std::_Uninitialized_move<CItemData * *,std::allocator<CItemData *> >

; 1676 :         if (_Myfirst) { // destroy and deallocate old array

  000b3	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000b5	83 c4 10	 add	 esp, 16			; 00000010H

; 1676 :         if (_Myfirst) { // destroy and deallocate old array

  000b8	85 c9		 test	 ecx, ecx
  000ba	74 12		 je	 SHORT $LN33@Emplace_re

; 1677 :             _Destroy(_Myfirst, _Mylast);
; 1678 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000bc	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000bf	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000c1	83 e0 fc	 and	 eax, -4			; fffffffcH
  000c4	50		 push	 eax
  000c5	51		 push	 ecx
  000c6	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000cb	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1682 :         _Mylast  = _Newvec + _Newsize;

  000ce	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  000d1	89 3e		 mov	 DWORD PTR [esi], edi
  000d3	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000d6	8b c3		 mov	 eax, ebx

; 1682 :         _Mylast  = _Newvec + _Newsize;

  000d8	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1683 :         _Myend   = _Newvec + _Newcapacity;

  000db	8b 4d f4	 mov	 ecx, DWORD PTR tv435[ebp]
  000de	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000e0	5f		 pop	 edi

; 1683 :         _Myend   = _Newvec + _Newcapacity;

  000e1	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx

; 767  :     }

  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000ec	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@CAXXZ ; std::vector<CItemData *,std::allocator<CItemData *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000f1	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f6	cc		 int	 3
??$_Emplace_reallocate@ABQAVCItemData@@@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@QAEPAPAVCItemData@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CItemData *,std::allocator<CItemData *> >::_Emplace_reallocate<CItemData * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ PROC ; std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >::~map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
??1?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >::~map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >, COMDAT
; _this$ = ecx

; 1189 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 07		 mov	 eax, DWORD PTR [edi]
  00006	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 23		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 598  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 599  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0001f	6a 18		 push	 24			; 00000018H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
  00030	8b 07		 mov	 eax, DWORD PTR [edi]
$LN7@Tree:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00032	6a 18		 push	 24			; 00000018H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1196 :     }

  0003f	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
;	COMDAT ?GetHashCode@@YAKPBD@Z
_TEXT	SEGMENT
_pString$ = 8						; size = 4
?GetHashCode@@YAKPBD@Z PROC				; GetHashCode, COMDAT

; 239  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 240  : 	   unsigned long i,len;
; 241  : 	   unsigned long ch;
; 242  : 	   unsigned long result;
; 243  : 	   
; 244  : 	   len     = strlen( pString );

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _pString$[ebp]
  00007	8b cb		 mov	 ecx, ebx
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0000e	66 90		 npad	 2
$LL12@GetHashCod:
  00010	8a 01		 mov	 al, BYTE PTR [ecx]
  00012	41		 inc	 ecx
  00013	84 c0		 test	 al, al
  00015	75 f9		 jne	 SHORT $LL12@GetHashCod

; 245  : 	   result = 5381;

  00017	bf 05 15 00 00	 mov	 edi, 5381		; 00001505H
  0001c	be 00 00 00 00	 mov	 esi, 0
  00021	2b ca		 sub	 ecx, edx

; 246  : 	   for( i=0; i<len; i++ )

  00023	74 12		 je	 SHORT $LN13@GetHashCod
$LL8@GetHashCod:

; 247  : 	   {
; 248  : 	   	   ch = (unsigned long)pString[i];

  00025	0f be 14 1e	 movsx	 edx, BYTE PTR [esi+ebx]

; 249  : 	   	   result = ((result<< 5) + result) + ch; // hash * 33 + ch

  00029	8b c7		 mov	 eax, edi
  0002b	c1 e0 05	 shl	 eax, 5
  0002e	46		 inc	 esi
  0002f	03 f8		 add	 edi, eax
  00031	03 fa		 add	 edi, edx
  00033	3b f1		 cmp	 esi, ecx
  00035	72 ee		 jb	 SHORT $LL8@GetHashCod
$LN13@GetHashCod:

; 250  : 	   }	  
; 251  : 
; 252  : 	   return result;
; 253  : }

  00037	8b c7		 mov	 eax, edi
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?GetHashCode@@YAKPBD@Z ENDP				; GetHashCode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
;	COMDAT ?__SnapString@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@AAV12@@Z
_TEXT	SEGMENT
tv598 = -29						; size = 1
$T1 = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_c_rstSrc$ = 8						; size = 4
_rstTemp$ = 12						; size = 4
?__SnapString@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@AAV12@@Z PROC ; __SnapString, COMDAT

; 179  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 55 08	 mov	 edx, DWORD PTR _c_rstSrc$[ebp]
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b 75 0c	 mov	 esi, DWORD PTR _rstTemp$[ebp]
  00018	57		 push	 edi

; 180  : 	UINT uSrcLen=c_rstSrc.length();

  00019	8b 7a 10	 mov	 edi, DWORD PTR [edx+16]

; 181  : 	if (uSrcLen<2)

  0001c	83 ff 02	 cmp	 edi, 2
  0001f	0f 82 c8 00 00
	00		 jb	 $LN85@SnapString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00025	8b 5a 14	 mov	 ebx, DWORD PTR [edx+20]

; 2218 :         const value_type* _Result = _Bx._Buf;

  00028	8b c2		 mov	 eax, edx

; 2227 :         return _BUF_SIZE <= _Myres;

  0002a	83 fb 10	 cmp	 ebx, 16			; 00000010H

; 2219 :         if (_Large_string_engaged()) {

  0002d	72 02		 jb	 SHORT $LN83@SnapString

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  0002f	8b 02		 mov	 eax, DWORD PTR [edx]
$LN83@SnapString:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 184  : 	if (c_rstSrc[0]!='"')

  00031	80 38 22	 cmp	 BYTE PTR [eax], 34	; 00000022H
  00034	0f 85 b3 00 00
	00		 jne	 $LN85@SnapString
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2219 :         if (_Large_string_engaged()) {

  0003a	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR $T1[ebp+16], 0
  00041	c7 45 f8 0f 00
	00 00		 mov	 DWORD PTR $T1[ebp+20], 15 ; 0000000fH
  00048	c6 45 e4 00	 mov	 BYTE PTR $T1[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  0004c	83 fb 10	 cmp	 ebx, 16			; 00000010H

; 2219 :         if (_Large_string_engaged()) {

  0004f	72 08		 jb	 SHORT $LN84@SnapString

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  00051	8b 02		 mov	 eax, DWORD PTR [edx]
  00053	8a 44 38 ff	 mov	 al, BYTE PTR [eax+edi-1]
  00057	eb 04		 jmp	 SHORT $LN86@SnapString
$LN84@SnapString:
  00059	8a 44 3a ff	 mov	 al, BYTE PTR [edx+edi-1]
$LN86@SnapString:

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  0005d	88 45 e3	 mov	 BYTE PTR tv598[ebp], al
  00060	8d 4f ff	 lea	 ecx, DWORD PTR [edi-1]
  00063	80 7d e3 22	 cmp	 BYTE PTR tv598[ebp], 34	; 00000022H
  00067	8b c1		 mov	 eax, ecx
  00069	0f 45 c7	 cmovne	 eax, edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 193  : 	rstTemp=c_rstSrc.substr(uLeftCut, uRightCut-uLeftCut);

  0006c	48		 dec	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 68   :     return _Right < _Left ? _Right : _Left;

  0006d	3b c8		 cmp	 ecx, eax
  0006f	0f 42 c1	 cmovb	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00072	83 fb 10	 cmp	 ebx, 16			; 00000010H

; 2219 :         if (_Large_string_engaged()) {

  00075	72 02		 jb	 SHORT $LN46@SnapString

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  00077	8b 12		 mov	 edx, DWORD PTR [edx]
$LN46@SnapString:

; 3024 :         return assign(_Right._Mypair._Myval2._Myptr() + _Roff, _Count);

  00079	50		 push	 eax
  0007a	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
  0007d	50		 push	 eax
  0007e	8d 4d e4	 lea	 ecx, DWORD PTR $T1[ebp]
  00081	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2665 :         if (this != _STD addressof(_Right)) {

  00086	8d 45 e4	 lea	 eax, DWORD PTR $T1[ebp]
  00089	3b f0		 cmp	 esi, eax
  0008b	74 38		 je	 SHORT $LN70@SnapString

; 2227 :         return _BUF_SIZE <= _Myres;

  0008d	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00090	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00093	72 0c		 jb	 SHORT $LN59@SnapString

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00095	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00096	50		 push	 eax
  00097	ff 36		 push	 DWORD PTR [esi]
  00099	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0009e	83 c4 08	 add	 esp, 8
$LN59@SnapString:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2684 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  000a1	0f 10 45 e4	 movups	 xmm0, XMMWORD PTR $T1[ebp]
  000a5	5f		 pop	 edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 194  : 	return rstTemp;

  000a6	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2684 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  000a8	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  000ab	f3 0f 7e 45 f4	 movq	 xmm0, QWORD PTR $T1[ebp+16]
  000b0	66 0f d6 46 10	 movq	 QWORD PTR [esi+16], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 195  : }

  000b5	5e		 pop	 esi
  000b6	5b		 pop	 ebx
  000b7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ba	33 cd		 xor	 ecx, ebp
  000bc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c3		 ret	 0
$LN70@SnapString:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  000c5	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp+20]
  000c8	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000cb	72 0d		 jb	 SHORT $LN75@SnapString

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000cd	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ce	51		 push	 ecx
  000cf	ff 75 e4	 push	 DWORD PTR $T1[ebp]
  000d2	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000d7	83 c4 08	 add	 esp, 8
$LN75@SnapString:
  000da	5f		 pop	 edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 194  : 	return rstTemp;

  000db	8b c6		 mov	 eax, esi

; 195  : }

  000dd	5e		 pop	 esi
  000de	5b		 pop	 ebx
  000df	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e2	33 cd		 xor	 ecx, ebp
  000e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c3		 ret	 0
$LN85@SnapString:
  000ed	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f0	8b c2		 mov	 eax, edx
  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	33 cd		 xor	 ecx, ebp
  000f6	5b		 pop	 ebx
  000f7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000fc	8b e5		 mov	 esp, ebp
  000fe	5d		 pop	 ebp
  000ff	c3		 ret	 0
?__SnapString@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@AAV12@@Z ENDP ; __SnapString
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z
_TEXT	SEGMENT
__Loc$2 = -36						; size = 12
$T3 = -24						; size = 12
$T4 = -20						; size = 8
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Myhead$ = 12						; size = 4
__Val$ = 12						; size = 4
??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::insert<0,0>, COMDAT
; _this$ = ecx

; 1343 :     pair<iterator, bool> insert(value_type&& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  0002a	8b 5d 0c	 mov	 ebx, DWORD PTR __Val$[ebp]
  0002d	8d 45 e8	 lea	 eax, DWORD PTR $T3[ebp]
  00030	53		 push	 ebx
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::_Find_lower_bound<unsigned long>
  00037	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0003a	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  0003e	66 0f d6 45 dc	 movq	 QWORD PTR __Loc$2[ebp], xmm0

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00043	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00047	75 0b		 jne	 SHORT $LN4@insert
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  00049	8b 03		 mov	 eax, DWORD PTR [ebx]
  0004b	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0004e	72 04		 jb	 SHORT $LN4@insert
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00050	32 d2		 xor	 dl, dl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1011 :                 return {_Loc._Bound, false};

  00052	eb 76		 jmp	 SHORT $LN55@insert
$LN4@insert:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  00054	81 7f 04 aa aa
	aa 0a		 cmp	 DWORD PTR [edi+4], 178956970 ; 0aaaaaaaH
  0005b	0f 84 85 00 00
	00		 je	 $LN69@insert

; 1015 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  00061	8b 07		 mov	 eax, DWORD PTR [edi]
  00063	89 45 0c	 mov	 DWORD PTR __Myhead$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1045 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00066	89 7d ec	 mov	 DWORD PTR $T4[ebp], edi

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00069	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  0006b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1052 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00072	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00079	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  0007e	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1053 :         _Ptr = _Al.allocate(1);

  00080	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  00082	8b 53 04	 mov	 edx, DWORD PTR [ebx+4]

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  00085	8d 45 0c	 lea	 eax, DWORD PTR __Myhead$[ebp]
  00088	50		 push	 eax
  00089	56		 push	 esi
  0008a	89 4e 10	 mov	 DWORD PTR [esi+16], ecx
  0008d	89 56 14	 mov	 DWORD PTR [esi+20], edx
  00090	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  00095	8d 45 0c	 lea	 eax, DWORD PTR __Myhead$[ebp]
  00098	50		 push	 eax
  00099	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  000a2	8d 45 0c	 lea	 eax, DWORD PTR __Myhead$[ebp]
  000a5	50		 push	 eax
  000a6	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * &>
  000af	83 c4 1c	 add	 esp, 28			; 0000001cH

; 810  :         this->_Ptr->_Color = _Red;

  000b2	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000b8	8b cf		 mov	 ecx, edi
  000ba	56		 push	 esi
  000bb	ff 75 e0	 push	 DWORD PTR __Loc$2[ebp+4]
  000be	ff 75 dc	 push	 DWORD PTR __Loc$2[ebp]
  000c1	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Insert_node
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  000c6	8b c8		 mov	 ecx, eax
  000c8	b2 01		 mov	 dl, 1
$LN55@insert:
  000ca	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000cd	89 08		 mov	 DWORD PTR [eax], ecx
  000cf	88 50 04	 mov	 BYTE PTR [eax+4], dl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1346 :     }

  000d2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000dc	59		 pop	 ecx
  000dd	5f		 pop	 edi
  000de	5e		 pop	 esi
  000df	5b		 pop	 ebx
  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c2 08 00	 ret	 8
$LN69@insert:

; 1720 :             _Throw_tree_length_error();

  000e6	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN67@insert:
  000eb	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z$2:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::insert<0,0>
; Function compile flags: /Ogtp
;	COMDAT ??_GCItemManager@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCItemManager@@UAEPAXI@Z PROC			; CItemManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CItemManager@@UAE@XZ	; CItemManager::~CItemManager
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 1c		 push	 28			; 0000001cH
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCItemManager@@UAEPAXI@Z ENDP			; CItemManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@CAXXZ PROC ; std::vector<CItemData *,std::allocator<CItemData *> >::_Xlength, COMDAT

; 1705 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@CAXXZ ENDP ; std::vector<CItemData *,std::allocator<CItemData *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >, COMDAT
; _this$ = ecx

; 1189 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 07		 mov	 eax, DWORD PTR [edi]
  00006	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 23		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 598  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 599  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0001f	6a 18		 push	 24			; 00000018H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
  00030	8b 07		 mov	 eax, DWORD PTR [edi]
$LN7@Tree:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00032	6a 18		 push	 24			; 00000018H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1196 :     }

  0003f	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
;	COMDAT ?MakeItemData@CItemManager@@QAEPAVCItemData@@K@Z
_TEXT	SEGMENT
__Loc$1 = -20						; size = 12
$T2 = -16						; size = 8
$T3 = -8						; size = 8
_dwIndex$ = 8						; size = 4
?MakeItemData@CItemManager@@QAEPAVCItemData@@K@Z PROC	; CItemManager::MakeItemData, COMDAT
; _this$ = ecx

; 78   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	53		 push	 ebx
  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00008	8d 45 08	 lea	 eax, DWORD PTR _dwIndex$[ebp]
  0000b	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 79   : 	TItemMap::iterator f = m_ItemMap.find(dwIndex);

  0000c	8d 79 04	 lea	 edi, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0000f	8d 45 ec	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00012	8b cf		 mov	 ecx, edi
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0001a	8b 45 f4	 mov	 eax, DWORD PTR __Loc$1[ebp+8]
  0001d	8b 5d 08	 mov	 ebx, DWORD PTR _dwIndex$[ebp]
  00020	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00024	75 14		 jne	 SHORT $LN40@MakeItemDa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  00026	3b 58 10	 cmp	 ebx, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00029	72 0f		 jb	 SHORT $LN40@MakeItemDa

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0002b	39 07		 cmp	 DWORD PTR [edi], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 81   : 	if (m_ItemMap.end() == f)

  0002d	74 0b		 je	 SHORT $LN40@MakeItemDa

; 88   : 	}
; 89   : 
; 90   : 	return f->second;

  0002f	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  00032	5f		 pop	 edi

; 91   : }

  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
$LN40@MakeItemDa:
  0003a	56		 push	 esi

; 82   : 	{
; 83   : 		CItemData * pItemData = CItemData::New();

  0003b	e8 00 00 00 00	 call	 ?New@CItemData@@SAPAV1@XZ ; CItemData::New
  00040	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00042	89 5d f8	 mov	 DWORD PTR $T3[ebp], ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 85   : 		m_ItemMap.insert(TItemMap::value_type(dwIndex, pItemData));		

  00045	8d 45 f8	 lea	 eax, DWORD PTR $T3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00048	89 75 fc	 mov	 DWORD PTR $T3[ebp+4], esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 85   : 		m_ItemMap.insert(TItemMap::value_type(dwIndex, pItemData));		

  0004b	50		 push	 eax
  0004c	8d 45 f0	 lea	 eax, DWORD PTR $T2[ebp]
  0004f	8b cf		 mov	 ecx, edi
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::insert<0,0>

; 86   : 
; 87   : 		return pItemData;

  00057	8b c6		 mov	 eax, esi
  00059	5e		 pop	 esi
  0005a	5f		 pop	 edi

; 91   : }

  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 04 00	 ret	 4
?MakeItemData@CItemManager@@QAEPAVCItemData@@K@Z ENDP	; CItemManager::MakeItemData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
;	COMDAT ?LoadItemTable@CItemManager@@QAE_NPBD@Z
_TEXT	SEGMENT
$T2 = -580						; size = 12
$T3 = -568						; size = 8
__Loc$4 = -560						; size = 12
__Loc$5 = -548						; size = 12
__Loc$6 = -536						; size = 12
_zObj$ = -524						; size = 20
__Loc$7 = -504						; size = 12
_pvData$ = -492						; size = 4
$T8 = -488						; size = 8
$T9 = -480						; size = 8
_pbData$1$ = -472					; size = 4
_dwFourCC$ = -468					; size = 4
$T10 = -464						; size = 8
_this$1$ = -456						; size = 4
_dwElements$ = -452					; size = 4
_i$1$ = -448						; size = 4
_this$GSCopy$1$ = -444					; size = 4
_dwDataSize$ = -440					; size = 4
_dwStride$ = -436					; size = 4
_dwVersion$ = -432					; size = 4
_pItemData$11 = -428					; size = 4
_dwVnum$12 = -428					; size = 4
_itemNameMap$ = -424					; size = 8
$T13 = -416						; size = 4
_itemNameMap$1$ = -416					; size = 4
$T14 = -416						; size = 4
__Myhead$15 = -412					; size = 4
__Pnode$16 = -412					; size = 4
$T17 = -412						; size = 4
_file$ = -408						; size = 324
_szName$ = -84						; size = 65
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?LoadItemTable@CItemManager@@QAE_NPBD@Z PROC		; CItemManager::LoadItemTable, COMDAT
; _this$ = ecx

; 256  : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadItemTable@CItemManager@@QAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 38 02 00
	00		 sub	 esp, 568		; 00000238H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b f9		 mov	 edi, ecx
  00030	89 bd 44 fe ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi
  00036	8b 75 08	 mov	 esi, DWORD PTR _c_szFileName$[ebp]

; 257  : 	CMappedFile file;

  00039	8d 8d 68 fe ff
	ff		 lea	 ecx, DWORD PTR _file$[ebp]
  0003f	e8 00 00 00 00	 call	 ??0CMappedFile@@QAE@XZ	; CMappedFile::CMappedFile

; 258  : 	LPCVOID pvData;
; 259  : 
; 260  : 	if (!CEterPackManager::Instance().Get(file, c_szFileName, &pvData))

  00044	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A ; CSingleton<CEterPackManager>::ms_singleton
  0004a	8d 85 14 fe ff
	ff		 lea	 eax, DWORD PTR _pvData$[ebp]
  00050	50		 push	 eax
  00051	56		 push	 esi
  00052	8d 85 68 fe ff
	ff		 lea	 eax, DWORD PTR _file$[ebp]
  00058	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005f	50		 push	 eax
  00060	e8 00 00 00 00	 call	 ?Get@CEterPackManager@@QAE_NAAVCMappedFile@@PBDPAPBX@Z ; CEterPackManager::Get
  00065	84 c0		 test	 al, al
  00067	74 7b		 je	 SHORT $LN26@LoadItemTa

; 261  : 		return false;
; 262  : 
; 263  : 	DWORD dwFourCC, dwElements, dwDataSize;
; 264  : 	DWORD dwVersion=0;
; 265  : 	DWORD dwStride=0;
; 266  : 
; 267  : 	file.Read(&dwFourCC, sizeof(DWORD));

  00069	6a 04		 push	 4
  0006b	8d 85 2c fe ff
	ff		 lea	 eax, DWORD PTR _dwFourCC$[ebp]
  00071	c7 85 50 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwVersion$[ebp], 0
  0007b	50		 push	 eax
  0007c	8d 8d 68 fe ff
	ff		 lea	 ecx, DWORD PTR _file$[ebp]
  00082	c7 85 4c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _dwStride$[ebp], 0
  0008c	e8 00 00 00 00	 call	 ?Read@CMappedFile@@QAEHPAXH@Z ; CMappedFile::Read

; 268  : 
; 269  : 	if (dwFourCC == MAKEFOURCC('M', 'I', 'P', 'X'))

  00091	8b 85 2c fe ff
	ff		 mov	 eax, DWORD PTR _dwFourCC$[ebp]
  00097	3d 4d 49 50 58	 cmp	 eax, 1481656653		; 5850494dH
  0009c	0f 85 92 00 00
	00		 jne	 $LN6@LoadItemTa

; 270  : 	{
; 271  : 		file.Read(&dwVersion, sizeof(DWORD));

  000a2	6a 04		 push	 4
  000a4	8d 85 50 fe ff
	ff		 lea	 eax, DWORD PTR _dwVersion$[ebp]
  000aa	50		 push	 eax
  000ab	8d 8d 68 fe ff
	ff		 lea	 ecx, DWORD PTR _file$[ebp]
  000b1	e8 00 00 00 00	 call	 ?Read@CMappedFile@@QAEHPAXH@Z ; CMappedFile::Read

; 272  : 		file.Read(&dwStride, sizeof(DWORD));

  000b6	6a 04		 push	 4
  000b8	8d 85 4c fe ff
	ff		 lea	 eax, DWORD PTR _dwStride$[ebp]
  000be	50		 push	 eax
  000bf	8d 8d 68 fe ff
	ff		 lea	 ecx, DWORD PTR _file$[ebp]
  000c5	e8 00 00 00 00	 call	 ?Read@CMappedFile@@QAEHPAXH@Z ; CMappedFile::Read

; 273  : 	
; 274  : 		if (dwVersion != 1)

  000ca	8b 85 50 fe ff
	ff		 mov	 eax, DWORD PTR _dwVersion$[ebp]
  000d0	83 f8 01	 cmp	 eax, 1
  000d3	74 3c		 je	 SHORT $LN8@LoadItemTa

; 275  : 		{
; 276  : 			TraceError("CPythonItem::LoadItemTable: invalid item_proto[%s] VERSION[%d]", c_szFileName, dwVersion);

  000d5	50		 push	 eax
  000d6	56		 push	 esi
  000d7	68 00 00 00 00	 push	 OFFSET ??_C@_0DP@NBGHGGP@CPythonItem?3?3LoadItemTable?3?5inv@
  000dc	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  000e1	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN26@LoadItemTa:
  000e4	32 db		 xor	 bl, bl
$LN27@LoadItemTa:

; 386  : 	return true;

  000e6	8d 8d 68 fe ff
	ff		 lea	 ecx, DWORD PTR _file$[ebp]
  000ec	e8 00 00 00 00	 call	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
  000f1	8a c3		 mov	 al, bl

; 387  : }

  000f3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fd	59		 pop	 ecx
  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx
  00101	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00104	33 cd		 xor	 ecx, ebp
  00106	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010b	8b e5		 mov	 esp, ebp
  0010d	5d		 pop	 ebp
  0010e	c2 04 00	 ret	 4
$LN8@LoadItemTa:

; 277  : 			return false;
; 278  : 		}
; 279  : 		if (dwStride != sizeof(CItemData::TItemTable))

  00111	8b 85 4c fe ff
	ff		 mov	 eax, DWORD PTR _dwStride$[ebp]
  00117	3d 9c 00 00 00	 cmp	 eax, 156		; 0000009cH
  0011c	74 2d		 je	 SHORT $LN10@LoadItemTa

; 280  : 		{
; 281  : 			TraceError("CPythonItem::LoadItemTable: invalid item_proto[%s] STRIDE[%d] != sizeof(SItemTable)", 

  0011e	68 9c 00 00 00	 push	 156			; 0000009cH
  00123	50		 push	 eax
  00124	56		 push	 esi
  00125	68 00 00 00 00	 push	 OFFSET ??_C@_0FE@FEBCGCHP@CPythonItem?3?3LoadItemTable?3?5inv@
  0012a	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0012f	83 c4 10	 add	 esp, 16			; 00000010H
  00132	eb b0		 jmp	 SHORT $LN26@LoadItemTa
$LN6@LoadItemTa:

; 282  : 				c_szFileName, dwStride, sizeof(CItemData::TItemTable));
; 283  : 			return false;
; 284  : 		}
; 285  : 	}
; 286  : 	else if (dwFourCC != MAKEFOURCC('M', 'I', 'P', 'T'))

  00134	3d 4d 49 50 54	 cmp	 eax, 1414547789		; 5450494dH
  00139	74 10		 je	 SHORT $LN10@LoadItemTa

; 287  : 	{
; 288  : 		TraceError("CPythonItem::LoadItemTable: invalid item proto type %s", c_szFileName);

  0013b	56		 push	 esi
  0013c	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@PMBKMONN@CPythonItem?3?3LoadItemTable?3?5inv@
  00141	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00146	83 c4 08	 add	 esp, 8
  00149	eb 99		 jmp	 SHORT $LN26@LoadItemTa
$LN10@LoadItemTa:

; 289  : 		return false;
; 290  : 	}
; 291  : 
; 292  : 	file.Read(&dwElements, sizeof(DWORD));

  0014b	6a 04		 push	 4
  0014d	8d 85 3c fe ff
	ff		 lea	 eax, DWORD PTR _dwElements$[ebp]
  00153	50		 push	 eax
  00154	8d 8d 68 fe ff
	ff		 lea	 ecx, DWORD PTR _file$[ebp]
  0015a	e8 00 00 00 00	 call	 ?Read@CMappedFile@@QAEHPAXH@Z ; CMappedFile::Read

; 293  : 	file.Read(&dwDataSize, sizeof(DWORD));

  0015f	6a 04		 push	 4
  00161	8d 85 48 fe ff
	ff		 lea	 eax, DWORD PTR _dwDataSize$[ebp]
  00167	50		 push	 eax
  00168	8d 8d 68 fe ff
	ff		 lea	 ecx, DWORD PTR _file$[ebp]
  0016e	e8 00 00 00 00	 call	 ?Read@CMappedFile@@QAEHPAXH@Z ; CMappedFile::Read

; 294  : 
; 295  : 	BYTE * pbData = new BYTE[dwDataSize];

  00173	ff b5 48 fe ff
	ff		 push	 DWORD PTR _dwDataSize$[ebp]
  00179	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0017e	83 c4 04	 add	 esp, 4

; 296  : 	file.Read(pbData, dwDataSize);

  00181	8d 8d 68 fe ff
	ff		 lea	 ecx, DWORD PTR _file$[ebp]
  00187	8b d8		 mov	 ebx, eax
  00189	89 9d 28 fe ff
	ff		 mov	 DWORD PTR _pbData$1$[ebp], ebx
  0018f	ff b5 48 fe ff
	ff		 push	 DWORD PTR _dwDataSize$[ebp]
  00195	53		 push	 ebx
  00196	e8 00 00 00 00	 call	 ?Read@CMappedFile@@QAEHPAXH@Z ; CMappedFile::Read

; 297  : 
; 298  : 	/////
; 299  : 
; 300  : 	CLZObject zObj;

  0019b	8d 8d f4 fd ff
	ff		 lea	 ecx, DWORD PTR _zObj$[ebp]
  001a1	e8 00 00 00 00	 call	 ??0CLZObject@@QAE@XZ	; CLZObject::CLZObject

; 301  : 
; 302  : 	if (!CLZO::Instance().Decompress(zObj, pbData, s_adwItemProtoKey))

  001a6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCLZO@@@@0PAVCLZO@@A ; CSingleton<CLZO>::ms_singleton
  001ac	8d 85 f4 fd ff
	ff		 lea	 eax, DWORD PTR _zObj$[ebp]
  001b2	68 00 00 00 00	 push	 OFFSET ?s_adwItemProtoKey@@3PAKA
  001b7	53		 push	 ebx
  001b8	50		 push	 eax
  001b9	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  001bd	e8 00 00 00 00	 call	 ?Decompress@CLZO@@QAE_NAAVCLZObject@@PBEPAK@Z ; CLZO::Decompress
  001c2	84 c0		 test	 al, al
  001c4	75 1b		 jne	 SHORT $LN11@LoadItemTa

; 303  : 	{
; 304  : 		delete [] pbData;

  001c6	53		 push	 ebx
  001c7	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  001cc	83 c4 04	 add	 esp, 4

; 386  : 	return true;

  001cf	8d 8d f4 fd ff
	ff		 lea	 ecx, DWORD PTR _zObj$[ebp]
  001d5	32 db		 xor	 bl, bl
  001d7	e8 00 00 00 00	 call	 ??1CLZObject@@QAE@XZ	; CLZObject::~CLZObject
  001dc	e9 05 ff ff ff	 jmp	 $LN27@LoadItemTa
$LN11@LoadItemTa:

; 305  : 		return false;
; 306  : 	}
; 307  : 
; 308  : 	/////
; 309  : 
; 310  : 	char szName[64+1];
; 311  : 	
; 312  : 	CItemData::TItemTable * table = (CItemData::TItemTable *) zObj.GetBuffer();

  001e1	8b 9d f4 fd ff
	ff		 mov	 ebx, DWORD PTR _zObj$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  001e7	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  001e9	c7 85 58 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _itemNameMap$[ebp], 0
  001f3	c7 85 5c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _itemNameMap$[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  001fd	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  00202	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00204	8d 85 64 fe ff
	ff		 lea	 eax, DWORD PTR __Pnode$16[ebp]
  0020a	50		 push	 eax
  0020b	56		 push	 esi
  0020c	89 b5 60 fe ff
	ff		 mov	 DWORD PTR _itemNameMap$1$[ebp], esi
  00212	89 b5 64 fe ff
	ff		 mov	 DWORD PTR __Pnode$16[ebp], esi
  00218	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  0021d	8d 85 64 fe ff
	ff		 lea	 eax, DWORD PTR __Pnode$16[ebp]
  00223	50		 push	 eax
  00224	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00227	51		 push	 ecx
  00228	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  0022d	8d 85 64 fe ff
	ff		 lea	 eax, DWORD PTR __Pnode$16[ebp]
  00233	50		 push	 eax
  00234	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00237	50		 push	 eax
  00238	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  0023d	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H
  00243	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  00246	89 b5 58 fe ff
	ff		 mov	 DWORD PTR _itemNameMap$[ebp], esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 315  : 	for (DWORD i = 0; i < dwElements; ++i, ++table)

  0024c	83 bd 3c fe ff
	ff 00		 cmp	 DWORD PTR _dwElements$[ebp], 0
  00253	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00257	c7 85 40 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$1$[ebp], 0
  00261	0f 86 10 03 00
	00		 jbe	 $LN3@LoadItemTa

; 305  : 		return false;
; 306  : 	}
; 307  : 
; 308  : 	/////
; 309  : 
; 310  : 	char szName[64+1];
; 311  : 	
; 312  : 	CItemData::TItemTable * table = (CItemData::TItemTable *) zObj.GetBuffer();

  00267	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0026a	83 c3 08	 add	 ebx, 8
  0026d	89 8d 38 fe ff
	ff		 mov	 DWORD PTR _this$1$[ebp], ecx
$LL4@LoadItemTa:

; 318  : 		DWORD dwVnum = table->dwVnum;

  00273	8b 73 f8	 mov	 esi, DWORD PTR [ebx-8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00276	8d 85 54 fe ff
	ff		 lea	 eax, DWORD PTR _dwVnum$12[ebp]
  0027c	50		 push	 eax
  0027d	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR __Loc$6[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 318  : 		DWORD dwVnum = table->dwVnum;

  00283	89 b5 54 fe ff
	ff		 mov	 DWORD PTR _dwVnum$12[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00289	50		 push	 eax
  0028a	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0028f	8b bd f0 fd ff
	ff		 mov	 edi, DWORD PTR __Loc$6[ebp+8]
  00295	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00299	75 24		 jne	 SHORT $LN239@LoadItemTa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  0029b	3b 77 10	 cmp	 esi, DWORD PTR [edi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0029e	72 1f		 jb	 SHORT $LN239@LoadItemTa
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 321  : 		if (m_ItemMap.end() == f)

  002a0	8b 85 44 fe ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  002a6	39 78 04	 cmp	 DWORD PTR [eax+4], edi
  002a9	74 14		 je	 SHORT $LN239@LoadItemTa

; 348  : 		}
; 349  : 		else
; 350  : 		{
; 351  : 			pItemData = f->second;

  002ab	8b 7f 14	 mov	 edi, DWORD PTR [edi+20]
  002ae	8b b5 60 fe ff
	ff		 mov	 esi, DWORD PTR _itemNameMap$1$[ebp]
  002b4	89 bd 54 fe ff
	ff		 mov	 DWORD PTR _pItemData$11[ebp], edi
  002ba	e9 06 01 00 00	 jmp	 $LN13@LoadItemTa
$LN239@LoadItemTa:

; 322  : 		{
; 323  : 			_snprintf(szName, sizeof(szName), "icon/item/%05d.tga", dwVnum);

  002bf	56		 push	 esi
  002c0	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KPPKEKHD@icon?1item?1?$CF05d?4tga@
  002c5	8d 45 ac	 lea	 eax, DWORD PTR _szName$[ebp]
  002c8	6a 41		 push	 65			; 00000041H
  002ca	50		 push	 eax
  002cb	e8 00 00 00 00	 call	 __snprintf

; 324  : 
; 325  : 			if (CResourceManager::Instance().IsFileExist(szName) == false)

  002d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  002d6	8d 45 ac	 lea	 eax, DWORD PTR _szName$[ebp]
  002d9	83 c4 10	 add	 esp, 16			; 00000010H
  002dc	50		 push	 eax
  002dd	e8 00 00 00 00	 call	 ?IsFileExist@CResourceManager@@QAE_NPBD@Z ; CResourceManager::IsFileExist
  002e2	84 c0		 test	 al, al
  002e4	0f 85 96 00 00
	00		 jne	 $LN17@LoadItemTa

; 327  : 				std::map<DWORD, DWORD>::iterator itVnum = itemNameMap.find(GetHashCode(table->szName));

  002ea	53		 push	 ebx
  002eb	e8 00 00 00 00	 call	 ?GetHashCode@@YAKPBD@Z	; GetHashCode
  002f0	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  002f3	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR _itemNameMap$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 327  : 				std::map<DWORD, DWORD>::iterator itVnum = itemNameMap.find(GetHashCode(table->szName));

  002f9	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  002fb	8d 85 60 fe ff
	ff		 lea	 eax, DWORD PTR $T14[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 327  : 				std::map<DWORD, DWORD>::iterator itVnum = itemNameMap.find(GetHashCode(table->szName));

  00301	89 bd 60 fe ff
	ff		 mov	 DWORD PTR $T14[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00307	50		 push	 eax
  00308	8d 85 dc fd ff
	ff		 lea	 eax, DWORD PTR __Loc$5[ebp]
  0030e	50		 push	 eax
  0030f	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00314	8b 8d e4 fd ff
	ff		 mov	 ecx, DWORD PTR __Loc$5[ebp+8]
  0031a	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0031e	75 12		 jne	 SHORT $LN15@LoadItemTa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  00320	3b 79 10	 cmp	 edi, DWORD PTR [ecx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00323	72 0d		 jb	 SHORT $LN15@LoadItemTa
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 329  : 				if (itVnum != itemNameMap.end())

  00325	3b 8d 58 fe ff
	ff		 cmp	 ecx, DWORD PTR _itemNameMap$[ebp]
  0032b	74 05		 je	 SHORT $LN15@LoadItemTa

; 330  : 					_snprintf(szName, sizeof(szName), "icon/item/%05d.tga", itVnum->second);

  0032d	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00330	eb 0f		 jmp	 SHORT $LN16@LoadItemTa
$LN15@LoadItemTa:

; 331  : 				else
; 332  : 					_snprintf(szName, sizeof(szName), "icon/item/%05d.tga", dwVnum-dwVnum % 10);

  00332	b8 cd cc cc cc	 mov	 eax, -858993459		; cccccccdH
  00337	f7 e6		 mul	 esi
  00339	c1 ea 03	 shr	 edx, 3
  0033c	8d 04 92	 lea	 eax, DWORD PTR [edx+edx*4]
  0033f	03 c0		 add	 eax, eax
$LN16@LoadItemTa:

; 333  : 
; 334  : 				if (CResourceManager::Instance().IsFileExist(szName) == false)

  00341	50		 push	 eax
  00342	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KPPKEKHD@icon?1item?1?$CF05d?4tga@
  00347	8d 45 ac	 lea	 eax, DWORD PTR _szName$[ebp]
  0034a	6a 41		 push	 65			; 00000041H
  0034c	50		 push	 eax
  0034d	e8 00 00 00 00	 call	 __snprintf
  00352	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCResourceManager@@@@0PAVCResourceManager@@A ; CSingleton<CResourceManager>::ms_singleton
  00358	8d 45 ac	 lea	 eax, DWORD PTR _szName$[ebp]
  0035b	83 c4 10	 add	 esp, 16			; 00000010H
  0035e	50		 push	 eax
  0035f	e8 00 00 00 00	 call	 ?IsFileExist@CResourceManager@@QAE_NPBD@Z ; CResourceManager::IsFileExist
  00364	84 c0		 test	 al, al
  00366	75 18		 jne	 SHORT $LN17@LoadItemTa

; 335  : 				{
; 336  : 					#ifdef _DEBUG
; 337  : 					TraceError("%16s(#%-5d) cannot find icon file. setting to default.", table->szName, dwVnum);
; 338  : 					#endif
; 339  : 					const DWORD EmptyBowl = 27995;
; 340  : 					_snprintf(szName, sizeof(szName), "icon/item/%05d.tga", EmptyBowl);

  00368	68 5b 6d 00 00	 push	 27995			; 00006d5bH
  0036d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KPPKEKHD@icon?1item?1?$CF05d?4tga@
  00372	8d 45 ac	 lea	 eax, DWORD PTR _szName$[ebp]
  00375	6a 41		 push	 65			; 00000041H
  00377	50		 push	 eax
  00378	e8 00 00 00 00	 call	 __snprintf
  0037d	83 c4 10	 add	 esp, 16			; 00000010H
$LN17@LoadItemTa:

; 341  : 				}
; 342  : 			}
; 343  : 				
; 344  : 			pItemData = CItemData::New();

  00380	e8 00 00 00 00	 call	 ?New@CItemData@@SAPAV1@XZ ; CItemData::New
  00385	8b f8		 mov	 edi, eax

; 345  : 
; 346  : 			pItemData->SetDefaultItemData(szName);

  00387	8d 45 ac	 lea	 eax, DWORD PTR _szName$[ebp]
  0038a	6a 00		 push	 0
  0038c	50		 push	 eax
  0038d	8b cf		 mov	 ecx, edi
  0038f	89 bd 54 fe ff
	ff		 mov	 DWORD PTR _pItemData$11[ebp], edi
  00395	e8 00 00 00 00	 call	 ?SetDefaultItemData@CItemData@@QAEXPBD0@Z ; CItemData::SetDefaultItemData

; 347  : 			m_ItemMap.insert(TItemMap::value_type(dwVnum, pItemData));

  0039a	8b 8d 38 fe ff
	ff		 mov	 ecx, DWORD PTR _this$1$[ebp]
  003a0	8d 85 20 fe ff
	ff		 lea	 eax, DWORD PTR $T9[ebp]
  003a6	50		 push	 eax
  003a7	8d 85 c8 fd ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  003ad	89 b5 20 fe ff
	ff		 mov	 DWORD PTR $T9[ebp], esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 347  : 			m_ItemMap.insert(TItemMap::value_type(dwVnum, pItemData));

  003b3	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  003b4	89 bd 24 fe ff
	ff		 mov	 DWORD PTR $T9[ebp+4], edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 347  : 			m_ItemMap.insert(TItemMap::value_type(dwVnum, pItemData));

  003ba	e8 00 00 00 00	 call	 ??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAVCItemData@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::insert<0,0>
  003bf	8b b5 58 fe ff
	ff		 mov	 esi, DWORD PTR _itemNameMap$[ebp]
$LN13@LoadItemTa:

; 353  : 		if (itemNameMap.find(GetHashCode(table->szName)) == itemNameMap.end())

  003c5	53		 push	 ebx
  003c6	e8 00 00 00 00	 call	 ?GetHashCode@@YAKPBD@Z	; GetHashCode
  003cb	83 c4 04	 add	 esp, 4
  003ce	89 85 64 fe ff
	ff		 mov	 DWORD PTR $T17[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  003d4	8d 85 64 fe ff
	ff		 lea	 eax, DWORD PTR $T17[ebp]
  003da	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR _itemNameMap$[ebp]
  003e0	50		 push	 eax
  003e1	8d 85 d0 fd ff
	ff		 lea	 eax, DWORD PTR __Loc$4[ebp]
  003e7	50		 push	 eax
  003e8	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  003ed	8b 8d d8 fd ff
	ff		 mov	 ecx, DWORD PTR __Loc$4[ebp+8]
  003f3	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  003f7	75 13		 jne	 SHORT $LN233@LoadItemTa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  003f9	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR $T17[ebp]
  003ff	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00402	72 08		 jb	 SHORT $LN233@LoadItemTa
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 353  : 		if (itemNameMap.find(GetHashCode(table->szName)) == itemNameMap.end())

  00404	3b ce		 cmp	 ecx, esi
  00406	0f 85 02 01 00
	00		 jne	 $LN208@LoadItemTa
$LN233@LoadItemTa:

; 354  : 			itemNameMap.insert(std::map<DWORD,DWORD>::value_type(GetHashCode(table->szName),table->dwVnum));

  0040c	53		 push	 ebx
  0040d	e8 00 00 00 00	 call	 ?GetHashCode@@YAKPBD@Z	; GetHashCode
  00412	89 85 30 fe ff
	ff		 mov	 DWORD PTR $T10[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00418	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR _itemNameMap$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0041e	8b 43 f8	 mov	 eax, DWORD PTR [ebx-8]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 354  : 			itemNameMap.insert(std::map<DWORD,DWORD>::value_type(GetHashCode(table->szName),table->dwVnum));

  00421	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00424	89 85 60 fe ff
	ff		 mov	 DWORD PTR $T13[ebp], eax
  0042a	89 85 34 fe ff
	ff		 mov	 DWORD PTR $T10[ebp+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00430	8d 85 30 fe ff
	ff		 lea	 eax, DWORD PTR $T10[ebp]
  00436	50		 push	 eax
  00437	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  0043d	50		 push	 eax
  0043e	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Find_lower_bound<unsigned long>
  00443	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00446	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  0044a	66 0f d6 85 08
	fe ff ff	 movq	 QWORD PTR __Loc$7[ebp], xmm0

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00452	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00456	75 0f		 jne	 SHORT $LN162@LoadItemTa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  00458	8b 85 30 fe ff
	ff		 mov	 eax, DWORD PTR $T10[ebp]
  0045e	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00461	0f 83 a7 00 00
	00		 jae	 $LN208@LoadItemTa
$LN162@LoadItemTa:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  00467	81 bd 5c fe ff
	ff aa aa aa 0a	 cmp	 DWORD PTR _itemNameMap$[ebp+4], 178956970 ; 0aaaaaaaH
  00471	0f 84 2b 01 00
	00		 je	 $LN229@LoadItemTa
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1045 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00477	8d 85 58 fe ff
	ff		 lea	 eax, DWORD PTR _itemNameMap$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1015 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  0047d	89 b5 64 fe ff
	ff		 mov	 DWORD PTR __Myhead$15[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1045 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00483	89 85 18 fe ff
	ff		 mov	 DWORD PTR $T8[ebp], eax

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00489	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  0048b	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1052 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  0048f	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+4], 0

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00499	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1053 :         _Ptr = _Al.allocate(1);

  0049e	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 786  :     }

  004a0	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  004a4	8b 85 30 fe ff
	ff		 mov	 eax, DWORD PTR $T10[ebp]
  004aa	89 46 10	 mov	 DWORD PTR [esi+16], eax
  004ad	8b 85 60 fe ff
	ff		 mov	 eax, DWORD PTR $T13[ebp]
  004b3	89 46 14	 mov	 DWORD PTR [esi+20], eax

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  004b6	8d 85 64 fe ff
	ff		 lea	 eax, DWORD PTR __Myhead$15[ebp]
  004bc	50		 push	 eax
  004bd	56		 push	 esi
  004be	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  004c3	8d 85 64 fe ff
	ff		 lea	 eax, DWORD PTR __Myhead$15[ebp]
  004c9	50		 push	 eax
  004ca	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  004cd	50		 push	 eax
  004ce	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  004d3	8d 85 64 fe ff
	ff		 lea	 eax, DWORD PTR __Myhead$15[ebp]
  004d9	50		 push	 eax
  004da	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  004dd	50		 push	 eax
  004de	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> *,std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> * &>
  004e3	83 c4 1c	 add	 esp, 28			; 0000001cH

; 810  :         this->_Ptr->_Color = _Red;

  004e6	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  004ec	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR _itemNameMap$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 599  :     _Val         = static_cast<_Other&&>(_New_val);

  004f2	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T8[ebp+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  004fc	56		 push	 esi
  004fd	ff b5 0c fe ff
	ff		 push	 DWORD PTR __Loc$7[ebp+4]
  00503	ff b5 08 fe ff
	ff		 push	 DWORD PTR __Loc$7[ebp]
  00509	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Insert_node
$LN208@LoadItemTa:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 355  : 		pItemData->SetItemTableData(table);

  0050e	8d 43 f8	 lea	 eax, DWORD PTR [ebx-8]
  00511	8b cf		 mov	 ecx, edi
  00513	50		 push	 eax
  00514	e8 00 00 00 00	 call	 ?SetItemTableData@CItemData@@QAEXPAUSItemTable@1@@Z ; CItemData::SetItemTableData

; 356  : 		if (0 != table->dwVnumRange)

  00519	83 7b fc 00	 cmp	 DWORD PTR [ebx-4], 0
  0051d	74 26		 je	 SHORT $LN2@LoadItemTa

; 357  : 		{
; 358  : 			m_vec_ItemRange.push_back(pItemData);

  0051f	8b 8d 44 fe ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00525	83 c1 0c	 add	 ecx, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00528	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0052b	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  0052e	74 08		 je	 SHORT $LN221@LoadItemTa

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00530	89 38		 mov	 DWORD PTR [eax], edi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00532	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00536	eb 0d		 jmp	 SHORT $LN2@LoadItemTa
$LN221@LoadItemTa:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00538	8d 95 54 fe ff
	ff		 lea	 edx, DWORD PTR _pItemData$11[ebp]
  0053e	52		 push	 edx
  0053f	50		 push	 eax
  00540	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCItemData@@@?$vector@PAVCItemData@@V?$allocator@PAVCItemData@@@std@@@std@@QAEPAPAVCItemData@@QAPAV2@ABQAV2@@Z ; std::vector<CItemData *,std::allocator<CItemData *> >::_Emplace_reallocate<CItemData * const &>
$LN2@LoadItemTa:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 315  : 	for (DWORD i = 0; i < dwElements; ++i, ++table)

  00545	8b 85 40 fe ff
	ff		 mov	 eax, DWORD PTR _i$1$[ebp]
  0054b	81 c3 9c 00 00
	00		 add	 ebx, 156		; 0000009cH
  00551	40		 inc	 eax
  00552	89 85 40 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], eax
  00558	3b 85 3c fe ff
	ff		 cmp	 eax, DWORD PTR _dwElements$[ebp]
  0055e	73 17		 jae	 SHORT $LN3@LoadItemTa
  00560	8b b5 58 fe ff
	ff		 mov	 esi, DWORD PTR _itemNameMap$[ebp]
  00566	8b 8d 38 fe ff
	ff		 mov	 ecx, DWORD PTR _this$1$[ebp]
  0056c	89 b5 60 fe ff
	ff		 mov	 DWORD PTR _itemNameMap$1$[ebp], esi
  00572	e9 fc fc ff ff	 jmp	 $LL4@LoadItemTa
$LN3@LoadItemTa:

; 359  : 		}
; 360  : 	}
; 361  : 
; 362  : //!@#
; 363  : //	CItemData::TItemTable * table = (CItemData::TItemTable *) zObj.GetBuffer();
; 364  : //	for (DWORD i = 0; i < dwElements; ++i, ++table)
; 365  : //	{
; 366  : //		CItemData * pItemData;
; 367  : //		DWORD dwVnum = table->dwVnum;
; 368  : //
; 369  : //		TItemMap::iterator f = m_ItemMap.find(dwVnum);
; 370  : //
; 371  : //		if (m_ItemMap.end() == f)
; 372  : //		{
; 373  : //			pItemData = CItemData::New();
; 374  : //
; 375  : //			pItemData->LoadItemData(_getf("d:/ymir work/item/%05d.msm", dwVnum));
; 376  : //			m_ItemMap.insert(TItemMap::value_type(dwVnum, pItemData));
; 377  : //		}
; 378  : //		else
; 379  : //		{
; 380  : //			pItemData = f->second;
; 381  : //		}
; 382  : //		pItemData->SetItemTableData(table);
; 383  : //	}
; 384  : 
; 385  : 	delete [] pbData;

  00577	ff b5 28 fe ff
	ff		 push	 DWORD PTR _pbData$1$[ebp]
  0057d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00582	83 c4 04	 add	 esp, 4
  00585	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR _itemNameMap$[ebp]

; 386  : 	return true;

  0058b	b3 01		 mov	 bl, 1
  0058d	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >
  00592	8d 8d f4 fd ff
	ff		 lea	 ecx, DWORD PTR _zObj$[ebp]
  00598	e8 00 00 00 00	 call	 ??1CLZObject@@QAE@XZ	; CLZObject::~CLZObject
  0059d	e9 44 fb ff ff	 jmp	 $LN27@LoadItemTa
$LN229@LoadItemTa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1720 :             _Throw_tree_length_error();

  005a2	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN245@LoadItemTa:
  005a7	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadItemTable@CItemManager@@QAE_NPBD@Z$0:
  00000	8d 8d 68 fe ff
	ff		 lea	 ecx, DWORD PTR _file$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
__unwindfunclet$?LoadItemTable@CItemManager@@QAE_NPBD@Z$1:
  0000b	8d 8d f4 fd ff
	ff		 lea	 ecx, DWORD PTR _zObj$[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1CLZObject@@QAE@XZ	; CLZObject::~CLZObject
__unwindfunclet$?LoadItemTable@CItemManager@@QAE_NPBD@Z$2:
  00016	8d 8d 58 fe ff
	ff		 lea	 ecx, DWORD PTR _itemNameMap$[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE@XZ
__unwindfunclet$?LoadItemTable@CItemManager@@QAE_NPBD@Z$6:
  00021	8d 8d 18 fe ff
	ff		 lea	 ecx, DWORD PTR $T8[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
  00030	cc		 int	 3
__ehhandler$?LoadItemTable@CItemManager@@QAE_NPBD@Z:
  00031	90		 npad	 1
  00032	90		 npad	 1
  00033	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00037	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003a	8b 8a b8 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-584]
  00040	33 c8		 xor	 ecx, eax
  00042	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00047	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0004a	33 c8		 xor	 ecx, eax
  0004c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00051	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadItemTable@CItemManager@@QAE_NPBD@Z
  00056	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadItemTable@CItemManager@@QAE_NPBD@Z ENDP		; CItemManager::LoadItemTable
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
;	COMDAT ?LoadItemList@CItemManager@@QAE_NPBD@Z
_TEXT	SEGMENT
_textFileLoader$ = -904					; size = 16
_pData$ = -888						; size = 4
_dwItemVNum$1$ = -884					; size = 4
_this$GSCopy$1$ = -880					; size = 4
_c_szFileName$GSCopy$1$ = -876				; size = 4
_TokenVector$ = -872					; size = 12
_File$ = -860						; size = 324
_szMildModelPath$2 = -536				; size = 260
_szMildIconPath$3 = -276				; size = 260
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?LoadItemList@CItemManager@@QAE_NPBD@Z PROC		; CItemManager::LoadItemList, COMDAT
; _this$ = ecx

; 97   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadItemList@CItemManager@@QAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 7c 03 00
	00		 sub	 esp, 892		; 0000037cH
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b f9		 mov	 edi, ecx
  00030	89 bd 90 fc ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], edi
  00036	8b 75 08	 mov	 esi, DWORD PTR _c_szFileName$[ebp]

; 98   : 	CMappedFile File;

  00039	8d 8d a4 fc ff
	ff		 lea	 ecx, DWORD PTR _File$[ebp]
  0003f	89 b5 94 fc ff
	ff		 mov	 DWORD PTR _c_szFileName$GSCopy$1$[ebp], esi
  00045	e8 00 00 00 00	 call	 ??0CMappedFile@@QAE@XZ	; CMappedFile::CMappedFile

; 99   : 	LPCVOID pData;
; 100  : 
; 101  : 	if (!CEterPackManager::Instance().Get(File, c_szFileName, &pData))

  0004a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A ; CSingleton<CEterPackManager>::ms_singleton
  00050	8d 85 88 fc ff
	ff		 lea	 eax, DWORD PTR _pData$[ebp]
  00056	50		 push	 eax
  00057	56		 push	 esi
  00058	8d 85 a4 fc ff
	ff		 lea	 eax, DWORD PTR _File$[ebp]
  0005e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ?Get@CEterPackManager@@QAE_NAAVCMappedFile@@PBDPAPBX@Z ; CEterPackManager::Get
  0006b	84 c0		 test	 al, al
  0006d	75 07		 jne	 SHORT $LN5@LoadItemLi
  0006f	32 db		 xor	 bl, bl
  00071	e9 81 02 00 00	 jmp	 $LN22@LoadItemLi
$LN5@LoadItemLi:

; 102  : 		return false;
; 103  : 
; 104  : 	CMemoryTextFileLoader textFileLoader;

  00076	8d 8d 78 fc ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$[ebp]
  0007c	e8 00 00 00 00	 call	 ??0CMemoryTextFileLoader@@QAE@XZ ; CMemoryTextFileLoader::CMemoryTextFileLoader

; 105  : 	textFileLoader.Bind(File.Size(), pData);

  00081	ff b5 88 fc ff
	ff		 push	 DWORD PTR _pData$[ebp]
  00087	8d 8d a4 fc ff
	ff		 lea	 ecx, DWORD PTR _File$[ebp]
  0008d	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00091	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
  00096	50		 push	 eax
  00097	8d 8d 78 fc ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$[ebp]
  0009d	e8 00 00 00 00	 call	 ?Bind@CMemoryTextFileLoader@@QAEXHPBX@Z ; CMemoryTextFileLoader::Bind
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000a2	c7 85 98 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _TokenVector$[ebp], 0
  000ac	c7 85 9c fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _TokenVector$[ebp+4], 0
  000b6	c7 85 a0 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _TokenVector$[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 108  :     for (DWORD i = 0; i < textFileLoader.GetLineCount(); ++i)

  000c0	8d 8d 78 fc ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$[ebp]
  000c6	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000ca	33 db		 xor	 ebx, ebx
  000cc	e8 00 00 00 00	 call	 ?GetLineCount@CMemoryTextFileLoader@@QAEKXZ ; CMemoryTextFileLoader::GetLineCount
  000d1	85 c0		 test	 eax, eax
  000d3	0f 84 a7 01 00
	00		 je	 $LN3@LoadItemLi
  000d9	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@LoadItemLi:

; 109  : 	{
; 110  : 		if (!textFileLoader.SplitLine(i, &TokenVector, "\t"))

  000e0	68 00 00 00 00	 push	 OFFSET ??_C@_01GPOEFGEJ@?7@
  000e5	8d 85 98 fc ff
	ff		 lea	 eax, DWORD PTR _TokenVector$[ebp]
  000eb	50		 push	 eax
  000ec	53		 push	 ebx
  000ed	8d 8d 78 fc ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$[ebp]
  000f3	e8 00 00 00 00	 call	 ?SplitLine@CMemoryTextFileLoader@@QAE_NKPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@PBD@Z ; CMemoryTextFileLoader::SplitLine
  000f8	84 c0		 test	 al, al
  000fa	0f 84 6c 01 00
	00		 je	 $LN2@LoadItemLi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00100	8b 95 9c fc ff
	ff		 mov	 edx, DWORD PTR _TokenVector$[ebp+4]
  00106	8b 8d 98 fc ff
	ff		 mov	 ecx, DWORD PTR _TokenVector$[ebp]
  0010c	2b d1		 sub	 edx, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 113  : 		if (!(TokenVector.size() == 3 || TokenVector.size() == 4))

  0010e	8d 42 b8	 lea	 eax, DWORD PTR [edx-72]
  00111	83 f8 18	 cmp	 eax, 24			; 00000018H
  00114	72 1c		 jb	 SHORT $LN7@LoadItemLi
  00116	8d 42 a0	 lea	 eax, DWORD PTR [edx-96]
  00119	83 f8 18	 cmp	 eax, 24			; 00000018H
  0011c	72 14		 jb	 SHORT $LN7@LoadItemLi

; 114  : 		{
; 115  : 			TraceError(" CItemManager::LoadItemList(%s) - StrangeLine in %d\n", c_szFileName, i);

  0011e	53		 push	 ebx
  0011f	56		 push	 esi
  00120	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@BBNNBFGM@?5CItemManager?3?3LoadItemList?$CI?$CFs?$CJ@
  00125	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0012a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 116  : 			continue;

  0012d	e9 3a 01 00 00	 jmp	 $LN2@LoadItemLi
$LN7@LoadItemLi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00132	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00136	8d 71 30	 lea	 esi, DWORD PTR [ecx+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2219 :         if (_Large_string_engaged()) {

  00139	72 02		 jb	 SHORT $LN40@LoadItemLi

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  0013b	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN40@LoadItemLi:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 123  : 		DWORD dwItemVNum=atoi(c_rstrID.c_str());

  0013d	51		 push	 ecx
  0013e	e8 00 00 00 00	 call	 __atoi64
  00143	83 c4 04	 add	 esp, 4
  00146	89 85 8c fc ff
	ff		 mov	 DWORD PTR _dwItemVNum$1$[ebp], eax

; 124  : 
; 125  : 		CItemData * pItemData = MakeItemData(dwItemVNum);

  0014c	8b cf		 mov	 ecx, edi
  0014e	50		 push	 eax
  0014f	e8 00 00 00 00	 call	 ?MakeItemData@CItemManager@@QAEPAVCItemData@@K@Z ; CItemManager::MakeItemData

; 126  : 
; 127  : 		extern BOOL USE_VIETNAM_CONVERT_WEAPON_VNUM;
; 128  : 		if (USE_VIETNAM_CONVERT_WEAPON_VNUM)

  00154	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?USE_VIETNAM_CONVERT_WEAPON_VNUM@@3HA, 0 ; USE_VIETNAM_CONVERT_WEAPON_VNUM
  0015b	8b f8		 mov	 edi, eax
  0015d	0f 84 bf 00 00
	00		 je	 $LN8@LoadItemLi

; 129  : 		{
; 130  : 			extern DWORD Vietnam_ConvertWeaponVnum(DWORD vnum);
; 131  : 			DWORD dwMildItemVnum = Vietnam_ConvertWeaponVnum(dwItemVNum);

  00163	ff b5 8c fc ff
	ff		 push	 DWORD PTR _dwItemVNum$1$[ebp]
  00169	e8 00 00 00 00	 call	 ?Vietnam_ConvertWeaponVnum@@YAKK@Z ; Vietnam_ConvertWeaponVnum
  0016e	8b c8		 mov	 ecx, eax
  00170	83 c4 04	 add	 esp, 4

; 132  : 			if (dwMildItemVnum == dwItemVNum)

  00173	3b 8d 8c fc ff
	ff		 cmp	 ecx, DWORD PTR _dwItemVNum$1$[ebp]
  00179	75 3f		 jne	 SHORT $LN10@LoadItemLi

; 133  : 			{
; 134  : 				if (4 == TokenVector.size())

  0017b	8b 85 9c fc ff
	ff		 mov	 eax, DWORD PTR _TokenVector$[ebp+4]
  00181	8b 8d 98 fc ff
	ff		 mov	 ecx, DWORD PTR _TokenVector$[ebp]
  00187	2b c1		 sub	 eax, ecx
  00189	83 e8 60	 sub	 eax, 96			; 00000060H
  0018c	83 f8 18	 cmp	 eax, 24			; 00000018H
  0018f	73 19		 jae	 SHORT $LN12@LoadItemLi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00191	83 79 5c 10	 cmp	 DWORD PTR [ecx+92], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00195	8d 41 48	 lea	 eax, DWORD PTR [ecx+72]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2219 :         if (_Large_string_engaged()) {

  00198	72 02		 jb	 SHORT $LN51@LoadItemLi

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  0019a	8b 00		 mov	 eax, DWORD PTR [eax]
$LN51@LoadItemLi:

; 2227 :         return _BUF_SIZE <= _Myres;

  0019c	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2219 :         if (_Large_string_engaged()) {

  001a0	72 12		 jb	 SHORT $LN13@LoadItemLi

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  001a2	8b 36		 mov	 esi, DWORD PTR [esi]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 143  : 			}

  001a4	50		 push	 eax
  001a5	e9 ae 00 00 00	 jmp	 $LN110@LoadItemLi
$LN12@LoadItemLi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  001aa	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2219 :         if (_Large_string_engaged()) {

  001ae	72 02		 jb	 SHORT $LN65@LoadItemLi

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  001b0	8b 36		 mov	 esi, DWORD PTR [esi]
$LN65@LoadItemLi:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 141  : 					pItemData->SetDefaultItemData(c_rstrIcon.c_str());

  001b2	33 c0		 xor	 eax, eax
$LN13@LoadItemLi:

; 143  : 			}

  001b4	50		 push	 eax
  001b5	e9 9e 00 00 00	 jmp	 $LN110@LoadItemLi
$LN10@LoadItemLi:

; 144  : 			else
; 145  : 			{
; 146  : 				DWORD dwMildBaseVnum = dwMildItemVnum / 10 * 10;

  001ba	b8 cd cc cc cc	 mov	 eax, -858993459		; cccccccdH
  001bf	f7 e1		 mul	 ecx

; 147  : 				char szMildIconPath[MAX_PATH];				
; 148  : 				sprintf(szMildIconPath, "icon/item/%.5d.tga", dwMildBaseVnum);

  001c1	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szMildIconPath$3[ebp]
  001c7	c1 ea 03	 shr	 edx, 3
  001ca	8d 34 92	 lea	 esi, DWORD PTR [edx+edx*4]
  001cd	03 f6		 add	 esi, esi
  001cf	56		 push	 esi
  001d0	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@MGMLGJGK@icon?1item?1?$CF?45d?4tga@
  001d5	50		 push	 eax
  001d6	e8 00 00 00 00	 call	 _sprintf

; 149  : 				if (4 == TokenVector.size())

  001db	8b 85 9c fc ff
	ff		 mov	 eax, DWORD PTR _TokenVector$[ebp+4]
  001e1	83 c4 0c	 add	 esp, 12			; 0000000cH
  001e4	2b 85 98 fc ff
	ff		 sub	 eax, DWORD PTR _TokenVector$[ebp]
  001ea	83 e8 60	 sub	 eax, 96			; 00000060H
  001ed	83 f8 18	 cmp	 eax, 24			; 00000018H
  001f0	73 25		 jae	 SHORT $LN14@LoadItemLi

; 150  : 				{
; 151  : 					char szMildModelPath[MAX_PATH];
; 152  : 					sprintf(szMildModelPath, "d:/ymir work/item/weapon/%.5d.gr2", dwMildBaseVnum);	

  001f2	56		 push	 esi
  001f3	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _szMildModelPath$2[ebp]
  001f9	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@GKBFKKKF@d?3?1ymir?5work?1item?1weapon?1?$CF?45d?4g@
  001fe	50		 push	 eax
  001ff	e8 00 00 00 00	 call	 _sprintf
  00204	83 c4 0c	 add	 esp, 12			; 0000000cH

; 153  : 					pItemData->SetDefaultItemData(szMildIconPath, szMildModelPath);

  00207	8d 85 e8 fd ff
	ff		 lea	 eax, DWORD PTR _szMildModelPath$2[ebp]
  0020d	50		 push	 eax
  0020e	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szMildIconPath$3[ebp]
  00214	50		 push	 eax

; 154  : 				}

  00215	eb 42		 jmp	 SHORT $LN111@LoadItemLi
$LN14@LoadItemLi:

; 155  : 				else
; 156  : 				{
; 157  : 					pItemData->SetDefaultItemData(szMildIconPath);

  00217	6a 00		 push	 0
  00219	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _szMildIconPath$3[ebp]
  0021f	50		 push	 eax

; 158  : 				}
; 159  : 			}
; 160  : 		}

  00220	eb 37		 jmp	 SHORT $LN111@LoadItemLi
$LN8@LoadItemLi:

; 161  : 		else
; 162  : 		{
; 163  : 			if (4 == TokenVector.size())

  00222	8b 85 9c fc ff
	ff		 mov	 eax, DWORD PTR _TokenVector$[ebp+4]
  00228	8b 8d 98 fc ff
	ff		 mov	 ecx, DWORD PTR _TokenVector$[ebp]
  0022e	2b c1		 sub	 eax, ecx
  00230	83 e8 60	 sub	 eax, 96			; 00000060H
  00233	83 f8 18	 cmp	 eax, 24			; 00000018H
  00236	73 16		 jae	 SHORT $LN16@LoadItemLi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00238	83 79 5c 10	 cmp	 DWORD PTR [ecx+92], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0023c	8d 41 48	 lea	 eax, DWORD PTR [ecx+72]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2219 :         if (_Large_string_engaged()) {

  0023f	72 02		 jb	 SHORT $LN78@LoadItemLi

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  00241	8b 00		 mov	 eax, DWORD PTR [eax]
$LN78@LoadItemLi:

; 2227 :         return _BUF_SIZE <= _Myres;

  00243	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2219 :         if (_Large_string_engaged()) {

  00247	72 02		 jb	 SHORT $LN85@LoadItemLi

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  00249	8b 36		 mov	 esi, DWORD PTR [esi]
$LN85@LoadItemLi:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 166  : 				pItemData->SetDefaultItemData(c_rstrIcon.c_str(), c_rstrModelFileName.c_str());

  0024b	50		 push	 eax

; 167  : 			}

  0024c	eb 0a		 jmp	 SHORT $LN110@LoadItemLi
$LN16@LoadItemLi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0024e	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2219 :         if (_Large_string_engaged()) {

  00252	72 02		 jb	 SHORT $LN92@LoadItemLi

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  00254	8b 36		 mov	 esi, DWORD PTR [esi]
$LN92@LoadItemLi:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 170  : 				pItemData->SetDefaultItemData(c_rstrIcon.c_str());

  00256	6a 00		 push	 0
$LN110@LoadItemLi:

; 108  :     for (DWORD i = 0; i < textFileLoader.GetLineCount(); ++i)

  00258	56		 push	 esi
$LN111@LoadItemLi:
  00259	8b cf		 mov	 ecx, edi
  0025b	e8 00 00 00 00	 call	 ?SetDefaultItemData@CItemData@@QAEXPBD0@Z ; CItemData::SetDefaultItemData
  00260	8b b5 94 fc ff
	ff		 mov	 esi, DWORD PTR _c_szFileName$GSCopy$1$[ebp]
  00266	8b bd 90 fc ff
	ff		 mov	 edi, DWORD PTR _this$GSCopy$1$[ebp]
$LN2@LoadItemLi:
  0026c	8d 8d 78 fc ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$[ebp]
  00272	43		 inc	 ebx
  00273	e8 00 00 00 00	 call	 ?GetLineCount@CMemoryTextFileLoader@@QAEKXZ ; CMemoryTextFileLoader::GetLineCount
  00278	3b d8		 cmp	 ebx, eax
  0027a	0f 82 60 fe ff
	ff		 jb	 $LL4@LoadItemLi
$LN3@LoadItemLi:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00280	8b 85 98 fc ff
	ff		 mov	 eax, DWORD PTR _TokenVector$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 175  : 	return true;

  00286	b3 01		 mov	 bl, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00288	85 c0		 test	 eax, eax
  0028a	74 60		 je	 SHORT $LN99@LoadItemLi

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0028c	8d 8d 98 fc ff
	ff		 lea	 ecx, DWORD PTR _TokenVector$[ebp]
  00292	51		 push	 ecx
  00293	ff b5 9c fc ff
	ff		 push	 DWORD PTR _TokenVector$[ebp+4]
  00299	50		 push	 eax
  0029a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0029f	8b 8d a0 fc ff
	ff		 mov	 ecx, DWORD PTR _TokenVector$[ebp+8]
  002a5	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  002aa	8b b5 98 fc ff
	ff		 mov	 esi, DWORD PTR _TokenVector$[ebp]
  002b0	2b ce		 sub	 ecx, esi
  002b2	f7 e9		 imul	 ecx
  002b4	c1 fa 02	 sar	 edx, 2
  002b7	8b c2		 mov	 eax, edx
  002b9	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  002bc	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002be	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  002c1	c1 e0 03	 shl	 eax, 3
  002c4	50		 push	 eax
  002c5	56		 push	 esi
  002c6	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  002cb	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  002ce	c7 85 98 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _TokenVector$[ebp], 0

; 1699 :             _Mylast  = pointer();

  002d8	c7 85 9c fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _TokenVector$[ebp+4], 0

; 1700 :             _Myend   = pointer();

  002e2	c7 85 a0 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _TokenVector$[ebp+8], 0
$LN99@LoadItemLi:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 175  : 	return true;

  002ec	8d 8d 78 fc ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$[ebp]
  002f2	e8 00 00 00 00	 call	 ??1CMemoryTextFileLoader@@UAE@XZ ; CMemoryTextFileLoader::~CMemoryTextFileLoader
$LN22@LoadItemLi:
  002f7	8d 8d a4 fc ff
	ff		 lea	 ecx, DWORD PTR _File$[ebp]
  002fd	e8 00 00 00 00	 call	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
  00302	8a c3		 mov	 al, bl

; 176  : }

  00304	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00307	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0030e	59		 pop	 ecx
  0030f	5f		 pop	 edi
  00310	5e		 pop	 esi
  00311	5b		 pop	 ebx
  00312	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00315	33 cd		 xor	 ecx, ebp
  00317	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0031c	8b e5		 mov	 esp, ebp
  0031e	5d		 pop	 ebp
  0031f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadItemList@CItemManager@@QAE_NPBD@Z$0:
  00000	8d 8d a4 fc ff
	ff		 lea	 ecx, DWORD PTR _File$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
__unwindfunclet$?LoadItemList@CItemManager@@QAE_NPBD@Z$1:
  0000b	8d 8d 78 fc ff
	ff		 lea	 ecx, DWORD PTR _textFileLoader$[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1CMemoryTextFileLoader@@UAE@XZ ; CMemoryTextFileLoader::~CMemoryTextFileLoader
__unwindfunclet$?LoadItemList@CItemManager@@QAE_NPBD@Z$2:
  00016	8d 8d 98 fc ff
	ff		 lea	 ecx, DWORD PTR _TokenVector$[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
  00025	cc		 int	 3
__ehhandler$?LoadItemList@CItemManager@@QAE_NPBD@Z:
  00026	90		 npad	 1
  00027	90		 npad	 1
  00028	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002f	8b 8a 74 fc ff
	ff		 mov	 ecx, DWORD PTR [edx-908]
  00035	33 c8		 xor	 ecx, eax
  00037	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003c	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0003f	33 c8		 xor	 ecx, eax
  00041	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00046	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadItemList@CItemManager@@QAE_NPBD@Z
  0004b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadItemList@CItemManager@@QAE_NPBD@Z ENDP		; CItemManager::LoadItemList
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
;	COMDAT ?LoadItemDesc@CItemManager@@QAE_NPBD@Z
_TEXT	SEGMENT
__Loc$2 = -452						; size = 12
_kTextFileLoader$ = -440				; size = 16
_c_rstSumm$1$ = -424					; size = 4
_c_rstDesc$1$ = -420					; size = 4
_pvData$ = -416						; size = 4
_this$1$ = -412						; size = 4
_dwVnum$3 = -408					; size = 4
_kTokenVector$ = -404					; size = 12
$T4 = -389						; size = 1
_kFile$ = -388						; size = 324
$T5 = -64						; size = 24
_stTemp$ = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
?LoadItemDesc@CItemManager@@QAE_NPBD@Z PROC		; CItemManager::LoadItemDesc, COMDAT
; _this$ = ecx

; 198  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?LoadItemDesc@CItemManager@@QAE_NPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec b8 01 00
	00		 sub	 esp, 440		; 000001b8H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	89 8d 64 fe ff
	ff		 mov	 DWORD PTR _this$1$[ebp], ecx
  00033	8b 75 08	 mov	 esi, DWORD PTR _c_szFileName$[ebp]

; 199  : 	const VOID* pvData;
; 200  : 	CMappedFile kFile;

  00036	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR _kFile$[ebp]
  0003c	e8 00 00 00 00	 call	 ??0CMappedFile@@QAE@XZ	; CMappedFile::CMappedFile

; 201  : 	if (!CEterPackManager::Instance().Get(kFile, c_szFileName, &pvData))

  00041	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEterPackManager@@@@0PAVCEterPackManager@@A ; CSingleton<CEterPackManager>::ms_singleton
  00047	8d 85 60 fe ff
	ff		 lea	 eax, DWORD PTR _pvData$[ebp]
  0004d	50		 push	 eax
  0004e	56		 push	 esi
  0004f	8d 85 7c fe ff
	ff		 lea	 eax, DWORD PTR _kFile$[ebp]
  00055	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?Get@CEterPackManager@@QAE_NAAVCMappedFile@@PBDPAPBX@Z ; CEterPackManager::Get
  00062	84 c0		 test	 al, al
  00064	75 1a		 jne	 SHORT $LN7@LoadItemDe

; 202  : 	{
; 203  : 		Tracenf("CItemManager::LoadItemDesc(c_szFileName=%s) - Load Error", c_szFileName);

  00066	56		 push	 esi
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@OBCJLLMB@CItemManager?3?3LoadItemDesc?$CIc_sz@
  0006c	e8 00 00 00 00	 call	 ?Tracenf@@YAXPBDZZ	; Tracenf
  00071	83 c4 08	 add	 esp, 8
  00074	c6 85 7b fe ff
	ff 00		 mov	 BYTE PTR $T4[ebp], 0
  0007b	e9 c4 02 00 00	 jmp	 $LN16@LoadItemDe
$LN7@LoadItemDe:

; 204  : 		return false;
; 205  : 	}
; 206  : 
; 207  : 	CMemoryTextFileLoader kTextFileLoader;

  00080	8d 8d 48 fe ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
  00086	e8 00 00 00 00	 call	 ??0CMemoryTextFileLoader@@QAE@XZ ; CMemoryTextFileLoader::CMemoryTextFileLoader

; 208  : 	kTextFileLoader.Bind(kFile.Size(), pvData);

  0008b	ff b5 60 fe ff
	ff		 push	 DWORD PTR _pvData$[ebp]
  00091	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR _kFile$[ebp]
  00097	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0009b	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
  000a0	50		 push	 eax
  000a1	8d 8d 48 fe ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
  000a7	e8 00 00 00 00	 call	 ?Bind@CMemoryTextFileLoader@@QAEXHPBX@Z ; CMemoryTextFileLoader::Bind
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4377 :         _Mypair._Myval2._Mysize = 0;

  000ac	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _stTemp$[ebp+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000b3	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _stTemp$[ebp+20], 15 ; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000ba	c6 45 d8 00	 mov	 BYTE PTR _stTemp$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000be	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _kTokenVector$[ebp], 0
  000c8	c7 85 70 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _kTokenVector$[ebp+4], 0
  000d2	c7 85 74 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _kTokenVector$[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 213  : 	for (DWORD i = 0; i < kTextFileLoader.GetLineCount(); ++i)

  000dc	8d 8d 48 fe ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
  000e2	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000e6	33 ff		 xor	 edi, edi
  000e8	e8 00 00 00 00	 call	 ?GetLineCount@CMemoryTextFileLoader@@QAEKXZ ; CMemoryTextFileLoader::GetLineCount
  000ed	85 c0		 test	 eax, eax
  000ef	0f 84 ac 01 00
	00		 je	 $LN3@LoadItemDe
$LL4@LoadItemDe:

; 214  : 	{
; 215  : 		if (!kTextFileLoader.SplitLineByTab(i, &kTokenVector))

  000f5	8d 85 6c fe ff
	ff		 lea	 eax, DWORD PTR _kTokenVector$[ebp]
  000fb	50		 push	 eax
  000fc	57		 push	 edi
  000fd	8d 8d 48 fe ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
  00103	e8 00 00 00 00	 call	 ?SplitLineByTab@CMemoryTextFileLoader@@QAE_NKPAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@Z ; CMemoryTextFileLoader::SplitLineByTab
  00108	84 c0		 test	 al, al
  0010a	0f 84 7d 01 00
	00		 je	 $LN2@LoadItemDe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00110	8b 8d 70 fe ff
	ff		 mov	 ecx, DWORD PTR _kTokenVector$[ebp+4]
  00116	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0011b	8b b5 6c fe ff
	ff		 mov	 esi, DWORD PTR _kTokenVector$[ebp]
  00121	8b d1		 mov	 edx, ecx
  00123	2b d6		 sub	 edx, esi
  00125	f7 ea		 imul	 edx
  00127	c1 fa 02	 sar	 edx, 2
  0012a	8b c2		 mov	 eax, edx
  0012c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0012f	03 c2		 add	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 218  : 		while (kTokenVector.size()<ITEMDESC_COL_NUM)

  00131	83 f8 04	 cmp	 eax, 4
  00134	0f 83 af 00 00
	00		 jae	 $LN6@LoadItemDe
  0013a	66 0f 1f 44 00
	00		 npad	 6
$LL5@LoadItemDe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00140	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00147	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 0

; 3047 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0014e	c6 45 c0 00	 mov	 BYTE PTR $T5[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 219  : 			kTokenVector.push_back("");

  00152	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00156	3b 8d 74 fe ff
	ff		 cmp	 ecx, DWORD PTR _kTokenVector$[ebp+8]
  0015c	74 32		 je	 SHORT $LN88@LoadItemDe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2684 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0015e	0f 10 45 c0	 movups	 xmm0, XMMWORD PTR $T5[ebp]

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00162	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00169	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0016e	c6 45 c0 00	 mov	 BYTE PTR $T5[ebp], 0

; 2684 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00172	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  00175	f3 0f 7e 45 d0	 movq	 xmm0, QWORD PTR $T5[ebp+16]
  0017a	66 0f d6 41 10	 movq	 QWORD PTR [ecx+16], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 690  :         ++_Mylast;

  0017f	8b 8d 70 fe ff
	ff		 mov	 ecx, DWORD PTR _kTokenVector$[ebp+4]
  00185	83 c1 18	 add	 ecx, 24			; 00000018H
  00188	89 8d 70 fe ff
	ff		 mov	 DWORD PTR _kTokenVector$[ebp+4], ecx

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0018e	eb 19		 jmp	 SHORT $LN87@LoadItemDe
$LN88@LoadItemDe:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00190	8d 45 c0	 lea	 eax, DWORD PTR $T5[ebp]
  00193	50		 push	 eax
  00194	51		 push	 ecx
  00195	8d 8d 6c fe ff
	ff		 lea	 ecx, DWORD PTR _kTokenVector$[ebp]
  0019b	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAEPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@QAV21@$$QAV21@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Emplace_reallocate<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  001a0	8b 8d 70 fe ff
	ff		 mov	 ecx, DWORD PTR _kTokenVector$[ebp+4]
  001a6	8b 45 d4	 mov	 eax, DWORD PTR $T5[ebp+20]
$LN87@LoadItemDe:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 219  : 			kTokenVector.push_back("");

  001a9	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  001ad	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001b0	72 13		 jb	 SHORT $LN113@LoadItemDe

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001b2	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001b3	50		 push	 eax
  001b4	ff 75 c0	 push	 DWORD PTR $T5[ebp]
  001b7	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001bc	8b 8d 70 fe ff
	ff		 mov	 ecx, DWORD PTR _kTokenVector$[ebp+4]
  001c2	83 c4 08	 add	 esp, 8
$LN113@LoadItemDe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  001c5	8b b5 6c fe ff
	ff		 mov	 esi, DWORD PTR _kTokenVector$[ebp]
  001cb	8b d1		 mov	 edx, ecx
  001cd	2b d6		 sub	 edx, esi
  001cf	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  001d4	f7 ea		 imul	 edx
  001d6	c1 fa 02	 sar	 edx, 2
  001d9	8b c2		 mov	 eax, edx
  001db	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001de	03 c2		 add	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 218  : 		while (kTokenVector.size()<ITEMDESC_COL_NUM)

  001e0	83 f8 04	 cmp	 eax, 4
  001e3	0f 82 57 ff ff
	ff		 jb	 $LL5@LoadItemDe
$LN6@LoadItemDe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  001e9	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2219 :         if (_Large_string_engaged()) {

  001ed	72 02		 jb	 SHORT $LN124@LoadItemDe

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  001ef	8b 36		 mov	 esi, DWORD PTR [esi]
$LN124@LoadItemDe:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 223  : 		DWORD dwVnum=atoi(kTokenVector[ITEMDESC_COL_VNUM].c_str());

  001f1	56		 push	 esi
  001f2	e8 00 00 00 00	 call	 __atoi64
  001f7	89 85 68 fe ff
	ff		 mov	 DWORD PTR _dwVnum$3[ebp], eax
  001fd	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00200	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _kTokenVector$[ebp]
  00206	8d 48 30	 lea	 ecx, DWORD PTR [eax+48]
  00209	83 c0 48	 add	 eax, 72			; 00000048H
  0020c	89 8d 5c fe ff
	ff		 mov	 DWORD PTR _c_rstDesc$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00212	8d 8d 68 fe ff
	ff		 lea	 ecx, DWORD PTR _dwVnum$3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00218	89 85 58 fe ff
	ff		 mov	 DWORD PTR _c_rstSumm$1$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 226  : 		TItemMap::iterator f = m_ItemMap.find(dwVnum);

  0021e	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR _this$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00224	51		 push	 ecx
  00225	8d 8d 3c fe ff
	ff		 lea	 ecx, DWORD PTR __Loc$2[ebp]
  0022b	51		 push	 ecx
  0022c	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  0022f	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00234	8b b5 44 fe ff
	ff		 mov	 esi, DWORD PTR __Loc$2[ebp+8]
  0023a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0023e	75 4d		 jne	 SHORT $LN2@LoadItemDe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  00240	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _dwVnum$3[ebp]
  00246	3b 46 10	 cmp	 eax, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00249	72 42		 jb	 SHORT $LN2@LoadItemDe

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0024b	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR _this$1$[ebp]
  00251	39 70 04	 cmp	 DWORD PTR [eax+4], esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 227  : 		if (m_ItemMap.end() == f)

  00254	74 37		 je	 SHORT $LN2@LoadItemDe

; 228  : 			continue;
; 229  : 
; 230  : 		CItemData* pkItemDataFind = f->second;

  00256	8b 76 14	 mov	 esi, DWORD PTR [esi+20]

; 231  : 
; 232  : 		pkItemDataFind->SetDescription(__SnapString(c_rstDesc, stTemp));

  00259	8d 45 d8	 lea	 eax, DWORD PTR _stTemp$[ebp]
  0025c	50		 push	 eax
  0025d	ff b5 5c fe ff
	ff		 push	 DWORD PTR _c_rstDesc$1$[ebp]
  00263	e8 00 00 00 00	 call	 ?__SnapString@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@AAV12@@Z ; __SnapString
  00268	83 c4 08	 add	 esp, 8
  0026b	8b ce		 mov	 ecx, esi
  0026d	50		 push	 eax
  0026e	e8 00 00 00 00	 call	 ?SetDescription@CItemData@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CItemData::SetDescription

; 233  : 		pkItemDataFind->SetSummary(__SnapString(c_rstSumm, stTemp));

  00273	8d 45 d8	 lea	 eax, DWORD PTR _stTemp$[ebp]
  00276	50		 push	 eax
  00277	ff b5 58 fe ff
	ff		 push	 DWORD PTR _c_rstSumm$1$[ebp]
  0027d	e8 00 00 00 00	 call	 ?__SnapString@@YAABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@AAV12@@Z ; __SnapString
  00282	83 c4 08	 add	 esp, 8
  00285	8b ce		 mov	 ecx, esi
  00287	50		 push	 eax
  00288	e8 00 00 00 00	 call	 ?SetSummary@CItemData@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CItemData::SetSummary
$LN2@LoadItemDe:

; 213  : 	for (DWORD i = 0; i < kTextFileLoader.GetLineCount(); ++i)

  0028d	8d 8d 48 fe ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
  00293	47		 inc	 edi
  00294	e8 00 00 00 00	 call	 ?GetLineCount@CMemoryTextFileLoader@@QAEKXZ ; CMemoryTextFileLoader::GetLineCount
  00299	3b f8		 cmp	 edi, eax
  0029b	0f 82 54 fe ff
	ff		 jb	 $LL4@LoadItemDe
$LN3@LoadItemDe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  002a1	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _kTokenVector$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 235  : 	return true;

  002a7	c6 85 7b fe ff
	ff 01		 mov	 BYTE PTR $T4[ebp], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  002ae	85 c0		 test	 eax, eax
  002b0	74 60		 je	 SHORT $LN168@LoadItemDe

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  002b2	8d 8d 6c fe ff
	ff		 lea	 ecx, DWORD PTR _kTokenVector$[ebp]
  002b8	51		 push	 ecx
  002b9	ff b5 70 fe ff
	ff		 push	 DWORD PTR _kTokenVector$[ebp+4]
  002bf	50		 push	 eax
  002c0	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  002c5	8b 8d 74 fe ff
	ff		 mov	 ecx, DWORD PTR _kTokenVector$[ebp+8]
  002cb	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  002d0	8b b5 6c fe ff
	ff		 mov	 esi, DWORD PTR _kTokenVector$[ebp]
  002d6	2b ce		 sub	 ecx, esi
  002d8	f7 e9		 imul	 ecx
  002da	c1 fa 02	 sar	 edx, 2
  002dd	8b c2		 mov	 eax, edx
  002df	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  002e2	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  002e4	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  002e7	c1 e0 03	 shl	 eax, 3
  002ea	50		 push	 eax
  002eb	56		 push	 esi
  002ec	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  002f1	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  002f4	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _kTokenVector$[ebp], 0

; 1699 :             _Mylast  = pointer();

  002fe	c7 85 70 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _kTokenVector$[ebp+4], 0

; 1700 :             _Myend   = pointer();

  00308	c7 85 74 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _kTokenVector$[ebp+8], 0
$LN168@LoadItemDe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00312	8b 45 ec	 mov	 eax, DWORD PTR _stTemp$[ebp+20]
  00315	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00318	72 0d		 jb	 SHORT $LN178@LoadItemDe

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0031a	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0031b	50		 push	 eax
  0031c	ff 75 d8	 push	 DWORD PTR _stTemp$[ebp]
  0031f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00324	83 c4 08	 add	 esp, 8
$LN178@LoadItemDe:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 235  : 	return true;

  00327	8d 8d 48 fe ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  0032d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _stTemp$[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00334	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR _stTemp$[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0033b	c6 45 d8 00	 mov	 BYTE PTR _stTemp$[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 235  : 	return true;

  0033f	e8 00 00 00 00	 call	 ??1CMemoryTextFileLoader@@UAE@XZ ; CMemoryTextFileLoader::~CMemoryTextFileLoader
$LN16@LoadItemDe:
  00344	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR _kFile$[ebp]
  0034a	e8 00 00 00 00	 call	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
  0034f	8a 85 7b fe ff
	ff		 mov	 al, BYTE PTR $T4[ebp]

; 236  : }

  00355	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00358	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0035f	59		 pop	 ecx
  00360	5f		 pop	 edi
  00361	5e		 pop	 esi
  00362	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00365	33 cd		 xor	 ecx, ebp
  00367	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0036c	8b e5		 mov	 esp, ebp
  0036e	5d		 pop	 ebp
  0036f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$0:
  00000	8d 8d 7c fe ff
	ff		 lea	 ecx, DWORD PTR _kFile$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$1:
  0000b	8d 8d 48 fe ff
	ff		 lea	 ecx, DWORD PTR _kTextFileLoader$[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1CMemoryTextFileLoader@@UAE@XZ ; CMemoryTextFileLoader::~CMemoryTextFileLoader
__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$2:
  00016	8d 4d d8	 lea	 ecx, DWORD PTR _stTemp$[ebp]
  00019	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$3:
  0001e	8d 8d 6c fe ff
	ff		 lea	 ecx, DWORD PTR _kTokenVector$[ebp]
  00024	e9 00 00 00 00	 jmp	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
__unwindfunclet$?LoadItemDesc@CItemManager@@QAE_NPBD@Z$4:
  00029	8d 4d c0	 lea	 ecx, DWORD PTR $T5[ebp]
  0002c	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00031	cc		 int	 3
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
  00035	cc		 int	 3
__ehhandler$?LoadItemDesc@CItemManager@@QAE_NPBD@Z:
  00036	90		 npad	 1
  00037	90		 npad	 1
  00038	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003f	8b 8a 3c fe ff
	ff		 mov	 ecx, DWORD PTR [edx-452]
  00045	33 c8		 xor	 ecx, eax
  00047	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004c	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0004f	33 c8		 xor	 ecx, eax
  00051	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00056	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?LoadItemDesc@CItemManager@@QAE_NPBD@Z
  0005b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?LoadItemDesc@CItemManager@@QAE_NPBD@Z ENDP		; CItemManager::LoadItemDesc
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
;	COMDAT ?GetItemDataPointer@CItemManager@@QAEHKPAPAVCItemData@@@Z
_TEXT	SEGMENT
__Loc$1 = -16						; size = 12
_this$1$ = -4						; size = 4
_p$1$ = 8						; size = 4
_dwItemID$ = 8						; size = 4
_ppItemData$ = 12					; size = 4
?GetItemDataPointer@CItemManager@@QAEHKPAPAVCItemData@@@Z PROC ; CItemManager::GetItemDataPointer, COMDAT
; _this$ = ecx

; 48   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	57		 push	 edi

; 49   : 	if (0 == dwItemID)

  00007	8b 7d 08	 mov	 edi, DWORD PTR _dwItemID$[ebp]
  0000a	89 4d fc	 mov	 DWORD PTR _this$1$[ebp], ecx
  0000d	85 ff		 test	 edi, edi
  0000f	75 09		 jne	 SHORT $LN5@GetItemDat

; 50   : 		return FALSE;

  00011	33 c0		 xor	 eax, eax
  00013	5f		 pop	 edi

; 75   : }

  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
$LN5@GetItemDat:
  0001a	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0001b	8d 45 08	 lea	 eax, DWORD PTR _dwItemID$[ebp]
  0001e	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 52   : 	TItemMap::iterator f = m_ItemMap.find(dwItemID);

  0001f	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00022	8d 45 f0	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00025	8b ce		 mov	 ecx, esi
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0002d	8b 4d f8	 mov	 ecx, DWORD PTR __Loc$1[ebp+8]
  00030	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00034	75 1e		 jne	 SHORT $LN53@GetItemDat
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  00036	3b 79 10	 cmp	 edi, DWORD PTR [ecx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00039	72 19		 jb	 SHORT $LN53@GetItemDat

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0003b	39 0e		 cmp	 DWORD PTR [esi], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 54   : 	if (m_ItemMap.end() == f)

  0003d	74 15		 je	 SHORT $LN53@GetItemDat

; 70   : 	}
; 71   : 
; 72   : 	*ppItemData = f->second;

  0003f	8b 45 0c	 mov	 eax, DWORD PTR _ppItemData$[ebp]
  00042	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00045	5e		 pop	 esi
  00046	5f		 pop	 edi
  00047	89 08		 mov	 DWORD PTR [eax], ecx

; 73   : 
; 74   : 	return TRUE;

  00049	b8 01 00 00 00	 mov	 eax, 1

; 75   : }

  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
$LN53@GetItemDat:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00054	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 57   : 		for (int i = 0; i < n; i++)

  00057	33 f6		 xor	 esi, esi
  00059	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0005a	8b 58 10	 mov	 ebx, DWORD PTR [eax+16]
  0005d	2b 58 0c	 sub	 ebx, DWORD PTR [eax+12]
  00060	c1 fb 02	 sar	 ebx, 2
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 57   : 		for (int i = 0; i < n; i++)

  00063	85 db		 test	 ebx, ebx
  00065	7e 3f		 jle	 SHORT $LN54@GetItemDat
$LL4@GetItemDat:

; 58   : 		{
; 59   : 			CItemData * p = m_vec_ItemRange[i];

  00067	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0006a	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]

; 60   : 			const CItemData::TItemTable * pTable = p->GetTable(); 

  0006d	8b c8		 mov	 ecx, eax
  0006f	89 45 08	 mov	 DWORD PTR _p$1$[ebp], eax
  00072	e8 00 00 00 00	 call	 ?GetTable@CItemData@@QBEPBUSItemTable@1@XZ ; CItemData::GetTable

; 61   : 			if ((pTable->dwVnum < dwItemID) &&

  00077	8b 08		 mov	 ecx, DWORD PTR [eax]
  00079	3b cf		 cmp	 ecx, edi
  0007b	73 09		 jae	 SHORT $LN2@GetItemDat
  0007d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00080	03 c1		 add	 eax, ecx
  00082	3b f8		 cmp	 edi, eax
  00084	72 0a		 jb	 SHORT $LN47@GetItemDat
$LN2@GetItemDat:

; 57   : 		for (int i = 0; i < n; i++)

  00086	46		 inc	 esi
  00087	3b f3		 cmp	 esi, ebx
  00089	7d 1b		 jge	 SHORT $LN54@GetItemDat
  0008b	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  0008e	eb d7		 jmp	 SHORT $LL4@GetItemDat
$LN47@GetItemDat:

; 62   : 				dwItemID < (pTable->dwVnum + pTable->dwVnumRange))
; 63   : 			{
; 64   : 				*ppItemData = p;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _ppItemData$[ebp]
  00093	8b 4d 08	 mov	 ecx, DWORD PTR _p$1$[ebp]
  00096	5b		 pop	 ebx
  00097	5e		 pop	 esi
  00098	89 08		 mov	 DWORD PTR [eax], ecx

; 65   : 				return TRUE;

  0009a	b8 01 00 00 00	 mov	 eax, 1
  0009f	5f		 pop	 edi

; 75   : }

  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 08 00	 ret	 8
$LN54@GetItemDat:

; 66   : 			}
; 67   : 		}
; 68   : 		Tracef(" CItemManager::GetItemDataPointer - FIND ERROR [%d]\n", dwItemID);

  000a6	57		 push	 edi
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@GPLOHCFJ@?5CItemManager?3?3GetItemDataPoint@
  000ac	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef
  000b1	83 c4 08	 add	 esp, 8

; 69   : 		return FALSE;

  000b4	33 c0		 xor	 eax, eax
  000b6	5b		 pop	 ebx
  000b7	5e		 pop	 esi
  000b8	5f		 pop	 edi

; 75   : }

  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c2 08 00	 ret	 8
?GetItemDataPointer@CItemManager@@QAEHKPAPAVCItemData@@@Z ENDP ; CItemManager::GetItemDataPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
;	COMDAT ?GetSelectedItemDataPointer@CItemManager@@QAEPAVCItemData@@XZ
_TEXT	SEGMENT
?GetSelectedItemDataPointer@CItemManager@@QAEPAVCItemData@@XZ PROC ; CItemManager::GetSelectedItemDataPointer, COMDAT
; _this$ = ecx

; 44   : 	return m_pSelectedItemData;

  00000	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]

; 45   : }

  00003	c3		 ret	 0
?GetSelectedItemDataPointer@CItemManager@@QAEPAVCItemData@@XZ ENDP ; CItemManager::GetSelectedItemDataPointer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
;	COMDAT ?SelectItemData@CItemManager@@QAEHK@Z
_TEXT	SEGMENT
__Loc$1 = -16						; size = 12
_this$1$ = -4						; size = 4
_p$1$ = 8						; size = 4
_dwIndex$ = 8						; size = 4
?SelectItemData@CItemManager@@QAEHK@Z PROC		; CItemManager::SelectItemData, COMDAT
; _this$ = ecx

; 16   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0000b	8d 45 08	 lea	 eax, DWORD PTR _dwIndex$[ebp]
  0000e	50		 push	 eax
  0000f	8d 45 f0	 lea	 eax, DWORD PTR __Loc$1[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 16   : {

  00012	89 75 fc	 mov	 DWORD PTR _this$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00015	50		 push	 eax
  00016	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00019	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0001e	8b 45 f8	 mov	 eax, DWORD PTR __Loc$1[ebp+8]
  00021	8b 5d 08	 mov	 ebx, DWORD PTR _dwIndex$[ebp]
  00024	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00028	75 1e		 jne	 SHORT $LN52@SelectItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  0002a	3b 58 10	 cmp	 ebx, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0002d	72 19		 jb	 SHORT $LN52@SelectItem

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0002f	39 46 04	 cmp	 DWORD PTR [esi+4], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 19   : 	if (m_ItemMap.end() == f)

  00032	74 14		 je	 SHORT $LN52@SelectItem

; 35   : 	}
; 36   : 
; 37   : 	m_pSelectedItemData = f->second;

  00034	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  00037	5f		 pop	 edi
  00038	89 46 18	 mov	 DWORD PTR [esi+24], eax

; 38   : 
; 39   : 	return TRUE;

  0003b	b8 01 00 00 00	 mov	 eax, 1

; 40   : }

  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
$LN52@SelectItem:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00048	8b c6		 mov	 eax, esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 22   : 		for (int i = 0; i < n; i++)

  0004a	33 f6		 xor	 esi, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0004c	8b 78 10	 mov	 edi, DWORD PTR [eax+16]
  0004f	2b 78 0c	 sub	 edi, DWORD PTR [eax+12]
  00052	c1 ff 02	 sar	 edi, 2
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 22   : 		for (int i = 0; i < n; i++)

  00055	85 ff		 test	 edi, edi
  00057	7e 47		 jle	 SHORT $LN53@SelectItem
  00059	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@SelectItem:

; 23   : 		{
; 24   : 			CItemData * p = m_vec_ItemRange[i];

  00060	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00063	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]

; 25   : 			const CItemData::TItemTable * pTable = p->GetTable(); 

  00066	8b c8		 mov	 ecx, eax
  00068	89 45 08	 mov	 DWORD PTR _p$1$[ebp], eax
  0006b	e8 00 00 00 00	 call	 ?GetTable@CItemData@@QBEPBUSItemTable@1@XZ ; CItemData::GetTable

; 26   : 			if ((pTable->dwVnum < dwIndex) &&

  00070	8b 08		 mov	 ecx, DWORD PTR [eax]
  00072	3b cb		 cmp	 ecx, ebx
  00074	73 09		 jae	 SHORT $LN2@SelectItem
  00076	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00079	03 c1		 add	 eax, ecx
  0007b	3b d8		 cmp	 ebx, eax
  0007d	72 0a		 jb	 SHORT $LN46@SelectItem
$LN2@SelectItem:

; 22   : 		for (int i = 0; i < n; i++)

  0007f	46		 inc	 esi
  00080	3b f7		 cmp	 esi, edi
  00082	7d 1c		 jge	 SHORT $LN53@SelectItem
  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00087	eb d7		 jmp	 SHORT $LL4@SelectItem
$LN46@SelectItem:

; 27   : 				dwIndex < (pTable->dwVnum + pTable->dwVnumRange))
; 28   : 			{
; 29   : 				m_pSelectedItemData = p;

  00089	8b 75 fc	 mov	 esi, DWORD PTR _this$1$[ebp]
  0008c	8b 45 08	 mov	 eax, DWORD PTR _p$1$[ebp]
  0008f	5f		 pop	 edi
  00090	89 46 18	 mov	 DWORD PTR [esi+24], eax

; 30   : 				return TRUE;

  00093	b8 01 00 00 00	 mov	 eax, 1

; 40   : }

  00098	5e		 pop	 esi
  00099	5b		 pop	 ebx
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c2 04 00	 ret	 4
$LN53@SelectItem:

; 31   : 			}
; 32   : 		}
; 33   : 		Tracef(" CItemManager::SelectItemData - FIND ERROR [%d]\n", dwIndex);

  000a0	53		 push	 ebx
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@OJKGMCEF@?5CItemManager?3?3SelectItemData?5?9@
  000a6	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef
  000ab	83 c4 08	 add	 esp, 8

; 34   : 		return FALSE;

  000ae	33 c0		 xor	 eax, eax
  000b0	5f		 pop	 edi

; 40   : }

  000b1	5e		 pop	 esi
  000b2	5b		 pop	 ebx
  000b3	8b e5		 mov	 esp, ebp
  000b5	5d		 pop	 ebp
  000b6	c2 04 00	 ret	 4
?SelectItemData@CItemManager@@QAEHK@Z ENDP		; CItemManager::SelectItemData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
;	COMDAT ?Destroy@CItemManager@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CItemManager@@QAEXXZ PROC			; CItemManager::Destroy, COMDAT
; _this$ = ecx

; 390  : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  00002	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 390  : {

  00005	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  00006	8b 3b		 mov	 edi, DWORD PTR [ebx]

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00008	8b 37		 mov	 esi, DWORD PTR [edi]
  0000a	3b f7		 cmp	 esi, edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 392  : 	for (i=m_ItemMap.begin(); i!=m_ItemMap.end(); ++i)

  0000c	74 54		 je	 SHORT $LN3@Destroy
  0000e	66 90		 npad	 2
$LL28@Destroy:

; 393  : 		CItemData::Delete(i->second);

  00010	ff 76 14	 push	 DWORD PTR [esi+20]
  00013	e8 00 00 00 00	 call	 ?Delete@CItemData@@SAXPAV1@@Z ; CItemData::Delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  00018	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 393  : 		CItemData::Delete(i->second);

  0001b	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  0001e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00022	74 20		 je	 SHORT $LN27@Destroy

; 53   :             _Nodeptr _Pnode;
; 54   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  00024	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00027	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0002b	75 13		 jne	 SHORT $LN82@Destroy
  0002d	0f 1f 00	 npad	 3
$LL25@Destroy:
  00030	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00033	75 0b		 jne	 SHORT $LN82@Destroy

; 55   :                 _Ptr = _Pnode; // ==> parent while right subtree

  00035	8b f0		 mov	 esi, eax
  00037	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0003a	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0003e	74 f0		 je	 SHORT $LL25@Destroy
$LN82@Destroy:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())

  00040	8b f0		 mov	 esi, eax

; 59   :         } else {

  00042	eb 18		 jmp	 SHORT $LN32@Destroy
$LN27@Destroy:

; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

  00044	8b f0		 mov	 esi, eax

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00046	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00048	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0004c	75 0e		 jne	 SHORT $LN32@Destroy
  0004e	66 90		 npad	 2
$LL31@Destroy:
  00050	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  00052	8b f1		 mov	 esi, ecx
  00054	8b c8		 mov	 ecx, eax
  00056	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0005a	74 f4		 je	 SHORT $LL31@Destroy
$LN32@Destroy:

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0005c	8b 3b		 mov	 edi, DWORD PTR [ebx]

; 232  :         return this->_Ptr == _Right._Ptr;

  0005e	3b f7		 cmp	 esi, edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 392  : 	for (i=m_ItemMap.begin(); i!=m_ItemMap.end(); ++i)

  00060	75 ae		 jne	 SHORT $LL28@Destroy
$LN3@Destroy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1448 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  00062	8b 77 04	 mov	 esi, DWORD PTR [edi+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00065	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00069	75 25		 jne	 SHORT $LN56@Destroy
  0006b	0f 1f 44 00 00	 npad	 5
$LL55@Destroy:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00070	ff 76 08	 push	 DWORD PTR [esi+8]
  00073	8b cb		 mov	 ecx, ebx
  00075	53		 push	 ebx
  00076	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCItemData@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CItemData *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 598  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0007b	8b c6		 mov	 eax, esi

; 599  :     _Val         = static_cast<_Other&&>(_New_val);

  0007d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0007f	6a 18		 push	 24			; 00000018H
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00087	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0008a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0008e	74 e0		 je	 SHORT $LL55@Destroy
$LN56@Destroy:

; 1449 :         _Head->_Parent  = _Head;

  00090	89 7f 04	 mov	 DWORD PTR [edi+4], edi

; 1450 :         _Head->_Left    = _Head;

  00093	89 3f		 mov	 DWORD PTR [edi], edi

; 1451 :         _Head->_Right   = _Head;

  00095	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 1452 :         _Scary->_Mysize = 0;

  00098	5f		 pop	 edi
  00099	5e		 pop	 esi
  0009a	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0
  000a1	5b		 pop	 ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 396  : }

  000a2	c3		 ret	 0
?Destroy@CItemManager@@QAEXXZ ENDP			; CItemManager::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
;	COMDAT ??1CItemManager@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CItemManager@@UAE@XZ PROC				; CItemManager::~CItemManager, COMDAT
; _this$ = ecx

; 402  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CItemManager@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CItemManager@@6B@

; 403  : 	Destroy();

  0002b	e8 00 00 00 00	 call	 ?Destroy@CItemManager@@QAEXXZ ; CItemManager::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00030	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00033	85 c9		 test	 ecx, ecx
  00035	74 27		 je	 SHORT $LN6@CItemManag

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00037	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0003a	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003c	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003f	50		 push	 eax
  00040	51		 push	 ecx
  00041	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00046	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004d	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  00050	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 1700 :             _Myend   = pointer();

  00057	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
$LN6@CItemManag:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 404  : }

  0005e	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00061	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@KPAVCItemData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCItemData@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CItemData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CItemData *> >,0> >
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 19   : 	{ 

  00066	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CSingleton@VCItemManager@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0; 

  0006c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A, 0 ; CSingleton<CItemManager>::ms_singleton
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 404  : }

  00076	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00079	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00080	59		 pop	 ecx
  00081	5e		 pop	 esi
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
  00086	cc		 int	 3
  00087	cc		 int	 3
  00088	cc		 int	 3
  00089	cc		 int	 3
  0008a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CItemManager@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CItemManager@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CItemManager@@UAE@XZ ENDP				; CItemManager::~CItemManager
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp
;	COMDAT ??0CItemManager@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__Pnode$2 = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CItemManager@@QAE@XZ PROC				; CItemManager::CItemManager, COMDAT
; _this$ = ecx

; 399  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CItemManager@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 15   : 		ms_singleton = (T*) ((int) this + offset);

  0002d	89 1d 00 00 00
	00		 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A, ebx ; CSingleton<CItemManager>::ms_singleton
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 399  : {

  00033	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  00036	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CItemManager@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0003c	6a 18		 push	 24			; 00000018H
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 399  : {

  0003e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00045	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  00048	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  0004e	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00055	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  0005a	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  0005c	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  0005f	50		 push	 eax
  00060	56		 push	 esi
  00061	89 75 f0	 mov	 DWORD PTR __Pnode$2[ebp], esi
  00064	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  00069	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  0006c	50		 push	 eax
  0006d	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  00076	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  00079	50		 push	 eax
  0007a	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAVCItemData@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CItemData *>,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  00083	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H
  00089	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  0008c	89 37		 mov	 DWORD PTR [edi], esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 400  : }

  0008e	8b c3		 mov	 eax, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00090	c7 43 0c 00 00
	00 00		 mov	 DWORD PTR [ebx+12], 0
  00097	c7 43 10 00 00
	00 00		 mov	 DWORD PTR [ebx+16], 0
  0009e	c7 43 14 00 00
	00 00		 mov	 DWORD PTR [ebx+20], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\ItemManager.cpp

; 398  : CItemManager::CItemManager() : m_pSelectedItemData(NULL)

  000a5	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], 0

; 400  : }

  000ac	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000af	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b6	59		 pop	 ecx
  000b7	5f		 pop	 edi
  000b8	5e		 pop	 esi
  000b9	5b		 pop	 ebx
  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CItemManager@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CSingleton@VCItemManager@@@@UAE@XZ ; CSingleton<CItemManager>::~CSingleton<CItemManager>
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0CItemManager@@QAE@XZ:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CItemManager@@QAE@XZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CItemManager@@QAE@XZ ENDP				; CItemManager::CItemManager
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
;	COMDAT ??_G?$CSingleton@VCItemManager@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CSingleton@VCItemManager@@@@UAEPAXI@Z PROC	; CSingleton<CItemManager>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1

; 19   : 	{ 

  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CSingleton@VCItemManager@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0; 

  00010	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A, 0 ; CSingleton<CItemManager>::ms_singleton
  0001a	74 0b		 je	 SHORT $LN6@scalar
  0001c	6a 04		 push	 4
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00024	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_G?$CSingleton@VCItemManager@@@@UAEPAXI@Z ENDP	; CSingleton<CItemManager>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
;	COMDAT ??1?$CSingleton@VCItemManager@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CSingleton@VCItemManager@@@@UAE@XZ PROC		; CSingleton<CItemManager>::~CSingleton<CItemManager>, COMDAT
; _this$ = ecx

; 19   : 	{ 

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CSingleton@VCItemManager@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0; 

  00006	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A, 0 ; CSingleton<CItemManager>::ms_singleton

; 22   : 	}

  00010	c3		 ret	 0
??1?$CSingleton@VCItemManager@@@@UAE@XZ ENDP		; CSingleton<CItemManager>::~CSingleton<CItemManager>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z PROC ; std::_Pocma<std::allocator<char> >, COMDAT

; 909  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 910  :         _Left = _STD move(_Right);
; 911  :     }
; 912  : }

  00000	c2 00 00	 ret	 0
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ENDP ; std::_Pocma<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 271  : #if _HAS_IF_CONSTEXPR
; 272  :     if constexpr (is_array_v<_Ty>) {
; 273  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 274  :     } else
; 275  : #endif // _HAS_IF_CONSTEXPR
; 276  :     {
; 277  :         _Obj.~_Ty();
; 278  :     }
; 279  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength, COMDAT

; 1705 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 07		 mov	 eax, DWORD PTR [edi]
  00005	85 c0		 test	 eax, eax
  00007	74 45		 je	 SHORT $LN4@vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00009	57		 push	 edi
  0000a	ff 77 04	 push	 DWORD PTR [edi+4]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QAV10@AAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00013	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00016	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0001b	2b 0f		 sub	 ecx, DWORD PTR [edi]
  0001d	f7 e9		 imul	 ecx
  0001f	c1 fa 02	 sar	 edx, 2
  00022	8b c2		 mov	 eax, edx
  00024	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00027	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00029	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0002c	c1 e0 03	 shl	 eax, 3
  0002f	50		 push	 eax
  00030	ff 37		 push	 DWORD PTR [edi]
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00037	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003d	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  00040	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1700 :             _Myend   = pointer();

  00047	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN4@vector:
  0004e	5f		 pop	 edi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  0004f	c3		 ret	 0
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ?_Throw_tree_length_error@std@@YAXXZ
_TEXT	SEGMENT
?_Throw_tree_length_error@std@@YAXXZ PROC		; std::_Throw_tree_length_error, COMDAT

; 415  :     _Xlength_error("map/set too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Throw_tree:
  0000a	cc		 int	 3
?_Throw_tree_length_error@std@@YAXXZ ENDP		; std::_Throw_tree_length_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__New_ptr$1 = 12					; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 3042 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	57		 push	 edi

; 3043 :         // assign [_Ptr, _Ptr + _Count)
; 3044 :         if (_Count <= _Mypair._Myval2._Myres) {

  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b f9		 cmp	 edi, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2209 :         value_type* _Result = _Bx._Buf;

  00016	8b de		 mov	 ebx, esi

; 2227 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2210 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2211 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 1e		 mov	 ebx, DWORD PTR [esi]
$LN5@assign:

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0001f	57		 push	 edi
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 3045 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00026	53		 push	 ebx
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3047 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 3059 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4305 :         if (_New_size > max_size()) {

  0003e	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  00044	0f 87 91 00 00
	00		 ja	 $LN36@assign

; 4285 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b df		 mov	 ebx, edi
  0004c	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0004f	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4286 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 07		 jbe	 SHORT $LN19@assign

; 4287 :             return _Max;

  00057	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0005c	eb 1e		 jmp	 SHORT $LN18@assign
$LN19@assign:

; 4288 :         }
; 4289 : 
; 4290 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0005e	8b d1		 mov	 edx, ecx
  00060	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00065	d1 ea		 shr	 edx, 1
  00067	2b c2		 sub	 eax, edx
  00069	3b c8		 cmp	 ecx, eax
  0006b	76 07		 jbe	 SHORT $LN20@assign

; 4291 :             return _Max;

  0006d	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00072	eb 08		 jmp	 SHORT $LN18@assign
$LN20@assign:

; 4292 :         }
; 4293 : 
; 4294 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00074	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00077	3b d8		 cmp	 ebx, eax
  00079	0f 42 d8	 cmovb	 ebx, eax
$LN18@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4312 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0007c	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00085	57		 push	 edi
  00086	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4312 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00089	89 45 0c	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0008c	50		 push	 eax

; 4314 :         _Mypair._Myval2._Mysize = _New_size;

  0008d	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 4315 :         _Mypair._Myval2._Myres  = _New_capacity;

  00090	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00093	e8 00 00 00 00	 call	 _memcpy

; 3056 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00098	8b 5d 0c	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0009b	83 c4 10	 add	 esp, 16			; 00000010H

; 4317 :         if (_BUF_SIZE <= _Old_capacity) {

  0009e	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 3056 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a1	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 4317 :         if (_BUF_SIZE <= _Old_capacity) {

  000a5	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a8	72 19		 jb	 SHORT $LN13@assign

; 4318 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000aa	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ab	50		 push	 eax
  000ac	ff 36		 push	 DWORD PTR [esi]
  000ae	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3059 :     }

  000b3	83 c4 08	 add	 esp, 8

; 4319 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000b6	89 1e		 mov	 DWORD PTR [esi], ebx

; 3059 :     }

  000b8	8b c6		 mov	 eax, esi
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
$LN13@assign:

; 4321 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000c3	8d 45 0c	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000c6	50		 push	 eax
  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 3059 :     }

  000cd	83 c4 08	 add	 esp, 8
  000d0	8b c6		 mov	 eax, esi
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
$LN36@assign:

; 4306 :             _Xlen_string(); // result too long

  000db	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN33@assign:
  000e0	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2800 :     ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2227 :         return _BUF_SIZE <= _Myres;

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN4@basic_stri

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN4@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi

; 2801 :         _Tidy_deallocate();
; 2802 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2803 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2804 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2805 :         _Mypair._Myval2._Myproxy = nullptr;
; 2806 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2807 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2808 :     }

  00029	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2275 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __snprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__snprintf PROC						; COMDAT

; 1969 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 10	 push	 DWORD PTR __Format$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR __BufferCount$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00012	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	83 c9 01	 or	 ecx, 1
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00025	83 c9 ff	 or	 ecx, -1
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002b	85 c0		 test	 eax, eax
  0002d	0f 48 c1	 cmovs	 eax, ecx

; 1970 :         int _Result;
; 1971 :         va_list _ArgList;
; 1972 :         __crt_va_start(_ArgList, _Format);
; 1973 :     #pragma warning(suppress:28719)    // 28719
; 1974 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);
; 1975 :         __crt_va_end(_ArgList);
; 1976 :         return _Result;
; 1977 :     }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
__snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00011	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	ff 70 04	 push	 DWORD PTR [eax+4]
  0001b	83 c9 01	 or	 ecx, 1
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00024	83 c9 ff	 or	 ecx, -1
  00027	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002a	85 c0		 test	 eax, eax
  0002c	0f 48 c1	 cmovs	 eax, ecx

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);
; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);
; 1792 :         return _Result;
; 1793 :     }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
