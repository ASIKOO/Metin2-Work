; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPool@VCFlyTrace@@@@6B@		; CDynamicPool<CFlyTrace>::`vftable'
PUBLIC	??_G?$CDynamicPool@VCFlyTrace@@@@UAEPAXI@Z	; CDynamicPool<CFlyTrace>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPool@VCFlyTrace@@@@6B@		; CDynamicPool<CFlyTrace>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@VCFlyTrace@@@@@8		; CDynamicPool<CFlyTrace> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@VCFlyTrace@@@@8		; CDynamicPool<CFlyTrace>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@VCFlyTrace@@@@8		; CDynamicPool<CFlyTrace>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@VCFlyTrace@@@@8	; CDynamicPool<CFlyTrace>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPool@VCFlyTrace@@@@UAEPAXI@Z:PROC	; CDynamicPool<CFlyTrace>::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@VCFlyTrace@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@VCFlyTrace@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@VCFlyTrace@@@@@8 ; CDynamicPool<CFlyTrace>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@VCFlyTrace@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@VCFlyTrace@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@VCFlyTrace@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@VCFlyTrace@@@@8 ; CDynamicPool<CFlyTrace>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@VCFlyTrace@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@VCFlyTrace@@@@8 DD 00H		; CDynamicPool<CFlyTrace>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@VCFlyTrace@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@VCFlyTrace@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPool@VCFlyTrace@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CFlyTrace> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@VCFlyTrace@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPool@VCFlyTrace@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@VCFlyTrace@@@@6B@ DD 00H		; CDynamicPool<CFlyTrace>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@VCFlyTrace@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@VCFlyTrace@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPool@VCFlyTrace@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@VCFlyTrace@@@@6B@ DD FLAT:??_R4?$CDynamicPool@VCFlyTrace@@@@6B@ ; CDynamicPool<CFlyTrace>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@VCFlyTrace@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??0CFlyTrace@@QAE@XZ				; CFlyTrace::CFlyTrace
PUBLIC	??1CFlyTrace@@UAE@XZ				; CFlyTrace::~CFlyTrace
PUBLIC	?Destroy@CFlyTrace@@QAEXXZ			; CFlyTrace::Destroy
PUBLIC	?Create@CFlyTrace@@QAEXABUTFlyingAttachData@CFlyingData@@@Z ; CFlyTrace::Create
PUBLIC	?UpdateNewPosition@CFlyTrace@@QAEXABUD3DXVECTOR3@@@Z ; CFlyTrace::UpdateNewPosition
PUBLIC	?Update@CFlyTrace@@QAEXXZ			; CFlyTrace::Update
PUBLIC	?Render@CFlyTrace@@QAEXXZ			; CFlyTrace::Render
PUBLIC	?__Initialize@CFlyTrace@@IAEXXZ			; CFlyTrace::__Initialize
PUBLIC	?push_front@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAEX$$QAU?$pair@MUD3DXVECTOR3@@@2@@Z ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::push_front
PUBLIC	?_Xlen@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@ABEXXZ ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Xlen
PUBLIC	?_Tidy@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@AAEXXZ ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Tidy
PUBLIC	?DestroySystem@CFlyTrace@@SAXXZ			; CFlyTrace::DestroySystem
PUBLIC	?New@CFlyTrace@@SAPAV1@XZ			; CFlyTrace::New
PUBLIC	?Delete@CFlyTrace@@SAXPAV1@@Z			; CFlyTrace::Delete
PUBLIC	??_GCFlyTrace@@UAEPAXI@Z			; CFlyTrace::`scalar deleting destructor'
PUBLIC	??1?$CDynamicPool@VCFlyTrace@@@@UAE@XZ		; CDynamicPool<CFlyTrace>::~CDynamicPool<CFlyTrace>
PUBLIC	?Delete@?$CDynamicPool@VCFlyTrace@@@@KAXPAVCFlyTrace@@@Z ; CDynamicPool<CFlyTrace>::Delete
PUBLIC	?_Xlength@?$vector@PAVCFlyTrace@@V?$allocator@PAVCFlyTrace@@@std@@@std@@CAXXZ ; std::vector<CFlyTrace *,std::allocator<CFlyTrace *> >::_Xlength
PUBLIC	??0TFlyVertex@@QAE@XZ				; TFlyVertex::TFlyVertex
PUBLIC	??1?$vector@U?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<float,TFlyVertexSet>,std::allocator<std::pair<float,TFlyVertexSet> > >::~vector<std::pair<float,TFlyVertexSet>,std::allocator<std::pair<float,TFlyVertexSet> > >
PUBLIC	?_Xlength@?$vector@U?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@CAXXZ ; std::vector<std::pair<float,TFlyVertexSet>,std::allocator<std::pair<float,TFlyVertexSet> > >::_Xlength
PUBLIC	??$_Const_cast@$$CBU?$pair@MUTFlyVertexSet@@@std@@@std@@YAPAU?$pair@MUTFlyVertexSet@@@0@PBU10@@Z ; std::_Const_cast<std::pair<float,TFlyVertexSet> const >
PUBLIC	??$_Emplace_reallocate@U?$pair@MUTFlyVertexSet@@@std@@@?$vector@U?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@QAEPAU?$pair@MUTFlyVertexSet@@@1@QAU21@$$QAU21@@Z ; std::vector<std::pair<float,TFlyVertexSet>,std::allocator<std::pair<float,TFlyVertexSet> > >::_Emplace_reallocate<std::pair<float,TFlyVertexSet> >
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Emplace_reallocate@ABQAVCFlyTrace@@@?$vector@PAVCFlyTrace@@V?$allocator@PAVCFlyTrace@@@std@@@std@@QAEPAPAVCFlyTrace@@QAPAV2@ABQAV2@@Z ; std::vector<CFlyTrace *,std::allocator<CFlyTrace *> >::_Emplace_reallocate<CFlyTrace * const &>
PUBLIC	??$_Destroy_in_place@PAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAXAAPAU?$pair@MUD3DXVECTOR3@@@0@@Z ; std::_Destroy_in_place<std::pair<float,D3DXVECTOR3> *>
PUBLIC	??$uninitialized_copy@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0PAPAU10@@Z ; std::uninitialized_copy<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>
PUBLIC	??$_Uninitialized_value_construct_n_unchecked1@PAPAU?$pair@MUD3DXVECTOR3@@@std@@I@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<std::pair<float,D3DXVECTOR3> * *,unsigned int>
PUBLIC	??$_Destroy_range@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAXPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@@Z ; std::_Destroy_range<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>
PUBLIC	??$_Destroy_range@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@std@@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@QAU10@AAV?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<float,TFlyVertexSet> > >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCFlyTrace@@@std@@@std@@YAXPAPAVCFlyTrace@@QAPAV1@AAV?$allocator@PAVCFlyTrace@@@0@@Z ; std::_Destroy_range<std::allocator<CFlyTrace *> >
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$_Copy_memmove@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@00@Z ; std::_Copy_memmove<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>
PUBLIC	??$_Zero_range@PAPAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0@Z ; std::_Zero_range<std::pair<float,D3DXVECTOR3> * *>
PUBLIC	??$_Uninitialized_move@PAU?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@YAPAU?$pair@MUTFlyVertexSet@@@0@QAU10@0PAU10@AAV?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@0@@Z ; std::_Uninitialized_move<std::pair<float,TFlyVertexSet> *,std::allocator<std::pair<float,TFlyVertexSet> > >
PUBLIC	??$_Uninitialized_move@PAPAVCFlyTrace@@V?$allocator@PAVCFlyTrace@@@std@@@std@@YAPAPAVCFlyTrace@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCFlyTrace@@@0@@Z ; std::_Uninitialized_move<CFlyTrace * *,std::allocator<CFlyTrace *> >
PUBLIC	??$_Sort_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@0HU?$less@X@0@@Z ; std::_Sort_unchecked<std::pair<float,TFlyVertexSet> *,std::less<void> >
PUBLIC	??$_Copy_memmove@PAPAVCFlyTrace@@PAPAV1@@std@@YAPAPAVCFlyTrace@@PAPAV1@00@Z ; std::_Copy_memmove<CFlyTrace * *,CFlyTrace * *>
PUBLIC	??$_Partition_by_median_guess_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MUTFlyVertexSet@@@std@@PAU12@@0@PAU?$pair@MUTFlyVertexSet@@@0@0U?$less@X@0@@Z ; std::_Partition_by_median_guess_unchecked<std::pair<float,TFlyVertexSet> *,std::less<void> >
PUBLIC	??$_Pop_heap_hole_by_index@PAU?$pair@MUTFlyVertexSet@@@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@HH$$QAU10@U?$less@X@0@@Z ; std::_Pop_heap_hole_by_index<std::pair<float,TFlyVertexSet> *,std::pair<float,TFlyVertexSet>,std::less<void> >
PUBLIC	??$iter_swap@PAU?$pair@MUTFlyVertexSet@@@std@@PAU12@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@0@Z ; std::iter_swap<std::pair<float,TFlyVertexSet> *,std::pair<float,TFlyVertexSet> *>
PUBLIC	??$_Med3_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@00U?$less@X@0@@Z ; std::_Med3_unchecked<std::pair<float,TFlyVertexSet> *,std::less<void> >
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
PUBLIC	?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A ; CFlyTrace::ms_kPool
PUBLIC	??_7CFlyTrace@@6B@				; CFlyTrace::`vftable'
PUBLIC	??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4CFlyTrace@@6B@				; CFlyTrace::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCFlyTrace@@@8				; CFlyTrace `RTTI Type Descriptor'
PUBLIC	??_R3CFlyTrace@@8				; CFlyTrace::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CFlyTrace@@8				; CFlyTrace::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CFlyTrace@@8			; CFlyTrace::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CScreen@@8			; CScreen::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCScreen@@@8				; CScreen `RTTI Type Descriptor'
PUBLIC	??_R3CScreen@@8					; CScreen::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CScreen@@8					; CScreen::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicCollisionObject@@8	; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicCollisionObject@@@8		; CGraphicCollisionObject `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicCollisionObject@@8			; CGraphicCollisionObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicBase@@8			; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicBase@@@8			; CGraphicBase `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicBase@@8				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicBase@@8				; CGraphicBase::`RTTI Base Class Array'
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__xmm@7fffffff7fffffff7fffffff7fffffff
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	_D3DXVec3Normalize@8:PROC
EXTRN	_D3DXVec3TransformNormal@12:PROC
EXTRN	?GetCurrentSecond@CTimer@@QAEMXZ:PROC		; CTimer::GetCurrentSecond
EXTRN	?UpdateViewMatrix@CGraphicBase@@QAEXXZ:PROC	; CGraphicBase::UpdateViewMatrix
EXTRN	?ViewVolumeTest@Frustum@@QBE?AW4ViewState@@ABVVector3d@@M@Z:PROC ; Frustum::ViewVolumeTest
EXTRN	??0CScreen@@QAE@XZ:PROC				; CScreen::CScreen
EXTRN	??1CScreen@@UAE@XZ:PROC				; CScreen::~CScreen
EXTRN	?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SaveRenderState
EXTRN	?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z:PROC ; CStateManager::RestoreRenderState
EXTRN	?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; CStateManager::SetRenderState
EXTRN	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z:PROC ; CStateManager::SetTexture
EXTRN	?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z:PROC ; CStateManager::SetTextureStageState
EXTRN	?SaveVertexShader@CStateManager@@QAEXK@Z:PROC	; CStateManager::SaveVertexShader
EXTRN	?RestoreVertexShader@CStateManager@@QAEXXZ:PROC	; CStateManager::RestoreVertexShader
EXTRN	?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z:PROC ; CStateManager::SaveTransform
EXTRN	?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z:PROC ; CStateManager::RestoreTransform
EXTRN	?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z:PROC ; CStateManager::DrawPrimitiveUP
EXTRN	?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ:PROC ; CCameraManager::GetCurrentCamera
EXTRN	??_ECFlyTrace@@UAEPAXI@Z:PROC			; CFlyTrace::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	?ms_frustum@CScreen@@1VFrustum@@A:BYTE		; CScreen::ms_frustum
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A DD 01H DUP (?) ; CSingleton<CTimer>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A DD 01H DUP (?) ; CSingleton<CCameraManager>::ms_singleton
_BSS	ENDS
CRT$XCU	SEGMENT
??ms_kPool$initializer$@CFlyTrace@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A@@YAXXZ ; ??ms_kPool$initializer$@CFlyTrace@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@7fffffff7fffffff7fffffff7fffffff
CONST	SEGMENT
__xmm@7fffffff7fffffff7fffffff7fffffff DB 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT ??_R2CGraphicBase@@8
rdata$r	SEGMENT
??_R2CGraphicBase@@8 DD FLAT:??_R1A@?0A@EA@CGraphicBase@@8 ; CGraphicBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicBase@@8
rdata$r	SEGMENT
??_R3CGraphicBase@@8 DD 00H				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicBase@@@8
data$rs	SEGMENT
??_R0?AVCGraphicBase@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicBase@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicBase@@8 DD FLAT:??_R0?AVCGraphicBase@@@8 ; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R2CGraphicCollisionObject@@8 DD FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8 ; CGraphicCollisionObject::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R3CGraphicCollisionObject@@8 DD 00H			; CGraphicCollisionObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicCollisionObject@@@8
data$rs	SEGMENT
??_R0?AVCGraphicCollisionObject@@@8 DD FLAT:??_7type_info@@6B@ ; CGraphicCollisionObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicCollisionObject@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicCollisionObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicCollisionObject@@8 DD FLAT:??_R0?AVCGraphicCollisionObject@@@8 ; CGraphicCollisionObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicCollisionObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CScreen@@8
rdata$r	SEGMENT
??_R2CScreen@@8 DD FLAT:??_R1A@?0A@EA@CScreen@@8	; CScreen::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CScreen@@8
rdata$r	SEGMENT
??_R3CScreen@@8 DD 00H					; CScreen::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CScreen@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCScreen@@@8
data$rs	SEGMENT
??_R0?AVCScreen@@@8 DD FLAT:??_7type_info@@6B@		; CScreen `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCScreen@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CScreen@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CScreen@@8 DD FLAT:??_R0?AVCScreen@@@8	; CScreen::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CScreen@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CFlyTrace@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CFlyTrace@@8 DD FLAT:??_R0?AVCFlyTrace@@@8 ; CFlyTrace::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CFlyTrace@@8
rdata$r	ENDS
;	COMDAT ??_R2CFlyTrace@@8
rdata$r	SEGMENT
??_R2CFlyTrace@@8 DD FLAT:??_R1A@?0A@EA@CFlyTrace@@8	; CFlyTrace::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CScreen@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicCollisionObject@@8
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CFlyTrace@@8
rdata$r	SEGMENT
??_R3CFlyTrace@@8 DD 00H				; CFlyTrace::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CFlyTrace@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCFlyTrace@@@8
data$rs	SEGMENT
??_R0?AVCFlyTrace@@@8 DD FLAT:??_7type_info@@6B@	; CFlyTrace `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCFlyTrace@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CFlyTrace@@6B@
rdata$r	SEGMENT
??_R4CFlyTrace@@6B@ DD 00H				; CFlyTrace::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCFlyTrace@@@8
	DD	FLAT:??_R3CFlyTrace@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@ DB 'deque<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CFlyTrace@@6B@
CONST	SEGMENT
??_7CFlyTrace@@6B@ DD FLAT:??_R4CFlyTrace@@6B@		; CFlyTrace::`vftable'
	DD	FLAT:??_ECFlyTrace@@UAEPAXI@Z
CONST	ENDS
_DATA	SEGMENT
?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A DD FLAT:??_7?$CDynamicPool@VCFlyTrace@@@@6B@ ; CFlyTrace::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@VCFlyTrace@@@@QAEPAVCFlyTrace@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@VCFlyTrace@@@@QAEPAVCFlyTrace@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@VCFlyTrace@@@@QAEPAVCFlyTrace@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@VCFlyTrace@@@@QAEPAVCFlyTrace@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?New@CFlyTrace@@SAPAV1@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?New@CFlyTrace@@SAPAV1@XZ$0
__ehfuncinfo$?New@CFlyTrace@@SAPAV1@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?New@CFlyTrace@@SAPAV1@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Render@CFlyTrace@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Render@CFlyTrace@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Render@CFlyTrace@@QAEXXZ$1
__ehfuncinfo$?Render@CFlyTrace@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Render@CFlyTrace@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CFlyTrace@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CFlyTrace@@QAE@XZ$0
__ehfuncinfo$??0CFlyTrace@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CFlyTrace@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
;	COMDAT ??$_Med3_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@00U?$less@X@0@@Z
_TEXT	SEGMENT
__Tmp$1 = -144						; size = 144
__Tmp$2 = -144						; size = 144
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Med3_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@00U?$less@X@0@@Z PROC ; std::_Med3_unchecked<std::pair<float,TFlyVertexSet> *,std::less<void> >, COMDAT

; 7434 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7434 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00006	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  0000c	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7434 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00010	53		 push	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00011	8b 5d 0c	 mov	 ebx, DWORD PTR __Mid$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7434 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00014	56		 push	 esi
  00015	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00016	f3 0f 10 0b	 movss	 xmm1, DWORD PTR [ebx]
  0001a	0f 2f c1	 comiss	 xmm0, xmm1
  0001d	76 3d		 jbe	 SHORT $LN18@Med3_unche

; 320  :         if (this != _STD addressof(_Right)) {

  0001f	3b d8		 cmp	 ebx, eax
  00021	74 39		 je	 SHORT $LN18@Med3_unche

; 105  :     _Left    = _STD move(_Right);

  00023	f3 0f 11 03	 movss	 DWORD PTR [ebx], xmm0

; 104  :     _Ty _Tmp = _STD move(_Left);

  00027	8d 73 04	 lea	 esi, DWORD PTR [ebx+4]

; 106  :     _Right   = _STD move(_Tmp);

  0002a	f3 0f 11 08	 movss	 DWORD PTR [eax], xmm1

; 104  :     _Ty _Tmp = _STD move(_Left);

  0002e	8d bd 70 ff ff
	ff		 lea	 edi, DWORD PTR __Tmp$2[ebp]
  00034	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00039	f3 a5		 rep movsd
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  0003b	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00040	8d 70 04	 lea	 esi, DWORD PTR [eax+4]
  00043	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  00046	f3 a5		 rep movsd
  00048	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  0004d	8d b5 70 ff ff
	ff		 lea	 esi, DWORD PTR __Tmp$2[ebp]
  00053	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  00056	f3 a5		 rep movsd
  00058	f3 0f 10 0b	 movss	 xmm1, DWORD PTR [ebx]
$LN18@Med3_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  0005c	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  0005f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00063	0f 2f c8	 comiss	 xmm1, xmm0
  00066	76 53		 jbe	 SHORT $LN4@Med3_unche

; 320  :         if (this != _STD addressof(_Right)) {

  00068	3b c3		 cmp	 eax, ebx
  0006a	74 39		 je	 SHORT $LN44@Med3_unche

; 105  :     _Left    = _STD move(_Right);

  0006c	f3 0f 11 08	 movss	 DWORD PTR [eax], xmm1

; 104  :     _Ty _Tmp = _STD move(_Left);

  00070	8d 70 04	 lea	 esi, DWORD PTR [eax+4]

; 106  :     _Right   = _STD move(_Tmp);

  00073	f3 0f 11 03	 movss	 DWORD PTR [ebx], xmm0

; 104  :     _Ty _Tmp = _STD move(_Left);

  00077	8d bd 70 ff ff
	ff		 lea	 edi, DWORD PTR __Tmp$1[ebp]
  0007d	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00082	f3 a5		 rep movsd
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00084	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00089	8d 73 04	 lea	 esi, DWORD PTR [ebx+4]
  0008c	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  0008f	f3 a5		 rep movsd
  00091	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00096	8d b5 70 ff ff
	ff		 lea	 esi, DWORD PTR __Tmp$1[ebp]
  0009c	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  0009f	f3 a5		 rep movsd
  000a1	f3 0f 10 0b	 movss	 xmm1, DWORD PTR [ebx]
$LN44@Med3_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000a5	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  000a8	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000ac	0f 2f c1	 comiss	 xmm0, xmm1
  000af	76 0a		 jbe	 SHORT $LN4@Med3_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7444 :             _STD iter_swap(_Mid, _First);

  000b1	50		 push	 eax
  000b2	53		 push	 ebx
  000b3	e8 00 00 00 00	 call	 ??$iter_swap@PAU?$pair@MUTFlyVertexSet@@@std@@PAU12@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@0@Z ; std::iter_swap<std::pair<float,TFlyVertexSet> *,std::pair<float,TFlyVertexSet> *>
  000b8	83 c4 08	 add	 esp, 8
$LN4@Med3_unche:

; 7445 :         }
; 7446 :     }
; 7447 : }

  000bb	5f		 pop	 edi
  000bc	5e		 pop	 esi
  000bd	5b		 pop	 ebx
  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c3		 ret	 0
??$_Med3_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@00U?$less@X@0@@Z ENDP ; std::_Med3_unchecked<std::pair<float,TFlyVertexSet> *,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
;	COMDAT ??$iter_swap@PAU?$pair@MUTFlyVertexSet@@@std@@PAU12@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@0@Z
_TEXT	SEGMENT
__Tmp$1 = -144						; size = 144
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$iter_swap@PAU?$pair@MUTFlyVertexSet@@@std@@PAU12@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@0@Z PROC ; std::iter_swap<std::pair<float,TFlyVertexSet> *,std::pair<float,TFlyVertexSet> *>, COMDAT

; 80   : _CONSTEXPR20 void iter_swap(_FwdIt1 _Left, _FwdIt2 _Right) { // swap *_Left and *_Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 320  :         if (this != _STD addressof(_Right)) {

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]

; 80   : _CONSTEXPR20 void iter_swap(_FwdIt1 _Left, _FwdIt2 _Right) { // swap *_Left and *_Right

  00006	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H

; 320  :         if (this != _STD addressof(_Right)) {

  0000c	8b 55 0c	 mov	 edx, DWORD PTR __Right$[ebp]
  0000f	3b ca		 cmp	 ecx, edx
  00011	74 3e		 je	 SHORT $LN6@iter_swap

; 104  :     _Ty _Tmp = _STD move(_Left);

  00013	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]

; 105  :     _Left    = _STD move(_Right);

  00017	8b 02		 mov	 eax, DWORD PTR [edx]
  00019	56		 push	 esi
  0001a	89 01		 mov	 DWORD PTR [ecx], eax

; 322  :             _Swap_adl(second, _Right.second);

  0001c	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 104  :     _Ty _Tmp = _STD move(_Left);

  0001f	57		 push	 edi

; 106  :     _Right   = _STD move(_Tmp);

  00020	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 104  :     _Ty _Tmp = _STD move(_Left);

  00024	8d bd 70 ff ff
	ff		 lea	 edi, DWORD PTR __Tmp$1[ebp]
  0002a	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  0002f	8b f0		 mov	 esi, eax
  00031	f3 a5		 rep movsd
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00033	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00038	8d 72 04	 lea	 esi, DWORD PTR [edx+4]
  0003b	8b f8		 mov	 edi, eax
  0003d	f3 a5		 rep movsd
  0003f	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00044	8d b5 70 ff ff
	ff		 lea	 esi, DWORD PTR __Tmp$1[ebp]
  0004a	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  0004d	f3 a5		 rep movsd
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
$LN6@iter_swap:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 82   : }

  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
??$iter_swap@PAU?$pair@MUTFlyVertexSet@@@std@@PAU12@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@0@Z ENDP ; std::iter_swap<std::pair<float,TFlyVertexSet> *,std::pair<float,TFlyVertexSet> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
;	COMDAT ??$_Pop_heap_hole_by_index@PAU?$pair@MUTFlyVertexSet@@@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@HH$$QAU10@U?$less@X@0@@Z
_TEXT	SEGMENT
tv516 = -8						; size = 4
__Max_sequence_non_leaf$1$ = -4				; size = 4
__Idx$1$ = 8						; size = 4
__First$ = 8						; size = 4
__Top$1$ = 12						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Pop_heap_hole_by_index@PAU?$pair@MUTFlyVertexSet@@@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@HH$$QAU10@U?$less@X@0@@Z PROC ; std::_Pop_heap_hole_by_index<std::pair<float,TFlyVertexSet> *,std::pair<float,TFlyVertexSet>,std::less<void> >, COMDAT

; 6186 :     _RanIt _First, _Iter_diff_t<_RanIt> _Hole, _Iter_diff_t<_RanIt> _Bottom, _Ty&& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 6187 :     // percolate _Hole to _Bottom, then push _Val
; 6188 :     _STL_INTERNAL_CHECK(_Bottom > 0);
; 6189 : 
; 6190 :     using _Diff      = _Iter_diff_t<_RanIt>;
; 6191 :     const _Diff _Top = _Hole;
; 6192 :     _Diff _Idx       = _Hole;
; 6193 : 
; 6194 :     // Check whether _Idx can have a child before calculating that child's index, since
; 6195 :     // calculating the child's index can trigger integer overflows
; 6196 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen

  00006	8b 4d 10	 mov	 ecx, DWORD PTR __Bottom$[ebp]
  00009	53		 push	 ebx

; 6197 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  0000a	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  0000d	49		 dec	 ecx
  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	8b 7d 0c	 mov	 edi, DWORD PTR __Hole$[ebp]
  00013	8b d7		 mov	 edx, edi
  00015	89 4d f8	 mov	 DWORD PTR tv516[ebp], ecx
  00018	8b c7		 mov	 eax, edi
  0001a	d1 f9		 sar	 ecx, 1
  0001c	89 55 0c	 mov	 DWORD PTR __Top$1$[ebp], edx
  0001f	89 4d fc	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], ecx
  00022	3b f9		 cmp	 edi, ecx
  00024	7d 64		 jge	 SHORT $LN3@Pop_heap_h
  00026	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL2@Pop_heap_h:

; 6198 :         _Idx = 2 * _Idx + 2;

  00030	8d 14 00	 lea	 edx, DWORD PTR [eax+eax]

; 6199 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {

  00033	8d 42 02	 lea	 eax, DWORD PTR [edx+2]
  00036	69 c8 94 00 00
	00		 imul	 ecx, eax, 148
  0003c	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
  0003f	69 c0 94 00 00
	00		 imul	 eax, eax, 148

; 6202 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00045	f3 0f 10 04 18	 movss	 xmm0, DWORD PTR [eax+ebx]
  0004a	33 c0		 xor	 eax, eax
  0004c	0f 2f 04 19	 comiss	 xmm0, DWORD PTR [ecx+ebx]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00050	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6202 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00055	0f 96 c0	 setbe	 al
  00058	69 ff 94 00 00
	00		 imul	 edi, edi, 148
  0005e	40		 inc	 eax
  0005f	03 fb		 add	 edi, ebx
  00061	03 c2		 add	 eax, edx
  00063	69 f0 94 00 00
	00		 imul	 esi, eax, 148
  00069	89 45 08	 mov	 DWORD PTR __Idx$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  0006c	8b 04 1e	 mov	 eax, DWORD PTR [esi+ebx]
  0006f	89 07		 mov	 DWORD PTR [edi], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00071	83 c7 04	 add	 edi, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6203 :         _Hole             = _Idx;

  00074	8b 45 08	 mov	 eax, DWORD PTR __Idx$1$[ebp]
  00077	03 f3		 add	 esi, ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00079	83 c6 04	 add	 esi, 4
  0007c	f3 a5		 rep movsd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6197 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  0007e	8b 4d fc	 mov	 ecx, DWORD PTR __Max_sequence_non_leaf$1$[ebp]

; 6203 :         _Hole             = _Idx;

  00081	8b f8		 mov	 edi, eax
  00083	3b c1		 cmp	 eax, ecx
  00085	7c a9		 jl	 SHORT $LL2@Pop_heap_h
  00087	8b 55 0c	 mov	 edx, DWORD PTR __Top$1$[ebp]
$LN3@Pop_heap_h:

; 6204 :     }
; 6205 : 
; 6206 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  0008a	3b c1		 cmp	 eax, ecx
  0008c	75 33		 jne	 SHORT $LN5@Pop_heap_h
  0008e	8b 45 10	 mov	 eax, DWORD PTR __Bottom$[ebp]
  00091	a8 01		 test	 al, 1
  00093	75 2c		 jne	 SHORT $LN5@Pop_heap_h

; 6207 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  00095	69 ff 94 00 00
	00		 imul	 edi, edi, 148
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  0009b	8d b3 70 ff ff
	ff		 lea	 esi, DWORD PTR [ebx-144]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6207 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  000a1	69 c8 94 00 00
	00		 imul	 ecx, eax, 148
  000a7	03 fb		 add	 edi, ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  000a9	03 f1		 add	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  000ab	8b 84 19 6c ff
	ff ff		 mov	 eax, DWORD PTR [ecx+ebx-148]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  000b2	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  000b7	89 07		 mov	 DWORD PTR [edi], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  000b9	83 c7 04	 add	 edi, 4
  000bc	f3 a5		 rep movsd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6208 :         _Hole             = _Bottom - 1;

  000be	8b 7d f8	 mov	 edi, DWORD PTR tv516[ebp]
$LN5@Pop_heap_h:

; 6077 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  000c1	3b d7		 cmp	 edx, edi
  000c3	8b 55 14	 mov	 edx, DWORD PTR __Val$[ebp]
  000c6	7d 43		 jge	 SHORT $LN54@Pop_heap_h
  000c8	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL25@Pop_heap_h:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000d0	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6076 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  000d4	8d 47 ff	 lea	 eax, DWORD PTR [edi-1]
  000d7	d1 f8		 sar	 eax, 1

; 6077 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  000d9	69 c8 94 00 00
	00		 imul	 ecx, eax, 148
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000df	f3 0f 10 0c 19	 movss	 xmm1, DWORD PTR [ecx+ebx]
  000e4	0f 2f c1	 comiss	 xmm0, xmm1
  000e7	76 22		 jbe	 SHORT $LN54@Pop_heap_h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6080 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000e9	69 ff 94 00 00
	00		 imul	 edi, edi, 148
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  000ef	8d 73 04	 lea	 esi, DWORD PTR [ebx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6080 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000f2	03 fb		 add	 edi, ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  000f4	03 f1		 add	 esi, ecx
  000f6	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  000fb	f3 0f 11 0f	 movss	 DWORD PTR [edi], xmm1
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  000ff	83 c7 04	 add	 edi, 4
  00102	f3 a5		 rep movsd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6081 :         _Hole             = _Idx;

  00104	8b f8		 mov	 edi, eax
  00106	39 45 0c	 cmp	 DWORD PTR __Top$1$[ebp], eax
  00109	7c c5		 jl	 SHORT $LL25@Pop_heap_h
$LN54@Pop_heap_h:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  0010b	8b 02		 mov	 eax, DWORD PTR [edx]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  0010d	8d 72 04	 lea	 esi, DWORD PTR [edx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6084 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

  00110	69 ff 94 00 00
	00		 imul	 edi, edi, 148
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00116	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6084 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

  0011b	03 fb		 add	 edi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  0011d	89 07		 mov	 DWORD PTR [edi], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  0011f	83 c7 04	 add	 edi, 4
  00122	f3 a5		 rep movsd
  00124	5f		 pop	 edi
  00125	5e		 pop	 esi
  00126	5b		 pop	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6212 : }

  00127	8b e5		 mov	 esp, ebp
  00129	5d		 pop	 ebp
  0012a	c3		 ret	 0
??$_Pop_heap_hole_by_index@PAU?$pair@MUTFlyVertexSet@@@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@HH$$QAU10@U?$less@X@0@@Z ENDP ; std::_Pop_heap_hole_by_index<std::pair<float,TFlyVertexSet> *,std::pair<float,TFlyVertexSet>,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
;	COMDAT ??$_Partition_by_median_guess_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MUTFlyVertexSet@@@std@@PAU12@@0@PAU?$pair@MUTFlyVertexSet@@@0@0U?$less@X@0@@Z
_TEXT	SEGMENT
__Tmp$1 = -1020						; size = 144
__Tmp$2 = -876						; size = 144
__Tmp$3 = -732						; size = 144
__Tmp$4 = -588						; size = 144
__Tmp$5 = -444						; size = 144
__Tmp$6 = -300						; size = 144
__Tmp$7 = -156						; size = 144
tv1100 = -12						; size = 4
tv1091 = -12						; size = 4
__Glast$1$ = -8						; size = 4
__Pfirst$1$ = -8					; size = 4
tv1102 = -4						; size = 4
__Last$1$ = -4						; size = 4
__Gfirst$1$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
tv1101 = 20						; size = 4
__Plast$1$ = 20						; size = 4
__Pred$ = 20						; size = 1
??$_Partition_by_median_guess_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MUTFlyVertexSet@@@std@@PAU12@@0@PAU?$pair@MUTFlyVertexSet@@@0@0U?$less@X@0@@Z PROC ; std::_Partition_by_median_guess_unchecked<std::pair<float,TFlyVertexSet> *,std::less<void> >, COMDAT

; 7467 : _CONSTEXPR20 pair<_RanIt, _RanIt> _Partition_by_median_guess_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 03 00
	00		 sub	 esp, 1020		; 000003fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi

; 7468 :     // partition [_First, _Last)
; 7469 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  0000b	8b 75 10	 mov	 esi, DWORD PTR __Last$[ebp]
  0000e	b8 a7 c8 67 dd	 mov	 eax, -580400985		; dd67c8a7H
  00013	8b ce		 mov	 ecx, esi

; 7470 :     _Guess_median_unchecked(_First, _Mid, _Prev_iter(_Last), _Pred);

  00015	81 c6 6c ff ff
	ff		 add	 esi, -148		; ffffff6cH
  0001b	57		 push	 edi
  0001c	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
  0001f	2b cf		 sub	 ecx, edi
  00021	f7 e9		 imul	 ecx

; 7453 :     const _Diff _Count = _Last - _First;

  00023	b8 a7 c8 67 dd	 mov	 eax, -580400985		; dd67c8a7H

; 7470 :     _Guess_median_unchecked(_First, _Mid, _Prev_iter(_Last), _Pred);

  00028	89 75 fc	 mov	 DWORD PTR __Last$1$[ebp], esi
  0002b	03 d1		 add	 edx, ecx
  0002d	c1 fa 07	 sar	 edx, 7
  00030	8b ca		 mov	 ecx, edx
  00032	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00035	03 ca		 add	 ecx, edx
  00037	d1 f9		 sar	 ecx, 1
  00039	69 d9 94 00 00
	00		 imul	 ebx, ecx, 148

; 7453 :     const _Diff _Count = _Last - _First;

  0003f	8b ce		 mov	 ecx, esi
  00041	2b cf		 sub	 ecx, edi
  00043	f7 e9		 imul	 ecx

; 7468 :     // partition [_First, _Last)
; 7469 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00045	03 df		 add	 ebx, edi

; 7453 :     const _Diff _Count = _Last - _First;

  00047	03 d1		 add	 edx, ecx

; 7468 :     // partition [_First, _Last)
; 7469 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00049	89 5d f8	 mov	 DWORD PTR __Pfirst$1$[ebp], ebx

; 7453 :     const _Diff _Count = _Last - _First;

  0004c	c1 fa 07	 sar	 edx, 7
  0004f	8b c2		 mov	 eax, edx
  00051	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00054	03 c2		 add	 eax, edx

; 7454 :     if (40 < _Count) { // Tukey's ninther

  00056	83 f8 28	 cmp	 eax, 40			; 00000028H
  00059	7e 64		 jle	 SHORT $LN35@Partition_

; 7455 :         const _Diff _Step     = (_Count + 1) >> 3; // +1 can't overflow because range was made inclusive in caller
; 7456 :         const _Diff _Two_step = _Step << 1; // note: intentionally discards low-order bit
; 7457 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  0005b	8b 55 0c	 mov	 edx, DWORD PTR __First$[ebp]
  0005e	40		 inc	 eax
  0005f	8b 75 14	 mov	 esi, DWORD PTR __Pred$[ebp]
  00062	c1 f8 03	 sar	 eax, 3
  00065	69 d8 28 01 00
	00		 imul	 ebx, eax, 296
  0006b	69 f8 94 00 00
	00		 imul	 edi, eax, 148
  00071	56		 push	 esi
  00072	8d 04 13	 lea	 eax, DWORD PTR [ebx+edx]
  00075	8d 0c 17	 lea	 ecx, DWORD PTR [edi+edx]
  00078	50		 push	 eax
  00079	51		 push	 ecx
  0007a	52		 push	 edx
  0007b	89 4d f4	 mov	 DWORD PTR tv1091[ebp], ecx
  0007e	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@00U?$less@X@0@@Z ; std::_Med3_unchecked<std::pair<float,TFlyVertexSet> *,std::less<void> >

; 7458 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

  00083	8b 4d f8	 mov	 ecx, DWORD PTR __Pfirst$1$[ebp]
  00086	56		 push	 esi
  00087	8d 04 0f	 lea	 eax, DWORD PTR [edi+ecx]
  0008a	50		 push	 eax
  0008b	51		 push	 ecx
  0008c	2b cf		 sub	 ecx, edi
  0008e	51		 push	 ecx
  0008f	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@00U?$less@X@0@@Z ; std::_Med3_unchecked<std::pair<float,TFlyVertexSet> *,std::less<void> >

; 7459 :         _Med3_unchecked(_Last - _Two_step, _Last - _Step, _Last, _Pred);

  00094	8b 45 fc	 mov	 eax, DWORD PTR __Last$1$[ebp]
  00097	8b f0		 mov	 esi, eax
  00099	2b f7		 sub	 esi, edi
  0009b	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
  0009e	57		 push	 edi
  0009f	50		 push	 eax
  000a0	2b c3		 sub	 eax, ebx
  000a2	56		 push	 esi
  000a3	50		 push	 eax
  000a4	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@00U?$less@X@0@@Z ; std::_Med3_unchecked<std::pair<float,TFlyVertexSet> *,std::less<void> >

; 7460 :         _Med3_unchecked(_First + _Step, _Mid, _Last - _Step, _Pred);

  000a9	8b 5d f8	 mov	 ebx, DWORD PTR __Pfirst$1$[ebp]
  000ac	57		 push	 edi
  000ad	56		 push	 esi
  000ae	53		 push	 ebx
  000af	ff 75 f4	 push	 DWORD PTR tv1091[ebp]
  000b2	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@00U?$less@X@0@@Z ; std::_Med3_unchecked<std::pair<float,TFlyVertexSet> *,std::less<void> >

; 7461 :     } else {

  000b7	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
  000ba	83 c4 40	 add	 esp, 64			; 00000040H
  000bd	eb 0e		 jmp	 SHORT $LN36@Partition_
$LN35@Partition_:

; 7462 :         _Med3_unchecked(_First, _Mid, _Last, _Pred);

  000bf	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  000c2	56		 push	 esi
  000c3	53		 push	 ebx
  000c4	57		 push	 edi
  000c5	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@00U?$less@X@0@@Z ; std::_Med3_unchecked<std::pair<float,TFlyVertexSet> *,std::less<void> >
  000ca	83 c4 10	 add	 esp, 16			; 00000010H
$LN36@Partition_:

; 7471 :     _RanIt _Pfirst = _Mid;
; 7472 :     _RanIt _Plast  = _Next_iter(_Pfirst);

  000cd	8d 8b 94 00 00
	00		 lea	 ecx, DWORD PTR [ebx+148]
  000d3	89 4d 14	 mov	 DWORD PTR __Plast$1$[ebp], ecx

; 7473 : 
; 7474 :     while (_First < _Pfirst && !_DEBUG_LT_PRED(_Pred, *_Prev_iter(_Pfirst), *_Pfirst)
; 7475 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  000d6	3b fb		 cmp	 edi, ebx
  000d8	73 25		 jae	 SHORT $LN263@Partition_
  000da	f3 0f 10 0b	 movss	 xmm1, DWORD PTR [ebx]
  000de	66 90		 npad	 2
$LL2@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000e0	f3 0f 10 83 6c
	ff ff ff	 movss	 xmm0, DWORD PTR [ebx-148]
  000e8	0f 2f c8	 comiss	 xmm1, xmm0
  000eb	77 12		 ja	 SHORT $LN263@Partition_
  000ed	0f 2f c1	 comiss	 xmm0, xmm1
  000f0	77 0d		 ja	 SHORT $LN263@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7476 :         --_Pfirst;

  000f2	81 c3 6c ff ff
	ff		 add	 ebx, -148		; ffffff6cH
  000f8	0f 28 c8	 movaps	 xmm1, xmm0
  000fb	3b fb		 cmp	 edi, ebx
  000fd	72 e1		 jb	 SHORT $LL2@Partition_
$LN263@Partition_:

; 7479 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  000ff	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  00102	3b c8		 cmp	 ecx, eax
  00104	73 25		 jae	 SHORT $LN64@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00106	f3 0f 10 0b	 movss	 xmm1, DWORD PTR [ebx]
  0010a	66 0f 1f 44 00
	00		 npad	 6
$LL4@Partition_:
  00110	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00114	0f 2f c8	 comiss	 xmm1, xmm0
  00117	77 0f		 ja	 SHORT $LN264@Partition_
  00119	0f 2f c1	 comiss	 xmm0, xmm1
  0011c	77 0a		 ja	 SHORT $LN264@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7479 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  0011e	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  00124	3b c8		 cmp	 ecx, eax
  00126	72 e8		 jb	 SHORT $LL4@Partition_
$LN264@Partition_:
  00128	89 4d 14	 mov	 DWORD PTR __Plast$1$[ebp], ecx
$LN64@Partition_:

; 7480 :         ++_Plast;
; 7481 :     }
; 7482 : 
; 7483 :     _RanIt _Gfirst = _Plast;
; 7484 :     _RanIt _Glast  = _Pfirst;

  0012b	8b f3		 mov	 esi, ebx
  0012d	8b d1		 mov	 edx, ecx
  0012f	89 75 f8	 mov	 DWORD PTR __Glast$1$[ebp], esi
$LN269@Partition_:

; 7485 : 
; 7486 :     for (;;) { // partition
; 7487 :         for (; _Gfirst < _Last; ++_Gfirst) {

  00132	89 55 fc	 mov	 DWORD PTR __Gfirst$1$[ebp], edx
$LL6@Partition_:
  00135	3b d0		 cmp	 edx, eax
  00137	0f 83 9b 00 00
	00		 jae	 $LN78@Partition_
  0013d	8b 75 10	 mov	 esi, DWORD PTR __Last$[ebp]
  00140	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00143	89 45 14	 mov	 DWORD PTR tv1101[ebp], eax
  00146	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL11@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00150	f3 0f 10 03	 movss	 xmm0, DWORD PTR [ebx]
  00154	f3 0f 10 0a	 movss	 xmm1, DWORD PTR [edx]
  00158	0f 2f c8	 comiss	 xmm1, xmm0
  0015b	77 65		 ja	 SHORT $LN9@Partition_
  0015d	0f 2f c1	 comiss	 xmm0, xmm1
  00160	77 6a		 ja	 SHORT $LN265@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7492 :             } else if (_Plast != _Gfirst) {

  00162	8d b1 94 00 00
	00		 lea	 esi, DWORD PTR [ecx+148]
  00168	89 75 f4	 mov	 DWORD PTR tv1100[ebp], esi
  0016b	8d b8 94 00 00
	00		 lea	 edi, DWORD PTR [eax+148]
  00171	89 7d fc	 mov	 DWORD PTR tv1102[ebp], edi
  00174	3b ca		 cmp	 ecx, edx
  00176	74 40		 je	 SHORT $LN19@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 104  :     _Ty _Tmp = _STD move(_Left);

  00178	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0017c	8d bd 64 ff ff
	ff		 lea	 edi, DWORD PTR __Tmp$7[ebp]

; 105  :     _Left    = _STD move(_Right);

  00182	f3 0f 11 09	 movss	 DWORD PTR [ecx], xmm1

; 104  :     _Ty _Tmp = _STD move(_Left);

  00186	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7494 :                 ++_Plast;

  00188	8b 45 fc	 mov	 eax, DWORD PTR tv1102[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 104  :     _Ty _Tmp = _STD move(_Left);

  0018b	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H

; 106  :     _Right   = _STD move(_Tmp);

  00190	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 104  :     _Ty _Tmp = _STD move(_Left);

  00194	f3 a5		 rep movsd
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00196	8b 7d 14	 mov	 edi, DWORD PTR tv1101[ebp]
  00199	8d 72 04	 lea	 esi, DWORD PTR [edx+4]
  0019c	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  001a1	f3 a5		 rep movsd
  001a3	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  001a8	8d b5 64 ff ff
	ff		 lea	 esi, DWORD PTR __Tmp$7[ebp]
  001ae	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  001b1	f3 a5		 rep movsd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7494 :                 ++_Plast;

  001b3	8b 4d f4	 mov	 ecx, DWORD PTR tv1100[ebp]

; 7495 :             } else {

  001b6	eb 04		 jmp	 SHORT $LN267@Partition_
$LN19@Partition_:

; 7496 :                 ++_Plast;

  001b8	8b ce		 mov	 ecx, esi
  001ba	8b c7		 mov	 eax, edi
$LN267@Partition_:

; 7485 : 
; 7486 :     for (;;) { // partition
; 7487 :         for (; _Gfirst < _Last; ++_Gfirst) {

  001bc	8b 75 10	 mov	 esi, DWORD PTR __Last$[ebp]
  001bf	89 45 14	 mov	 DWORD PTR tv1101[ebp], eax
$LN9@Partition_:
  001c2	81 c2 94 00 00
	00		 add	 edx, 148		; 00000094H
  001c8	3b d6		 cmp	 edx, esi
  001ca	72 84		 jb	 SHORT $LL11@Partition_
$LN265@Partition_:
  001cc	8b 75 f8	 mov	 esi, DWORD PTR __Glast$1$[ebp]
  001cf	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
  001d2	89 4d 14	 mov	 DWORD PTR __Plast$1$[ebp], ecx
  001d5	89 55 fc	 mov	 DWORD PTR __Gfirst$1$[ebp], edx
$LN78@Partition_:

; 7500 :         for (; _First < _Glast; --_Glast) {

  001d8	3b f7		 cmp	 esi, edi
  001da	76 79		 jbe	 SHORT $LN268@Partition_
  001dc	8d 96 6c ff ff
	ff		 lea	 edx, DWORD PTR [esi-148]
$LL14@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  001e2	f3 0f 10 0a	 movss	 xmm1, DWORD PTR [edx]
  001e6	f3 0f 10 03	 movss	 xmm0, DWORD PTR [ebx]
  001ea	0f 2f c1	 comiss	 xmm0, xmm1
  001ed	77 4e		 ja	 SHORT $LN12@Partition_
  001ef	0f 2f c8	 comiss	 xmm1, xmm0
  001f2	77 5c		 ja	 SHORT $LN266@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7505 :             } else if (--_Pfirst != _Prev_iter(_Glast)) {

  001f4	81 eb 94 00 00
	00		 sub	 ebx, 148		; 00000094H
  001fa	3b da		 cmp	 ebx, edx
  001fc	74 3f		 je	 SHORT $LN12@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 104  :     _Ty _Tmp = _STD move(_Left);

  001fe	f3 0f 10 03	 movss	 xmm0, DWORD PTR [ebx]
  00202	8d 73 04	 lea	 esi, DWORD PTR [ebx+4]

; 105  :     _Left    = _STD move(_Right);

  00205	f3 0f 11 0b	 movss	 DWORD PTR [ebx], xmm1

; 104  :     _Ty _Tmp = _STD move(_Left);

  00209	8d bd d4 fe ff
	ff		 lea	 edi, DWORD PTR __Tmp$6[ebp]

; 106  :     _Right   = _STD move(_Tmp);

  0020f	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 104  :     _Ty _Tmp = _STD move(_Left);

  00213	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00218	f3 a5		 rep movsd
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  0021a	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  0021f	8d 72 04	 lea	 esi, DWORD PTR [edx+4]
  00222	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  00225	f3 a5		 rep movsd
  00227	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  0022c	8d b5 d4 fe ff
	ff		 lea	 esi, DWORD PTR __Tmp$6[ebp]
  00232	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00235	f3 a5		 rep movsd
  00237	8b 75 f8	 mov	 esi, DWORD PTR __Glast$1$[ebp]
  0023a	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
$LN12@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7500 :         for (; _First < _Glast; --_Glast) {

  0023d	81 ee 94 00 00
	00		 sub	 esi, 148		; 00000094H
  00243	81 ea 94 00 00
	00		 sub	 edx, 148		; 00000094H
  00249	89 75 f8	 mov	 DWORD PTR __Glast$1$[ebp], esi
  0024c	3b fe		 cmp	 edi, esi
  0024e	72 92		 jb	 SHORT $LL14@Partition_
$LN266@Partition_:
  00250	8b 55 fc	 mov	 edx, DWORD PTR __Gfirst$1$[ebp]

; 7506 :                 _STD iter_swap(_Pfirst, _Prev_iter(_Glast));
; 7507 :             }
; 7508 :         }
; 7509 : 
; 7510 :         if (_Glast == _First && _Gfirst == _Last) {

  00253	3b f7		 cmp	 esi, edi
$LN268@Partition_:
  00255	0f 85 ba 00 00
	00		 jne	 $LN27@Partition_
  0025b	8b 4d 14	 mov	 ecx, DWORD PTR __Plast$1$[ebp]
  0025e	3b 55 10	 cmp	 edx, DWORD PTR __Last$[ebp]
  00261	0f 84 d1 01 00
	00		 je	 $LN237@Partition_

; 7512 :         }
; 7513 : 
; 7514 :         if (_Glast == _First) { // no room at bottom, rotate pivot upward
; 7515 :             if (_Plast != _Gfirst) {

  00267	3b ca		 cmp	 ecx, edx
  00269	74 44		 je	 SHORT $LN139@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 320  :         if (this != _STD addressof(_Right)) {

  0026b	3b d9		 cmp	 ebx, ecx
  0026d	74 40		 je	 SHORT $LN139@Partition_

; 105  :     _Left    = _STD move(_Right);

  0026f	8b 01		 mov	 eax, DWORD PTR [ecx]

; 322  :             _Swap_adl(second, _Right.second);

  00271	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]

; 104  :     _Ty _Tmp = _STD move(_Left);

  00274	f3 0f 10 03	 movss	 xmm0, DWORD PTR [ebx]
  00278	8d 73 04	 lea	 esi, DWORD PTR [ebx+4]

; 105  :     _Left    = _STD move(_Right);

  0027b	89 03		 mov	 DWORD PTR [ebx], eax

; 104  :     _Ty _Tmp = _STD move(_Left);

  0027d	8d bd 44 fe ff
	ff		 lea	 edi, DWORD PTR __Tmp$5[ebp]

; 106  :     _Right   = _STD move(_Tmp);

  00283	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 104  :     _Ty _Tmp = _STD move(_Left);

  00287	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  0028c	f3 a5		 rep movsd
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  0028e	8b f2		 mov	 esi, edx
  00290	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  00293	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00298	f3 a5		 rep movsd
  0029a	8b fa		 mov	 edi, edx
  0029c	8d b5 44 fe ff
	ff		 lea	 esi, DWORD PTR __Tmp$5[ebp]
  002a2	8b 55 fc	 mov	 edx, DWORD PTR __Gfirst$1$[ebp]
  002a5	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  002aa	f3 a5		 rep movsd
  002ac	8b 4d 14	 mov	 ecx, DWORD PTR __Plast$1$[ebp]
$LN139@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7519 :             ++_Plast;

  002af	81 c1 94 00 00
	00		 add	 ecx, 148		; 00000094H
  002b5	89 4d 14	 mov	 DWORD PTR __Plast$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 320  :         if (this != _STD addressof(_Right)) {

  002b8	3b da		 cmp	 ebx, edx
  002ba	74 3f		 je	 SHORT $LN158@Partition_

; 105  :     _Left    = _STD move(_Right);

  002bc	8b 02		 mov	 eax, DWORD PTR [edx]

; 104  :     _Ty _Tmp = _STD move(_Left);

  002be	8d 73 04	 lea	 esi, DWORD PTR [ebx+4]
  002c1	f3 0f 10 03	 movss	 xmm0, DWORD PTR [ebx]
  002c5	8d bd b4 fd ff
	ff		 lea	 edi, DWORD PTR __Tmp$4[ebp]

; 105  :     _Left    = _STD move(_Right);

  002cb	89 03		 mov	 DWORD PTR [ebx], eax

; 104  :     _Ty _Tmp = _STD move(_Left);

  002cd	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H

; 106  :     _Right   = _STD move(_Tmp);

  002d2	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 104  :     _Ty _Tmp = _STD move(_Left);

  002d6	f3 a5		 rep movsd
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  002d8	8d 72 04	 lea	 esi, DWORD PTR [edx+4]
  002db	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  002e0	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  002e3	f3 a5		 rep movsd
  002e5	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  002e8	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  002ed	8b 55 fc	 mov	 edx, DWORD PTR __Gfirst$1$[ebp]
  002f0	8d b5 b4 fd ff
	ff		 lea	 esi, DWORD PTR __Tmp$4[ebp]
  002f6	f3 a5		 rep movsd
  002f8	8b 4d 14	 mov	 ecx, DWORD PTR __Plast$1$[ebp]
$LN158@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7522 :             ++_Gfirst;

  002fb	8b 75 f8	 mov	 esi, DWORD PTR __Glast$1$[ebp]
  002fe	81 c3 94 00 00
	00		 add	 ebx, 148		; 00000094H
  00304	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  00307	81 c2 94 00 00
	00		 add	 edx, 148		; 00000094H
  0030d	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
  00310	e9 1d fe ff ff	 jmp	 $LN269@Partition_
$LN27@Partition_:

; 7523 :         } else if (_Gfirst == _Last) { // no room at top, rotate pivot downward

  00315	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  00318	81 c6 6c ff ff
	ff		 add	 esi, -148		; ffffff6cH
  0031e	89 75 f8	 mov	 DWORD PTR __Glast$1$[ebp], esi
  00321	3b d0		 cmp	 edx, eax
  00323	0f 85 b2 00 00
	00		 jne	 $LN30@Partition_

; 7524 :             if (--_Glast != --_Pfirst) {

  00329	81 eb 94 00 00
	00		 sub	 ebx, 148		; 00000094H
  0032f	3b f3		 cmp	 esi, ebx
  00331	74 46		 je	 SHORT $LN177@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 104  :     _Ty _Tmp = _STD move(_Left);

  00333	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  00337	8d bd 24 fd ff
	ff		 lea	 edi, DWORD PTR __Tmp$3[ebp]

; 105  :     _Left    = _STD move(_Right);

  0033d	8b 03		 mov	 eax, DWORD PTR [ebx]

; 104  :     _Ty _Tmp = _STD move(_Left);

  0033f	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00344	8b 55 fc	 mov	 edx, DWORD PTR __Gfirst$1$[ebp]

; 105  :     _Left    = _STD move(_Right);

  00347	89 06		 mov	 DWORD PTR [esi], eax

; 322  :             _Swap_adl(second, _Right.second);

  00349	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 106  :     _Right   = _STD move(_Tmp);

  0034c	f3 0f 11 03	 movss	 DWORD PTR [ebx], xmm0

; 104  :     _Ty _Tmp = _STD move(_Left);

  00350	8b f0		 mov	 esi, eax
  00352	f3 a5		 rep movsd
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00354	8b f8		 mov	 edi, eax
  00356	8d 73 04	 lea	 esi, DWORD PTR [ebx+4]
  00359	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  0035c	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00361	f3 a5		 rep movsd
  00363	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00368	8d b5 24 fd ff
	ff		 lea	 esi, DWORD PTR __Tmp$3[ebp]
  0036e	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  00371	f3 a5		 rep movsd
  00373	8b 75 f8	 mov	 esi, DWORD PTR __Glast$1$[ebp]
  00376	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
$LN177@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7528 :             _STD iter_swap(_Pfirst, --_Plast);

  00379	8b 4d 14	 mov	 ecx, DWORD PTR __Plast$1$[ebp]
  0037c	81 e9 94 00 00
	00		 sub	 ecx, 148		; 00000094H
  00382	89 4d 14	 mov	 DWORD PTR __Plast$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 320  :         if (this != _STD addressof(_Right)) {

  00385	3b d9		 cmp	 ebx, ecx
  00387	0f 84 a8 fd ff
	ff		 je	 $LL6@Partition_

; 105  :     _Left    = _STD move(_Right);

  0038d	8b 01		 mov	 eax, DWORD PTR [ecx]

; 322  :             _Swap_adl(second, _Right.second);

  0038f	8d 51 04	 lea	 edx, DWORD PTR [ecx+4]

; 104  :     _Ty _Tmp = _STD move(_Left);

  00392	f3 0f 10 03	 movss	 xmm0, DWORD PTR [ebx]
  00396	8d 73 04	 lea	 esi, DWORD PTR [ebx+4]

; 105  :     _Left    = _STD move(_Right);

  00399	89 03		 mov	 DWORD PTR [ebx], eax

; 104  :     _Ty _Tmp = _STD move(_Left);

  0039b	8d bd 94 fc ff
	ff		 lea	 edi, DWORD PTR __Tmp$2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7529 :         } else {

  003a1	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 106  :     _Right   = _STD move(_Tmp);

  003a4	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 104  :     _Ty _Tmp = _STD move(_Left);

  003a8	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  003ad	f3 a5		 rep movsd
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  003af	8b f2		 mov	 esi, edx
  003b1	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  003b4	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  003b9	f3 a5		 rep movsd
  003bb	8b fa		 mov	 edi, edx
  003bd	8d b5 94 fc ff
	ff		 lea	 esi, DWORD PTR __Tmp$2[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7529 :         } else {

  003c3	8b 55 fc	 mov	 edx, DWORD PTR __Gfirst$1$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  003c6	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  003cb	f3 a5		 rep movsd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7529 :         } else {

  003cd	8b 4d 14	 mov	 ecx, DWORD PTR __Plast$1$[ebp]
  003d0	8b 75 f8	 mov	 esi, DWORD PTR __Glast$1$[ebp]
  003d3	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
  003d6	e9 5a fd ff ff	 jmp	 $LL6@Partition_
$LN30@Partition_:

; 7530 :             _STD iter_swap(_Gfirst, --_Glast);

  003db	89 75 f8	 mov	 DWORD PTR __Glast$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 320  :         if (this != _STD addressof(_Right)) {

  003de	3b d6		 cmp	 edx, esi
  003e0	74 48		 je	 SHORT $LN215@Partition_

; 105  :     _Left    = _STD move(_Right);

  003e2	8b 06		 mov	 eax, DWORD PTR [esi]

; 104  :     _Ty _Tmp = _STD move(_Left);

  003e4	8d bd 04 fc ff
	ff		 lea	 edi, DWORD PTR __Tmp$1[ebp]
  003ea	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  003ee	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H

; 105  :     _Left    = _STD move(_Right);

  003f3	89 02		 mov	 DWORD PTR [edx], eax

; 322  :             _Swap_adl(second, _Right.second);

  003f5	8d 56 04	 lea	 edx, DWORD PTR [esi+4]
  003f8	8b 45 fc	 mov	 eax, DWORD PTR __Gfirst$1$[ebp]

; 106  :     _Right   = _STD move(_Tmp);

  003fb	f3 0f 11 06	 movss	 DWORD PTR [esi], xmm0

; 104  :     _Ty _Tmp = _STD move(_Left);

  003ff	8d 70 04	 lea	 esi, DWORD PTR [eax+4]
  00402	f3 a5		 rep movsd
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00404	8b f2		 mov	 esi, edx
  00406	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
  00409	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  0040e	f3 a5		 rep movsd
  00410	8b fa		 mov	 edi, edx
  00412	8d b5 04 fc ff
	ff		 lea	 esi, DWORD PTR __Tmp$1[ebp]
  00418	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  0041d	8b d0		 mov	 edx, eax
  0041f	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  00422	f3 a5		 rep movsd
  00424	8b 75 f8	 mov	 esi, DWORD PTR __Glast$1$[ebp]
  00427	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
$LN215@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7533 :     }

  0042a	8b 4d 14	 mov	 ecx, DWORD PTR __Plast$1$[ebp]
  0042d	81 c2 94 00 00
	00		 add	 edx, 148		; 00000094H
  00433	e9 fa fc ff ff	 jmp	 $LN269@Partition_
$LN237@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00438	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7511 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  0043b	5f		 pop	 edi
  0043c	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0043d	89 18		 mov	 DWORD PTR [eax], ebx
  0043f	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7511 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  00442	5b		 pop	 ebx

; 7534 : }

  00443	8b e5		 mov	 esp, ebp
  00445	5d		 pop	 ebp
  00446	c3		 ret	 0
??$_Partition_by_median_guess_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MUTFlyVertexSet@@@std@@PAU12@@0@PAU?$pair@MUTFlyVertexSet@@@0@0U?$less@X@0@@Z ENDP ; std::_Partition_by_median_guess_unchecked<std::pair<float,TFlyVertexSet> *,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAVCFlyTrace@@PAPAV1@@std@@YAPAPAVCFlyTrace@@PAPAV1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAVCFlyTrace@@PAPAV1@@std@@YAPAPAVCFlyTrace@@PAPAV1@00@Z PROC ; std::_Copy_memmove<CFlyTrace * *,CFlyTrace * *>, COMDAT

; 4360 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4361 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4362 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4363 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4364 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4365 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4366 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4367 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAVCFlyTrace@@PAPAV1@@std@@YAPAPAVCFlyTrace@@PAPAV1@00@Z ENDP ; std::_Copy_memmove<CFlyTrace * *,CFlyTrace * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
;	COMDAT ??$_Sort_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@0HU?$less@X@0@@Z
_TEXT	SEGMENT
__Val$1 = -176						; size = 148
__Val$2 = -176						; size = 148
__Val$3 = -176						; size = 148
tv1105 = -28						; size = 4
__Hole$1$ = -24						; size = 4
__Idx$1$ = -20						; size = 4
__Bottom$1$ = -16					; size = 4
__Max_sequence_non_leaf$1$ = -12			; size = 4
__Mid$4 = -8						; size = 8
tv1098 = -4						; size = 4
__Mid$1$ = 8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Sort_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@0HU?$less@X@0@@Z PROC ; std::_Sort_unchecked<std::pair<float,TFlyVertexSet> *,std::less<void> >, COMDAT

; 7537 : _CONSTEXPR20 void _Sort_unchecked(_RanIt _First, _RanIt _Last, _Iter_diff_t<_RanIt> _Ideal, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b0 00 00
	00		 sub	 esp, 176		; 000000b0H
  00009	53		 push	 ebx

; 7538 :     // order [_First, _Last)
; 7539 :     for (;;) {
; 7540 :         if (_Last - _First <= _ISORT_MAX) { // small

  0000a	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  00012	8b c7		 mov	 eax, edi
  00014	2b c3		 sub	 eax, ebx
  00016	3d 14 13 00 00	 cmp	 eax, 4884		; 00001314H
  0001b	0f 8c 98 00 00
	00		 jl	 $LN124@Sort_unche
  00021	8b 75 10	 mov	 esi, DWORD PTR __Ideal$[ebp]
$LL2@Sort_unche:

; 7541 :             _Insertion_sort_unchecked(_First, _Last, _Pred);
; 7542 :             return;
; 7543 :         }
; 7544 : 
; 7545 :         if (_Ideal <= 0) { // heap sort if too many divisions

  00024	85 f6		 test	 esi, esi
  00026	0f 8e 0f 01 00
	00		 jle	 $LN125@Sort_unche

; 7546 :             _Make_heap_unchecked(_First, _Last, _Pred);
; 7547 :             _Sort_heap_unchecked(_First, _Last, _Pred);
; 7548 :             return;
; 7549 :         }
; 7550 : 
; 7551 :         // divide and conquer by quicksort
; 7552 :         auto _Mid = _Partition_by_median_guess_unchecked(_First, _Last, _Pred);

  0002c	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  0002f	8d 45 f8	 lea	 eax, DWORD PTR __Mid$4[ebp]
  00032	57		 push	 edi
  00033	53		 push	 ebx
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Partition_by_median_guess_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MUTFlyVertexSet@@@std@@PAU12@@0@PAU?$pair@MUTFlyVertexSet@@@0@0U?$less@X@0@@Z ; std::_Partition_by_median_guess_unchecked<std::pair<float,TFlyVertexSet> *,std::less<void> >

; 7553 : 
; 7554 :         _Ideal = (_Ideal >> 1) + (_Ideal >> 2); // allow 1.5 log2(N) divisions

  0003a	8b c6		 mov	 eax, esi

; 7555 : 
; 7556 :         if (_Mid.first - _First < _Last - _Mid.second) { // loop on second half

  0003c	8b cf		 mov	 ecx, edi
  0003e	2b 4d fc	 sub	 ecx, DWORD PTR __Mid$4[ebp+4]
  00041	83 c4 10	 add	 esp, 16			; 00000010H
  00044	c1 f8 02	 sar	 eax, 2
  00047	d1 fe		 sar	 esi, 1
  00049	03 f0		 add	 esi, eax
  0004b	b8 a7 c8 67 dd	 mov	 eax, -580400985		; dd67c8a7H
  00050	f7 e9		 imul	 ecx
  00052	89 75 10	 mov	 DWORD PTR __Ideal$[ebp], esi
  00055	b8 a7 c8 67 dd	 mov	 eax, -580400985		; dd67c8a7H
  0005a	03 d1		 add	 edx, ecx
  0005c	8b 4d f8	 mov	 ecx, DWORD PTR __Mid$4[ebp]
  0005f	c1 fa 07	 sar	 edx, 7
  00062	2b cb		 sub	 ecx, ebx
  00064	8b f2		 mov	 esi, edx
  00066	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  00069	03 f2		 add	 esi, edx
  0006b	f7 e9		 imul	 ecx
  0006d	03 d1		 add	 edx, ecx
  0006f	c1 fa 07	 sar	 edx, 7
  00072	8b c2		 mov	 eax, edx
  00074	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00077	03 c2		 add	 eax, edx
  00079	3b c6		 cmp	 eax, esi
  0007b	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
  0007e	8b 75 10	 mov	 esi, DWORD PTR __Ideal$[ebp]
  00081	50		 push	 eax
  00082	56		 push	 esi
  00083	7d 12		 jge	 SHORT $LN7@Sort_unche

; 7557 :             _Sort_unchecked(_First, _Mid.first, _Ideal, _Pred);

  00085	8b 45 f8	 mov	 eax, DWORD PTR __Mid$4[ebp]
  00088	50		 push	 eax
  00089	53		 push	 ebx
  0008a	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@0HU?$less@X@0@@Z ; std::_Sort_unchecked<std::pair<float,TFlyVertexSet> *,std::less<void> >

; 7558 :             _First = _Mid.second;

  0008f	8b 5d fc	 mov	 ebx, DWORD PTR __Mid$4[ebp+4]
  00092	89 5d 08	 mov	 DWORD PTR __First$[ebp], ebx

; 7559 :         } else { // loop on first half

  00095	eb 10		 jmp	 SHORT $LN158@Sort_unche
$LN7@Sort_unche:

; 7560 :             _Sort_unchecked(_Mid.second, _Last, _Ideal, _Pred);

  00097	8b 45 fc	 mov	 eax, DWORD PTR __Mid$4[ebp+4]
  0009a	57		 push	 edi
  0009b	50		 push	 eax
  0009c	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@0HU?$less@X@0@@Z ; std::_Sort_unchecked<std::pair<float,TFlyVertexSet> *,std::less<void> >

; 7561 :             _Last = _Mid.first;

  000a1	8b 7d f8	 mov	 edi, DWORD PTR __Mid$4[ebp]
  000a4	89 7d 0c	 mov	 DWORD PTR __Last$[ebp], edi
$LN158@Sort_unche:

; 7538 :     // order [_First, _Last)
; 7539 :     for (;;) {
; 7540 :         if (_Last - _First <= _ISORT_MAX) { // small

  000a7	8b c7		 mov	 eax, edi
  000a9	83 c4 10	 add	 esp, 16			; 00000010H
  000ac	2b c3		 sub	 eax, ebx
  000ae	3d 14 13 00 00	 cmp	 eax, 4884		; 00001314H
  000b3	0f 8d 6b ff ff
	ff		 jge	 $LL2@Sort_unche
$LN124@Sort_unche:

; 7412 :     if (_First != _Last) {

  000b9	3b df		 cmp	 ebx, edi
  000bb	0f 84 ef 02 00
	00		 je	 $LN103@Sort_unche

; 7413 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  000c1	8d 83 94 00 00
	00		 lea	 eax, DWORD PTR [ebx+148]
  000c7	89 45 08	 mov	 DWORD PTR __Mid$1$[ebp], eax
  000ca	3b c7		 cmp	 eax, edi
  000cc	0f 84 de 02 00
	00		 je	 $LN103@Sort_unche
  000d2	0f 1f 40 00 66
	66 0f 1f 84 00
	00 00 00 00	 npad	 14
$LL11@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000e0	f3 0f 10 03	 movss	 xmm0, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7415 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Mid);

  000e4	8d bd 50 ff ff
	ff		 lea	 edi, DWORD PTR __Val$3[ebp]
  000ea	b9 25 00 00 00	 mov	 ecx, 37			; 00000025H
  000ef	8b f0		 mov	 esi, eax
  000f1	f3 a5		 rep movsd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000f3	f3 0f 10 8d 50
	ff ff ff	 movss	 xmm1, DWORD PTR __Val$3[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7414 :             _BidIt _Hole               = _Mid;

  000fb	8b d0		 mov	 edx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000fd	0f 2f c1	 comiss	 xmm0, xmm1
  00100	0f 87 49 02 00
	00		 ja	 $LN140@Sort_unche
  00106	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL16@Sort_unche:
  00110	f3 0f 10 80 6c
	ff ff ff	 movss	 xmm0, DWORD PTR [eax-148]
  00118	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7421 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  0011b	2d 94 00 00 00	 sub	 eax, 148		; 00000094H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00120	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00125	0f 2f c1	 comiss	 xmm0, xmm1
  00128	0f 86 18 02 00
	00		 jbe	 $LN155@Sort_unche

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  0012e	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00132	8d 70 04	 lea	 esi, DWORD PTR [eax+4]
  00135	f3 a5		 rep movsd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7421 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  00137	8b d0		 mov	 edx, eax
  00139	eb d5		 jmp	 SHORT $LL16@Sort_unche
$LN125@Sort_unche:

; 6360 :     _Diff _Bottom = _Last - _First;

  0013b	2b fb		 sub	 edi, ebx
  0013d	b8 a7 c8 67 dd	 mov	 eax, -580400985		; dd67c8a7H
  00142	f7 ef		 imul	 edi
  00144	89 7d 0c	 mov	 DWORD PTR __Last$[ebp], edi
  00147	03 d7		 add	 edx, edi
  00149	c1 fa 07	 sar	 edx, 7
  0014c	8b c2		 mov	 eax, edx
  0014e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00151	03 c2		 add	 eax, edx

; 6361 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  00153	8b d0		 mov	 edx, eax
  00155	89 45 f0	 mov	 DWORD PTR __Bottom$1$[ebp], eax
  00158	d1 fa		 sar	 edx, 1
  0015a	85 d2		 test	 edx, edx
  0015c	0f 8e 41 01 00
	00		 jle	 $LN57@Sort_unche
  00162	48		 dec	 eax
  00163	89 45 e4	 mov	 DWORD PTR tv1105[ebp], eax
  00166	d1 f8		 sar	 eax, 1
  00168	89 45 f4	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], eax

; 6231 :         _Pop_heap_hole_unchecked(_First, _Last, _Last, _STD move(_Val), _Pred);
; 6232 :     }
; 6233 : }
; 6234 : 
; 6235 : template <class _RanIt, class _Pr>
; 6236 : _CONSTEXPR20 void pop_heap(_RanIt _First, _RanIt _Last, _Pr _Pred) {
; 6237 :     // pop *_First to *(_Last - 1) and reheap
; 6238 :     _Adl_verify_range(_First, _Last);
; 6239 :     _Pop_heap_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Pass_fn(_Pred));
; 6240 : }
; 6241 : 
; 6242 : template <class _RanIt>
; 6243 : _CONSTEXPR20 void pop_heap(_RanIt _First, _RanIt _Last) {
; 6244 :     // pop *_First to *(_Last - 1) and reheap
; 6245 :     _STD pop_heap(_First, _Last, less<>{});
; 6246 : }
; 6247 : 
; 6248 : #ifdef __cpp_lib_concepts
; 6249 : namespace ranges {
; 6250 :     // VARIABLE ranges::pop_heap
; 6251 :     // clang-format off
; 6252 :     template <random_access_iterator _It, class _Ty, class _Pr, class _Pj1, class _Pj2>
; 6253 :         requires sortable<_It, _Pr, _Pj1> && indirectly_writable<_It, _Ty>
; 6254 :             && indirect_strict_weak_order<_Pr, projected<_It, _Pj1>, projected<remove_reference_t<_Ty>*, _Pj2>>
; 6255 :     constexpr void _Pop_heap_hole_by_index(_It _First, iter_difference_t<_It> _Hole,
; 6256 :         const iter_difference_t<_It> _Bottom, _Ty&& _Val, _Pr _Pred, _Pj1 _Proj1, _Pj2 _Proj2) {
; 6257 :         // clang-format on
; 6258 :         // percolate _Hole to _Bottom, then push _Val
; 6259 :         _STL_INTERNAL_CHECK(_Hole >= 0);
; 6260 :         _STL_INTERNAL_CHECK(_Bottom > 0);
; 6261 : 
; 6262 :         using _Diff      = iter_difference_t<_It>;
; 6263 :         const _Diff _Top = _Hole;
; 6264 :         _Diff _Idx       = _Hole;
; 6265 : 
; 6266 :         // Check whether _Idx can have a child before calculating that child's index, since
; 6267 :         // calculating the child's index can trigger integer overflows
; 6268 :         const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen
; 6269 :         while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child
; 6270 :             _Idx      = 2 * _Idx + 2;
; 6271 :             auto _Mid = _First + _Idx;
; 6272 :             if (_STD invoke(_Pred, _STD invoke(_Proj1, *_Mid), _STD invoke(_Proj1, *_RANGES prev(_Mid)))) {
; 6273 :                 --_Idx;
; 6274 :                 --_Mid;
; 6275 :             }
; 6276 :             *(_First + _Hole) = _RANGES iter_move(_Mid);
; 6277 :             _Hole             = _Idx;
; 6278 :         }
; 6279 : 
; 6280 :         if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it
; 6281 :             *(_First + _Hole) = _RANGES iter_move(_First + (_Bottom - 1));
; 6282 :             _Hole             = _Bottom - 1;
; 6283 :         }
; 6284 : 
; 6285 :         _RANGES _Push_heap_by_index(_STD move(_First), _Hole, _Top, _STD forward<_Ty>(_Val), _Pred, _Proj1, _Proj2);
; 6286 :     }
; 6287 : 
; 6288 :     // clang-format off
; 6289 :     template <random_access_iterator _It, class _Ty, class _Pr, class _Pj1, class _Pj2>
; 6290 :         requires sortable<_It, _Pr, _Pj1> && indirectly_writable<_It, _Ty>
; 6291 :             && indirect_strict_weak_order<_Pr, projected<_It, _Pj1>, projected<remove_reference_t<_Ty>*, _Pj2>>
; 6292 :     constexpr void _Pop_heap_hole_unchecked(
; 6293 :         _It _First, const _It _Last, const _It _Dest, _Ty&& _Val, _Pr _Pred, _Pj1 _Proj1, _Pj2 _Proj2) {
; 6294 :         // clang-format on
; 6295 :         // pop *_First to *_Dest and reheap
; 6296 :         _STL_INTERNAL_CHECK(_First != _Last);
; 6297 :         _STL_INTERNAL_CHECK(_First != _Dest);
; 6298 : 
; 6299 :         *_Dest            = _RANGES iter_move(_First);
; 6300 :         const auto _Count = _Last - _First;
; 6301 :         _RANGES _Pop_heap_hole_by_index(_STD move(_First), 0, _Count, _STD forward<_Ty>(_Val), _Pred, _Proj1, _Proj2);
; 6302 :     }
; 6303 : 
; 6304 :     // clang-format off
; 6305 :     template <random_access_iterator _It, class _Pr, class _Pj>
; 6306 :         requires sortable<_It, _Pr, _Pj>
; 6307 :     constexpr void _Pop_heap_unchecked(_It _First, _It _Last, _Pr _Pred, _Pj _Proj) {
; 6308 :         // clang-format on
; 6309 :         // pop *_First to *(_Last - 1) and reheap
; 6310 :         if (_Last - _First < 2) {
; 6311 :             return;
; 6312 :         }
; 6313 : 
; 6314 :         --_Last;
; 6315 :         iter_value_t<_It> _Val = _RANGES iter_move(_Last);
; 6316 :         // NB: if _Proj is a _Ref_fn, this aliases the _Proj1 and _Proj2 parameters of _Pop_heap_hole_unchecked
; 6317 :         _RANGES _Pop_heap_hole_unchecked(_STD move(_First), _Last, _Last, _STD move(_Val), _Pred, _Proj, _Proj);
; 6318 :     }
; 6319 : 
; 6320 :     class _Pop_heap_fn : private _Not_quite_object {
; 6321 :     public:
; 6322 :         using _Not_quite_object::_Not_quite_object;
; 6323 : 
; 6324 :         // clang-format off
; 6325 :         template <random_access_iterator _It, sentinel_for<_It> _Se, class _Pr = ranges::less, class _Pj = identity>
; 6326 :             requires sortable<_It, _Pr, _Pj>
; 6327 :         constexpr _It operator()(_It _First, _Se _Last, _Pr _Pred = {}, _Pj _Proj = {}) const {
; 6328 :             _Adl_verify_range(_First, _Last);
; 6329 :             auto _UFirst = _Get_unwrapped(_STD move(_First));
; 6330 :             auto _ULast  = _Get_final_iterator_unwrapped<_It>(_UFirst, _STD move(_Last));
; 6331 :             _Seek_wrapped(_First, _ULast);
; 6332 :             _RANGES _Pop_heap_unchecked(_STD move(_UFirst), _STD move(_ULast), _Pass_fn(_Pred), _Pass_fn(_Proj));
; 6333 :             return _First;
; 6334 :         }
; 6335 : 
; 6336 :         template <random_access_range _Rng, class _Pr = ranges::less, class _Pj = identity>
; 6337 :             requires sortable<iterator_t<_Rng>, _Pr, _Pj>
; 6338 :         constexpr borrowed_iterator_t<_Rng> operator()(_Rng&& _Range, _Pr _Pred = {}, _Pj _Proj = {}) const {
; 6339 :             if constexpr (common_range<_Rng>) {
; 6340 :                 _RANGES _Pop_heap_unchecked(_Ubegin(_Range), _Uend(_Range), _Pass_fn(_Pred), _Pass_fn(_Proj));
; 6341 :                 return _RANGES end(_Range);
; 6342 :             } else {
; 6343 :                 auto _ULast = _Get_final_iterator_unwrapped(_Range);
; 6344 :                 _RANGES _Pop_heap_unchecked(_Ubegin(_Range), _ULast, _Pass_fn(_Pred), _Pass_fn(_Proj));
; 6345 :                 return _Rewrap_iterator(_Range, _STD move(_ULast));
; 6346 :             }
; 6347 :         }
; 6348 :         // clang-format on
; 6349 :     };
; 6350 : 
; 6351 :     inline constexpr _Pop_heap_fn pop_heap{_Not_quite_object::_Construct_tag{}};
; 6352 : } // namespace ranges
; 6353 : #endif // __cpp_lib_concepts
; 6354 : 
; 6355 : // FUNCTION TEMPLATE make_heap
; 6356 : template <class _RanIt, class _Pr>
; 6357 : _CONSTEXPR20 void _Make_heap_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {
; 6358 :     // make [_First, _Last) into a heap
; 6359 :     using _Diff   = _Iter_diff_t<_RanIt>;
; 6360 :     _Diff _Bottom = _Last - _First;

  0016b	69 c2 94 00 00
	00		 imul	 eax, edx, 148
  00171	03 c3		 add	 eax, ebx
$LL56@Sort_unche:

; 6362 :         // reheap top half, bottom to top
; 6363 :         --_Hole;

  00173	2d 94 00 00 00	 sub	 eax, 148		; 00000094H

; 6364 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  00178	8d bd 50 ff ff
	ff		 lea	 edi, DWORD PTR __Val$2[ebp]
  0017e	4a		 dec	 edx
  0017f	89 45 fc	 mov	 DWORD PTR tv1098[ebp], eax
  00182	8b f0		 mov	 esi, eax
  00184	b9 25 00 00 00	 mov	 ecx, 37			; 00000025H

; 6192 :     _Diff _Idx       = _Hole;

  00189	8b c2		 mov	 eax, edx

; 6363 :         --_Hole;

  0018b	89 55 e8	 mov	 DWORD PTR __Hole$1$[ebp], edx

; 6364 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  0018e	f3 a5		 rep movsd

; 6365 :         _Pop_heap_hole_by_index(_First, _Hole, _Bottom, _STD move(_Val), _Pred);

  00190	8b fa		 mov	 edi, edx

; 6197 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  00192	3b 55 f4	 cmp	 edx, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  00195	7d 61		 jge	 SHORT $LN62@Sort_unche
  00197	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL61@Sort_unche:

; 6198 :         _Idx = 2 * _Idx + 2;

  001a0	8d 14 00	 lea	 edx, DWORD PTR [eax+eax]

; 6199 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {

  001a3	8d 42 02	 lea	 eax, DWORD PTR [edx+2]
  001a6	69 c8 94 00 00
	00		 imul	 ecx, eax, 148
  001ac	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
  001af	69 c0 94 00 00
	00		 imul	 eax, eax, 148

; 6202 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  001b5	f3 0f 10 04 18	 movss	 xmm0, DWORD PTR [eax+ebx]
  001ba	33 c0		 xor	 eax, eax
  001bc	0f 2f 04 19	 comiss	 xmm0, DWORD PTR [ecx+ebx]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  001c0	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6202 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  001c5	0f 96 c0	 setbe	 al
  001c8	69 ff 94 00 00
	00		 imul	 edi, edi, 148
  001ce	40		 inc	 eax
  001cf	03 fb		 add	 edi, ebx
  001d1	03 c2		 add	 eax, edx
  001d3	69 f0 94 00 00
	00		 imul	 esi, eax, 148
  001d9	89 45 ec	 mov	 DWORD PTR __Idx$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  001dc	8b 04 1e	 mov	 eax, DWORD PTR [esi+ebx]
  001df	89 07		 mov	 DWORD PTR [edi], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  001e1	83 c7 04	 add	 edi, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6203 :         _Hole             = _Idx;

  001e4	8b 45 ec	 mov	 eax, DWORD PTR __Idx$1$[ebp]
  001e7	03 f3		 add	 esi, ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  001e9	83 c6 04	 add	 esi, 4
  001ec	f3 a5		 rep movsd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6203 :         _Hole             = _Idx;

  001ee	8b f8		 mov	 edi, eax
  001f0	3b 45 f4	 cmp	 eax, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  001f3	7c ab		 jl	 SHORT $LL61@Sort_unche
  001f5	8b 55 e8	 mov	 edx, DWORD PTR __Hole$1$[ebp]
$LN62@Sort_unche:

; 6204 :     }
; 6205 : 
; 6206 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  001f8	3b 7d f4	 cmp	 edi, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  001fb	75 33		 jne	 SHORT $LN64@Sort_unche
  001fd	8b 45 f0	 mov	 eax, DWORD PTR __Bottom$1$[ebp]
  00200	a8 01		 test	 al, 1
  00202	75 2c		 jne	 SHORT $LN64@Sort_unche

; 6207 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  00204	69 c8 94 00 00
	00		 imul	 ecx, eax, 148
  0020a	69 ff 94 00 00
	00		 imul	 edi, edi, 148
  00210	03 fb		 add	 edi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  00212	8b 84 19 6c ff
	ff ff		 mov	 eax, DWORD PTR [ecx+ebx-148]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00219	8d b1 70 ff ff
	ff		 lea	 esi, DWORD PTR [ecx-144]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  0021f	89 07		 mov	 DWORD PTR [edi], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00221	03 f3		 add	 esi, ebx
  00223	83 c7 04	 add	 edi, 4
  00226	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  0022b	f3 a5		 rep movsd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6208 :         _Hole             = _Bottom - 1;

  0022d	8b 7d e4	 mov	 edi, DWORD PTR tv1105[ebp]
$LN64@Sort_unche:

; 6077 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00230	f3 0f 10 8d 50
	ff ff ff	 movss	 xmm1, DWORD PTR __Val$2[ebp]
  00238	3b d7		 cmp	 edx, edi
  0023a	7d 3a		 jge	 SHORT $LN157@Sort_unche
  0023c	0f 1f 40 00	 npad	 4
$LL84@Sort_unche:

; 6076 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00240	8d 47 ff	 lea	 eax, DWORD PTR [edi-1]
  00243	d1 f8		 sar	 eax, 1

; 6077 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  00245	69 c8 94 00 00
	00		 imul	 ecx, eax, 148
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  0024b	f3 0f 10 04 19	 movss	 xmm0, DWORD PTR [ecx+ebx]
  00250	0f 2f c8	 comiss	 xmm1, xmm0
  00253	76 21		 jbe	 SHORT $LN157@Sort_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6080 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00255	69 ff 94 00 00
	00		 imul	 edi, edi, 148
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  0025b	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6080 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  0025e	03 fb		 add	 edi, ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00260	03 f3		 add	 esi, ebx
  00262	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  00267	f3 0f 11 07	 movss	 DWORD PTR [edi], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  0026b	83 c7 04	 add	 edi, 4
  0026e	f3 a5		 rep movsd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6081 :         _Hole             = _Idx;

  00270	8b f8		 mov	 edi, eax
  00272	3b d0		 cmp	 edx, eax
  00274	7c ca		 jl	 SHORT $LL84@Sort_unche
$LN157@Sort_unche:

; 6361 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  00276	8b 45 fc	 mov	 eax, DWORD PTR tv1098[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00279	8d b5 54 ff ff
	ff		 lea	 esi, DWORD PTR __Val$2[ebp+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6084 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

  0027f	69 ff 94 00 00
	00		 imul	 edi, edi, 148
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00285	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6084 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

  0028a	03 fb		 add	 edi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  0028c	f3 0f 11 0f	 movss	 DWORD PTR [edi], xmm1
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00290	83 c7 04	 add	 edi, 4
  00293	f3 a5		 rep movsd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6361 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  00295	85 d2		 test	 edx, edx
  00297	0f 8f d6 fe ff
	ff		 jg	 $LL56@Sort_unche
  0029d	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  002a0	8b 45 f0	 mov	 eax, DWORD PTR __Bottom$1$[ebp]
$LN57@Sort_unche:

; 6592 :     for (; _Last - _First >= 2; --_Last) {

  002a3	83 f8 02	 cmp	 eax, 2
  002a6	0f 8c 04 01 00
	00		 jl	 $LN103@Sort_unche
  002ac	0f 1f 40 00	 npad	 4
$LL104@Sort_unche:

; 6228 :     if (2 <= _Last - _First) {

  002b0	b8 4d 91 cf ba	 mov	 eax, -1160801971	; bacf914dH
  002b5	f7 e7		 mul	 edi
  002b7	8b c7		 mov	 eax, edi
  002b9	2b c2		 sub	 eax, edx
  002bb	d1 e8		 shr	 eax, 1
  002bd	03 c2		 add	 eax, edx
  002bf	c1 e8 07	 shr	 eax, 7
  002c2	83 f8 02	 cmp	 eax, 2
  002c5	7c 63		 jl	 SHORT $LN102@Sort_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  002c7	8b 03		 mov	 eax, DWORD PTR [ebx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6230 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  002c9	8d 14 3b	 lea	 edx, DWORD PTR [ebx+edi]

; 6221 :     _Pop_heap_hole_by_index(

  002cc	ff 75 14	 push	 DWORD PTR __Pred$[ebp]

; 6230 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  002cf	8d b2 6c ff ff
	ff		 lea	 esi, DWORD PTR [edx-148]
  002d5	b9 25 00 00 00	 mov	 ecx, 37			; 00000025H
  002da	8d bd 50 ff ff
	ff		 lea	 edi, DWORD PTR __Val$1[ebp]
  002e0	f3 a5		 rep movsd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  002e2	89 82 6c ff ff
	ff		 mov	 DWORD PTR [edx-148], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  002e8	8d 73 04	 lea	 esi, DWORD PTR [ebx+4]
  002eb	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6221 :     _Pop_heap_hole_by_index(

  002ee	8d 85 50 ff ff
	ff		 lea	 eax, DWORD PTR __Val$1[ebp]
  002f4	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  002f5	81 c3 6c ff ff
	ff		 add	 ebx, -148		; ffffff6cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6221 :     _Pop_heap_hole_by_index(

  002fb	b8 a7 c8 67 dd	 mov	 eax, -580400985		; dd67c8a7H
  00300	f7 eb		 imul	 ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00302	8d 3c 1e	 lea	 edi, DWORD PTR [esi+ebx]
  00305	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6221 :     _Pop_heap_hole_by_index(

  0030a	03 d3		 add	 edx, ebx
  0030c	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  0030f	c1 fa 07	 sar	 edx, 7
  00312	8b c2		 mov	 eax, edx
  00314	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00317	03 c2		 add	 eax, edx
  00319	50		 push	 eax
  0031a	6a 00		 push	 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  0031c	f3 a5		 rep movsd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6221 :     _Pop_heap_hole_by_index(

  0031e	53		 push	 ebx
  0031f	e8 00 00 00 00	 call	 ??$_Pop_heap_hole_by_index@PAU?$pair@MUTFlyVertexSet@@@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@HH$$QAU10@U?$less@X@0@@Z ; std::_Pop_heap_hole_by_index<std::pair<float,TFlyVertexSet> *,std::pair<float,TFlyVertexSet>,std::less<void> >
  00324	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  00327	83 c4 14	 add	 esp, 20			; 00000014H
$LN102@Sort_unche:

; 6592 :     for (; _Last - _First >= 2; --_Last) {

  0032a	81 ef 94 00 00
	00		 sub	 edi, 148		; 00000094H
  00330	89 7d 0c	 mov	 DWORD PTR __Last$[ebp], edi
  00333	81 ff 28 01 00
	00		 cmp	 edi, 296		; 00000128H
  00339	0f 8d 71 ff ff
	ff		 jge	 $LL104@Sort_unche

; 7562 :         }
; 7563 :     }
; 7564 : }

  0033f	5f		 pop	 edi
  00340	5e		 pop	 esi
  00341	5b		 pop	 ebx
  00342	8b e5		 mov	 esp, ebp
  00344	5d		 pop	 ebp
  00345	c3		 ret	 0
$LN155@Sort_unche:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00346	8b 45 08	 mov	 eax, DWORD PTR __Mid$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  00349	f3 0f 11 0a	 movss	 DWORD PTR [edx], xmm1
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  0034d	eb 48		 jmp	 SHORT $LN159@Sort_unche
$LN140@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 4700 :     while (_First != _Last) {

  0034f	3b c3		 cmp	 eax, ebx
  00351	74 38		 je	 SHORT $LN30@Sort_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7418 :                 _Move_backward_unchecked(_First, _Mid, ++_Hole);

  00353	8d 50 04	 lea	 edx, DWORD PTR [eax+4]
  00356	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL131@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  00360	8b 82 68 ff ff
	ff		 mov	 eax, DWORD PTR [edx-152]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 4701 :         *--_Dest = _STD move(*--_Last);

  00366	81 ea 94 00 00
	00		 sub	 edx, 148		; 00000094H
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  0036c	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00371	8b f2		 mov	 esi, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  00373	89 82 90 00 00
	00		 mov	 DWORD PTR [edx+144], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00379	8d ba 94 00 00
	00		 lea	 edi, DWORD PTR [edx+148]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 4700 :     while (_First != _Last) {

  0037f	8d 42 fc	 lea	 eax, DWORD PTR [edx-4]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  00382	f3 a5		 rep movsd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 4700 :     while (_First != _Last) {

  00384	3b c3		 cmp	 eax, ebx
  00386	75 d8		 jne	 SHORT $LL131@Sort_unche
  00388	8b 45 08	 mov	 eax, DWORD PTR __Mid$1$[ebp]
$LN30@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  0038b	f3 0f 11 0b	 movss	 DWORD PTR [ebx], xmm1
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 112  : 		memcpy(v,rhs.v,sizeof(v));

  0038f	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  00392	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
$LN159@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7413 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  00397	05 94 00 00 00	 add	 eax, 148		; 00000094H
  0039c	8d b5 54 ff ff
	ff		 lea	 esi, DWORD PTR __Val$3[ebp+4]
  003a2	f3 a5		 rep movsd
  003a4	89 45 08	 mov	 DWORD PTR __Mid$1$[ebp], eax
  003a7	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  003aa	0f 85 30 fd ff
	ff		 jne	 $LL11@Sort_unche
$LN103@Sort_unche:
  003b0	5f		 pop	 edi

; 7562 :         }
; 7563 :     }
; 7564 : }

  003b1	5e		 pop	 esi
  003b2	5b		 pop	 ebx
  003b3	8b e5		 mov	 esp, ebp
  003b5	5d		 pop	 ebp
  003b6	c3		 ret	 0
??$_Sort_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@0HU?$less@X@0@@Z ENDP ; std::_Sort_unchecked<std::pair<float,TFlyVertexSet> *,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAVCFlyTrace@@V?$allocator@PAVCFlyTrace@@@std@@@std@@YAPAPAVCFlyTrace@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCFlyTrace@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAVCFlyTrace@@V?$allocator@PAVCFlyTrace@@@std@@@std@@YAPAPAVCFlyTrace@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCFlyTrace@@@0@@Z PROC ; std::_Uninitialized_move<CFlyTrace * *,std::allocator<CFlyTrace *> >, COMDAT

; 1685 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1686 :     // move [_First, _Last) to raw _Dest, using _Al
; 1687 :     // note: only called internally from elsewhere in the STL
; 1688 :     using _Ptrval     = typename _Alloc::value_type*;
; 1689 :     auto _UFirst      = _Get_unwrapped(_First);
; 1690 :     const auto _ULast = _Get_unwrapped(_Last);
; 1691 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1692 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1693 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAVCFlyTrace@@PAPAV1@@std@@YAPAPAVCFlyTrace@@PAPAV1@00@Z ; std::_Copy_memmove<CFlyTrace * *,CFlyTrace * *>

; 1694 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1695 :     } else {
; 1696 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1697 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1698 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1699 :         }
; 1700 : 
; 1701 :         return _Backout._Release();
; 1702 :     }
; 1703 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAVCFlyTrace@@V?$allocator@PAVCFlyTrace@@@std@@@std@@YAPAPAVCFlyTrace@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCFlyTrace@@@0@@Z ENDP ; std::_Uninitialized_move<CFlyTrace * *,std::allocator<CFlyTrace *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAU?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@YAPAU?$pair@MUTFlyVertexSet@@@0@QAU10@0PAU10@AAV?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAU?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@YAPAU?$pair@MUTFlyVertexSet@@@0@QAU10@0PAU10@AAV?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::pair<float,TFlyVertexSet> *,std::allocator<std::pair<float,TFlyVertexSet> > >, COMDAT

; 1685 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1686 :     // move [_First, _Last) to raw _Dest, using _Al
; 1687 :     // note: only called internally from elsewhere in the STL
; 1688 :     using _Ptrval     = typename _Alloc::value_type*;
; 1689 :     auto _UFirst      = _Get_unwrapped(_First);
; 1690 :     const auto _ULast = _Get_unwrapped(_Last);
; 1691 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1692 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1693 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1694 :         return _Dest + (_ULast - _UFirst);
; 1695 :     } else {
; 1696 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1697 :         for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]

; 1535 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00006	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 1685 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00009	53		 push	 ebx

; 1686 :     // move [_First, _Last) to raw _Dest, using _Al
; 1687 :     // note: only called internally from elsewhere in the STL
; 1688 :     using _Ptrval     = typename _Alloc::value_type*;
; 1689 :     auto _UFirst      = _Get_unwrapped(_First);
; 1690 :     const auto _ULast = _Get_unwrapped(_Last);
; 1691 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1692 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1693 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1694 :         return _Dest + (_ULast - _UFirst);
; 1695 :     } else {
; 1696 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1697 :         for (; _UFirst != _ULast; ++_UFirst) {

  0000a	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0000d	3b d3		 cmp	 edx, ebx
  0000f	74 1e		 je	 SHORT $LN3@Uninitiali
  00011	56		 push	 esi
  00012	57		 push	 edi
$LL4@Uninitiali:

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00013	8b f2		 mov	 esi, edx
  00015	8b f8		 mov	 edi, eax

; 1547 :         ++_Last;

  00017	81 c2 94 00 00
	00		 add	 edx, 148		; 00000094H

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0001d	b9 25 00 00 00	 mov	 ecx, 37			; 00000025H

; 1547 :         ++_Last;

  00022	05 94 00 00 00	 add	 eax, 148		; 00000094H

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00027	f3 a5		 rep movsd

; 1686 :     // move [_First, _Last) to raw _Dest, using _Al
; 1687 :     // note: only called internally from elsewhere in the STL
; 1688 :     using _Ptrval     = typename _Alloc::value_type*;
; 1689 :     auto _UFirst      = _Get_unwrapped(_First);
; 1690 :     const auto _ULast = _Get_unwrapped(_Last);
; 1691 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1692 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1693 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1694 :         return _Dest + (_ULast - _UFirst);
; 1695 :     } else {
; 1696 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1697 :         for (; _UFirst != _ULast; ++_UFirst) {

  00029	3b d3		 cmp	 edx, ebx
  0002b	75 e6		 jne	 SHORT $LL4@Uninitiali

; 1698 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1699 :         }
; 1700 : 
; 1701 :         return _Backout._Release();

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
$LN3@Uninitiali:
  0002f	5b		 pop	 ebx

; 1702 :     }
; 1703 : }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??$_Uninitialized_move@PAU?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@YAPAU?$pair@MUTFlyVertexSet@@@0@QAU10@0PAU10@AAV?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::pair<float,TFlyVertexSet> *,std::allocator<std::pair<float,TFlyVertexSet> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Zero_range@PAPAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Zero_range@PAPAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0@Z PROC ; std::_Zero_range<std::pair<float,D3DXVECTOR3> * *>, COMDAT

; 1852 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1853 :     char* const _First_ch = reinterpret_cast<char*>(_First);
; 1854 :     char* const _Last_ch  = reinterpret_cast<char*>(_Last);
; 1855 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00003	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b ca		 sub	 ecx, edx
  0000b	51		 push	 ecx
  0000c	6a 00		 push	 0
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 _memset

; 1856 :     return _Last;

  00014	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1857 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??$_Zero_range@PAPAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0@Z ENDP ; std::_Zero_range<std::pair<float,D3DXVECTOR3> * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@00@Z PROC ; std::_Copy_memmove<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>, COMDAT

; 4360 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4361 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4362 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4363 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4364 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4365 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4366 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4367 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@00@Z ENDP ; std::_Copy_memmove<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1089 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __Obj$[ebp]
  00009	8b 00		 mov	 eax, DWORD PTR [eax]
  0000b	89 01		 mov	 DWORD PTR [ecx], eax
  0000d	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1003 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00003	6a 08		 push	 8
  00005	ff 75 0c	 push	 DWORD PTR __Ptr$[ebp]
  00008	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000d	83 c4 08	 add	 esp, 8

; 1004 :     // deallocate a plain pointer using an allocator
; 1005 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1006 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1007 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);
; 1008 :     } else {
; 1009 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1010 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1011 :     }
; 1012 : }

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCFlyTrace@@@std@@@std@@YAXPAPAVCFlyTrace@@QAPAV1@AAV?$allocator@PAVCFlyTrace@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCFlyTrace@@@std@@@std@@YAXPAPAVCFlyTrace@@QAPAV1@AAV?$allocator@PAVCFlyTrace@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CFlyTrace *> >, COMDAT

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {
; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCFlyTrace@@@std@@@std@@YAXPAPAVCFlyTrace@@QAPAV1@AAV?$allocator@PAVCFlyTrace@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CFlyTrace *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@std@@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@QAU10@AAV?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@std@@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@QAU10@AAV?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::pair<float,TFlyVertexSet> > >, COMDAT

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {
; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@std@@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@QAU10@AAV?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::pair<float,TFlyVertexSet> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAXPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Destroy_range@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAXPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@@Z PROC ; std::_Destroy_range<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>, COMDAT

; 975  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 976  :     if _CONSTEXPR_IF (!is_trivially_destructible_v<_Iter_value_t<_NoThrowFwdIt>>) {
; 977  :         for (; _First != _Last; ++_First) {
; 978  :             _Destroy_in_place(*_First);
; 979  :         }
; 980  :     }
; 981  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAXPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@@Z ENDP ; std::_Destroy_range<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n_unchecked1@PAPAU?$pair@MUD3DXVECTOR3@@@std@@I@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@I@Z
_TEXT	SEGMENT
__UFirst$ = 8						; size = 4
__Count$ = 12						; size = 4
??$_Uninitialized_value_construct_n_unchecked1@PAPAU?$pair@MUD3DXVECTOR3@@@std@@I@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@I@Z PROC ; std::_Uninitialized_value_construct_n_unchecked1<std::pair<float,D3DXVECTOR3> * *,unsigned int>, COMDAT

; 1912 : _NoThrowFwdIt _Uninitialized_value_construct_n_unchecked1(_NoThrowFwdIt _UFirst, _Diff _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1913 :     // value-initialize all elements in [_UFirst, _UFirst + _Count_raw)
; 1914 :     _STL_INTERNAL_CHECK(_Count >= 0);
; 1915 :     if constexpr (_Use_memset_value_construct_v<_NoThrowFwdIt>) {
; 1916 :         return _Zero_range(_UFirst, _UFirst + _Count);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __UFirst$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00009	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0000c	89 45 0c	 mov	 DWORD PTR __Count$[ebp], eax
  0000f	89 4d 08	 mov	 DWORD PTR __UFirst$[ebp], ecx

; 1917 :     } else {
; 1918 :         _Uninitialized_backout<_NoThrowFwdIt> _Backout{_UFirst};
; 1919 :         for (; 0 < _Count; --_Count) {
; 1920 :             _Backout._Emplace_back();
; 1921 :         }
; 1922 : 
; 1923 :         return _Backout._Release();
; 1924 :     }
; 1925 : }

  00012	5d		 pop	 ebp

; 1913 :     // value-initialize all elements in [_UFirst, _UFirst + _Count_raw)
; 1914 :     _STL_INTERNAL_CHECK(_Count >= 0);
; 1915 :     if constexpr (_Use_memset_value_construct_v<_NoThrowFwdIt>) {
; 1916 :         return _Zero_range(_UFirst, _UFirst + _Count);

  00013	e9 00 00 00 00	 jmp	 ??$_Zero_range@PAPAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0@Z ; std::_Zero_range<std::pair<float,D3DXVECTOR3> * *>
??$_Uninitialized_value_construct_n_unchecked1@PAPAU?$pair@MUD3DXVECTOR3@@@std@@I@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@I@Z ENDP ; std::_Uninitialized_value_construct_n_unchecked1<std::pair<float,D3DXVECTOR3> * *,unsigned int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$uninitialized_copy@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0PAPAU10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$uninitialized_copy@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0PAPAU10@@Z PROC ; std::uninitialized_copy<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>, COMDAT

; 1629 : _NoThrowFwdIt uninitialized_copy(const _InIt _First, const _InIt _Last, _NoThrowFwdIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1637 :     } else {
; 1638 :         _Uninitialized_backout<decltype(_UDest)> _Backout{_UDest};
; 1639 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1640 :             _Backout._Emplace_back(*_UFirst);
; 1641 :         }
; 1642 : 
; 1643 :         _UDest = _Backout._Release();
; 1644 :     }
; 1645 : 
; 1646 :     _Seek_wrapped(_Dest, _UDest);
; 1647 :     return _Dest;
; 1648 : }

  00003	5d		 pop	 ebp

; 1630 :     // copy [_First, _Last) to raw [_Dest, ...)
; 1631 :     _Adl_verify_range(_First, _Last);
; 1632 :     auto _UFirst      = _Get_unwrapped(_First);
; 1633 :     const auto _ULast = _Get_unwrapped(_Last);
; 1634 :     auto _UDest       = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));
; 1635 :     if constexpr (_Ptr_copy_cat<decltype(_UFirst), decltype(_UDest)>::_Really_trivial) {
; 1636 :         _UDest = _Copy_memmove(_UFirst, _ULast, _UDest);

  00004	e9 00 00 00 00	 jmp	 ??$_Copy_memmove@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@00@Z ; std::_Copy_memmove<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>
??$uninitialized_copy@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0PAPAU10@@Z ENDP ; std::uninitialized_copy<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAXAAPAU?$pair@MUD3DXVECTOR3@@@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAXAAPAU?$pair@MUD3DXVECTOR3@@@0@@Z PROC ; std::_Destroy_in_place<std::pair<float,D3DXVECTOR3> *>, COMDAT

; 271  : #if _HAS_IF_CONSTEXPR
; 272  :     if constexpr (is_array_v<_Ty>) {
; 273  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 274  :     } else
; 275  : #endif // _HAS_IF_CONSTEXPR
; 276  :     {
; 277  :         _Obj.~_Ty();
; 278  :     }
; 279  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$pair@MUD3DXVECTOR3@@@std@@@std@@YAXAAPAU?$pair@MUD3DXVECTOR3@@@0@@Z ENDP ; std::_Destroy_in_place<std::pair<float,D3DXVECTOR3> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAVCFlyTrace@@@?$vector@PAVCFlyTrace@@V?$allocator@PAVCFlyTrace@@@std@@@std@@QAEPAPAVCFlyTrace@@QAPAV2@ABQAV2@@Z
_TEXT	SEGMENT
tv435 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv434 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAVCFlyTrace@@@?$vector@PAVCFlyTrace@@V?$allocator@PAVCFlyTrace@@@std@@@std@@QAEPAPAVCFlyTrace@@QAPAV2@ABQAV2@@Z PROC ; std::vector<CFlyTrace *,std::allocator<CFlyTrace *> >::_Emplace_reallocate<CFlyTrace * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 c4 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1620 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 3a		 jbe	 SHORT $LN12@Emplace_re

; 1621 :             return _Max; // geometric growth would overflow

  00045	b9 ff ff ff 3f	 mov	 ecx, 1073741823		; 3fffffffH
$LN20@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 65   :     return _Count * _Ty_size;

  0004a	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00051	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00052	89 45 f4	 mov	 DWORD PTR tv435[ebp], eax

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00055	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0005a	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005d	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0005f	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00062	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00065	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00068	89 45 fc	 mov	 DWORD PTR tv434[ebp], eax
  0006b	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0006d	89 08		 mov	 DWORD PTR [eax], ecx
  0006f	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00072	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00074	3b da		 cmp	 ebx, edx
  00076	75 1b		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00078	8b 5d fc	 mov	 ebx, DWORD PTR tv434[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0007b	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0007d	eb 2b		 jmp	 SHORT $LN5@Emplace_re
$LN12@Emplace_re:

; 1624 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0007f	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00082	8b cf		 mov	 ecx, edi
  00084	3b c7		 cmp	 eax, edi
  00086	0f 43 c8	 cmovae	 ecx, eax
  00089	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0008f	77 60		 ja	 SHORT $LN40@Emplace_re
  00091	eb b7		 jmp	 SHORT $LN20@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00093	56		 push	 esi
  00094	57		 push	 edi
  00095	53		 push	 ebx
  00096	51		 push	 ecx
  00097	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCFlyTrace@@V?$allocator@PAVCFlyTrace@@@std@@@std@@YAPAPAVCFlyTrace@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCFlyTrace@@@0@@Z ; std::_Uninitialized_move<CFlyTrace * *,std::allocator<CFlyTrace *> >
  0009c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0009f	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8b 5d fc	 mov	 ebx, DWORD PTR tv434[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000a4	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a7	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000aa	56		 push	 esi
  000ab	50		 push	 eax
  000ac	52		 push	 edx
  000ad	51		 push	 ecx
  000ae	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAVCFlyTrace@@V?$allocator@PAVCFlyTrace@@@std@@@std@@YAPAPAVCFlyTrace@@QAPAV1@0PAPAV1@AAV?$allocator@PAVCFlyTrace@@@0@@Z ; std::_Uninitialized_move<CFlyTrace * *,std::allocator<CFlyTrace *> >

; 1676 :         if (_Myfirst) { // destroy and deallocate old array

  000b3	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000b5	83 c4 10	 add	 esp, 16			; 00000010H

; 1676 :         if (_Myfirst) { // destroy and deallocate old array

  000b8	85 c9		 test	 ecx, ecx
  000ba	74 12		 je	 SHORT $LN33@Emplace_re

; 1677 :             _Destroy(_Myfirst, _Mylast);
; 1678 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000bc	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000bf	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000c1	83 e0 fc	 and	 eax, -4			; fffffffcH
  000c4	50		 push	 eax
  000c5	51		 push	 ecx
  000c6	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000cb	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1682 :         _Mylast  = _Newvec + _Newsize;

  000ce	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  000d1	89 3e		 mov	 DWORD PTR [esi], edi
  000d3	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000d6	8b c3		 mov	 eax, ebx

; 1682 :         _Mylast  = _Newvec + _Newsize;

  000d8	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1683 :         _Myend   = _Newvec + _Newcapacity;

  000db	8b 4d f4	 mov	 ecx, DWORD PTR tv435[ebp]
  000de	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000e0	5f		 pop	 edi

; 1683 :         _Myend   = _Newvec + _Newcapacity;

  000e1	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx

; 767  :     }

  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000ec	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAVCFlyTrace@@V?$allocator@PAVCFlyTrace@@@std@@@std@@CAXXZ ; std::vector<CFlyTrace *,std::allocator<CFlyTrace *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000f1	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f6	cc		 int	 3
??$_Emplace_reallocate@ABQAVCFlyTrace@@@?$vector@PAVCFlyTrace@@V?$allocator@PAVCFlyTrace@@@std@@@std@@QAEPAPAVCFlyTrace@@QAPAV2@ABQAV2@@Z ENDP ; std::vector<CFlyTrace *,std::allocator<CFlyTrace *> >::_Emplace_reallocate<CFlyTrace * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1032 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1033 :     using _Ty = typename _Alloc::value_type;
; 1034 :     _Ptr->~_Ty();
; 1035 :     _Deallocate_plain(_Al, _Ptr);

  00000	e9 00 00 00 00	 jmp	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??$_Emplace_reallocate@U?$pair@MUTFlyVertexSet@@@std@@@?$vector@U?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@QAEPAU?$pair@MUTFlyVertexSet@@@1@QAU21@$$QAU21@@Z
_TEXT	SEGMENT
tv402 = -16						; size = 4
__Oldsize$1$ = -12					; size = 4
__Newvec$1$ = -8					; size = 4
tv401 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@U?$pair@MUTFlyVertexSet@@@std@@@?$vector@U?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@QAEPAU?$pair@MUTFlyVertexSet@@@1@QAU21@$$QAU21@@Z PROC ; std::vector<std::pair<float,TFlyVertexSet>,std::allocator<std::pair<float,TFlyVertexSet> > >::_Emplace_reallocate<std::pair<float,TFlyVertexSet> >, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00009	b8 a7 c8 67 dd	 mov	 eax, -580400985		; dd67c8a7H
  0000e	56		 push	 esi
  0000f	8b 75 08	 mov	 esi, DWORD PTR __Whereptr$[ebp]
  00012	57		 push	 edi
  00013	2b 33		 sub	 esi, DWORD PTR [ebx]

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00015	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00018	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  0001a	f7 ee		 imul	 esi
  0001c	b8 a7 c8 67 dd	 mov	 eax, -580400985		; dd67c8a7H
  00021	03 d6		 add	 edx, esi
  00023	c1 fa 07	 sar	 edx, 7
  00026	8b fa		 mov	 edi, edx
  00028	c1 ef 1f	 shr	 edi, 31			; 0000001fH
  0002b	03 fa		 add	 edi, edx
  0002d	f7 e9		 imul	 ecx
  0002f	03 d1		 add	 edx, ecx
  00031	c1 fa 07	 sar	 edx, 7
  00034	8b c2		 mov	 eax, edx
  00036	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00039	03 c2		 add	 eax, edx
  0003b	89 45 f4	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0003e	3d 91 cf ba 01	 cmp	 eax, 29020049		; 01bacf91H
  00043	0f 84 01 01 00
	00		 je	 $LN41@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00049	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0004c	8d 70 01	 lea	 esi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0004f	2b 0b		 sub	 ecx, DWORD PTR [ebx]
  00051	b8 a7 c8 67 dd	 mov	 eax, -580400985		; dd67c8a7H
  00056	f7 e9		 imul	 ecx

; 1620 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00058	b8 91 cf ba 01	 mov	 eax, 29020049		; 01bacf91H

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0005d	03 d1		 add	 edx, ecx
  0005f	c1 fa 07	 sar	 edx, 7
  00062	8b ca		 mov	 ecx, edx
  00064	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00067	03 ca		 add	 ecx, edx

; 1620 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00069	8b d1		 mov	 edx, ecx
  0006b	d1 ea		 shr	 edx, 1
  0006d	2b c2		 sub	 eax, edx
  0006f	3b c8		 cmp	 ecx, eax
  00071	76 44		 jbe	 SHORT $LN12@Emplace_re

; 1621 :             return _Max; // geometric growth would overflow

  00073	b9 91 cf ba 01	 mov	 ecx, 29020049		; 01bacf91H
$LN20@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 65   :     return _Count * _Ty_size;

  00078	69 c1 94 00 00
	00		 imul	 eax, ecx, 148

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007e	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0007f	89 45 f0	 mov	 DWORD PTR tv402[ebp], eax

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00082	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00087	8b 75 0c	 mov	 esi, DWORD PTR _<_Val_0>$[ebp]

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008a	8b d0		 mov	 edx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0008c	69 c7 94 00 00
	00		 imul	 eax, edi, 148
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00092	b9 25 00 00 00	 mov	 ecx, 37			; 00000025H

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00097	83 c4 04	 add	 esp, 4
  0009a	89 55 f8	 mov	 DWORD PTR __Newvec$1$[ebp], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0009d	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0009f	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000a1	89 45 fc	 mov	 DWORD PTR tv401[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  000a4	f3 a5		 rep movsd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a6	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000a9	8b 75 08	 mov	 esi, DWORD PTR __Whereptr$[ebp]
  000ac	8b 03		 mov	 eax, DWORD PTR [ebx]
  000ae	3b f1		 cmp	 esi, ecx
  000b0	75 1d		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  000b2	8b 7d fc	 mov	 edi, DWORD PTR tv401[ebp]
  000b5	eb 32		 jmp	 SHORT $LN5@Emplace_re
$LN12@Emplace_re:

; 1624 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  000b7	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  000ba	8b ce		 mov	 ecx, esi
  000bc	3b c6		 cmp	 eax, esi
  000be	0f 43 c8	 cmovae	 ecx, eax
  000c1	81 f9 91 cf ba
	01		 cmp	 ecx, 29020049		; 01bacf91H
  000c7	0f 87 82 00 00
	00		 ja	 $LN42@Emplace_re
  000cd	eb a9		 jmp	 SHORT $LN20@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000cf	53		 push	 ebx
  000d0	52		 push	 edx
  000d1	56		 push	 esi
  000d2	50		 push	 eax
  000d3	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAU?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@YAPAU?$pair@MUTFlyVertexSet@@@0@QAU10@0PAU10@AAV?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@0@@Z ; std::_Uninitialized_move<std::pair<float,TFlyVertexSet> *,std::allocator<std::pair<float,TFlyVertexSet> > >

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d8	8b 7d fc	 mov	 edi, DWORD PTR tv401[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000db	83 c4 10	 add	 esp, 16			; 00000010H
  000de	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000e1	8b c6		 mov	 eax, esi

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000e3	8d 97 94 00 00
	00		 lea	 edx, DWORD PTR [edi+148]
$LN5@Emplace_re:
  000e9	53		 push	 ebx
  000ea	52		 push	 edx
  000eb	51		 push	 ecx
  000ec	50		 push	 eax
  000ed	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAU?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@YAPAU?$pair@MUTFlyVertexSet@@@0@QAU10@0PAU10@AAV?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@0@@Z ; std::_Uninitialized_move<std::pair<float,TFlyVertexSet> *,std::allocator<std::pair<float,TFlyVertexSet> > >

; 1676 :         if (_Myfirst) { // destroy and deallocate old array

  000f2	8b 33		 mov	 esi, DWORD PTR [ebx]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000f4	83 c4 10	 add	 esp, 16			; 00000010H

; 1676 :         if (_Myfirst) { // destroy and deallocate old array

  000f7	85 f6		 test	 esi, esi
  000f9	74 28		 je	 SHORT $LN35@Emplace_re

; 1677 :             _Destroy(_Myfirst, _Mylast);
; 1678 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000fb	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000fe	b8 a7 c8 67 dd	 mov	 eax, -580400985		; dd67c8a7H
  00103	2b ce		 sub	 ecx, esi
  00105	f7 e9		 imul	 ecx
  00107	03 d1		 add	 edx, ecx
  00109	c1 fa 07	 sar	 edx, 7
  0010c	8b c2		 mov	 eax, edx
  0010e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00111	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00113	69 c0 94 00 00
	00		 imul	 eax, eax, 148
  00119	50		 push	 eax
  0011a	56		 push	 esi
  0011b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00120	83 c4 08	 add	 esp, 8
$LN35@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1682 :         _Mylast  = _Newvec + _Newsize;

  00123	8b 4d f4	 mov	 ecx, DWORD PTR __Oldsize$1$[ebp]
  00126	8b 45 f8	 mov	 eax, DWORD PTR __Newvec$1$[ebp]
  00129	41		 inc	 ecx
  0012a	69 c9 94 00 00
	00		 imul	 ecx, ecx, 148
  00130	89 03		 mov	 DWORD PTR [ebx], eax
  00132	03 c8		 add	 ecx, eax
  00134	89 4b 04	 mov	 DWORD PTR [ebx+4], ecx

; 1683 :         _Myend   = _Newvec + _Newcapacity;

  00137	8b 4d f0	 mov	 ecx, DWORD PTR tv402[ebp]
  0013a	03 c8		 add	 ecx, eax

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  0013c	8b c7		 mov	 eax, edi
  0013e	5f		 pop	 edi
  0013f	5e		 pop	 esi

; 1683 :         _Myend   = _Newvec + _Newcapacity;

  00140	89 4b 08	 mov	 DWORD PTR [ebx+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  00143	5b		 pop	 ebx

; 767  :     }

  00144	8b e5		 mov	 esp, ebp
  00146	5d		 pop	 ebp
  00147	c2 08 00	 ret	 8
$LN41@Emplace_re:

; 738  :             _Xlength();

  0014a	e8 00 00 00 00	 call	 ?_Xlength@?$vector@U?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@CAXXZ ; std::vector<std::pair<float,TFlyVertexSet>,std::allocator<std::pair<float,TFlyVertexSet> > >::_Xlength
$LN42@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0014f	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN39@Emplace_re:
  00154	cc		 int	 3
??$_Emplace_reallocate@U?$pair@MUTFlyVertexSet@@@std@@@?$vector@U?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@QAEPAU?$pair@MUTFlyVertexSet@@@1@QAU21@$$QAU21@@Z ENDP ; std::vector<std::pair<float,TFlyVertexSet>,std::allocator<std::pair<float,TFlyVertexSet> > >::_Emplace_reallocate<std::pair<float,TFlyVertexSet> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Const_cast@$$CBU?$pair@MUTFlyVertexSet@@@std@@@std@@YAPAU?$pair@MUTFlyVertexSet@@@0@PBU10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Const_cast@$$CBU?$pair@MUTFlyVertexSet@@@std@@@std@@YAPAU?$pair@MUTFlyVertexSet@@@0@PBU10@@Z PROC ; std::_Const_cast<std::pair<float,TFlyVertexSet> const >, COMDAT

; 292  : auto _Const_cast(_Ty* _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 293  :     return const_cast<remove_const_t<_Ty>*>(_Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 294  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Const_cast@$$CBU?$pair@MUTFlyVertexSet@@@std@@@std@@YAPAU?$pair@MUTFlyVertexSet@@@0@PBU10@@Z ENDP ; std::_Const_cast<std::pair<float,TFlyVertexSet> const >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Xlength@?$vector@U?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::pair<float,TFlyVertexSet>,std::allocator<std::pair<float,TFlyVertexSet> > >::_Xlength, COMDAT

; 1705 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@U?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::pair<float,TFlyVertexSet>,std::allocator<std::pair<float,TFlyVertexSet> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??1?$vector@U?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@U?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::pair<float,TFlyVertexSet>,std::allocator<std::pair<float,TFlyVertexSet> > >::~vector<std::pair<float,TFlyVertexSet>,std::allocator<std::pair<float,TFlyVertexSet> > >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 3e		 je	 SHORT $LN4@vector

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	56		 push	 esi
  0000a	8b 77 08	 mov	 esi, DWORD PTR [edi+8]
  0000d	b8 a7 c8 67 dd	 mov	 eax, -580400985		; dd67c8a7H
  00012	2b f1		 sub	 esi, ecx
  00014	f7 ee		 imul	 esi
  00016	03 d6		 add	 edx, esi
  00018	c1 fa 07	 sar	 edx, 7
  0001b	8b c2		 mov	 eax, edx
  0001d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00020	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00022	69 c0 94 00 00
	00		 imul	 eax, eax, 148
  00028	50		 push	 eax
  00029	51		 push	 ecx
  0002a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002f	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00032	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0

; 1699 :             _Mylast  = pointer();

  00038	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1700 :             _Myend   = pointer();

  0003f	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00046	5e		 pop	 esi
$LN4@vector:
  00047	5f		 pop	 edi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00048	c3		 ret	 0
??1?$vector@U?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::pair<float,TFlyVertexSet>,std::allocator<std::pair<float,TFlyVertexSet> > >::~vector<std::pair<float,TFlyVertexSet>,std::allocator<std::pair<float,TFlyVertexSet> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
;	COMDAT ??0TFlyVertex@@QAE@XZ
_TEXT	SEGMENT
??0TFlyVertex@@QAE@XZ PROC				; TFlyVertex::TFlyVertex, COMDAT
; _this$ = ecx

; 95   : 	TFlyVertex(){};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0TFlyVertex@@QAE@XZ ENDP				; TFlyVertex::TFlyVertex
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CFlyTrace::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A ; CFlyTrace::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@VCFlyTrace@@@@UAE@XZ ; CDynamicPool<CFlyTrace>::~CDynamicPool<CFlyTrace>
??__F?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CFlyTrace::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
;	COMDAT ??__E?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CFlyTrace::ms_kPool'', COMDAT

; 8    : CDynamicPool<CFlyTrace>		CFlyTrace::ms_kPool;		

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CFlyTrace::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CFlyTrace::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@VCFlyTrace@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@VCFlyTrace@@@@UAEPAXI@Z PROC		; CDynamicPool<CFlyTrace>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@VCFlyTrace@@@@UAE@XZ ; CDynamicPool<CFlyTrace>::~CDynamicPool<CFlyTrace>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@VCFlyTrace@@@@UAEPAXI@Z ENDP		; CDynamicPool<CFlyTrace>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Xlength@?$vector@PAVCFlyTrace@@V?$allocator@PAVCFlyTrace@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAVCFlyTrace@@V?$allocator@PAVCFlyTrace@@@std@@@std@@CAXXZ PROC ; std::vector<CFlyTrace *,std::allocator<CFlyTrace *> >::_Xlength, COMDAT

; 1705 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAVCFlyTrace@@V?$allocator@PAVCFlyTrace@@@std@@@std@@CAXXZ ENDP ; std::vector<CFlyTrace *,std::allocator<CFlyTrace *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@VCFlyTrace@@@@KAXPAVCFlyTrace@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@VCFlyTrace@@@@KAXPAVCFlyTrace@@@Z PROC ; CDynamicPool<CFlyTrace>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@VCFlyTrace@@@@KAXPAVCFlyTrace@@@Z ENDP ; CDynamicPool<CFlyTrace>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@VCFlyTrace@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@VCFlyTrace@@@@UAE@XZ PROC		; CDynamicPool<CFlyTrace>::~CDynamicPool<CFlyTrace>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@VCFlyTrace@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1700 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1700 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@VCFlyTrace@@@@UAE@XZ ENDP		; CDynamicPool<CFlyTrace>::~CDynamicPool<CFlyTrace>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCFlyTrace@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCFlyTrace@@UAEPAXI@Z PROC				; CFlyTrace::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CFlyTrace@@UAE@XZ	; CFlyTrace::~CFlyTrace
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 28		 push	 40			; 00000028H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCFlyTrace@@UAEPAXI@Z ENDP				; CFlyTrace::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
;	COMDAT ?Delete@CFlyTrace@@SAXPAV1@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
_pkInst$ = 8						; size = 4
?Delete@CFlyTrace@@SAXPAV1@@Z PROC			; CFlyTrace::Delete, COMDAT

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 22   : 	pkInst->Destroy();

  00004	8b 75 08	 mov	 esi, DWORD PTR _pkInst$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?Destroy@CFlyTrace@@QAEXXZ ; CFlyTrace::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0000e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+20
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 23   : 	ms_kPool.Free(pkInst);

  00013	89 75 08	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00016	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+24
  0001c	74 0c		 je	 SHORT $LN8@Delete

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0001e	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00020	83 05 14 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+20, 4
  00027	5e		 pop	 esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 24   : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN8@Delete:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0002a	8d 4d 08	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	b9 10 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+16
  00034	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCFlyTrace@@@?$vector@PAVCFlyTrace@@V?$allocator@PAVCFlyTrace@@@std@@@std@@QAEPAPAVCFlyTrace@@QAPAV2@ABQAV2@@Z ; std::vector<CFlyTrace *,std::allocator<CFlyTrace *> >::_Emplace_reallocate<CFlyTrace * const &>
  00039	5e		 pop	 esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 24   : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?Delete@CFlyTrace@@SAXPAV1@@Z ENDP			; CFlyTrace::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
;	COMDAT ?New@CFlyTrace@@SAPAV1@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
_pkNewData$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
?New@CFlyTrace@@SAPAV1@XZ PROC				; CFlyTrace::New, COMDAT

; 16   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?New@CFlyTrace@@SAPAV1@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  00024	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+20
  0002a	39 0d 10 00 00
	00		 cmp	 DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+16, ecx
  00030	0f 85 84 00 00
	00		 jne	 $LN4@New

; 65   : 				T* pkNewData=new T;

  00036	6a 28		 push	 40			; 00000028H
  00038	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003d	83 c4 04	 add	 esp, 4
  00040	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00043	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004a	85 c0		 test	 eax, eax
  0004c	74 0b		 je	 SHORT $LN6@New
  0004e	8b c8		 mov	 ecx, eax
  00050	e8 00 00 00 00	 call	 ??0CFlyTrace@@QAE@XZ	; CFlyTrace::CFlyTrace
  00055	8b f0		 mov	 esi, eax
  00057	eb 02		 jmp	 SHORT $LN7@New
$LN6@New:
  00059	33 f6		 xor	 esi, esi
$LN7@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0005b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+8
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  00060	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00067	89 75 f0	 mov	 DWORD PTR _pkNewData$3[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0006a	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+12
  00070	74 21		 je	 SHORT $LN14@New

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00072	89 30		 mov	 DWORD PTR [eax], esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 17   : 	return ms_kPool.Alloc();

  00074	8b c6		 mov	 eax, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 690  :         ++_Mylast;

  00076	83 05 08 00 00
	00 04		 add	 DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+8, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  0007d	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+32
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 18   : }

  00083	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00086	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008d	59		 pop	 ecx
  0008e	5e		 pop	 esi
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
$LN14@New:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00093	8d 4d f0	 lea	 ecx, DWORD PTR _pkNewData$3[ebp]
  00096	51		 push	 ecx
  00097	50		 push	 eax
  00098	b9 04 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+4
  0009d	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAVCFlyTrace@@@?$vector@PAVCFlyTrace@@V?$allocator@PAVCFlyTrace@@@std@@@std@@QAEPAPAVCFlyTrace@@QAPAV2@ABQAV2@@Z ; std::vector<CFlyTrace *,std::allocator<CFlyTrace *> >::_Emplace_reallocate<CFlyTrace * const &>
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  000a2	ff 05 20 00 00
	00		 inc	 DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+32
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 17   : 	return ms_kPool.Alloc();

  000a8	8b c6		 mov	 eax, esi

; 18   : }

  000aa	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ad	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b4	59		 pop	 ecx
  000b5	5e		 pop	 esi
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c3		 ret	 0
$LN4@New:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  000ba	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1559 :         return _My_data._Mylast[-1];

  000bd	83 c1 fc	 add	 ecx, -4			; fffffffcH

; 1338 :         --_Mylast;

  000c0	89 0d 14 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+20, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 18   : }

  000c6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d0	59		 pop	 ecx
  000d1	5e		 pop	 esi
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?New@CFlyTrace@@SAPAV1@XZ$0:
  00000	6a 28		 push	 40			; 00000028H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?New@CFlyTrace@@SAPAV1@XZ:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?New@CFlyTrace@@SAPAV1@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?New@CFlyTrace@@SAPAV1@XZ ENDP				; CFlyTrace::New
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
;	COMDAT ?DestroySystem@CFlyTrace@@SAXXZ
_TEXT	SEGMENT
?DestroySystem@CFlyTrace@@SAXXZ PROC			; CFlyTrace::DestroySystem, COMDAT

; 11   : {

  00000	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00001	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 11   : {

  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 306  :     const auto _ULast = _Get_unwrapped(_Last);

  00008	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+8

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  0000e	3b f7		 cmp	 esi, edi
  00010	74 2a		 je	 SHORT $LN30@DestroySys
$LL20@DestroySys:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00012	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00014	85 c9		 test	 ecx, ecx
  00016	74 06		 je	 SHORT $LN18@DestroySys
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	6a 01		 push	 1
  0001c	ff 10		 call	 DWORD PTR [eax]
$LN18@DestroySys:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001e	83 c6 04	 add	 esi, 4
  00021	3b f7		 cmp	 esi, edi
  00023	75 ed		 jne	 SHORT $LL20@DestroySys
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00025	a1 04 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+4
  0002a	a3 08 00 00 00	 mov	 DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+8, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 13   : }

  0002f	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+16
  00034	5f		 pop	 edi
  00035	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+20, eax
  0003a	5e		 pop	 esi
  0003b	c3		 ret	 0
$LN30@DestroySys:
  0003c	a1 10 00 00 00	 mov	 eax, DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+16
  00041	5f		 pop	 edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 51   : 			m_kVct_pkData.clear();

  00042	89 35 08 00 00
	00		 mov	 DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+8, esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 13   : }

  00048	a3 14 00 00 00	 mov	 DWORD PTR ?ms_kPool@CFlyTrace@@2V?$CDynamicPool@VCFlyTrace@@@@A+20, eax
  0004d	5e		 pop	 esi
  0004e	c3		 ret	 0
?DestroySystem@CFlyTrace@@SAXXZ ENDP			; CFlyTrace::DestroySystem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Tidy@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@AAEXXZ PROC ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Tidy, COMDAT
; _this$ = ecx

; 1469 :     void _Tidy() noexcept { // free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1010 :         return _Mysize() == 0;

  00003	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00006	85 c9		 test	 ecx, ecx

; 1470 :         _Orphan_all();
; 1471 : 
; 1472 :         _Alpty _Almap(_Getal());
; 1473 :         while (!empty()) {

  00008	74 15		 je	 SHORT $LN30@Tidy
  0000a	66 0f 1f 44 00
	00		 npad	 6
$LL2@Tidy:

; 1144 :         if (--_Mysize() == 0) {

  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00016	8b c8		 mov	 ecx, eax
  00018	85 c0		 test	 eax, eax
  0001a	75 f4		 jne	 SHORT $LL2@Tidy

; 1145 :             _Myoff() = 0;

  0001c	89 46 0c	 mov	 DWORD PTR [esi+12], eax
$LN30@Tidy:
  0001f	57		 push	 edi

; 1477 :         for (size_type _Block = _Mapsize(); 0 < _Block;) { // free storage for a block and destroy pointer

  00020	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  00023	85 ff		 test	 edi, edi
  00025	74 1a		 je	 SHORT $LN5@Tidy
$LL25@Tidy:

; 1478 :             if (_Map()[--_Block]) { // free block and destroy its pointer

  00027	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002a	4f		 dec	 edi
  0002b	8b 04 b8	 mov	 eax, DWORD PTR [eax+edi*4]
  0002e	85 c0		 test	 eax, eax
  00030	74 0b		 je	 SHORT $LN7@Tidy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00032	6a 10		 push	 16			; 00000010H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
$LN7@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 1477 :         for (size_type _Block = _Mapsize(); 0 < _Block;) { // free storage for a block and destroy pointer

  0003d	85 ff		 test	 edi, edi
  0003f	75 e6		 jne	 SHORT $LL25@Tidy
$LN5@Tidy:

; 1479 :                 _Getal().deallocate(_Map()[_Block], _DEQUESIZ);
; 1480 :                 _Destroy_in_place(_Map()[_Block]);
; 1481 :             }
; 1482 :         }
; 1483 : 
; 1484 :         if (_Map() != _Mapptr()) {

  00041	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00044	5f		 pop	 edi
  00045	85 c9		 test	 ecx, ecx
  00047	74 10		 je	 SHORT $LN32@Tidy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00049	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0004c	c1 e0 02	 shl	 eax, 2
  0004f	50		 push	 eax
  00050	51		 push	 ecx
  00051	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00056	83 c4 08	 add	 esp, 8
$LN32@Tidy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 1490 :     }

  00059	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00060	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00067	5e		 pop	 esi
  00068	c3		 ret	 0
?_Tidy@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@AAEXXZ ENDP ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?_Xlen@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@ABEXXZ
_TEXT	SEGMENT
?_Xlen@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@ABEXXZ PROC ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Xlen, COMDAT
; _this$ = ecx

; 1423 :         _Xlength_error("deque<T> too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen:
  0000a	cc		 int	 3
?_Xlen@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@ABEXXZ ENDP ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
;	COMDAT ?push_front@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAEX$$QAU?$pair@MUD3DXVECTOR3@@@2@@Z
_TEXT	SEGMENT
tv592 = -8						; size = 4
__Newmap$1$ = -4					; size = 4
__Val$ = 8						; size = 4
?push_front@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAEX$$QAU?$pair@MUD3DXVECTOR3@@@2@@Z PROC ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::push_front, COMDAT
; _this$ = ecx

; 788  :     void push_front(_Ty&& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx

; 790  :         _PUSH_FRONT_BEGIN;

  0000b	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0000e	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  00011	40		 inc	 eax
  00012	3b d0		 cmp	 edx, eax
  00014	0f 87 de 00 00
	00		 ja	 $LN45@push_front

; 1434 :         size_type _Newsize = 0 < _Mapsize() ? _Mapsize() : 1;

  0001a	85 d2		 test	 edx, edx
  0001c	b8 01 00 00 00	 mov	 eax, 1
  00021	0f 45 c2	 cmovne	 eax, edx
$LL8@push_front:

; 1435 :         while (_Newsize - _Mapsize() < _Count || _Newsize < _DEQUEMAPSIZ) {

  00024	8b f0		 mov	 esi, eax
  00026	2b f2		 sub	 esi, edx
  00028	83 fe 01	 cmp	 esi, 1
  0002b	72 05		 jb	 SHORT $LN10@push_front
  0002d	83 f8 08	 cmp	 eax, 8
  00030	73 13		 jae	 SHORT $LN9@push_front
$LN10@push_front:

; 1436 :             // scale _Newsize to 2^N >= _Mapsize() + _Count
; 1437 :             if (max_size() / _DEQUESIZ - _Newsize < _Newsize) {

  00032	b9 ff ff ff 0f	 mov	 ecx, 268435455		; 0fffffffH
  00037	2b c8		 sub	 ecx, eax
  00039	3b c8		 cmp	 ecx, eax
  0003b	0f 82 04 01 00
	00		 jb	 $LN41@push_front

; 1439 :             }
; 1440 : 
; 1441 :             _Newsize *= 2;

  00041	03 c0		 add	 eax, eax

; 1442 :         }

  00043	eb df		 jmp	 SHORT $LL8@push_front
$LN9@push_front:

; 1443 :         _Count = _Newsize - _Mapsize();
; 1444 : 
; 1445 :         size_type _Myboff = _Myoff() / _DEQUESIZ;

  00045	8b 5f 0c	 mov	 ebx, DWORD PTR [edi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00048	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  0004d	0f 87 f9 00 00
	00		 ja	 $LN49@push_front

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00053	c1 e0 02	 shl	 eax, 2

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 1449 :         _Myptr = _STD uninitialized_copy(_Map() + _Myboff, _Map() + _Mapsize(), _Myptr); // copy initial to end

  0005c	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0005f	8d 0c 9d 00 00
	00 00		 lea	 ecx, DWORD PTR [ebx*4]
  00066	89 4d f8	 mov	 DWORD PTR tv592[ebp], ecx
  00069	03 c8		 add	 ecx, eax
  0006b	51		 push	 ecx
  0006c	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0006f	89 45 fc	 mov	 DWORD PTR __Newmap$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 1449 :         _Myptr = _STD uninitialized_copy(_Map() + _Myboff, _Map() + _Mapsize(), _Myptr); // copy initial to end

  00072	8d 04 9a	 lea	 eax, DWORD PTR [edx+ebx*4]
  00075	8d 0c 8a	 lea	 ecx, DWORD PTR [edx+ecx*4]
  00078	51		 push	 ecx
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0PAPAU10@@Z ; std::uninitialized_copy<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>
  0007f	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00082	83 c4 10	 add	 esp, 16			; 00000010H

; 1450 :         if (_Myboff <= _Count) { // increment greater than offset of initial block

  00085	50		 push	 eax
  00086	3b de		 cmp	 ebx, esi
  00088	77 1d		 ja	 SHORT $LN12@push_front

; 1451 :             _Myptr = _STD uninitialized_copy(_Map(), _Map() + _Myboff, _Myptr); // copy rest of old

  0008a	8d 04 99	 lea	 eax, DWORD PTR [ecx+ebx*4]
  0008d	50		 push	 eax
  0008e	51		 push	 ecx
  0008f	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0PAPAU10@@Z ; std::uninitialized_copy<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>

; 1452 :             _Uninitialized_value_construct_n_unchecked1(_Myptr, _Count - _Myboff); // clear suffix of new

  00094	8b ce		 mov	 ecx, esi
  00096	2b cb		 sub	 ecx, ebx
  00098	51		 push	 ecx
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n_unchecked1@PAPAU?$pair@MUD3DXVECTOR3@@@std@@I@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<std::pair<float,D3DXVECTOR3> * *,unsigned int>

; 1453 :             _Uninitialized_value_construct_n_unchecked1(_Newmap, _Myboff); // clear prefix of new

  0009f	8b 45 fc	 mov	 eax, DWORD PTR __Newmap$1$[ebp]
  000a2	83 c4 14	 add	 esp, 20			; 00000014H

; 1454 :         } else { // increment not greater than offset of initial block

  000a5	eb 24		 jmp	 SHORT $LN13@push_front
$LN12@push_front:

; 1455 :             _STD uninitialized_copy(_Map(), _Map() + _Count, _Myptr); // copy more old

  000a7	8d 04 b1	 lea	 eax, DWORD PTR [ecx+esi*4]
  000aa	50		 push	 eax
  000ab	51		 push	 ecx
  000ac	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0PAPAU10@@Z ; std::uninitialized_copy<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>

; 1456 :             _Myptr = _STD uninitialized_copy(_Map() + _Count, _Map() + _Myboff, _Newmap); // copy rest of old

  000b1	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000b4	ff 75 fc	 push	 DWORD PTR __Newmap$1$[ebp]
  000b7	8b 45 f8	 mov	 eax, DWORD PTR tv592[ebp]
  000ba	03 c1		 add	 eax, ecx
  000bc	50		 push	 eax
  000bd	8d 04 b1	 lea	 eax, DWORD PTR [ecx+esi*4]
  000c0	50		 push	 eax
  000c1	e8 00 00 00 00	 call	 ??$uninitialized_copy@PAPAU?$pair@MUD3DXVECTOR3@@@std@@PAPAU12@@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@QAPAU10@0PAPAU10@@Z ; std::uninitialized_copy<std::pair<float,D3DXVECTOR3> * *,std::pair<float,D3DXVECTOR3> * *>
  000c6	83 c4 18	 add	 esp, 24			; 00000018H

; 1457 :             _Uninitialized_value_construct_n_unchecked1(_Myptr, _Count); // clear rest to initial block

  000c9	8b de		 mov	 ebx, esi
$LN13@push_front:

; 1458 :         }
; 1459 : 
; 1460 :         _Destroy_range(_Map() + _Myboff, _Map() + _Mapsize());
; 1461 :         if (_Map() != _Mapptr()) {

  000cb	53		 push	 ebx
  000cc	50		 push	 eax
  000cd	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n_unchecked1@PAPAU?$pair@MUD3DXVECTOR3@@@std@@I@std@@YAPAPAU?$pair@MUD3DXVECTOR3@@@0@PAPAU10@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<std::pair<float,D3DXVECTOR3> * *,unsigned int>
  000d2	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000d5	83 c4 08	 add	 esp, 8
  000d8	85 c9		 test	 ecx, ecx
  000da	74 10		 je	 SHORT $LN14@push_front
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000dc	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000df	c1 e0 02	 shl	 eax, 2
  000e2	50		 push	 eax
  000e3	51		 push	 ecx
  000e4	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000e9	83 c4 08	 add	 esp, 8
$LN14@push_front:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 1465 :         _Map() = _Newmap; // point at new

  000ec	8b 45 fc	 mov	 eax, DWORD PTR __Newmap$1$[ebp]
  000ef	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 1466 :         _Mapsize() += _Count;

  000f2	01 77 08	 add	 DWORD PTR [edi+8], esi
  000f5	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
$LN45@push_front:

; 790  :         _PUSH_FRONT_BEGIN;

  000f8	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  000fb	21 47 0c	 and	 DWORD PTR [edi+12], eax
  000fe	8b 77 0c	 mov	 esi, DWORD PTR [edi+12]
  00101	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00104	0f 44 f2	 cmove	 esi, edx
  00107	4e		 dec	 esi

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00108	23 c6		 and	 eax, esi

; 790  :         _PUSH_FRONT_BEGIN;

  0010a	8d 1c 85 00 00
	00 00		 lea	 ebx, DWORD PTR [eax*4]
  00111	83 3c 0b 00	 cmp	 DWORD PTR [ebx+ecx], 0
  00115	75 13		 jne	 SHORT $LN3@push_front
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00117	6a 10		 push	 16			; 00000010H
  00119	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 790  :         _PUSH_FRONT_BEGIN;

  0011e	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00121	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 790  :         _PUSH_FRONT_BEGIN;

  00124	89 04 0b	 mov	 DWORD PTR [ebx+ecx], eax
  00127	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
$LN3@push_front:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0012a	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0012d	8b 0c 0b	 mov	 ecx, DWORD PTR [ebx+ecx]
  00130	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00133	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 792  :         _PUSH_FRONT_END;

  00136	ff 47 10	 inc	 DWORD PTR [edi+16]
  00139	89 77 0c	 mov	 DWORD PTR [edi+12], esi
  0013c	5f		 pop	 edi
  0013d	5e		 pop	 esi
  0013e	5b		 pop	 ebx

; 793  :     }

  0013f	8b e5		 mov	 esp, ebp
  00141	5d		 pop	 ebp
  00142	c2 04 00	 ret	 4
$LN41@push_front:

; 1438 :                 _Xlen(); // result too long

  00145	8b cf		 mov	 ecx, edi
  00147	e8 00 00 00 00	 call	 ?_Xlen@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@ABEXXZ ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Xlen
$LN49@push_front:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0014c	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN47@push_front:
  00151	cc		 int	 3
?push_front@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAEX$$QAU?$pair@MUD3DXVECTOR3@@@2@@Z ENDP ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::push_front
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
;	COMDAT ?__Initialize@CFlyTrace@@IAEXXZ
_TEXT	SEGMENT
?__Initialize@CFlyTrace@@IAEXXZ PROC			; CFlyTrace::__Initialize, COMDAT
; _this$ = ecx

; 48   : 	m_bRectShape=false;

  00000	c6 41 04 00	 mov	 BYTE PTR [ecx+4], 0

; 49   : 	m_dwColor=0;

  00004	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 50   : 	m_fSize=0.0f;

  0000b	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 51   : 	m_fTailLength=0.0f;	

  00012	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 52   : }

  00019	c3		 ret	 0
?__Initialize@CFlyTrace@@IAEXXZ ENDP			; CFlyTrace::__Initialize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\cmath
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\cmath
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
;	COMDAT ?Render@CFlyTrace@@QAEXXZ
_TEXT	SEGMENT
$T10 = -552						; size = 148
_E$11 = -404						; size = 12
tv3727 = -392						; size = 4
_B$1$sroa$2150$1$ = -388				; size = 4
_B$1$sroa$2151$1$ = -384				; size = 4
_pCurrentCamera$1$ = -380				; size = 4
_VSVector$ = -376					; size = 12
_F$ = -364						; size = 12
_E$3$ = -352						; size = 4
$T12 = -352						; size = 1
_E$2$ = -348						; size = 4
_rate1$1$ = -348					; size = 4
_VSVector$2$ = -344					; size = 4
_s$ = -340						; size = 4
_this$GSCopy$1$ = -336					; size = 4
_it2$$sroa$2154$1$ = -332				; size = 4
_it2$$sroa$2152$1$ = -328				; size = 4
_it1$$sroa$2153$1$ = -324				; size = 4
_it1$$sroa$2155$1$ = -320				; size = 4
_E$1$ = -316						; size = 4
$T13 = -316						; size = 4
$T14 = -316						; size = 4
_rkOld$1$ = -316					; size = 4
tv2087 = -316						; size = 4
tv2070 = -316						; size = 4
_matWorld$ = -312					; size = 64
_c$15 = -248						; size = 12
_m$ = -236						; size = 64
_U$16 = -172						; size = 12
_v$17 = -160						; size = 144
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?Render@CFlyTrace@@QAEXXZ PROC				; CFlyTrace::Render, COMDAT
; _this$ = ecx

; 120  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Render@CFlyTrace@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 1c 02 00
	00		 sub	 esp, 540		; 0000021cH
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	50		 push	 eax
  00024	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00027	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002d	8b c1		 mov	 eax, ecx
  0002f	89 85 b0 fe ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], eax

; 121  : 	if (m_TimePositionDeque.size()<=1)

  00035	83 78 24 01	 cmp	 DWORD PTR [eax+36], 1
  00039	0f 86 fc 0b 00
	00		 jbe	 $LN429@Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0003f	33 c0		 xor	 eax, eax
  00041	c7 85 88 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _VSVector$[ebp], 0
  0004b	33 ff		 xor	 edi, edi
  0004d	89 85 a8 fe ff
	ff		 mov	 DWORD PTR _VSVector$2$[ebp], eax
  00053	89 bd 8c fe ff
	ff		 mov	 DWORD PTR _VSVector$[ebp+4], edi
  00059	89 85 90 fe ff
	ff		 mov	 DWORD PTR _VSVector$[ebp+8], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 126  : 	STATEMANAGER.SaveRenderState(D3DRS_ZFUNC,D3DCMP_LESS);

  0005f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00065	6a 02		 push	 2
  00067	6a 17		 push	 23			; 00000017H
  00069	89 45 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], eax
  0006c	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 132  : 	STATEMANAGER.SaveTransform(D3DTS_WORLD, &matWorld);

  00071	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00077	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _matWorld$[ebp]
  0007d	50		 push	 eax
  0007e	68 00 01 00 00	 push	 256			; 00000100H
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  00083	89 bd 00 ff ff
	ff		 mov	 DWORD PTR _matWorld$[ebp+56], edi
  00089	89 bd fc fe ff
	ff		 mov	 DWORD PTR _matWorld$[ebp+52], edi
  0008f	89 bd f8 fe ff
	ff		 mov	 DWORD PTR _matWorld$[ebp+48], edi
  00095	89 bd f4 fe ff
	ff		 mov	 DWORD PTR _matWorld$[ebp+44], edi
  0009b	89 bd ec fe ff
	ff		 mov	 DWORD PTR _matWorld$[ebp+36], edi
  000a1	89 bd e8 fe ff
	ff		 mov	 DWORD PTR _matWorld$[ebp+32], edi
  000a7	89 bd e4 fe ff
	ff		 mov	 DWORD PTR _matWorld$[ebp+28], edi
  000ad	89 bd e0 fe ff
	ff		 mov	 DWORD PTR _matWorld$[ebp+24], edi
  000b3	89 bd d8 fe ff
	ff		 mov	 DWORD PTR _matWorld$[ebp+16], edi
  000b9	89 bd d4 fe ff
	ff		 mov	 DWORD PTR _matWorld$[ebp+12], edi
  000bf	89 bd d0 fe ff
	ff		 mov	 DWORD PTR _matWorld$[ebp+8], edi
  000c5	89 bd cc fe ff
	ff		 mov	 DWORD PTR _matWorld$[ebp+4], edi

; 1517 :     pOut->m[1][0] = pOut->m[1][2] = pOut->m[1][3] =
; 1518 :     pOut->m[2][0] = pOut->m[2][1] = pOut->m[2][3] =
; 1519 :     pOut->m[3][0] = pOut->m[3][1] = pOut->m[3][2] = 0.0f;
; 1520 : 
; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  000cb	c7 85 04 ff ff
	ff 00 00 80 3f	 mov	 DWORD PTR _matWorld$[ebp+60], 1065353216 ; 3f800000H
  000d5	c7 85 f0 fe ff
	ff 00 00 80 3f	 mov	 DWORD PTR _matWorld$[ebp+40], 1065353216 ; 3f800000H
  000df	c7 85 dc fe ff
	ff 00 00 80 3f	 mov	 DWORD PTR _matWorld$[ebp+20], 1065353216 ; 3f800000H
  000e9	c7 85 c8 fe ff
	ff 00 00 80 3f	 mov	 DWORD PTR _matWorld$[ebp], 1065353216 ; 3f800000H
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 132  : 	STATEMANAGER.SaveTransform(D3DTS_WORLD, &matWorld);

  000f3	e8 00 00 00 00	 call	 ?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SaveTransform

; 133  : 	STATEMANAGER.SaveVertexShader(D3DFVF_XYZ | D3DFVF_DIFFUSE | D3DFVF_TEX1);

  000f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  000fe	68 42 01 00 00	 push	 322			; 00000142H
  00103	e8 00 00 00 00	 call	 ?SaveVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SaveVertexShader

; 134  : 	STATEMANAGER.SaveRenderState(D3DRS_CULLMODE, D3DCULL_NONE);

  00108	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0010e	6a 01		 push	 1
  00110	6a 16		 push	 22			; 00000016H
  00112	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 135  : 	
; 136  : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHABLENDENABLE, TRUE);

  00117	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0011d	6a 01		 push	 1
  0011f	6a 1b		 push	 27			; 0000001bH
  00121	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 137  : 	STATEMANAGER.SaveRenderState(D3DRS_SRCBLEND, D3DBLEND_SRCALPHA);

  00126	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0012c	6a 05		 push	 5
  0012e	6a 13		 push	 19			; 00000013H
  00130	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 138  : 	STATEMANAGER.SaveRenderState(D3DRS_DESTBLEND, D3DBLEND_ONE);

  00135	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0013b	6a 02		 push	 2
  0013d	6a 14		 push	 20			; 00000014H
  0013f	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 139  : 
; 140  : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHATESTENABLE, TRUE);

  00144	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  0014a	6a 01		 push	 1
  0014c	6a 0f		 push	 15			; 0000000fH
  0014e	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 141  : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHAFUNC, D3DCMP_GREATER);

  00153	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00159	6a 05		 push	 5
  0015b	6a 19		 push	 25			; 00000019H
  0015d	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 142  : 	STATEMANAGER.SaveRenderState(D3DRS_ALPHAREF, 0x00000000);

  00162	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00168	57		 push	 edi
  00169	6a 18		 push	 24			; 00000018H
  0016b	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 143  : 
; 144  : 	STATEMANAGER.SaveRenderState(D3DRS_BLENDOP, D3DBLENDOP_ADD );

  00170	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00176	6a 01		 push	 1
  00178	68 ab 00 00 00	 push	 171			; 000000abH
  0017d	e8 00 00 00 00	 call	 ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState

; 145  : 	//STATEMANAGER.SaveRenderState(D3DRS_BLENDOP, D3DBLENDOP_ADD );
; 146  : 	
; 147  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_DIFFUSE);

  00182	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00188	57		 push	 edi
  00189	6a 02		 push	 2
  0018b	57		 push	 edi
  0018c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 148  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_TEXTURE);

  00191	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00197	6a 02		 push	 2
  00199	6a 03		 push	 3
  0019b	57		 push	 edi
  0019c	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 149  : 	//STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, /*(m_bUseTexture)?D3DTOP_SELECTARG2:*/D3DTOP_SELECTARG2);
; 150  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_SELECTARG1);

  001a1	6a 02		 push	 2
  001a3	6a 01		 push	 1
  001a5	57		 push	 edi
  001a6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001ac	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 151  : 
; 152  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG1, D3DTA_DIFFUSE);

  001b1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001b7	57		 push	 edi
  001b8	6a 05		 push	 5
  001ba	57		 push	 edi
  001bb	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 153  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAARG2, D3DTA_TEXTURE);

  001c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001c6	6a 02		 push	 2
  001c8	6a 06		 push	 6
  001ca	57		 push	 edi
  001cb	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 154  : 	//STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP, D3DTOP_MODULATE);
; 155  : 	STATEMANAGER.SetTextureStageState(0, D3DTSS_ALPHAOP, /*(m_bUseTexture)?D3DTOP_SELECTARG2:*/D3DTOP_SELECTARG1);

  001d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001d6	6a 02		 push	 2
  001d8	6a 04		 push	 4
  001da	57		 push	 edi
  001db	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 156  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_COLOROP, D3DTOP_DISABLE);

  001e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001e6	6a 01		 push	 1
  001e8	6a 01		 push	 1
  001ea	6a 01		 push	 1
  001ec	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 157  : 	STATEMANAGER.SetTextureStageState(1, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  001f1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  001f7	6a 01		 push	 1
  001f9	6a 04		 push	 4
  001fb	6a 01		 push	 1
  001fd	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 158  : 	STATEMANAGER.SetRenderState(D3DRS_LIGHTING, FALSE);

  00202	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00208	57		 push	 edi
  00209	68 89 00 00 00	 push	 137			; 00000089H
  0020e	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 159  : 	STATEMANAGER.SetTexture(0, NULL);

  00213	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00219	57		 push	 edi
  0021a	57		 push	 edi
  0021b	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 160  : 	STATEMANAGER.SetTexture(1, NULL);

  00220	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00226	57		 push	 edi
  00227	6a 01		 push	 1
  00229	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 161  : 	
; 162  : 	
; 163  : 	D3DXMATRIX m;
; 164  : 	CScreen s;s.UpdateViewMatrix();

  0022e	8d 8d ac fe ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  00234	e8 00 00 00 00	 call	 ??0CScreen@@QAE@XZ	; CScreen::CScreen
  00239	8d 8d ac fe ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  0023f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00243	e8 00 00 00 00	 call	 ?UpdateViewMatrix@CGraphicBase@@QAEXXZ ; CGraphicBase::UpdateViewMatrix

; 165  : 	CCamera * pCurrentCamera = CCameraManager::Instance().GetCurrentCamera();

  00248	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCCameraManager@@@@0PAVCCameraManager@@A ; CSingleton<CCameraManager>::ms_singleton
  0024e	e8 00 00 00 00	 call	 ?GetCurrentCamera@CCameraManager@@QAEPAVCCamera@@XZ ; CCameraManager::GetCurrentCamera
  00253	89 85 84 fe ff
	ff		 mov	 DWORD PTR _pCurrentCamera$1$[ebp], eax

; 166  : 	if (!pCurrentCamera)

  00259	85 c0		 test	 eax, eax
  0025b	75 10		 jne	 SHORT $LN18@Render

; 167  : 		return;

  0025d	8d 8d ac fe ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  00263	e8 00 00 00 00	 call	 ??1CScreen@@UAE@XZ	; CScreen::~CScreen
  00268	e9 ce 09 00 00	 jmp	 $LN429@Render
$LN18@Render:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  0026d	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _m$[ebp+56], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1179 :             _Myproxy = nullptr;

  00277	33 ff		 xor	 edi, edi
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  00279	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _m$[ebp+52], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1179 :             _Myproxy = nullptr;

  00283	33 d2		 xor	 edx, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  00285	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _m$[ebp+48], 0
  0028f	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _m$[ebp+44], 0
  00299	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _m$[ebp+28], 0
  002a3	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _m$[ebp+24], 0
  002ad	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _m$[ebp+16], 0
  002b7	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _m$[ebp+12], 0
  002c1	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _m$[ebp+8], 0
  002cb	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _m$[ebp+4], 0

; 1517 :     pOut->m[1][0] = pOut->m[1][2] = pOut->m[1][3] =
; 1518 :     pOut->m[2][0] = pOut->m[2][1] = pOut->m[2][3] =
; 1519 :     pOut->m[3][0] = pOut->m[3][1] = pOut->m[3][2] = 0.0f;
; 1520 : 
; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  002d5	c7 85 50 ff ff
	ff 00 00 80 3f	 mov	 DWORD PTR _m$[ebp+60], 1065353216 ; 3f800000H
  002df	c7 85 28 ff ff
	ff 00 00 80 3f	 mov	 DWORD PTR _m$[ebp+20], 1065353216 ; 3f800000H
  002e9	c7 85 14 ff ff
	ff 00 00 80 3f	 mov	 DWORD PTR _m$[ebp], 1065353216 ; 3f800000H
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 171  : 	D3DXVECTOR3 F(pCurrentCamera->GetView());

  002f3	f3 0f 7e 40 54	 movq	 xmm0, QWORD PTR [eax+84]
  002f8	8b 40 5c	 mov	 eax, DWORD PTR [eax+92]
  002fb	89 85 9c fe ff
	ff		 mov	 DWORD PTR _F$[ebp+8], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 256  :     _Deque_const_iterator(_Size_type _Off, const _Container_base12* _Pdeque) noexcept : _Myoff(_Off) {

  00301	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 171  : 	D3DXVECTOR3 F(pCurrentCamera->GetView());

  00307	66 0f d6 85 94
	fe ff ff	 movq	 QWORD PTR _F$[ebp], xmm0

; 172  : 	m._31 = F.x;

  0030f	f3 0f 10 bd 94
	fe ff ff	 movss	 xmm7, DWORD PTR _F$[ebp]

; 174  : 	m._33 = F.z;

  00317	f3 0f 10 85 9c
	fe ff ff	 movss	 xmm0, DWORD PTR _F$[ebp+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1171 :             _Myproxy = _Parent_proxy;

  0031f	8b 70 14	 mov	 esi, DWORD PTR [eax+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 256  :     _Deque_const_iterator(_Size_type _Off, const _Container_base12* _Pdeque) noexcept : _Myoff(_Off) {

  00322	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 172  : 	m._31 = F.x;

  00325	f3 0f 11 bd 34
	ff ff ff	 movss	 DWORD PTR _m$[ebp+32], xmm7

; 173  : 	m._32 = F.y;

  0032d	f3 0f 10 bd 98
	fe ff ff	 movss	 xmm7, DWORD PTR _F$[ebp+4]
  00335	f3 0f 11 bd 38
	ff ff ff	 movss	 DWORD PTR _m$[ebp+36], xmm7

; 174  : 	m._33 = F.z;

  0033d	f3 0f 11 85 3c
	ff ff ff	 movss	 DWORD PTR _m$[ebp+40], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1179 :             _Myproxy = nullptr;

  00345	89 bd c0 fe ff
	ff		 mov	 DWORD PTR _it1$$sroa$2155$1$[ebp], edi
  0034b	89 95 b4 fe ff
	ff		 mov	 DWORD PTR _it2$$sroa$2154$1$[ebp], edx

; 1133 :         if (_Myproxy != _Right._Myproxy) {

  00351	85 f6		 test	 esi, esi
  00353	74 0e		 je	 SHORT $LN103@Render

; 1134 :             if (_Right._Myproxy) {
; 1135 :                 _Adopt(_Right._Myproxy->_Mycont);

  00355	8b 3e		 mov	 edi, DWORD PTR [esi]

; 1157 :         if (_Parent) {

  00357	85 ff		 test	 edi, edi
  00359	74 1c		 je	 SHORT $LN102@Render

; 1171 :             _Myproxy = _Parent_proxy;

  0035b	8b 3f		 mov	 edi, DWORD PTR [edi]
  0035d	89 bd c0 fe ff
	ff		 mov	 DWORD PTR _it1$$sroa$2155$1$[ebp], edi
$LN103@Render:
  00363	89 8d bc fe ff
	ff		 mov	 DWORD PTR _it1$$sroa$2153$1$[ebp], ecx

; 1133 :         if (_Myproxy != _Right._Myproxy) {

  00369	85 ff		 test	 edi, edi
  0036b	74 22		 je	 SHORT $LN116@Render

; 1134 :             if (_Right._Myproxy) {
; 1135 :                 _Adopt(_Right._Myproxy->_Mycont);

  0036d	8b 17		 mov	 edx, DWORD PTR [edi]

; 1157 :         if (_Parent) {

  0036f	85 d2		 test	 edx, edx
  00371	74 14		 je	 SHORT $LN115@Render

; 1171 :             _Myproxy = _Parent_proxy;

  00373	8b 12		 mov	 edx, DWORD PTR [edx]

; 1172 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1173 :         } else {

  00375	eb 12		 jmp	 SHORT $LN467@Render
$LN102@Render:

; 1179 :             _Myproxy = nullptr;

  00377	33 ff		 xor	 edi, edi
  00379	89 8d bc fe ff
	ff		 mov	 DWORD PTR _it1$$sroa$2153$1$[ebp], ecx
  0037f	89 bd c0 fe ff
	ff		 mov	 DWORD PTR _it1$$sroa$2155$1$[ebp], edi
  00385	eb 08		 jmp	 SHORT $LN116@Render
$LN115@Render:
  00387	33 d2		 xor	 edx, edx
$LN467@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 284  :         ++_Myoff;

  00389	89 95 b4 fe ff
	ff		 mov	 DWORD PTR _it2$$sroa$2154$1$[ebp], edx
$LN116@Render:
  0038f	41		 inc	 ecx
$LN469@Render:

; 906  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  00390	8b b5 b0 fe ff
	ff		 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00396	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  00399	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@3f000000
  003a1	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
  003a9	03 46 24	 add	 eax, DWORD PTR [esi+36]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 182  : 	for(;it2!=m_TimePositionDeque.end();++it2,++it1)

  003ac	8b b5 bc fe ff
	ff		 mov	 esi, DWORD PTR _it1$$sroa$2153$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 906  :         return iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  003b2	89 8d b8 fe ff
	ff		 mov	 DWORD PTR _it2$$sroa$2152$1$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 183  : 	{

  003b8	3b c8		 cmp	 ecx, eax
  003ba	0f 84 3e 07 00
	00		 je	 $LN3@Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1185 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  003c0	85 ff		 test	 edi, edi
  003c2	74 04		 je	 SHORT $LN159@Render
  003c4	8b 07		 mov	 eax, DWORD PTR [edi]
  003c6	eb 02		 jmp	 SHORT $LN160@Render
$LN159@Render:
  003c8	33 c0		 xor	 eax, eax
$LN160@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  003ca	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 184  : 		const D3DXVECTOR3& rkOld=it1->second;

  003cd	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  003d0	49		 dec	 ecx
  003d1	23 ce		 and	 ecx, esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 184  : 		const D3DXVECTOR3& rkOld=it1->second;

  003d3	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  003d6	83 c0 04	 add	 eax, 4
  003d9	89 85 c4 fe ff
	ff		 mov	 DWORD PTR _rkOld$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1185 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  003df	85 d2		 test	 edx, edx
  003e1	74 04		 je	 SHORT $LN171@Render
  003e3	8b 02		 mov	 eax, DWORD PTR [edx]
  003e5	eb 02		 jmp	 SHORT $LN172@Render
$LN171@Render:
  003e7	33 c0		 xor	 eax, eax
$LN172@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  003e9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 185  : 		const D3DXVECTOR3& rkNew=it2->second;

  003ec	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  003ef	49		 dec	 ecx
  003f0	23 8d b8 fe ff
	ff		 and	 ecx, DWORD PTR _it2$$sroa$2152$1$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 185  : 		const D3DXVECTOR3& rkNew=it2->second;

  003f6	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  003f9	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR _rkOld$1$[ebp]
  003ff	f3 0f 10 68 08	 movss	 xmm5, DWORD PTR [eax+8]
  00404	f3 0f 10 70 0c	 movss	 xmm6, DWORD PTR [eax+12]
  00409	f3 0f 5c 69 04	 subss	 xmm5, DWORD PTR [ecx+4]
  0040e	f3 0f 5c 71 08	 subss	 xmm6, DWORD PTR [ecx+8]
  00413	f3 0f 10 60 04	 movss	 xmm4, DWORD PTR [eax+4]
  00418	f3 0f 5c 21	 subss	 xmm4, DWORD PTR [ecx]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 672  :             return (float)fabs(_X);

  0041c	0f 28 cd	 movaps	 xmm1, xmm5
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0041f	f3 0f 11 ad 80
	fe ff ff	 movss	 DWORD PTR _B$1$sroa$2151$1$[ebp], xmm5
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 672  :             return (float)fabs(_X);

  00427	0f 28 c6	 movaps	 xmm0, xmm6
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0042a	f3 0f 11 b5 7c
	fe ff ff	 movss	 DWORD PTR _B$1$sroa$2150$1$[ebp], xmm6
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 672  :             return (float)fabs(_X);

  00432	0f 54 ca	 andps	 xmm1, xmm2
  00435	0f 54 c2	 andps	 xmm0, xmm2
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 188  : 		float radius = max(fabs(B.x),max(fabs(B.y),fabs(B.z)))/2;

  00438	0f 2f c8	 comiss	 xmm1, xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 263  :     return D3DXVECTOR3(x - v.x, y - v.y, z - v.z);

  0043b	f3 0f 11 a5 78
	fe ff ff	 movss	 DWORD PTR tv3727[ebp], xmm4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 188  : 		float radius = max(fabs(B.x),max(fabs(B.y),fabs(B.z)))/2;

  00443	76 05		 jbe	 SHORT $LN22@Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\cmath

; 95   :     return _CSTD fabsf(_Xx);

  00445	0f 28 d1	 movaps	 xmm2, xmm1

; 96   : }

  00448	eb 03		 jmp	 SHORT $LN192@Render
$LN22@Render:

; 95   :     return _CSTD fabsf(_Xx);

  0044a	0f 28 d0	 movaps	 xmm2, xmm0
$LN192@Render:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 672  :             return (float)fabs(_X);

  0044d	0f 28 dc	 movaps	 xmm3, xmm4
  00450	0f 54 1d 00 00
	00 00		 andps	 xmm3, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 188  : 		float radius = max(fabs(B.x),max(fabs(B.y),fabs(B.z)))/2;

  00457	0f 2f da	 comiss	 xmm3, xmm2
  0045a	77 0d		 ja	 SHORT $LN216@Render
  0045c	0f 2f c8	 comiss	 xmm1, xmm0
  0045f	76 05		 jbe	 SHORT $LN24@Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\cmath

; 95   :     return _CSTD fabsf(_Xx);

  00461	0f 28 d9	 movaps	 xmm3, xmm1

; 96   : }

  00464	eb 03		 jmp	 SHORT $LN216@Render
$LN24@Render:

; 95   :     return _CSTD fabsf(_Xx);

  00466	0f 28 d8	 movaps	 xmm3, xmm0
$LN216@Render:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 188  : 		float radius = max(fabs(B.x),max(fabs(B.y),fabs(B.z)))/2;

  00469	f3 0f 59 df	 mulss	 xmm3, xmm7
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1185 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0046d	85 ff		 test	 edi, edi
  0046f	74 2c		 je	 SHORT $LN227@Render
  00471	8b 07		 mov	 eax, DWORD PTR [edi]
  00473	8b 17		 mov	 edx, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00475	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 450  :         return pointer_traits<pointer>::pointer_to(**this);

  00478	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0047b	49		 dec	 ecx
  0047c	23 ce		 and	 ecx, esi

; 450  :         return pointer_traits<pointer>::pointer_to(**this);

  0047e	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  00481	89 85 c4 fe ff
	ff		 mov	 DWORD PTR $T14[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1185 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  00487	8b 07		 mov	 eax, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00489	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 450  :         return pointer_traits<pointer>::pointer_to(**this);

  0048c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0048f	49		 dec	 ecx
  00490	23 ce		 and	 ecx, esi

; 450  :         return pointer_traits<pointer>::pointer_to(**this);

  00492	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1185 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  00495	8b 85 c4 fe ff
	ff		 mov	 eax, DWORD PTR $T14[ebp]
  0049b	eb 30		 jmp	 SHORT $LN252@Render
$LN227@Render:
  0049d	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ds:8
  004a3	33 d2		 xor	 edx, edx
  004a5	a1 04 00 00 00	 mov	 eax, DWORD PTR ds:4
  004aa	49		 dec	 ecx
  004ab	23 ce		 and	 ecx, esi
  004ad	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  004b0	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ds:8
  004b6	89 85 c4 fe ff
	ff		 mov	 DWORD PTR $T13[ebp], eax
  004bc	49		 dec	 ecx
  004bd	a1 04 00 00 00	 mov	 eax, DWORD PTR ds:4
  004c2	23 ce		 and	 ecx, esi
  004c4	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  004c7	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR $T13[ebp]
$LN252@Render:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 189  : 		Vector3d c(it1->second.x+B.x*0.5f,

  004cd	0f 28 d5	 movaps	 xmm2, xmm5
  004d0	0f 28 ce	 movaps	 xmm1, xmm6
  004d3	f3 0f 59 d7	 mulss	 xmm2, xmm7
  004d7	0f 28 c4	 movaps	 xmm0, xmm4
  004da	f3 0f 59 cf	 mulss	 xmm1, xmm7
  004de	f3 0f 58 51 08	 addss	 xmm2, DWORD PTR [ecx+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  004e3	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 189  : 		Vector3d c(it1->second.x+B.x*0.5f,

  004e6	f3 0f 58 48 0c	 addss	 xmm1, DWORD PTR [eax+12]
  004eb	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  004ee	49		 dec	 ecx
  004ef	23 ce		 and	 ecx, esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 189  : 		Vector3d c(it1->second.x+B.x*0.5f,

  004f1	f3 0f 59 c7	 mulss	 xmm0, xmm7

; 193  : 		if (frustum.ViewVolumeTest(c, radius)==VS_OUTSIDE)

  004f5	51		 push	 ecx
  004f6	f3 0f 11 1c 24	 movss	 DWORD PTR [esp], xmm3
  004fb	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  004fe	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_frustum@CScreen@@1VFrustum@@A ; CScreen::ms_frustum
  00503	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  00508	8d 85 08 ff ff
	ff		 lea	 eax, DWORD PTR _c$15[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 38   : 		y = b;

  0050e	f3 0f 11 95 0c
	ff ff ff	 movss	 DWORD PTR _c$15[ebp+4], xmm2
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 193  : 		if (frustum.ViewVolumeTest(c, radius)==VS_OUTSIDE)

  00516	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\SphereLib\vector.h

; 39   : 		z = c;

  00517	f3 0f 11 8d 10
	ff ff ff	 movss	 DWORD PTR _c$15[ebp+8], xmm1
  0051f	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _c$15[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 193  : 		if (frustum.ViewVolumeTest(c, radius)==VS_OUTSIDE)

  00527	e8 00 00 00 00	 call	 ?ViewVolumeTest@Frustum@@QBE?AW4ViewState@@ABVVector3d@@M@Z ; Frustum::ViewVolumeTest
  0052c	83 f8 02	 cmp	 eax, 2
  0052f	0f 84 aa 05 00
	00		 je	 $LN2@Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1185 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  00535	85 ff		 test	 edi, edi
  00537	74 04		 je	 SHORT $LN265@Render
  00539	8b 07		 mov	 eax, DWORD PTR [edi]
  0053b	eb 02		 jmp	 SHORT $LN266@Render
$LN265@Render:
  0053d	33 c0		 xor	 eax, eax
$LN266@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0053f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 450  :         return pointer_traits<pointer>::pointer_to(**this);

  00542	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00545	49		 dec	 ecx
  00546	23 ce		 and	 ecx, esi

; 450  :         return pointer_traits<pointer>::pointer_to(**this);

  00548	8b 34 88	 mov	 esi, DWORD PTR [eax+ecx*4]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 196  : 		float rate1 = (1-(CTimer::Instance().GetCurrentSecond()-it1->first)/m_fTailLength);

  0054b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  00551	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  00556	d8 26		 fsub	 DWORD PTR [esi]
  00558	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  0055e	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  00566	d9 9d c4 fe ff
	ff		 fstp	 DWORD PTR tv2070[ebp]
  0056c	f3 0f 10 85 c4
	fe ff ff	 movss	 xmm0, DWORD PTR tv2070[ebp]
  00574	f3 0f 5e 40 10	 divss	 xmm0, DWORD PTR [eax+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1185 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  00579	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR _it2$$sroa$2154$1$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 196  : 		float rate1 = (1-(CTimer::Instance().GetCurrentSecond()-it1->first)/m_fTailLength);

  0057f	f3 0f 5c c8	 subss	 xmm1, xmm0
  00583	f3 0f 11 8d a4
	fe ff ff	 movss	 DWORD PTR _rate1$1$[ebp], xmm1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1185 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0058b	85 c0		 test	 eax, eax
  0058d	74 04		 je	 SHORT $LN277@Render
  0058f	8b 00		 mov	 eax, DWORD PTR [eax]
  00591	eb 02		 jmp	 SHORT $LN278@Render
$LN277@Render:
  00593	33 c0		 xor	 eax, eax
$LN278@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00595	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]

; 450  :         return pointer_traits<pointer>::pointer_to(**this);

  00598	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0059b	49		 dec	 ecx
  0059c	23 8d b8 fe ff
	ff		 and	 ecx, DWORD PTR _it2$$sroa$2152$1$[ebp]

; 450  :         return pointer_traits<pointer>::pointer_to(**this);

  005a2	8b 34 88	 mov	 esi, DWORD PTR [eax+ecx*4]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 197  : 		float rate2 = (1-(CTimer::Instance().GetCurrentSecond()-it2->first)/m_fTailLength);

  005a5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  005ab	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  005b0	d8 26		 fsub	 DWORD PTR [esi]
  005b2	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  005b8	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3f800000

; 198  : 		float size1 = m_fSize;
; 199  : 		float size2 = m_fSize;
; 200  : 		if (!m_bRectShape)

  005c0	80 78 04 00	 cmp	 BYTE PTR [eax+4], 0
  005c4	d9 9d c4 fe ff
	ff		 fstp	 DWORD PTR tv2087[ebp]
  005ca	f3 0f 10 85 c4
	fe ff ff	 movss	 xmm0, DWORD PTR tv2087[ebp]
  005d2	f3 0f 5e 40 10	 divss	 xmm0, DWORD PTR [eax+16]
  005d7	f3 0f 10 48 0c	 movss	 xmm1, DWORD PTR [eax+12]
  005dc	f3 0f 5c d8	 subss	 xmm3, xmm0
  005e0	0f 28 d1	 movaps	 xmm2, xmm1
  005e3	75 0c		 jne	 SHORT $LN20@Render

; 201  : 		{
; 202  : 			size1 *= rate1;

  005e5	f3 0f 59 8d a4
	fe ff ff	 mulss	 xmm1, DWORD PTR _rate1$1$[ebp]

; 203  : 			size2 *= rate2;

  005ed	f3 0f 59 d3	 mulss	 xmm2, xmm3
$LN20@Render:

; 96   : 	TFlyVertex(const D3DXVECTOR3& p, DWORD c, const D3DXVECTOR2 & t):p(p),c(c),t(t){}

  005f1	8b 40 08	 mov	 eax, DWORD PTR [eax+8]

; 204  : 		}
; 205  : 		TFlyVertex v[6] = 
; 206  : 		{
; 207  : 			TFlyVertex(D3DXVECTOR3(0.0f,size1,0.0f), m_dwColor,D3DXVECTOR2(0.0f,0.0f)),
; 208  : 			TFlyVertex(D3DXVECTOR3(-size1,0.0f,0.0f),m_dwColor,D3DXVECTOR2(0.0f,0.5f)),

  005f4	0f 28 c1	 movaps	 xmm0, xmm1
  005f7	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000

; 96   : 	TFlyVertex(const D3DXVECTOR3& p, DWORD c, const D3DXVECTOR2 & t):p(p),c(c),t(t){}

  005fe	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _v$17[ebp+24], xmm0

; 209  : 			TFlyVertex(D3DXVECTOR3(size1,0.0f,0.0f), m_dwColor,D3DXVECTOR2(0.5f,0.0f)),
; 210  : 			TFlyVertex(D3DXVECTOR3(-size2,0.0f,0.0f),m_dwColor,D3DXVECTOR2(0.5f,1.0f)),

  00606	0f 28 c2	 movaps	 xmm0, xmm2
  00609	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000

; 96   : 	TFlyVertex(const D3DXVECTOR3& p, DWORD c, const D3DXVECTOR2 & t):p(p),c(c),t(t){}

  00610	89 85 6c ff ff
	ff		 mov	 DWORD PTR _v$17[ebp+12], eax
  00616	89 45 84	 mov	 DWORD PTR _v$17[ebp+36], eax
  00619	89 45 9c	 mov	 DWORD PTR _v$17[ebp+60], eax
  0061c	89 45 b4	 mov	 DWORD PTR _v$17[ebp+84], eax
  0061f	89 45 cc	 mov	 DWORD PTR _v$17[ebp+108], eax
  00622	89 45 e4	 mov	 DWORD PTR _v$17[ebp+132], eax

; 211  : 			TFlyVertex(D3DXVECTOR3(size2,0.0f,0.0f), m_dwColor,D3DXVECTOR2(1.0f,0.5f)),
; 212  : 			TFlyVertex(D3DXVECTOR3(0.0f,-size2,0.0f),m_dwColor,D3DXVECTOR2(1.0f,1.0f)),
; 213  : 	
; 214  : 			/*TVertex(D3DXVECTOR3(0.0f,size1,0.0f), ((DWORD)(0x40*rate1)<<24) + 0x0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 215  : 			TVertex(D3DXVECTOR3(-size1,0.0f,0.0f),((DWORD)(0x40*rate1)<<24) + 0x0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 216  : 			TVertex(D3DXVECTOR3(size1,0.0f,0.0f), ((DWORD)(0x40*rate1)<<24) + 0x0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 217  : 			TVertex(D3DXVECTOR3(-size2,0.0f,0.0f),((DWORD)(0x40*rate2)<<24) + 0x0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 218  : 			TVertex(D3DXVECTOR3(size2,0.0f,0.0f), ((DWORD)(0x40*rate2)<<24) + 0x0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 219  : 			TVertex(D3DXVECTOR3(0.0f,-size2,0.0f),((DWORD)(0x40*rate2)<<24) + 0x0000ff,D3DXVECTOR2(0.0f,0.0f)),*/
; 220  : 
; 221  : 			/*TVertex(D3DXVECTOR3(0.0f,size1,0.0f),0x20ff0000,D3DXVECTOR2(0.0f,0.0f)),
; 222  : 			TVertex(D3DXVECTOR3(-size1,0.0f,0.0f),0x20ff0000,D3DXVECTOR2(0.0f,0.0f)),
; 223  : 			TVertex(D3DXVECTOR3(size1,0.0f,0.0f),0x20ff0000,D3DXVECTOR2(0.0f,0.0f)),
; 224  : 			TVertex(D3DXVECTOR3(-size2,0.0f,0.0f),0x20ff0000,D3DXVECTOR2(0.0f,0.0f)),
; 225  : 			TVertex(D3DXVECTOR3(size2,0.0f,0.0f),0x20ff0000,D3DXVECTOR2(0.0f,0.0f)),
; 226  : 			TVertex(D3DXVECTOR3(0.0f,-size2,0.0f),0x20ff0000,D3DXVECTOR2(0.0f,0.0f)),*/
; 227  : 
; 228  : 			/*TVertex(D3DXVECTOR3(0.0f,size1,0.0f),0xffff0000,D3DXVECTOR2(0.0f,0.0f)),
; 229  : 			TVertex(D3DXVECTOR3(-size1,0.0f,0.0f),0xffff0000,D3DXVECTOR2(0.0f,0.0f)),
; 230  : 			TVertex(D3DXVECTOR3(size1,0.0f,0.0f),0xffff0000,D3DXVECTOR2(0.0f,0.0f)),
; 231  : 			TVertex(D3DXVECTOR3(-size2,0.0f,0.0f),0xff0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 232  : 			TVertex(D3DXVECTOR3(size2,0.0f,0.0f),0xff0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 233  : 			TVertex(D3DXVECTOR3(0.0f,-size2,0.0f),0xff0000ff,D3DXVECTOR2(0.0f,0.0f)),*/
; 234  : 		};
; 235  : 
; 236  : 
; 237  : 		D3DXVECTOR3 E(M._41,M._42,M._43);
; 238  : 		E = pCurrentCamera->GetEye();

  00625	8b 85 84 fe ff
	ff		 mov	 eax, DWORD PTR _pCurrentCamera$1$[ebp]

; 96   : 	TFlyVertex(const D3DXVECTOR3& p, DWORD c, const D3DXVECTOR2 & t):p(p),c(c),t(t){}

  0062b	f3 0f 11 45 a8	 movss	 DWORD PTR _v$17[ebp+72], xmm0
  00630	f3 0f 11 45 dc	 movss	 DWORD PTR _v$17[ebp+124], xmm0
  00635	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _v$17[ebp], 0

; 211  : 			TFlyVertex(D3DXVECTOR3(size2,0.0f,0.0f), m_dwColor,D3DXVECTOR2(1.0f,0.5f)),
; 212  : 			TFlyVertex(D3DXVECTOR3(0.0f,-size2,0.0f),m_dwColor,D3DXVECTOR2(1.0f,1.0f)),
; 213  : 	
; 214  : 			/*TVertex(D3DXVECTOR3(0.0f,size1,0.0f), ((DWORD)(0x40*rate1)<<24) + 0x0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 215  : 			TVertex(D3DXVECTOR3(-size1,0.0f,0.0f),((DWORD)(0x40*rate1)<<24) + 0x0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 216  : 			TVertex(D3DXVECTOR3(size1,0.0f,0.0f), ((DWORD)(0x40*rate1)<<24) + 0x0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 217  : 			TVertex(D3DXVECTOR3(-size2,0.0f,0.0f),((DWORD)(0x40*rate2)<<24) + 0x0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 218  : 			TVertex(D3DXVECTOR3(size2,0.0f,0.0f), ((DWORD)(0x40*rate2)<<24) + 0x0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 219  : 			TVertex(D3DXVECTOR3(0.0f,-size2,0.0f),((DWORD)(0x40*rate2)<<24) + 0x0000ff,D3DXVECTOR2(0.0f,0.0f)),*/
; 220  : 
; 221  : 			/*TVertex(D3DXVECTOR3(0.0f,size1,0.0f),0x20ff0000,D3DXVECTOR2(0.0f,0.0f)),
; 222  : 			TVertex(D3DXVECTOR3(-size1,0.0f,0.0f),0x20ff0000,D3DXVECTOR2(0.0f,0.0f)),
; 223  : 			TVertex(D3DXVECTOR3(size1,0.0f,0.0f),0x20ff0000,D3DXVECTOR2(0.0f,0.0f)),
; 224  : 			TVertex(D3DXVECTOR3(-size2,0.0f,0.0f),0x20ff0000,D3DXVECTOR2(0.0f,0.0f)),
; 225  : 			TVertex(D3DXVECTOR3(size2,0.0f,0.0f),0x20ff0000,D3DXVECTOR2(0.0f,0.0f)),
; 226  : 			TVertex(D3DXVECTOR3(0.0f,-size2,0.0f),0x20ff0000,D3DXVECTOR2(0.0f,0.0f)),*/
; 227  : 
; 228  : 			/*TVertex(D3DXVECTOR3(0.0f,size1,0.0f),0xffff0000,D3DXVECTOR2(0.0f,0.0f)),
; 229  : 			TVertex(D3DXVECTOR3(-size1,0.0f,0.0f),0xffff0000,D3DXVECTOR2(0.0f,0.0f)),
; 230  : 			TVertex(D3DXVECTOR3(size1,0.0f,0.0f),0xffff0000,D3DXVECTOR2(0.0f,0.0f)),
; 231  : 			TVertex(D3DXVECTOR3(-size2,0.0f,0.0f),0xff0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 232  : 			TVertex(D3DXVECTOR3(size2,0.0f,0.0f),0xff0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 233  : 			TVertex(D3DXVECTOR3(0.0f,-size2,0.0f),0xff0000ff,D3DXVECTOR2(0.0f,0.0f)),*/
; 234  : 		};
; 235  : 
; 236  : 
; 237  : 		D3DXVECTOR3 E(M._41,M._42,M._43);
; 238  : 		E = pCurrentCamera->GetEye();

  0063f	f3 0f 7e 40 30	 movq	 xmm0, QWORD PTR [eax+48]
  00644	8b 40 38	 mov	 eax, DWORD PTR [eax+56]

; 96   : 	TFlyVertex(const D3DXVECTOR3& p, DWORD c, const D3DXVECTOR2 & t):p(p),c(c),t(t){}

  00647	f3 0f 11 8d 64
	ff ff ff	 movss	 DWORD PTR _v$17[ebp+4], xmm1
  0064f	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _v$17[ebp+8], 0
  00659	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _v$17[ebp+16], 0
  00663	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _v$17[ebp+20], 0
  0066d	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _v$17[ebp+28], 0
  00677	c7 45 80 00 00
	00 00		 mov	 DWORD PTR _v$17[ebp+32], 0
  0067e	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _v$17[ebp+40], 0
  00685	c7 45 8c 00 00
	00 3f		 mov	 DWORD PTR _v$17[ebp+44], 1056964608 ; 3f000000H
  0068c	f3 0f 11 4d 90	 movss	 DWORD PTR _v$17[ebp+48], xmm1
  00691	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _v$17[ebp+52], 0
  00698	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _v$17[ebp+56], 0
  0069f	c7 45 a0 00 00
	00 3f		 mov	 DWORD PTR _v$17[ebp+64], 1056964608 ; 3f000000H
  006a6	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _v$17[ebp+68], 0
  006ad	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _v$17[ebp+76], 0
  006b4	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _v$17[ebp+80], 0
  006bb	c7 45 b8 00 00
	00 3f		 mov	 DWORD PTR _v$17[ebp+88], 1056964608 ; 3f000000H
  006c2	c7 45 bc 00 00
	80 3f		 mov	 DWORD PTR _v$17[ebp+92], 1065353216 ; 3f800000H
  006c9	f3 0f 11 55 c0	 movss	 DWORD PTR _v$17[ebp+96], xmm2
  006ce	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _v$17[ebp+100], 0
  006d5	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _v$17[ebp+104], 0
  006dc	c7 45 d0 00 00
	80 3f		 mov	 DWORD PTR _v$17[ebp+112], 1065353216 ; 3f800000H
  006e3	c7 45 d4 00 00
	00 3f		 mov	 DWORD PTR _v$17[ebp+116], 1056964608 ; 3f000000H
  006ea	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _v$17[ebp+120], 0
  006f1	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _v$17[ebp+128], 0
  006f8	c7 45 e8 00 00
	80 3f		 mov	 DWORD PTR _v$17[ebp+136], 1065353216 ; 3f800000H
  006ff	c7 45 ec 00 00
	80 3f		 mov	 DWORD PTR _v$17[ebp+140], 1065353216 ; 3f800000H

; 211  : 			TFlyVertex(D3DXVECTOR3(size2,0.0f,0.0f), m_dwColor,D3DXVECTOR2(1.0f,0.5f)),
; 212  : 			TFlyVertex(D3DXVECTOR3(0.0f,-size2,0.0f),m_dwColor,D3DXVECTOR2(1.0f,1.0f)),
; 213  : 	
; 214  : 			/*TVertex(D3DXVECTOR3(0.0f,size1,0.0f), ((DWORD)(0x40*rate1)<<24) + 0x0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 215  : 			TVertex(D3DXVECTOR3(-size1,0.0f,0.0f),((DWORD)(0x40*rate1)<<24) + 0x0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 216  : 			TVertex(D3DXVECTOR3(size1,0.0f,0.0f), ((DWORD)(0x40*rate1)<<24) + 0x0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 217  : 			TVertex(D3DXVECTOR3(-size2,0.0f,0.0f),((DWORD)(0x40*rate2)<<24) + 0x0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 218  : 			TVertex(D3DXVECTOR3(size2,0.0f,0.0f), ((DWORD)(0x40*rate2)<<24) + 0x0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 219  : 			TVertex(D3DXVECTOR3(0.0f,-size2,0.0f),((DWORD)(0x40*rate2)<<24) + 0x0000ff,D3DXVECTOR2(0.0f,0.0f)),*/
; 220  : 
; 221  : 			/*TVertex(D3DXVECTOR3(0.0f,size1,0.0f),0x20ff0000,D3DXVECTOR2(0.0f,0.0f)),
; 222  : 			TVertex(D3DXVECTOR3(-size1,0.0f,0.0f),0x20ff0000,D3DXVECTOR2(0.0f,0.0f)),
; 223  : 			TVertex(D3DXVECTOR3(size1,0.0f,0.0f),0x20ff0000,D3DXVECTOR2(0.0f,0.0f)),
; 224  : 			TVertex(D3DXVECTOR3(-size2,0.0f,0.0f),0x20ff0000,D3DXVECTOR2(0.0f,0.0f)),
; 225  : 			TVertex(D3DXVECTOR3(size2,0.0f,0.0f),0x20ff0000,D3DXVECTOR2(0.0f,0.0f)),
; 226  : 			TVertex(D3DXVECTOR3(0.0f,-size2,0.0f),0x20ff0000,D3DXVECTOR2(0.0f,0.0f)),*/
; 227  : 
; 228  : 			/*TVertex(D3DXVECTOR3(0.0f,size1,0.0f),0xffff0000,D3DXVECTOR2(0.0f,0.0f)),
; 229  : 			TVertex(D3DXVECTOR3(-size1,0.0f,0.0f),0xffff0000,D3DXVECTOR2(0.0f,0.0f)),
; 230  : 			TVertex(D3DXVECTOR3(size1,0.0f,0.0f),0xffff0000,D3DXVECTOR2(0.0f,0.0f)),
; 231  : 			TVertex(D3DXVECTOR3(-size2,0.0f,0.0f),0xff0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 232  : 			TVertex(D3DXVECTOR3(size2,0.0f,0.0f),0xff0000ff,D3DXVECTOR2(0.0f,0.0f)),
; 233  : 			TVertex(D3DXVECTOR3(0.0f,-size2,0.0f),0xff0000ff,D3DXVECTOR2(0.0f,0.0f)),*/
; 234  : 		};
; 235  : 
; 236  : 
; 237  : 		D3DXVECTOR3 E(M._41,M._42,M._43);
; 238  : 		E = pCurrentCamera->GetEye();

  00706	66 0f d6 85 6c
	fe ff ff	 movq	 QWORD PTR _E$11[ebp], xmm0
  0070e	89 85 74 fe ff
	ff		 mov	 DWORD PTR _E$11[ebp+8], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1185 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  00714	85 ff		 test	 edi, edi
  00716	74 04		 je	 SHORT $LN327@Render
  00718	8b 07		 mov	 eax, DWORD PTR [edi]
  0071a	eb 02		 jmp	 SHORT $LN328@Render
$LN327@Render:
  0071c	33 c0		 xor	 eax, eax
$LN328@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0071e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 239  : 		E-=it1->second;

  00721	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00724	49		 dec	 ecx
  00725	23 8d bc fe ff
	ff		 and	 ecx, DWORD PTR _it1$$sroa$2153$1$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 214  :     y -= v.y;

  0072b	f3 0f 10 b5 70
	fe ff ff	 movss	 xmm6, DWORD PTR _E$11[ebp+4]

; 215  :     z -= v.z;

  00733	f3 0f 10 bd 74
	fe ff ff	 movss	 xmm7, DWORD PTR _E$11[ebp+8]
  0073b	f3 0f 10 ad 6c
	fe ff ff	 movss	 xmm5, DWORD PTR _E$11[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 239  : 		E-=it1->second;

  00743	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  00746	f3 0f 10 a5 78
	fe ff ff	 movss	 xmm4, DWORD PTR tv3727[ebp]

; 214  :     y -= v.y;

  0074e	f3 0f 5c 70 08	 subss	 xmm6, DWORD PTR [eax+8]

; 215  :     z -= v.z;

  00753	f3 0f 5c 78 0c	 subss	 xmm7, DWORD PTR [eax+12]
  00758	f3 0f 5c 68 04	 subss	 xmm5, DWORD PTR [eax+4]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 246  : 		D3DXVec3Normalize(&U,&U);

  0075d	8d 85 54 ff ff
	ff		 lea	 eax, DWORD PTR _U$16[ebp]
  00763	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00764	0f 28 c6	 movaps	 xmm0, xmm6

; 214  :     y -= v.y;

  00767	f3 0f 11 b5 a4
	fe ff ff	 movss	 DWORD PTR _E$2$[ebp], xmm6

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  0076f	f3 0f 59 85 7c
	fe ff ff	 mulss	 xmm0, DWORD PTR _B$1$sroa$2150$1$[ebp]

; 215  :     z -= v.z;

  00777	0f 28 df	 movaps	 xmm3, xmm7
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 246  : 		D3DXVec3Normalize(&U,&U);

  0077a	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 215  :     z -= v.z;

  0077b	f3 0f 59 9d 80
	fe ff ff	 mulss	 xmm3, DWORD PTR _B$1$sroa$2151$1$[ebp]

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00783	0f 28 d5	 movaps	 xmm2, xmm5
  00786	f3 0f 59 95 7c
	fe ff ff	 mulss	 xmm2, DWORD PTR _B$1$sroa$2150$1$[ebp]
  0078e	f3 0f 5c d8	 subss	 xmm3, xmm0

; 213  :     x -= v.x;

  00792	f3 0f 11 ad c4
	fe ff ff	 movss	 DWORD PTR _E$1$[ebp], xmm5

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  0079a	0f 28 c4	 movaps	 xmm0, xmm4

; 215  :     z -= v.z;

  0079d	f3 0f 11 bd a0
	fe ff ff	 movss	 DWORD PTR _E$3$[ebp], xmm7

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  007a5	f3 0f 59 c7	 mulss	 xmm0, xmm7
  007a9	f3 0f 59 e6	 mulss	 xmm4, xmm6
  007ad	f3 0f 5c d0	 subss	 xmm2, xmm0

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  007b1	0f 28 c5	 movaps	 xmm0, xmm5
  007b4	f3 0f 59 85 80
	fe ff ff	 mulss	 xmm0, DWORD PTR _B$1$sroa$2151$1$[ebp]
  007bc	f3 0f 5c e0	 subss	 xmm4, xmm0

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  007c0	0f 28 c2	 movaps	 xmm0, xmm2
  007c3	f3 0f 59 85 9c
	fe ff ff	 mulss	 xmm0, DWORD PTR _F$[ebp+8]

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  007cb	f3 0f 59 95 94
	fe ff ff	 mulss	 xmm2, DWORD PTR _F$[ebp]

; 1281 :     *pOut = v;

  007d3	0f 28 cc	 movaps	 xmm1, xmm4

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  007d6	f3 0f 59 a5 94
	fe ff ff	 mulss	 xmm4, DWORD PTR _F$[ebp]

; 1281 :     *pOut = v;

  007de	f3 0f 59 8d 98
	fe ff ff	 mulss	 xmm1, DWORD PTR _F$[ebp+4]

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  007e6	f3 0f 5c c8	 subss	 xmm1, xmm0
  007ea	0f 28 c3	 movaps	 xmm0, xmm3
  007ed	f3 0f 59 85 9c
	fe ff ff	 mulss	 xmm0, DWORD PTR _F$[ebp+8]

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  007f5	f3 0f 59 9d 98
	fe ff ff	 mulss	 xmm3, DWORD PTR _F$[ebp+4]
  007fd	f3 0f 5c c4	 subss	 xmm0, xmm4

; 1280 : 
; 1281 :     *pOut = v;

  00801	f3 0f 11 8d 54
	ff ff ff	 movss	 DWORD PTR _U$16[ebp], xmm1
  00809	f3 0f 5c d3	 subss	 xmm2, xmm3
  0080d	f3 0f 11 85 58
	ff ff ff	 movss	 DWORD PTR _U$16[ebp+4], xmm0
  00815	f3 0f 11 95 5c
	ff ff ff	 movss	 DWORD PTR _U$16[ebp+8], xmm2
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 246  : 		D3DXVec3Normalize(&U,&U);

  0081d	e8 00 00 00 00	 call	 _D3DXVec3Normalize@8
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00822	f3 0f 10 ad 5c
	ff ff ff	 movss	 xmm5, DWORD PTR _U$16[ebp+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0082a	8d b5 60 ff ff
	ff		 lea	 esi, DWORD PTR _v$17[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00830	f3 0f 10 9d 58
	ff ff ff	 movss	 xmm3, DWORD PTR _U$16[ebp+4]
  00838	0f 28 f5	 movaps	 xmm6, xmm5
  0083b	f3 0f 59 b5 98
	fe ff ff	 mulss	 xmm6, DWORD PTR _F$[ebp+4]
  00843	0f 28 c3	 movaps	 xmm0, xmm3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00846	bf 06 00 00 00	 mov	 edi, 6
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  0084b	f3 0f 59 85 9c
	fe ff ff	 mulss	 xmm0, DWORD PTR _F$[ebp+8]

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  00853	0f 28 d3	 movaps	 xmm2, xmm3
  00856	f3 0f 10 8d 54
	ff ff ff	 movss	 xmm1, DWORD PTR _U$16[ebp]
  0085e	f3 0f 59 95 94
	fe ff ff	 mulss	 xmm2, DWORD PTR _F$[ebp]
  00866	0f 28 e1	 movaps	 xmm4, xmm1
  00869	f3 0f 59 a5 9c
	fe ff ff	 mulss	 xmm4, DWORD PTR _F$[ebp+8]
  00871	f3 0f 5c f0	 subss	 xmm6, xmm0
  00875	0f 28 c5	 movaps	 xmm0, xmm5
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 250  : 		m._21 = U.x;

  00878	f3 0f 11 8d 24
	ff ff ff	 movss	 DWORD PTR _m$[ebp+16], xmm1
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  00880	f3 0f 59 85 94
	fe ff ff	 mulss	 xmm0, DWORD PTR _F$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 251  : 		m._22 = U.y;

  00888	f3 0f 11 9d 28
	ff ff ff	 movss	 DWORD PTR _m$[ebp+20], xmm3

; 252  : 		m._23 = U.z;

  00890	f3 0f 11 ad 2c
	ff ff ff	 movss	 DWORD PTR _m$[ebp+24], xmm5
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  00898	f3 0f 5c e0	 subss	 xmm4, xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 253  : 		m._11 = R.x;

  0089c	f3 0f 11 b5 14
	ff ff ff	 movss	 DWORD PTR _m$[ebp], xmm6
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  008a4	0f 28 c1	 movaps	 xmm0, xmm1
  008a7	f3 0f 59 85 98
	fe ff ff	 mulss	 xmm0, DWORD PTR _F$[ebp+4]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 254  : 		m._12 = R.y;

  008af	f3 0f 11 a5 18
	ff ff ff	 movss	 DWORD PTR _m$[ebp+4], xmm4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  008b7	f3 0f 5c d0	 subss	 xmm2, xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 255  : 		m._13 = R.z;

  008bb	f3 0f 11 95 1c
	ff ff ff	 movss	 DWORD PTR _m$[ebp+8], xmm2
$LL7@Render:

; 256  : 		int i;
; 257  : 		for(i=0;i<6;i++)
; 258  : 			D3DXVec3TransformNormal(&v[i].p,&v[i].p,&m);

  008c3	8d 85 14 ff ff
	ff		 lea	 eax, DWORD PTR _m$[ebp]
  008c9	50		 push	 eax
  008ca	56		 push	 esi
  008cb	56		 push	 esi
  008cc	e8 00 00 00 00	 call	 _D3DXVec3TransformNormal@12
  008d1	83 c6 18	 add	 esi, 24			; 00000018H
  008d4	83 ef 01	 sub	 edi, 1
  008d7	75 ea		 jne	 SHORT $LL7@Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1185 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  008d9	8b bd c0 fe ff
	ff		 mov	 edi, DWORD PTR _it1$$sroa$2155$1$[ebp]
  008df	85 ff		 test	 edi, edi
  008e1	74 04		 je	 SHORT $LN347@Render
  008e3	8b 07		 mov	 eax, DWORD PTR [edi]
  008e5	eb 02		 jmp	 SHORT $LN348@Render
$LN347@Render:
  008e7	33 c0		 xor	 eax, eax
$LN348@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  008e9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 260  : 			v[i].p += it1->second;

  008ec	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  008ef	49		 dec	 ecx
  008f0	8b 95 bc fe ff
	ff		 mov	 edx, DWORD PTR _it1$$sroa$2153$1$[ebp]
  008f6	23 ca		 and	 ecx, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 204  :     x += v.x;

  008f8	f3 0f 10 85 60
	ff ff ff	 movss	 xmm0, DWORD PTR _v$17[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 260  : 			v[i].p += it1->second;

  00900	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 204  :     x += v.x;

  00903	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  00908	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR _v$17[ebp], xmm0

; 205  :     y += v.y;

  00910	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00915	f3 0f 58 85 64
	ff ff ff	 addss	 xmm0, DWORD PTR _v$17[ebp+4]
  0091d	f3 0f 11 85 64
	ff ff ff	 movss	 DWORD PTR _v$17[ebp+4], xmm0

; 206  :     z += v.z;

  00925	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0092a	f3 0f 58 85 68
	ff ff ff	 addss	 xmm0, DWORD PTR _v$17[ebp+8]
  00932	f3 0f 11 85 68
	ff ff ff	 movss	 DWORD PTR _v$17[ebp+8], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1185 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0093a	85 ff		 test	 edi, edi
  0093c	74 04		 je	 SHORT $LN456@Render
  0093e	8b 07		 mov	 eax, DWORD PTR [edi]
  00940	eb 02		 jmp	 SHORT $LN457@Render
$LN456@Render:
  00942	33 c0		 xor	 eax, eax
$LN457@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00944	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 260  : 			v[i].p += it1->second;

  00947	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0094a	49		 dec	 ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 204  :     x += v.x;

  0094b	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR _v$17[ebp+24]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00953	23 ca		 and	 ecx, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 260  : 			v[i].p += it1->second;

  00955	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 204  :     x += v.x;

  00958	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  0095d	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _v$17[ebp+24], xmm0

; 205  :     y += v.y;

  00965	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0096a	f3 0f 58 85 7c
	ff ff ff	 addss	 xmm0, DWORD PTR _v$17[ebp+28]
  00972	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _v$17[ebp+28], xmm0

; 206  :     z += v.z;

  0097a	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0097f	f3 0f 58 45 80	 addss	 xmm0, DWORD PTR _v$17[ebp+32]
  00984	f3 0f 11 45 80	 movss	 DWORD PTR _v$17[ebp+32], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1185 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  00989	85 ff		 test	 edi, edi
  0098b	74 04		 je	 SHORT $LN459@Render
  0098d	8b 07		 mov	 eax, DWORD PTR [edi]
  0098f	eb 02		 jmp	 SHORT $LN460@Render
$LN459@Render:
  00991	33 c0		 xor	 eax, eax
$LN460@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00993	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00996	be 03 00 00 00	 mov	 esi, 3
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 260  : 			v[i].p += it1->second;

  0099b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0099e	49		 dec	 ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 204  :     x += v.x;

  0099f	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _v$17[ebp+48]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  009a4	23 ca		 and	 ecx, edx
  009a6	8d 55 b0	 lea	 edx, DWORD PTR _v$17[ebp+80]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 260  : 			v[i].p += it1->second;

  009a9	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 204  :     x += v.x;

  009ac	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  009b1	f3 0f 11 45 90	 movss	 DWORD PTR _v$17[ebp+48], xmm0

; 205  :     y += v.y;

  009b6	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  009bb	f3 0f 58 45 94	 addss	 xmm0, DWORD PTR _v$17[ebp+52]
  009c0	f3 0f 11 45 94	 movss	 DWORD PTR _v$17[ebp+52], xmm0

; 206  :     z += v.z;

  009c5	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  009ca	f3 0f 58 45 98	 addss	 xmm0, DWORD PTR _v$17[ebp+56]
  009cf	f3 0f 11 45 98	 movss	 DWORD PTR _v$17[ebp+56], xmm0
$LL451@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1185 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  009d4	8b 85 b4 fe ff
	ff		 mov	 eax, DWORD PTR _it2$$sroa$2154$1$[ebp]
  009da	85 c0		 test	 eax, eax
  009dc	74 04		 je	 SHORT $LN361@Render
  009de	8b 00		 mov	 eax, DWORD PTR [eax]
  009e0	eb 02		 jmp	 SHORT $LN362@Render
$LN361@Render:
  009e2	33 c0		 xor	 eax, eax
$LN362@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  009e4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 262  : 			v[i].p += it2->second;

  009e7	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  009ea	49		 dec	 ecx
  009eb	23 8d b8 fe ff
	ff		 and	 ecx, DWORD PTR _it2$$sroa$2152$1$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 204  :     x += v.x;

  009f1	f3 0f 10 42 f8	 movss	 xmm0, DWORD PTR [edx-8]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 262  : 			v[i].p += it2->second;

  009f6	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 204  :     x += v.x;

  009f9	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  009fe	f3 0f 11 42 f8	 movss	 DWORD PTR [edx-8], xmm0

; 205  :     y += v.y;

  00a03	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00a08	f3 0f 58 42 fc	 addss	 xmm0, DWORD PTR [edx-4]
  00a0d	f3 0f 11 42 fc	 movss	 DWORD PTR [edx-4], xmm0

; 206  :     z += v.z;

  00a12	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00a17	f3 0f 58 02	 addss	 xmm0, DWORD PTR [edx]
  00a1b	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 261  : 		for(;i<6;i++)

  00a1f	83 c2 18	 add	 edx, 24			; 00000018H
  00a22	83 ee 01	 sub	 esi, 1
  00a25	75 ad		 jne	 SHORT $LL451@Render
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00a27	8b 85 84 fe ff
	ff		 mov	 eax, DWORD PTR _pCurrentCamera$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00a2d	8d b5 60 ff ff
	ff		 lea	 esi, DWORD PTR _v$17[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00a33	f3 0f 10 85 c4
	fe ff ff	 movss	 xmm0, DWORD PTR _E$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00a3b	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00a40	89 bd c0 fe ff
	ff		 mov	 DWORD PTR _it1$$sroa$2155$1$[ebp], edi
  00a46	8d bd dc fd ff
	ff		 lea	 edi, DWORD PTR $T10[ebp+4]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00a4c	f3 0f 10 48 58	 movss	 xmm1, DWORD PTR [eax+88]
  00a51	f3 0f 59 40 54	 mulss	 xmm0, DWORD PTR [eax+84]
  00a56	f3 0f 59 8d a4
	fe ff ff	 mulss	 xmm1, DWORD PTR _E$2$[ebp]
  00a5e	f3 0f 58 c8	 addss	 xmm1, xmm0
  00a62	f3 0f 10 40 5c	 movss	 xmm0, DWORD PTR [eax+92]
  00a67	f3 0f 59 85 a0
	fe ff ff	 mulss	 xmm0, DWORD PTR _E$3$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00a6f	8b 85 8c fe ff
	ff		 mov	 eax, DWORD PTR _VSVector$[ebp+4]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00a75	f3 0f 58 c8	 addss	 xmm1, xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 266  : 		VSVector.push_back(make_pair(-D3DXVec3Dot(&E,&pCurrentCamera->GetView()),TFlyVertexSet(v)));

  00a79	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00a80	f3 0f 11 8d d8
	fd ff ff	 movss	 DWORD PTR $T10[ebp], xmm1
  00a88	f3 a5		 rep movsd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00a8a	3b 85 a8 fe ff
	ff		 cmp	 eax, DWORD PTR _VSVector$2$[ebp]
  00a90	74 1c		 je	 SHORT $LN382@Render
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00a92	8b f8		 mov	 edi, eax
  00a94	8d b5 d8 fd ff
	ff		 lea	 esi, DWORD PTR $T10[ebp]
  00a9a	b9 25 00 00 00	 mov	 ecx, 37			; 00000025H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 690  :         ++_Mylast;

  00a9f	05 94 00 00 00	 add	 eax, 148		; 00000094H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00aa4	f3 a5		 rep movsd
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 690  :         ++_Mylast;

  00aa6	89 85 8c fe ff
	ff		 mov	 DWORD PTR _VSVector$[ebp+4], eax

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00aac	eb 1f		 jmp	 SHORT $LN468@Render
$LN382@Render:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00aae	8d 8d d8 fd ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  00ab4	51		 push	 ecx
  00ab5	50		 push	 eax
  00ab6	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR _VSVector$[ebp]
  00abc	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@U?$pair@MUTFlyVertexSet@@@std@@@?$vector@U?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@QAEPAU?$pair@MUTFlyVertexSet@@@1@QAU21@$$QAU21@@Z ; std::vector<std::pair<float,TFlyVertexSet>,std::allocator<std::pair<float,TFlyVertexSet> > >::_Emplace_reallocate<std::pair<float,TFlyVertexSet> >
  00ac1	8b 85 90 fe ff
	ff		 mov	 eax, DWORD PTR _VSVector$[ebp+8]
  00ac7	89 85 a8 fe ff
	ff		 mov	 DWORD PTR _VSVector$2$[ebp], eax
$LN468@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 284  :         ++_Myoff;

  00acd	8b bd c0 fe ff
	ff		 mov	 edi, DWORD PTR _it1$$sroa$2155$1$[ebp]
  00ad3	8b b5 bc fe ff
	ff		 mov	 esi, DWORD PTR _it1$$sroa$2153$1$[ebp]
  00ad9	89 bd c0 fe ff
	ff		 mov	 DWORD PTR _it1$$sroa$2155$1$[ebp], edi
$LN2@Render:
  00adf	8b 8d b8 fe ff
	ff		 mov	 ecx, DWORD PTR _it2$$sroa$2152$1$[ebp]
  00ae5	8b 95 b4 fe ff
	ff		 mov	 edx, DWORD PTR _it2$$sroa$2154$1$[ebp]
  00aeb	41		 inc	 ecx
  00aec	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  00af2	46		 inc	 esi
  00af3	89 b5 bc fe ff
	ff		 mov	 DWORD PTR _it1$$sroa$2153$1$[ebp], esi
  00af9	e9 92 f8 ff ff	 jmp	 $LN469@Render
$LN3@Render:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7571 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  00afe	8b bd 8c fe ff
	ff		 mov	 edi, DWORD PTR _VSVector$[ebp+4]
  00b04	b8 a7 c8 67 dd	 mov	 eax, -580400985		; dd67c8a7H
  00b09	8b b5 88 fe ff
	ff		 mov	 esi, DWORD PTR _VSVector$[ebp]
  00b0f	8b cf		 mov	 ecx, edi
  00b11	2b ce		 sub	 ecx, esi
  00b13	c6 85 a0 fe ff
	ff 00		 mov	 BYTE PTR $T12[ebp], 0
  00b1a	ff b5 a0 fe ff
	ff		 push	 DWORD PTR $T12[ebp]
  00b20	f7 e9		 imul	 ecx
  00b22	03 d1		 add	 edx, ecx
  00b24	c1 fa 07	 sar	 edx, 7
  00b27	8b c2		 mov	 eax, edx
  00b29	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00b2c	03 c2		 add	 eax, edx
  00b2e	50		 push	 eax
  00b2f	57		 push	 edi
  00b30	56		 push	 esi
  00b31	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAU?$pair@MUTFlyVertexSet@@@std@@U?$less@X@2@@std@@YAXPAU?$pair@MUTFlyVertexSet@@@0@0HU?$less@X@0@@Z ; std::_Sort_unchecked<std::pair<float,TFlyVertexSet> *,std::less<void> >
  00b36	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00b39	3b f7		 cmp	 esi, edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 273  : 	for(TFlyVertexSetVector::iterator it = VSVector.begin();it!=VSVector.end();++it)

  00b3b	74 2b		 je	 SHORT $LN15@Render
  00b3d	0f 1f 00	 npad	 3
$LL413@Render:

; 275  : 		STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP, 4, it->second.v, sizeof(TVertex));

  00b40	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 256  :         return _Const_cast(_Mybase::operator->());

  00b42	56		 push	 esi
  00b43	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBU?$pair@MUTFlyVertexSet@@@std@@@std@@YAPAU?$pair@MUTFlyVertexSet@@@0@PBU10@@Z ; std::_Const_cast<std::pair<float,TFlyVertexSet> const >
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 275  : 		STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP, 4, it->second.v, sizeof(TVertex));

  00b48	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 256  :         return _Const_cast(_Mybase::operator->());

  00b4e	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 275  : 		STATEMANAGER.DrawPrimitiveUP(D3DPT_TRIANGLESTRIP, 4, it->second.v, sizeof(TVertex));

  00b51	83 c0 04	 add	 eax, 4
  00b54	50		 push	 eax
  00b55	6a 04		 push	 4
  00b57	6a 05		 push	 5
  00b59	e8 00 00 00 00	 call	 ?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z ; CStateManager::DrawPrimitiveUP
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 75   :         ++_Ptr;

  00b5e	81 c6 94 00 00
	00		 add	 esi, 148		; 00000094H

; 149  :         return _Ptr == _Right._Ptr;

  00b64	3b f7		 cmp	 esi, edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 273  : 	for(TFlyVertexSetVector::iterator it = VSVector.begin();it!=VSVector.end();++it)

  00b66	75 d8		 jne	 SHORT $LL413@Render
$LN15@Render:

; 276  : 	}
; 277  : 	STATEMANAGER.RestoreRenderState(D3DRS_DESTBLEND);

  00b68	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00b6e	6a 14		 push	 20			; 00000014H
  00b70	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 278  : 	STATEMANAGER.RestoreRenderState(D3DRS_SRCBLEND);

  00b75	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00b7b	6a 13		 push	 19			; 00000013H
  00b7d	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 279  : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHABLENDENABLE);

  00b82	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00b88	6a 1b		 push	 27			; 0000001bH
  00b8a	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 280  : 	STATEMANAGER.RestoreRenderState(D3DRS_CULLMODE);

  00b8f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00b95	6a 16		 push	 22			; 00000016H
  00b97	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 281  : 	STATEMANAGER.RestoreVertexShader();

  00b9c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00ba2	e8 00 00 00 00	 call	 ?RestoreVertexShader@CStateManager@@QAEXXZ ; CStateManager::RestoreVertexShader

; 282  : 	STATEMANAGER.RestoreTransform(D3DTS_WORLD);

  00ba7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00bad	68 00 01 00 00	 push	 256			; 00000100H
  00bb2	e8 00 00 00 00	 call	 ?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z ; CStateManager::RestoreTransform

; 283  : 	//STATEMANAGER.RestoreRenderState(D3DRS_ZWRITEENABLE);
; 284  : 	STATEMANAGER.RestoreRenderState(D3DRS_ZFUNC);

  00bb7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00bbd	6a 17		 push	 23			; 00000017H
  00bbf	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 285  : 	STATEMANAGER.RestoreRenderState(D3DRS_BLENDOP);

  00bc4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00bca	68 ab 00 00 00	 push	 171			; 000000abH
  00bcf	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 286  : 
; 287  : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHATESTENABLE);

  00bd4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00bda	6a 0f		 push	 15			; 0000000fH
  00bdc	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 288  : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHAFUNC);

  00be1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00be7	6a 19		 push	 25			; 00000019H
  00be9	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 289  : 	STATEMANAGER.RestoreRenderState(D3DRS_ALPHAREF);

  00bee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00bf4	6a 18		 push	 24			; 00000018H
  00bf6	e8 00 00 00 00	 call	 ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState

; 291  : }

  00bfb	8d 8d ac fe ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  00c01	e8 00 00 00 00	 call	 ??1CScreen@@UAE@XZ	; CScreen::~CScreen
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00c06	8b 8d 88 fe ff
	ff		 mov	 ecx, DWORD PTR _VSVector$[ebp]
  00c0c	85 c9		 test	 ecx, ecx
  00c0e	74 2b		 je	 SHORT $LN429@Render

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00c10	8b b5 a8 fe ff
	ff		 mov	 esi, DWORD PTR _VSVector$2$[ebp]
  00c16	b8 a7 c8 67 dd	 mov	 eax, -580400985		; dd67c8a7H
  00c1b	2b f1		 sub	 esi, ecx
  00c1d	f7 ee		 imul	 esi
  00c1f	03 d6		 add	 edx, esi
  00c21	c1 fa 07	 sar	 edx, 7
  00c24	8b c2		 mov	 eax, edx
  00c26	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00c29	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00c2b	69 c0 94 00 00
	00		 imul	 eax, eax, 148
  00c31	50		 push	 eax
  00c32	51		 push	 ecx
  00c33	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00c38	83 c4 08	 add	 esp, 8
$LN429@Render:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 291  : }

  00c3b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00c3e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00c45	59		 pop	 ecx
  00c46	5f		 pop	 edi
  00c47	5e		 pop	 esi
  00c48	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00c4b	33 cd		 xor	 ecx, ebp
  00c4d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00c52	8b e5		 mov	 esp, ebp
  00c54	5d		 pop	 ebp
  00c55	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Render@CFlyTrace@@QAEXXZ$0:
  00000	8d 8d 88 fe ff
	ff		 lea	 ecx, DWORD PTR _VSVector$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$vector@U?$pair@MUTFlyVertexSet@@@std@@V?$allocator@U?$pair@MUTFlyVertexSet@@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<float,TFlyVertexSet>,std::allocator<std::pair<float,TFlyVertexSet> > >::~vector<std::pair<float,TFlyVertexSet>,std::allocator<std::pair<float,TFlyVertexSet> > >
__unwindfunclet$?Render@CFlyTrace@@QAEXXZ$1:
  0000b	8d 8d ac fe ff
	ff		 lea	 ecx, DWORD PTR _s$[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1CScreen@@UAE@XZ	; CScreen::~CScreen
  00016	cc		 int	 3
  00017	cc		 int	 3
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
__ehhandler$?Render@CFlyTrace@@QAEXXZ:
  0001b	90		 npad	 1
  0001c	90		 npad	 1
  0001d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00021	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00024	8b 8a d8 fd ff
	ff		 mov	 ecx, DWORD PTR [edx-552]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00034	33 c8		 xor	 ecx, eax
  00036	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003b	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Render@CFlyTrace@@QAEXXZ
  00040	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Render@CFlyTrace@@QAEXXZ ENDP				; CFlyTrace::Render
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
;	COMDAT ?Update@CFlyTrace@@QAEXXZ
_TEXT	SEGMENT
?Update@CFlyTrace@@QAEXXZ PROC				; CFlyTrace::Update, COMDAT
; _this$ = ecx

; 83   : 	
; 84   : }

  00000	c2 00 00	 ret	 0
?Update@CFlyTrace@@QAEXXZ ENDP				; CFlyTrace::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
;	COMDAT ?UpdateNewPosition@CFlyTrace@@QAEXABUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
__First$ = -8						; size = 8
tv346 = -4						; size = 4
tv356 = 8						; size = 4
_v3Position$ = 8					; size = 4
?UpdateNewPosition@CFlyTrace@@QAEXABUD3DXVECTOR3@@@Z PROC ; CFlyTrace::UpdateNewPosition, COMDAT
; _this$ = ecx

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx

; 63   : 	m_TimePositionDeque.push_front(TTimePosition(CTimer::Instance().GetCurrentSecond(),v3Position));

  00009	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  0000f	57		 push	 edi
  00010	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00015	8b 45 08	 mov	 eax, DWORD PTR _v3Position$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 63   : 	m_TimePositionDeque.push_front(TTimePosition(CTimer::Instance().GetCurrentSecond(),v3Position));

  00018	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0001b	d9 5d f0	 fstp	 DWORD PTR $T1[ebp]
  0001e	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00022	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00025	89 45 fc	 mov	 DWORD PTR $T1[ebp+12], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 63   : 	m_TimePositionDeque.push_front(TTimePosition(CTimer::Instance().GetCurrentSecond(),v3Position));

  00028	8d 45 f0	 lea	 eax, DWORD PTR $T1[ebp]
  0002b	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0002c	66 0f d6 45 f4	 movq	 QWORD PTR $T1[ebp+4], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 63   : 	m_TimePositionDeque.push_front(TTimePosition(CTimer::Instance().GetCurrentSecond(),v3Position));

  00031	e8 00 00 00 00	 call	 ?push_front@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@QAEX$$QAU?$pair@MUD3DXVECTOR3@@@2@@Z ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::push_front
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 1010 :         return _Mysize() == 0;

  00036	83 7e 24 00	 cmp	 DWORD PTR [esi+36], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 65   : 	while(!m_TimePositionDeque.empty() && m_TimePositionDeque.back().first+m_fTailLength<CTimer::Instance().GetCurrentSecond())

  0003a	74 4e		 je	 SHORT $LN3@UpdateNewP
  0003c	0f 1f 40 00	 npad	 4
$LL2@UpdateNewP:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 922  :         return _Unchecked_iterator(_Myoff() + _Mysize(), _STD addressof(_Get_data()));

  00040	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  00043	03 46 20	 add	 eax, DWORD PTR [esi+32]

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00046	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 65   : 	while(!m_TimePositionDeque.empty() && m_TimePositionDeque.back().first+m_fTailLength<CTimer::Instance().GetCurrentSecond())

  00049	f3 0f 10 46 10	 movss	 xmm0, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  0004e	49		 dec	 ecx

; 1068 :         return *_Prev_iter(_Unchecked_end());

  0004f	89 45 fc	 mov	 DWORD PTR __First$[ebp+4], eax

; 76   :         --_Myoff;

  00052	48		 dec	 eax

; 548  :         return (_Off / _DEQUESIZ) & (_Mapsize - 1);

  00053	23 c8		 and	 ecx, eax

; 1068 :         return *_Prev_iter(_Unchecked_end());

  00055	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00058	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 65   : 	while(!m_TimePositionDeque.empty() && m_TimePositionDeque.back().first+m_fTailLength<CTimer::Instance().GetCurrentSecond())

  0005b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  00061	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  00065	f3 0f 11 45 fc	 movss	 DWORD PTR tv346[ebp], xmm0
  0006a	e8 00 00 00 00	 call	 ?GetCurrentSecond@CTimer@@QAEMXZ ; CTimer::GetCurrentSecond
  0006f	d9 5d 08	 fstp	 DWORD PTR tv356[ebp]
  00072	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR tv356[ebp]
  00077	0f 2f 45 fc	 comiss	 xmm0, DWORD PTR tv346[ebp]
  0007b	76 0d		 jbe	 SHORT $LN3@UpdateNewP
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 1144 :         if (--_Mysize() == 0) {

  0007d	83 46 24 ff	 add	 DWORD PTR [esi+36], -1
  00081	75 bd		 jne	 SHORT $LL2@UpdateNewP

; 1145 :             _Myoff() = 0;

  00083	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
$LN3@UpdateNewP:
  0008a	5f		 pop	 edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 69   : }

  0008b	5e		 pop	 esi
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c2 04 00	 ret	 4
?UpdateNewPosition@CFlyTrace@@QAEXABUD3DXVECTOR3@@@Z ENDP ; CFlyTrace::UpdateNewPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
;	COMDAT ?Create@CFlyTrace@@QAEXABUTFlyingAttachData@CFlyingData@@@Z
_TEXT	SEGMENT
_rFlyingAttachData$ = 8					; size = 4
?Create@CFlyTrace@@QAEXABUTFlyingAttachData@CFlyingData@@@Z PROC ; CFlyTrace::Create, COMDAT
; _this$ = ecx

; 72   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 73   : 	//assert(rFlyingAttachData.bHasTail);
; 74   : 	m_dwColor = rFlyingAttachData.dwTailColor;

  00003	8b 55 08	 mov	 edx, DWORD PTR _rFlyingAttachData$[ebp]
  00006	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00009	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 75   : 	m_fTailLength = rFlyingAttachData.fTailLength;

  0000c	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  0000f	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 76   : 	m_fSize = rFlyingAttachData.fTailSize;

  00012	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  00015	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 77   : 	m_bRectShape = rFlyingAttachData.bRectShape;

  00018	8a 42 30	 mov	 al, BYTE PTR [edx+48]
  0001b	88 41 04	 mov	 BYTE PTR [ecx+4], al

; 78   : }

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
?Create@CFlyTrace@@QAEXABUTFlyingAttachData@CFlyingData@@@Z ENDP ; CFlyTrace::Create
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
;	COMDAT ?Destroy@CFlyTrace@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CFlyTrace@@QAEXXZ PROC				; CFlyTrace::Destroy, COMDAT
; _this$ = ecx

; 55   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 56   : 	m_TimePositionDeque.clear();

  00003	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 1330 :         _Tidy();

  00006	e8 00 00 00 00	 call	 ?_Tidy@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@AAEXXZ ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Tidy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 58   : 	__Initialize();

  0000b	8b ce		 mov	 ecx, esi
  0000d	5e		 pop	 esi
  0000e	e9 00 00 00 00	 jmp	 ?__Initialize@CFlyTrace@@IAEXXZ ; CFlyTrace::__Initialize
?Destroy@CFlyTrace@@QAEXXZ ENDP				; CFlyTrace::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
;	COMDAT ??1CFlyTrace@@UAE@XZ
_TEXT	SEGMENT
__Proxy_allocator$1 = -1				; size = 1
??1CFlyTrace@@UAE@XZ PROC				; CFlyTrace::~CFlyTrace, COMDAT
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7CFlyTrace@@6B@

; 42   : 	Destroy();

  0000e	e8 00 00 00 00	 call	 ?Destroy@CFlyTrace@@QAEXXZ ; CFlyTrace::Destroy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 870  :         _Tidy();

  00013	8d 4f 14	 lea	 ecx, DWORD PTR [edi+20]
  00016	e8 00 00 00 00	 call	 ?_Tidy@?$deque@U?$pair@MUD3DXVECTOR3@@@std@@V?$allocator@U?$pair@MUD3DXVECTOR3@@@std@@@2@@std@@AAEXXZ ; std::deque<std::pair<float,D3DXVECTOR3>,std::allocator<std::pair<float,D3DXVECTOR3> > >::_Tidy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 598  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 872  :         _Delete_plain_internal(_Proxy_allocator, _STD exchange(_Get_data()._Myproxy, nullptr));

  0001e	50		 push	 eax
  0001f	8d 45 ff	 lea	 eax, DWORD PTR __Proxy_allocator$1[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 599  :     _Val         = static_cast<_Other&&>(_New_val);

  00022	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 872  :         _Delete_plain_internal(_Proxy_allocator, _STD exchange(_Get_data()._Myproxy, nullptr));

  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  0002f	83 c4 08	 add	 esp, 8
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 43   : }

  00032	8b cf		 mov	 ecx, edi
  00034	e8 00 00 00 00	 call	 ??1CScreen@@UAE@XZ	; CScreen::~CScreen
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1CFlyTrace@@UAE@XZ ENDP				; CFlyTrace::~CFlyTrace
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp
;	COMDAT ??0CFlyTrace@@QAE@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CFlyTrace@@QAE@XZ PROC				; CFlyTrace::CFlyTrace, COMDAT
; _this$ = ecx

; 27   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CFlyTrace@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b d9		 mov	 ebx, ecx
  00028	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx
  0002b	e8 00 00 00 00	 call	 ??0CScreen@@QAE@XZ	; CScreen::CScreen
  00030	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CFlyTrace@@6B@
  00036	8d 7b 14	 lea	 edi, DWORD PTR [ebx+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00039	6a 08		 push	 8
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 27   : {

  0003b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1097 :     _Container_base12() noexcept : _Myproxy(nullptr) {}

  00042	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\deque

; 544  :     _Deque_val() noexcept : _Map(), _Mapsize(0), _Myoff(0), _Mysize(0) {}

  00048	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  0004f	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00056	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
  0005d	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00064	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1107 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  00069	8b f0		 mov	 esi, eax

; 1108 :         _Construct_in_place(*_New_proxy, this);

  0006b	89 7d f0	 mov	 DWORD PTR $T2[ebp], edi
  0006e	8d 45 f0	 lea	 eax, DWORD PTR $T2[ebp]
  00071	50		 push	 eax
  00072	56		 push	 esi
  00073	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
  00078	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1109 :         _Myproxy            = _New_proxy;

  0007b	89 37		 mov	 DWORD PTR [edi], esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 28   : 	__Initialize();

  0007d	8b cb		 mov	 ecx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1110 :         _New_proxy->_Mycont = this;

  0007f	89 3e		 mov	 DWORD PTR [esi], edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\GameLib\FlyTrace.cpp

; 28   : 	__Initialize();

  00081	e8 00 00 00 00	 call	 ?__Initialize@CFlyTrace@@IAEXXZ ; CFlyTrace::__Initialize

; 29   : 
; 30   : 	/*
; 31   : 	// Code for texture
; 32   : 	CGraphicImage * pImage = (CGraphicImage *)CResourceManager::Instance().GetResourcePointer("d:/ray.jpg");
; 33   : 	m_ImageInstance.SetImagePointer(pImage);
; 34   : 	
; 35   : 	CGraphicTexture * pTexture = m_ImageInstance.GetTexturePointer();
; 36   : 	m_lpTexture = pTexture->GetD3DTexture();
; 37   : 	*/
; 38   : }

  00086	8b c3		 mov	 eax, ebx
  00088	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0008b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00092	59		 pop	 ecx
  00093	5f		 pop	 edi
  00094	5e		 pop	 esi
  00095	5b		 pop	 ebx
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CFlyTrace@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CScreen@@UAE@XZ	; CScreen::~CScreen
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0CFlyTrace@@QAE@XZ:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CFlyTrace@@QAE@XZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CFlyTrace@@QAE@XZ ENDP				; CFlyTrace::CFlyTrace
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 177  :     D3DXMATRIX() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
