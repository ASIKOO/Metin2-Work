; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterPack\md5.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_MD5Init
PUBLIC	_MD5Update
PUBLIC	_MD5Final
PUBLIC	_MD5Transform
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
_PADDING DB	080H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_DATA	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterPack\md5.c
;	COMDAT _MD5Transform
_TEXT	SEGMENT
_d$ = -16						; size = 4
_c$ = -12						; size = 4
_b$ = -8						; size = 4
_a$ = -4						; size = 4
_buf$ = 8						; size = 4
_in$ = 12						; size = 4
_MD5Transform PROC					; COMDAT

; 359  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 360  : 
; 361  :   UINT4 a = buf[0], b = buf[1], c = buf[2], d = buf[3];

  00006	6a 04		 push	 4
  00008	58		 pop	 eax
  00009	6b c0 00	 imul	 eax, eax, 0
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _buf$[ebp]
  0000f	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  00012	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  00015	6a 04		 push	 4
  00017	58		 pop	 eax
  00018	c1 e0 00	 shl	 eax, 0
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR _buf$[ebp]
  0001e	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  00021	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00024	6a 04		 push	 4
  00026	58		 pop	 eax
  00027	d1 e0		 shl	 eax, 1
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _buf$[ebp]
  0002c	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  0002f	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00032	6a 04		 push	 4
  00034	58		 pop	 eax
  00035	6b c0 03	 imul	 eax, eax, 3
  00038	8b 4d 08	 mov	 ecx, DWORD PTR _buf$[ebp]
  0003b	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  0003e	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax

; 362  : 
; 363  :  
; 364  : 
; 365  :   /* Round 1 */
; 366  : 
; 367  : #define S11 7
; 368  : 
; 369  : #define S12 12
; 370  : 
; 371  : #define S13 17
; 372  : 
; 373  : #define S14 22
; 374  : 
; 375  :   FF ( a, b, c, d, in[ 0], S11, 3614090360); /* 1 */

  00041	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00044	23 45 f4	 and	 eax, DWORD PTR _c$[ebp]
  00047	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  0004a	f7 d1		 not	 ecx
  0004c	23 4d f0	 and	 ecx, DWORD PTR _d$[ebp]
  0004f	0b c1		 or	 eax, ecx
  00051	6a 04		 push	 4
  00053	59		 pop	 ecx
  00054	6b c9 00	 imul	 ecx, ecx, 0
  00057	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  0005a	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00060	8d 84 01 78 a4
	6a d7		 lea	 eax, DWORD PTR [ecx+eax-680876936]
  00067	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  0006a	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  0006d	c1 e0 07	 shl	 eax, 7
  00070	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00073	c1 e9 19	 shr	 ecx, 25			; 00000019H
  00076	0b c1		 or	 eax, ecx
  00078	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  0007b	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  0007e	03 45 f8	 add	 eax, DWORD PTR _b$[ebp]
  00081	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax

; 376  : 
; 377  :   FF ( d, a, b, c, in[ 1], S12, 3905402710); /* 2 */

  00084	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00087	23 45 f8	 and	 eax, DWORD PTR _b$[ebp]
  0008a	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  0008d	f7 d1		 not	 ecx
  0008f	23 4d f4	 and	 ecx, DWORD PTR _c$[ebp]
  00092	0b c1		 or	 eax, ecx
  00094	6a 04		 push	 4
  00096	59		 pop	 ecx
  00097	c1 e1 00	 shl	 ecx, 0
  0009a	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  0009d	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  000a0	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  000a3	8d 84 01 56 b7
	c7 e8		 lea	 eax, DWORD PTR [ecx+eax-389564586]
  000aa	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  000ad	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  000b0	c1 e0 0c	 shl	 eax, 12			; 0000000cH
  000b3	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  000b6	c1 e9 14	 shr	 ecx, 20			; 00000014H
  000b9	0b c1		 or	 eax, ecx
  000bb	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  000be	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  000c1	03 45 fc	 add	 eax, DWORD PTR _a$[ebp]
  000c4	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax

; 378  : 
; 379  :   FF ( c, d, a, b, in[ 2], S13,  606105819); /* 3 */

  000c7	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  000ca	23 45 fc	 and	 eax, DWORD PTR _a$[ebp]
  000cd	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  000d0	f7 d1		 not	 ecx
  000d2	23 4d f8	 and	 ecx, DWORD PTR _b$[ebp]
  000d5	0b c1		 or	 eax, ecx
  000d7	6a 04		 push	 4
  000d9	59		 pop	 ecx
  000da	d1 e1		 shl	 ecx, 1
  000dc	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  000df	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  000e2	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  000e5	8d 84 01 db 70
	20 24		 lea	 eax, DWORD PTR [ecx+eax+606105819]
  000ec	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  000ef	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  000f2	c1 e0 11	 shl	 eax, 17			; 00000011H
  000f5	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  000f8	c1 e9 0f	 shr	 ecx, 15			; 0000000fH
  000fb	0b c1		 or	 eax, ecx
  000fd	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00100	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00103	03 45 f0	 add	 eax, DWORD PTR _d$[ebp]
  00106	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax

; 380  : 
; 381  :   FF ( b, c, d, a, in[ 3], S14, 3250441966); /* 4 */

  00109	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  0010c	23 45 f0	 and	 eax, DWORD PTR _d$[ebp]
  0010f	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00112	f7 d1		 not	 ecx
  00114	23 4d fc	 and	 ecx, DWORD PTR _a$[ebp]
  00117	0b c1		 or	 eax, ecx
  00119	6a 04		 push	 4
  0011b	59		 pop	 ecx
  0011c	6b c9 03	 imul	 ecx, ecx, 3
  0011f	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00122	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00125	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00128	8d 84 01 ee ce
	bd c1		 lea	 eax, DWORD PTR [ecx+eax-1044525330]
  0012f	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00132	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00135	c1 e0 16	 shl	 eax, 22			; 00000016H
  00138	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  0013b	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  0013e	0b c1		 or	 eax, ecx
  00140	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00143	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00146	03 45 f4	 add	 eax, DWORD PTR _c$[ebp]
  00149	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax

; 382  : 
; 383  :   FF ( a, b, c, d, in[ 4], S11, 4118548399); /* 5 */

  0014c	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  0014f	23 45 f4	 and	 eax, DWORD PTR _c$[ebp]
  00152	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00155	f7 d1		 not	 ecx
  00157	23 4d f0	 and	 ecx, DWORD PTR _d$[ebp]
  0015a	0b c1		 or	 eax, ecx
  0015c	6a 04		 push	 4
  0015e	59		 pop	 ecx
  0015f	c1 e1 02	 shl	 ecx, 2
  00162	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00165	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00168	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  0016b	8d 84 01 af 0f
	7c f5		 lea	 eax, DWORD PTR [ecx+eax-176418897]
  00172	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  00175	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00178	c1 e0 07	 shl	 eax, 7
  0017b	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  0017e	c1 e9 19	 shr	 ecx, 25			; 00000019H
  00181	0b c1		 or	 eax, ecx
  00183	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  00186	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00189	03 45 f8	 add	 eax, DWORD PTR _b$[ebp]
  0018c	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax

; 384  : 
; 385  :   FF ( d, a, b, c, in[ 5], S12, 1200080426); /* 6 */

  0018f	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00192	23 45 f8	 and	 eax, DWORD PTR _b$[ebp]
  00195	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00198	f7 d1		 not	 ecx
  0019a	23 4d f4	 and	 ecx, DWORD PTR _c$[ebp]
  0019d	0b c1		 or	 eax, ecx
  0019f	6a 04		 push	 4
  001a1	59		 pop	 ecx
  001a2	6b c9 05	 imul	 ecx, ecx, 5
  001a5	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  001a8	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  001ab	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  001ae	8d 84 01 2a c6
	87 47		 lea	 eax, DWORD PTR [ecx+eax+1200080426]
  001b5	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  001b8	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  001bb	c1 e0 0c	 shl	 eax, 12			; 0000000cH
  001be	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  001c1	c1 e9 14	 shr	 ecx, 20			; 00000014H
  001c4	0b c1		 or	 eax, ecx
  001c6	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  001c9	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  001cc	03 45 fc	 add	 eax, DWORD PTR _a$[ebp]
  001cf	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax

; 386  : 
; 387  :   FF ( c, d, a, b, in[ 6], S13, 2821735955); /* 7 */

  001d2	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  001d5	23 45 fc	 and	 eax, DWORD PTR _a$[ebp]
  001d8	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  001db	f7 d1		 not	 ecx
  001dd	23 4d f8	 and	 ecx, DWORD PTR _b$[ebp]
  001e0	0b c1		 or	 eax, ecx
  001e2	6a 04		 push	 4
  001e4	59		 pop	 ecx
  001e5	6b c9 06	 imul	 ecx, ecx, 6
  001e8	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  001eb	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  001ee	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  001f1	8d 84 01 13 46
	30 a8		 lea	 eax, DWORD PTR [ecx+eax-1473231341]
  001f8	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  001fb	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  001fe	c1 e0 11	 shl	 eax, 17			; 00000011H
  00201	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00204	c1 e9 0f	 shr	 ecx, 15			; 0000000fH
  00207	0b c1		 or	 eax, ecx
  00209	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  0020c	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  0020f	03 45 f0	 add	 eax, DWORD PTR _d$[ebp]
  00212	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax

; 388  : 
; 389  :   FF ( b, c, d, a, in[ 7], S14, 4249261313); /* 8 */

  00215	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00218	23 45 f0	 and	 eax, DWORD PTR _d$[ebp]
  0021b	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  0021e	f7 d1		 not	 ecx
  00220	23 4d fc	 and	 ecx, DWORD PTR _a$[ebp]
  00223	0b c1		 or	 eax, ecx
  00225	6a 04		 push	 4
  00227	59		 pop	 ecx
  00228	6b c9 07	 imul	 ecx, ecx, 7
  0022b	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  0022e	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00231	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00234	8d 84 01 01 95
	46 fd		 lea	 eax, DWORD PTR [ecx+eax-45705983]
  0023b	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  0023e	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00241	c1 e0 16	 shl	 eax, 22			; 00000016H
  00244	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00247	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  0024a	0b c1		 or	 eax, ecx
  0024c	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  0024f	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00252	03 45 f4	 add	 eax, DWORD PTR _c$[ebp]
  00255	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax

; 390  : 
; 391  :   FF ( a, b, c, d, in[ 8], S11, 1770035416); /* 9 */

  00258	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  0025b	23 45 f4	 and	 eax, DWORD PTR _c$[ebp]
  0025e	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00261	f7 d1		 not	 ecx
  00263	23 4d f0	 and	 ecx, DWORD PTR _d$[ebp]
  00266	0b c1		 or	 eax, ecx
  00268	6a 04		 push	 4
  0026a	59		 pop	 ecx
  0026b	c1 e1 03	 shl	 ecx, 3
  0026e	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00271	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00274	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00277	8d 84 01 d8 98
	80 69		 lea	 eax, DWORD PTR [ecx+eax+1770035416]
  0027e	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  00281	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00284	c1 e0 07	 shl	 eax, 7
  00287	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  0028a	c1 e9 19	 shr	 ecx, 25			; 00000019H
  0028d	0b c1		 or	 eax, ecx
  0028f	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  00292	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00295	03 45 f8	 add	 eax, DWORD PTR _b$[ebp]
  00298	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax

; 392  : 
; 393  :   FF ( d, a, b, c, in[ 9], S12, 2336552879); /* 10 */

  0029b	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  0029e	23 45 f8	 and	 eax, DWORD PTR _b$[ebp]
  002a1	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  002a4	f7 d1		 not	 ecx
  002a6	23 4d f4	 and	 ecx, DWORD PTR _c$[ebp]
  002a9	0b c1		 or	 eax, ecx
  002ab	6a 04		 push	 4
  002ad	59		 pop	 ecx
  002ae	6b c9 09	 imul	 ecx, ecx, 9
  002b1	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  002b4	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  002b7	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  002ba	8d 84 01 af f7
	44 8b		 lea	 eax, DWORD PTR [ecx+eax-1958414417]
  002c1	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  002c4	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  002c7	c1 e0 0c	 shl	 eax, 12			; 0000000cH
  002ca	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  002cd	c1 e9 14	 shr	 ecx, 20			; 00000014H
  002d0	0b c1		 or	 eax, ecx
  002d2	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  002d5	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  002d8	03 45 fc	 add	 eax, DWORD PTR _a$[ebp]
  002db	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax

; 394  : 
; 395  :   FF ( c, d, a, b, in[10], S13, 4294925233); /* 11 */

  002de	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  002e1	23 45 fc	 and	 eax, DWORD PTR _a$[ebp]
  002e4	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  002e7	f7 d1		 not	 ecx
  002e9	23 4d f8	 and	 ecx, DWORD PTR _b$[ebp]
  002ec	0b c1		 or	 eax, ecx
  002ee	6a 04		 push	 4
  002f0	59		 pop	 ecx
  002f1	6b c9 0a	 imul	 ecx, ecx, 10
  002f4	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  002f7	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  002fa	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  002fd	8d 84 01 b1 5b
	ff ff		 lea	 eax, DWORD PTR [ecx+eax-42063]
  00304	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00307	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  0030a	c1 e0 11	 shl	 eax, 17			; 00000011H
  0030d	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00310	c1 e9 0f	 shr	 ecx, 15			; 0000000fH
  00313	0b c1		 or	 eax, ecx
  00315	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00318	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  0031b	03 45 f0	 add	 eax, DWORD PTR _d$[ebp]
  0031e	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax

; 396  : 
; 397  :   FF ( b, c, d, a, in[11], S14, 2304563134); /* 12 */

  00321	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00324	23 45 f0	 and	 eax, DWORD PTR _d$[ebp]
  00327	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  0032a	f7 d1		 not	 ecx
  0032c	23 4d fc	 and	 ecx, DWORD PTR _a$[ebp]
  0032f	0b c1		 or	 eax, ecx
  00331	6a 04		 push	 4
  00333	59		 pop	 ecx
  00334	6b c9 0b	 imul	 ecx, ecx, 11
  00337	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  0033a	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  0033d	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00340	8d 84 01 be d7
	5c 89		 lea	 eax, DWORD PTR [ecx+eax-1990404162]
  00347	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  0034a	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  0034d	c1 e0 16	 shl	 eax, 22			; 00000016H
  00350	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00353	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  00356	0b c1		 or	 eax, ecx
  00358	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  0035b	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  0035e	03 45 f4	 add	 eax, DWORD PTR _c$[ebp]
  00361	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax

; 398  : 
; 399  :   FF ( a, b, c, d, in[12], S11, 1804603682); /* 13 */

  00364	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00367	23 45 f4	 and	 eax, DWORD PTR _c$[ebp]
  0036a	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  0036d	f7 d1		 not	 ecx
  0036f	23 4d f0	 and	 ecx, DWORD PTR _d$[ebp]
  00372	0b c1		 or	 eax, ecx
  00374	6a 04		 push	 4
  00376	59		 pop	 ecx
  00377	6b c9 0c	 imul	 ecx, ecx, 12
  0037a	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  0037d	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00380	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00383	8d 84 01 22 11
	90 6b		 lea	 eax, DWORD PTR [ecx+eax+1804603682]
  0038a	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  0038d	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00390	c1 e0 07	 shl	 eax, 7
  00393	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00396	c1 e9 19	 shr	 ecx, 25			; 00000019H
  00399	0b c1		 or	 eax, ecx
  0039b	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  0039e	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  003a1	03 45 f8	 add	 eax, DWORD PTR _b$[ebp]
  003a4	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax

; 400  : 
; 401  :   FF ( d, a, b, c, in[13], S12, 4254626195); /* 14 */

  003a7	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  003aa	23 45 f8	 and	 eax, DWORD PTR _b$[ebp]
  003ad	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  003b0	f7 d1		 not	 ecx
  003b2	23 4d f4	 and	 ecx, DWORD PTR _c$[ebp]
  003b5	0b c1		 or	 eax, ecx
  003b7	6a 04		 push	 4
  003b9	59		 pop	 ecx
  003ba	6b c9 0d	 imul	 ecx, ecx, 13
  003bd	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  003c0	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  003c3	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  003c6	8d 84 01 93 71
	98 fd		 lea	 eax, DWORD PTR [ecx+eax-40341101]
  003cd	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  003d0	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  003d3	c1 e0 0c	 shl	 eax, 12			; 0000000cH
  003d6	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  003d9	c1 e9 14	 shr	 ecx, 20			; 00000014H
  003dc	0b c1		 or	 eax, ecx
  003de	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  003e1	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  003e4	03 45 fc	 add	 eax, DWORD PTR _a$[ebp]
  003e7	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax

; 402  : 
; 403  :   FF ( c, d, a, b, in[14], S13, 2792965006); /* 15 */

  003ea	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  003ed	23 45 fc	 and	 eax, DWORD PTR _a$[ebp]
  003f0	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  003f3	f7 d1		 not	 ecx
  003f5	23 4d f8	 and	 ecx, DWORD PTR _b$[ebp]
  003f8	0b c1		 or	 eax, ecx
  003fa	6a 04		 push	 4
  003fc	59		 pop	 ecx
  003fd	6b c9 0e	 imul	 ecx, ecx, 14
  00400	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00403	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00406	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00409	8d 84 01 8e 43
	79 a6		 lea	 eax, DWORD PTR [ecx+eax-1502002290]
  00410	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00413	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00416	c1 e0 11	 shl	 eax, 17			; 00000011H
  00419	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  0041c	c1 e9 0f	 shr	 ecx, 15			; 0000000fH
  0041f	0b c1		 or	 eax, ecx
  00421	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00424	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00427	03 45 f0	 add	 eax, DWORD PTR _d$[ebp]
  0042a	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax

; 404  : 
; 405  :   FF ( b, c, d, a, in[15], S14, 1236535329); /* 16 */

  0042d	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00430	23 45 f0	 and	 eax, DWORD PTR _d$[ebp]
  00433	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00436	f7 d1		 not	 ecx
  00438	23 4d fc	 and	 ecx, DWORD PTR _a$[ebp]
  0043b	0b c1		 or	 eax, ecx
  0043d	6a 04		 push	 4
  0043f	59		 pop	 ecx
  00440	6b c9 0f	 imul	 ecx, ecx, 15
  00443	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00446	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00449	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  0044c	8d 84 01 21 08
	b4 49		 lea	 eax, DWORD PTR [ecx+eax+1236535329]
  00453	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00456	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00459	c1 e0 16	 shl	 eax, 22			; 00000016H
  0045c	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  0045f	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  00462	0b c1		 or	 eax, ecx
  00464	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00467	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  0046a	03 45 f4	 add	 eax, DWORD PTR _c$[ebp]
  0046d	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax

; 406  : 
; 407  :  
; 408  : 
; 409  :   /* Round 2 */
; 410  : 
; 411  : #define S21 5
; 412  : 
; 413  : #define S22 9
; 414  : 
; 415  : #define S23 14
; 416  : 
; 417  : #define S24 20
; 418  : 
; 419  :   GG ( a, b, c, d, in[ 1], S21, 4129170786); /* 17 */

  00470	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00473	23 45 f0	 and	 eax, DWORD PTR _d$[ebp]
  00476	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  00479	f7 d1		 not	 ecx
  0047b	23 4d f4	 and	 ecx, DWORD PTR _c$[ebp]
  0047e	0b c1		 or	 eax, ecx
  00480	6a 04		 push	 4
  00482	59		 pop	 ecx
  00483	c1 e1 00	 shl	 ecx, 0
  00486	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00489	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  0048c	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  0048f	8d 84 01 62 25
	1e f6		 lea	 eax, DWORD PTR [ecx+eax-165796510]
  00496	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  00499	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  0049c	c1 e0 05	 shl	 eax, 5
  0049f	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  004a2	c1 e9 1b	 shr	 ecx, 27			; 0000001bH
  004a5	0b c1		 or	 eax, ecx
  004a7	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  004aa	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  004ad	03 45 f8	 add	 eax, DWORD PTR _b$[ebp]
  004b0	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax

; 420  : 
; 421  :   GG ( d, a, b, c, in[ 6], S22, 3225465664); /* 18 */

  004b3	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  004b6	23 45 f4	 and	 eax, DWORD PTR _c$[ebp]
  004b9	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  004bc	f7 d1		 not	 ecx
  004be	23 4d f8	 and	 ecx, DWORD PTR _b$[ebp]
  004c1	0b c1		 or	 eax, ecx
  004c3	6a 04		 push	 4
  004c5	59		 pop	 ecx
  004c6	6b c9 06	 imul	 ecx, ecx, 6
  004c9	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  004cc	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  004cf	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  004d2	8d 84 01 40 b3
	40 c0		 lea	 eax, DWORD PTR [ecx+eax-1069501632]
  004d9	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  004dc	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  004df	c1 e0 09	 shl	 eax, 9
  004e2	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  004e5	c1 e9 17	 shr	 ecx, 23			; 00000017H
  004e8	0b c1		 or	 eax, ecx
  004ea	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  004ed	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  004f0	03 45 fc	 add	 eax, DWORD PTR _a$[ebp]
  004f3	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax

; 422  : 
; 423  :   GG ( c, d, a, b, in[11], S23,  643717713); /* 19 */

  004f6	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  004f9	23 45 f8	 and	 eax, DWORD PTR _b$[ebp]
  004fc	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  004ff	f7 d1		 not	 ecx
  00501	23 4d fc	 and	 ecx, DWORD PTR _a$[ebp]
  00504	0b c1		 or	 eax, ecx
  00506	6a 04		 push	 4
  00508	59		 pop	 ecx
  00509	6b c9 0b	 imul	 ecx, ecx, 11
  0050c	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  0050f	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00512	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00515	8d 84 01 51 5a
	5e 26		 lea	 eax, DWORD PTR [ecx+eax+643717713]
  0051c	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  0051f	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00522	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  00525	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00528	c1 e9 12	 shr	 ecx, 18			; 00000012H
  0052b	0b c1		 or	 eax, ecx
  0052d	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00530	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00533	03 45 f0	 add	 eax, DWORD PTR _d$[ebp]
  00536	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax

; 424  : 
; 425  :   GG ( b, c, d, a, in[ 0], S24, 3921069994); /* 20 */

  00539	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  0053c	23 45 fc	 and	 eax, DWORD PTR _a$[ebp]
  0053f	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00542	f7 d1		 not	 ecx
  00544	23 4d f0	 and	 ecx, DWORD PTR _d$[ebp]
  00547	0b c1		 or	 eax, ecx
  00549	6a 04		 push	 4
  0054b	59		 pop	 ecx
  0054c	6b c9 00	 imul	 ecx, ecx, 0
  0054f	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00552	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00555	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00558	8d 84 01 aa c7
	b6 e9		 lea	 eax, DWORD PTR [ecx+eax-373897302]
  0055f	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00562	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00565	c1 e0 14	 shl	 eax, 20			; 00000014H
  00568	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  0056b	c1 e9 0c	 shr	 ecx, 12			; 0000000cH
  0056e	0b c1		 or	 eax, ecx
  00570	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00573	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00576	03 45 f4	 add	 eax, DWORD PTR _c$[ebp]
  00579	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax

; 426  : 
; 427  :   GG ( a, b, c, d, in[ 5], S21, 3593408605); /* 21 */

  0057c	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  0057f	23 45 f0	 and	 eax, DWORD PTR _d$[ebp]
  00582	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  00585	f7 d1		 not	 ecx
  00587	23 4d f4	 and	 ecx, DWORD PTR _c$[ebp]
  0058a	0b c1		 or	 eax, ecx
  0058c	6a 04		 push	 4
  0058e	59		 pop	 ecx
  0058f	6b c9 05	 imul	 ecx, ecx, 5
  00592	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00595	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00598	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  0059b	8d 84 01 5d 10
	2f d6		 lea	 eax, DWORD PTR [ecx+eax-701558691]
  005a2	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  005a5	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  005a8	c1 e0 05	 shl	 eax, 5
  005ab	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  005ae	c1 e9 1b	 shr	 ecx, 27			; 0000001bH
  005b1	0b c1		 or	 eax, ecx
  005b3	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  005b6	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  005b9	03 45 f8	 add	 eax, DWORD PTR _b$[ebp]
  005bc	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax

; 428  : 
; 429  :   GG ( d, a, b, c, in[10], S22,   38016083); /* 22 */

  005bf	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  005c2	23 45 f4	 and	 eax, DWORD PTR _c$[ebp]
  005c5	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  005c8	f7 d1		 not	 ecx
  005ca	23 4d f8	 and	 ecx, DWORD PTR _b$[ebp]
  005cd	0b c1		 or	 eax, ecx
  005cf	6a 04		 push	 4
  005d1	59		 pop	 ecx
  005d2	6b c9 0a	 imul	 ecx, ecx, 10
  005d5	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  005d8	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  005db	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  005de	8d 84 01 53 14
	44 02		 lea	 eax, DWORD PTR [ecx+eax+38016083]
  005e5	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  005e8	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  005eb	c1 e0 09	 shl	 eax, 9
  005ee	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  005f1	c1 e9 17	 shr	 ecx, 23			; 00000017H
  005f4	0b c1		 or	 eax, ecx
  005f6	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  005f9	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  005fc	03 45 fc	 add	 eax, DWORD PTR _a$[ebp]
  005ff	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax

; 430  : 
; 431  :   GG ( c, d, a, b, in[15], S23, 3634488961); /* 23 */

  00602	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00605	23 45 f8	 and	 eax, DWORD PTR _b$[ebp]
  00608	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  0060b	f7 d1		 not	 ecx
  0060d	23 4d fc	 and	 ecx, DWORD PTR _a$[ebp]
  00610	0b c1		 or	 eax, ecx
  00612	6a 04		 push	 4
  00614	59		 pop	 ecx
  00615	6b c9 0f	 imul	 ecx, ecx, 15
  00618	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  0061b	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  0061e	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00621	8d 84 01 81 e6
	a1 d8		 lea	 eax, DWORD PTR [ecx+eax-660478335]
  00628	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  0062b	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  0062e	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  00631	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00634	c1 e9 12	 shr	 ecx, 18			; 00000012H
  00637	0b c1		 or	 eax, ecx
  00639	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  0063c	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  0063f	03 45 f0	 add	 eax, DWORD PTR _d$[ebp]
  00642	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax

; 432  : 
; 433  :   GG ( b, c, d, a, in[ 4], S24, 3889429448); /* 24 */

  00645	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00648	23 45 fc	 and	 eax, DWORD PTR _a$[ebp]
  0064b	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  0064e	f7 d1		 not	 ecx
  00650	23 4d f0	 and	 ecx, DWORD PTR _d$[ebp]
  00653	0b c1		 or	 eax, ecx
  00655	6a 04		 push	 4
  00657	59		 pop	 ecx
  00658	c1 e1 02	 shl	 ecx, 2
  0065b	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  0065e	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00661	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00664	8d 84 01 c8 fb
	d3 e7		 lea	 eax, DWORD PTR [ecx+eax-405537848]
  0066b	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  0066e	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00671	c1 e0 14	 shl	 eax, 20			; 00000014H
  00674	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00677	c1 e9 0c	 shr	 ecx, 12			; 0000000cH
  0067a	0b c1		 or	 eax, ecx
  0067c	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  0067f	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00682	03 45 f4	 add	 eax, DWORD PTR _c$[ebp]
  00685	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax

; 434  : 
; 435  :   GG ( a, b, c, d, in[ 9], S21,  568446438); /* 25 */

  00688	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  0068b	23 45 f0	 and	 eax, DWORD PTR _d$[ebp]
  0068e	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  00691	f7 d1		 not	 ecx
  00693	23 4d f4	 and	 ecx, DWORD PTR _c$[ebp]
  00696	0b c1		 or	 eax, ecx
  00698	6a 04		 push	 4
  0069a	59		 pop	 ecx
  0069b	6b c9 09	 imul	 ecx, ecx, 9
  0069e	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  006a1	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  006a4	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  006a7	8d 84 01 e6 cd
	e1 21		 lea	 eax, DWORD PTR [ecx+eax+568446438]
  006ae	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  006b1	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  006b4	c1 e0 05	 shl	 eax, 5
  006b7	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  006ba	c1 e9 1b	 shr	 ecx, 27			; 0000001bH
  006bd	0b c1		 or	 eax, ecx
  006bf	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  006c2	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  006c5	03 45 f8	 add	 eax, DWORD PTR _b$[ebp]
  006c8	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax

; 436  : 
; 437  :   GG ( d, a, b, c, in[14], S22, 3275163606); /* 26 */

  006cb	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  006ce	23 45 f4	 and	 eax, DWORD PTR _c$[ebp]
  006d1	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  006d4	f7 d1		 not	 ecx
  006d6	23 4d f8	 and	 ecx, DWORD PTR _b$[ebp]
  006d9	0b c1		 or	 eax, ecx
  006db	6a 04		 push	 4
  006dd	59		 pop	 ecx
  006de	6b c9 0e	 imul	 ecx, ecx, 14
  006e1	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  006e4	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  006e7	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  006ea	8d 84 01 d6 07
	37 c3		 lea	 eax, DWORD PTR [ecx+eax-1019803690]
  006f1	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  006f4	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  006f7	c1 e0 09	 shl	 eax, 9
  006fa	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  006fd	c1 e9 17	 shr	 ecx, 23			; 00000017H
  00700	0b c1		 or	 eax, ecx
  00702	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  00705	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00708	03 45 fc	 add	 eax, DWORD PTR _a$[ebp]
  0070b	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax

; 438  : 
; 439  :   GG ( c, d, a, b, in[ 3], S23, 4107603335); /* 27 */

  0070e	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00711	23 45 f8	 and	 eax, DWORD PTR _b$[ebp]
  00714	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00717	f7 d1		 not	 ecx
  00719	23 4d fc	 and	 ecx, DWORD PTR _a$[ebp]
  0071c	0b c1		 or	 eax, ecx
  0071e	6a 04		 push	 4
  00720	59		 pop	 ecx
  00721	6b c9 03	 imul	 ecx, ecx, 3
  00724	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00727	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  0072a	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  0072d	8d 84 01 87 0d
	d5 f4		 lea	 eax, DWORD PTR [ecx+eax-187363961]
  00734	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00737	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  0073a	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  0073d	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00740	c1 e9 12	 shr	 ecx, 18			; 00000012H
  00743	0b c1		 or	 eax, ecx
  00745	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00748	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  0074b	03 45 f0	 add	 eax, DWORD PTR _d$[ebp]
  0074e	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax

; 440  : 
; 441  :   GG ( b, c, d, a, in[ 8], S24, 1163531501); /* 28 */

  00751	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00754	23 45 fc	 and	 eax, DWORD PTR _a$[ebp]
  00757	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  0075a	f7 d1		 not	 ecx
  0075c	23 4d f0	 and	 ecx, DWORD PTR _d$[ebp]
  0075f	0b c1		 or	 eax, ecx
  00761	6a 04		 push	 4
  00763	59		 pop	 ecx
  00764	c1 e1 03	 shl	 ecx, 3
  00767	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  0076a	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  0076d	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00770	8d 84 01 ed 14
	5a 45		 lea	 eax, DWORD PTR [ecx+eax+1163531501]
  00777	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  0077a	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  0077d	c1 e0 14	 shl	 eax, 20			; 00000014H
  00780	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00783	c1 e9 0c	 shr	 ecx, 12			; 0000000cH
  00786	0b c1		 or	 eax, ecx
  00788	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  0078b	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  0078e	03 45 f4	 add	 eax, DWORD PTR _c$[ebp]
  00791	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax

; 442  : 
; 443  :   GG ( a, b, c, d, in[13], S21, 2850285829); /* 29 */

  00794	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00797	23 45 f0	 and	 eax, DWORD PTR _d$[ebp]
  0079a	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  0079d	f7 d1		 not	 ecx
  0079f	23 4d f4	 and	 ecx, DWORD PTR _c$[ebp]
  007a2	0b c1		 or	 eax, ecx
  007a4	6a 04		 push	 4
  007a6	59		 pop	 ecx
  007a7	6b c9 0d	 imul	 ecx, ecx, 13
  007aa	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  007ad	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  007b0	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  007b3	8d 84 01 05 e9
	e3 a9		 lea	 eax, DWORD PTR [ecx+eax-1444681467]
  007ba	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  007bd	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  007c0	c1 e0 05	 shl	 eax, 5
  007c3	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  007c6	c1 e9 1b	 shr	 ecx, 27			; 0000001bH
  007c9	0b c1		 or	 eax, ecx
  007cb	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  007ce	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  007d1	03 45 f8	 add	 eax, DWORD PTR _b$[ebp]
  007d4	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax

; 444  : 
; 445  :   GG ( d, a, b, c, in[ 2], S22, 4243563512); /* 30 */

  007d7	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  007da	23 45 f4	 and	 eax, DWORD PTR _c$[ebp]
  007dd	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  007e0	f7 d1		 not	 ecx
  007e2	23 4d f8	 and	 ecx, DWORD PTR _b$[ebp]
  007e5	0b c1		 or	 eax, ecx
  007e7	6a 04		 push	 4
  007e9	59		 pop	 ecx
  007ea	d1 e1		 shl	 ecx, 1
  007ec	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  007ef	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  007f2	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  007f5	8d 84 01 f8 a3
	ef fc		 lea	 eax, DWORD PTR [ecx+eax-51403784]
  007fc	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  007ff	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00802	c1 e0 09	 shl	 eax, 9
  00805	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  00808	c1 e9 17	 shr	 ecx, 23			; 00000017H
  0080b	0b c1		 or	 eax, ecx
  0080d	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  00810	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00813	03 45 fc	 add	 eax, DWORD PTR _a$[ebp]
  00816	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax

; 446  : 
; 447  :   GG ( c, d, a, b, in[ 7], S23, 1735328473); /* 31 */

  00819	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  0081c	23 45 f8	 and	 eax, DWORD PTR _b$[ebp]
  0081f	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00822	f7 d1		 not	 ecx
  00824	23 4d fc	 and	 ecx, DWORD PTR _a$[ebp]
  00827	0b c1		 or	 eax, ecx
  00829	6a 04		 push	 4
  0082b	59		 pop	 ecx
  0082c	6b c9 07	 imul	 ecx, ecx, 7
  0082f	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00832	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00835	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00838	8d 84 01 d9 02
	6f 67		 lea	 eax, DWORD PTR [ecx+eax+1735328473]
  0083f	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00842	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00845	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  00848	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  0084b	c1 e9 12	 shr	 ecx, 18			; 00000012H
  0084e	0b c1		 or	 eax, ecx
  00850	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00853	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00856	03 45 f0	 add	 eax, DWORD PTR _d$[ebp]
  00859	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax

; 448  : 
; 449  :   GG ( b, c, d, a, in[12], S24, 2368359562); /* 32 */

  0085c	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  0085f	23 45 fc	 and	 eax, DWORD PTR _a$[ebp]
  00862	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00865	f7 d1		 not	 ecx
  00867	23 4d f0	 and	 ecx, DWORD PTR _d$[ebp]
  0086a	0b c1		 or	 eax, ecx
  0086c	6a 04		 push	 4
  0086e	59		 pop	 ecx
  0086f	6b c9 0c	 imul	 ecx, ecx, 12
  00872	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00875	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00878	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  0087b	8d 84 01 8a 4c
	2a 8d		 lea	 eax, DWORD PTR [ecx+eax-1926607734]
  00882	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00885	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00888	c1 e0 14	 shl	 eax, 20			; 00000014H
  0088b	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  0088e	c1 e9 0c	 shr	 ecx, 12			; 0000000cH
  00891	0b c1		 or	 eax, ecx
  00893	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00896	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00899	03 45 f4	 add	 eax, DWORD PTR _c$[ebp]
  0089c	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax

; 450  : 
; 451  :  
; 452  : 
; 453  :   /* Round 3 */
; 454  : 
; 455  : #define S31 4
; 456  : 
; 457  : #define S32 11
; 458  : 
; 459  : #define S33 16
; 460  : 
; 461  : #define S34 23
; 462  : 
; 463  :   HH ( a, b, c, d, in[ 5], S31, 4294588738); /* 33 */

  0089f	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  008a2	33 45 f4	 xor	 eax, DWORD PTR _c$[ebp]
  008a5	33 45 f0	 xor	 eax, DWORD PTR _d$[ebp]
  008a8	6a 04		 push	 4
  008aa	59		 pop	 ecx
  008ab	6b c9 05	 imul	 ecx, ecx, 5
  008ae	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  008b1	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  008b4	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  008b7	8d 84 01 42 39
	fa ff		 lea	 eax, DWORD PTR [ecx+eax-378558]
  008be	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  008c1	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  008c4	c1 e0 04	 shl	 eax, 4
  008c7	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  008ca	c1 e9 1c	 shr	 ecx, 28			; 0000001cH
  008cd	0b c1		 or	 eax, ecx
  008cf	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  008d2	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  008d5	03 45 f8	 add	 eax, DWORD PTR _b$[ebp]
  008d8	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax

; 464  : 
; 465  :   HH ( d, a, b, c, in[ 8], S32, 2272392833); /* 34 */

  008db	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  008de	33 45 f8	 xor	 eax, DWORD PTR _b$[ebp]
  008e1	33 45 f4	 xor	 eax, DWORD PTR _c$[ebp]
  008e4	6a 04		 push	 4
  008e6	59		 pop	 ecx
  008e7	c1 e1 03	 shl	 ecx, 3
  008ea	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  008ed	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  008f0	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  008f3	8d 84 01 81 f6
	71 87		 lea	 eax, DWORD PTR [ecx+eax-2022574463]
  008fa	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  008fd	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00900	c1 e0 0b	 shl	 eax, 11			; 0000000bH
  00903	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  00906	c1 e9 15	 shr	 ecx, 21			; 00000015H
  00909	0b c1		 or	 eax, ecx
  0090b	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  0090e	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00911	03 45 fc	 add	 eax, DWORD PTR _a$[ebp]
  00914	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax

; 466  : 
; 467  :   HH ( c, d, a, b, in[11], S33, 1839030562); /* 35 */

  00917	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  0091a	33 45 fc	 xor	 eax, DWORD PTR _a$[ebp]
  0091d	33 45 f8	 xor	 eax, DWORD PTR _b$[ebp]
  00920	6a 04		 push	 4
  00922	59		 pop	 ecx
  00923	6b c9 0b	 imul	 ecx, ecx, 11
  00926	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00929	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  0092c	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  0092f	8d 84 01 22 61
	9d 6d		 lea	 eax, DWORD PTR [ecx+eax+1839030562]
  00936	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00939	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  0093c	c1 e0 10	 shl	 eax, 16			; 00000010H
  0093f	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00942	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00945	0b c1		 or	 eax, ecx
  00947	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  0094a	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  0094d	03 45 f0	 add	 eax, DWORD PTR _d$[ebp]
  00950	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax

; 468  : 
; 469  :   HH ( b, c, d, a, in[14], S34, 4259657740); /* 36 */

  00953	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00956	33 45 f0	 xor	 eax, DWORD PTR _d$[ebp]
  00959	33 45 fc	 xor	 eax, DWORD PTR _a$[ebp]
  0095c	6a 04		 push	 4
  0095e	59		 pop	 ecx
  0095f	6b c9 0e	 imul	 ecx, ecx, 14
  00962	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00965	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00968	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  0096b	8d 84 01 0c 38
	e5 fd		 lea	 eax, DWORD PTR [ecx+eax-35309556]
  00972	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00975	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00978	c1 e0 17	 shl	 eax, 23			; 00000017H
  0097b	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  0097e	c1 e9 09	 shr	 ecx, 9
  00981	0b c1		 or	 eax, ecx
  00983	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00986	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00989	03 45 f4	 add	 eax, DWORD PTR _c$[ebp]
  0098c	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax

; 470  : 
; 471  :   HH ( a, b, c, d, in[ 1], S31, 2763975236); /* 37 */

  0098f	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00992	33 45 f4	 xor	 eax, DWORD PTR _c$[ebp]
  00995	33 45 f0	 xor	 eax, DWORD PTR _d$[ebp]
  00998	6a 04		 push	 4
  0099a	59		 pop	 ecx
  0099b	c1 e1 00	 shl	 ecx, 0
  0099e	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  009a1	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  009a4	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  009a7	8d 84 01 44 ea
	be a4		 lea	 eax, DWORD PTR [ecx+eax-1530992060]
  009ae	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  009b1	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  009b4	c1 e0 04	 shl	 eax, 4
  009b7	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  009ba	c1 e9 1c	 shr	 ecx, 28			; 0000001cH
  009bd	0b c1		 or	 eax, ecx
  009bf	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  009c2	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  009c5	03 45 f8	 add	 eax, DWORD PTR _b$[ebp]
  009c8	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax

; 472  : 
; 473  :   HH ( d, a, b, c, in[ 4], S32, 1272893353); /* 38 */

  009cb	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  009ce	33 45 f8	 xor	 eax, DWORD PTR _b$[ebp]
  009d1	33 45 f4	 xor	 eax, DWORD PTR _c$[ebp]
  009d4	6a 04		 push	 4
  009d6	59		 pop	 ecx
  009d7	c1 e1 02	 shl	 ecx, 2
  009da	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  009dd	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  009e0	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  009e3	8d 84 01 a9 cf
	de 4b		 lea	 eax, DWORD PTR [ecx+eax+1272893353]
  009ea	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  009ed	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  009f0	c1 e0 0b	 shl	 eax, 11			; 0000000bH
  009f3	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  009f6	c1 e9 15	 shr	 ecx, 21			; 00000015H
  009f9	0b c1		 or	 eax, ecx
  009fb	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  009fe	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00a01	03 45 fc	 add	 eax, DWORD PTR _a$[ebp]
  00a04	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax

; 474  : 
; 475  :   HH ( c, d, a, b, in[ 7], S33, 4139469664); /* 39 */

  00a07	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00a0a	33 45 fc	 xor	 eax, DWORD PTR _a$[ebp]
  00a0d	33 45 f8	 xor	 eax, DWORD PTR _b$[ebp]
  00a10	6a 04		 push	 4
  00a12	59		 pop	 ecx
  00a13	6b c9 07	 imul	 ecx, ecx, 7
  00a16	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00a19	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00a1c	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00a1f	8d 84 01 60 4b
	bb f6		 lea	 eax, DWORD PTR [ecx+eax-155497632]
  00a26	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00a29	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00a2c	c1 e0 10	 shl	 eax, 16			; 00000010H
  00a2f	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00a32	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00a35	0b c1		 or	 eax, ecx
  00a37	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00a3a	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00a3d	03 45 f0	 add	 eax, DWORD PTR _d$[ebp]
  00a40	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax

; 476  : 
; 477  :   HH ( b, c, d, a, in[10], S34, 3200236656); /* 40 */

  00a43	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00a46	33 45 f0	 xor	 eax, DWORD PTR _d$[ebp]
  00a49	33 45 fc	 xor	 eax, DWORD PTR _a$[ebp]
  00a4c	6a 04		 push	 4
  00a4e	59		 pop	 ecx
  00a4f	6b c9 0a	 imul	 ecx, ecx, 10
  00a52	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00a55	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00a58	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00a5b	8d 84 01 70 bc
	bf be		 lea	 eax, DWORD PTR [ecx+eax-1094730640]
  00a62	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00a65	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00a68	c1 e0 17	 shl	 eax, 23			; 00000017H
  00a6b	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00a6e	c1 e9 09	 shr	 ecx, 9
  00a71	0b c1		 or	 eax, ecx
  00a73	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00a76	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00a79	03 45 f4	 add	 eax, DWORD PTR _c$[ebp]
  00a7c	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax

; 478  : 
; 479  :   HH ( a, b, c, d, in[13], S31,  681279174); /* 41 */

  00a7f	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00a82	33 45 f4	 xor	 eax, DWORD PTR _c$[ebp]
  00a85	33 45 f0	 xor	 eax, DWORD PTR _d$[ebp]
  00a88	6a 04		 push	 4
  00a8a	59		 pop	 ecx
  00a8b	6b c9 0d	 imul	 ecx, ecx, 13
  00a8e	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00a91	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00a94	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00a97	8d 84 01 c6 7e
	9b 28		 lea	 eax, DWORD PTR [ecx+eax+681279174]
  00a9e	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  00aa1	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00aa4	c1 e0 04	 shl	 eax, 4
  00aa7	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00aaa	c1 e9 1c	 shr	 ecx, 28			; 0000001cH
  00aad	0b c1		 or	 eax, ecx
  00aaf	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  00ab2	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00ab5	03 45 f8	 add	 eax, DWORD PTR _b$[ebp]
  00ab8	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax

; 480  : 
; 481  :   HH ( d, a, b, c, in[ 0], S32, 3936430074); /* 42 */

  00abb	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00abe	33 45 f8	 xor	 eax, DWORD PTR _b$[ebp]
  00ac1	33 45 f4	 xor	 eax, DWORD PTR _c$[ebp]
  00ac4	6a 04		 push	 4
  00ac6	59		 pop	 ecx
  00ac7	6b c9 00	 imul	 ecx, ecx, 0
  00aca	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00acd	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00ad0	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  00ad3	8d 84 01 fa 27
	a1 ea		 lea	 eax, DWORD PTR [ecx+eax-358537222]
  00ada	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  00add	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00ae0	c1 e0 0b	 shl	 eax, 11			; 0000000bH
  00ae3	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  00ae6	c1 e9 15	 shr	 ecx, 21			; 00000015H
  00ae9	0b c1		 or	 eax, ecx
  00aeb	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  00aee	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00af1	03 45 fc	 add	 eax, DWORD PTR _a$[ebp]
  00af4	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax

; 482  : 
; 483  :   HH ( c, d, a, b, in[ 3], S33, 3572445317); /* 43 */

  00af7	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00afa	33 45 fc	 xor	 eax, DWORD PTR _a$[ebp]
  00afd	33 45 f8	 xor	 eax, DWORD PTR _b$[ebp]
  00b00	6a 04		 push	 4
  00b02	59		 pop	 ecx
  00b03	6b c9 03	 imul	 ecx, ecx, 3
  00b06	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00b09	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00b0c	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00b0f	8d 84 01 85 30
	ef d4		 lea	 eax, DWORD PTR [ecx+eax-722521979]
  00b16	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00b19	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00b1c	c1 e0 10	 shl	 eax, 16			; 00000010H
  00b1f	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00b22	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00b25	0b c1		 or	 eax, ecx
  00b27	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00b2a	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00b2d	03 45 f0	 add	 eax, DWORD PTR _d$[ebp]
  00b30	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax

; 484  : 
; 485  :   HH ( b, c, d, a, in[ 6], S34,   76029189); /* 44 */

  00b33	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00b36	33 45 f0	 xor	 eax, DWORD PTR _d$[ebp]
  00b39	33 45 fc	 xor	 eax, DWORD PTR _a$[ebp]
  00b3c	6a 04		 push	 4
  00b3e	59		 pop	 ecx
  00b3f	6b c9 06	 imul	 ecx, ecx, 6
  00b42	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00b45	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00b48	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00b4b	8d 84 01 05 1d
	88 04		 lea	 eax, DWORD PTR [ecx+eax+76029189]
  00b52	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00b55	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00b58	c1 e0 17	 shl	 eax, 23			; 00000017H
  00b5b	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00b5e	c1 e9 09	 shr	 ecx, 9
  00b61	0b c1		 or	 eax, ecx
  00b63	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00b66	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00b69	03 45 f4	 add	 eax, DWORD PTR _c$[ebp]
  00b6c	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax

; 486  : 
; 487  :   HH ( a, b, c, d, in[ 9], S31, 3654602809); /* 45 */

  00b6f	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00b72	33 45 f4	 xor	 eax, DWORD PTR _c$[ebp]
  00b75	33 45 f0	 xor	 eax, DWORD PTR _d$[ebp]
  00b78	6a 04		 push	 4
  00b7a	59		 pop	 ecx
  00b7b	6b c9 09	 imul	 ecx, ecx, 9
  00b7e	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00b81	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00b84	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00b87	8d 84 01 39 d0
	d4 d9		 lea	 eax, DWORD PTR [ecx+eax-640364487]
  00b8e	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  00b91	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00b94	c1 e0 04	 shl	 eax, 4
  00b97	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00b9a	c1 e9 1c	 shr	 ecx, 28			; 0000001cH
  00b9d	0b c1		 or	 eax, ecx
  00b9f	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  00ba2	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00ba5	03 45 f8	 add	 eax, DWORD PTR _b$[ebp]
  00ba8	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax

; 488  : 
; 489  :   HH ( d, a, b, c, in[12], S32, 3873151461); /* 46 */

  00bab	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00bae	33 45 f8	 xor	 eax, DWORD PTR _b$[ebp]
  00bb1	33 45 f4	 xor	 eax, DWORD PTR _c$[ebp]
  00bb4	6a 04		 push	 4
  00bb6	59		 pop	 ecx
  00bb7	6b c9 0c	 imul	 ecx, ecx, 12
  00bba	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00bbd	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00bc0	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  00bc3	8d 84 01 e5 99
	db e6		 lea	 eax, DWORD PTR [ecx+eax-421815835]
  00bca	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  00bcd	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00bd0	c1 e0 0b	 shl	 eax, 11			; 0000000bH
  00bd3	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  00bd6	c1 e9 15	 shr	 ecx, 21			; 00000015H
  00bd9	0b c1		 or	 eax, ecx
  00bdb	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  00bde	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00be1	03 45 fc	 add	 eax, DWORD PTR _a$[ebp]
  00be4	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax

; 490  : 
; 491  :   HH ( c, d, a, b, in[15], S33,  530742520); /* 47 */

  00be7	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00bea	33 45 fc	 xor	 eax, DWORD PTR _a$[ebp]
  00bed	33 45 f8	 xor	 eax, DWORD PTR _b$[ebp]
  00bf0	6a 04		 push	 4
  00bf2	59		 pop	 ecx
  00bf3	6b c9 0f	 imul	 ecx, ecx, 15
  00bf6	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00bf9	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00bfc	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00bff	8d 84 01 f8 7c
	a2 1f		 lea	 eax, DWORD PTR [ecx+eax+530742520]
  00c06	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00c09	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00c0c	c1 e0 10	 shl	 eax, 16			; 00000010H
  00c0f	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00c12	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00c15	0b c1		 or	 eax, ecx
  00c17	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00c1a	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00c1d	03 45 f0	 add	 eax, DWORD PTR _d$[ebp]
  00c20	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax

; 492  : 
; 493  :   HH ( b, c, d, a, in[ 2], S34, 3299628645); /* 48 */

  00c23	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00c26	33 45 f0	 xor	 eax, DWORD PTR _d$[ebp]
  00c29	33 45 fc	 xor	 eax, DWORD PTR _a$[ebp]
  00c2c	6a 04		 push	 4
  00c2e	59		 pop	 ecx
  00c2f	d1 e1		 shl	 ecx, 1
  00c31	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00c34	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00c37	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00c3a	8d 84 01 65 56
	ac c4		 lea	 eax, DWORD PTR [ecx+eax-995338651]
  00c41	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00c44	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00c47	c1 e0 17	 shl	 eax, 23			; 00000017H
  00c4a	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00c4d	c1 e9 09	 shr	 ecx, 9
  00c50	0b c1		 or	 eax, ecx
  00c52	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00c55	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00c58	03 45 f4	 add	 eax, DWORD PTR _c$[ebp]
  00c5b	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax

; 494  : 
; 495  :  
; 496  : 
; 497  :   /* Round 4 */
; 498  : 
; 499  : #define S41 6
; 500  : 
; 501  : #define S42 10
; 502  : 
; 503  : #define S43 15
; 504  : 
; 505  : #define S44 21
; 506  : 
; 507  :   II ( a, b, c, d, in[ 0], S41, 4096336452); /* 49 */

  00c5e	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00c61	f7 d0		 not	 eax
  00c63	0b 45 f8	 or	 eax, DWORD PTR _b$[ebp]
  00c66	33 45 f4	 xor	 eax, DWORD PTR _c$[ebp]
  00c69	6a 04		 push	 4
  00c6b	59		 pop	 ecx
  00c6c	6b c9 00	 imul	 ecx, ecx, 0
  00c6f	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00c72	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00c75	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00c78	8d 84 01 44 22
	29 f4		 lea	 eax, DWORD PTR [ecx+eax-198630844]
  00c7f	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  00c82	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00c85	c1 e0 06	 shl	 eax, 6
  00c88	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00c8b	c1 e9 1a	 shr	 ecx, 26			; 0000001aH
  00c8e	0b c1		 or	 eax, ecx
  00c90	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  00c93	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00c96	03 45 f8	 add	 eax, DWORD PTR _b$[ebp]
  00c99	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax

; 508  : 
; 509  :   II ( d, a, b, c, in[ 7], S42, 1126891415); /* 50 */

  00c9c	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00c9f	f7 d0		 not	 eax
  00ca1	0b 45 fc	 or	 eax, DWORD PTR _a$[ebp]
  00ca4	33 45 f8	 xor	 eax, DWORD PTR _b$[ebp]
  00ca7	6a 04		 push	 4
  00ca9	59		 pop	 ecx
  00caa	6b c9 07	 imul	 ecx, ecx, 7
  00cad	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00cb0	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00cb3	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  00cb6	8d 84 01 97 ff
	2a 43		 lea	 eax, DWORD PTR [ecx+eax+1126891415]
  00cbd	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  00cc0	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00cc3	c1 e0 0a	 shl	 eax, 10			; 0000000aH
  00cc6	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  00cc9	c1 e9 16	 shr	 ecx, 22			; 00000016H
  00ccc	0b c1		 or	 eax, ecx
  00cce	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  00cd1	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00cd4	03 45 fc	 add	 eax, DWORD PTR _a$[ebp]
  00cd7	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax

; 510  : 
; 511  :   II ( c, d, a, b, in[14], S43, 2878612391); /* 51 */

  00cda	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00cdd	f7 d0		 not	 eax
  00cdf	0b 45 f0	 or	 eax, DWORD PTR _d$[ebp]
  00ce2	33 45 fc	 xor	 eax, DWORD PTR _a$[ebp]
  00ce5	6a 04		 push	 4
  00ce7	59		 pop	 ecx
  00ce8	6b c9 0e	 imul	 ecx, ecx, 14
  00ceb	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00cee	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00cf1	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00cf4	8d 84 01 a7 23
	94 ab		 lea	 eax, DWORD PTR [ecx+eax-1416354905]
  00cfb	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00cfe	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00d01	c1 e0 0f	 shl	 eax, 15			; 0000000fH
  00d04	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00d07	c1 e9 11	 shr	 ecx, 17			; 00000011H
  00d0a	0b c1		 or	 eax, ecx
  00d0c	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00d0f	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00d12	03 45 f0	 add	 eax, DWORD PTR _d$[ebp]
  00d15	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax

; 512  : 
; 513  :   II ( b, c, d, a, in[ 5], S44, 4237533241); /* 52 */

  00d18	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00d1b	f7 d0		 not	 eax
  00d1d	0b 45 f4	 or	 eax, DWORD PTR _c$[ebp]
  00d20	33 45 f0	 xor	 eax, DWORD PTR _d$[ebp]
  00d23	6a 04		 push	 4
  00d25	59		 pop	 ecx
  00d26	6b c9 05	 imul	 ecx, ecx, 5
  00d29	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00d2c	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00d2f	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00d32	8d 84 01 39 a0
	93 fc		 lea	 eax, DWORD PTR [ecx+eax-57434055]
  00d39	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00d3c	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00d3f	c1 e0 15	 shl	 eax, 21			; 00000015H
  00d42	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00d45	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  00d48	0b c1		 or	 eax, ecx
  00d4a	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00d4d	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00d50	03 45 f4	 add	 eax, DWORD PTR _c$[ebp]
  00d53	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax

; 514  : 
; 515  :   II ( a, b, c, d, in[12], S41, 1700485571); /* 53 */

  00d56	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00d59	f7 d0		 not	 eax
  00d5b	0b 45 f8	 or	 eax, DWORD PTR _b$[ebp]
  00d5e	33 45 f4	 xor	 eax, DWORD PTR _c$[ebp]
  00d61	6a 04		 push	 4
  00d63	59		 pop	 ecx
  00d64	6b c9 0c	 imul	 ecx, ecx, 12
  00d67	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00d6a	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00d6d	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00d70	8d 84 01 c3 59
	5b 65		 lea	 eax, DWORD PTR [ecx+eax+1700485571]
  00d77	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  00d7a	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00d7d	c1 e0 06	 shl	 eax, 6
  00d80	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00d83	c1 e9 1a	 shr	 ecx, 26			; 0000001aH
  00d86	0b c1		 or	 eax, ecx
  00d88	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  00d8b	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00d8e	03 45 f8	 add	 eax, DWORD PTR _b$[ebp]
  00d91	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax

; 516  : 
; 517  :   II ( d, a, b, c, in[ 3], S42, 2399980690); /* 54 */

  00d94	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00d97	f7 d0		 not	 eax
  00d99	0b 45 fc	 or	 eax, DWORD PTR _a$[ebp]
  00d9c	33 45 f8	 xor	 eax, DWORD PTR _b$[ebp]
  00d9f	6a 04		 push	 4
  00da1	59		 pop	 ecx
  00da2	6b c9 03	 imul	 ecx, ecx, 3
  00da5	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00da8	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00dab	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  00dae	8d 84 01 92 cc
	0c 8f		 lea	 eax, DWORD PTR [ecx+eax-1894986606]
  00db5	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  00db8	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00dbb	c1 e0 0a	 shl	 eax, 10			; 0000000aH
  00dbe	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  00dc1	c1 e9 16	 shr	 ecx, 22			; 00000016H
  00dc4	0b c1		 or	 eax, ecx
  00dc6	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  00dc9	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00dcc	03 45 fc	 add	 eax, DWORD PTR _a$[ebp]
  00dcf	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax

; 518  : 
; 519  :   II ( c, d, a, b, in[10], S43, 4293915773); /* 55 */

  00dd2	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00dd5	f7 d0		 not	 eax
  00dd7	0b 45 f0	 or	 eax, DWORD PTR _d$[ebp]
  00dda	33 45 fc	 xor	 eax, DWORD PTR _a$[ebp]
  00ddd	6a 04		 push	 4
  00ddf	59		 pop	 ecx
  00de0	6b c9 0a	 imul	 ecx, ecx, 10
  00de3	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00de6	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00de9	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00dec	8d 84 01 7d f4
	ef ff		 lea	 eax, DWORD PTR [ecx+eax-1051523]
  00df3	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00df6	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00df9	c1 e0 0f	 shl	 eax, 15			; 0000000fH
  00dfc	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00dff	c1 e9 11	 shr	 ecx, 17			; 00000011H
  00e02	0b c1		 or	 eax, ecx
  00e04	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00e07	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00e0a	03 45 f0	 add	 eax, DWORD PTR _d$[ebp]
  00e0d	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax

; 520  : 
; 521  :   II ( b, c, d, a, in[ 1], S44, 2240044497); /* 56 */

  00e10	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00e13	f7 d0		 not	 eax
  00e15	0b 45 f4	 or	 eax, DWORD PTR _c$[ebp]
  00e18	33 45 f0	 xor	 eax, DWORD PTR _d$[ebp]
  00e1b	6a 04		 push	 4
  00e1d	59		 pop	 ecx
  00e1e	c1 e1 00	 shl	 ecx, 0
  00e21	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00e24	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00e27	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00e2a	8d 84 01 d1 5d
	84 85		 lea	 eax, DWORD PTR [ecx+eax-2054922799]
  00e31	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00e34	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00e37	c1 e0 15	 shl	 eax, 21			; 00000015H
  00e3a	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00e3d	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  00e40	0b c1		 or	 eax, ecx
  00e42	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00e45	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00e48	03 45 f4	 add	 eax, DWORD PTR _c$[ebp]
  00e4b	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax

; 522  : 
; 523  :   II ( a, b, c, d, in[ 8], S41, 1873313359); /* 57 */

  00e4e	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00e51	f7 d0		 not	 eax
  00e53	0b 45 f8	 or	 eax, DWORD PTR _b$[ebp]
  00e56	33 45 f4	 xor	 eax, DWORD PTR _c$[ebp]
  00e59	6a 04		 push	 4
  00e5b	59		 pop	 ecx
  00e5c	c1 e1 03	 shl	 ecx, 3
  00e5f	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00e62	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00e65	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00e68	8d 84 01 4f 7e
	a8 6f		 lea	 eax, DWORD PTR [ecx+eax+1873313359]
  00e6f	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  00e72	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00e75	c1 e0 06	 shl	 eax, 6
  00e78	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00e7b	c1 e9 1a	 shr	 ecx, 26			; 0000001aH
  00e7e	0b c1		 or	 eax, ecx
  00e80	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  00e83	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00e86	03 45 f8	 add	 eax, DWORD PTR _b$[ebp]
  00e89	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax

; 524  : 
; 525  :   II ( d, a, b, c, in[15], S42, 4264355552); /* 58 */

  00e8c	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00e8f	f7 d0		 not	 eax
  00e91	0b 45 fc	 or	 eax, DWORD PTR _a$[ebp]
  00e94	33 45 f8	 xor	 eax, DWORD PTR _b$[ebp]
  00e97	6a 04		 push	 4
  00e99	59		 pop	 ecx
  00e9a	6b c9 0f	 imul	 ecx, ecx, 15
  00e9d	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00ea0	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00ea3	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  00ea6	8d 84 01 e0 e6
	2c fe		 lea	 eax, DWORD PTR [ecx+eax-30611744]
  00ead	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  00eb0	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00eb3	c1 e0 0a	 shl	 eax, 10			; 0000000aH
  00eb6	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  00eb9	c1 e9 16	 shr	 ecx, 22			; 00000016H
  00ebc	0b c1		 or	 eax, ecx
  00ebe	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  00ec1	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00ec4	03 45 fc	 add	 eax, DWORD PTR _a$[ebp]
  00ec7	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax

; 526  : 
; 527  :   II ( c, d, a, b, in[ 6], S43, 2734768916); /* 59 */

  00eca	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00ecd	f7 d0		 not	 eax
  00ecf	0b 45 f0	 or	 eax, DWORD PTR _d$[ebp]
  00ed2	33 45 fc	 xor	 eax, DWORD PTR _a$[ebp]
  00ed5	6a 04		 push	 4
  00ed7	59		 pop	 ecx
  00ed8	6b c9 06	 imul	 ecx, ecx, 6
  00edb	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00ede	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00ee1	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00ee4	8d 84 01 14 43
	01 a3		 lea	 eax, DWORD PTR [ecx+eax-1560198380]
  00eeb	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00eee	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00ef1	c1 e0 0f	 shl	 eax, 15			; 0000000fH
  00ef4	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00ef7	c1 e9 11	 shr	 ecx, 17			; 00000011H
  00efa	0b c1		 or	 eax, ecx
  00efc	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00eff	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00f02	03 45 f0	 add	 eax, DWORD PTR _d$[ebp]
  00f05	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax

; 528  : 
; 529  :   II ( b, c, d, a, in[13], S44, 1309151649); /* 60 */

  00f08	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00f0b	f7 d0		 not	 eax
  00f0d	0b 45 f4	 or	 eax, DWORD PTR _c$[ebp]
  00f10	33 45 f0	 xor	 eax, DWORD PTR _d$[ebp]
  00f13	6a 04		 push	 4
  00f15	59		 pop	 ecx
  00f16	6b c9 0d	 imul	 ecx, ecx, 13
  00f19	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00f1c	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00f1f	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00f22	8d 84 01 a1 11
	08 4e		 lea	 eax, DWORD PTR [ecx+eax+1309151649]
  00f29	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00f2c	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00f2f	c1 e0 15	 shl	 eax, 21			; 00000015H
  00f32	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  00f35	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  00f38	0b c1		 or	 eax, ecx
  00f3a	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  00f3d	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00f40	03 45 f4	 add	 eax, DWORD PTR _c$[ebp]
  00f43	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax

; 530  : 
; 531  :   II ( a, b, c, d, in[ 4], S41, 4149444226); /* 61 */

  00f46	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00f49	f7 d0		 not	 eax
  00f4b	0b 45 f8	 or	 eax, DWORD PTR _b$[ebp]
  00f4e	33 45 f4	 xor	 eax, DWORD PTR _c$[ebp]
  00f51	6a 04		 push	 4
  00f53	59		 pop	 ecx
  00f54	c1 e1 02	 shl	 ecx, 2
  00f57	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00f5a	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00f5d	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00f60	8d 84 01 82 7e
	53 f7		 lea	 eax, DWORD PTR [ecx+eax-145523070]
  00f67	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  00f6a	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00f6d	c1 e0 06	 shl	 eax, 6
  00f70	8b 4d fc	 mov	 ecx, DWORD PTR _a$[ebp]
  00f73	c1 e9 1a	 shr	 ecx, 26			; 0000001aH
  00f76	0b c1		 or	 eax, ecx
  00f78	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax
  00f7b	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  00f7e	03 45 f8	 add	 eax, DWORD PTR _b$[ebp]
  00f81	89 45 fc	 mov	 DWORD PTR _a$[ebp], eax

; 532  : 
; 533  :   II ( d, a, b, c, in[11], S42, 3174756917); /* 62 */

  00f84	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00f87	f7 d0		 not	 eax
  00f89	0b 45 fc	 or	 eax, DWORD PTR _a$[ebp]
  00f8c	33 45 f8	 xor	 eax, DWORD PTR _b$[ebp]
  00f8f	6a 04		 push	 4
  00f91	59		 pop	 ecx
  00f92	6b c9 0b	 imul	 ecx, ecx, 11
  00f95	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00f98	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00f9b	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  00f9e	8d 84 01 35 f2
	3a bd		 lea	 eax, DWORD PTR [ecx+eax-1120210379]
  00fa5	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  00fa8	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00fab	c1 e0 0a	 shl	 eax, 10			; 0000000aH
  00fae	8b 4d f0	 mov	 ecx, DWORD PTR _d$[ebp]
  00fb1	c1 e9 16	 shr	 ecx, 22			; 00000016H
  00fb4	0b c1		 or	 eax, ecx
  00fb6	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax
  00fb9	8b 45 f0	 mov	 eax, DWORD PTR _d$[ebp]
  00fbc	03 45 fc	 add	 eax, DWORD PTR _a$[ebp]
  00fbf	89 45 f0	 mov	 DWORD PTR _d$[ebp], eax

; 534  : 
; 535  :   II ( c, d, a, b, in[ 2], S43,  718787259); /* 63 */

  00fc2	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  00fc5	f7 d0		 not	 eax
  00fc7	0b 45 f0	 or	 eax, DWORD PTR _d$[ebp]
  00fca	33 45 fc	 xor	 eax, DWORD PTR _a$[ebp]
  00fcd	6a 04		 push	 4
  00fcf	59		 pop	 ecx
  00fd0	d1 e1		 shl	 ecx, 1
  00fd2	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  00fd5	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  00fd8	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00fdb	8d 84 01 bb d2
	d7 2a		 lea	 eax, DWORD PTR [ecx+eax+718787259]
  00fe2	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00fe5	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00fe8	c1 e0 0f	 shl	 eax, 15			; 0000000fH
  00feb	8b 4d f4	 mov	 ecx, DWORD PTR _c$[ebp]
  00fee	c1 e9 11	 shr	 ecx, 17			; 00000011H
  00ff1	0b c1		 or	 eax, ecx
  00ff3	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax
  00ff6	8b 45 f4	 mov	 eax, DWORD PTR _c$[ebp]
  00ff9	03 45 f0	 add	 eax, DWORD PTR _d$[ebp]
  00ffc	89 45 f4	 mov	 DWORD PTR _c$[ebp], eax

; 536  : 
; 537  :   II ( b, c, d, a, in[ 9], S44, 3951481745); /* 64 */

  00fff	8b 45 fc	 mov	 eax, DWORD PTR _a$[ebp]
  01002	f7 d0		 not	 eax
  01004	0b 45 f4	 or	 eax, DWORD PTR _c$[ebp]
  01007	33 45 f0	 xor	 eax, DWORD PTR _d$[ebp]
  0100a	6a 04		 push	 4
  0100c	59		 pop	 ecx
  0100d	6b c9 09	 imul	 ecx, ecx, 9
  01010	8b 55 0c	 mov	 edx, DWORD PTR _in$[ebp]
  01013	03 04 0a	 add	 eax, DWORD PTR [edx+ecx]
  01016	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  01019	8d 84 01 91 d3
	86 eb		 lea	 eax, DWORD PTR [ecx+eax-343485551]
  01020	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  01023	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  01026	c1 e0 15	 shl	 eax, 21			; 00000015H
  01029	8b 4d f8	 mov	 ecx, DWORD PTR _b$[ebp]
  0102c	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  0102f	0b c1		 or	 eax, ecx
  01031	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax
  01034	8b 45 f8	 mov	 eax, DWORD PTR _b$[ebp]
  01037	03 45 f4	 add	 eax, DWORD PTR _c$[ebp]
  0103a	89 45 f8	 mov	 DWORD PTR _b$[ebp], eax

; 538  : 
; 539  :  
; 540  : 
; 541  :   buf[0] += a;

  0103d	6a 04		 push	 4
  0103f	58		 pop	 eax
  01040	6b c0 00	 imul	 eax, eax, 0
  01043	8b 4d 08	 mov	 ecx, DWORD PTR _buf$[ebp]
  01046	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  01049	03 45 fc	 add	 eax, DWORD PTR _a$[ebp]
  0104c	6a 04		 push	 4
  0104e	59		 pop	 ecx
  0104f	6b c9 00	 imul	 ecx, ecx, 0
  01052	8b 55 08	 mov	 edx, DWORD PTR _buf$[ebp]
  01055	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 542  : 
; 543  :   buf[1] += b;

  01058	6a 04		 push	 4
  0105a	58		 pop	 eax
  0105b	c1 e0 00	 shl	 eax, 0
  0105e	8b 4d 08	 mov	 ecx, DWORD PTR _buf$[ebp]
  01061	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  01064	03 45 f8	 add	 eax, DWORD PTR _b$[ebp]
  01067	6a 04		 push	 4
  01069	59		 pop	 ecx
  0106a	c1 e1 00	 shl	 ecx, 0
  0106d	8b 55 08	 mov	 edx, DWORD PTR _buf$[ebp]
  01070	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 544  : 
; 545  :   buf[2] += c;

  01073	6a 04		 push	 4
  01075	58		 pop	 eax
  01076	d1 e0		 shl	 eax, 1
  01078	8b 4d 08	 mov	 ecx, DWORD PTR _buf$[ebp]
  0107b	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  0107e	03 45 f4	 add	 eax, DWORD PTR _c$[ebp]
  01081	6a 04		 push	 4
  01083	59		 pop	 ecx
  01084	d1 e1		 shl	 ecx, 1
  01086	8b 55 08	 mov	 edx, DWORD PTR _buf$[ebp]
  01089	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 546  : 
; 547  :   buf[3] += d;

  0108c	6a 04		 push	 4
  0108e	58		 pop	 eax
  0108f	6b c0 03	 imul	 eax, eax, 3
  01092	8b 4d 08	 mov	 ecx, DWORD PTR _buf$[ebp]
  01095	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  01098	03 45 f0	 add	 eax, DWORD PTR _d$[ebp]
  0109b	6a 04		 push	 4
  0109d	59		 pop	 ecx
  0109e	6b c9 03	 imul	 ecx, ecx, 3
  010a1	8b 55 08	 mov	 edx, DWORD PTR _buf$[ebp]
  010a4	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 548  : 
; 549  : }

  010a7	c9		 leave
  010a8	c3		 ret	 0
_MD5Transform ENDP
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterPack\md5.c
;	COMDAT _MD5Final
_TEXT	SEGMENT
_padLen$ = -88						; size = 4
tv82 = -84						; size = 4
_mdi$ = -80						; size = 4
_i$ = -76						; size = 4
_ii$ = -72						; size = 4
_in$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_mdContext$ = 8						; size = 4
_MD5Final PROC						; COMDAT

; 271  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 272  : 
; 273  :   UINT4 in[16];
; 274  : 
; 275  :   int mdi;
; 276  : 
; 277  :   unsigned int i, ii;
; 278  : 
; 279  :   unsigned int padLen;
; 280  : 
; 281  :  
; 282  : 
; 283  :   /* save number of bits */
; 284  : 
; 285  :   in[14] = mdContext->i[0];

  00010	6a 04		 push	 4
  00012	58		 pop	 eax
  00013	6b c0 00	 imul	 eax, eax, 0
  00016	6a 04		 push	 4
  00018	59		 pop	 ecx
  00019	6b c9 0e	 imul	 ecx, ecx, 14
  0001c	8b 55 08	 mov	 edx, DWORD PTR _mdContext$[ebp]
  0001f	8b 04 02	 mov	 eax, DWORD PTR [edx+eax]
  00022	89 44 0d bc	 mov	 DWORD PTR _in$[ebp+ecx], eax

; 286  : 
; 287  :   in[15] = mdContext->i[1];

  00026	6a 04		 push	 4
  00028	58		 pop	 eax
  00029	c1 e0 00	 shl	 eax, 0
  0002c	6a 04		 push	 4
  0002e	59		 pop	 ecx
  0002f	6b c9 0f	 imul	 ecx, ecx, 15
  00032	8b 55 08	 mov	 edx, DWORD PTR _mdContext$[ebp]
  00035	8b 04 02	 mov	 eax, DWORD PTR [edx+eax]
  00038	89 44 0d bc	 mov	 DWORD PTR _in$[ebp+ecx], eax

; 288  : 
; 289  :  
; 290  : 
; 291  :   /* compute number of bytes mod 64 */
; 292  : 
; 293  :   mdi = (int)((mdContext->i[0] >> 3) & 0x3F);

  0003c	6a 04		 push	 4
  0003e	58		 pop	 eax
  0003f	6b c0 00	 imul	 eax, eax, 0
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  00045	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  00048	c1 e8 03	 shr	 eax, 3
  0004b	83 e0 3f	 and	 eax, 63			; 0000003fH
  0004e	89 45 b0	 mov	 DWORD PTR _mdi$[ebp], eax

; 294  : 
; 295  :  
; 296  : 
; 297  :   /* pad out to 56 mod 64 */
; 298  : 
; 299  :   padLen = (mdi < 56) ? (56 - mdi) : (120 - mdi);

  00051	83 7d b0 38	 cmp	 DWORD PTR _mdi$[ebp], 56 ; 00000038H
  00055	7d 0b		 jge	 SHORT $LN9@MD5Final
  00057	6a 38		 push	 56			; 00000038H
  00059	58		 pop	 eax
  0005a	2b 45 b0	 sub	 eax, DWORD PTR _mdi$[ebp]
  0005d	89 45 ac	 mov	 DWORD PTR tv82[ebp], eax
  00060	eb 09		 jmp	 SHORT $LN10@MD5Final
$LN9@MD5Final:
  00062	6a 78		 push	 120			; 00000078H
  00064	58		 pop	 eax
  00065	2b 45 b0	 sub	 eax, DWORD PTR _mdi$[ebp]
  00068	89 45 ac	 mov	 DWORD PTR tv82[ebp], eax
$LN10@MD5Final:
  0006b	8b 45 ac	 mov	 eax, DWORD PTR tv82[ebp]
  0006e	89 45 a8	 mov	 DWORD PTR _padLen$[ebp], eax

; 300  : 
; 301  :   MD5Update (mdContext, PADDING, padLen);

  00071	ff 75 a8	 push	 DWORD PTR _padLen$[ebp]
  00074	68 00 00 00 00	 push	 OFFSET _PADDING
  00079	ff 75 08	 push	 DWORD PTR _mdContext$[ebp]
  0007c	e8 00 00 00 00	 call	 _MD5Update
  00081	83 c4 0c	 add	 esp, 12			; 0000000cH

; 302  : 
; 303  :  
; 304  : 
; 305  :   /* append length in bits and transform */
; 306  : 
; 307  :   for (i = 0, ii = 0; i < 14; i++, ii += 4)

  00084	83 65 b4 00	 and	 DWORD PTR _i$[ebp], 0
  00088	83 65 b8 00	 and	 DWORD PTR _ii$[ebp], 0
  0008c	eb 10		 jmp	 SHORT $LN4@MD5Final
$LN2@MD5Final:
  0008e	8b 45 b4	 mov	 eax, DWORD PTR _i$[ebp]
  00091	40		 inc	 eax
  00092	89 45 b4	 mov	 DWORD PTR _i$[ebp], eax
  00095	8b 45 b8	 mov	 eax, DWORD PTR _ii$[ebp]
  00098	83 c0 04	 add	 eax, 4
  0009b	89 45 b8	 mov	 DWORD PTR _ii$[ebp], eax
$LN4@MD5Final:
  0009e	83 7d b4 0e	 cmp	 DWORD PTR _i$[ebp], 14	; 0000000eH
  000a2	73 40		 jae	 SHORT $LN3@MD5Final

; 308  : 
; 309  :     in[i] = (((UINT4)mdContext->in[ii+3]) << 24) |

  000a4	8b 45 08	 mov	 eax, DWORD PTR _mdContext$[ebp]
  000a7	03 45 b8	 add	 eax, DWORD PTR _ii$[ebp]
  000aa	0f b6 40 1b	 movzx	 eax, BYTE PTR [eax+27]
  000ae	c1 e0 18	 shl	 eax, 24			; 00000018H
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  000b4	03 4d b8	 add	 ecx, DWORD PTR _ii$[ebp]
  000b7	0f b6 49 1a	 movzx	 ecx, BYTE PTR [ecx+26]
  000bb	c1 e1 10	 shl	 ecx, 16			; 00000010H
  000be	0b c1		 or	 eax, ecx
  000c0	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  000c3	03 4d b8	 add	 ecx, DWORD PTR _ii$[ebp]
  000c6	0f b6 49 19	 movzx	 ecx, BYTE PTR [ecx+25]
  000ca	c1 e1 08	 shl	 ecx, 8
  000cd	0b c1		 or	 eax, ecx
  000cf	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  000d2	03 4d b8	 add	 ecx, DWORD PTR _ii$[ebp]
  000d5	0f b6 49 18	 movzx	 ecx, BYTE PTR [ecx+24]
  000d9	0b c1		 or	 eax, ecx
  000db	8b 4d b4	 mov	 ecx, DWORD PTR _i$[ebp]
  000de	89 44 8d bc	 mov	 DWORD PTR _in$[ebp+ecx*4], eax
  000e2	eb aa		 jmp	 SHORT $LN2@MD5Final
$LN3@MD5Final:

; 310  : 
; 311  :          (((UINT4)mdContext->in[ii+2]) << 16) |
; 312  : 
; 313  :          (((UINT4)mdContext->in[ii+1]) << 8) |
; 314  : 
; 315  :          ((UINT4)mdContext->in[ii]);
; 316  : 
; 317  :   MD5Transform (mdContext->buf, in);

  000e4	8d 45 bc	 lea	 eax, DWORD PTR _in$[ebp]
  000e7	50		 push	 eax
  000e8	8b 45 08	 mov	 eax, DWORD PTR _mdContext$[ebp]
  000eb	83 c0 08	 add	 eax, 8
  000ee	50		 push	 eax
  000ef	e8 00 00 00 00	 call	 _MD5Transform
  000f4	59		 pop	 ecx
  000f5	59		 pop	 ecx

; 318  : 
; 319  :  
; 320  : 
; 321  :   /* store buffer in digest */
; 322  : 
; 323  :   for (i = 0, ii = 0; i < 4; i++, ii += 4) {

  000f6	83 65 b4 00	 and	 DWORD PTR _i$[ebp], 0
  000fa	83 65 b8 00	 and	 DWORD PTR _ii$[ebp], 0
  000fe	eb 10		 jmp	 SHORT $LN7@MD5Final
$LN5@MD5Final:
  00100	8b 45 b4	 mov	 eax, DWORD PTR _i$[ebp]
  00103	40		 inc	 eax
  00104	89 45 b4	 mov	 DWORD PTR _i$[ebp], eax
  00107	8b 45 b8	 mov	 eax, DWORD PTR _ii$[ebp]
  0010a	83 c0 04	 add	 eax, 4
  0010d	89 45 b8	 mov	 DWORD PTR _ii$[ebp], eax
$LN7@MD5Final:
  00110	83 7d b4 04	 cmp	 DWORD PTR _i$[ebp], 4
  00114	73 6e		 jae	 SHORT $LN1@MD5Final

; 324  : 
; 325  :     mdContext->digest[ii] = (unsigned char)(mdContext->buf[i] & 0xFF);

  00116	8b 45 b4	 mov	 eax, DWORD PTR _i$[ebp]
  00119	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  0011c	8b 44 81 08	 mov	 eax, DWORD PTR [ecx+eax*4+8]
  00120	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00125	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  00128	03 4d b8	 add	 ecx, DWORD PTR _ii$[ebp]
  0012b	88 41 58	 mov	 BYTE PTR [ecx+88], al

; 326  : 
; 327  :     mdContext->digest[ii+1] =

  0012e	8b 45 b4	 mov	 eax, DWORD PTR _i$[ebp]
  00131	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  00134	8b 44 81 08	 mov	 eax, DWORD PTR [ecx+eax*4+8]
  00138	c1 e8 08	 shr	 eax, 8
  0013b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00140	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  00143	03 4d b8	 add	 ecx, DWORD PTR _ii$[ebp]
  00146	88 41 59	 mov	 BYTE PTR [ecx+89], al

; 328  : 
; 329  :       (unsigned char)((mdContext->buf[i] >> 8) & 0xFF);
; 330  : 
; 331  :     mdContext->digest[ii+2] =

  00149	8b 45 b4	 mov	 eax, DWORD PTR _i$[ebp]
  0014c	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  0014f	8b 44 81 08	 mov	 eax, DWORD PTR [ecx+eax*4+8]
  00153	c1 e8 10	 shr	 eax, 16			; 00000010H
  00156	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0015b	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  0015e	03 4d b8	 add	 ecx, DWORD PTR _ii$[ebp]
  00161	88 41 5a	 mov	 BYTE PTR [ecx+90], al

; 332  : 
; 333  :       (unsigned char)((mdContext->buf[i] >> 16) & 0xFF);
; 334  : 
; 335  :     mdContext->digest[ii+3] =

  00164	8b 45 b4	 mov	 eax, DWORD PTR _i$[ebp]
  00167	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  0016a	8b 44 81 08	 mov	 eax, DWORD PTR [ecx+eax*4+8]
  0016e	c1 e8 18	 shr	 eax, 24			; 00000018H
  00171	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00176	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  00179	03 4d b8	 add	 ecx, DWORD PTR _ii$[ebp]
  0017c	88 41 5b	 mov	 BYTE PTR [ecx+91], al

; 336  : 
; 337  :       (unsigned char)((mdContext->buf[i] >> 24) & 0xFF);
; 338  : 
; 339  :   }

  0017f	e9 7c ff ff ff	 jmp	 $LN5@MD5Final
$LN1@MD5Final:

; 340  : 
; 341  : }

  00184	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00187	33 cd		 xor	 ecx, ebp
  00189	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0018e	c9		 leave
  0018f	c3		 ret	 0
_MD5Final ENDP
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterPack\md5.c
;	COMDAT _MD5Update
_TEXT	SEGMENT
tv138 = -84						; size = 4
_i$ = -80						; size = 4
_mdi$ = -76						; size = 4
_ii$ = -72						; size = 4
_in$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_mdContext$ = 8						; size = 4
_inBuf$ = 12						; size = 4
_inLen$ = 16						; size = 4
_MD5Update PROC						; COMDAT

; 182  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 183  : 
; 184  :   UINT4 in[16];
; 185  : 
; 186  :   int mdi;
; 187  : 
; 188  :   unsigned int i, ii;
; 189  : 
; 190  :  
; 191  : 
; 192  :   /* compute number of bytes mod 64 */
; 193  : 
; 194  :   mdi = (int)((mdContext->i[0] >> 3) & 0x3F);

  00010	6a 04		 push	 4
  00012	58		 pop	 eax
  00013	6b c0 00	 imul	 eax, eax, 0
  00016	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  00019	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  0001c	c1 e8 03	 shr	 eax, 3
  0001f	83 e0 3f	 and	 eax, 63			; 0000003fH
  00022	89 45 b4	 mov	 DWORD PTR _mdi$[ebp], eax

; 195  : 
; 196  :  
; 197  : 
; 198  :   /* update number of bits */
; 199  : 
; 200  :   if ((mdContext->i[0] + ((UINT4)inLen << 3)) < mdContext->i[0])

  00025	6a 04		 push	 4
  00027	58		 pop	 eax
  00028	6b c0 00	 imul	 eax, eax, 0
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  0002e	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  00031	8b 4d 10	 mov	 ecx, DWORD PTR _inLen$[ebp]
  00034	8d 04 c8	 lea	 eax, DWORD PTR [eax+ecx*8]
  00037	6a 04		 push	 4
  00039	59		 pop	 ecx
  0003a	6b c9 00	 imul	 ecx, ecx, 0
  0003d	8b 55 08	 mov	 edx, DWORD PTR _mdContext$[ebp]
  00040	3b 04 0a	 cmp	 eax, DWORD PTR [edx+ecx]
  00043	73 19		 jae	 SHORT $LN7@MD5Update

; 201  : 
; 202  :     mdContext->i[1]++;

  00045	6a 04		 push	 4
  00047	58		 pop	 eax
  00048	c1 e0 00	 shl	 eax, 0
  0004b	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  0004e	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  00051	40		 inc	 eax
  00052	6a 04		 push	 4
  00054	59		 pop	 ecx
  00055	c1 e1 00	 shl	 ecx, 0
  00058	8b 55 08	 mov	 edx, DWORD PTR _mdContext$[ebp]
  0005b	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax
$LN7@MD5Update:

; 203  : 
; 204  :   mdContext->i[0] += ((UINT4)inLen << 3);

  0005e	6a 04		 push	 4
  00060	58		 pop	 eax
  00061	6b c0 00	 imul	 eax, eax, 0
  00064	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  00067	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  0006a	8b 4d 10	 mov	 ecx, DWORD PTR _inLen$[ebp]
  0006d	8d 04 c8	 lea	 eax, DWORD PTR [eax+ecx*8]
  00070	6a 04		 push	 4
  00072	59		 pop	 ecx
  00073	6b c9 00	 imul	 ecx, ecx, 0
  00076	8b 55 08	 mov	 edx, DWORD PTR _mdContext$[ebp]
  00079	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 205  : 
; 206  :   mdContext->i[1] += ((UINT4)inLen >> 29);

  0007c	6a 04		 push	 4
  0007e	58		 pop	 eax
  0007f	c1 e0 00	 shl	 eax, 0
  00082	8b 4d 10	 mov	 ecx, DWORD PTR _inLen$[ebp]
  00085	c1 e9 1d	 shr	 ecx, 29			; 0000001dH
  00088	8b 55 08	 mov	 edx, DWORD PTR _mdContext$[ebp]
  0008b	03 0c 02	 add	 ecx, DWORD PTR [edx+eax]
  0008e	6a 04		 push	 4
  00090	58		 pop	 eax
  00091	c1 e0 00	 shl	 eax, 0
  00094	8b 55 08	 mov	 edx, DWORD PTR _mdContext$[ebp]
  00097	89 0c 02	 mov	 DWORD PTR [edx+eax], ecx
$LN2@MD5Update:

; 207  : 
; 208  :  
; 209  : 
; 210  : #ifdef  LITTLE_ENDIAN
; 211  : 
; 212  :   /* Speedup for little-endian machines suggested in MD5 report --P Karn */
; 213  : 
; 214  :      if(mdi == 0 && ((int)inBuf & 3) == 0){
; 215  : 
; 216  :           while(inLen >= 64){
; 217  : 
; 218  :                MD5Transform(mdContext->buf,(UINT4 *)inBuf);
; 219  : 
; 220  :                inLen -= 64;
; 221  : 
; 222  :                inBuf += 64;
; 223  : 
; 224  :           }               
; 225  : 
; 226  :      }
; 227  : 
; 228  : #endif  /* LITTLE_ENDIAN */
; 229  : 
; 230  :   while (inLen--) {

  0009a	8b 45 10	 mov	 eax, DWORD PTR _inLen$[ebp]
  0009d	89 45 ac	 mov	 DWORD PTR tv138[ebp], eax
  000a0	8b 45 10	 mov	 eax, DWORD PTR _inLen$[ebp]
  000a3	48		 dec	 eax
  000a4	89 45 10	 mov	 DWORD PTR _inLen$[ebp], eax
  000a7	83 7d ac 00	 cmp	 DWORD PTR tv138[ebp], 0
  000ab	0f 84 9d 00 00
	00		 je	 $LN1@MD5Update

; 231  : 
; 232  :     /* add new character to buffer, increment mdi */
; 233  : 
; 234  :     mdContext->in[mdi++] = *inBuf++;

  000b1	8b 45 08	 mov	 eax, DWORD PTR _mdContext$[ebp]
  000b4	03 45 b4	 add	 eax, DWORD PTR _mdi$[ebp]
  000b7	8b 4d 0c	 mov	 ecx, DWORD PTR _inBuf$[ebp]
  000ba	8a 09		 mov	 cl, BYTE PTR [ecx]
  000bc	88 48 18	 mov	 BYTE PTR [eax+24], cl
  000bf	8b 45 b4	 mov	 eax, DWORD PTR _mdi$[ebp]
  000c2	40		 inc	 eax
  000c3	89 45 b4	 mov	 DWORD PTR _mdi$[ebp], eax
  000c6	8b 45 0c	 mov	 eax, DWORD PTR _inBuf$[ebp]
  000c9	40		 inc	 eax
  000ca	89 45 0c	 mov	 DWORD PTR _inBuf$[ebp], eax

; 235  : 
; 236  :  
; 237  : 
; 238  :     /* transform if necessary */
; 239  : 
; 240  :     if (mdi == 0x40) {

  000cd	83 7d b4 40	 cmp	 DWORD PTR _mdi$[ebp], 64 ; 00000040H
  000d1	75 76		 jne	 SHORT $LN8@MD5Update

; 241  : 
; 242  :       for (i = 0, ii = 0; i < 16; i++, ii += 4)

  000d3	83 65 b0 00	 and	 DWORD PTR _i$[ebp], 0
  000d7	83 65 b8 00	 and	 DWORD PTR _ii$[ebp], 0
  000db	eb 10		 jmp	 SHORT $LN6@MD5Update
$LN4@MD5Update:
  000dd	8b 45 b0	 mov	 eax, DWORD PTR _i$[ebp]
  000e0	40		 inc	 eax
  000e1	89 45 b0	 mov	 DWORD PTR _i$[ebp], eax
  000e4	8b 45 b8	 mov	 eax, DWORD PTR _ii$[ebp]
  000e7	83 c0 04	 add	 eax, 4
  000ea	89 45 b8	 mov	 DWORD PTR _ii$[ebp], eax
$LN6@MD5Update:
  000ed	83 7d b0 10	 cmp	 DWORD PTR _i$[ebp], 16	; 00000010H
  000f1	73 40		 jae	 SHORT $LN5@MD5Update

; 243  : 
; 244  :      in[i] = (((UINT4)mdContext->in[ii+3]) << 24) |

  000f3	8b 45 08	 mov	 eax, DWORD PTR _mdContext$[ebp]
  000f6	03 45 b8	 add	 eax, DWORD PTR _ii$[ebp]
  000f9	0f b6 40 1b	 movzx	 eax, BYTE PTR [eax+27]
  000fd	c1 e0 18	 shl	 eax, 24			; 00000018H
  00100	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  00103	03 4d b8	 add	 ecx, DWORD PTR _ii$[ebp]
  00106	0f b6 49 1a	 movzx	 ecx, BYTE PTR [ecx+26]
  0010a	c1 e1 10	 shl	 ecx, 16			; 00000010H
  0010d	0b c1		 or	 eax, ecx
  0010f	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  00112	03 4d b8	 add	 ecx, DWORD PTR _ii$[ebp]
  00115	0f b6 49 19	 movzx	 ecx, BYTE PTR [ecx+25]
  00119	c1 e1 08	 shl	 ecx, 8
  0011c	0b c1		 or	 eax, ecx
  0011e	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  00121	03 4d b8	 add	 ecx, DWORD PTR _ii$[ebp]
  00124	0f b6 49 18	 movzx	 ecx, BYTE PTR [ecx+24]
  00128	0b c1		 or	 eax, ecx
  0012a	8b 4d b0	 mov	 ecx, DWORD PTR _i$[ebp]
  0012d	89 44 8d bc	 mov	 DWORD PTR _in$[ebp+ecx*4], eax
  00131	eb aa		 jmp	 SHORT $LN4@MD5Update
$LN5@MD5Update:

; 245  : 
; 246  :           (((UINT4)mdContext->in[ii+2]) << 16) |
; 247  : 
; 248  :           (((UINT4)mdContext->in[ii+1]) << 8) |
; 249  : 
; 250  :           ((UINT4)mdContext->in[ii]);
; 251  : 
; 252  :       MD5Transform (mdContext->buf, in);

  00133	8d 45 bc	 lea	 eax, DWORD PTR _in$[ebp]
  00136	50		 push	 eax
  00137	8b 45 08	 mov	 eax, DWORD PTR _mdContext$[ebp]
  0013a	83 c0 08	 add	 eax, 8
  0013d	50		 push	 eax
  0013e	e8 00 00 00 00	 call	 _MD5Transform
  00143	59		 pop	 ecx
  00144	59		 pop	 ecx

; 253  : 
; 254  :       mdi = 0;

  00145	83 65 b4 00	 and	 DWORD PTR _mdi$[ebp], 0
$LN8@MD5Update:

; 255  : 
; 256  :     }
; 257  : 
; 258  :   }

  00149	e9 4c ff ff ff	 jmp	 $LN2@MD5Update
$LN1@MD5Update:

; 259  : 
; 260  : }

  0014e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00151	33 cd		 xor	 ecx, ebp
  00153	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00158	c9		 leave
  00159	c3		 ret	 0
_MD5Update ENDP
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterPack\md5.c
;	COMDAT _MD5Init
_TEXT	SEGMENT
_mdContext$ = 8						; size = 4
_MD5Init PROC						; COMDAT

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 152  : 
; 153  :   mdContext->i[0] = mdContext->i[1] = (UINT4)0;

  00003	6a 04		 push	 4
  00005	58		 pop	 eax
  00006	c1 e0 00	 shl	 eax, 0
  00009	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  0000c	83 24 01 00	 and	 DWORD PTR [ecx+eax], 0
  00010	6a 04		 push	 4
  00012	58		 pop	 eax
  00013	6b c0 00	 imul	 eax, eax, 0
  00016	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  00019	83 24 01 00	 and	 DWORD PTR [ecx+eax], 0

; 154  : 
; 155  :  
; 156  : 
; 157  :   /* Load magic initialization constants.
; 158  : 
; 159  :    */
; 160  : 
; 161  :   mdContext->buf[0] = (UINT4)0x67452301;

  0001d	6a 04		 push	 4
  0001f	58		 pop	 eax
  00020	6b c0 00	 imul	 eax, eax, 0
  00023	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  00026	c7 44 01 08 01
	23 45 67	 mov	 DWORD PTR [ecx+eax+8], 1732584193 ; 67452301H

; 162  : 
; 163  :   mdContext->buf[1] = (UINT4)0xefcdab89;

  0002e	6a 04		 push	 4
  00030	58		 pop	 eax
  00031	c1 e0 00	 shl	 eax, 0
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  00037	c7 44 01 08 89
	ab cd ef	 mov	 DWORD PTR [ecx+eax+8], -271733879 ; efcdab89H

; 164  : 
; 165  :   mdContext->buf[2] = (UINT4)0x98badcfe;

  0003f	6a 04		 push	 4
  00041	58		 pop	 eax
  00042	d1 e0		 shl	 eax, 1
  00044	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  00047	c7 44 01 08 fe
	dc ba 98	 mov	 DWORD PTR [ecx+eax+8], -1732584194 ; 98badcfeH

; 166  : 
; 167  :   mdContext->buf[3] = (UINT4)0x10325476;

  0004f	6a 04		 push	 4
  00051	58		 pop	 eax
  00052	6b c0 03	 imul	 eax, eax, 3
  00055	8b 4d 08	 mov	 ecx, DWORD PTR _mdContext$[ebp]
  00058	c7 44 01 08 76
	54 32 10	 mov	 DWORD PTR [ecx+eax+8], 271733878 ; 10325476H

; 168  : 
; 169  : }

  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
_MD5Init ENDP
_TEXT	ENDS
END
