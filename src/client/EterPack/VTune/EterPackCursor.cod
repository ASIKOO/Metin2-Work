; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterPack\EterPackCursor.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0CEterPackCursor@@QAE@PAVCEterPack@@@Z	; CEterPackCursor::CEterPackCursor
PUBLIC	??1CEterPackCursor@@QAE@XZ			; CEterPackCursor::~CEterPackCursor
PUBLIC	?Open@CEterPackCursor@@QAE_NPBD@Z		; CEterPackCursor::Open
PUBLIC	?Close@CEterPackCursor@@QAEXXZ			; CEterPackCursor::Close
PUBLIC	?Seek@CEterPackCursor@@QAEXJ@Z			; CEterPackCursor::Seek
PUBLIC	?Read@CEterPackCursor@@QAE_NPAXJ@Z		; CEterPackCursor::Read
PUBLIC	?Size@CEterPackCursor@@QAEJXZ			; CEterPackCursor::Size
PUBLIC	?inlineConvertPackFilename@@YAXPAD@Z		; inlineConvertPackFilename
EXTRN	_tolower:PROC
EXTRN	_memcpy:PROC
EXTRN	_strncpy:PROC
EXTRN	?IsNull@CFileBase@@QAEHXZ:PROC			; CFileBase::IsNull
EXTRN	??0CMappedFile@@QAE@XZ:PROC			; CMappedFile::CMappedFile
EXTRN	??1CMappedFile@@UAE@XZ:PROC			; CMappedFile::~CMappedFile
EXTRN	?Destroy@CMappedFile@@QAEXXZ:PROC		; CMappedFile::Destroy
EXTRN	?Size@CMappedFile@@QAEKXZ:PROC			; CMappedFile::Size
EXTRN	?Get@CEterPack@@QAE_NAAVCMappedFile@@PBDPAPBX@Z:PROC ; CEterPack::Get
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CEterPackCursor@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterPack\Inline.h
;	COMDAT ?inlineConvertPackFilename@@YAXPAD@Z
_TEXT	SEGMENT
_p$ = -4						; size = 4
_name$ = 8						; size = 4
?inlineConvertPackFilename@@YAXPAD@Z PROC		; inlineConvertPackFilename, COMDAT

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 22   : 	char * p = name;

  00004	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00007	89 45 fc	 mov	 DWORD PTR _p$[ebp], eax
$LN2@inlineConv:

; 23   : 
; 24   : 	while (*p)

  0000a	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  0000d	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00010	85 c0		 test	 eax, eax
  00012	74 2e		 je	 SHORT $LN1@inlineConv

; 25   : 	{
; 26   : 		if (*p == '\\')

  00014	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00017	0f be 00	 movsx	 eax, BYTE PTR [eax]
  0001a	83 f8 5c	 cmp	 eax, 92			; 0000005cH
  0001d	75 08		 jne	 SHORT $LN4@inlineConv

; 27   : 			*p = '/';

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00022	c6 00 2f	 mov	 BYTE PTR [eax], 47	; 0000002fH
  00025	eb 12		 jmp	 SHORT $LN5@inlineConv
$LN4@inlineConv:

; 28   : 		else
; 29   : 			*p = (int) tolower(*p);

  00027	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  0002a	0f be 00	 movsx	 eax, BYTE PTR [eax]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 _tolower
  00033	59		 pop	 ecx
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00037	88 01		 mov	 BYTE PTR [ecx], al
$LN5@inlineConv:

; 30   : 		p++;

  00039	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  0003c	40		 inc	 eax
  0003d	89 45 fc	 mov	 DWORD PTR _p$[ebp], eax

; 31   : 	}

  00040	eb c8		 jmp	 SHORT $LN2@inlineConv
$LN1@inlineConv:

; 32   : }

  00042	c9		 leave
  00043	c3		 ret	 0
?inlineConvertPackFilename@@YAXPAD@Z ENDP		; inlineConvertPackFilename
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterPack\EterPackCursor.cpp
;	COMDAT ?Size@CEterPackCursor@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@CEterPackCursor@@QAEJXZ PROC			; CEterPackCursor::Size, COMDAT
; _this$ = ecx

; 54   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 55   : 	if (m_file.IsNull())

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 04	 add	 ecx, 4
  0000d	e8 00 00 00 00	 call	 ?IsNull@CFileBase@@QAEHXZ ; CFileBase::IsNull
  00012	85 c0		 test	 eax, eax
  00014	74 04		 je	 SHORT $LN2@Size

; 56   : 		return 0;

  00016	33 c0		 xor	 eax, eax
  00018	eb 0b		 jmp	 SHORT $LN1@Size
$LN2@Size:

; 57   : 	
; 58   : 	return m_file.Size();

  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	83 c1 04	 add	 ecx, 4
  00020	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
$LN1@Size:

; 59   : }

  00025	c9		 leave
  00026	c3		 ret	 0
?Size@CEterPackCursor@@QAEJXZ ENDP			; CEterPackCursor::Size
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterPack\EterPackCursor.cpp
;	COMDAT ?Read@CEterPackCursor@@QAE_NPAXJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
?Read@CEterPackCursor@@QAE_NPAXJ@Z PROC			; CEterPackCursor::Read, COMDAT
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 42   : 	if (m_file.IsNull())

  00008	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 04	 add	 ecx, 4
  0000e	e8 00 00 00 00	 call	 ?IsNull@CFileBase@@QAEHXZ ; CFileBase::IsNull
  00013	85 c0		 test	 eax, eax
  00015	74 04		 je	 SHORT $LN2@Read

; 43   : 		return false;

  00017	32 c0		 xor	 al, al
  00019	eb 54		 jmp	 SHORT $LN1@Read
$LN2@Read:

; 44   : 	
; 45   : 	if (m_ReadPoint + size > Size())

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b b0 4c 01 00
	00		 mov	 esi, DWORD PTR [eax+332]
  00024	03 75 0c	 add	 esi, DWORD PTR _size$[ebp]
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?Size@CEterPackCursor@@QAEJXZ ; CEterPackCursor::Size
  0002f	3b f0		 cmp	 esi, eax
  00031	7e 04		 jle	 SHORT $LN3@Read

; 46   : 		return false;

  00033	32 c0		 xor	 al, al
  00035	eb 38		 jmp	 SHORT $LN1@Read
$LN3@Read:

; 47   : 	
; 48   : 	memcpy(data, (char*) m_pData + m_ReadPoint, size);

  00037	ff 75 0c	 push	 DWORD PTR _size$[ebp]
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	8b 80 48 01 00
	00		 mov	 eax, DWORD PTR [eax+328]
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	03 81 4c 01 00
	00		 add	 eax, DWORD PTR [ecx+332]
  0004c	50		 push	 eax
  0004d	ff 75 08	 push	 DWORD PTR _data$[ebp]
  00050	e8 00 00 00 00	 call	 _memcpy
  00055	83 c4 0c	 add	 esp, 12			; 0000000cH

; 49   : 	m_ReadPoint += size;

  00058	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 80 4c 01 00
	00		 mov	 eax, DWORD PTR [eax+332]
  00061	03 45 0c	 add	 eax, DWORD PTR _size$[ebp]
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	89 81 4c 01 00
	00		 mov	 DWORD PTR [ecx+332], eax

; 50   : 	return true;

  0006d	b0 01		 mov	 al, 1
$LN1@Read:

; 51   : }

  0006f	5e		 pop	 esi
  00070	c9		 leave
  00071	c2 08 00	 ret	 8
?Read@CEterPackCursor@@QAE_NPAXJ@Z ENDP			; CEterPackCursor::Read
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterPack\EterPackCursor.cpp
;	COMDAT ?Seek@CEterPackCursor@@QAEXJ@Z
_TEXT	SEGMENT
tv78 = -16						; size = 4
tv77 = -12						; size = 4
tv70 = -8						; size = 4
_this$ = -4						; size = 4
_offset$ = 8						; size = 4
?Seek@CEterPackCursor@@QAEXJ@Z PROC			; CEterPackCursor::Seek, COMDAT
; _this$ = ecx

; 36   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 37   : 	m_ReadPoint = max(0, min(Size(), offset));

  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?Size@CEterPackCursor@@QAEJXZ ; CEterPackCursor::Size
  00011	3b 45 08	 cmp	 eax, DWORD PTR _offset$[ebp]
  00014	7d 0d		 jge	 SHORT $LN3@Seek
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?Size@CEterPackCursor@@QAEJXZ ; CEterPackCursor::Size
  0001e	89 45 f8	 mov	 DWORD PTR tv70[ebp], eax
  00021	eb 06		 jmp	 SHORT $LN4@Seek
$LN3@Seek:
  00023	8b 45 08	 mov	 eax, DWORD PTR _offset$[ebp]
  00026	89 45 f8	 mov	 DWORD PTR tv70[ebp], eax
$LN4@Seek:
  00029	83 7d f8 00	 cmp	 DWORD PTR tv70[ebp], 0
  0002d	7d 06		 jge	 SHORT $LN7@Seek
  0002f	83 65 f0 00	 and	 DWORD PTR tv78[ebp], 0
  00033	eb 26		 jmp	 SHORT $LN8@Seek
$LN7@Seek:
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	e8 00 00 00 00	 call	 ?Size@CEterPackCursor@@QAEJXZ ; CEterPackCursor::Size
  0003d	3b 45 08	 cmp	 eax, DWORD PTR _offset$[ebp]
  00040	7d 0d		 jge	 SHORT $LN5@Seek
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?Size@CEterPackCursor@@QAEJXZ ; CEterPackCursor::Size
  0004a	89 45 f4	 mov	 DWORD PTR tv77[ebp], eax
  0004d	eb 06		 jmp	 SHORT $LN6@Seek
$LN5@Seek:
  0004f	8b 45 08	 mov	 eax, DWORD PTR _offset$[ebp]
  00052	89 45 f4	 mov	 DWORD PTR tv77[ebp], eax
$LN6@Seek:
  00055	8b 45 f4	 mov	 eax, DWORD PTR tv77[ebp]
  00058	89 45 f0	 mov	 DWORD PTR tv78[ebp], eax
$LN8@Seek:
  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 4d f0	 mov	 ecx, DWORD PTR tv78[ebp]
  00061	89 88 4c 01 00
	00		 mov	 DWORD PTR [eax+332], ecx

; 38   : }

  00067	c9		 leave
  00068	c2 04 00	 ret	 4
?Seek@CEterPackCursor@@QAEXJ@Z ENDP			; CEterPackCursor::Seek
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterPack\EterPackCursor.cpp
;	COMDAT ?Close@CEterPackCursor@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Close@CEterPackCursor@@QAEXXZ PROC			; CEterPackCursor::Close, COMDAT
; _this$ = ecx

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 30   : 	m_file.Destroy();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 04	 add	 ecx, 4
  0000d	e8 00 00 00 00	 call	 ?Destroy@CMappedFile@@QAEXXZ ; CMappedFile::Destroy

; 31   : 	m_pData = NULL;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	83 a0 48 01 00
	00 00		 and	 DWORD PTR [eax+328], 0

; 32   : 	m_ReadPoint = 0;

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	83 a0 4c 01 00
	00 00		 and	 DWORD PTR [eax+332], 0

; 33   : }

  00026	c9		 leave
  00027	c3		 ret	 0
?Close@CEterPackCursor@@QAEXXZ ENDP			; CEterPackCursor::Close
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterPack\EterPackCursor.cpp
;	COMDAT ?Open@CEterPackCursor@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -128						; size = 4
_tmpFilename$ = -124					; size = 261
__$ArrayPad$ = 140					; size = 4
_filename$ = 152					; size = 4
?Open@CEterPackCursor@@QAE_NPBD@Z PROC			; CEterPackCursor::Open, COMDAT
; _this$ = ecx

; 15   : {

  00000	55		 push	 ebp
  00001	8d ac 24 70 ff
	ff ff		 lea	 ebp, DWORD PTR [esp-144]
  00008	81 ec 10 01 00
	00		 sub	 esp, 272		; 00000110H
  0000e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00013	33 c5		 xor	 eax, ebp
  00015	89 85 8c 00 00
	00		 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001b	89 4d 80	 mov	 DWORD PTR _this$[ebp], ecx

; 16   : 	assert(m_pPack != NULL);
; 17   : 	
; 18   : 	char tmpFilename[MAX_PATH + 1];
; 19   : 	strncpy(tmpFilename, filename, MAX_PATH);

  0001e	68 04 01 00 00	 push	 260			; 00000104H
  00023	ff b5 98 00 00
	00		 push	 DWORD PTR _filename$[ebp]
  00029	8d 45 84	 lea	 eax, DWORD PTR _tmpFilename$[ebp]
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 _strncpy
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH

; 20   : 	inlineConvertPackFilename(tmpFilename);

  00035	8d 45 84	 lea	 eax, DWORD PTR _tmpFilename$[ebp]
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?inlineConvertPackFilename@@YAXPAD@Z ; inlineConvertPackFilename
  0003e	59		 pop	 ecx

; 21   : 	
; 22   : 	if (!m_pPack->Get(m_file, tmpFilename, &m_pData))

  0003f	8b 45 80	 mov	 eax, DWORD PTR _this$[ebp]
  00042	05 48 01 00 00	 add	 eax, 328		; 00000148H
  00047	50		 push	 eax
  00048	8d 45 84	 lea	 eax, DWORD PTR _tmpFilename$[ebp]
  0004b	50		 push	 eax
  0004c	8b 45 80	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	83 c0 04	 add	 eax, 4
  00052	50		 push	 eax
  00053	8b 45 80	 mov	 eax, DWORD PTR _this$[ebp]
  00056	8b 08		 mov	 ecx, DWORD PTR [eax]
  00058	e8 00 00 00 00	 call	 ?Get@CEterPack@@QAE_NAAVCMappedFile@@PBDPAPBX@Z ; CEterPack::Get
  0005d	0f b6 c0	 movzx	 eax, al
  00060	85 c0		 test	 eax, eax
  00062	75 04		 jne	 SHORT $LN2@Open

; 23   : 		return false;

  00064	32 c0		 xor	 al, al
  00066	eb 02		 jmp	 SHORT $LN1@Open
$LN2@Open:

; 24   : 	
; 25   : 	return true;

  00068	b0 01		 mov	 al, 1
$LN1@Open:

; 26   : }

  0006a	8b 8d 8c 00 00
	00		 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00070	33 cd		 xor	 ecx, ebp
  00072	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00077	81 c5 90 00 00
	00		 add	 ebp, 144		; 00000090H
  0007d	c9		 leave
  0007e	c2 04 00	 ret	 4
?Open@CEterPackCursor@@QAE_NPBD@Z ENDP			; CEterPackCursor::Open
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterPack\EterPackCursor.cpp
;	COMDAT ??1CEterPackCursor@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CEterPackCursor@@QAE@XZ PROC				; CEterPackCursor::~CEterPackCursor, COMDAT
; _this$ = ecx

; 10   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CEterPackCursor@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 11   : 	Close();

  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?Close@CEterPackCursor@@QAEXXZ ; CEterPackCursor::Close

; 12   : }

  0002e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 04	 add	 ecx, 4
  00034	e8 00 00 00 00	 call	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
  00039	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00043	59		 pop	 ecx
  00044	c9		 leave
  00045	c3		 ret	 0
  00046	cc		 int	 3
  00047	cc		 int	 3
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CEterPackCursor@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CEterPackCursor@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CEterPackCursor@@QAE@XZ ENDP				; CEterPackCursor::~CEterPackCursor
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterPack\EterPackCursor.cpp
;	COMDAT ??0CEterPackCursor@@QAE@PAVCEterPack@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pack$ = 8						; size = 4
??0CEterPackCursor@@QAE@PAVCEterPack@@@Z PROC		; CEterPackCursor::CEterPackCursor, COMDAT
; _this$ = ecx

; 6    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 5    : CEterPackCursor::CEterPackCursor(CEterPack* pack) : m_pPack(pack), m_pData(NULL), m_ReadPoint(0)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _pack$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx

; 6    : {

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	83 c1 04	 add	 ecx, 4
  00015	e8 00 00 00 00	 call	 ??0CMappedFile@@QAE@XZ	; CMappedFile::CMappedFile

; 5    : CEterPackCursor::CEterPackCursor(CEterPack* pack) : m_pPack(pack), m_pData(NULL), m_ReadPoint(0)

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 a0 48 01 00
	00 00		 and	 DWORD PTR [eax+328], 0
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	83 a0 4c 01 00
	00 00		 and	 DWORD PTR [eax+332], 0

; 7    : }

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00031	c9		 leave
  00032	c2 04 00	 ret	 4
??0CEterPackCursor@@QAE@PAVCEterPack@@@Z ENDP		; CEterPackCursor::CEterPackCursor
_TEXT	ENDS
END
