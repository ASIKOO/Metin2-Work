; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?_Throw_tree_length_error@std@@YAXXZ		; std::_Throw_tree_length_error
PUBLIC	??0SItemPos@@QAE@XZ				; SItemPos::SItemPos
PUBLIC	?initshop@@YAXXZ				; initshop
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??1?$CSingleton@VCPythonShop@@@@UAE@XZ		; CSingleton<CPythonShop>::~CSingleton<CPythonShop>
PUBLIC	??_G?$CSingleton@VCPythonShop@@@@UAEPAXI@Z	; CSingleton<CPythonShop>::`scalar deleting destructor'
PUBLIC	??0CPythonShop@@QAE@XZ				; CPythonShop::CPythonShop
PUBLIC	??1CPythonShop@@UAE@XZ				; CPythonShop::~CPythonShop
PUBLIC	?Clear@CPythonShop@@QAEXXZ			; CPythonShop::Clear
PUBLIC	?SetItemData@CPythonShop@@QAEXKABUpacket_shop_item@@@Z ; CPythonShop::SetItemData
PUBLIC	?GetItemData@CPythonShop@@QAEHKPAPBUpacket_shop_item@@@Z ; CPythonShop::GetItemData
PUBLIC	?SetItemData@CPythonShop@@QAEXEKABUpacket_shop_item@@@Z ; CPythonShop::SetItemData
PUBLIC	?GetItemData@CPythonShop@@QAEHEKPAPBUpacket_shop_item@@@Z ; CPythonShop::GetItemData
PUBLIC	?SetTabCoinType@CPythonShop@@QAEXEE@Z		; CPythonShop::SetTabCoinType
PUBLIC	?GetTabCoinType@CPythonShop@@QAEEE@Z		; CPythonShop::GetTabCoinType
PUBLIC	?SetTabName@CPythonShop@@QAEXEPBD@Z		; CPythonShop::SetTabName
PUBLIC	?GetTabName@CPythonShop@@QAEPBDE@Z		; CPythonShop::GetTabName
PUBLIC	?Open@CPythonShop@@QAEXHH@Z			; CPythonShop::Open
PUBLIC	?Close@CPythonShop@@QAEXXZ			; CPythonShop::Close
PUBLIC	?IsOpen@CPythonShop@@QAEHXZ			; CPythonShop::IsOpen
PUBLIC	?IsPrivateShop@CPythonShop@@QAEHXZ		; CPythonShop::IsPrivateShop
PUBLIC	?IsMainPlayerPrivateShop@CPythonShop@@QAEHXZ	; CPythonShop::IsMainPlayerPrivateShop
PUBLIC	?ClearPrivateShopStock@CPythonShop@@QAEXXZ	; CPythonShop::ClearPrivateShopStock
PUBLIC	?AddPrivateShopItemStock@CPythonShop@@QAEXUSItemPos@@EK@Z ; CPythonShop::AddPrivateShopItemStock
PUBLIC	?DelPrivateShopItemStock@CPythonShop@@QAEXUSItemPos@@@Z ; CPythonShop::DelPrivateShopItemStock
PUBLIC	?GetPrivateShopItemPrice@CPythonShop@@QAEHUSItemPos@@@Z ; CPythonShop::GetPrivateShopItemPrice
PUBLIC	?BuildPrivateShop@CPythonShop@@QAEXPBD@Z	; CPythonShop::BuildPrivateShop
PUBLIC	??0ShopTab@CPythonShop@@QAE@XZ			; CPythonShop::ShopTab::ShopTab
PUBLIC	??1ShopTab@CPythonShop@@QAE@XZ			; CPythonShop::ShopTab::~ShopTab
PUBLIC	??1?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >::~_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAEIABUSItemPos@@@Z ; std::_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >::erase
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >::clear
PUBLIC	?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Lrotate
PUBLIC	?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Rrotate
PUBLIC	?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Extract
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Insert_node
PUBLIC	??_GCPythonShop@@UAEPAXI@Z			; CPythonShop::`scalar deleting destructor'
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >,std::_Iterator_base0>::operator++
PUBLIC	??1?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@QAE@XZ ; std::vector<SShopItemTable,std::allocator<SShopItemTable> >::~vector<SShopItemTable,std::allocator<SShopItemTable> >
PUBLIC	?_Reallocate_exactly@?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@AAEXI@Z ; std::vector<SShopItemTable,std::allocator<SShopItemTable> >::_Reallocate_exactly
PUBLIC	?_Xlength@?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@CAXXZ ; std::vector<SShopItemTable,std::allocator<SShopItemTable> >::_Xlength
PUBLIC	?shopOpen@@YAPAU_object@@PAU1@0@Z		; shopOpen
PUBLIC	?shopClose@@YAPAU_object@@PAU1@0@Z		; shopClose
PUBLIC	?shopIsOpen@@YAPAU_object@@PAU1@0@Z		; shopIsOpen
PUBLIC	?shopIsPrviateShop@@YAPAU_object@@PAU1@0@Z	; shopIsPrviateShop
PUBLIC	?shopIsMainPlayerPrivateShop@@YAPAU_object@@PAU1@0@Z ; shopIsMainPlayerPrivateShop
PUBLIC	?shopGetItemID@@YAPAU_object@@PAU1@0@Z		; shopGetItemID
PUBLIC	?shopGetItemCount@@YAPAU_object@@PAU1@0@Z	; shopGetItemCount
PUBLIC	?shopGetItemPrice@@YAPAU_object@@PAU1@0@Z	; shopGetItemPrice
PUBLIC	?shopGetItemMetinSocket@@YAPAU_object@@PAU1@0@Z	; shopGetItemMetinSocket
PUBLIC	?shopGetItemAttribute@@YAPAU_object@@PAU1@0@Z	; shopGetItemAttribute
PUBLIC	?shopClearPrivateShopStock@@YAPAU_object@@PAU1@0@Z ; shopClearPrivateShopStock
PUBLIC	?shopAddPrivateShopItemStock@@YAPAU_object@@PAU1@0@Z ; shopAddPrivateShopItemStock
PUBLIC	?shopDelPrivateShopItemStock@@YAPAU_object@@PAU1@0@Z ; shopDelPrivateShopItemStock
PUBLIC	?shopGetPrivateShopItemPrice@@YAPAU_object@@PAU1@0@Z ; shopGetPrivateShopItemPrice
PUBLIC	?shopBuildPrivateShop@@YAPAU_object@@PAU1@0@Z	; shopBuildPrivateShop
PUBLIC	?shopGetTabCount@@YAPAU_object@@PAU1@0@Z	; shopGetTabCount
PUBLIC	?shopGetTabName@@YAPAU_object@@PAU1@0@Z		; shopGetTabName
PUBLIC	?shopGetTabCoinType@@YAPAU_object@@PAU1@0@Z	; shopGetTabCoinType
PUBLIC	??$_Emplace_reallocate@ABUSShopItemTable@@@?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@QAEPAUSShopItemTable@@QAU2@ABU2@@Z ; std::vector<SShopItemTable,std::allocator<SShopItemTable> >::_Emplace_reallocate<SShopItemTable const &>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> > >
PUBLIC	??$_Destroy_range@V?$allocator@USShopItemTable@@@std@@@std@@YAXPAUSShopItemTable@@QAU1@AAV?$allocator@USShopItemTable@@@0@@Z ; std::_Destroy_range<std::allocator<SShopItemTable> >
PUBLIC	??$_Uninitialized_move@PAUSShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@YAPAUSShopItemTable@@QAU1@0PAU1@AAV?$allocator@USShopItemTable@@@0@@Z ; std::_Uninitialized_move<SShopItemTable *,std::allocator<SShopItemTable> >
PUBLIC	??$_Sort_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@0HUItemStockSortFunc@@@Z ; std::_Sort_unchecked<SShopItemTable *,ItemStockSortFunc>
PUBLIC	??$_Find_lower_bound@USItemPos@@@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@ABUSItemPos@@@Z ; std::_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >::_Find_lower_bound<SItemPos>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> *,std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> * const &>
PUBLIC	??$_Partition_by_median_guess_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YA?AU?$pair@PAUSShopItemTable@@PAU1@@0@PAUSShopItemTable@@0UItemStockSortFunc@@@Z ; std::_Partition_by_median_guess_unchecked<SShopItemTable *,ItemStockSortFunc>
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> *>
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> > >
PUBLIC	??$_Pop_heap_hole_by_index@PAUSShopItemTable@@U1@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@HH$$QAU1@UItemStockSortFunc@@@Z ; std::_Pop_heap_hole_by_index<SShopItemTable *,SShopItemTable,ItemStockSortFunc>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> *,std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> * &>
PUBLIC	??$_Copy_backward_memmove@PAUSShopItemTable@@PAU1@@std@@YAPAUSShopItemTable@@PAU1@00@Z ; std::_Copy_backward_memmove<SShopItemTable *,SShopItemTable *>
PUBLIC	??$_Med3_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@00UItemStockSortFunc@@@Z ; std::_Med3_unchecked<SShopItemTable *,ItemStockSortFunc>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BB@GCADKGJO@map?1set?5too?5long@		; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A ; CSingleton<CPythonShop>::ms_singleton
PUBLIC	??_7?$CSingleton@VCPythonShop@@@@6B@		; CSingleton<CPythonShop>::`vftable'
PUBLIC	??_7CPythonShop@@6B@				; CPythonShop::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCPythonNetworkStream@@@@0PAVCPythonNetworkStream@@A ; CSingleton<CPythonNetworkStream>::ms_singleton
PUBLIC	??_C@_0CP@FJEENICJ@Out?5of?5Index?4?5tabIdx?$CI?$CFd?$CJ?5must?5b@ ; `string'
PUBLIC	??_C@_0FC@PFANBFHB@Out?5of?5Index?4?5tabIdx?$CI?$CFd?$CJ?5must?5b@ ; `string'
PUBLIC	??_C@_01KBJDNOO@i@				; `string'
PUBLIC	??_C@_02PDIHAGKM@ii@				; `string'
PUBLIC	??_C@_01LKDEMHDF@s@				; `string'
PUBLIC	??_C@_04DNCDCIAE@Open@				; `string'
PUBLIC	??_C@_05LGELBCGM@Close@				; `string'
PUBLIC	??_C@_06DKEIEPKC@IsOpen@			; `string'
PUBLIC	??_C@_0O@EDCBOPPA@IsPrivateShop@		; `string'
PUBLIC	??_C@_0BI@HHPKCPJD@IsMainPlayerPrivateShop@	; `string'
PUBLIC	??_C@_09GMBNEEAB@GetItemID@			; `string'
PUBLIC	??_C@_0N@LEKALLIG@GetItemCount@			; `string'
PUBLIC	??_C@_0N@OIFMMAOE@GetItemPrice@			; `string'
PUBLIC	??_C@_0BD@JBOBKHIE@GetItemMetinSocket@		; `string'
PUBLIC	??_C@_0BB@GOKPPDHH@GetItemAttribute@		; `string'
PUBLIC	??_C@_0M@PGHDAHMM@GetTabCount@			; `string'
PUBLIC	??_C@_0L@HEMHLKHB@GetTabName@			; `string'
PUBLIC	??_C@_0P@CFALBIIJ@GetTabCoinType@		; `string'
PUBLIC	??_C@_0BG@BMKKEDKK@ClearPrivateShopStock@	; `string'
PUBLIC	??_C@_0BI@JLNKJOOM@AddPrivateShopItemStock@	; `string'
PUBLIC	??_C@_0BI@FBMJKJEA@DelPrivateShopItemStock@	; `string'
PUBLIC	??_C@_0BI@KLFPJJHF@GetPrivateShopItemPrice@	; `string'
PUBLIC	??_C@_0BB@MDMPBIAN@BuildPrivateShop@		; `string'
PUBLIC	??_C@_04BFIJLIPK@shop@				; `string'
PUBLIC	??_C@_0BA@MMIAEKCC@SHOP_SLOT_COUNT@		; `string'
PUBLIC	??_C@_0BE@FOBHCAAH@SHOP_COIN_TYPE_GOLD@		; `string'
PUBLIC	??_C@_0BO@GEPHLMDC@SHOP_COIN_TYPE_SECONDARY_COIN@ ; `string'
PUBLIC	??_R4CPythonShop@@6B@				; CPythonShop::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCPythonShop@@@8				; CPythonShop `RTTI Type Descriptor'
PUBLIC	??_R3CPythonShop@@8				; CPythonShop::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CPythonShop@@8				; CPythonShop::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CPythonShop@@8			; CPythonShop::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$CSingleton@VCPythonShop@@@@8	; CSingleton<CPythonShop>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$CSingleton@VCPythonShop@@@@@8		; CSingleton<CPythonShop> `RTTI Type Descriptor'
PUBLIC	??_R3?$CSingleton@VCPythonShop@@@@8		; CSingleton<CPythonShop>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CSingleton@VCPythonShop@@@@8		; CSingleton<CPythonShop>::`RTTI Base Class Array'
PUBLIC	??_R4?$CSingleton@VCPythonShop@@@@6B@		; CSingleton<CPythonShop>::`RTTI Complete Object Locator'
EXTRN	??_L@YGXPAXIIP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	__imp__Py_BuildValue:PROC
EXTRN	__imp__PyModule_AddIntConstant:PROC
EXTRN	__imp__Py_InitModule4:PROC
EXTRN	?PyTuple_GetString@@YA_NPAU_object@@HPAPAD@Z:PROC ; PyTuple_GetString
EXTRN	?PyTuple_GetInteger@@YA_NPAU_object@@HPAE@Z:PROC ; PyTuple_GetInteger
EXTRN	?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z:PROC ; PyTuple_GetInteger
EXTRN	?PyTuple_GetInteger@@YA_NPAU_object@@HPAG@Z:PROC ; PyTuple_GetInteger
EXTRN	?Py_BuildException@@YAPAU_object@@PBDZZ:PROC	; Py_BuildException
EXTRN	?Py_BuildNone@@YAPAU_object@@XZ:PROC		; Py_BuildNone
EXTRN	??_E?$CSingleton@VCPythonShop@@@@UAEPAXI@Z:PROC	; CSingleton<CPythonShop>::`vector deleting destructor'
EXTRN	??_ECPythonShop@@UAEPAXI@Z:PROC			; CPythonShop::`vector deleting destructor'
EXTRN	?SendBuildPrivateShopPacket@CPythonNetworkStream@@QAE_NPBDABV?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@@Z:PROC ; CPythonNetworkStream::SendBuildPrivateShopPacket
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A DD 01H DUP (?) ; CSingleton<CPythonShop>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCPythonNetworkStream@@@@0PAVCPythonNetworkStream@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCPythonNetworkStream@@@@0PAVCPythonNetworkStream@@A DD 01H DUP (?) ; CSingleton<CPythonNetworkStream>::ms_singleton
_BSS	ENDS
;	COMDAT ??_R4?$CSingleton@VCPythonShop@@@@6B@
rdata$r	SEGMENT
??_R4?$CSingleton@VCPythonShop@@@@6B@ DD 00H		; CSingleton<CPythonShop>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CSingleton@VCPythonShop@@@@@8
	DD	FLAT:??_R3?$CSingleton@VCPythonShop@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CSingleton@VCPythonShop@@@@8
rdata$r	SEGMENT
??_R2?$CSingleton@VCPythonShop@@@@8 DD FLAT:??_R1A@?0A@EA@?$CSingleton@VCPythonShop@@@@8 ; CSingleton<CPythonShop>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CSingleton@VCPythonShop@@@@8
rdata$r	SEGMENT
??_R3?$CSingleton@VCPythonShop@@@@8 DD 00H		; CSingleton<CPythonShop>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CSingleton@VCPythonShop@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CSingleton@VCPythonShop@@@@@8
data$rs	SEGMENT
??_R0?AV?$CSingleton@VCPythonShop@@@@@8 DD FLAT:??_7type_info@@6B@ ; CSingleton<CPythonShop> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CSingleton@VCPythonShop@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CSingleton@VCPythonShop@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CSingleton@VCPythonShop@@@@8 DD FLAT:??_R0?AV?$CSingleton@VCPythonShop@@@@@8 ; CSingleton<CPythonShop>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CSingleton@VCPythonShop@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CPythonShop@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CPythonShop@@8 DD FLAT:??_R0?AVCPythonShop@@@8 ; CPythonShop::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CPythonShop@@8
rdata$r	ENDS
;	COMDAT ??_R2CPythonShop@@8
rdata$r	SEGMENT
??_R2CPythonShop@@8 DD FLAT:??_R1A@?0A@EA@CPythonShop@@8 ; CPythonShop::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$CSingleton@VCPythonShop@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CPythonShop@@8
rdata$r	SEGMENT
??_R3CPythonShop@@8 DD 00H				; CPythonShop::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CPythonShop@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCPythonShop@@@8
data$rs	SEGMENT
??_R0?AVCPythonShop@@@8 DD FLAT:??_7type_info@@6B@	; CPythonShop `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCPythonShop@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CPythonShop@@6B@
rdata$r	SEGMENT
??_R4CPythonShop@@6B@ DD 00H				; CPythonShop::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCPythonShop@@@8
	DD	FLAT:??_R3CPythonShop@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BO@GEPHLMDC@SHOP_COIN_TYPE_SECONDARY_COIN@
CONST	SEGMENT
??_C@_0BO@GEPHLMDC@SHOP_COIN_TYPE_SECONDARY_COIN@ DB 'SHOP_COIN_TYPE_SECO'
	DB	'NDARY_COIN', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FOBHCAAH@SHOP_COIN_TYPE_GOLD@
CONST	SEGMENT
??_C@_0BE@FOBHCAAH@SHOP_COIN_TYPE_GOLD@ DB 'SHOP_COIN_TYPE_GOLD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MMIAEKCC@SHOP_SLOT_COUNT@
CONST	SEGMENT
??_C@_0BA@MMIAEKCC@SHOP_SLOT_COUNT@ DB 'SHOP_SLOT_COUNT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04BFIJLIPK@shop@
CONST	SEGMENT
??_C@_04BFIJLIPK@shop@ DB 'shop', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MDMPBIAN@BuildPrivateShop@
CONST	SEGMENT
??_C@_0BB@MDMPBIAN@BuildPrivateShop@ DB 'BuildPrivateShop', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KLFPJJHF@GetPrivateShopItemPrice@
CONST	SEGMENT
??_C@_0BI@KLFPJJHF@GetPrivateShopItemPrice@ DB 'GetPrivateShopItemPrice', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FBMJKJEA@DelPrivateShopItemStock@
CONST	SEGMENT
??_C@_0BI@FBMJKJEA@DelPrivateShopItemStock@ DB 'DelPrivateShopItemStock', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JLNKJOOM@AddPrivateShopItemStock@
CONST	SEGMENT
??_C@_0BI@JLNKJOOM@AddPrivateShopItemStock@ DB 'AddPrivateShopItemStock', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BMKKEDKK@ClearPrivateShopStock@
CONST	SEGMENT
??_C@_0BG@BMKKEDKK@ClearPrivateShopStock@ DB 'ClearPrivateShopStock', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CFALBIIJ@GetTabCoinType@
CONST	SEGMENT
??_C@_0P@CFALBIIJ@GetTabCoinType@ DB 'GetTabCoinType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HEMHLKHB@GetTabName@
CONST	SEGMENT
??_C@_0L@HEMHLKHB@GetTabName@ DB 'GetTabName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PGHDAHMM@GetTabCount@
CONST	SEGMENT
??_C@_0M@PGHDAHMM@GetTabCount@ DB 'GetTabCount', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GOKPPDHH@GetItemAttribute@
CONST	SEGMENT
??_C@_0BB@GOKPPDHH@GetItemAttribute@ DB 'GetItemAttribute', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JBOBKHIE@GetItemMetinSocket@
CONST	SEGMENT
??_C@_0BD@JBOBKHIE@GetItemMetinSocket@ DB 'GetItemMetinSocket', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OIFMMAOE@GetItemPrice@
CONST	SEGMENT
??_C@_0N@OIFMMAOE@GetItemPrice@ DB 'GetItemPrice', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LEKALLIG@GetItemCount@
CONST	SEGMENT
??_C@_0N@LEKALLIG@GetItemCount@ DB 'GetItemCount', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09GMBNEEAB@GetItemID@
CONST	SEGMENT
??_C@_09GMBNEEAB@GetItemID@ DB 'GetItemID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HHPKCPJD@IsMainPlayerPrivateShop@
CONST	SEGMENT
??_C@_0BI@HHPKCPJD@IsMainPlayerPrivateShop@ DB 'IsMainPlayerPrivateShop', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EDCBOPPA@IsPrivateShop@
CONST	SEGMENT
??_C@_0O@EDCBOPPA@IsPrivateShop@ DB 'IsPrivateShop', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06DKEIEPKC@IsOpen@
CONST	SEGMENT
??_C@_06DKEIEPKC@IsOpen@ DB 'IsOpen', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LGELBCGM@Close@
CONST	SEGMENT
??_C@_05LGELBCGM@Close@ DB 'Close', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04DNCDCIAE@Open@
CONST	SEGMENT
??_C@_04DNCDCIAE@Open@ DB 'Open', 00H			; `string'
CONST	ENDS
;	COMDAT ?s_methods@?1??initshop@@YAXXZ@4PAUPyMethodDef@@A
_DATA	SEGMENT
?s_methods@?1??initshop@@YAXXZ@4PAUPyMethodDef@@A DD FLAT:??_C@_04DNCDCIAE@Open@ ; `initshop'::`2'::s_methods
	DD	FLAT:?shopOpen@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_05LGELBCGM@Close@
	DD	FLAT:?shopClose@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_06DKEIEPKC@IsOpen@
	DD	FLAT:?shopIsOpen@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0O@EDCBOPPA@IsPrivateShop@
	DD	FLAT:?shopIsPrviateShop@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BI@HHPKCPJD@IsMainPlayerPrivateShop@
	DD	FLAT:?shopIsMainPlayerPrivateShop@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_09GMBNEEAB@GetItemID@
	DD	FLAT:?shopGetItemID@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0N@LEKALLIG@GetItemCount@
	DD	FLAT:?shopGetItemCount@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0N@OIFMMAOE@GetItemPrice@
	DD	FLAT:?shopGetItemPrice@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BD@JBOBKHIE@GetItemMetinSocket@
	DD	FLAT:?shopGetItemMetinSocket@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BB@GOKPPDHH@GetItemAttribute@
	DD	FLAT:?shopGetItemAttribute@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0M@PGHDAHMM@GetTabCount@
	DD	FLAT:?shopGetTabCount@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0L@HEMHLKHB@GetTabName@
	DD	FLAT:?shopGetTabName@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0P@CFALBIIJ@GetTabCoinType@
	DD	FLAT:?shopGetTabCoinType@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BG@BMKKEDKK@ClearPrivateShopStock@
	DD	FLAT:?shopClearPrivateShopStock@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BI@JLNKJOOM@AddPrivateShopItemStock@
	DD	FLAT:?shopAddPrivateShopItemStock@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BI@FBMJKJEA@DelPrivateShopItemStock@
	DD	FLAT:?shopDelPrivateShopItemStock@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BI@KLFPJJHF@GetPrivateShopItemPrice@
	DD	FLAT:?shopGetPrivateShopItemPrice@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BB@MDMPBIAN@BuildPrivateShop@
	DD	FLAT:?shopBuildPrivateShop@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	00H
	DD	00H
	DD	00H
	ORG $+4
_DATA	ENDS
;	COMDAT ??_C@_01LKDEMHDF@s@
CONST	SEGMENT
??_C@_01LKDEMHDF@s@ DB 's', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02PDIHAGKM@ii@
CONST	SEGMENT
??_C@_02PDIHAGKM@ii@ DB 'ii', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KBJDNOO@i@
CONST	SEGMENT
??_C@_01KBJDNOO@i@ DB 'i', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@PFANBFHB@Out?5of?5Index?4?5tabIdx?$CI?$CFd?$CJ?5must?5b@
CONST	SEGMENT
??_C@_0FC@PFANBFHB@Out?5of?5Index?4?5tabIdx?$CI?$CFd?$CJ?5must?5b@ DB 'Ou'
	DB	't of Index. tabIdx(%d) must be less than %d. dwSlotPos(%d) mu'
	DB	'st be less than %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@FJEENICJ@Out?5of?5Index?4?5tabIdx?$CI?$CFd?$CJ?5must?5b@
CONST	SEGMENT
??_C@_0CP@FJEENICJ@Out?5of?5Index?4?5tabIdx?$CI?$CFd?$CJ?5must?5b@ DB 'Ou'
	DB	't of Index. tabIdx(%d) must be less than %d.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CPythonShop@@6B@
CONST	SEGMENT
??_7CPythonShop@@6B@ DD FLAT:??_R4CPythonShop@@6B@	; CPythonShop::`vftable'
	DD	FLAT:??_ECPythonShop@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CSingleton@VCPythonShop@@@@6B@
CONST	SEGMENT
??_7?$CSingleton@VCPythonShop@@@@6B@ DD FLAT:??_R4?$CSingleton@VCPythonShop@@@@6B@ ; CSingleton<CPythonShop>::`vftable'
	DD	FLAT:??_E?$CSingleton@VCPythonShop@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BB@GCADKGJO@map?1set?5too?5long@ DB 'map/set too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@USItemPos@@USShopItemTable@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@1@$$QAU?$pair@USItemPos@@USShopItemTable@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@USItemPos@@USShopItemTable@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@1@$$QAU?$pair@USItemPos@@USShopItemTable@@@1@@Z$1
__ehfuncinfo$??$?0U?$pair@USItemPos@@USShopItemTable@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@1@$$QAU?$pair@USItemPos@@USShopItemTable@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@USItemPos@@USShopItemTable@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@1@$$QAU?$pair@USItemPos@@USShopItemTable@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@U?$pair@USItemPos@@USShopItemTable@@@std@@@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@_N@1@$$QAU?$pair@USItemPos@@USShopItemTable@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@USItemPos@@USShopItemTable@@@std@@@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@_N@1@$$QAU?$pair@USItemPos@@USShopItemTable@@@1@@Z$2
__ehfuncinfo$??$_Emplace@U?$pair@USItemPos@@USShopItemTable@@@std@@@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@_N@1@$$QAU?$pair@USItemPos@@USShopItemTable@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@U?$pair@USItemPos@@USShopItemTable@@@std@@@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@_N@1@$$QAU?$pair@USItemPos@@USShopItemTable@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$emplace@U?$pair@USItemPos@@USShopItemTable@@@std@@@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@USItemPos@@USShopItemTable@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$emplace@U?$pair@USItemPos@@USShopItemTable@@@std@@@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@USItemPos@@USShopItemTable@@@1@@Z$2
__ehfuncinfo$??$emplace@U?$pair@USItemPos@@USShopItemTable@@@std@@@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@USItemPos@@USShopItemTable@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$emplace@U?$pair@USItemPos@@USShopItemTable@@@std@@@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@USItemPos@@USShopItemTable@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@U?$pair@USItemPos@@USShopItemTable@@@std@@$0A@@?$map@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@USItemPos@@USShopItemTable@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@U?$pair@USItemPos@@USShopItemTable@@@std@@$0A@@?$map@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@USItemPos@@USShopItemTable@@@1@@Z$2
__ehfuncinfo$??$insert@U?$pair@USItemPos@@USShopItemTable@@@std@@$0A@@?$map@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@USItemPos@@USShopItemTable@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@U?$pair@USItemPos@@USShopItemTable@@@std@@$0A@@?$map@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@USItemPos@@USShopItemTable@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?BuildPrivateShop@CPythonShop@@QAEXPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BuildPrivateShop@CPythonShop@@QAEXPBD@Z$0
__ehfuncinfo$?BuildPrivateShop@CPythonShop@@QAEXPBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BuildPrivateShop@CPythonShop@@QAEXPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddPrivateShopItemStock@CPythonShop@@QAEXUSItemPos@@EK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddPrivateShopItemStock@CPythonShop@@QAEXUSItemPos@@EK@Z$2
__ehfuncinfo$?AddPrivateShopItemStock@CPythonShop@@QAEXUSItemPos@@EK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddPrivateShopItemStock@CPythonShop@@QAEXUSItemPos@@EK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CPythonShop@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CPythonShop@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CPythonShop@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CPythonShop@@QAE@XZ$1
__ehfuncinfo$??0CPythonShop@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CPythonShop@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
;	COMDAT ??$_Med3_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@00UItemStockSortFunc@@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Med3_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@00UItemStockSortFunc@@@Z PROC ; std::_Med3_unchecked<SShopItemTable *,ItemStockSortFunc>, COMDAT

; 7434 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 142  : 		return rkLeft.display_pos < rkRight.display_pos;

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7434 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00007	57		 push	 edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 142  : 		return rkLeft.display_pos < rkRight.display_pos;

  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Mid$[ebp]
  0000b	8a 47 0c	 mov	 al, BYTE PTR [edi+12]
  0000e	3a 46 0c	 cmp	 al, BYTE PTR [esi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7436 :     if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00011	73 2b		 jae	 SHORT $LN11@Med3_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 105  :     _Left    = _STD move(_Right);

  00013	f3 0f 7e 06	 movq	 xmm0, QWORD PTR [esi]
  00017	8a d0		 mov	 dl, al
  00019	f3 0f 7e 0f	 movq	 xmm1, QWORD PTR [edi]
  0001d	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00020	66 0f d6 07	 movq	 QWORD PTR [edi], xmm0
  00024	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00027	89 47 08	 mov	 DWORD PTR [edi+8], eax
  0002a	0f b6 46 0c	 movzx	 eax, BYTE PTR [esi+12]
  0002e	88 47 0c	 mov	 BYTE PTR [edi+12], al

; 106  :     _Right   = _STD move(_Tmp);

  00031	66 0f d6 0e	 movq	 QWORD PTR [esi], xmm1
  00035	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00038	88 56 0c	 mov	 BYTE PTR [esi+12], dl
  0003b	8a 47 0c	 mov	 al, BYTE PTR [edi+12]
$LN11@Med3_unche:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 142  : 		return rkLeft.display_pos < rkRight.display_pos;

  0003e	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
  00041	38 41 0c	 cmp	 BYTE PTR [ecx+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7440 :     if (_DEBUG_LT_PRED(_Pred, *_Last, *_Mid)) { // swap middle and last, then test first again

  00044	73 51		 jae	 SHORT $LN23@Med3_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 105  :     _Left    = _STD move(_Right);

  00046	f3 0f 7e 07	 movq	 xmm0, QWORD PTR [edi]
  0004a	f3 0f 7e 09	 movq	 xmm1, QWORD PTR [ecx]
  0004e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00051	53		 push	 ebx
  00052	8a 59 0c	 mov	 bl, BYTE PTR [ecx+12]
  00055	66 0f d6 01	 movq	 QWORD PTR [ecx], xmm0
  00059	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0005c	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0005f	0f b6 47 0c	 movzx	 eax, BYTE PTR [edi+12]
  00063	88 41 0c	 mov	 BYTE PTR [ecx+12], al

; 106  :     _Right   = _STD move(_Tmp);

  00066	66 0f d6 0f	 movq	 QWORD PTR [edi], xmm1
  0006a	89 57 08	 mov	 DWORD PTR [edi+8], edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 142  : 		return rkLeft.display_pos < rkRight.display_pos;

  0006d	0f b6 c3	 movzx	 eax, bl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 106  :     _Right   = _STD move(_Tmp);

  00070	88 5f 0c	 mov	 BYTE PTR [edi+12], bl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 142  : 		return rkLeft.display_pos < rkRight.display_pos;

  00073	3a 46 0c	 cmp	 al, BYTE PTR [esi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7443 :         if (_DEBUG_LT_PRED(_Pred, *_Mid, *_First)) {

  00076	73 1e		 jae	 SHORT $LN24@Med3_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 105  :     _Left    = _STD move(_Right);

  00078	f3 0f 7e 06	 movq	 xmm0, QWORD PTR [esi]
  0007c	66 0f d6 07	 movq	 QWORD PTR [edi], xmm0
  00080	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00083	89 47 08	 mov	 DWORD PTR [edi+8], eax
  00086	8a 46 0c	 mov	 al, BYTE PTR [esi+12]
  00089	88 47 0c	 mov	 BYTE PTR [edi+12], al

; 106  :     _Right   = _STD move(_Tmp);

  0008c	66 0f d6 0e	 movq	 QWORD PTR [esi], xmm1
  00090	89 56 08	 mov	 DWORD PTR [esi+8], edx
  00093	88 5e 0c	 mov	 BYTE PTR [esi+12], bl
$LN24@Med3_unche:
  00096	5b		 pop	 ebx
$LN23@Med3_unche:
  00097	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7447 : }

  00098	5e		 pop	 esi
  00099	5d		 pop	 ebp
  0009a	c3		 ret	 0
??$_Med3_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@00UItemStockSortFunc@@@Z ENDP ; std::_Med3_unchecked<SShopItemTable *,ItemStockSortFunc>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Copy_backward_memmove@PAUSShopItemTable@@PAU1@@std@@YAPAUSShopItemTable@@PAU1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_backward_memmove@PAUSShopItemTable@@PAU1@@std@@YAPAUSShopItemTable@@PAU1@00@Z PROC ; std::_Copy_backward_memmove<SShopItemTable *,SShopItemTable *>, COMDAT

; 4535 : _BidIt2 _Copy_backward_memmove(_BidIt1 _First, _BidIt1 _Last, _BidIt2 _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4536 :     // implement copy_backward-like function as memmove
; 4537 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4538 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4539 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4540 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	2b c8		 sub	 ecx, eax

; 4541 :     return static_cast<_BidIt2>(_CSTD memmove(_Dest_ch - _Count, _First_ch, _Count));

  0000b	51		 push	 ecx
  0000c	50		 push	 eax
  0000d	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00010	2b c1		 sub	 eax, ecx
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4542 : }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??$_Copy_backward_memmove@PAUSShopItemTable@@PAU1@@std@@YAPAUSShopItemTable@@PAU1@00@Z ENDP ; std::_Copy_backward_memmove<SShopItemTable *,SShopItemTable *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> *,std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> *,std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
;	COMDAT ??$_Pop_heap_hole_by_index@PAUSShopItemTable@@U1@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@HH$$QAU1@UItemStockSortFunc@@@Z
_TEXT	SEGMENT
tv394 = -8						; size = 4
__Max_sequence_non_leaf$1$ = -4				; size = 4
__First$ = 8						; size = 4
__Top$1$ = 12						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Pop_heap_hole_by_index@PAUSShopItemTable@@U1@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@HH$$QAU1@UItemStockSortFunc@@@Z PROC ; std::_Pop_heap_hole_by_index<SShopItemTable *,SShopItemTable,ItemStockSortFunc>, COMDAT

; 6186 :     _RanIt _First, _Iter_diff_t<_RanIt> _Hole, _Iter_diff_t<_RanIt> _Bottom, _Ty&& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 6187 :     // percolate _Hole to _Bottom, then push _Val
; 6188 :     _STL_INTERNAL_CHECK(_Bottom > 0);
; 6189 : 
; 6190 :     using _Diff      = _Iter_diff_t<_RanIt>;
; 6191 :     const _Diff _Top = _Hole;
; 6192 :     _Diff _Idx       = _Hole;
; 6193 : 
; 6194 :     // Check whether _Idx can have a child before calculating that child's index, since
; 6195 :     // calculating the child's index can trigger integer overflows
; 6196 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen

  00006	8b 4d 10	 mov	 ecx, DWORD PTR __Bottom$[ebp]
  00009	53		 push	 ebx

; 6197 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  0000a	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  0000d	56		 push	 esi
  0000e	8b 75 0c	 mov	 esi, DWORD PTR __Hole$[ebp]
  00011	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00014	89 45 f8	 mov	 DWORD PTR tv394[ebp], eax
  00017	d1 f8		 sar	 eax, 1
  00019	89 75 0c	 mov	 DWORD PTR __Top$1$[ebp], esi
  0001c	89 45 fc	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], eax
  0001f	57		 push	 edi
  00020	8b fe		 mov	 edi, esi
  00022	3b f0		 cmp	 esi, eax
  00024	7d 4d		 jge	 SHORT $LN3@Pop_heap_h
  00026	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL2@Pop_heap_h:

; 6198 :         _Idx = 2 * _Idx + 2;

  00030	8d 14 3f	 lea	 edx, DWORD PTR [edi+edi]

; 6199 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {

  00033	6b ca 0d	 imul	 ecx, edx, 13

; 6200 :             --_Idx;
; 6201 :         }
; 6202 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00036	0f b6 44 19 26	 movzx	 eax, BYTE PTR [ecx+ebx+38]
  0003b	3a 44 19 19	 cmp	 al, BYTE PTR [ecx+ebx+25]
  0003f	1b c0		 sbb	 eax, eax
  00041	6b ce 0d	 imul	 ecx, esi, 13
  00044	8d 78 02	 lea	 edi, DWORD PTR [eax+2]
  00047	03 fa		 add	 edi, edx
  00049	6b d7 0d	 imul	 edx, edi, 13

; 6203 :         _Hole             = _Idx;

  0004c	8b f7		 mov	 esi, edi
  0004e	f3 0f 7e 04 1a	 movq	 xmm0, QWORD PTR [edx+ebx]
  00053	66 0f d6 04 19	 movq	 QWORD PTR [ecx+ebx], xmm0
  00058	8b 44 1a 08	 mov	 eax, DWORD PTR [edx+ebx+8]
  0005c	89 44 19 08	 mov	 DWORD PTR [ecx+ebx+8], eax
  00060	0f b6 44 1a 0c	 movzx	 eax, BYTE PTR [edx+ebx+12]
  00065	88 44 19 0c	 mov	 BYTE PTR [ecx+ebx+12], al
  00069	8b 45 fc	 mov	 eax, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  0006c	3b f8		 cmp	 edi, eax
  0006e	7c c0		 jl	 SHORT $LL2@Pop_heap_h
  00070	8b 4d 10	 mov	 ecx, DWORD PTR __Bottom$[ebp]
$LN3@Pop_heap_h:

; 6204 :     }
; 6205 : 
; 6206 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  00073	3b f8		 cmp	 edi, eax
  00075	75 29		 jne	 SHORT $LN5@Pop_heap_h
  00077	f6 c1 01	 test	 cl, 1
  0007a	75 24		 jne	 SHORT $LN5@Pop_heap_h

; 6207 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  0007c	6b c9 0d	 imul	 ecx, ecx, 13
  0007f	6b d6 0d	 imul	 edx, esi, 13

; 6208 :         _Hole             = _Bottom - 1;

  00082	8b 75 f8	 mov	 esi, DWORD PTR tv394[ebp]
  00085	f3 0f 7e 44 19
	f3		 movq	 xmm0, QWORD PTR [ecx+ebx-13]
  0008b	66 0f d6 04 1a	 movq	 QWORD PTR [edx+ebx], xmm0
  00090	8b 44 19 fb	 mov	 eax, DWORD PTR [ecx+ebx-5]
  00094	89 44 1a 08	 mov	 DWORD PTR [edx+ebx+8], eax
  00098	8a 44 19 ff	 mov	 al, BYTE PTR [ecx+ebx-1]
  0009c	88 44 1a 0c	 mov	 BYTE PTR [edx+ebx+12], al
$LN5@Pop_heap_h:

; 6077 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  000a0	39 75 0c	 cmp	 DWORD PTR __Top$1$[ebp], esi
  000a3	7d 36		 jge	 SHORT $LN24@Pop_heap_h
$LL12@Pop_heap_h:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 142  : 		return rkLeft.display_pos < rkRight.display_pos;

  000a5	8b 55 14	 mov	 edx, DWORD PTR __Val$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6076 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  000a8	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  000ab	d1 f8		 sar	 eax, 1

; 6077 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  000ad	6b f8 0d	 imul	 edi, eax, 13
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 142  : 		return rkLeft.display_pos < rkRight.display_pos;

  000b0	03 fb		 add	 edi, ebx
  000b2	8a 4f 0c	 mov	 cl, BYTE PTR [edi+12]
  000b5	3a 4a 0c	 cmp	 cl, BYTE PTR [edx+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6077 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  000b8	73 21		 jae	 SHORT $LN24@Pop_heap_h

; 6078 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 6079 :         // move _Hole up to parent
; 6080 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  000ba	f3 0f 7e 07	 movq	 xmm0, QWORD PTR [edi]
  000be	6b d6 0d	 imul	 edx, esi, 13

; 6081 :         _Hole             = _Idx;

  000c1	8b f0		 mov	 esi, eax
  000c3	66 0f d6 04 1a	 movq	 QWORD PTR [edx+ebx], xmm0
  000c8	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  000cb	89 4c 1a 08	 mov	 DWORD PTR [edx+ebx+8], ecx
  000cf	8a 4f 0c	 mov	 cl, BYTE PTR [edi+12]
  000d2	88 4c 1a 0c	 mov	 BYTE PTR [edx+ebx+12], cl
  000d6	39 45 0c	 cmp	 DWORD PTR __Top$1$[ebp], eax
  000d9	7c ca		 jl	 SHORT $LL12@Pop_heap_h
$LN24@Pop_heap_h:

; 6082 :     }
; 6083 : 
; 6084 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

  000db	8b 55 14	 mov	 edx, DWORD PTR __Val$[ebp]
  000de	6b ce 0d	 imul	 ecx, esi, 13
  000e1	5f		 pop	 edi
  000e2	5e		 pop	 esi
  000e3	f3 0f 7e 02	 movq	 xmm0, QWORD PTR [edx]
  000e7	66 0f d6 04 19	 movq	 QWORD PTR [ecx+ebx], xmm0
  000ec	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000ef	89 44 19 08	 mov	 DWORD PTR [ecx+ebx+8], eax
  000f3	8a 42 0c	 mov	 al, BYTE PTR [edx+12]
  000f6	88 44 19 0c	 mov	 BYTE PTR [ecx+ebx+12], al
  000fa	5b		 pop	 ebx

; 6209 :     }
; 6210 : 
; 6211 :     _Push_heap_by_index(_First, _Hole, _Top, _STD forward<_Ty>(_Val), _Pred);
; 6212 : }

  000fb	8b e5		 mov	 esp, ebp
  000fd	5d		 pop	 ebp
  000fe	c3		 ret	 0
??$_Pop_heap_hole_by_index@PAUSShopItemTable@@U1@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@HH$$QAU1@UItemStockSortFunc@@@Z ENDP ; std::_Pop_heap_hole_by_index<SShopItemTable *,SShopItemTable,ItemStockSortFunc>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> > >, COMDAT
; _this$ = ecx

; 1057 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 20		 push	 32			; 00000020H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1058 :             _Al.deallocate(_Ptr, 1);
; 1059 :         }
; 1060 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> *>, COMDAT

; 271  : #if _HAS_IF_CONSTEXPR
; 272  :     if constexpr (is_array_v<_Ty>) {
; 273  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 274  :     } else
; 275  : #endif // _HAS_IF_CONSTEXPR
; 276  :     {
; 277  :         _Obj.~_Ty();
; 278  :     }
; 279  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
;	COMDAT ??$_Partition_by_median_guess_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YA?AU?$pair@PAUSShopItemTable@@PAU1@@0@PAUSShopItemTable@@0UItemStockSortFunc@@@Z
_TEXT	SEGMENT
tv619 = -12						; size = 4
tv613 = -12						; size = 4
__Last$1$ = -8						; size = 4
__Gfirst$1$ = -8					; size = 4
tv614 = -4						; size = 4
__Plast$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Glast$1$ = 20						; size = 4
__Pred$ = 20						; size = 1
??$_Partition_by_median_guess_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YA?AU?$pair@PAUSShopItemTable@@PAU1@@0@PAUSShopItemTable@@0UItemStockSortFunc@@@Z PROC ; std::_Partition_by_median_guess_unchecked<SShopItemTable *,ItemStockSortFunc>, COMDAT

; 7467 : _CONSTEXPR20 pair<_RanIt, _RanIt> _Partition_by_median_guess_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 7468 :     // partition [_First, _Last)
; 7469 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00009	8b 7d 10	 mov	 edi, DWORD PTR __Last$[ebp]
  0000c	b8 4f ec c4 4e	 mov	 eax, 1321528399		; 4ec4ec4fH
  00011	8b cf		 mov	 ecx, edi
  00013	2b 4d 0c	 sub	 ecx, DWORD PTR __First$[ebp]
  00016	f7 e9		 imul	 ecx

; 7470 :     _Guess_median_unchecked(_First, _Mid, _Prev_iter(_Last), _Pred);

  00018	8d 5f f3	 lea	 ebx, DWORD PTR [edi-13]

; 7453 :     const _Diff _Count = _Last - _First;

  0001b	b8 4f ec c4 4e	 mov	 eax, 1321528399		; 4ec4ec4fH
  00020	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]

; 7468 :     // partition [_First, _Last)
; 7469 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00023	c1 fa 02	 sar	 edx, 2
  00026	8b ca		 mov	 ecx, edx

; 7470 :     _Guess_median_unchecked(_First, _Mid, _Prev_iter(_Last), _Pred);

  00028	89 5d f8	 mov	 DWORD PTR __Last$1$[ebp], ebx
  0002b	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0002e	03 ca		 add	 ecx, edx
  00030	d1 f9		 sar	 ecx, 1
  00032	6b f1 0d	 imul	 esi, ecx, 13

; 7453 :     const _Diff _Count = _Last - _First;

  00035	8b cb		 mov	 ecx, ebx
  00037	2b cf		 sub	 ecx, edi
  00039	f7 e9		 imul	 ecx

; 7468 :     // partition [_First, _Last)
; 7469 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  0003b	03 75 0c	 add	 esi, DWORD PTR __First$[ebp]

; 7453 :     const _Diff _Count = _Last - _First;

  0003e	c1 fa 02	 sar	 edx, 2
  00041	8b c2		 mov	 eax, edx
  00043	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00046	03 c2		 add	 eax, edx

; 7454 :     if (40 < _Count) { // Tukey's ninther

  00048	83 f8 28	 cmp	 eax, 40			; 00000028H
  0004b	7e 5f		 jle	 SHORT $LN35@Partition_

; 7455 :         const _Diff _Step     = (_Count + 1) >> 3; // +1 can't overflow because range was made inclusive in caller

  0004d	40		 inc	 eax
  0004e	c1 f8 03	 sar	 eax, 3

; 7456 :         const _Diff _Two_step = _Step << 1; // note: intentionally discards low-order bit
; 7457 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  00051	6b d8 0d	 imul	 ebx, eax, 13
  00054	6b c8 1a	 imul	 ecx, eax, 26
  00057	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  0005a	03 c1		 add	 eax, ecx
  0005c	89 4d fc	 mov	 DWORD PTR tv614[ebp], ecx
  0005f	8d 14 3b	 lea	 edx, DWORD PTR [ebx+edi]
  00062	8b 7d 14	 mov	 edi, DWORD PTR __Pred$[ebp]
  00065	57		 push	 edi
  00066	50		 push	 eax
  00067	52		 push	 edx
  00068	ff 75 0c	 push	 DWORD PTR __First$[ebp]
  0006b	89 55 f4	 mov	 DWORD PTR tv613[ebp], edx
  0006e	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@00UItemStockSortFunc@@@Z ; std::_Med3_unchecked<SShopItemTable *,ItemStockSortFunc>

; 7458 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

  00073	57		 push	 edi
  00074	8d 04 33	 lea	 eax, DWORD PTR [ebx+esi]
  00077	50		 push	 eax
  00078	8b c6		 mov	 eax, esi
  0007a	2b c3		 sub	 eax, ebx
  0007c	56		 push	 esi
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@00UItemStockSortFunc@@@Z ; std::_Med3_unchecked<SShopItemTable *,ItemStockSortFunc>

; 7459 :         _Med3_unchecked(_Last - _Two_step, _Last - _Step, _Last, _Pred);

  00083	8b 45 f8	 mov	 eax, DWORD PTR __Last$1$[ebp]
  00086	8b f8		 mov	 edi, eax
  00088	2b fb		 sub	 edi, ebx
  0008a	8b 5d 14	 mov	 ebx, DWORD PTR __Pred$[ebp]
  0008d	53		 push	 ebx
  0008e	50		 push	 eax
  0008f	2b 45 fc	 sub	 eax, DWORD PTR tv614[ebp]
  00092	57		 push	 edi
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@00UItemStockSortFunc@@@Z ; std::_Med3_unchecked<SShopItemTable *,ItemStockSortFunc>

; 7460 :         _Med3_unchecked(_First + _Step, _Mid, _Last - _Step, _Pred);

  00099	53		 push	 ebx
  0009a	57		 push	 edi
  0009b	56		 push	 esi
  0009c	ff 75 f4	 push	 DWORD PTR tv613[ebp]
  0009f	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@00UItemStockSortFunc@@@Z ; std::_Med3_unchecked<SShopItemTable *,ItemStockSortFunc>

; 7461 :     } else {

  000a4	8b 7d 0c	 mov	 edi, DWORD PTR __First$[ebp]
  000a7	83 c4 40	 add	 esp, 64			; 00000040H
  000aa	eb 0e		 jmp	 SHORT $LN36@Partition_
$LN35@Partition_:

; 7462 :         _Med3_unchecked(_First, _Mid, _Last, _Pred);

  000ac	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  000af	53		 push	 ebx
  000b0	56		 push	 esi
  000b1	57		 push	 edi
  000b2	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@00UItemStockSortFunc@@@Z ; std::_Med3_unchecked<SShopItemTable *,ItemStockSortFunc>
  000b7	83 c4 10	 add	 esp, 16			; 00000010H
$LN36@Partition_:

; 7471 :     _RanIt _Pfirst = _Mid;
; 7472 :     _RanIt _Plast  = _Next_iter(_Pfirst);

  000ba	8d 5e 0d	 lea	 ebx, DWORD PTR [esi+13]
  000bd	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx

; 7475 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  000c0	3b fe		 cmp	 edi, esi
  000c2	73 11		 jae	 SHORT $LN110@Partition_
$LL2@Partition_:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 142  : 		return rkLeft.display_pos < rkRight.display_pos;

  000c4	8a 46 ff	 mov	 al, BYTE PTR [esi-1]
  000c7	3a 46 0c	 cmp	 al, BYTE PTR [esi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7475 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  000ca	72 09		 jb	 SHORT $LN110@Partition_
  000cc	77 07		 ja	 SHORT $LN110@Partition_

; 7476 :         --_Pfirst;

  000ce	83 ee 0d	 sub	 esi, 13			; 0000000dH
  000d1	3b fe		 cmp	 edi, esi
  000d3	72 ef		 jb	 SHORT $LL2@Partition_
$LN110@Partition_:

; 7479 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  000d5	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
  000d8	3b da		 cmp	 ebx, edx
  000da	73 15		 jae	 SHORT $LN5@Partition_
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 142  : 		return rkLeft.display_pos < rkRight.display_pos;

  000dc	8a 4e 0c	 mov	 cl, BYTE PTR [esi+12]
  000df	90		 npad	 1
$LL4@Partition_:
  000e0	38 4b 0c	 cmp	 BYTE PTR [ebx+12], cl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7479 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  000e3	72 09		 jb	 SHORT $LN111@Partition_
  000e5	77 07		 ja	 SHORT $LN111@Partition_

; 7480 :         ++_Plast;

  000e7	83 c3 0d	 add	 ebx, 13			; 0000000dH
  000ea	3b da		 cmp	 ebx, edx
  000ec	72 f2		 jb	 SHORT $LL4@Partition_
$LN111@Partition_:
  000ee	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx
$LN5@Partition_:

; 7481 :     }
; 7482 : 
; 7483 :     _RanIt _Gfirst = _Plast;
; 7484 :     _RanIt _Glast  = _Pfirst;

  000f1	8b c6		 mov	 eax, esi
  000f3	8b fb		 mov	 edi, ebx
  000f5	89 45 14	 mov	 DWORD PTR __Glast$1$[ebp], eax
$LN115@Partition_:

; 7485 : 
; 7486 :     for (;;) { // partition
; 7487 :         for (; _Gfirst < _Last; ++_Gfirst) {

  000f8	89 7d f8	 mov	 DWORD PTR __Gfirst$1$[ebp], edi
  000fb	0f 1f 44 00 00	 npad	 5
$LL6@Partition_:
  00100	3b fa		 cmp	 edi, edx
  00102	73 56		 jae	 SHORT $LN90@Partition_
$LL11@Partition_:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 142  : 		return rkLeft.display_pos < rkRight.display_pos;

  00104	8a 46 0c	 mov	 al, BYTE PTR [esi+12]
  00107	3a 47 0c	 cmp	 al, BYTE PTR [edi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7488 :             if (_DEBUG_LT_PRED(_Pred, *_Pfirst, *_Gfirst)) {

  0010a	72 3e		 jb	 SHORT $LN9@Partition_

; 7489 :                 continue;
; 7490 :             } else if (_Pred(*_Gfirst, *_Pfirst)) {

  0010c	77 43		 ja	 SHORT $LN112@Partition_

; 7491 :                 break;
; 7492 :             } else if (_Plast != _Gfirst) {

  0010e	8d 43 0d	 lea	 eax, DWORD PTR [ebx+13]
  00111	89 45 f4	 mov	 DWORD PTR tv619[ebp], eax
  00114	3b df		 cmp	 ebx, edi
  00116	74 30		 je	 SHORT $LN19@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 104  :     _Ty _Tmp = _STD move(_Left);

  00118	8a 53 0c	 mov	 dl, BYTE PTR [ebx+12]
  0011b	f3 0f 7e 0b	 movq	 xmm1, QWORD PTR [ebx]
  0011f	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]

; 105  :     _Left    = _STD move(_Right);

  00122	f3 0f 7e 07	 movq	 xmm0, QWORD PTR [edi]
  00126	66 0f d6 03	 movq	 QWORD PTR [ebx], xmm0
  0012a	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0012d	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  00130	8a 47 0c	 mov	 al, BYTE PTR [edi+12]
  00133	88 43 0c	 mov	 BYTE PTR [ebx+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7494 :                 ++_Plast;

  00136	8b 5d f4	 mov	 ebx, DWORD PTR tv619[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 106  :     _Right   = _STD move(_Tmp);

  00139	66 0f d6 0f	 movq	 QWORD PTR [edi], xmm1
  0013d	89 4f 08	 mov	 DWORD PTR [edi+8], ecx
  00140	88 57 0c	 mov	 BYTE PTR [edi+12], dl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7495 :             } else {

  00143	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
  00146	eb 02		 jmp	 SHORT $LN9@Partition_
$LN19@Partition_:

; 7496 :                 ++_Plast;

  00148	8b d8		 mov	 ebx, eax
$LN9@Partition_:

; 7485 : 
; 7486 :     for (;;) { // partition
; 7487 :         for (; _Gfirst < _Last; ++_Gfirst) {

  0014a	83 c7 0d	 add	 edi, 13			; 0000000dH
  0014d	3b fa		 cmp	 edi, edx
  0014f	72 b3		 jb	 SHORT $LL11@Partition_
$LN112@Partition_:
  00151	8b 45 14	 mov	 eax, DWORD PTR __Glast$1$[ebp]
  00154	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx
  00157	89 7d f8	 mov	 DWORD PTR __Gfirst$1$[ebp], edi
$LN90@Partition_:

; 7500 :         for (; _First < _Glast; --_Glast) {

  0015a	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]
  0015d	3b c1		 cmp	 eax, ecx
  0015f	76 5c		 jbe	 SHORT $LN114@Partition_
  00161	8d 78 f3	 lea	 edi, DWORD PTR [eax-13]
  00164	8b d9		 mov	 ebx, ecx
$LL14@Partition_:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 142  : 		return rkLeft.display_pos < rkRight.display_pos;

  00166	8a 4f 0c	 mov	 cl, BYTE PTR [edi+12]
  00169	3a 4e 0c	 cmp	 cl, BYTE PTR [esi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7501 :             if (_DEBUG_LT_PRED(_Pred, *_Prev_iter(_Glast), *_Pfirst)) {

  0016c	72 34		 jb	 SHORT $LN12@Partition_

; 7502 :                 continue;
; 7503 :             } else if (_Pred(*_Pfirst, *_Prev_iter(_Glast))) {

  0016e	77 3f		 ja	 SHORT $LN113@Partition_

; 7504 :                 break;
; 7505 :             } else if (--_Pfirst != _Prev_iter(_Glast)) {

  00170	83 ee 0d	 sub	 esi, 13			; 0000000dH
  00173	3b f7		 cmp	 esi, edi
  00175	74 2b		 je	 SHORT $LN12@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 105  :     _Left    = _STD move(_Right);

  00177	f3 0f 7e 07	 movq	 xmm0, QWORD PTR [edi]
  0017b	f3 0f 7e 0e	 movq	 xmm1, QWORD PTR [esi]
  0017f	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00182	8a 56 0c	 mov	 dl, BYTE PTR [esi+12]
  00185	66 0f d6 06	 movq	 QWORD PTR [esi], xmm0
  00189	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0018c	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0018f	8a 47 0c	 mov	 al, BYTE PTR [edi+12]
  00192	88 46 0c	 mov	 BYTE PTR [esi+12], al
  00195	8b 45 14	 mov	 eax, DWORD PTR __Glast$1$[ebp]

; 106  :     _Right   = _STD move(_Tmp);

  00198	66 0f d6 0f	 movq	 QWORD PTR [edi], xmm1
  0019c	89 4f 08	 mov	 DWORD PTR [edi+8], ecx
  0019f	88 57 0c	 mov	 BYTE PTR [edi+12], dl
$LN12@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7500 :         for (; _First < _Glast; --_Glast) {

  001a2	83 e8 0d	 sub	 eax, 13			; 0000000dH
  001a5	83 ef 0d	 sub	 edi, 13			; 0000000dH
  001a8	89 45 14	 mov	 DWORD PTR __Glast$1$[ebp], eax
  001ab	3b d8		 cmp	 ebx, eax
  001ad	72 b7		 jb	 SHORT $LL14@Partition_
$LN113@Partition_:
  001af	8b 4d 0c	 mov	 ecx, DWORD PTR __First$[ebp]

; 7506 :                 _STD iter_swap(_Pfirst, _Prev_iter(_Glast));
; 7507 :             }
; 7508 :         }
; 7509 : 
; 7510 :         if (_Glast == _First && _Gfirst == _Last) {

  001b2	3b c1		 cmp	 eax, ecx
  001b4	8b 7d f8	 mov	 edi, DWORD PTR __Gfirst$1$[ebp]
  001b7	8b 5d fc	 mov	 ebx, DWORD PTR __Plast$1$[ebp]
  001ba	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
$LN114@Partition_:
  001bd	75 73		 jne	 SHORT $LN27@Partition_
  001bf	3b fa		 cmp	 edi, edx
  001c1	0f 84 1f 01 00
	00		 je	 $LN92@Partition_

; 7512 :         }
; 7513 : 
; 7514 :         if (_Glast == _First) { // no room at bottom, rotate pivot upward
; 7515 :             if (_Plast != _Gfirst) {

  001c7	3b df		 cmp	 ebx, edi
  001c9	74 28		 je	 SHORT $LN67@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 105  :     _Left    = _STD move(_Right);

  001cb	f3 0f 7e 03	 movq	 xmm0, QWORD PTR [ebx]
  001cf	f3 0f 7e 0e	 movq	 xmm1, QWORD PTR [esi]
  001d3	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  001d6	8a 56 0c	 mov	 dl, BYTE PTR [esi+12]
  001d9	66 0f d6 06	 movq	 QWORD PTR [esi], xmm0
  001dd	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  001e0	89 46 08	 mov	 DWORD PTR [esi+8], eax
  001e3	8a 43 0c	 mov	 al, BYTE PTR [ebx+12]
  001e6	88 46 0c	 mov	 BYTE PTR [esi+12], al

; 106  :     _Right   = _STD move(_Tmp);

  001e9	66 0f d6 0b	 movq	 QWORD PTR [ebx], xmm1
  001ed	89 4b 08	 mov	 DWORD PTR [ebx+8], ecx
  001f0	88 53 0c	 mov	 BYTE PTR [ebx+12], dl
$LN67@Partition_:

; 104  :     _Ty _Tmp = _STD move(_Left);

  001f3	8a 56 0c	 mov	 dl, BYTE PTR [esi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7519 :             ++_Plast;

  001f6	83 c3 0d	 add	 ebx, 13			; 0000000dH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 105  :     _Left    = _STD move(_Right);

  001f9	f3 0f 7e 07	 movq	 xmm0, QWORD PTR [edi]
  001fd	f3 0f 7e 0e	 movq	 xmm1, QWORD PTR [esi]
  00201	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00204	66 0f d6 06	 movq	 QWORD PTR [esi], xmm0
  00208	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0020b	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0020e	8a 47 0c	 mov	 al, BYTE PTR [edi+12]
  00211	88 46 0c	 mov	 BYTE PTR [esi+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7521 :             ++_Pfirst;

  00214	83 c6 0d	 add	 esi, 13			; 0000000dH

; 7522 :             ++_Gfirst;

  00217	8b 45 14	 mov	 eax, DWORD PTR __Glast$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 106  :     _Right   = _STD move(_Tmp);

  0021a	66 0f d6 0f	 movq	 QWORD PTR [edi], xmm1
  0021e	89 4f 08	 mov	 DWORD PTR [edi+8], ecx
  00221	88 57 0c	 mov	 BYTE PTR [edi+12], dl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7522 :             ++_Gfirst;

  00224	83 c7 0d	 add	 edi, 13			; 0000000dH
  00227	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
  0022a	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx
  0022d	e9 c6 fe ff ff	 jmp	 $LN115@Partition_
$LN27@Partition_:

; 7523 :         } else if (_Gfirst == _Last) { // no room at top, rotate pivot downward

  00232	83 c0 f3	 add	 eax, -13		; fffffff3H
  00235	89 45 14	 mov	 DWORD PTR __Glast$1$[ebp], eax
  00238	3b fa		 cmp	 edi, edx
  0023a	75 6e		 jne	 SHORT $LN30@Partition_

; 7524 :             if (--_Glast != --_Pfirst) {

  0023c	83 ee 0d	 sub	 esi, 13			; 0000000dH
  0023f	3b c6		 cmp	 eax, esi
  00241	74 2e		 je	 SHORT $LN75@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 104  :     _Ty _Tmp = _STD move(_Left);

  00243	f3 0f 7e 08	 movq	 xmm1, QWORD PTR [eax]
  00247	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0024a	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]

; 105  :     _Left    = _STD move(_Right);

  0024d	f3 0f 7e 06	 movq	 xmm0, QWORD PTR [esi]
  00251	8b 7d 14	 mov	 edi, DWORD PTR __Glast$1$[ebp]
  00254	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00258	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0025b	89 47 08	 mov	 DWORD PTR [edi+8], eax
  0025e	8a 46 0c	 mov	 al, BYTE PTR [esi+12]
  00261	88 47 0c	 mov	 BYTE PTR [edi+12], al
  00264	8b 7d f8	 mov	 edi, DWORD PTR __Gfirst$1$[ebp]

; 106  :     _Right   = _STD move(_Tmp);

  00267	66 0f d6 0e	 movq	 QWORD PTR [esi], xmm1
  0026b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  0026e	88 56 0c	 mov	 BYTE PTR [esi+12], dl
$LN75@Partition_:

; 104  :     _Ty _Tmp = _STD move(_Left);

  00271	8a 56 0c	 mov	 dl, BYTE PTR [esi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7528 :             _STD iter_swap(_Pfirst, --_Plast);

  00274	83 eb 0d	 sub	 ebx, 13			; 0000000dH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 104  :     _Ty _Tmp = _STD move(_Left);

  00277	f3 0f 7e 0e	 movq	 xmm1, QWORD PTR [esi]
  0027b	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7528 :             _STD iter_swap(_Pfirst, --_Plast);

  0027e	89 5d fc	 mov	 DWORD PTR __Plast$1$[ebp], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 105  :     _Left    = _STD move(_Right);

  00281	f3 0f 7e 03	 movq	 xmm0, QWORD PTR [ebx]
  00285	66 0f d6 06	 movq	 QWORD PTR [esi], xmm0
  00289	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0028c	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0028f	8a 43 0c	 mov	 al, BYTE PTR [ebx+12]
  00292	88 46 0c	 mov	 BYTE PTR [esi+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7529 :         } else {

  00295	8b 45 14	 mov	 eax, DWORD PTR __Glast$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 106  :     _Right   = _STD move(_Tmp);

  00298	66 0f d6 0b	 movq	 QWORD PTR [ebx], xmm1
  0029c	89 4b 08	 mov	 DWORD PTR [ebx+8], ecx
  0029f	88 53 0c	 mov	 BYTE PTR [ebx+12], dl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7529 :         } else {

  002a2	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
  002a5	e9 56 fe ff ff	 jmp	 $LL6@Partition_
$LN30@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 105  :     _Left    = _STD move(_Right);

  002aa	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  002ae	8a 57 0c	 mov	 dl, BYTE PTR [edi+12]
  002b1	f3 0f 7e 0f	 movq	 xmm1, QWORD PTR [edi]
  002b5	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  002b8	66 0f d6 07	 movq	 QWORD PTR [edi], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7530 :             _STD iter_swap(_Gfirst, --_Glast);

  002bc	89 45 14	 mov	 DWORD PTR __Glast$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 105  :     _Left    = _STD move(_Right);

  002bf	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  002c2	89 47 08	 mov	 DWORD PTR [edi+8], eax
  002c5	8b 45 14	 mov	 eax, DWORD PTR __Glast$1$[ebp]
  002c8	8a 40 0c	 mov	 al, BYTE PTR [eax+12]
  002cb	88 47 0c	 mov	 BYTE PTR [edi+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7531 :             ++_Gfirst;

  002ce	83 c7 0d	 add	 edi, 13			; 0000000dH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 106  :     _Right   = _STD move(_Tmp);

  002d1	8b 45 14	 mov	 eax, DWORD PTR __Glast$1$[ebp]
  002d4	66 0f d6 08	 movq	 QWORD PTR [eax], xmm1
  002d8	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  002db	88 50 0c	 mov	 BYTE PTR [eax+12], dl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7533 :     }

  002de	8b 55 10	 mov	 edx, DWORD PTR __Last$[ebp]
  002e1	e9 12 fe ff ff	 jmp	 $LN115@Partition_
$LN92@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  002e6	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7511 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  002e9	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  002ea	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7511 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  002ec	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  002ed	89 58 04	 mov	 DWORD PTR [eax+4], ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7511 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  002f0	5b		 pop	 ebx

; 7534 : }

  002f1	8b e5		 mov	 esp, ebp
  002f3	5d		 pop	 ebp
  002f4	c3		 ret	 0
??$_Partition_by_median_guess_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YA?AU?$pair@PAUSShopItemTable@@PAU1@@0@PAUSShopItemTable@@0UItemStockSortFunc@@@Z ENDP ; std::_Partition_by_median_guess_unchecked<SShopItemTable *,ItemStockSortFunc>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> *,std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> *,std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ??$_Find_lower_bound@USItemPos@@@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@ABUSItemPos@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@USItemPos@@@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@ABUSItemPos@@@Z PROC ; std::_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >::_Find_lower_bound<SItemPos>, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00008	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000b	89 02		 mov	 DWORD PTR [edx], eax
  0000d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00014	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00017	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001b	75 36		 jne	 SHORT $LN19@Find_lower
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h

; 255  : 		return (window_type < rhs.window_type) || ((window_type == rhs.window_type) && (cell < rhs.cell));

  0001d	53		 push	 ebx
  0001e	56		 push	 esi
  0001f	8b 75 0c	 mov	 esi, DWORD PTR __Keyval$[ebp]
  00022	8a 1e		 mov	 bl, BYTE PTR [esi]
$LL2@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1704 :             _Result._Location._Parent = _Trynode;

  00024	89 02		 mov	 DWORD PTR [edx], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h

; 255  : 		return (window_type < rhs.window_type) || ((window_type == rhs.window_type) && (cell < rhs.cell));

  00026	38 58 0e	 cmp	 BYTE PTR [eax+14], bl
  00029	72 18		 jb	 SHORT $LN16@Find_lower
  0002b	75 0a		 jne	 SHORT $LN4@Find_lower
  0002d	66 8b 48 0f	 mov	 cx, WORD PTR [eax+15]
  00031	66 3b 4e 01	 cmp	 cx, WORD PTR [esi+1]
  00035	72 0c		 jb	 SHORT $LN16@Find_lower
$LN4@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1710 :                 _Result._Bound           = _Trynode;

  00037	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1711 :                 _Trynode                 = _Trynode->_Left;

  0003a	b9 01 00 00 00	 mov	 ecx, 1
  0003f	8b 00		 mov	 eax, DWORD PTR [eax]
  00041	eb 05		 jmp	 SHORT $LN5@Find_lower
$LN16@Find_lower:

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {
; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  00043	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00046	33 c9		 xor	 ecx, ecx
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00048	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0004b	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0004f	74 d3		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
$LN19@Find_lower:

; 1716 :     }

  00053	8b c2		 mov	 eax, edx
  00055	5d		 pop	 ebp
  00056	c2 08 00	 ret	 8
??$_Find_lower_bound@USItemPos@@@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@ABUSItemPos@@@Z ENDP ; std::_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >::_Find_lower_bound<SItemPos>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
;	COMDAT ??$_Sort_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@0HUItemStockSortFunc@@@Z
_TEXT	SEGMENT
__Val$1 = -40						; size = 13
__Val$2$ = -36						; size = 8
__Mid$2 = -36						; size = 8
$T3 = -32						; size = 4
tv653 = -24						; size = 4
__Val$3$ = -20						; size = 4
tv662 = -16						; size = 4
__Bottom$1$ = -12					; size = 4
__Max_sequence_non_leaf$1$ = -8				; size = 4
__Hole$1$ = -4						; size = 4
__Val$3$ = 8						; size = 4
__First$ = 8						; size = 4
__Val$1$ = 11						; size = 1
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Sort_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@0HUItemStockSortFunc@@@Z PROC ; std::_Sort_unchecked<SShopItemTable *,ItemStockSortFunc>, COMDAT

; 7537 : _CONSTEXPR20 void _Sort_unchecked(_RanIt _First, _RanIt _Last, _Iter_diff_t<_RanIt> _Ideal, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 7538 :     // order [_First, _Last)
; 7539 :     for (;;) {
; 7540 :         if (_Last - _First <= _ISORT_MAX) { // small

  00008	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  0000b	8b c6		 mov	 eax, esi
  0000d	57		 push	 edi
  0000e	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  00011	2b c7		 sub	 eax, edi
  00013	3d ad 01 00 00	 cmp	 eax, 429		; 000001adH
  00018	0f 8c 90 00 00
	00		 jl	 $LN67@Sort_unche
  0001e	8b 5d 10	 mov	 ebx, DWORD PTR __Ideal$[ebp]
$LL2@Sort_unche:

; 7541 :             _Insertion_sort_unchecked(_First, _Last, _Pred);
; 7542 :             return;
; 7543 :         }
; 7544 : 
; 7545 :         if (_Ideal <= 0) { // heap sort if too many divisions

  00021	85 db		 test	 ebx, ebx
  00023	0f 8e db 00 00
	00		 jle	 $LN68@Sort_unche

; 7548 :             return;
; 7549 :         }
; 7550 : 
; 7551 :         // divide and conquer by quicksort
; 7552 :         auto _Mid = _Partition_by_median_guess_unchecked(_First, _Last, _Pred);

  00029	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  0002c	8d 45 dc	 lea	 eax, DWORD PTR __Mid$2[ebp]
  0002f	56		 push	 esi
  00030	57		 push	 edi
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Partition_by_median_guess_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YA?AU?$pair@PAUSShopItemTable@@PAU1@@0@PAUSShopItemTable@@0UItemStockSortFunc@@@Z ; std::_Partition_by_median_guess_unchecked<SShopItemTable *,ItemStockSortFunc>

; 7553 : 
; 7554 :         _Ideal = (_Ideal >> 1) + (_Ideal >> 2); // allow 1.5 log2(N) divisions

  00037	8b c3		 mov	 eax, ebx

; 7555 : 
; 7556 :         if (_Mid.first - _First < _Last - _Mid.second) { // loop on second half

  00039	8b ce		 mov	 ecx, esi
  0003b	2b 4d e0	 sub	 ecx, DWORD PTR __Mid$2[ebp+4]
  0003e	83 c4 10	 add	 esp, 16			; 00000010H
  00041	c1 f8 02	 sar	 eax, 2
  00044	d1 fb		 sar	 ebx, 1
  00046	03 d8		 add	 ebx, eax
  00048	b8 4f ec c4 4e	 mov	 eax, 1321528399		; 4ec4ec4fH
  0004d	f7 e9		 imul	 ecx
  0004f	8b 4d dc	 mov	 ecx, DWORD PTR __Mid$2[ebp]
  00052	b8 4f ec c4 4e	 mov	 eax, 1321528399		; 4ec4ec4fH
  00057	c1 fa 02	 sar	 edx, 2
  0005a	2b cf		 sub	 ecx, edi
  0005c	8b f2		 mov	 esi, edx
  0005e	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  00061	03 f2		 add	 esi, edx
  00063	f7 e9		 imul	 ecx
  00065	c1 fa 02	 sar	 edx, 2
  00068	8b c2		 mov	 eax, edx
  0006a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0006d	03 c2		 add	 eax, edx
  0006f	3b c6		 cmp	 eax, esi
  00071	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
  00074	50		 push	 eax
  00075	53		 push	 ebx
  00076	7d 12		 jge	 SHORT $LN7@Sort_unche

; 7557 :             _Sort_unchecked(_First, _Mid.first, _Ideal, _Pred);

  00078	8b 75 dc	 mov	 esi, DWORD PTR __Mid$2[ebp]
  0007b	56		 push	 esi
  0007c	57		 push	 edi
  0007d	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@0HUItemStockSortFunc@@@Z ; std::_Sort_unchecked<SShopItemTable *,ItemStockSortFunc>

; 7558 :             _First = _Mid.second;

  00082	8b 7d e0	 mov	 edi, DWORD PTR __Mid$2[ebp+4]

; 7559 :         } else { // loop on first half

  00085	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  00088	eb 12		 jmp	 SHORT $LN91@Sort_unche
$LN7@Sort_unche:

; 7560 :             _Sort_unchecked(_Mid.second, _Last, _Ideal, _Pred);

  0008a	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0008d	8b 45 e0	 mov	 eax, DWORD PTR __Mid$2[ebp+4]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@0HUItemStockSortFunc@@@Z ; std::_Sort_unchecked<SShopItemTable *,ItemStockSortFunc>

; 7561 :             _Last = _Mid.first;

  00096	8b 75 dc	 mov	 esi, DWORD PTR __Mid$2[ebp]
  00099	89 75 0c	 mov	 DWORD PTR __Last$[ebp], esi
$LN91@Sort_unche:

; 7538 :     // order [_First, _Last)
; 7539 :     for (;;) {
; 7540 :         if (_Last - _First <= _ISORT_MAX) { // small

  0009c	8b c6		 mov	 eax, esi
  0009e	83 c4 10	 add	 esp, 16			; 00000010H
  000a1	2b c7		 sub	 eax, edi
  000a3	3d ad 01 00 00	 cmp	 eax, 429		; 000001adH
  000a8	0f 8d 73 ff ff
	ff		 jge	 $LL2@Sort_unche
$LN67@Sort_unche:

; 7412 :     if (_First != _Last) {

  000ae	3b fe		 cmp	 edi, esi
  000b0	0f 84 51 02 00
	00		 je	 $LN51@Sort_unche

; 7413 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  000b6	8d 77 0d	 lea	 esi, DWORD PTR [edi+13]
  000b9	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  000bc	0f 84 45 02 00
	00		 je	 $LN51@Sort_unche
$LL11@Sort_unche:

; 7414 :             _BidIt _Hole               = _Mid;
; 7415 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Mid);

  000c2	8a 5e 0c	 mov	 bl, BYTE PTR [esi+12]
  000c5	8b d6		 mov	 edx, esi
  000c7	f3 0f 7e 0e	 movq	 xmm1, QWORD PTR [esi]
  000cb	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ce	66 0f d6 4d dc	 movq	 QWORD PTR __Val$2$[ebp], xmm1
  000d3	89 45 08	 mov	 DWORD PTR __Val$3$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 142  : 		return rkLeft.display_pos < rkRight.display_pos;

  000d6	3a 5f 0c	 cmp	 bl, BYTE PTR [edi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7417 :             if (_DEBUG_LT_PRED(_Pred, _Val, *_First)) { // found new earliest element, move to front

  000d9	0f 83 e9 01 00
	00		 jae	 $LN18@Sort_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 4696 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  000df	8d 46 0d	 lea	 eax, DWORD PTR [esi+13]
  000e2	50		 push	 eax
  000e3	56		 push	 esi
  000e4	57		 push	 edi
  000e5	e8 00 00 00 00	 call	 ??$_Copy_backward_memmove@PAUSShopItemTable@@PAU1@@std@@YAPAUSShopItemTable@@PAU1@00@Z ; std::_Copy_backward_memmove<SShopItemTable *,SShopItemTable *>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7419 :                 *_First = _STD move(_Val);

  000ea	f3 0f 7e 45 dc	 movq	 xmm0, QWORD PTR __Val$2$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 4696 :             return _Copy_backward_memmove(_First, _Last, _Dest);

  000ef	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7419 :                 *_First = _STD move(_Val);

  000f2	8b 45 08	 mov	 eax, DWORD PTR __Val$3$[ebp]
  000f5	66 0f d6 07	 movq	 QWORD PTR [edi], xmm0
  000f9	89 47 08	 mov	 DWORD PTR [edi+8], eax
  000fc	88 5f 0c	 mov	 BYTE PTR [edi+12], bl

; 7420 :             } else { // look for insertion point after first

  000ff	e9 f7 01 00 00	 jmp	 $LN19@Sort_unche
$LN68@Sort_unche:

; 6360 :     _Diff _Bottom = _Last - _First;

  00104	8b de		 mov	 ebx, esi
  00106	b8 4f ec c4 4e	 mov	 eax, 1321528399		; 4ec4ec4fH
  0010b	2b df		 sub	 ebx, edi
  0010d	f7 eb		 imul	 ebx
  0010f	89 5d e0	 mov	 DWORD PTR $T3[ebp], ebx
  00112	c1 fa 02	 sar	 edx, 2
  00115	8b c2		 mov	 eax, edx
  00117	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0011a	03 c2		 add	 eax, edx

; 6361 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  0011c	8b c8		 mov	 ecx, eax
  0011e	89 45 f4	 mov	 DWORD PTR __Bottom$1$[ebp], eax
  00121	d1 f9		 sar	 ecx, 1
  00123	85 c9		 test	 ecx, ecx
  00125	0f 8e 17 01 00
	00		 jle	 $LN31@Sort_unche
  0012b	48		 dec	 eax
  0012c	8b d0		 mov	 edx, eax
  0012e	89 45 f0	 mov	 DWORD PTR tv662[ebp], eax

; 6231 :         _Pop_heap_hole_unchecked(_First, _Last, _Last, _STD move(_Val), _Pred);
; 6232 :     }
; 6233 : }
; 6234 : 
; 6235 : template <class _RanIt, class _Pr>
; 6236 : _CONSTEXPR20 void pop_heap(_RanIt _First, _RanIt _Last, _Pr _Pred) {
; 6237 :     // pop *_First to *(_Last - 1) and reheap
; 6238 :     _Adl_verify_range(_First, _Last);
; 6239 :     _Pop_heap_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Pass_fn(_Pred));
; 6240 : }
; 6241 : 
; 6242 : template <class _RanIt>
; 6243 : _CONSTEXPR20 void pop_heap(_RanIt _First, _RanIt _Last) {
; 6244 :     // pop *_First to *(_Last - 1) and reheap
; 6245 :     _STD pop_heap(_First, _Last, less<>{});
; 6246 : }
; 6247 : 
; 6248 : #ifdef __cpp_lib_concepts
; 6249 : namespace ranges {
; 6250 :     // VARIABLE ranges::pop_heap
; 6251 :     // clang-format off
; 6252 :     template <random_access_iterator _It, class _Ty, class _Pr, class _Pj1, class _Pj2>
; 6253 :         requires sortable<_It, _Pr, _Pj1> && indirectly_writable<_It, _Ty>
; 6254 :             && indirect_strict_weak_order<_Pr, projected<_It, _Pj1>, projected<remove_reference_t<_Ty>*, _Pj2>>
; 6255 :     constexpr void _Pop_heap_hole_by_index(_It _First, iter_difference_t<_It> _Hole,
; 6256 :         const iter_difference_t<_It> _Bottom, _Ty&& _Val, _Pr _Pred, _Pj1 _Proj1, _Pj2 _Proj2) {
; 6257 :         // clang-format on
; 6258 :         // percolate _Hole to _Bottom, then push _Val
; 6259 :         _STL_INTERNAL_CHECK(_Hole >= 0);
; 6260 :         _STL_INTERNAL_CHECK(_Bottom > 0);
; 6261 : 
; 6262 :         using _Diff      = iter_difference_t<_It>;
; 6263 :         const _Diff _Top = _Hole;
; 6264 :         _Diff _Idx       = _Hole;
; 6265 : 
; 6266 :         // Check whether _Idx can have a child before calculating that child's index, since
; 6267 :         // calculating the child's index can trigger integer overflows
; 6268 :         const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen
; 6269 :         while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child
; 6270 :             _Idx      = 2 * _Idx + 2;
; 6271 :             auto _Mid = _First + _Idx;
; 6272 :             if (_STD invoke(_Pred, _STD invoke(_Proj1, *_Mid), _STD invoke(_Proj1, *_RANGES prev(_Mid)))) {
; 6273 :                 --_Idx;
; 6274 :                 --_Mid;
; 6275 :             }
; 6276 :             *(_First + _Hole) = _RANGES iter_move(_Mid);
; 6277 :             _Hole             = _Idx;
; 6278 :         }
; 6279 : 
; 6280 :         if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it
; 6281 :             *(_First + _Hole) = _RANGES iter_move(_First + (_Bottom - 1));
; 6282 :             _Hole             = _Bottom - 1;
; 6283 :         }
; 6284 : 
; 6285 :         _RANGES _Push_heap_by_index(_STD move(_First), _Hole, _Top, _STD forward<_Ty>(_Val), _Pred, _Proj1, _Proj2);
; 6286 :     }
; 6287 : 
; 6288 :     // clang-format off
; 6289 :     template <random_access_iterator _It, class _Ty, class _Pr, class _Pj1, class _Pj2>
; 6290 :         requires sortable<_It, _Pr, _Pj1> && indirectly_writable<_It, _Ty>
; 6291 :             && indirect_strict_weak_order<_Pr, projected<_It, _Pj1>, projected<remove_reference_t<_Ty>*, _Pj2>>
; 6292 :     constexpr void _Pop_heap_hole_unchecked(
; 6293 :         _It _First, const _It _Last, const _It _Dest, _Ty&& _Val, _Pr _Pred, _Pj1 _Proj1, _Pj2 _Proj2) {
; 6294 :         // clang-format on
; 6295 :         // pop *_First to *_Dest and reheap
; 6296 :         _STL_INTERNAL_CHECK(_First != _Last);
; 6297 :         _STL_INTERNAL_CHECK(_First != _Dest);
; 6298 : 
; 6299 :         *_Dest            = _RANGES iter_move(_First);
; 6300 :         const auto _Count = _Last - _First;
; 6301 :         _RANGES _Pop_heap_hole_by_index(_STD move(_First), 0, _Count, _STD forward<_Ty>(_Val), _Pred, _Proj1, _Proj2);
; 6302 :     }
; 6303 : 
; 6304 :     // clang-format off
; 6305 :     template <random_access_iterator _It, class _Pr, class _Pj>
; 6306 :         requires sortable<_It, _Pr, _Pj>
; 6307 :     constexpr void _Pop_heap_unchecked(_It _First, _It _Last, _Pr _Pred, _Pj _Proj) {
; 6308 :         // clang-format on
; 6309 :         // pop *_First to *(_Last - 1) and reheap
; 6310 :         if (_Last - _First < 2) {
; 6311 :             return;
; 6312 :         }
; 6313 : 
; 6314 :         --_Last;
; 6315 :         iter_value_t<_It> _Val = _RANGES iter_move(_Last);
; 6316 :         // NB: if _Proj is a _Ref_fn, this aliases the _Proj1 and _Proj2 parameters of _Pop_heap_hole_unchecked
; 6317 :         _RANGES _Pop_heap_hole_unchecked(_STD move(_First), _Last, _Last, _STD move(_Val), _Pred, _Proj, _Proj);
; 6318 :     }
; 6319 : 
; 6320 :     class _Pop_heap_fn : private _Not_quite_object {
; 6321 :     public:
; 6322 :         using _Not_quite_object::_Not_quite_object;
; 6323 : 
; 6324 :         // clang-format off
; 6325 :         template <random_access_iterator _It, sentinel_for<_It> _Se, class _Pr = ranges::less, class _Pj = identity>
; 6326 :             requires sortable<_It, _Pr, _Pj>
; 6327 :         constexpr _It operator()(_It _First, _Se _Last, _Pr _Pred = {}, _Pj _Proj = {}) const {
; 6328 :             _Adl_verify_range(_First, _Last);
; 6329 :             auto _UFirst = _Get_unwrapped(_STD move(_First));
; 6330 :             auto _ULast  = _Get_final_iterator_unwrapped<_It>(_UFirst, _STD move(_Last));
; 6331 :             _Seek_wrapped(_First, _ULast);
; 6332 :             _RANGES _Pop_heap_unchecked(_STD move(_UFirst), _STD move(_ULast), _Pass_fn(_Pred), _Pass_fn(_Proj));
; 6333 :             return _First;
; 6334 :         }
; 6335 : 
; 6336 :         template <random_access_range _Rng, class _Pr = ranges::less, class _Pj = identity>
; 6337 :             requires sortable<iterator_t<_Rng>, _Pr, _Pj>
; 6338 :         constexpr borrowed_iterator_t<_Rng> operator()(_Rng&& _Range, _Pr _Pred = {}, _Pj _Proj = {}) const {
; 6339 :             if constexpr (common_range<_Rng>) {
; 6340 :                 _RANGES _Pop_heap_unchecked(_Ubegin(_Range), _Uend(_Range), _Pass_fn(_Pred), _Pass_fn(_Proj));
; 6341 :                 return _RANGES end(_Range);
; 6342 :             } else {
; 6343 :                 auto _ULast = _Get_final_iterator_unwrapped(_Range);
; 6344 :                 _RANGES _Pop_heap_unchecked(_Ubegin(_Range), _ULast, _Pass_fn(_Pred), _Pass_fn(_Proj));
; 6345 :                 return _Rewrap_iterator(_Range, _STD move(_ULast));
; 6346 :             }
; 6347 :         }
; 6348 :         // clang-format on
; 6349 :     };
; 6350 : 
; 6351 :     inline constexpr _Pop_heap_fn pop_heap{_Not_quite_object::_Construct_tag{}};
; 6352 : } // namespace ranges
; 6353 : #endif // __cpp_lib_concepts
; 6354 : 
; 6355 : // FUNCTION TEMPLATE make_heap
; 6356 : template <class _RanIt, class _Pr>
; 6357 : _CONSTEXPR20 void _Make_heap_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {
; 6358 :     // make [_First, _Last) into a heap
; 6359 :     using _Diff   = _Iter_diff_t<_RanIt>;
; 6360 :     _Diff _Bottom = _Last - _First;

  00131	6b c1 0d	 imul	 eax, ecx, 13
  00134	d1 fa		 sar	 edx, 1
  00136	89 55 f8	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], edx
  00139	03 c7		 add	 eax, edi
  0013b	0f 1f 44 00 00	 npad	 5
$LL30@Sort_unche:

; 6362 :         // reheap top half, bottom to top
; 6363 :         --_Hole;
; 6364 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  00140	8b 58 fb	 mov	 ebx, DWORD PTR [eax-5]
  00143	83 e8 0d	 sub	 eax, 13			; 0000000dH
  00146	49		 dec	 ecx
  00147	89 45 e8	 mov	 DWORD PTR tv653[ebp], eax
  0014a	89 5d ec	 mov	 DWORD PTR __Val$3$[ebp], ebx

; 6365 :         _Pop_heap_hole_by_index(_First, _Hole, _Bottom, _STD move(_Val), _Pred);

  0014d	8b d9		 mov	 ebx, ecx
  0014f	89 4d fc	 mov	 DWORD PTR __Hole$1$[ebp], ecx

; 6192 :     _Diff _Idx       = _Hole;

  00152	8b f1		 mov	 esi, ecx

; 6364 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  00154	f3 0f 7e 08	 movq	 xmm1, QWORD PTR [eax]
  00158	8a 40 0c	 mov	 al, BYTE PTR [eax+12]
  0015b	88 45 0b	 mov	 BYTE PTR __Val$1$[ebp], al

; 6197 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  0015e	3b ca		 cmp	 ecx, edx
  00160	7d 43		 jge	 SHORT $LN36@Sort_unche
$LL35@Sort_unche:

; 6198 :         _Idx = 2 * _Idx + 2;

  00162	8d 14 36	 lea	 edx, DWORD PTR [esi+esi]

; 6199 :         if (_DEBUG_LT_PRED(_Pred, *(_First + _Idx), *(_First + (_Idx - 1)))) {

  00165	6b ca 0d	 imul	 ecx, edx, 13

; 6200 :             --_Idx;
; 6201 :         }
; 6202 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  00168	0f b6 44 39 26	 movzx	 eax, BYTE PTR [ecx+edi+38]
  0016d	3a 44 39 19	 cmp	 al, BYTE PTR [ecx+edi+25]
  00171	1b c0		 sbb	 eax, eax
  00173	6b cb 0d	 imul	 ecx, ebx, 13
  00176	8d 70 02	 lea	 esi, DWORD PTR [eax+2]
  00179	03 f2		 add	 esi, edx
  0017b	6b d6 0d	 imul	 edx, esi, 13

; 6203 :         _Hole             = _Idx;

  0017e	8b de		 mov	 ebx, esi
  00180	f3 0f 7e 04 3a	 movq	 xmm0, QWORD PTR [edx+edi]
  00185	66 0f d6 04 39	 movq	 QWORD PTR [ecx+edi], xmm0
  0018a	8b 44 3a 08	 mov	 eax, DWORD PTR [edx+edi+8]
  0018e	89 44 39 08	 mov	 DWORD PTR [ecx+edi+8], eax
  00192	0f b6 44 3a 0c	 movzx	 eax, BYTE PTR [edx+edi+12]
  00197	8b 55 f8	 mov	 edx, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  0019a	88 44 39 0c	 mov	 BYTE PTR [ecx+edi+12], al
  0019e	3b f2		 cmp	 esi, edx
  001a0	7c c0		 jl	 SHORT $LL35@Sort_unche
  001a2	8b 4d fc	 mov	 ecx, DWORD PTR __Hole$1$[ebp]
$LN36@Sort_unche:

; 6204 :     }
; 6205 : 
; 6206 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  001a5	3b da		 cmp	 ebx, edx
  001a7	75 2e		 jne	 SHORT $LN38@Sort_unche
  001a9	8b 45 f4	 mov	 eax, DWORD PTR __Bottom$1$[ebp]
  001ac	a8 01		 test	 al, 1
  001ae	75 27		 jne	 SHORT $LN38@Sort_unche

; 6207 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  001b0	6b c8 0d	 imul	 ecx, eax, 13
  001b3	6b d3 0d	 imul	 edx, ebx, 13

; 6208 :         _Hole             = _Bottom - 1;

  001b6	8b 5d f0	 mov	 ebx, DWORD PTR tv662[ebp]
  001b9	f3 0f 7e 44 39
	f3		 movq	 xmm0, QWORD PTR [ecx+edi-13]
  001bf	66 0f d6 04 3a	 movq	 QWORD PTR [edx+edi], xmm0
  001c4	8b 44 39 fb	 mov	 eax, DWORD PTR [ecx+edi-5]
  001c8	89 44 3a 08	 mov	 DWORD PTR [edx+edi+8], eax
  001cc	8a 44 39 ff	 mov	 al, BYTE PTR [ecx+edi-1]
  001d0	8b 4d fc	 mov	 ecx, DWORD PTR __Hole$1$[ebp]

; 6207 :         *(_First + _Hole) = _STD move(*(_First + (_Bottom - 1)));

  001d3	88 44 3a 0c	 mov	 BYTE PTR [edx+edi+12], al
$LN38@Sort_unche:

; 6077 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  001d7	3b cb		 cmp	 ecx, ebx
  001d9	7d 3a		 jge	 SHORT $LN90@Sort_unche
  001db	0f 1f 44 00 00	 npad	 5
$LL45@Sort_unche:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 142  : 		return rkLeft.display_pos < rkRight.display_pos;

  001e0	8a 45 0b	 mov	 al, BYTE PTR __Val$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6076 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  001e3	8d 53 ff	 lea	 edx, DWORD PTR [ebx-1]
  001e6	d1 fa		 sar	 edx, 1

; 6077 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  001e8	6b f2 0d	 imul	 esi, edx, 13
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 142  : 		return rkLeft.display_pos < rkRight.display_pos;

  001eb	03 f7		 add	 esi, edi
  001ed	38 46 0c	 cmp	 BYTE PTR [esi+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6077 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  001f0	73 23		 jae	 SHORT $LN90@Sort_unche

; 6078 :          _Idx = (_Hole - 1) >> 1) { // shift for codegen
; 6079 :         // move _Hole up to parent
; 6080 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  001f2	f3 0f 7e 06	 movq	 xmm0, QWORD PTR [esi]
  001f6	6b cb 0d	 imul	 ecx, ebx, 13

; 6081 :         _Hole             = _Idx;

  001f9	8b da		 mov	 ebx, edx
  001fb	66 0f d6 04 39	 movq	 QWORD PTR [ecx+edi], xmm0
  00200	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00203	89 44 39 08	 mov	 DWORD PTR [ecx+edi+8], eax
  00207	8a 46 0c	 mov	 al, BYTE PTR [esi+12]
  0020a	88 44 39 0c	 mov	 BYTE PTR [ecx+edi+12], al
  0020e	8b 4d fc	 mov	 ecx, DWORD PTR __Hole$1$[ebp]
  00211	3b ca		 cmp	 ecx, edx
  00213	7c cb		 jl	 SHORT $LL45@Sort_unche
$LN90@Sort_unche:

; 6082 :     }
; 6083 : 
; 6084 :     *(_First + _Hole) = _STD forward<_Ty>(_Val); // drop _Val into final hole

  00215	8b 55 ec	 mov	 edx, DWORD PTR __Val$3$[ebp]
  00218	6b c3 0d	 imul	 eax, ebx, 13
  0021b	66 0f d6 0c 38	 movq	 QWORD PTR [eax+edi], xmm1
  00220	89 54 38 08	 mov	 DWORD PTR [eax+edi+8], edx
  00224	8a 55 0b	 mov	 dl, BYTE PTR __Val$1$[ebp]
  00227	88 54 38 0c	 mov	 BYTE PTR [eax+edi+12], dl

; 6361 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  0022b	8b 45 e8	 mov	 eax, DWORD PTR tv653[ebp]
  0022e	8b 55 f8	 mov	 edx, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
  00231	85 c9		 test	 ecx, ecx
  00233	0f 8f 07 ff ff
	ff		 jg	 $LL30@Sort_unche
  00239	8b 5d e0	 mov	 ebx, DWORD PTR $T3[ebp]
  0023c	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  0023f	8b 45 f4	 mov	 eax, DWORD PTR __Bottom$1$[ebp]
$LN31@Sort_unche:

; 6592 :     for (; _Last - _First >= 2; --_Last) {

  00242	83 f8 02	 cmp	 eax, 2
  00245	0f 8c bc 00 00
	00		 jl	 $LN51@Sort_unche

; 7546 :             _Make_heap_unchecked(_First, _Last, _Pred);
; 7547 :             _Sort_heap_unchecked(_First, _Last, _Pred);

  0024b	83 c6 f3	 add	 esi, -13		; fffffff3H
  0024e	66 90		 npad	 2
$LL52@Sort_unche:

; 6228 :     if (2 <= _Last - _First) {

  00250	b8 4f ec c4 4e	 mov	 eax, 1321528399		; 4ec4ec4fH
  00255	f7 eb		 imul	 ebx
  00257	8b de		 mov	 ebx, esi
  00259	c1 fa 02	 sar	 edx, 2
  0025c	2b df		 sub	 ebx, edi
  0025e	8b c2		 mov	 eax, edx
  00260	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00263	03 c2		 add	 eax, edx
  00265	83 f8 02	 cmp	 eax, 2
  00268	7c 4f		 jl	 SHORT $LN50@Sort_unche

; 6229 :         --_Last;
; 6230 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  0026a	f3 0f 7e 06	 movq	 xmm0, QWORD PTR [esi]
  0026e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 6221 :     _Pop_heap_hole_by_index(

  00271	ff 75 14	 push	 DWORD PTR __Pred$[ebp]

; 6230 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  00274	89 45 e0	 mov	 DWORD PTR __Val$1[ebp+8], eax
  00277	0f b6 46 0c	 movzx	 eax, BYTE PTR [esi+12]
  0027b	88 45 e4	 mov	 BYTE PTR __Val$1[ebp+12], al
  0027e	66 0f d6 45 d8	 movq	 QWORD PTR __Val$1[ebp], xmm0

; 6219 :     *_Dest      = _STD move(*_First);

  00283	f3 0f 7e 07	 movq	 xmm0, QWORD PTR [edi]
  00287	66 0f d6 06	 movq	 QWORD PTR [esi], xmm0
  0028b	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0028e	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00291	0f b6 47 0c	 movzx	 eax, BYTE PTR [edi+12]
  00295	88 46 0c	 mov	 BYTE PTR [esi+12], al

; 6220 :     using _Diff = _Iter_diff_t<_RanIt>;
; 6221 :     _Pop_heap_hole_by_index(

  00298	8d 45 d8	 lea	 eax, DWORD PTR __Val$1[ebp]
  0029b	50		 push	 eax
  0029c	b8 4f ec c4 4e	 mov	 eax, 1321528399		; 4ec4ec4fH
  002a1	f7 eb		 imul	 ebx
  002a3	c1 fa 02	 sar	 edx, 2
  002a6	8b c2		 mov	 eax, edx
  002a8	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  002ab	03 c2		 add	 eax, edx
  002ad	50		 push	 eax
  002ae	6a 00		 push	 0
  002b0	57		 push	 edi
  002b1	e8 00 00 00 00	 call	 ??$_Pop_heap_hole_by_index@PAUSShopItemTable@@U1@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@HH$$QAU1@UItemStockSortFunc@@@Z ; std::_Pop_heap_hole_by_index<SShopItemTable *,SShopItemTable,ItemStockSortFunc>
  002b6	83 c4 14	 add	 esp, 20			; 00000014H
$LN50@Sort_unche:

; 6592 :     for (; _Last - _First >= 2; --_Last) {

  002b9	83 ee 0d	 sub	 esi, 13			; 0000000dH
  002bc	83 fb 1a	 cmp	 ebx, 26			; 0000001aH
  002bf	7d 8f		 jge	 SHORT $LL52@Sort_unche

; 7562 :         }
; 7563 :     }
; 7564 : }

  002c1	5f		 pop	 edi
  002c2	5e		 pop	 esi
  002c3	5b		 pop	 ebx
  002c4	8b e5		 mov	 esp, ebp
  002c6	5d		 pop	 ebp
  002c7	c3		 ret	 0
$LN18@Sort_unche:

; 7421 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  002c8	8d 46 f3	 lea	 eax, DWORD PTR [esi-13]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 142  : 		return rkLeft.display_pos < rkRight.display_pos;

  002cb	3a 5e ff	 cmp	 bl, BYTE PTR [esi-1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7421 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  002ce	73 1e		 jae	 SHORT $LN15@Sort_unche
$LL16@Sort_unche:

; 7422 :                     *_Hole = _STD move(*_Prev); // move hole down

  002d0	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  002d4	66 0f d6 02	 movq	 QWORD PTR [edx], xmm0
  002d8	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  002db	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  002de	8a 48 0c	 mov	 cl, BYTE PTR [eax+12]
  002e1	88 4a 0c	 mov	 BYTE PTR [edx+12], cl
  002e4	8b d0		 mov	 edx, eax
  002e6	83 e8 0d	 sub	 eax, 13			; 0000000dH
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 142  : 		return rkLeft.display_pos < rkRight.display_pos;

  002e9	3a 58 0c	 cmp	 bl, BYTE PTR [eax+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7421 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  002ec	72 e2		 jb	 SHORT $LL16@Sort_unche
$LN15@Sort_unche:

; 7423 :                 }
; 7424 : 
; 7425 :                 *_Hole = _STD move(_Val); // insert element in hole

  002ee	8b 45 08	 mov	 eax, DWORD PTR __Val$3$[ebp]
  002f1	66 0f d6 0a	 movq	 QWORD PTR [edx], xmm1
  002f5	89 42 08	 mov	 DWORD PTR [edx+8], eax
  002f8	88 5a 0c	 mov	 BYTE PTR [edx+12], bl
$LN19@Sort_unche:

; 7413 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  002fb	83 c6 0d	 add	 esi, 13			; 0000000dH
  002fe	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00301	0f 85 bb fd ff
	ff		 jne	 $LL11@Sort_unche
$LN51@Sort_unche:
  00307	5f		 pop	 edi

; 7562 :         }
; 7563 :     }
; 7564 : }

  00308	5e		 pop	 esi
  00309	5b		 pop	 ebx
  0030a	8b e5		 mov	 esp, ebp
  0030c	5d		 pop	 ebp
  0030d	c3		 ret	 0
??$_Sort_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@0HUItemStockSortFunc@@@Z ENDP ; std::_Sort_unchecked<SShopItemTable *,ItemStockSortFunc>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUSShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@YAPAUSShopItemTable@@QAU1@0PAU1@AAV?$allocator@USShopItemTable@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUSShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@YAPAUSShopItemTable@@QAU1@0PAU1@AAV?$allocator@USShopItemTable@@@0@@Z PROC ; std::_Uninitialized_move<SShopItemTable *,std::allocator<SShopItemTable> >, COMDAT

; 1685 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1686 :     // move [_First, _Last) to raw _Dest, using _Al
; 1687 :     // note: only called internally from elsewhere in the STL
; 1688 :     using _Ptrval     = typename _Alloc::value_type*;
; 1689 :     auto _UFirst      = _Get_unwrapped(_First);
; 1690 :     const auto _ULast = _Get_unwrapped(_Last);
; 1691 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1692 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1693 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1694 :         return _Dest + (_ULast - _UFirst);
; 1695 :     } else {
; 1696 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1697 :         for (; _UFirst != _ULast; ++_UFirst) {

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]

; 1535 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00006	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 1685 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00009	56		 push	 esi

; 1686 :     // move [_First, _Last) to raw _Dest, using _Al
; 1687 :     // note: only called internally from elsewhere in the STL
; 1688 :     using _Ptrval     = typename _Alloc::value_type*;
; 1689 :     auto _UFirst      = _Get_unwrapped(_First);
; 1690 :     const auto _ULast = _Get_unwrapped(_Last);
; 1691 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1692 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1693 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1694 :         return _Dest + (_ULast - _UFirst);
; 1695 :     } else {
; 1696 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1697 :         for (; _UFirst != _ULast; ++_UFirst) {

  0000a	8b 75 0c	 mov	 esi, DWORD PTR __Last$[ebp]
  0000d	3b ce		 cmp	 ecx, esi
  0000f	74 1e		 je	 SHORT $LN3@Uninitiali
$LL4@Uninitiali:

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00011	f3 0f 7e 01	 movq	 xmm0, QWORD PTR [ecx]
  00015	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00019	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0001c	89 50 08	 mov	 DWORD PTR [eax+8], edx
  0001f	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]

; 1547 :         ++_Last;

  00022	83 c1 0d	 add	 ecx, 13			; 0000000dH

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00025	88 50 0c	 mov	 BYTE PTR [eax+12], dl

; 1547 :         ++_Last;

  00028	83 c0 0d	 add	 eax, 13			; 0000000dH

; 1686 :     // move [_First, _Last) to raw _Dest, using _Al
; 1687 :     // note: only called internally from elsewhere in the STL
; 1688 :     using _Ptrval     = typename _Alloc::value_type*;
; 1689 :     auto _UFirst      = _Get_unwrapped(_First);
; 1690 :     const auto _ULast = _Get_unwrapped(_Last);
; 1691 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1692 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1693 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1694 :         return _Dest + (_ULast - _UFirst);
; 1695 :     } else {
; 1696 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1697 :         for (; _UFirst != _ULast; ++_UFirst) {

  0002b	3b ce		 cmp	 ecx, esi
  0002d	75 e2		 jne	 SHORT $LL4@Uninitiali
$LN3@Uninitiali:
  0002f	5e		 pop	 esi

; 1698 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1699 :         }
; 1700 : 
; 1701 :         return _Backout._Release();
; 1702 :     }
; 1703 : }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??$_Uninitialized_move@PAUSShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@YAPAUSShopItemTable@@QAU1@0PAU1@AAV?$allocator@USShopItemTable@@@0@@Z ENDP ; std::_Uninitialized_move<SShopItemTable *,std::allocator<SShopItemTable> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USShopItemTable@@@std@@@std@@YAXPAUSShopItemTable@@QAU1@AAV?$allocator@USShopItemTable@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@USShopItemTable@@@std@@@std@@YAXPAUSShopItemTable@@QAU1@AAV?$allocator@USShopItemTable@@@0@@Z PROC ; std::_Destroy_range<std::allocator<SShopItemTable> >, COMDAT

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {
; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@USShopItemTable@@@std@@@std@@YAXPAUSShopItemTable@@QAU1@AAV?$allocator@USShopItemTable@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<SShopItemTable> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 598  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 599  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 20		 push	 32			; 00000020H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??$_Emplace_reallocate@ABUSShopItemTable@@@?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@QAEPAUSShopItemTable@@QAU2@ABU2@@Z
_TEXT	SEGMENT
tv403 = -12						; size = 4
__Oldsize$1$ = -8					; size = 4
__Whereoff$1$ = -4					; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABUSShopItemTable@@@?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@QAEPAUSShopItemTable@@QAU2@ABU2@@Z PROC ; std::vector<SShopItemTable,std::allocator<SShopItemTable> >::_Emplace_reallocate<SShopItemTable const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00006	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
  00009	b8 4f ec c4 4e	 mov	 eax, 1321528399		; 4ec4ec4fH
  0000e	53		 push	 ebx
  0000f	56		 push	 esi
  00010	8b f1		 mov	 esi, ecx
  00012	57		 push	 edi
  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
  00015	2b d7		 sub	 edx, edi

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	f7 ea		 imul	 edx
  0001c	2b cf		 sub	 ecx, edi
  0001e	c1 fa 02	 sar	 edx, 2
  00021	8b c2		 mov	 eax, edx
  00023	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00026	03 c2		 add	 eax, edx
  00028	89 45 fc	 mov	 DWORD PTR __Whereoff$1$[ebp], eax
  0002b	b8 4f ec c4 4e	 mov	 eax, 1321528399		; 4ec4ec4fH
  00030	f7 e9		 imul	 ecx
  00032	c1 fa 02	 sar	 edx, 2
  00035	8b c2		 mov	 eax, edx
  00037	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0003a	03 c2		 add	 eax, edx
  0003c	89 45 f8	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0003f	3d 13 3b b1 13	 cmp	 eax, 330382099		; 13b13b13H
  00044	0f 84 eb 00 00
	00		 je	 $LN41@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0004a	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0004d	8d 58 01	 lea	 ebx, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00050	2b cf		 sub	 ecx, edi
  00052	b8 4f ec c4 4e	 mov	 eax, 1321528399		; 4ec4ec4fH
  00057	f7 e9		 imul	 ecx

; 1620 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00059	b8 13 3b b1 13	 mov	 eax, 330382099		; 13b13b13H

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0005e	c1 fa 02	 sar	 edx, 2
  00061	8b ca		 mov	 ecx, edx
  00063	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00066	03 ca		 add	 ecx, edx

; 1620 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00068	8b d1		 mov	 edx, ecx
  0006a	d1 ea		 shr	 edx, 1
  0006c	2b c2		 sub	 eax, edx
  0006e	3b c8		 cmp	 ecx, eax
  00070	76 43		 jbe	 SHORT $LN12@Emplace_re

; 1621 :             return _Max; // geometric growth would overflow

  00072	b9 13 3b b1 13	 mov	 ecx, 330382099		; 13b13b13H
$LN20@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 65   :     return _Count * _Ty_size;

  00077	6b c1 0d	 imul	 eax, ecx, 13

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007a	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0007b	89 45 f4	 mov	 DWORD PTR tv403[ebp], eax

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007e	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00083	6b 5d fc 0d	 imul	 ebx, DWORD PTR __Whereoff$1$[ebp], 13
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00087	8b f8		 mov	 edi, eax

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00089	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0008c	03 df		 add	 ebx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0008e	83 c4 04	 add	 esp, 4

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00091	f3 0f 7e 01	 movq	 xmm0, QWORD PTR [ecx]
  00095	66 0f d6 03	 movq	 QWORD PTR [ebx], xmm0
  00099	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0009c	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  0009f	8a 41 0c	 mov	 al, BYTE PTR [ecx+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a2	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  000a5	88 43 0c	 mov	 BYTE PTR [ebx+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  000a8	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  000ab	8b 06		 mov	 eax, DWORD PTR [esi]
  000ad	3b ca		 cmp	 ecx, edx
  000af	75 18		 jne	 SHORT $LN4@Emplace_re

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000b1	8b cf		 mov	 ecx, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  000b3	eb 29		 jmp	 SHORT $LN5@Emplace_re
$LN12@Emplace_re:

; 1624 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  000b5	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  000b8	8b cb		 mov	 ecx, ebx
  000ba	3b c3		 cmp	 eax, ebx
  000bc	0f 43 c8	 cmovae	 ecx, eax
  000bf	81 f9 13 3b b1
	13		 cmp	 ecx, 330382099		; 13b13b13H
  000c5	77 73		 ja	 SHORT $LN42@Emplace_re
  000c7	eb ae		 jmp	 SHORT $LN20@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000c9	56		 push	 esi
  000ca	57		 push	 edi
  000cb	51		 push	 ecx
  000cc	50		 push	 eax
  000cd	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@YAPAUSShopItemTable@@QAU1@0PAU1@AAV?$allocator@USShopItemTable@@@0@@Z ; std::_Uninitialized_move<SShopItemTable *,std::allocator<SShopItemTable> >
  000d2	8b 45 08	 mov	 eax, DWORD PTR __Whereptr$[ebp]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000d5	8d 4b 0d	 lea	 ecx, DWORD PTR [ebx+13]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000d8	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  000db	83 c4 10	 add	 esp, 16			; 00000010H
$LN5@Emplace_re:

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000de	56		 push	 esi
  000df	51		 push	 ecx
  000e0	52		 push	 edx
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@YAPAUSShopItemTable@@QAU1@0PAU1@AAV?$allocator@USShopItemTable@@@0@@Z ; std::_Uninitialized_move<SShopItemTable *,std::allocator<SShopItemTable> >

; 1676 :         if (_Myfirst) { // destroy and deallocate old array

  000e7	8b 06		 mov	 eax, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000e9	83 c4 10	 add	 esp, 16			; 00000010H

; 1676 :         if (_Myfirst) { // destroy and deallocate old array

  000ec	85 c0		 test	 eax, eax
  000ee	74 24		 je	 SHORT $LN35@Emplace_re

; 1677 :             _Destroy(_Myfirst, _Mylast);
; 1678 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000f0	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000f3	2b c8		 sub	 ecx, eax
  000f5	b8 4f ec c4 4e	 mov	 eax, 1321528399		; 4ec4ec4fH
  000fa	f7 e9		 imul	 ecx
  000fc	c1 fa 02	 sar	 edx, 2
  000ff	8b c2		 mov	 eax, edx
  00101	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00104	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00106	6b c0 0d	 imul	 eax, eax, 13
  00109	50		 push	 eax
  0010a	ff 36		 push	 DWORD PTR [esi]
  0010c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00111	83 c4 08	 add	 esp, 8
$LN35@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1682 :         _Mylast  = _Newvec + _Newsize;

  00114	8b 45 f8	 mov	 eax, DWORD PTR __Oldsize$1$[ebp]
  00117	40		 inc	 eax
  00118	89 3e		 mov	 DWORD PTR [esi], edi
  0011a	6b c8 0d	 imul	 ecx, eax, 13

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  0011d	8b c3		 mov	 eax, ebx

; 1682 :         _Mylast  = _Newvec + _Newsize;

  0011f	03 cf		 add	 ecx, edi
  00121	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1683 :         _Myend   = _Newvec + _Newcapacity;

  00124	8b 4d f4	 mov	 ecx, DWORD PTR tv403[ebp]
  00127	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  00129	5f		 pop	 edi

; 1683 :         _Myend   = _Newvec + _Newcapacity;

  0012a	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  0012d	5e		 pop	 esi
  0012e	5b		 pop	 ebx

; 767  :     }

  0012f	8b e5		 mov	 esp, ebp
  00131	5d		 pop	 ebp
  00132	c2 08 00	 ret	 8
$LN41@Emplace_re:

; 738  :             _Xlength();

  00135	e8 00 00 00 00	 call	 ?_Xlength@?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@CAXXZ ; std::vector<SShopItemTable,std::allocator<SShopItemTable> >::_Xlength
$LN42@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  0013a	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN39@Emplace_re:
  0013f	cc		 int	 3
??$_Emplace_reallocate@ABUSShopItemTable@@@?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@QAEPAUSShopItemTable@@QAU2@ABU2@@Z ENDP ; std::vector<SShopItemTable,std::allocator<SShopItemTable> >::_Emplace_reallocate<SShopItemTable const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?shopGetTabCoinType@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_bTabIdx$ = -4						; size = 1
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?shopGetTabCoinType@@YAPAU_object@@PAU1@0@Z PROC	; shopGetTabCoinType, COMDAT

; 394  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 395  : 	BYTE bTabIdx;
; 396  : 	if (!PyTuple_GetInteger(poArgs, 0, &bTabIdx))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _bTabIdx$[ebp]
  00007	50		 push	 eax
  00008	6a 00		 push	 0
  0000a	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000d	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAE@Z ; PyTuple_GetInteger
  00012	83 c4 0c	 add	 esp, 12			; 0000000cH
  00015	84 c0		 test	 al, al
  00017	75 0e		 jne	 SHORT $LN2@shopGetTab

; 397  : 		return Py_BuildException();

  00019	6a 00		 push	 0
  0001b	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00020	83 c4 04	 add	 esp, 4

; 400  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
$LN2@shopGetTab:

; 398  : 
; 399  : 	return Py_BuildValue("i", CPythonShop::instance().GetTabCoinType(bTabIdx));

  00027	ff 75 fc	 push	 DWORD PTR _bTabIdx$[ebp]
  0002a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A ; CSingleton<CPythonShop>::ms_singleton
  00030	e8 00 00 00 00	 call	 ?GetTabCoinType@CPythonShop@@QAEEE@Z ; CPythonShop::GetTabCoinType
  00035	0f b6 c0	 movzx	 eax, al
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  0003e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00044	83 c4 08	 add	 esp, 8

; 400  : }

  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?shopGetTabCoinType@@YAPAU_object@@PAU1@0@Z ENDP	; shopGetTabCoinType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?shopGetTabName@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_bTabIdx$ = -4						; size = 1
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?shopGetTabName@@YAPAU_object@@PAU1@0@Z PROC		; shopGetTabName, COMDAT

; 385  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 386  : 	BYTE bTabIdx;
; 387  : 	if (!PyTuple_GetInteger(poArgs, 0, &bTabIdx))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _bTabIdx$[ebp]
  00007	50		 push	 eax
  00008	6a 00		 push	 0
  0000a	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000d	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAE@Z ; PyTuple_GetInteger
  00012	83 c4 0c	 add	 esp, 12			; 0000000cH
  00015	84 c0		 test	 al, al
  00017	75 0e		 jne	 SHORT $LN2@shopGetTab

; 388  : 		return Py_BuildException();

  00019	6a 00		 push	 0
  0001b	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00020	83 c4 04	 add	 esp, 4

; 391  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
$LN2@shopGetTab:

; 389  : 
; 390  : 	return Py_BuildValue("s", CPythonShop::instance().GetTabName(bTabIdx));

  00027	ff 75 fc	 push	 DWORD PTR _bTabIdx$[ebp]
  0002a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A ; CSingleton<CPythonShop>::ms_singleton
  00030	e8 00 00 00 00	 call	 ?GetTabName@CPythonShop@@QAEPBDE@Z ; CPythonShop::GetTabName
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_01LKDEMHDF@s@
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00041	83 c4 08	 add	 esp, 8

; 391  : }

  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
?shopGetTabName@@YAPAU_object@@PAU1@0@Z ENDP		; shopGetTabName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?shopGetTabCount@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?shopGetTabCount@@YAPAU_object@@PAU1@0@Z PROC		; shopGetTabCount, COMDAT

; 381  : 	return Py_BuildValue("i", CPythonShop::instance().GetTabCount());

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A ; CSingleton<CPythonShop>::ms_singleton
  00005	0f b6 40 10	 movzx	 eax, BYTE PTR [eax+16]
  00009	50		 push	 eax
  0000a	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00015	83 c4 08	 add	 esp, 8

; 382  : }

  00018	c3		 ret	 0
?shopGetTabCount@@YAPAU_object@@PAU1@0@Z ENDP		; shopGetTabCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?shopBuildPrivateShop@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_szName$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?shopBuildPrivateShop@@YAPAU_object@@PAU1@0@Z PROC	; shopBuildPrivateShop, COMDAT

; 370  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 371  : 	char * szName;
; 372  : 	if (!PyTuple_GetString(poArgs, 0, &szName))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _szName$[ebp]
  00007	50		 push	 eax
  00008	6a 00		 push	 0
  0000a	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000d	e8 00 00 00 00	 call	 ?PyTuple_GetString@@YA_NPAU_object@@HPAPAD@Z ; PyTuple_GetString
  00012	83 c4 0c	 add	 esp, 12			; 0000000cH
  00015	84 c0		 test	 al, al
  00017	75 0e		 jne	 SHORT $LN2@shopBuildP

; 373  : 		return Py_BuildException();

  00019	6a 00		 push	 0
  0001b	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00020	83 c4 04	 add	 esp, 4

; 377  : }

  00023	8b e5		 mov	 esp, ebp
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
$LN2@shopBuildP:

; 374  : 
; 375  : 	CPythonShop::Instance().BuildPrivateShop(szName);

  00027	ff 75 fc	 push	 DWORD PTR _szName$[ebp]
  0002a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A ; CSingleton<CPythonShop>::ms_singleton
  00030	e8 00 00 00 00	 call	 ?BuildPrivateShop@CPythonShop@@QAEXPBD@Z ; CPythonShop::BuildPrivateShop

; 376  : 	return Py_BuildNone();

  00035	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone

; 377  : }

  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?shopBuildPrivateShop@@YAPAU_object@@PAU1@0@Z ENDP	; shopBuildPrivateShop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?shopGetPrivateShopItemPrice@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
$T1 = -11						; size = 3
_wItemSlotIndex$ = -8					; size = 2
_bItemWindowType$ = -1					; size = 1
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?shopGetPrivateShopItemPrice@@YAPAU_object@@PAU1@0@Z PROC ; shopGetPrivateShopItemPrice, COMDAT

; 358  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 359  : 	BYTE bItemWindowType;
; 360  : 	if (!PyTuple_GetInteger(poArgs, 0, &bItemWindowType))

  00006	8d 45 ff	 lea	 eax, DWORD PTR _bItemWindowType$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAE@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	84 c0		 test	 al, al
  00019	75 0e		 jne	 SHORT $LN2@shopGetPri
$LN7@shopGetPri:

; 368  : }

  0001b	6a 00		 push	 0
  0001d	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00022	83 c4 04	 add	 esp, 4
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
$LN2@shopGetPri:

; 361  : 		return Py_BuildException();
; 362  : 	WORD wItemSlotIndex;
; 363  : 	if (!PyTuple_GetInteger(poArgs, 1, &wItemSlotIndex))

  00029	8d 45 f8	 lea	 eax, DWORD PTR _wItemSlotIndex$[ebp]
  0002c	50		 push	 eax
  0002d	6a 01		 push	 1
  0002f	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00032	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAG@Z ; PyTuple_GetInteger
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	84 c0		 test	 al, al
  0003c	74 dd		 je	 SHORT $LN7@shopGetPri
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h

; 191  :         window_type = _window_type;

  0003e	8a 45 ff	 mov	 al, BYTE PTR _bItemWindowType$[ebp]
  00041	88 45 f5	 mov	 BYTE PTR $T1[ebp], al

; 192  :         cell = _cell;

  00044	0f b7 45 f8	 movzx	 eax, WORD PTR _wItemSlotIndex$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 366  : 	int iValue = CPythonShop::Instance().GetPrivateShopItemPrice(TItemPos(bItemWindowType, wItemSlotIndex));

  00048	51		 push	 ecx
  00049	8b cc		 mov	 ecx, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h

; 192  :         cell = _cell;

  0004b	66 89 45 f6	 mov	 WORD PTR $T1[ebp+1], ax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 366  : 	int iValue = CPythonShop::Instance().GetPrivateShopItemPrice(TItemPos(bItemWindowType, wItemSlotIndex));

  0004f	0f b7 45 f5	 movzx	 eax, WORD PTR $T1[ebp]
  00053	66 89 01	 mov	 WORD PTR [ecx], ax
  00056	8a 45 f7	 mov	 al, BYTE PTR $T1[ebp+2]
  00059	88 41 02	 mov	 BYTE PTR [ecx+2], al
  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A ; CSingleton<CPythonShop>::ms_singleton
  00062	e8 00 00 00 00	 call	 ?GetPrivateShopItemPrice@CPythonShop@@QAEHUSItemPos@@@Z ; CPythonShop::GetPrivateShopItemPrice

; 367  : 	return Py_BuildValue("i", iValue);

  00067	50		 push	 eax
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  0006d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00073	83 c4 08	 add	 esp, 8

; 368  : }

  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
?shopGetPrivateShopItemPrice@@YAPAU_object@@PAU1@0@Z ENDP ; shopGetPrivateShopItemPrice
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?shopDelPrivateShopItemStock@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
$T1 = -11						; size = 3
_wItemSlotIndex$ = -8					; size = 2
_bItemWindowType$ = -1					; size = 1
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?shopDelPrivateShopItemStock@@YAPAU_object@@PAU1@0@Z PROC ; shopDelPrivateShopItemStock, COMDAT

; 346  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 347  : 	BYTE bItemWindowType;
; 348  : 	if (!PyTuple_GetInteger(poArgs, 0, &bItemWindowType))

  00006	8d 45 ff	 lea	 eax, DWORD PTR _bItemWindowType$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAE@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	84 c0		 test	 al, al
  00019	75 0e		 jne	 SHORT $LN2@shopDelPri
$LN7@shopDelPri:

; 356  : }

  0001b	6a 00		 push	 0
  0001d	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00022	83 c4 04	 add	 esp, 4
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
$LN2@shopDelPri:

; 349  : 		return Py_BuildException();
; 350  : 	WORD wItemSlotIndex;
; 351  : 	if (!PyTuple_GetInteger(poArgs, 1, &wItemSlotIndex))

  00029	8d 45 f8	 lea	 eax, DWORD PTR _wItemSlotIndex$[ebp]
  0002c	50		 push	 eax
  0002d	6a 01		 push	 1
  0002f	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00032	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAG@Z ; PyTuple_GetInteger
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	84 c0		 test	 al, al
  0003c	74 dd		 je	 SHORT $LN7@shopDelPri
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h

; 191  :         window_type = _window_type;

  0003e	8a 45 ff	 mov	 al, BYTE PTR _bItemWindowType$[ebp]
  00041	88 45 f5	 mov	 BYTE PTR $T1[ebp], al

; 192  :         cell = _cell;

  00044	0f b7 45 f8	 movzx	 eax, WORD PTR _wItemSlotIndex$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 354  : 	CPythonShop::Instance().DelPrivateShopItemStock(TItemPos(bItemWindowType, wItemSlotIndex));

  00048	51		 push	 ecx
  00049	8b cc		 mov	 ecx, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h

; 192  :         cell = _cell;

  0004b	66 89 45 f6	 mov	 WORD PTR $T1[ebp+1], ax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 354  : 	CPythonShop::Instance().DelPrivateShopItemStock(TItemPos(bItemWindowType, wItemSlotIndex));

  0004f	0f b7 45 f5	 movzx	 eax, WORD PTR $T1[ebp]
  00053	66 89 01	 mov	 WORD PTR [ecx], ax
  00056	8a 45 f7	 mov	 al, BYTE PTR $T1[ebp+2]
  00059	88 41 02	 mov	 BYTE PTR [ecx+2], al
  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A ; CSingleton<CPythonShop>::ms_singleton
  00062	e8 00 00 00 00	 call	 ?DelPrivateShopItemStock@CPythonShop@@QAEXUSItemPos@@@Z ; CPythonShop::DelPrivateShopItemStock

; 355  : 	return Py_BuildNone();

  00067	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone

; 356  : }

  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
?shopDelPrivateShopItemStock@@YAPAU_object@@PAU1@0@Z ENDP ; shopDelPrivateShopItemStock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?shopAddPrivateShopItemStock@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_iDisplaySlotIndex$ = -20				; size = 4
_iPrice$ = -16						; size = 4
$T1 = -11						; size = 3
_wItemSlotIndex$ = -8					; size = 2
_bItemWindowType$ = -1					; size = 1
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?shopAddPrivateShopItemStock@@YAPAU_object@@PAU1@0@Z PROC ; shopAddPrivateShopItemStock, COMDAT

; 328  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 329  : 	BYTE bItemWindowType;
; 330  : 	if (!PyTuple_GetInteger(poArgs, 0, &bItemWindowType))

  00006	8d 45 ff	 lea	 eax, DWORD PTR _bItemWindowType$[ebp]
  00009	56		 push	 esi
  0000a	8b 75 0c	 mov	 esi, DWORD PTR _poArgs$[ebp]
  0000d	50		 push	 eax
  0000e	6a 00		 push	 0
  00010	56		 push	 esi
  00011	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAE@Z ; PyTuple_GetInteger
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
  00019	84 c0		 test	 al, al
  0001b	75 0f		 jne	 SHORT $LN2@shopAddPri
$LN9@shopAddPri:

; 344  : }

  0001d	6a 00		 push	 0
  0001f	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00024	83 c4 04	 add	 esp, 4
  00027	5e		 pop	 esi
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
$LN2@shopAddPri:

; 331  : 		return Py_BuildException();
; 332  : 	WORD wItemSlotIndex;
; 333  : 	if (!PyTuple_GetInteger(poArgs, 1, &wItemSlotIndex))

  0002c	8d 45 f8	 lea	 eax, DWORD PTR _wItemSlotIndex$[ebp]
  0002f	50		 push	 eax
  00030	6a 01		 push	 1
  00032	56		 push	 esi
  00033	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAG@Z ; PyTuple_GetInteger
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003b	84 c0		 test	 al, al
  0003d	74 de		 je	 SHORT $LN9@shopAddPri

; 334  : 		return Py_BuildException();
; 335  : 	int iDisplaySlotIndex;
; 336  : 	if (!PyTuple_GetInteger(poArgs, 2, &iDisplaySlotIndex))

  0003f	8d 45 ec	 lea	 eax, DWORD PTR _iDisplaySlotIndex$[ebp]
  00042	50		 push	 eax
  00043	6a 02		 push	 2
  00045	56		 push	 esi
  00046	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004e	84 c0		 test	 al, al
  00050	74 cb		 je	 SHORT $LN9@shopAddPri

; 337  : 		return Py_BuildException();
; 338  : 	int iPrice;
; 339  : 	if (!PyTuple_GetInteger(poArgs, 3, &iPrice))

  00052	8d 45 f0	 lea	 eax, DWORD PTR _iPrice$[ebp]
  00055	50		 push	 eax
  00056	6a 03		 push	 3
  00058	56		 push	 esi
  00059	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	84 c0		 test	 al, al
  00063	74 b8		 je	 SHORT $LN9@shopAddPri

; 342  : 	CPythonShop::Instance().AddPrivateShopItemStock(TItemPos(bItemWindowType, wItemSlotIndex), iDisplaySlotIndex, iPrice);

  00065	ff 75 f0	 push	 DWORD PTR _iPrice$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h

; 191  :         window_type = _window_type;

  00068	8a 45 ff	 mov	 al, BYTE PTR _bItemWindowType$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 342  : 	CPythonShop::Instance().AddPrivateShopItemStock(TItemPos(bItemWindowType, wItemSlotIndex), iDisplaySlotIndex, iPrice);

  0006b	ff 75 ec	 push	 DWORD PTR _iDisplaySlotIndex$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h

; 191  :         window_type = _window_type;

  0006e	88 45 f5	 mov	 BYTE PTR $T1[ebp], al

; 192  :         cell = _cell;

  00071	0f b7 45 f8	 movzx	 eax, WORD PTR _wItemSlotIndex$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 342  : 	CPythonShop::Instance().AddPrivateShopItemStock(TItemPos(bItemWindowType, wItemSlotIndex), iDisplaySlotIndex, iPrice);

  00075	51		 push	 ecx
  00076	8b cc		 mov	 ecx, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h

; 192  :         cell = _cell;

  00078	66 89 45 f6	 mov	 WORD PTR $T1[ebp+1], ax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 342  : 	CPythonShop::Instance().AddPrivateShopItemStock(TItemPos(bItemWindowType, wItemSlotIndex), iDisplaySlotIndex, iPrice);

  0007c	0f b7 45 f5	 movzx	 eax, WORD PTR $T1[ebp]
  00080	66 89 01	 mov	 WORD PTR [ecx], ax
  00083	8a 45 f7	 mov	 al, BYTE PTR $T1[ebp+2]
  00086	88 41 02	 mov	 BYTE PTR [ecx+2], al
  00089	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A ; CSingleton<CPythonShop>::ms_singleton
  0008f	e8 00 00 00 00	 call	 ?AddPrivateShopItemStock@CPythonShop@@QAEXUSItemPos@@EK@Z ; CPythonShop::AddPrivateShopItemStock

; 343  : 	return Py_BuildNone();

  00094	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone

; 344  : }

  00099	5e		 pop	 esi
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
?shopAddPrivateShopItemStock@@YAPAU_object@@PAU1@0@Z ENDP ; shopAddPrivateShopItemStock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?shopClearPrivateShopStock@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?shopClearPrivateShopStock@@YAPAU_object@@PAU1@0@Z PROC	; shopClearPrivateShopStock, COMDAT

; 324  : 	CPythonShop::Instance().ClearPrivateShopStock();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A ; CSingleton<CPythonShop>::ms_singleton
  00006	e8 00 00 00 00	 call	 ?ClearPrivateShopStock@CPythonShop@@QAEXXZ ; CPythonShop::ClearPrivateShopStock

; 325  : 	return Py_BuildNone();

  0000b	e9 00 00 00 00	 jmp	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone
?shopClearPrivateShopStock@@YAPAU_object@@PAU1@0@Z ENDP	; shopClearPrivateShopStock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?shopGetItemAttribute@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_c_pItemData$1 = -12					; size = 4
_iIndex$ = -8						; size = 4
_iAttrSlotIndex$ = -4					; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?shopGetItemAttribute@@YAPAU_object@@PAU1@0@Z PROC	; shopGetItemAttribute, COMDAT

; 304  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 305  : 	int iIndex;
; 306  : 	if (!PyTuple_GetInteger(poArgs, 0, &iIndex))

  00006	8d 45 f8	 lea	 eax, DWORD PTR _iIndex$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	84 c0		 test	 al, al
  00019	75 0e		 jne	 SHORT $LN2@shopGetIte
$LN8@shopGetIte:

; 320  : }

  0001b	6a 00		 push	 0
  0001d	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00022	83 c4 04	 add	 esp, 4
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
$LN2@shopGetIte:

; 307  : 		return Py_BuildException();
; 308  : 	int iAttrSlotIndex;
; 309  : 	if (!PyTuple_GetInteger(poArgs, 1, &iAttrSlotIndex))

  00029	8d 45 fc	 lea	 eax, DWORD PTR _iAttrSlotIndex$[ebp]
  0002c	50		 push	 eax
  0002d	6a 01		 push	 1
  0002f	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00032	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	84 c0		 test	 al, al
  0003c	74 dd		 je	 SHORT $LN8@shopGetIte

; 310  : 		return Py_BuildException();
; 311  : 
; 312  : 	if (iAttrSlotIndex >= 0 && iAttrSlotIndex < ITEM_ATTRIBUTE_SLOT_MAX_NUM)

  0003e	83 7d fc 06	 cmp	 DWORD PTR _iAttrSlotIndex$[ebp], 6
  00042	77 3d		 ja	 SHORT $LN5@shopGetIte

; 313  : 	{
; 314  : 		const TShopItemData * c_pItemData;
; 315  : 		if (CPythonShop::Instance().GetItemData(iIndex, &c_pItemData))

  00044	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A ; CSingleton<CPythonShop>::ms_singleton
  0004a	8d 45 f4	 lea	 eax, DWORD PTR _c_pItemData$1[ebp]
  0004d	50		 push	 eax
  0004e	ff 75 f8	 push	 DWORD PTR _iIndex$[ebp]
  00051	e8 00 00 00 00	 call	 ?GetItemData@CPythonShop@@QAEHKPAPBUpacket_shop_item@@@Z ; CPythonShop::GetItemData
  00056	85 c0		 test	 eax, eax
  00058	74 27		 je	 SHORT $LN5@shopGetIte

; 316  : 			return Py_BuildValue("ii", c_pItemData->aAttr[iAttrSlotIndex].bType, c_pItemData->aAttr[iAttrSlotIndex].sValue);

  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _iAttrSlotIndex$[ebp]
  0005d	8b 45 f4	 mov	 eax, DWORD PTR _c_pItemData$1[ebp]
  00060	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
  00063	03 c8		 add	 ecx, eax
  00065	0f bf 41 17	 movsx	 eax, WORD PTR [ecx+23]
  00069	50		 push	 eax
  0006a	0f b6 41 16	 movzx	 eax, BYTE PTR [ecx+22]
  0006e	50		 push	 eax

; 320  : }

  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_02PDIHAGKM@ii@
  00074	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
$LN5@shopGetIte:

; 317  : 	}
; 318  : 
; 319  : 	return Py_BuildValue("ii", 0, 0);

  00081	6a 00		 push	 0
  00083	6a 00		 push	 0

; 320  : }

  00085	68 00 00 00 00	 push	 OFFSET ??_C@_02PDIHAGKM@ii@
  0008a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00090	83 c4 0c	 add	 esp, 12			; 0000000cH
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
?shopGetItemAttribute@@YAPAU_object@@PAU1@0@Z ENDP	; shopGetItemAttribute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?shopGetItemMetinSocket@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_c_pItemData$ = -12					; size = 4
_iMetinSocketIndex$ = -8				; size = 4
_iIndex$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?shopGetItemMetinSocket@@YAPAU_object@@PAU1@0@Z PROC	; shopGetItemMetinSocket, COMDAT

; 288  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 289  : 	int iIndex;
; 290  : 	if (!PyTuple_GetInteger(poArgs, 0, &iIndex))

  00006	8d 45 fc	 lea	 eax, DWORD PTR _iIndex$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	84 c0		 test	 al, al
  00019	75 0e		 jne	 SHORT $LN2@shopGetIte
$LN7@shopGetIte:

; 301  : }

  0001b	6a 00		 push	 0
  0001d	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00022	83 c4 04	 add	 esp, 4
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
$LN2@shopGetIte:

; 291  : 		return Py_BuildException();
; 292  : 	int iMetinSocketIndex;
; 293  : 	if (!PyTuple_GetInteger(poArgs, 1, &iMetinSocketIndex))

  00029	8d 45 f8	 lea	 eax, DWORD PTR _iMetinSocketIndex$[ebp]
  0002c	50		 push	 eax
  0002d	6a 01		 push	 1
  0002f	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00032	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	84 c0		 test	 al, al
  0003c	74 dd		 je	 SHORT $LN7@shopGetIte

; 294  : 		return Py_BuildException();
; 295  : 
; 296  : 	const TShopItemData * c_pItemData;
; 297  : 	if (CPythonShop::Instance().GetItemData(iIndex, &c_pItemData))

  0003e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A ; CSingleton<CPythonShop>::ms_singleton
  00044	8d 45 f4	 lea	 eax, DWORD PTR _c_pItemData$[ebp]
  00047	50		 push	 eax
  00048	ff 75 fc	 push	 DWORD PTR _iIndex$[ebp]
  0004b	e8 00 00 00 00	 call	 ?GetItemData@CPythonShop@@QAEHKPAPBUpacket_shop_item@@@Z ; CPythonShop::GetItemData
  00050	85 c0		 test	 eax, eax
  00052	74 1c		 je	 SHORT $LN4@shopGetIte

; 298  : 		return Py_BuildValue("i", c_pItemData->alSockets[iMetinSocketIndex]);

  00054	8b 4d f8	 mov	 ecx, DWORD PTR _iMetinSocketIndex$[ebp]
  00057	8b 45 f4	 mov	 eax, DWORD PTR _c_pItemData$[ebp]
  0005a	ff 74 88 0a	 push	 DWORD PTR [eax+ecx*4+10]

; 301  : }

  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00069	83 c4 08	 add	 esp, 8
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
$LN4@shopGetIte:

; 299  : 
; 300  : 	return Py_BuildValue("i", 0);

  00070	6a 00		 push	 0

; 301  : }

  00072	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0007d	83 c4 08	 add	 esp, 8
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
?shopGetItemMetinSocket@@YAPAU_object@@PAU1@0@Z ENDP	; shopGetItemMetinSocket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?shopGetItemPrice@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_c_pItemData$ = -8					; size = 4
_iIndex$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?shopGetItemPrice@@YAPAU_object@@PAU1@0@Z PROC		; shopGetItemPrice, COMDAT

; 275  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 276  : 	int iIndex;
; 277  : 	if (!PyTuple_GetInteger(poArgs, 0, &iIndex))

  00006	8d 45 fc	 lea	 eax, DWORD PTR _iIndex$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	84 c0		 test	 al, al
  00019	75 0e		 jne	 SHORT $LN2@shopGetIte

; 278  : 		return Py_BuildException();

  0001b	6a 00		 push	 0
  0001d	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00022	83 c4 04	 add	 esp, 4

; 285  : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
$LN2@shopGetIte:

; 279  : 
; 280  : 	const TShopItemData * c_pItemData;
; 281  : 	if (CPythonShop::Instance().GetItemData(iIndex, &c_pItemData))

  00029	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A ; CSingleton<CPythonShop>::ms_singleton
  0002f	8d 45 f8	 lea	 eax, DWORD PTR _c_pItemData$[ebp]
  00032	50		 push	 eax
  00033	ff 75 fc	 push	 DWORD PTR _iIndex$[ebp]
  00036	e8 00 00 00 00	 call	 ?GetItemData@CPythonShop@@QAEHKPAPBUpacket_shop_item@@@Z ; CPythonShop::GetItemData
  0003b	85 c0		 test	 eax, eax
  0003d	74 18		 je	 SHORT $LN3@shopGetIte

; 282  : 		return Py_BuildValue("i", c_pItemData->price);

  0003f	8b 45 f8	 mov	 eax, DWORD PTR _c_pItemData$[ebp]
  00042	ff 70 04	 push	 DWORD PTR [eax+4]

; 285  : }

  00045	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00050	83 c4 08	 add	 esp, 8
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
$LN3@shopGetIte:

; 283  : 
; 284  : 	return Py_BuildValue("i", 0);

  00057	6a 00		 push	 0

; 285  : }

  00059	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00064	83 c4 08	 add	 esp, 8
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
?shopGetItemPrice@@YAPAU_object@@PAU1@0@Z ENDP		; shopGetItemPrice
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?shopGetItemCount@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_c_pItemData$ = -8					; size = 4
_iIndex$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?shopGetItemCount@@YAPAU_object@@PAU1@0@Z PROC		; shopGetItemCount, COMDAT

; 262  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 263  : 	int iIndex;
; 264  : 	if (!PyTuple_GetInteger(poArgs, 0, &iIndex))

  00006	8d 45 fc	 lea	 eax, DWORD PTR _iIndex$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	84 c0		 test	 al, al
  00019	75 0e		 jne	 SHORT $LN2@shopGetIte

; 265  : 		return Py_BuildException();

  0001b	6a 00		 push	 0
  0001d	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00022	83 c4 04	 add	 esp, 4

; 272  : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
$LN2@shopGetIte:

; 266  : 
; 267  : 	const TShopItemData * c_pItemData;
; 268  : 	if (CPythonShop::Instance().GetItemData(iIndex, &c_pItemData))

  00029	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A ; CSingleton<CPythonShop>::ms_singleton
  0002f	8d 45 f8	 lea	 eax, DWORD PTR _c_pItemData$[ebp]
  00032	50		 push	 eax
  00033	ff 75 fc	 push	 DWORD PTR _iIndex$[ebp]
  00036	e8 00 00 00 00	 call	 ?GetItemData@CPythonShop@@QAEHKPAPBUpacket_shop_item@@@Z ; CPythonShop::GetItemData
  0003b	85 c0		 test	 eax, eax
  0003d	74 1a		 je	 SHORT $LN3@shopGetIte

; 269  : 		return Py_BuildValue("i", c_pItemData->count);

  0003f	8b 45 f8	 mov	 eax, DWORD PTR _c_pItemData$[ebp]
  00042	0f b6 40 08	 movzx	 eax, BYTE PTR [eax+8]
  00046	50		 push	 eax

; 272  : }

  00047	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  0004c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00052	83 c4 08	 add	 esp, 8
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
$LN3@shopGetIte:

; 270  : 
; 271  : 	return Py_BuildValue("i", 0);

  00059	6a 00		 push	 0

; 272  : }

  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00066	83 c4 08	 add	 esp, 8
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c3		 ret	 0
?shopGetItemCount@@YAPAU_object@@PAU1@0@Z ENDP		; shopGetItemCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?shopGetItemID@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_c_pItemData$ = -8					; size = 4
_nPos$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?shopGetItemID@@YAPAU_object@@PAU1@0@Z PROC		; shopGetItemID, COMDAT

; 249  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 250  : 	int nPos;
; 251  : 	if (!PyTuple_GetInteger(poArgs, 0, &nPos))

  00006	8d 45 fc	 lea	 eax, DWORD PTR _nPos$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	84 c0		 test	 al, al
  00019	75 0e		 jne	 SHORT $LN2@shopGetIte

; 252  : 		return Py_BuildException();

  0001b	6a 00		 push	 0
  0001d	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00022	83 c4 04	 add	 esp, 4

; 259  : }

  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
$LN2@shopGetIte:

; 253  : 
; 254  : 	const TShopItemData * c_pItemData;
; 255  : 	if (CPythonShop::Instance().GetItemData(nPos, &c_pItemData))

  00029	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A ; CSingleton<CPythonShop>::ms_singleton
  0002f	8d 45 f8	 lea	 eax, DWORD PTR _c_pItemData$[ebp]
  00032	50		 push	 eax
  00033	ff 75 fc	 push	 DWORD PTR _nPos$[ebp]
  00036	e8 00 00 00 00	 call	 ?GetItemData@CPythonShop@@QAEHKPAPBUpacket_shop_item@@@Z ; CPythonShop::GetItemData
  0003b	85 c0		 test	 eax, eax
  0003d	74 17		 je	 SHORT $LN3@shopGetIte

; 256  : 		return Py_BuildValue("i", c_pItemData->vnum);

  0003f	8b 45 f8	 mov	 eax, DWORD PTR _c_pItemData$[ebp]
  00042	ff 30		 push	 DWORD PTR [eax]

; 259  : }

  00044	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0004f	83 c4 08	 add	 esp, 8
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
$LN3@shopGetIte:

; 257  : 
; 258  : 	return Py_BuildValue("i", 0);

  00056	6a 00		 push	 0

; 259  : }

  00058	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00063	83 c4 08	 add	 esp, 8
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
?shopGetItemID@@YAPAU_object@@PAU1@0@Z ENDP		; shopGetItemID
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?shopIsMainPlayerPrivateShop@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?shopIsMainPlayerPrivateShop@@YAPAU_object@@PAU1@0@Z PROC ; shopIsMainPlayerPrivateShop, COMDAT

; 244  : 	CPythonShop& rkShop=CPythonShop::Instance();
; 245  : 	return Py_BuildValue("i", rkShop.IsMainPlayerPrivateShop());

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A ; CSingleton<CPythonShop>::ms_singleton
  00006	e8 00 00 00 00	 call	 ?IsMainPlayerPrivateShop@CPythonShop@@QAEHXZ ; CPythonShop::IsMainPlayerPrivateShop
  0000b	50		 push	 eax
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00017	83 c4 08	 add	 esp, 8

; 246  : }

  0001a	c3		 ret	 0
?shopIsMainPlayerPrivateShop@@YAPAU_object@@PAU1@0@Z ENDP ; shopIsMainPlayerPrivateShop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?shopIsPrviateShop@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?shopIsPrviateShop@@YAPAU_object@@PAU1@0@Z PROC		; shopIsPrviateShop, COMDAT

; 238  : 	CPythonShop& rkShop=CPythonShop::Instance();
; 239  : 	return Py_BuildValue("i", rkShop.IsPrivateShop());

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A ; CSingleton<CPythonShop>::ms_singleton
  00006	e8 00 00 00 00	 call	 ?IsPrivateShop@CPythonShop@@QAEHXZ ; CPythonShop::IsPrivateShop
  0000b	50		 push	 eax
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00017	83 c4 08	 add	 esp, 8

; 240  : }

  0001a	c3		 ret	 0
?shopIsPrviateShop@@YAPAU_object@@PAU1@0@Z ENDP		; shopIsPrviateShop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?shopIsOpen@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?shopIsOpen@@YAPAU_object@@PAU1@0@Z PROC		; shopIsOpen, COMDAT

; 232  : 	CPythonShop& rkShop=CPythonShop::Instance();
; 233  : 	return Py_BuildValue("i", rkShop.IsOpen());

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A ; CSingleton<CPythonShop>::ms_singleton
  00006	e8 00 00 00 00	 call	 ?IsOpen@CPythonShop@@QAEHXZ ; CPythonShop::IsOpen
  0000b	50		 push	 eax
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00017	83 c4 08	 add	 esp, 8

; 234  : }

  0001a	c3		 ret	 0
?shopIsOpen@@YAPAU_object@@PAU1@0@Z ENDP		; shopIsOpen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?shopClose@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?shopClose@@YAPAU_object@@PAU1@0@Z PROC			; shopClose, COMDAT

; 225  : 	CPythonShop& rkShop=CPythonShop::Instance();
; 226  : 	rkShop.Close();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A ; CSingleton<CPythonShop>::ms_singleton
  00006	e8 00 00 00 00	 call	 ?Close@CPythonShop@@QAEXXZ ; CPythonShop::Close

; 227  : 	return Py_BuildNone();

  0000b	e9 00 00 00 00	 jmp	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone
?shopClose@@YAPAU_object@@PAU1@0@Z ENDP			; shopClose
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?shopOpen@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_isPrivateShop$ = -8					; size = 4
_isMainPrivateShop$ = -4				; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?shopOpen@@YAPAU_object@@PAU1@0@Z PROC			; shopOpen, COMDAT

; 212  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 213  : 	int isPrivateShop = false;
; 214  : 	PyTuple_GetInteger(poArgs, 0, &isPrivateShop);

  00006	8d 45 f8	 lea	 eax, DWORD PTR _isPrivateShop$[ebp]
  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _isPrivateShop$[ebp], 0
  00010	50		 push	 eax
  00011	6a 00		 push	 0
  00013	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00016	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger

; 215  : 	int isMainPrivateShop = false;
; 216  : 	PyTuple_GetInteger(poArgs, 1, &isMainPrivateShop);

  0001b	8d 45 fc	 lea	 eax, DWORD PTR _isMainPrivateShop$[ebp]
  0001e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _isMainPrivateShop$[ebp], 0
  00025	50		 push	 eax
  00026	6a 01		 push	 1
  00028	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0002b	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger

; 217  : 
; 218  : 	CPythonShop& rkShop=CPythonShop::Instance();
; 219  : 	rkShop.Open(isPrivateShop, isMainPrivateShop);

  00030	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A ; CSingleton<CPythonShop>::ms_singleton
  00036	83 c4 18	 add	 esp, 24			; 00000018H
  00039	ff 75 fc	 push	 DWORD PTR _isMainPrivateShop$[ebp]
  0003c	ff 75 f8	 push	 DWORD PTR _isPrivateShop$[ebp]
  0003f	e8 00 00 00 00	 call	 ?Open@CPythonShop@@QAEXHH@Z ; CPythonShop::Open

; 220  : 	return Py_BuildNone();

  00044	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone

; 221  : }

  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?shopOpen@@YAPAU_object@@PAU1@0@Z ENDP			; shopOpen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Xlength@?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@CAXXZ PROC ; std::vector<SShopItemTable,std::allocator<SShopItemTable> >::_Xlength, COMDAT

; 1705 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@CAXXZ ENDP ; std::vector<SShopItemTable,std::allocator<SShopItemTable> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@AAEXI@Z
_TEXT	SEGMENT
tv242 = 8						; size = 4
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@AAEXI@Z PROC ; std::vector<SShopItemTable,std::allocator<SShopItemTable> >::_Reallocate_exactly, COMDAT
; _this$ = ecx

; 1251 :     void _Reallocate_exactly(const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 1257 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  00007	b8 4f ec c4 4e	 mov	 eax, 1321528399		; 4ec4ec4fH
  0000c	57		 push	 edi
  0000d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00010	2b 16		 sub	 edx, DWORD PTR [esi]
  00012	f7 ea		 imul	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00014	8b 45 08	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1257 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

  00017	c1 fa 02	 sar	 edx, 2
  0001a	8b da		 mov	 ebx, edx
  0001c	c1 eb 1f	 shr	 ebx, 31			; 0000001fH
  0001f	03 da		 add	 ebx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00021	3d 13 3b b1 13	 cmp	 eax, 330382099		; 13b13b13H
  00026	77 60		 ja	 SHORT $LN26@Reallocate

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00028	6b c0 0d	 imul	 eax, eax, 13

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0002b	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  0002c	89 45 08	 mov	 DWORD PTR tv242[ebp], eax

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0002f	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00034	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00035	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00037	57		 push	 edi
  00038	ff 76 04	 push	 DWORD PTR [esi+4]
  0003b	ff 36		 push	 DWORD PTR [esi]
  0003d	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUSShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@YAPAUSShopItemTable@@QAU1@0PAU1@AAV?$allocator@USShopItemTable@@@0@@Z ; std::_Uninitialized_move<SShopItemTable *,std::allocator<SShopItemTable> >

; 1676 :         if (_Myfirst) { // destroy and deallocate old array

  00042	8b 06		 mov	 eax, DWORD PTR [esi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00044	83 c4 14	 add	 esp, 20			; 00000014H

; 1676 :         if (_Myfirst) { // destroy and deallocate old array

  00047	85 c0		 test	 eax, eax
  00049	74 24		 je	 SHORT $LN20@Reallocate

; 1677 :             _Destroy(_Myfirst, _Mylast);
; 1678 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0004b	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0004e	2b c8		 sub	 ecx, eax
  00050	b8 4f ec c4 4e	 mov	 eax, 1321528399		; 4ec4ec4fH
  00055	f7 e9		 imul	 ecx
  00057	c1 fa 02	 sar	 edx, 2
  0005a	8b c2		 mov	 eax, edx
  0005c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0005f	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00061	6b c0 0d	 imul	 eax, eax, 13
  00064	50		 push	 eax
  00065	ff 36		 push	 DWORD PTR [esi]
  00067	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0006c	83 c4 08	 add	 esp, 8
$LN20@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1682 :         _Mylast  = _Newvec + _Newsize;

  0006f	6b c3 0d	 imul	 eax, ebx, 13
  00072	89 3e		 mov	 DWORD PTR [esi], edi
  00074	03 c7		 add	 eax, edi
  00076	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 1683 :         _Myend   = _Newvec + _Newcapacity;

  00079	8b 45 08	 mov	 eax, DWORD PTR tv242[ebp]
  0007c	03 c7		 add	 eax, edi
  0007e	5f		 pop	 edi
  0007f	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx

; 1269 :     }

  00084	5d		 pop	 ebp
  00085	c2 04 00	 ret	 4
$LN26@Reallocate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  00088	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN24@Reallocate:
  0008d	cc		 int	 3
?_Reallocate_exactly@?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@AAEXI@Z ENDP ; std::vector<SShopItemTable,std::allocator<SShopItemTable> >::_Reallocate_exactly
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??1?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@QAE@XZ PROC ; std::vector<SShopItemTable,std::allocator<SShopItemTable> >::~vector<SShopItemTable,std::allocator<SShopItemTable> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00005	85 c9		 test	 ecx, ecx
  00007	74 37		 je	 SHORT $LN4@vector

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00009	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0000c	b8 4f ec c4 4e	 mov	 eax, 1321528399		; 4ec4ec4fH
  00011	2b d1		 sub	 edx, ecx
  00013	f7 ea		 imul	 edx
  00015	c1 fa 02	 sar	 edx, 2
  00018	8b c2		 mov	 eax, edx
  0001a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001d	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0001f	6b c0 0d	 imul	 eax, eax, 13
  00022	50		 push	 eax
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00029	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0002f	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  00032	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 1700 :             _Myend   = pointer();

  00039	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN4@vector:
  00040	5e		 pop	 esi

; 673  :         _Tidy();
; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  00041	c3		 ret	 0
??1?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@QAE@XZ ENDP ; std::vector<SShopItemTable,std::allocator<SShopItemTable> >::~vector<SShopItemTable,std::allocator<SShopItemTable> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 51   :     _Tree_unchecked_const_iterator& operator++() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  00004	8b 16		 mov	 edx, DWORD PTR [esi]
  00006	8b 7a 08	 mov	 edi, DWORD PTR [edx+8]
  00009	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0000d	74 22		 je	 SHORT $LN4@operator

; 53   :             _Nodeptr _Pnode;
; 54   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  0000f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00012	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00016	75 12		 jne	 SHORT $LN19@operator
$LL2@operator:
  00018	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  0001b	75 0d		 jne	 SHORT $LN19@operator

; 55   :                 _Ptr = _Pnode; // ==> parent while right subtree

  0001d	89 06		 mov	 DWORD PTR [esi], eax
  0001f	8b d0		 mov	 edx, eax
  00021	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00024	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00028	74 ee		 je	 SHORT $LL2@operator
$LN19@operator:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())
; 59   :         } else {
; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree
; 61   :         }
; 62   : 
; 63   :         return *this;

  0002a	89 06		 mov	 DWORD PTR [esi], eax

; 64   :     }

  0002c	8b c6		 mov	 eax, esi
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	c3		 ret	 0
$LN4@operator:

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00031	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00033	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00037	75 13		 jne	 SHORT $LN9@operator
  00039	0f 1f 80 00 00
	00 00		 npad	 7
$LL8@operator:
  00040	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  00042	8b f9		 mov	 edi, ecx
  00044	8b c8		 mov	 ecx, eax
  00046	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0004a	74 f4		 je	 SHORT $LL8@operator
$LN9@operator:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())
; 59   :         } else {
; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree
; 61   :         }
; 62   : 
; 63   :         return *this;

  0004c	89 3e		 mov	 DWORD PTR [esi], edi

; 64   :     }

  0004e	8b c6		 mov	 eax, esi
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCPythonShop@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCPythonShop@@UAEPAXI@Z PROC				; CPythonShop::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CPythonShop@@UAE@XZ	; CPythonShop::~CPythonShop
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 98 14 00 00	 push	 5272			; 00001498H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCPythonShop@@UAEPAXI@Z ENDP				; CPythonShop::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
tv1186 = -8						; size = 4
tv1182 = -8						; size = 4
tv1149 = -8						; size = 4
__Erasednode$1$ = -4					; size = 4
__Where$ = 8						; size = 4
?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Extract, COMDAT
; _this$ = ecx

; 502  :     _Nodeptr _Extract(_Unchecked_const_iterator _Where) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 503  :         _Nodeptr _Erasednode = _Where._Ptr; // node to erase

  00006	8b 45 08	 mov	 eax, DWORD PTR __Where$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b d9		 mov	 ebx, ecx
  0000d	89 45 fc	 mov	 DWORD PTR __Erasednode$1$[ebp], eax
  00010	57		 push	 edi

; 504  :         ++_Where; // save successor iterator for return

  00011	8d 4d 08	 lea	 ecx, DWORD PTR __Where$[ebp]
  00014	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >,std::_Iterator_base0>::operator++

; 505  : 
; 506  :         _Nodeptr _Fixnode; // the node to recolor as needed
; 507  :         _Nodeptr _Fixnodeparent; // parent of _Fixnode (which may be nil)
; 508  :         _Nodeptr _Pnode = _Erasednode;
; 509  : 
; 510  :         if (_Pnode->_Left->_Isnil) {

  00019	8b 55 fc	 mov	 edx, DWORD PTR __Erasednode$1$[ebp]
  0001c	8b 02		 mov	 eax, DWORD PTR [edx]
  0001e	8b 7a 08	 mov	 edi, DWORD PTR [edx+8]
  00021	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00025	75 18		 jne	 SHORT $LN86@Extract

; 511  :             _Fixnode = _Pnode->_Right; // stitch up right subtree
; 512  :         } else if (_Pnode->_Right->_Isnil) {

  00027	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0002b	74 04		 je	 SHORT $LN7@Extract

; 513  :             _Fixnode = _Pnode->_Left; // stitch up left subtree

  0002d	8b f8		 mov	 edi, eax

; 514  :         } else { // two subtrees, must lift successor node to replace erased

  0002f	eb 0e		 jmp	 SHORT $LN86@Extract
$LN7@Extract:

; 515  :             _Pnode   = _Where._Ptr; // _Pnode is successor node

  00031	8b 4d 08	 mov	 ecx, DWORD PTR __Where$[ebp]

; 516  :             _Fixnode = _Pnode->_Right; // _Fixnode is only subtree

  00034	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  00037	3b ca		 cmp	 ecx, edx

; 517  :         }
; 518  : 
; 519  :         if (_Pnode == _Erasednode) { // at most one subtree, relink it

  00039	0f 85 8b 00 00
	00		 jne	 $LN9@Extract
$LN86@Extract:

; 520  :             _Fixnodeparent = _Erasednode->_Parent;
; 521  :             if (!_Fixnode->_Isnil) {

  0003f	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00043	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  00046	75 03		 jne	 SHORT $LN11@Extract

; 522  :                 _Fixnode->_Parent = _Fixnodeparent; // link up

  00048	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN11@Extract:

; 523  :             }
; 524  : 
; 525  :             if (_Myhead->_Parent == _Erasednode) {

  0004b	8b 03		 mov	 eax, DWORD PTR [ebx]
  0004d	39 50 04	 cmp	 DWORD PTR [eax+4], edx
  00050	75 05		 jne	 SHORT $LN12@Extract

; 526  :                 _Myhead->_Parent = _Fixnode; // link down from root

  00052	89 78 04	 mov	 DWORD PTR [eax+4], edi
  00055	eb 0b		 jmp	 SHORT $LN15@Extract
$LN12@Extract:

; 527  :             } else if (_Fixnodeparent->_Left == _Erasednode) {

  00057	39 16		 cmp	 DWORD PTR [esi], edx
  00059	75 04		 jne	 SHORT $LN14@Extract

; 528  :                 _Fixnodeparent->_Left = _Fixnode; // link down to left

  0005b	89 3e		 mov	 DWORD PTR [esi], edi

; 529  :             } else {

  0005d	eb 03		 jmp	 SHORT $LN15@Extract
$LN14@Extract:

; 530  :                 _Fixnodeparent->_Right = _Fixnode; // link down to right

  0005f	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$LN15@Extract:

; 531  :             }
; 532  : 
; 533  :             if (_Myhead->_Left == _Erasednode) {

  00062	8b 03		 mov	 eax, DWORD PTR [ebx]
  00064	39 10		 cmp	 DWORD PTR [eax], edx
  00066	75 2b		 jne	 SHORT $LN16@Extract

; 534  :                 _Myhead->_Left = _Fixnode->_Isnil ? _Fixnodeparent // smallest is parent of erased node

  00068	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0006c	74 04		 je	 SHORT $LN42@Extract
  0006e	8b d6		 mov	 edx, esi
  00070	eb 1c		 jmp	 SHORT $LN48@Extract
$LN42@Extract:

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00072	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 534  :                 _Myhead->_Left = _Fixnode->_Isnil ? _Fixnodeparent // smallest is parent of erased node

  00074	8b d7		 mov	 edx, edi

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00076	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0007a	75 12		 jne	 SHORT $LN48@Extract
  0007c	0f 1f 40 00	 npad	 4
$LL47@Extract:
  00080	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  00082	8b d1		 mov	 edx, ecx
  00084	8b c8		 mov	 ecx, eax
  00086	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0008a	74 f4		 je	 SHORT $LL47@Extract
  0008c	8b 03		 mov	 eax, DWORD PTR [ebx]
$LN48@Extract:

; 534  :                 _Myhead->_Left = _Fixnode->_Isnil ? _Fixnodeparent // smallest is parent of erased node

  0008e	89 10		 mov	 DWORD PTR [eax], edx
  00090	8b 55 fc	 mov	 edx, DWORD PTR __Erasednode$1$[ebp]
$LN16@Extract:

; 535  :                                                   : _Min(_Fixnode); // smallest in relinked subtree
; 536  :             }
; 537  : 
; 538  :             if (_Myhead->_Right == _Erasednode) {

  00093	8b 03		 mov	 eax, DWORD PTR [ebx]
  00095	39 50 08	 cmp	 DWORD PTR [eax+8], edx
  00098	75 2b		 jne	 SHORT $LN17@Extract

; 539  :                 _Myhead->_Right = _Fixnode->_Isnil ? _Fixnodeparent // largest is parent of erased node

  0009a	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0009e	74 0a		 je	 SHORT $LN44@Extract
  000a0	8b ce		 mov	 ecx, esi
  000a2	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 540  :                                                    : _Max(_Fixnode); // largest in relinked subtree
; 541  :             }
; 542  :         } else { // erased has two subtrees, _Pnode is successor to erased

  000a5	8a 52 0c	 mov	 dl, BYTE PTR [edx+12]
  000a8	eb 7c		 jmp	 SHORT $LN55@Extract
$LN44@Extract:

; 443  :         while (!_Pnode->_Right->_Isnil) {

  000aa	8b 47 08	 mov	 eax, DWORD PTR [edi+8]

; 539  :                 _Myhead->_Right = _Fixnode->_Isnil ? _Fixnodeparent // largest is parent of erased node

  000ad	8b cf		 mov	 ecx, edi

; 443  :         while (!_Pnode->_Right->_Isnil) {

  000af	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000b3	75 0b		 jne	 SHORT $LN52@Extract
$LL51@Extract:

; 444  :             _Pnode = _Pnode->_Right;

  000b5	8b c8		 mov	 ecx, eax
  000b7	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000ba	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000be	74 f5		 je	 SHORT $LL51@Extract
$LN52@Extract:
  000c0	8b 03		 mov	 eax, DWORD PTR [ebx]

; 539  :                 _Myhead->_Right = _Fixnode->_Isnil ? _Fixnodeparent // largest is parent of erased node

  000c2	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN17@Extract:

; 540  :                                                    : _Max(_Fixnode); // largest in relinked subtree
; 541  :             }
; 542  :         } else { // erased has two subtrees, _Pnode is successor to erased

  000c5	8a 52 0c	 mov	 dl, BYTE PTR [edx+12]
  000c8	eb 5c		 jmp	 SHORT $LN55@Extract
$LN9@Extract:

; 543  :             _Erasednode->_Left->_Parent = _Pnode; // link left up

  000ca	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 544  :             _Pnode->_Left               = _Erasednode->_Left; // link successor down

  000cd	8b 02		 mov	 eax, DWORD PTR [edx]
  000cf	89 01		 mov	 DWORD PTR [ecx], eax

; 545  : 
; 546  :             if (_Pnode == _Erasednode->_Right) {

  000d1	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  000d4	75 04		 jne	 SHORT $LN18@Extract

; 547  :                 _Fixnodeparent = _Pnode; // successor is next to erased

  000d6	8b f1		 mov	 esi, ecx

; 548  :             } else { // successor further down, link in place of erased

  000d8	eb 1a		 jmp	 SHORT $LN19@Extract
$LN18@Extract:

; 549  :                 _Fixnodeparent = _Pnode->_Parent; // parent is successor's
; 550  :                 if (!_Fixnode->_Isnil) {

  000da	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  000de	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  000e1	75 03		 jne	 SHORT $LN20@Extract

; 551  :                     _Fixnode->_Parent = _Fixnodeparent; // link fix up

  000e3	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN20@Extract:

; 552  :                 }
; 553  : 
; 554  :                 _Fixnodeparent->_Left        = _Fixnode; // link fix down

  000e6	89 3e		 mov	 DWORD PTR [esi], edi

; 555  :                 _Pnode->_Right               = _Erasednode->_Right; // link next down

  000e8	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000eb	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 556  :                 _Erasednode->_Right->_Parent = _Pnode; // right up

  000ee	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000f1	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN19@Extract:

; 557  :             }
; 558  : 
; 559  :             if (_Myhead->_Parent == _Erasednode) {

  000f4	8b 03		 mov	 eax, DWORD PTR [ebx]
  000f6	39 50 04	 cmp	 DWORD PTR [eax+4], edx
  000f9	75 05		 jne	 SHORT $LN21@Extract

; 560  :                 _Myhead->_Parent = _Pnode; // link down from root

  000fb	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  000fe	eb 0e		 jmp	 SHORT $LN24@Extract
$LN21@Extract:

; 561  :             } else if (_Erasednode->_Parent->_Left == _Erasednode) {

  00100	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00103	39 10		 cmp	 DWORD PTR [eax], edx
  00105	75 04		 jne	 SHORT $LN23@Extract

; 562  :                 _Erasednode->_Parent->_Left = _Pnode; // link down to left

  00107	89 08		 mov	 DWORD PTR [eax], ecx

; 563  :             } else {

  00109	eb 03		 jmp	 SHORT $LN24@Extract
$LN23@Extract:

; 564  :                 _Erasednode->_Parent->_Right = _Pnode; // link down to right

  0010b	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN24@Extract:

; 567  :             _Pnode->_Parent = _Erasednode->_Parent; // link successor up

  0010e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 104  :     _Ty _Tmp = _STD move(_Left);

  00111	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 567  :             _Pnode->_Parent = _Erasednode->_Parent; // link successor up

  00114	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 105  :     _Left    = _STD move(_Right);

  00117	8b 45 fc	 mov	 eax, DWORD PTR __Erasednode$1$[ebp]
  0011a	8a 40 0c	 mov	 al, BYTE PTR [eax+12]
  0011d	88 41 0c	 mov	 BYTE PTR [ecx+12], al

; 106  :     _Right   = _STD move(_Tmp);

  00120	8b 45 fc	 mov	 eax, DWORD PTR __Erasednode$1$[ebp]
  00123	88 50 0c	 mov	 BYTE PTR [eax+12], dl
$LN55@Extract:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 571  :         if (_Erasednode->_Color == _Black) { // erasing black link, must recolor/rebalance tree

  00126	80 fa 01	 cmp	 dl, 1
  00129	0f 85 46 01 00
	00		 jne	 $LN25@Extract

; 572  :             for (; _Fixnode != _Myhead->_Parent && _Fixnode->_Color == _Black; _Fixnodeparent = _Fixnode->_Parent) {

  0012f	8b 03		 mov	 eax, DWORD PTR [ebx]
  00131	3b 78 04	 cmp	 edi, DWORD PTR [eax+4]
  00134	0f 84 37 01 00
	00		 je	 $LN3@Extract
  0013a	66 0f 1f 44 00
	00		 npad	 6
$LL4@Extract:
  00140	80 7f 0c 01	 cmp	 BYTE PTR [edi+12], 1
  00144	89 75 f8	 mov	 DWORD PTR tv1186[ebp], esi
  00147	0f 85 24 01 00
	00		 jne	 $LN3@Extract

; 573  :                 if (_Fixnode == _Fixnodeparent->_Left) { // fixup left subtree

  0014d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0014f	3b f9		 cmp	 edi, ecx
  00151	0f 85 a2 00 00
	00		 jne	 $LN26@Extract

; 574  :                     _Pnode = _Fixnodeparent->_Right;

  00157	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 575  :                     if (_Pnode->_Color == _Red) { // rotate red up from right subtree

  0015a	80 79 0c 00	 cmp	 BYTE PTR [ecx+12], 0
  0015e	75 43		 jne	 SHORT $LN87@Extract

; 576  :                         _Pnode->_Color         = _Black;

  00160	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  00164	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 577  :                         _Fixnodeparent->_Color = _Red;

  00167	c6 46 0c 00	 mov	 BYTE PTR [esi+12], 0

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0016b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0016d	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00170	8b 01		 mov	 eax, DWORD PTR [ecx]
  00172	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00176	75 03		 jne	 SHORT $LN57@Extract

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00178	89 70 04	 mov	 DWORD PTR [eax+4], esi
$LN57@Extract:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0017b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0017e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  00181	8b 03		 mov	 eax, DWORD PTR [ebx]
  00183	3b 70 04	 cmp	 esi, DWORD PTR [eax+4]
  00186	75 05		 jne	 SHORT $LN58@Extract

; 469  :             _Myhead->_Parent = _Pnode;

  00188	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0018b	eb 0e		 jmp	 SHORT $LN61@Extract
$LN58@Extract:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  0018d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00190	3b 30		 cmp	 esi, DWORD PTR [eax]
  00192	75 04		 jne	 SHORT $LN60@Extract

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  00194	89 08		 mov	 DWORD PTR [eax], ecx

; 472  :         } else {

  00196	eb 03		 jmp	 SHORT $LN61@Extract
$LN60@Extract:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  00198	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN61@Extract:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  0019b	89 31		 mov	 DWORD PTR [ecx], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  0019d	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 578  :                         _Lrotate(_Fixnodeparent);
; 579  :                         _Pnode = _Fixnodeparent->_Right;

  001a0	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
$LN87@Extract:

; 580  :                     }
; 581  : 
; 582  :                     if (_Pnode->_Isnil) {

  001a3	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  001a7	0f 85 b1 00 00
	00		 jne	 $LN2@Extract

; 583  :                         _Fixnode = _Fixnodeparent; // shouldn't happen
; 584  :                     } else if (_Pnode->_Left->_Color == _Black
; 585  :                                && _Pnode->_Right->_Color == _Black) { // redden right subtree with black children

  001ad	8b 11		 mov	 edx, DWORD PTR [ecx]
  001af	80 7a 0c 01	 cmp	 BYTE PTR [edx+12], 1
  001b3	75 0d		 jne	 SHORT $LN89@Extract
  001b5	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  001b8	80 78 0c 01	 cmp	 BYTE PTR [eax+12], 1
  001bc	0f 84 98 00 00
	00		 je	 $LN93@Extract
$LN89@Extract:

; 586  :                         _Pnode->_Color = _Red;
; 587  :                         _Fixnode       = _Fixnodeparent;
; 588  :                     } else { // must rearrange right subtree
; 589  :                         if (_Pnode->_Right->_Color == _Black) { // rotate red up from left sub-subtree

  001c2	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  001c5	80 78 0c 01	 cmp	 BYTE PTR [eax+12], 1
  001c9	75 13		 jne	 SHORT $LN33@Extract

; 590  :                             _Pnode->_Left->_Color = _Black;

  001cb	c6 42 0c 01	 mov	 BYTE PTR [edx+12], 1

; 591  :                             _Pnode->_Color        = _Red;

  001cf	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0

; 592  :                             _Rrotate(_Pnode);

  001d3	51		 push	 ecx
  001d4	8b cb		 mov	 ecx, ebx
  001d6	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Rrotate

; 593  :                             _Pnode = _Fixnodeparent->_Right;

  001db	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
$LN33@Extract:

; 594  :                         }
; 595  : 
; 596  :                         _Pnode->_Color         = _Fixnodeparent->_Color;

  001de	8a 46 0c	 mov	 al, BYTE PTR [esi+12]
  001e1	88 41 0c	 mov	 BYTE PTR [ecx+12], al

; 597  :                         _Fixnodeparent->_Color = _Black;

  001e4	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 598  :                         _Pnode->_Right->_Color = _Black;

  001e8	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 599  :                         _Lrotate(_Fixnodeparent);

  001eb	8b cb		 mov	 ecx, ebx
  001ed	56		 push	 esi
  001ee	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  001f2	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Lrotate

; 600  :                         break; // tree now recolored/rebalanced

  001f7	eb 78		 jmp	 SHORT $LN3@Extract
$LN26@Extract:

; 601  :                     }
; 602  :                 } else { // fixup right subtree
; 603  :                     _Pnode = _Fixnodeparent->_Left;
; 604  :                     if (_Pnode->_Color == _Red) { // rotate red up from left subtree

  001f9	80 79 0c 00	 cmp	 BYTE PTR [ecx+12], 0
  001fd	75 44		 jne	 SHORT $LN88@Extract

; 605  :                         _Pnode->_Color         = _Black;

  001ff	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00203	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 606  :                         _Fixnodeparent->_Color = _Red;

  00205	c6 46 0c 00	 mov	 BYTE PTR [esi+12], 0

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  00209	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0020c	89 06		 mov	 DWORD PTR [esi], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  0020e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00211	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00215	75 03		 jne	 SHORT $LN64@Extract

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00217	89 70 04	 mov	 DWORD PTR [eax+4], esi
$LN64@Extract:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0021a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0021d	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00220	8b 03		 mov	 eax, DWORD PTR [ebx]
  00222	3b 70 04	 cmp	 esi, DWORD PTR [eax+4]
  00225	75 05		 jne	 SHORT $LN65@Extract

; 491  :             _Myhead->_Parent = _Pnode;

  00227	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0022a	eb 0f		 jmp	 SHORT $LN68@Extract
$LN65@Extract:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  0022c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0022f	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00232	75 05		 jne	 SHORT $LN67@Extract

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00234	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  00237	eb 02		 jmp	 SHORT $LN68@Extract
$LN67@Extract:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00239	89 08		 mov	 DWORD PTR [eax], ecx
$LN68@Extract:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0023b	89 71 08	 mov	 DWORD PTR [ecx+8], esi

; 499  :         _Wherenode->_Parent = _Pnode;

  0023e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 607  :                         _Rrotate(_Fixnodeparent);
; 608  :                         _Pnode = _Fixnodeparent->_Left;

  00241	8b 0e		 mov	 ecx, DWORD PTR [esi]
$LN88@Extract:

; 609  :                     }
; 610  : 
; 611  :                     if (_Pnode->_Isnil) {

  00243	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00247	75 15		 jne	 SHORT $LN2@Extract

; 612  :                         _Fixnode = _Fixnodeparent; // shouldn't happen
; 613  :                     } else if (_Pnode->_Right->_Color == _Black
; 614  :                                && _Pnode->_Left->_Color == _Black) { // redden left subtree with black children

  00249	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0024c	80 7a 0c 01	 cmp	 BYTE PTR [edx+12], 1
  00250	75 3a		 jne	 SHORT $LN90@Extract
  00252	8b 01		 mov	 eax, DWORD PTR [ecx]
  00254	80 78 0c 01	 cmp	 BYTE PTR [eax+12], 1
  00258	75 32		 jne	 SHORT $LN90@Extract
$LN93@Extract:

; 572  :             for (; _Fixnode != _Myhead->_Parent && _Fixnode->_Color == _Black; _Fixnodeparent = _Fixnode->_Parent) {

  0025a	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0
$LN2@Extract:
  0025e	8b 03		 mov	 eax, DWORD PTR [ebx]
  00260	8b 4d f8	 mov	 ecx, DWORD PTR tv1186[ebp]
  00263	8b f9		 mov	 edi, ecx
  00265	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00268	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  0026b	0f 85 cf fe ff
	ff		 jne	 $LL4@Extract
$LN3@Extract:

; 629  :                         break; // tree now recolored/rebalanced
; 630  :                     }
; 631  :                 }
; 632  :             }
; 633  : 
; 634  :             _Fixnode->_Color = _Black; // stopping node is black

  00271	c6 47 0c 01	 mov	 BYTE PTR [edi+12], 1
$LN25@Extract:

; 635  :         }
; 636  : 
; 637  :         if (0 < _Mysize) {

  00275	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00278	8b 45 fc	 mov	 eax, DWORD PTR __Erasednode$1$[ebp]
  0027b	85 c9		 test	 ecx, ecx
  0027d	74 04		 je	 SHORT $LN40@Extract

; 638  :             --_Mysize;

  0027f	49		 dec	 ecx
  00280	89 4b 04	 mov	 DWORD PTR [ebx+4], ecx
$LN40@Extract:

; 639  :         }
; 640  : 
; 641  :         return _Erasednode;
; 642  :     }

  00283	5f		 pop	 edi
  00284	5e		 pop	 esi
  00285	5b		 pop	 ebx
  00286	8b e5		 mov	 esp, ebp
  00288	5d		 pop	 ebp
  00289	c2 04 00	 ret	 4
$LN90@Extract:

; 615  :                         _Pnode->_Color = _Red;
; 616  :                         _Fixnode       = _Fixnodeparent;
; 617  :                     } else { // must rearrange left subtree
; 618  :                         if (_Pnode->_Left->_Color == _Black) { // rotate red up from right sub-subtree

  0028c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0028e	80 78 0c 01	 cmp	 BYTE PTR [eax+12], 1
  00292	75 12		 jne	 SHORT $LN39@Extract

; 619  :                             _Pnode->_Right->_Color = _Black;

  00294	c6 42 0c 01	 mov	 BYTE PTR [edx+12], 1

; 620  :                             _Pnode->_Color         = _Red;

  00298	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0

; 621  :                             _Lrotate(_Pnode);

  0029c	51		 push	 ecx
  0029d	8b cb		 mov	 ecx, ebx
  0029f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Lrotate

; 622  :                             _Pnode = _Fixnodeparent->_Left;

  002a4	8b 0e		 mov	 ecx, DWORD PTR [esi]
$LN39@Extract:

; 623  :                         }
; 624  : 
; 625  :                         _Pnode->_Color         = _Fixnodeparent->_Color;

  002a6	8a 46 0c	 mov	 al, BYTE PTR [esi+12]
  002a9	88 41 0c	 mov	 BYTE PTR [ecx+12], al

; 626  :                         _Fixnodeparent->_Color = _Black;

  002ac	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 627  :                         _Pnode->_Left->_Color  = _Black;

  002b0	8b 01		 mov	 eax, DWORD PTR [ecx]

; 628  :                         _Rrotate(_Fixnodeparent);

  002b2	8b cb		 mov	 ecx, ebx
  002b4	56		 push	 esi
  002b5	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  002b9	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Rrotate
  002be	eb b1		 jmp	 SHORT $LN3@Extract
?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Extract
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Rrotate, COMDAT
; _this$ = ecx

; 480  :     void _Rrotate(_Nodeptr _Wherenode) noexcept { // promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  0000e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00011	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00015	75 03		 jne	 SHORT $LN2@Rrotate

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN2@Rrotate:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0001a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0001d	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00020	8b 01		 mov	 eax, DWORD PTR [ecx]
  00022	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00025	75 0e		 jne	 SHORT $LN3@Rrotate

; 491  :             _Myhead->_Parent = _Pnode;

  00027	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;
; 499  :         _Wherenode->_Parent = _Pnode;
; 500  :     }

  0002a	89 56 08	 mov	 DWORD PTR [esi+8], edx
  0002d	89 72 04	 mov	 DWORD PTR [edx+4], esi
  00030	5e		 pop	 esi
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
$LN3@Rrotate:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00035	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00038	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  0003b	75 0e		 jne	 SHORT $LN5@Rrotate

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0003d	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;
; 499  :         _Wherenode->_Parent = _Pnode;
; 500  :     }

  00040	89 56 08	 mov	 DWORD PTR [esi+8], edx
  00043	89 72 04	 mov	 DWORD PTR [edx+4], esi
  00046	5e		 pop	 esi
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN5@Rrotate:

; 494  :         } else {
; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0004b	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;
; 499  :         _Wherenode->_Parent = _Pnode;
; 500  :     }

  0004d	89 56 08	 mov	 DWORD PTR [esi+8], edx
  00050	89 72 04	 mov	 DWORD PTR [edx+4], esi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Rrotate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Lrotate, COMDAT
; _this$ = ecx

; 458  :     void _Lrotate(_Nodeptr _Wherenode) noexcept { // promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	56		 push	 esi
  00007	8b 72 08	 mov	 esi, DWORD PTR [edx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0000a	8b 06		 mov	 eax, DWORD PTR [esi]
  0000c	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  0000f	8b 06		 mov	 eax, DWORD PTR [esi]
  00011	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00015	75 03		 jne	 SHORT $LN2@Lrotate

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN2@Lrotate:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0001a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0001d	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  00020	8b 01		 mov	 eax, DWORD PTR [ecx]
  00022	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00025	75 0d		 jne	 SHORT $LN3@Lrotate

; 469  :             _Myhead->_Parent = _Pnode;

  00027	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;
; 477  :         _Wherenode->_Parent = _Pnode;
; 478  :     }

  0002a	89 16		 mov	 DWORD PTR [esi], edx
  0002c	89 72 04	 mov	 DWORD PTR [edx+4], esi
  0002f	5e		 pop	 esi
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
$LN3@Lrotate:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  00034	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00037	3b 10		 cmp	 edx, DWORD PTR [eax]
  00039	75 0c		 jne	 SHORT $LN5@Lrotate

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  0003b	89 30		 mov	 DWORD PTR [eax], esi

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;
; 477  :         _Wherenode->_Parent = _Pnode;
; 478  :     }

  0003d	89 16		 mov	 DWORD PTR [esi], edx
  0003f	89 72 04	 mov	 DWORD PTR [edx+4], esi
  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
$LN5@Lrotate:

; 472  :         } else {
; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  00047	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;
; 477  :         _Wherenode->_Parent = _Pnode;
; 478  :     }

  0004a	89 16		 mov	 DWORD PTR [esi], edx
  0004c	89 72 04	 mov	 DWORD PTR [edx+4], esi
  0004f	5e		 pop	 esi
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Lrotate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >::clear, COMDAT
; _this$ = ecx

; 1444 :     void clear() noexcept {

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi
  00004	57		 push	 edi

; 1445 :         const auto _Scary = _Get_scary();
; 1446 :         _Scary->_Orphan_ptr(nullptr);
; 1447 :         auto _Head = _Scary->_Myhead;

  00005	8b 3b		 mov	 edi, DWORD PTR [ebx]

; 1448 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  00007	8b 77 04	 mov	 esi, DWORD PTR [edi+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 20		 jne	 SHORT $LN5@clear
$LL4@clear:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cb		 mov	 ecx, ebx
  00015	53		 push	 ebx
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 598  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 599  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0001f	6a 20		 push	 32			; 00000020H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL4@clear
$LN5@clear:

; 1449 :         _Head->_Parent  = _Head;

  00030	89 7f 04	 mov	 DWORD PTR [edi+4], edi

; 1450 :         _Head->_Left    = _Head;

  00033	89 3f		 mov	 DWORD PTR [edi], edi

; 1451 :         _Head->_Right   = _Head;

  00035	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 1452 :         _Scary->_Mysize = 0;

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0
  00041	5b		 pop	 ebx

; 1453 :     }

  00042	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAEIABUSItemPos@@@Z
_TEXT	SEGMENT
tv789 = -12						; size = 4
__Off$1$ = -8						; size = 4
__Pnode$2$ = -8						; size = 4
_this$1$ = -4						; size = 4
__First$ = 8						; size = 4
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAEIABUSItemPos@@@Z PROC ; std::_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >::erase, COMDAT
; _this$ = ecx

; 1435 :     size_type erase(const key_type& _Keyval) noexcept(noexcept(_Eqrange(_Keyval))) /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	8b c1		 mov	 eax, ecx
  00008	53		 push	 ebx
  00009	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000c	56		 push	 esi

; 1787 :         _Nodeptr _Pnode   = _Scary->_Myhead->_Parent;

  0000d	8b 00		 mov	 eax, DWORD PTR [eax]

; 1788 :         _Nodeptr _Lonode  = _Scary->_Myhead; // end() if search fails

  0000f	8b f0		 mov	 esi, eax

; 1435 :     size_type erase(const key_type& _Keyval) noexcept(noexcept(_Eqrange(_Keyval))) /* strengthened */ {

  00011	57		 push	 edi

; 1787 :         _Nodeptr _Pnode   = _Scary->_Myhead->_Parent;

  00012	89 45 f4	 mov	 DWORD PTR tv789[ebp], eax

; 1789 :         _Nodeptr _Hinode  = _Scary->_Myhead; // end() if search fails

  00015	8b d8		 mov	 ebx, eax
  00017	8b 78 04	 mov	 edi, DWORD PTR [eax+4]
  0001a	8b d7		 mov	 edx, edi
  0001c	89 7d f8	 mov	 DWORD PTR __Pnode$2$[ebp], edi

; 1790 : 
; 1791 :         while (!_Pnode->_Isnil) {

  0001f	80 7a 0d 00	 cmp	 BYTE PTR [edx+13], 0
  00023	75 48		 jne	 SHORT $LN5@erase
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h

; 255  : 		return (window_type < rhs.window_type) || ((window_type == rhs.window_type) && (cell < rhs.cell));

  00025	8b 7d 08	 mov	 edi, DWORD PTR __Keyval$[ebp]
  00028	8a 2f		 mov	 ch, BYTE PTR [edi]
  0002a	66 0f 1f 44 00
	00		 npad	 6
$LL4@erase:
  00030	8a 4a 0e	 mov	 cl, BYTE PTR [edx+14]
  00033	3a cd		 cmp	 cl, ch
  00035	72 2a		 jb	 SHORT $LN121@erase
  00037	75 0a		 jne	 SHORT $LN8@erase
  00039	66 8b 42 0f	 mov	 ax, WORD PTR [edx+15]
  0003d	66 3b 47 01	 cmp	 ax, WORD PTR [edi+1]
  00041	72 1e		 jb	 SHORT $LN121@erase
$LN8@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1796 :                 if (_Hinode->_Isnil && _DEBUG_LT_PRED(_Comp, _Keyval, _Nodekey)) {

  00043	80 7b 0d 00	 cmp	 BYTE PTR [ebx+13], 0
  00047	74 12		 je	 SHORT $LN10@erase
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h

; 255  : 		return (window_type < rhs.window_type) || ((window_type == rhs.window_type) && (cell < rhs.cell));

  00049	3a e9		 cmp	 ch, cl
  0004b	72 0c		 jb	 SHORT $LN107@erase
  0004d	75 0c		 jne	 SHORT $LN10@erase
  0004f	66 8b 47 01	 mov	 ax, WORD PTR [edi+1]
  00053	66 3b 42 0f	 cmp	 ax, WORD PTR [edx+15]
  00057	73 02		 jae	 SHORT $LN10@erase
$LN107@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1797 :                     _Hinode = _Pnode; // _Pnode greater, remember it

  00059	8b da		 mov	 ebx, edx
$LN10@erase:

; 1798 :                 }
; 1799 : 
; 1800 :                 _Lonode = _Pnode;

  0005b	8b f2		 mov	 esi, edx

; 1801 :                 _Pnode  = _Pnode->_Left; // descend left subtree

  0005d	8b 12		 mov	 edx, DWORD PTR [edx]
  0005f	eb 03		 jmp	 SHORT $LN9@erase
$LN121@erase:

; 1792 :             const auto& _Nodekey = _Traits::_Kfn(_Pnode->_Myval);
; 1793 :             if (_DEBUG_LT_PRED(_Comp, _Nodekey, _Keyval)) {
; 1794 :                 _Pnode = _Pnode->_Right; // descend right subtree

  00061	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
$LN9@erase:

; 1790 : 
; 1791 :         while (!_Pnode->_Isnil) {

  00064	80 7a 0d 00	 cmp	 BYTE PTR [edx+13], 0
  00068	74 c6		 je	 SHORT $LL4@erase
  0006a	8b 7d f8	 mov	 edi, DWORD PTR __Pnode$2$[ebp]
$LN5@erase:

; 1802 :             }
; 1803 :         }
; 1804 : 
; 1805 :         _Pnode = _Hinode->_Isnil ? _Scary->_Myhead->_Parent : _Hinode->_Left; // continue scan for upper bound

  0006d	80 7b 0d 00	 cmp	 BYTE PTR [ebx+13], 0
  00071	75 02		 jne	 SHORT $LN15@erase
  00073	8b 3b		 mov	 edi, DWORD PTR [ebx]
$LN15@erase:

; 1806 :         while (!_Pnode->_Isnil) {

  00075	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00079	75 25		 jne	 SHORT $LN7@erase
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h

; 255  : 		return (window_type < rhs.window_type) || ((window_type == rhs.window_type) && (cell < rhs.cell));

  0007b	8b 55 08	 mov	 edx, DWORD PTR __Keyval$[ebp]
  0007e	8a 0a		 mov	 cl, BYTE PTR [edx]
$LL6@erase:
  00080	3a 4f 0e	 cmp	 cl, BYTE PTR [edi+14]
  00083	72 11		 jb	 SHORT $LN109@erase
  00085	75 0a		 jne	 SHORT $LN11@erase
  00087	66 8b 42 01	 mov	 ax, WORD PTR [edx+1]
  0008b	66 3b 47 0f	 cmp	 ax, WORD PTR [edi+15]
  0008f	72 05		 jb	 SHORT $LN109@erase
$LN11@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1812 :                 _Pnode = _Pnode->_Right; // descend right subtree

  00091	8b 7f 08	 mov	 edi, DWORD PTR [edi+8]
  00094	eb 04		 jmp	 SHORT $LN12@erase
$LN109@erase:

; 1807 :             if (_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Pnode->_Myval))) {
; 1808 :                 // _Pnode greater than _Keyval, remember it
; 1809 :                 _Hinode = _Pnode;

  00096	8b df		 mov	 ebx, edi

; 1810 :                 _Pnode  = _Pnode->_Left; // descend left subtree

  00098	8b 3f		 mov	 edi, DWORD PTR [edi]
$LN12@erase:

; 1806 :         while (!_Pnode->_Isnil) {

  0009a	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0009e	74 e0		 je	 SHORT $LL6@erase
$LN7@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1799 :         _Iter_diff_t<_InIt> _Off = 0;

  000a0	33 ff		 xor	 edi, edi
  000a2	8b c6		 mov	 eax, esi
  000a4	89 7d f8	 mov	 DWORD PTR __Off$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 98   :         return _Ptr == _Right._Ptr;

  000a7	3b f3		 cmp	 esi, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1800 :         for (; _UFirst != _ULast; ++_UFirst) {

  000a9	74 49		 je	 SHORT $LN45@erase
  000ab	0f 1f 44 00 00	 npad	 5
$LL52@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  000b0	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1801 :             ++_Off;

  000b3	47		 inc	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  000b4	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  000b8	74 1d		 je	 SHORT $LN51@erase

; 53   :             _Nodeptr _Pnode;
; 54   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  000ba	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000bd	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  000c1	75 10		 jne	 SHORT $LN123@erase
$LL49@erase:
  000c3	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  000c6	75 0b		 jne	 SHORT $LN123@erase

; 55   :                 _Ptr = _Pnode; // ==> parent while right subtree

  000c8	8b c1		 mov	 eax, ecx
  000ca	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000cd	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  000d1	74 f0		 je	 SHORT $LL49@erase
$LN123@erase:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())

  000d3	8b c1		 mov	 eax, ecx

; 59   :         } else {

  000d5	eb 16		 jmp	 SHORT $LN56@erase
$LN51@erase:

; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

  000d7	8b c1		 mov	 eax, ecx

; 451  :         while (!_Pnode->_Left->_Isnil) {

  000d9	8b 10		 mov	 edx, DWORD PTR [eax]
  000db	80 7a 0d 00	 cmp	 BYTE PTR [edx+13], 0
  000df	75 0c		 jne	 SHORT $LN56@erase
$LL55@erase:
  000e1	8b 0a		 mov	 ecx, DWORD PTR [edx]

; 452  :             _Pnode = _Pnode->_Left;

  000e3	8b c2		 mov	 eax, edx
  000e5	8b d1		 mov	 edx, ecx
  000e7	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  000eb	74 f4		 je	 SHORT $LL55@erase
$LN56@erase:

; 98   :         return _Ptr == _Right._Ptr;

  000ed	3b c3		 cmp	 eax, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1800 :         for (; _UFirst != _ULast; ++_UFirst) {

  000ef	75 bf		 jne	 SHORT $LL52@erase
  000f1	89 7d f8	 mov	 DWORD PTR __Off$1$[ebp], edi
$LN45@erase:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 98   :         return _Ptr == _Right._Ptr;

  000f4	8b 45 f4	 mov	 eax, DWORD PTR tv789[ebp]

; 1436 :         const auto _Where = _Eqrange(_Keyval);
; 1437 :         const _Unchecked_const_iterator _First(_Where.first, nullptr);
; 1438 :         const _Unchecked_const_iterator _Last(_Where.second, nullptr);
; 1439 :         const auto _Num = static_cast<size_type>(_STD distance(_First, _Last));
; 1440 :         _Erase_unchecked(_First, _Last);

  000f7	89 75 08	 mov	 DWORD PTR __First$[ebp], esi

; 98   :         return _Ptr == _Right._Ptr;

  000fa	3b 30		 cmp	 esi, DWORD PTR [eax]

; 1397 :         if (_First == _Begin && _Last._Ptr->_Isnil) {

  000fc	75 19		 jne	 SHORT $LN94@erase
  000fe	80 7b 0d 00	 cmp	 BYTE PTR [ebx+13], 0
  00102	74 13		 je	 SHORT $LN94@erase

; 1398 :             // erase all
; 1399 :             clear();

  00104	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
  00107	e8 00 00 00 00	 call	 ?clear@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >::clear
$LN122@erase:

; 1441 :         return _Num;
; 1442 :     }

  0010c	8b c7		 mov	 eax, edi
  0010e	5f		 pop	 edi
  0010f	5e		 pop	 esi
  00110	5b		 pop	 ebx
  00111	8b e5		 mov	 esp, ebp
  00113	5d		 pop	 ebp
  00114	c2 04 00	 ret	 4
$LN94@erase:

; 98   :         return _Ptr == _Right._Ptr;

  00117	3b f3		 cmp	 esi, ebx

; 1404 :         while (_First != _Last) {

  00119	74 f1		 je	 SHORT $LN122@erase
  0011b	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
  0011e	66 90		 npad	 2
$LL63@erase:

; 68   :         ++*this;

  00120	8d 4d 08	 lea	 ecx, DWORD PTR __First$[ebp]
  00123	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >,std::_Iterator_base0>::operator++

; 1389 :         _Nodeptr _Erasednode = _Scary->_Extract(_Where); // node to erase

  00128	56		 push	 esi
  00129	8b cf		 mov	 ecx, edi
  0012b	e8 00 00 00 00	 call	 ?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Extract
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00130	6a 20		 push	 32			; 00000020H
  00132	50		 push	 eax
  00133	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 98   :         return _Ptr == _Right._Ptr;

  00138	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0013b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 98   :         return _Ptr == _Right._Ptr;

  0013e	3b f3		 cmp	 esi, ebx

; 1404 :         while (_First != _Last) {

  00140	75 de		 jne	 SHORT $LL63@erase

; 1441 :         return _Num;
; 1442 :     }

  00142	8b 45 f8	 mov	 eax, DWORD PTR __Off$1$[ebp]
  00145	5f		 pop	 edi
  00146	5e		 pop	 esi
  00147	5b		 pop	 ebx
  00148	8b e5		 mov	 esp, ebp
  0014a	5d		 pop	 ebp
  0014b	c2 04 00	 ret	 4
?erase@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAEIABUSItemPos@@@Z ENDP ; std::_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >::~_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >, COMDAT
; _this$ = ecx

; 1189 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 07		 mov	 eax, DWORD PTR [edi]
  00006	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 23		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 598  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 599  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0001f	6a 20		 push	 32			; 00000020H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
  00030	8b 07		 mov	 eax, DWORD PTR [edi]
$LN7@Tree:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00032	6a 20		 push	 32			; 00000020H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1196 :     }

  0003f	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >::~_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??1ShopTab@CPythonShop@@QAE@XZ
_TEXT	SEGMENT
??1ShopTab@CPythonShop@@QAE@XZ PROC			; CPythonShop::ShopTab::~ShopTab, COMDAT
; _this$ = ecx

; 2227 :         return _BUF_SIZE <= _Myres;

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0d		 jb	 SHORT $LN7@ShopTab

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 76 04	 push	 DWORD PTR [esi+4]
  00010	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00015	83 c4 08	 add	 esp, 8
$LN7@ShopTab:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00018	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001f	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00026	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  0002a	5e		 pop	 esi
  0002b	c3		 ret	 0
??1ShopTab@CPythonShop@@QAE@XZ ENDP			; CPythonShop::ShopTab::~ShopTab
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.h
;	COMDAT ??0ShopTab@CPythonShop@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0ShopTab@CPythonShop@@QAE@XZ PROC			; CPythonShop::ShopTab::ShopTab, COMDAT
; _this$ = ecx

; 68   : 			ShopTab()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4377 :         _Mypair._Myval2._Mysize = 0;

  00004	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.h

; 71   : 			}

  0000b	8b c1		 mov	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0000d	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00014	c6 41 04 00	 mov	 BYTE PTR [ecx+4], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.h

; 68   : 			ShopTab()

  00018	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 69   : 			{
; 70   : 				coinType = SHOP_COIN_TYPE_GOLD;

  0001b	c6 01 00	 mov	 BYTE PTR [ecx], 0

; 71   : 			}

  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??0ShopTab@CPythonShop@@QAE@XZ ENDP			; CPythonShop::ShopTab::ShopTab
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?BuildPrivateShop@CPythonShop@@QAEXPBD@Z
_TEXT	SEGMENT
_ItemStock$ = -28					; size = 12
_itor$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 1
_c_szName$ = 8						; size = 4
?BuildPrivateShop@CPythonShop@@QAEXPBD@Z PROC		; CPythonShop::BuildPrivateShop, COMDAT
; _this$ = ecx

; 146  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?BuildPrivateShop@CPythonShop@@QAEXPBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0002a	33 db		 xor	 ebx, ebx
  0002c	33 f6		 xor	 esi, esi
  0002e	89 5d e4	 mov	 DWORD PTR _ItemStock$[ebp], ebx
  00031	89 75 e8	 mov	 DWORD PTR _ItemStock$[ebp+4], esi
  00034	89 5d ec	 mov	 DWORD PTR _ItemStock$[ebp+8], ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 148  : 	ItemStock.reserve(m_PrivateShopItemStock.size());

  00037	8b 87 94 14 00
	00		 mov	 eax, DWORD PTR [edi+5268]
  0003d	89 75 fc	 mov	 DWORD PTR __$EHRec$[ebp+8], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1306 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

  00040	85 c0		 test	 eax, eax
  00042	74 1a		 je	 SHORT $LN14@BuildPriva

; 1307 :             if (_Newcapacity > max_size()) {

  00044	3d 13 3b b1 13	 cmp	 eax, 330382099		; 13b13b13H
  00049	0f 87 de 00 00
	00		 ja	 $LN91@BuildPriva

; 1309 :             }
; 1310 : 
; 1311 :             _Reallocate_exactly(_Newcapacity);

  0004f	50		 push	 eax
  00050	8d 4d e4	 lea	 ecx, DWORD PTR _ItemStock$[ebp]
  00053	e8 00 00 00 00	 call	 ?_Reallocate_exactly@?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@AAEXI@Z ; std::vector<SShopItemTable,std::allocator<SShopItemTable> >::_Reallocate_exactly
  00058	8b 75 e8	 mov	 esi, DWORD PTR _ItemStock$[ebp+4]
  0005b	8b 5d e4	 mov	 ebx, DWORD PTR _ItemStock$[ebp]
$LN14@BuildPriva:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  0005e	8b 8f 90 14 00
	00		 mov	 ecx, DWORD PTR [edi+5264]

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00064	8b 01		 mov	 eax, DWORD PTR [ecx]
  00066	89 45 f0	 mov	 DWORD PTR _itor$[ebp], eax
  00069	3b c1		 cmp	 eax, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 151  : 	for (; itor != m_PrivateShopItemStock.end(); ++itor)

  0006b	74 4d		 je	 SHORT $LN3@BuildPriva
  0006d	0f 1f 00	 npad	 3
$LL31@BuildPriva:

; 152  : 	{
; 153  : 		ItemStock.push_back(itor->second);

  00070	8d 48 11	 lea	 ecx, DWORD PTR [eax+17]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00073	3b 75 ec	 cmp	 esi, DWORD PTR _ItemStock$[ebp+8]
  00076	74 1f		 je	 SHORT $LN53@BuildPriva
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00078	f3 0f 7e 01	 movq	 xmm0, QWORD PTR [ecx]
  0007c	66 0f d6 06	 movq	 QWORD PTR [esi], xmm0
  00080	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00083	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00086	8a 41 0c	 mov	 al, BYTE PTR [ecx+12]
  00089	88 46 0c	 mov	 BYTE PTR [esi+12], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 690  :         ++_Mylast;

  0008c	8b 75 e8	 mov	 esi, DWORD PTR _ItemStock$[ebp+4]
  0008f	83 c6 0d	 add	 esi, 13			; 0000000dH
  00092	89 75 e8	 mov	 DWORD PTR _ItemStock$[ebp+4], esi

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00095	eb 0d		 jmp	 SHORT $LN2@BuildPriva
$LN53@BuildPriva:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00097	51		 push	 ecx
  00098	56		 push	 esi
  00099	8d 4d e4	 lea	 ecx, DWORD PTR _ItemStock$[ebp]
  0009c	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABUSShopItemTable@@@?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@QAEPAUSShopItemTable@@QAU2@ABU2@@Z ; std::vector<SShopItemTable,std::allocator<SShopItemTable> >::_Emplace_reallocate<SShopItemTable const &>
  000a1	8b 75 e8	 mov	 esi, DWORD PTR _ItemStock$[ebp+4]
$LN2@BuildPriva:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 198  :         _Mybase::operator++();

  000a4	8d 4d f0	 lea	 ecx, DWORD PTR _itor$[ebp]
  000a7	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >,std::_Iterator_base0>::operator++

; 232  :         return this->_Ptr == _Right._Ptr;

  000ac	8b 45 f0	 mov	 eax, DWORD PTR _itor$[ebp]
  000af	3b 87 90 14 00
	00		 cmp	 eax, DWORD PTR [edi+5264]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 151  : 	for (; itor != m_PrivateShopItemStock.end(); ++itor)

  000b5	75 b9		 jne	 SHORT $LL31@BuildPriva
  000b7	8b 5d e4	 mov	 ebx, DWORD PTR _ItemStock$[ebp]
$LN3@BuildPriva:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7571 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  000ba	ff 75 08	 push	 DWORD PTR $T2[ebp]
  000bd	8b ce		 mov	 ecx, esi
  000bf	b8 4f ec c4 4e	 mov	 eax, 1321528399		; 4ec4ec4fH
  000c4	2b cb		 sub	 ecx, ebx
  000c6	f7 e9		 imul	 ecx
  000c8	c1 fa 02	 sar	 edx, 2
  000cb	8b c2		 mov	 eax, edx
  000cd	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000d0	03 c2		 add	 eax, edx
  000d2	50		 push	 eax
  000d3	56		 push	 esi
  000d4	53		 push	 ebx
  000d5	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAUSShopItemTable@@UItemStockSortFunc@@@std@@YAXPAUSShopItemTable@@0HUItemStockSortFunc@@@Z ; std::_Sort_unchecked<SShopItemTable *,ItemStockSortFunc>
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 158  : 	CPythonNetworkStream::Instance().SendBuildPrivateShopPacket(c_szName, ItemStock);

  000da	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonNetworkStream@@@@0PAVCPythonNetworkStream@@A ; CSingleton<CPythonNetworkStream>::ms_singleton
  000e0	8d 45 e4	 lea	 eax, DWORD PTR _ItemStock$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7571 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  000e3	83 c4 10	 add	 esp, 16			; 00000010H
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 158  : 	CPythonNetworkStream::Instance().SendBuildPrivateShopPacket(c_szName, ItemStock);

  000e6	50		 push	 eax
  000e7	ff 75 08	 push	 DWORD PTR _c_szName$[ebp]
  000ea	e8 00 00 00 00	 call	 ?SendBuildPrivateShopPacket@CPythonNetworkStream@@QAE_NPBDABV?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@@Z ; CPythonNetworkStream::SendBuildPrivateShopPacket
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  000ef	8b 75 e4	 mov	 esi, DWORD PTR _ItemStock$[ebp]
  000f2	85 f6		 test	 esi, esi
  000f4	74 23		 je	 SHORT $LN76@BuildPriva

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000f6	8b 4d ec	 mov	 ecx, DWORD PTR _ItemStock$[ebp+8]
  000f9	b8 4f ec c4 4e	 mov	 eax, 1321528399		; 4ec4ec4fH
  000fe	2b ce		 sub	 ecx, esi
  00100	f7 e9		 imul	 ecx
  00102	c1 fa 02	 sar	 edx, 2
  00105	8b c2		 mov	 eax, edx
  00107	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0010a	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0010c	6b c0 0d	 imul	 eax, eax, 13
  0010f	50		 push	 eax
  00110	56		 push	 esi
  00111	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00116	83 c4 08	 add	 esp, 8
$LN76@BuildPriva:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 159  : }

  00119	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0011c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00123	59		 pop	 ecx
  00124	5f		 pop	 edi
  00125	5e		 pop	 esi
  00126	5b		 pop	 ebx
  00127	8b e5		 mov	 esp, ebp
  00129	5d		 pop	 ebp
  0012a	c2 04 00	 ret	 4
$LN91@BuildPriva:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1308 :                 _Xlength();

  0012d	e8 00 00 00 00	 call	 ?_Xlength@?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@CAXXZ ; std::vector<SShopItemTable,std::allocator<SShopItemTable> >::_Xlength
$LN89@BuildPriva:
  00132	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?BuildPrivateShop@CPythonShop@@QAEXPBD@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _ItemStock$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@USShopItemTable@@V?$allocator@USShopItemTable@@@std@@@std@@QAE@XZ ; std::vector<SShopItemTable,std::allocator<SShopItemTable> >::~vector<SShopItemTable,std::allocator<SShopItemTable> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?BuildPrivateShop@CPythonShop@@QAEXPBD@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?BuildPrivateShop@CPythonShop@@QAEXPBD@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?BuildPrivateShop@CPythonShop@@QAEXPBD@Z ENDP		; CPythonShop::BuildPrivateShop
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?GetPrivateShopItemPrice@CPythonShop@@QAEHUSItemPos@@@Z
_TEXT	SEGMENT
__Loc$1 = -12						; size = 12
_ItemPos$ = 8						; size = 3
?GetPrivateShopItemPrice@CPythonShop@@QAEHUSItemPos@@@Z PROC ; CPythonShop::GetPrivateShopItemPrice, COMDAT
; _this$ = ecx

; 129  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00007	8d 45 08	 lea	 eax, DWORD PTR _ItemPos$[ebp]
  0000a	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 130  : 	TPrivateShopItemStock::iterator itor = m_PrivateShopItemStock.find(ItemPos);

  0000b	8d b1 90 14 00
	00		 lea	 esi, DWORD PTR [ecx+5264]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00011	8d 45 f4	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00014	8b ce		 mov	 ecx, esi
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ??$_Find_lower_bound@USItemPos@@@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@ABUSItemPos@@@Z ; std::_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >::_Find_lower_bound<SItemPos>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0001c	8b 45 fc	 mov	 eax, DWORD PTR __Loc$1[ebp+8]
  0001f	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00023	75 22		 jne	 SHORT $LN44@GetPrivate
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h

; 255  : 		return (window_type < rhs.window_type) || ((window_type == rhs.window_type) && (cell < rhs.cell));

  00025	8a 48 0e	 mov	 cl, BYTE PTR [eax+14]
  00028	38 4d 08	 cmp	 BYTE PTR _ItemPos$[ebp], cl
  0002b	72 1a		 jb	 SHORT $LN44@GetPrivate
  0002d	75 0a		 jne	 SHORT $LN43@GetPrivate
  0002f	66 8b 4d 09	 mov	 cx, WORD PTR _ItemPos$[ebp+1]
  00033	66 3b 48 0f	 cmp	 cx, WORD PTR [eax+15]
  00037	72 0e		 jb	 SHORT $LN44@GetPrivate
$LN43@GetPrivate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00039	39 06		 cmp	 DWORD PTR [esi], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 132  : 	if (m_PrivateShopItemStock.end() == itor)

  0003b	74 0a		 je	 SHORT $LN44@GetPrivate

; 134  : 
; 135  : 	TShopItemTable & rShopItemTable = itor->second;
; 136  : 	return rShopItemTable.price;

  0003d	8b 40 19	 mov	 eax, DWORD PTR [eax+25]
  00040	5e		 pop	 esi

; 137  : }

  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
$LN44@GetPrivate:

; 133  : 		return 0;

  00047	33 c0		 xor	 eax, eax
  00049	5e		 pop	 esi

; 137  : }

  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
?GetPrivateShopItemPrice@CPythonShop@@QAEHUSItemPos@@@Z ENDP ; CPythonShop::GetPrivateShopItemPrice
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?DelPrivateShopItemStock@CPythonShop@@QAEXUSItemPos@@@Z
_TEXT	SEGMENT
__Loc$1 = -12						; size = 12
_ItemPos$ = 8						; size = 3
?DelPrivateShopItemStock@CPythonShop@@QAEXUSItemPos@@@Z PROC ; CPythonShop::DelPrivateShopItemStock, COMDAT
; _this$ = ecx

; 122  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00007	8d 45 08	 lea	 eax, DWORD PTR _ItemPos$[ebp]
  0000a	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 123  : 	if (m_PrivateShopItemStock.end() == m_PrivateShopItemStock.find(ItemPos))

  0000b	8d b1 90 14 00
	00		 lea	 esi, DWORD PTR [ecx+5264]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00011	8d 45 f4	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00014	8b ce		 mov	 ecx, esi
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ??$_Find_lower_bound@USItemPos@@@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@ABUSItemPos@@@Z ; std::_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >::_Find_lower_bound<SItemPos>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0001c	8b 4d fc	 mov	 ecx, DWORD PTR __Loc$1[ebp+8]
  0001f	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00023	75 23		 jne	 SHORT $LN1@DelPrivate
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h

; 255  : 		return (window_type < rhs.window_type) || ((window_type == rhs.window_type) && (cell < rhs.cell));

  00025	8a 41 0e	 mov	 al, BYTE PTR [ecx+14]
  00028	38 45 08	 cmp	 BYTE PTR _ItemPos$[ebp], al
  0002b	72 1b		 jb	 SHORT $LN1@DelPrivate
  0002d	75 0a		 jne	 SHORT $LN37@DelPrivate
  0002f	66 8b 45 09	 mov	 ax, WORD PTR _ItemPos$[ebp+1]
  00033	66 3b 41 0f	 cmp	 ax, WORD PTR [ecx+15]
  00037	72 0f		 jb	 SHORT $LN1@DelPrivate
$LN37@DelPrivate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 232  :         return this->_Ptr == _Right._Ptr;

  00039	39 0e		 cmp	 DWORD PTR [esi], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 123  : 	if (m_PrivateShopItemStock.end() == m_PrivateShopItemStock.find(ItemPos))

  0003b	74 0b		 je	 SHORT $LN1@DelPrivate

; 124  : 		return;
; 125  : 
; 126  : 	m_PrivateShopItemStock.erase(ItemPos);

  0003d	8d 45 08	 lea	 eax, DWORD PTR _ItemPos$[ebp]
  00040	8b ce		 mov	 ecx, esi
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAEIABUSItemPos@@@Z ; std::_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >::erase
$LN1@DelPrivate:
  00048	5e		 pop	 esi

; 127  : }

  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?DelPrivateShopItemStock@CPythonShop@@QAEXUSItemPos@@@Z ENDP ; CPythonShop::DelPrivateShopItemStock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?AddPrivateShopItemStock@CPythonShop@@QAEXUSItemPos@@EK@Z
_TEXT	SEGMENT
$T2 = -72						; size = 16
_SellingItem$ = -56					; size = 13
__Loc$3 = -40						; size = 12
$T4 = -28						; size = 12
$T5 = -24						; size = 8
__Myhead$6 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_ItemPos$ = 8						; size = 3
_dwDisplayPos$ = 12					; size = 1
_dwPrice$ = 16						; size = 4
?AddPrivateShopItemStock@CPythonShop@@QAEXUSItemPos@@EK@Z PROC ; CPythonShop::AddPrivateShopItemStock, COMDAT
; _this$ = ecx

; 110  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AddPrivateShopItemStock@CPythonShop@@QAEXUSItemPos@@EK@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx

; 111  : 	DelPrivateShopItemStock(ItemPos);

  0002a	66 8b 45 08	 mov	 ax, WORD PTR _ItemPos$[ebp]
  0002e	51		 push	 ecx
  0002f	8b d4		 mov	 edx, esp
  00031	66 89 02	 mov	 WORD PTR [edx], ax
  00034	8a 45 0a	 mov	 al, BYTE PTR _ItemPos$[ebp+2]
  00037	88 42 02	 mov	 BYTE PTR [edx+2], al
  0003a	e8 00 00 00 00	 call	 ?DelPrivateShopItemStock@CPythonShop@@QAEXUSItemPos@@@Z ; CPythonShop::DelPrivateShopItemStock

; 116  : 	SellingItem.pos = ItemPos;

  0003f	66 8b 45 09	 mov	 ax, WORD PTR _ItemPos$[ebp+1]

; 117  : 	SellingItem.price = dwPrice;
; 118  : 	SellingItem.display_pos = dwDisplayPos;
; 119  : 	m_PrivateShopItemStock.insert(make_pair(ItemPos, SellingItem));

  00043	8d be 90 14 00
	00		 lea	 edi, DWORD PTR [esi+5264]
  00049	66 8b 5d 08	 mov	 bx, WORD PTR _ItemPos$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  0004d	8b cf		 mov	 ecx, edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 116  : 	SellingItem.pos = ItemPos;

  0004f	88 65 cf	 mov	 BYTE PTR _SellingItem$[ebp+7], ah
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00052	88 65 ba	 mov	 BYTE PTR $T2[ebp+2], ah
  00055	8b 45 10	 mov	 eax, DWORD PTR _dwPrice$[ebp]
  00058	89 45 c3	 mov	 DWORD PTR $T2[ebp+11], eax
  0005b	8a 45 0c	 mov	 al, BYTE PTR _dwDisplayPos$[ebp]
  0005e	88 45 c7	 mov	 BYTE PTR $T2[ebp+15], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00061	8d 45 b8	 lea	 eax, DWORD PTR $T2[ebp]
  00064	50		 push	 eax
  00065	8d 45 e4	 lea	 eax, DWORD PTR $T4[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 114  : 	SellingItem.vnum = 0;

  00068	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _SellingItem$[ebp], 0

; 115  : 	SellingItem.count = 0;

  0006f	c6 45 cc 00	 mov	 BYTE PTR _SellingItem$[ebp+4], 0

; 116  : 	SellingItem.pos = ItemPos;

  00073	66 89 5d cd	 mov	 WORD PTR _SellingItem$[ebp+5], bx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00077	f3 0f 7e 45 c8	 movq	 xmm0, QWORD PTR _SellingItem$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  0007c	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0007d	66 89 5d b8	 mov	 WORD PTR $T2[ebp], bx
  00081	66 0f d6 45 bb	 movq	 QWORD PTR $T2[ebp+3], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00086	e8 00 00 00 00	 call	 ??$_Find_lower_bound@USItemPos@@@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@1@ABUSItemPos@@@Z ; std::_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >::_Find_lower_bound<SItemPos>
  0008b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0008e	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00092	66 0f d6 45 d8	 movq	 QWORD PTR __Loc$3[ebp], xmm0

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00097	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0009b	75 19		 jne	 SHORT $LN21@AddPrivate
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h

; 255  : 		return (window_type < rhs.window_type) || ((window_type == rhs.window_type) && (cell < rhs.cell));

  0009d	3a 59 0e	 cmp	 bl, BYTE PTR [ecx+14]
  000a0	72 14		 jb	 SHORT $LN21@AddPrivate
  000a2	0f 85 95 00 00
	00		 jne	 $LN76@AddPrivate
  000a8	66 8b 45 09	 mov	 ax, WORD PTR _ItemPos$[ebp+1]
  000ac	66 3b 41 0f	 cmp	 ax, WORD PTR [ecx+15]
  000b0	0f 83 87 00 00
	00		 jae	 $LN76@AddPrivate
$LN21@AddPrivate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  000b6	81 7f 04 ff ff
	ff 07		 cmp	 DWORD PTR [edi+4], 134217727 ; 07ffffffH
  000bd	0f 84 8e 00 00
	00		 je	 $LN93@AddPrivate

; 1015 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  000c3	8b 07		 mov	 eax, DWORD PTR [edi]
  000c5	89 45 f0	 mov	 DWORD PTR __Myhead$6[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1045 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  000c8	89 7d e8	 mov	 DWORD PTR $T5[ebp], edi

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000cb	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  000cd	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1052 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  000d4	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+4], 0

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000db	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 246  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  000e0	f3 0f 7e 45 c8	 movq	 xmm0, QWORD PTR _SellingItem$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1053 :         _Ptr = _Al.allocate(1);

  000e5	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 246  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  000e7	8a 45 ba	 mov	 al, BYTE PTR $T2[ebp+2]
  000ea	66 89 5e 0e	 mov	 WORD PTR [esi+14], bx
  000ee	88 46 10	 mov	 BYTE PTR [esi+16], al
  000f1	8b 45 10	 mov	 eax, DWORD PTR _dwPrice$[ebp]
  000f4	66 0f d6 46 11	 movq	 QWORD PTR [esi+17], xmm0
  000f9	89 46 19	 mov	 DWORD PTR [esi+25], eax
  000fc	8a 45 0c	 mov	 al, BYTE PTR _dwDisplayPos$[ebp]
  000ff	88 46 1d	 mov	 BYTE PTR [esi+29], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  00102	8d 45 f0	 lea	 eax, DWORD PTR __Myhead$6[ebp]
  00105	50		 push	 eax
  00106	56		 push	 esi
  00107	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> *,std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  0010c	8d 45 f0	 lea	 eax, DWORD PTR __Myhead$6[ebp]
  0010f	50		 push	 eax
  00110	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> *,std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  00119	8d 45 f0	 lea	 eax, DWORD PTR __Myhead$6[ebp]
  0011c	50		 push	 eax
  0011d	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00120	50		 push	 eax
  00121	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> *,std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> * &>
  00126	83 c4 1c	 add	 esp, 28			; 0000001cH

; 810  :         this->_Ptr->_Color = _Red;

  00129	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  0012f	8b cf		 mov	 ecx, edi
  00131	56		 push	 esi
  00132	ff 75 dc	 push	 DWORD PTR __Loc$3[ebp+4]
  00135	ff 75 d8	 push	 DWORD PTR __Loc$3[ebp]
  00138	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<SItemPos const ,SShopItemTable> > >::_Insert_node
$LN76@AddPrivate:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 120  : }

  0013d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00140	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00147	59		 pop	 ecx
  00148	5f		 pop	 edi
  00149	5e		 pop	 esi
  0014a	5b		 pop	 ebx
  0014b	8b e5		 mov	 esp, ebp
  0014d	5d		 pop	 ebp
  0014e	c2 0c 00	 ret	 12			; 0000000cH
$LN93@AddPrivate:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1720 :             _Throw_tree_length_error();

  00151	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN91@AddPrivate:
  00156	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddPrivateShopItemStock@CPythonShop@@QAEXUSItemPos@@EK@Z$2:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR $T5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?AddPrivateShopItemStock@CPythonShop@@QAEXUSItemPos@@EK@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a b4	 mov	 ecx, DWORD PTR [edx-76]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AddPrivateShopItemStock@CPythonShop@@QAEXUSItemPos@@EK@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AddPrivateShopItemStock@CPythonShop@@QAEXUSItemPos@@EK@Z ENDP ; CPythonShop::AddPrivateShopItemStock
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?ClearPrivateShopStock@CPythonShop@@QAEXXZ
_TEXT	SEGMENT
?ClearPrivateShopStock@CPythonShop@@QAEXXZ PROC		; CPythonShop::ClearPrivateShopStock, COMDAT
; _this$ = ecx

; 107  : 	m_PrivateShopItemStock.clear();

  00000	81 c1 90 14 00
	00		 add	 ecx, 5264		; 00001490H
  00006	e9 00 00 00 00	 jmp	 ?clear@?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >::clear
?ClearPrivateShopStock@CPythonShop@@QAEXXZ ENDP		; CPythonShop::ClearPrivateShopStock
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?IsMainPlayerPrivateShop@CPythonShop@@QAEHXZ
_TEXT	SEGMENT
?IsMainPlayerPrivateShop@CPythonShop@@QAEHXZ PROC	; CPythonShop::IsMainPlayerPrivateShop, COMDAT
; _this$ = ecx

; 187  : 	return m_isMainPlayerPrivateShop;

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]

; 188  : }

  00003	c3		 ret	 0
?IsMainPlayerPrivateShop@CPythonShop@@QAEHXZ ENDP	; CPythonShop::IsMainPlayerPrivateShop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?IsPrivateShop@CPythonShop@@QAEHXZ
_TEXT	SEGMENT
?IsPrivateShop@CPythonShop@@QAEHXZ PROC			; CPythonShop::IsPrivateShop, COMDAT
; _this$ = ecx

; 182  : 	return m_isPrivateShop;

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 183  : }

  00003	c3		 ret	 0
?IsPrivateShop@CPythonShop@@QAEHXZ ENDP			; CPythonShop::IsPrivateShop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?IsOpen@CPythonShop@@QAEHXZ
_TEXT	SEGMENT
?IsOpen@CPythonShop@@QAEHXZ PROC			; CPythonShop::IsOpen, COMDAT
; _this$ = ecx

; 177  : 	return m_isShoping;

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 178  : }

  00003	c3		 ret	 0
?IsOpen@CPythonShop@@QAEHXZ ENDP			; CPythonShop::IsOpen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?Close@CPythonShop@@QAEXXZ
_TEXT	SEGMENT
?Close@CPythonShop@@QAEXXZ PROC				; CPythonShop::Close, COMDAT
; _this$ = ecx

; 170  : 	m_isShoping = FALSE;

  00000	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 171  : 	m_isPrivateShop = FALSE;

  00007	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0

; 172  : 	m_isMainPlayerPrivateShop = FALSE;

  0000e	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0

; 173  : }

  00015	c3		 ret	 0
?Close@CPythonShop@@QAEXXZ ENDP				; CPythonShop::Close
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?Open@CPythonShop@@QAEXHH@Z
_TEXT	SEGMENT
_isPrivateShop$ = 8					; size = 4
_isMainPrivateShop$ = 12				; size = 4
?Open@CPythonShop@@QAEXHH@Z PROC			; CPythonShop::Open, COMDAT
; _this$ = ecx

; 162  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 163  : 	m_isShoping = TRUE;
; 164  : 	m_isPrivateShop = isPrivateShop;

  00003	8b 45 08	 mov	 eax, DWORD PTR _isPrivateShop$[ebp]
  00006	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 165  : 	m_isMainPlayerPrivateShop = isMainPrivateShop;

  00009	8b 45 0c	 mov	 eax, DWORD PTR _isMainPrivateShop$[ebp]
  0000c	c7 41 04 01 00
	00 00		 mov	 DWORD PTR [ecx+4], 1
  00013	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 166  : }

  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?Open@CPythonShop@@QAEXHH@Z ENDP			; CPythonShop::Open
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?GetTabName@CPythonShop@@QAEPBDE@Z
_TEXT	SEGMENT
_tabIdx$ = 8						; size = 1
?GetTabName@CPythonShop@@QAEPBDE@Z PROC			; CPythonShop::GetTabName, COMDAT
; _this$ = ecx

; 47   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 48   : 	if (tabIdx >= m_bTabCount)

  00003	8a 45 08	 mov	 al, BYTE PTR _tabIdx$[ebp]
  00006	0f b6 d0	 movzx	 edx, al
  00009	3a 41 10	 cmp	 al, BYTE PTR [ecx+16]
  0000c	72 16		 jb	 SHORT $LN2@GetTabName

; 49   : 	{
; 50   : 		TraceError("Out of Index. tabIdx(%d) must be less than %d.", tabIdx, SHOP_TAB_COUNT_MAX);

  0000e	6a 03		 push	 3
  00010	52		 push	 edx
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@FJEENICJ@Out?5of?5Index?4?5tabIdx?$CI?$CFd?$CJ?5must?5b@
  00016	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0001b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 51   : 		return NULL;

  0001e	33 c0		 xor	 eax, eax

; 55   : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
$LN2@GetTabName:

; 52   : 	}
; 53   : 
; 54   : 	return m_aShoptabs[tabIdx].name.c_str();

  00024	69 c2 d4 06 00
	00		 imul	 eax, edx, 1748
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3752 :         return _Mypair._Myval2._Myptr();

  0002a	83 c0 18	 add	 eax, 24			; 00000018H
  0002d	03 c1		 add	 eax, ecx

; 2227 :         return _BUF_SIZE <= _Myres;

  0002f	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2219 :         if (_Large_string_engaged()) {

  00033	72 02		 jb	 SHORT $LN1@GetTabName

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  00035	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1@GetTabName:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 55   : }

  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?GetTabName@CPythonShop@@QAEPBDE@Z ENDP			; CPythonShop::GetTabName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?SetTabName@CPythonShop@@QAEXEPBD@Z
_TEXT	SEGMENT
_tabIdx$ = 8						; size = 1
_name$ = 12						; size = 4
?SetTabName@CPythonShop@@QAEXEPBD@Z PROC		; CPythonShop::SetTabName, COMDAT
; _this$ = ecx

; 37   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 38   : 	if (tabIdx >= m_bTabCount)

  00003	8a 45 08	 mov	 al, BYTE PTR _tabIdx$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	0f b6 d0	 movzx	 edx, al
  0000c	3a 46 10	 cmp	 al, BYTE PTR [esi+16]
  0000f	72 15		 jb	 SHORT $LN2@SetTabName

; 39   : 	{	
; 40   : 		TraceError("Out of Index. tabIdx(%d) must be less than %d.", tabIdx, SHOP_TAB_COUNT_MAX);

  00011	6a 03		 push	 3
  00013	52		 push	 edx
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@FJEENICJ@Out?5of?5Index?4?5tabIdx?$CI?$CFd?$CJ?5must?5b@
  00019	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00021	5e		 pop	 esi

; 44   : }

  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
$LN2@SetTabName:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 389  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00026	8b 4d 0c	 mov	 ecx, DWORD PTR _name$[ebp]
  00029	53		 push	 ebx
  0002a	8d 59 01	 lea	 ebx, DWORD PTR [ecx+1]
  0002d	0f 1f 00	 npad	 3
$LL10@SetTabName:
  00030	8a 01		 mov	 al, BYTE PTR [ecx]
  00032	41		 inc	 ecx
  00033	84 c0		 test	 al, al
  00035	75 f9		 jne	 SHORT $LL10@SetTabName
  00037	2b cb		 sub	 ecx, ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 43   : 	m_aShoptabs[tabIdx].name = name;

  00039	69 c2 d4 06 00
	00		 imul	 eax, edx, 1748
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3062 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0003f	51		 push	 ecx
  00040	ff 75 0c	 push	 DWORD PTR _name$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 43   : 	m_aShoptabs[tabIdx].name = name;

  00043	8d 4e 18	 lea	 ecx, DWORD PTR [esi+24]
  00046	03 c8		 add	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3062 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00048	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004d	5b		 pop	 ebx
  0004e	5e		 pop	 esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 44   : }

  0004f	5d		 pop	 ebp
  00050	c2 08 00	 ret	 8
?SetTabName@CPythonShop@@QAEXEPBD@Z ENDP		; CPythonShop::SetTabName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?GetTabCoinType@CPythonShop@@QAEEE@Z
_TEXT	SEGMENT
_tabIdx$ = 8						; size = 1
?GetTabCoinType@CPythonShop@@QAEEE@Z PROC		; CPythonShop::GetTabCoinType, COMDAT
; _this$ = ecx

; 27   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 28   : 	if (tabIdx >= m_bTabCount)

  00003	8a 45 08	 mov	 al, BYTE PTR _tabIdx$[ebp]
  00006	0f b6 d0	 movzx	 edx, al
  00009	3a 41 10	 cmp	 al, BYTE PTR [ecx+16]
  0000c	72 16		 jb	 SHORT $LN2@GetTabCoin

; 29   : 	{
; 30   : 		TraceError("Out of Index. tabIdx(%d) must be less than %d.", tabIdx, SHOP_TAB_COUNT_MAX);

  0000e	6a 03		 push	 3
  00010	52		 push	 edx
  00011	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@FJEENICJ@Out?5of?5Index?4?5tabIdx?$CI?$CFd?$CJ?5must?5b@
  00016	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0001b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 31   : 		return 0xff;

  0001e	0c ff		 or	 al, 255			; 000000ffH

; 34   : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
$LN2@GetTabCoin:

; 32   : 	}
; 33   : 	return m_aShoptabs[tabIdx].coinType;

  00024	69 c2 d4 06 00
	00		 imul	 eax, edx, 1748
  0002a	8a 44 08 14	 mov	 al, BYTE PTR [eax+ecx+20]

; 34   : }

  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
?GetTabCoinType@CPythonShop@@QAEEE@Z ENDP		; CPythonShop::GetTabCoinType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?SetTabCoinType@CPythonShop@@QAEXEE@Z
_TEXT	SEGMENT
_tabIdx$ = 8						; size = 1
_coinType$ = 12						; size = 1
?SetTabCoinType@CPythonShop@@QAEXEE@Z PROC		; CPythonShop::SetTabCoinType, COMDAT
; _this$ = ecx

; 17   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 18   : 	if (tabIdx >= m_bTabCount)

  00003	8a 45 08	 mov	 al, BYTE PTR _tabIdx$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	0f b6 d0	 movzx	 edx, al
  0000c	3a 46 10	 cmp	 al, BYTE PTR [esi+16]
  0000f	72 15		 jb	 SHORT $LN2@SetTabCoin

; 19   : 	{	
; 20   : 		TraceError("Out of Index. tabIdx(%d) must be less than %d.", tabIdx, SHOP_TAB_COUNT_MAX);

  00011	6a 03		 push	 3
  00013	52		 push	 edx
  00014	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@FJEENICJ@Out?5of?5Index?4?5tabIdx?$CI?$CFd?$CJ?5must?5b@
  00019	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0001e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00021	5e		 pop	 esi

; 24   : }

  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
$LN2@SetTabCoin:

; 21   : 		return;
; 22   : 	}
; 23   : 	m_aShoptabs[tabIdx].coinType = coinType;

  00026	8a 45 0c	 mov	 al, BYTE PTR _coinType$[ebp]
  00029	69 ca d4 06 00
	00		 imul	 ecx, edx, 1748
  0002f	88 44 31 14	 mov	 BYTE PTR [ecx+esi+20], al
  00033	5e		 pop	 esi

; 24   : }

  00034	5d		 pop	 ebp
  00035	c2 08 00	 ret	 8
?SetTabCoinType@CPythonShop@@QAEXEE@Z ENDP		; CPythonShop::SetTabCoinType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?GetItemData@CPythonShop@@QAEHEKPAPBUpacket_shop_item@@@Z
_TEXT	SEGMENT
_tabIdx$ = 8						; size = 1
_dwSlotPos$ = 12					; size = 4
_c_ppItemData$ = 16					; size = 4
?GetItemData@CPythonShop@@QAEHEKPAPBUpacket_shop_item@@@Z PROC ; CPythonShop::GetItemData, COMDAT
; _this$ = ecx

; 85   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 86   : 	if (tabIdx >= SHOP_TAB_COUNT_MAX || dwSlotPos >= SHOP_HOST_ITEM_MAX_NUM)

  00003	8a 45 08	 mov	 al, BYTE PTR _tabIdx$[ebp]
  00006	8b 55 0c	 mov	 edx, DWORD PTR _dwSlotPos$[ebp]
  00009	56		 push	 esi
  0000a	8b f1		 mov	 esi, ecx
  0000c	3c 03		 cmp	 al, 3
  0000e	73 27		 jae	 SHORT $LN3@GetItemDat
  00010	83 fa 28	 cmp	 edx, 40			; 00000028H
  00013	73 22		 jae	 SHORT $LN3@GetItemDat

; 90   : 	}
; 91   : 
; 92   : 	*c_ppItemData = &m_aShoptabs[tabIdx].items[dwSlotPos];

  00015	0f b6 c0	 movzx	 eax, al
  00018	69 c8 d4 06 00
	00		 imul	 ecx, eax, 1748
  0001e	6b c2 2b	 imul	 eax, edx, 43
  00021	03 ce		 add	 ecx, esi
  00023	83 c0 30	 add	 eax, 48			; 00000030H
  00026	03 c8		 add	 ecx, eax
  00028	8b 45 10	 mov	 eax, DWORD PTR _c_ppItemData$[ebp]
  0002b	5e		 pop	 esi
  0002c	89 08		 mov	 DWORD PTR [eax], ecx

; 93   : 
; 94   : 	return TRUE;

  0002e	b8 01 00 00 00	 mov	 eax, 1

; 95   : }

  00033	5d		 pop	 ebp
  00034	c2 0c 00	 ret	 12			; 0000000cH
$LN3@GetItemDat:

; 87   : 	{
; 88   : 		TraceError("Out of Index. tabIdx(%d) must be less than %d. dwSlotPos(%d) must be less than %d", tabIdx, SHOP_TAB_COUNT_MAX, dwSlotPos, SHOP_HOST_ITEM_MAX_NUM);

  00037	6a 28		 push	 40			; 00000028H
  00039	52		 push	 edx
  0003a	6a 03		 push	 3
  0003c	0f b6 c0	 movzx	 eax, al
  0003f	50		 push	 eax
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0FC@PFANBFHB@Out?5of?5Index?4?5tabIdx?$CI?$CFd?$CJ?5must?5b@
  00045	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0004a	83 c4 14	 add	 esp, 20			; 00000014H

; 89   : 		return FALSE;

  0004d	33 c0		 xor	 eax, eax
  0004f	5e		 pop	 esi

; 95   : }

  00050	5d		 pop	 ebp
  00051	c2 0c 00	 ret	 12			; 0000000cH
?GetItemData@CPythonShop@@QAEHEKPAPBUpacket_shop_item@@@Z ENDP ; CPythonShop::GetItemData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?SetItemData@CPythonShop@@QAEXEKABUpacket_shop_item@@@Z
_TEXT	SEGMENT
_tabIdx$ = 8						; size = 1
_dwSlotPos$ = 12					; size = 4
_c_rShopItemData$ = 16					; size = 4
?SetItemData@CPythonShop@@QAEXEKABUpacket_shop_item@@@Z PROC ; CPythonShop::SetItemData, COMDAT
; _this$ = ecx

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 75   : 	if (tabIdx >= SHOP_TAB_COUNT_MAX || dwSlotPos >= SHOP_HOST_ITEM_MAX_NUM)

  00003	8a 45 08	 mov	 al, BYTE PTR _tabIdx$[ebp]
  00006	8b 55 0c	 mov	 edx, DWORD PTR _dwSlotPos$[ebp]
  00009	56		 push	 esi
  0000a	8b f1		 mov	 esi, ecx
  0000c	3c 03		 cmp	 al, 3
  0000e	73 44		 jae	 SHORT $LN3@SetItemDat
  00010	83 fa 28	 cmp	 edx, 40			; 00000028H
  00013	73 3f		 jae	 SHORT $LN3@SetItemDat

; 78   : 		return;
; 79   : 	}
; 80   : 
; 81   : 	m_aShoptabs[tabIdx].items[dwSlotPos] = c_rShopItemData;

  00015	0f b6 c0	 movzx	 eax, al
  00018	69 c8 d4 06 00
	00		 imul	 ecx, eax, 1748
  0001e	6b d2 2b	 imul	 edx, edx, 43
  00021	03 ce		 add	 ecx, esi
  00023	03 d1		 add	 edx, ecx
  00025	8b 4d 10	 mov	 ecx, DWORD PTR _c_rShopItemData$[ebp]
  00028	5e		 pop	 esi
  00029	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  0002c	0f 11 42 30	 movups	 XMMWORD PTR [edx+48], xmm0
  00030	0f 10 41 10	 movups	 xmm0, XMMWORD PTR [ecx+16]
  00034	0f 11 42 40	 movups	 XMMWORD PTR [edx+64], xmm0
  00038	f3 0f 7e 41 20	 movq	 xmm0, QWORD PTR [ecx+32]
  0003d	66 0f d6 42 50	 movq	 QWORD PTR [edx+80], xmm0
  00042	66 8b 41 28	 mov	 ax, WORD PTR [ecx+40]
  00046	66 89 42 58	 mov	 WORD PTR [edx+88], ax
  0004a	8a 41 2a	 mov	 al, BYTE PTR [ecx+42]
  0004d	88 42 5a	 mov	 BYTE PTR [edx+90], al

; 82   : }

  00050	5d		 pop	 ebp
  00051	c2 0c 00	 ret	 12			; 0000000cH
$LN3@SetItemDat:

; 76   : 	{
; 77   : 		TraceError("Out of Index. tabIdx(%d) must be less than %d. dwSlotPos(%d) must be less than %d", tabIdx, SHOP_TAB_COUNT_MAX, dwSlotPos, SHOP_HOST_ITEM_MAX_NUM);

  00054	6a 28		 push	 40			; 00000028H
  00056	52		 push	 edx
  00057	6a 03		 push	 3
  00059	0f b6 c0	 movzx	 eax, al
  0005c	50		 push	 eax
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_0FC@PFANBFHB@Out?5of?5Index?4?5tabIdx?$CI?$CFd?$CJ?5must?5b@
  00062	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00067	83 c4 14	 add	 esp, 20			; 00000014H
  0006a	5e		 pop	 esi

; 82   : }

  0006b	5d		 pop	 ebp
  0006c	c2 0c 00	 ret	 12			; 0000000cH
?SetItemData@CPythonShop@@QAEXEKABUpacket_shop_item@@@Z ENDP ; CPythonShop::SetItemData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?GetItemData@CPythonShop@@QAEHKPAPBUpacket_shop_item@@@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
_c_ppItemData$ = 12					; size = 4
?GetItemData@CPythonShop@@QAEHKPAPBUpacket_shop_item@@@Z PROC ; CPythonShop::GetItemData, COMDAT
; _this$ = ecx

; 66   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 67   : 	BYTE tabIdx = dwIndex / SHOP_HOST_ITEM_MAX_NUM;
; 68   : 	DWORD dwSlotPos = dwIndex % SHOP_HOST_ITEM_MAX_NUM;

  00004	8b 75 08	 mov	 esi, DWORD PTR _dwIndex$[ebp]
  00007	b8 cd cc cc cc	 mov	 eax, -858993459		; cccccccdH

; 69   : 
; 70   : 	return GetItemData(tabIdx, dwSlotPos, c_ppItemData);

  0000c	ff 75 0c	 push	 DWORD PTR _c_ppItemData$[ebp]
  0000f	f7 e6		 mul	 esi
  00011	c1 ea 05	 shr	 edx, 5
  00014	8d 04 92	 lea	 eax, DWORD PTR [edx+edx*4]
  00017	c1 e0 03	 shl	 eax, 3
  0001a	2b f0		 sub	 esi, eax
  0001c	56		 push	 esi
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ?GetItemData@CPythonShop@@QAEHEKPAPBUpacket_shop_item@@@Z ; CPythonShop::GetItemData
  00023	5e		 pop	 esi

; 71   : }

  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
?GetItemData@CPythonShop@@QAEHKPAPBUpacket_shop_item@@@Z ENDP ; CPythonShop::GetItemData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?SetItemData@CPythonShop@@QAEXKABUpacket_shop_item@@@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
_c_rShopItemData$ = 12					; size = 4
?SetItemData@CPythonShop@@QAEXKABUpacket_shop_item@@@Z PROC ; CPythonShop::SetItemData, COMDAT
; _this$ = ecx

; 58   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 59   : 	BYTE tabIdx = dwIndex / SHOP_HOST_ITEM_MAX_NUM;
; 60   : 	DWORD dwSlotPos = dwIndex % SHOP_HOST_ITEM_MAX_NUM;

  00004	8b 75 08	 mov	 esi, DWORD PTR _dwIndex$[ebp]
  00007	b8 cd cc cc cc	 mov	 eax, -858993459		; cccccccdH

; 61   : 	
; 62   : 	SetItemData(tabIdx, dwSlotPos, c_rShopItemData);

  0000c	ff 75 0c	 push	 DWORD PTR _c_rShopItemData$[ebp]
  0000f	f7 e6		 mul	 esi
  00011	c1 ea 05	 shr	 edx, 5
  00014	8d 04 92	 lea	 eax, DWORD PTR [edx+edx*4]
  00017	c1 e0 03	 shl	 eax, 3
  0001a	2b f0		 sub	 esi, eax
  0001c	56		 push	 esi
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ?SetItemData@CPythonShop@@QAEXEKABUpacket_shop_item@@@Z ; CPythonShop::SetItemData
  00023	5e		 pop	 esi

; 63   : }

  00024	5d		 pop	 ebp
  00025	c2 08 00	 ret	 8
?SetItemData@CPythonShop@@QAEXKABUpacket_shop_item@@@Z ENDP ; CPythonShop::SetItemData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?Clear@CPythonShop@@QAEXXZ
_TEXT	SEGMENT
?Clear@CPythonShop@@QAEXXZ PROC				; CPythonShop::Clear, COMDAT
; _this$ = ecx

; 191  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 192  : 	m_isShoping = FALSE;

  00004	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 193  : 	m_isPrivateShop = FALSE;

  0000b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 194  : 	m_isMainPlayerPrivateShop = FALSE;

  00012	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0

; 195  : 	ClearPrivateShopStock();

  00019	e8 00 00 00 00	 call	 ?ClearPrivateShopStock@CPythonShop@@QAEXXZ ; CPythonShop::ClearPrivateShopStock

; 196  : 	m_bTabCount = 1;

  0001e	c6 46 10 01	 mov	 BYTE PTR [esi+16], 1
  00022	bf 03 00 00 00	 mov	 edi, 3
  00027	83 c6 30	 add	 esi, 48			; 00000030H
  0002a	66 0f 1f 44 00
	00		 npad	 6
$LL4@Clear:

; 197  : 
; 198  : 	for (int i = 0; i < SHOP_TAB_COUNT_MAX; i++)
; 199  : 		memset (m_aShoptabs[i].items, 0, sizeof(TShopItemData) * SHOP_HOST_ITEM_MAX_NUM);

  00030	68 b8 06 00 00	 push	 1720			; 000006b8H
  00035	6a 00		 push	 0
  00037	56		 push	 esi
  00038	e8 00 00 00 00	 call	 _memset
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00040	81 c6 d4 06 00
	00		 add	 esi, 1748		; 000006d4H
  00046	83 ef 01	 sub	 edi, 1
  00049	75 e5		 jne	 SHORT $LL4@Clear

; 200  : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	c3		 ret	 0
?Clear@CPythonShop@@QAEXXZ ENDP				; CPythonShop::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ??1CPythonShop@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CPythonShop@@UAE@XZ PROC				; CPythonShop::~CPythonShop, COMDAT
; _this$ = ecx

; 208  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CPythonShop@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx

; 209  : }

  00025	8d 8e 90 14 00
	00		 lea	 ecx, DWORD PTR [esi+5264]
  0002b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CPythonShop@@6B@
  00031	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@USItemPos@@USShopItemTable@@U?$less@USItemPos@@@std@@V?$allocator@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >::~_Tree<std::_Tmap_traits<SItemPos,SShopItemTable,std::less<SItemPos>,std::allocator<std::pair<SItemPos const ,SShopItemTable> >,0> >
  00036	68 00 00 00 00	 push	 OFFSET ??1ShopTab@CPythonShop@@QAE@XZ
  0003b	6a 03		 push	 3
  0003d	68 d4 06 00 00	 push	 1748			; 000006d4H
  00042	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 19   : 	{ 

  0004b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CSingleton@VCPythonShop@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0; 

  00051	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A, 0 ; CSingleton<CPythonShop>::ms_singleton
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 209  : }

  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	5e		 pop	 esi
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
  0006c	cc		 int	 3
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CPythonShop@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CPythonShop@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CPythonShop@@UAE@XZ ENDP				; CPythonShop::~CPythonShop
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ??0CPythonShop@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__Pnode$2 = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CPythonShop@@QAE@XZ PROC				; CPythonShop::CPythonShop, COMDAT
; _this$ = ecx

; 203  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CPythonShop@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 15   : 		ms_singleton = (T*) ((int) this + offset);

  0002d	89 1d 00 00 00
	00		 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A, ebx ; CSingleton<CPythonShop>::ms_singleton
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 203  : {

  00033	68 00 00 00 00	 push	 OFFSET ??1ShopTab@CPythonShop@@QAE@XZ
  00038	68 00 00 00 00	 push	 OFFSET ??0ShopTab@CPythonShop@@QAE@XZ ; CPythonShop::ShopTab::ShopTab
  0003d	6a 03		 push	 3
  0003f	68 d4 06 00 00	 push	 1748			; 000006d4H
  00044	8d 43 14	 lea	 eax, DWORD PTR [ebx+20]
  00047	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004e	50		 push	 eax
  0004f	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CPythonShop@@6B@
  00055	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z
  0005a	8d bb 90 14 00
	00		 lea	 edi, DWORD PTR [ebx+5264]
  00060	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00064	6a 20		 push	 32			; 00000020H
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 203  : {

  00066	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  00069	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  0006f	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00076	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  0007b	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  0007d	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	89 75 f0	 mov	 DWORD PTR __Pnode$2[ebp], esi
  00085	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> *,std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  0008a	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  0008d	50		 push	 eax
  0008e	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00091	51		 push	 ecx
  00092	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> *,std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  00097	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  0009a	50		 push	 eax
  0009b	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBUSItemPos@@USShopItemTable@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> *,std::_Tree_node<std::pair<SItemPos const ,SShopItemTable>,void *> * const &>
  000a4	83 c4 1c	 add	 esp, 28			; 0000001cH

; 347  :         _Pnode->_Color = _Black;

  000a7	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 204  : 	Clear();

  000ad	8b cb		 mov	 ecx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  000af	89 37		 mov	 DWORD PTR [edi], esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp

; 204  : 	Clear();

  000b1	e8 00 00 00 00	 call	 ?Clear@CPythonShop@@QAEXXZ ; CPythonShop::Clear

; 205  : }

  000b6	8b c3		 mov	 eax, ebx
  000b8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c2	59		 pop	 ecx
  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CPythonShop@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CSingleton@VCPythonShop@@@@UAE@XZ ; CSingleton<CPythonShop>::~CSingleton<CPythonShop>
__unwindfunclet$??0CPythonShop@@QAE@XZ$1:
  00008	68 00 00 00 00	 push	 OFFSET ??1ShopTab@CPythonShop@@QAE@XZ
  0000d	6a 03		 push	 3
  0000f	68 d4 06 00 00	 push	 1748			; 000006d4H
  00014	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00017	83 c0 14	 add	 eax, 20			; 00000014H
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00020	c3		 ret	 0
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
  00025	cc		 int	 3
__ehhandler$??0CPythonShop@@QAE@XZ:
  00026	90		 npad	 1
  00027	90		 npad	 1
  00028	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002f	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00032	33 c8		 xor	 ecx, eax
  00034	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00039	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CPythonShop@@QAE@XZ
  0003e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CPythonShop@@QAE@XZ ENDP				; CPythonShop::CPythonShop
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
;	COMDAT ??_G?$CSingleton@VCPythonShop@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CSingleton@VCPythonShop@@@@UAEPAXI@Z PROC		; CSingleton<CPythonShop>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1

; 19   : 	{ 

  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CSingleton@VCPythonShop@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0; 

  00010	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A, 0 ; CSingleton<CPythonShop>::ms_singleton
  0001a	74 0b		 je	 SHORT $LN6@scalar
  0001c	6a 04		 push	 4
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00024	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_G?$CSingleton@VCPythonShop@@@@UAEPAXI@Z ENDP		; CSingleton<CPythonShop>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
;	COMDAT ??1?$CSingleton@VCPythonShop@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CSingleton@VCPythonShop@@@@UAE@XZ PROC		; CSingleton<CPythonShop>::~CSingleton<CPythonShop>, COMDAT
; _this$ = ecx

; 19   : 	{ 

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CSingleton@VCPythonShop@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0; 

  00006	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCPythonShop@@@@0PAVCPythonShop@@A, 0 ; CSingleton<CPythonShop>::ms_singleton

; 22   : 	}

  00010	c3		 ret	 0
??1?$CSingleton@VCPythonShop@@@@UAE@XZ ENDP		; CSingleton<CPythonShop>::~CSingleton<CPythonShop>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 271  : #if _HAS_IF_CONSTEXPR
; 272  :     if constexpr (is_array_v<_Ty>) {
; 273  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 274  :     } else
; 275  : #endif // _HAS_IF_CONSTEXPR
; 276  :     {
; 277  :         _Obj.~_Ty();
; 278  :     }
; 279  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonShop.cpp
;	COMDAT ?initshop@@YAXXZ
_TEXT	SEGMENT
?initshop@@YAXXZ PROC					; initshop, COMDAT

; 403  : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 404  : 	static PyMethodDef s_methods[] =
; 405  : 	{
; 406  : 		// Shop
; 407  : 		{ "Open",						shopOpen,						METH_VARARGS },
; 408  : 		{ "Close",						shopClose,						METH_VARARGS },
; 409  : 		{ "IsOpen",						shopIsOpen,						METH_VARARGS },
; 410  : 		{ "IsPrivateShop",				shopIsPrviateShop,				METH_VARARGS },
; 411  : 		{ "IsMainPlayerPrivateShop",	shopIsMainPlayerPrivateShop,	METH_VARARGS },
; 412  : 		{ "GetItemID",					shopGetItemID,					METH_VARARGS },
; 413  : 		{ "GetItemCount",				shopGetItemCount,				METH_VARARGS },
; 414  : 		{ "GetItemPrice",				shopGetItemPrice,				METH_VARARGS },
; 415  : 		{ "GetItemMetinSocket",			shopGetItemMetinSocket,			METH_VARARGS },
; 416  : 		{ "GetItemAttribute",			shopGetItemAttribute,			METH_VARARGS },
; 417  : 		{ "GetTabCount",				shopGetTabCount,				METH_VARARGS },
; 418  : 		{ "GetTabName",					shopGetTabName,					METH_VARARGS },
; 419  : 		{ "GetTabCoinType",				shopGetTabCoinType,				METH_VARARGS },
; 420  : 
; 421  : 		// Private Shop
; 422  : 		{ "ClearPrivateShopStock",		shopClearPrivateShopStock,		METH_VARARGS },
; 423  : 		{ "AddPrivateShopItemStock",	shopAddPrivateShopItemStock,	METH_VARARGS },
; 424  : 		{ "DelPrivateShopItemStock",	shopDelPrivateShopItemStock,	METH_VARARGS },
; 425  : 		{ "GetPrivateShopItemPrice",	shopGetPrivateShopItemPrice,	METH_VARARGS },
; 426  : 		{ "BuildPrivateShop",			shopBuildPrivateShop,			METH_VARARGS },
; 427  : 		{ NULL,							NULL,							NULL },
; 428  : 	};
; 429  : 	PyObject * poModule = Py_InitModule("shop", s_methods);

  00002	68 f5 03 00 00	 push	 1013			; 000003f5H
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	68 00 00 00 00	 push	 OFFSET ?s_methods@?1??initshop@@YAXXZ@4PAUPyMethodDef@@A
  00010	68 00 00 00 00	 push	 OFFSET ??_C@_04BFIJLIPK@shop@
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_InitModule4

; 430  : 
; 431  : 	PyModule_AddIntConstant(poModule, "SHOP_SLOT_COUNT", SHOP_HOST_ITEM_MAX_NUM);

  0001b	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__PyModule_AddIntConstant
  00021	8b f8		 mov	 edi, eax
  00023	6a 28		 push	 40			; 00000028H
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@MMIAEKCC@SHOP_SLOT_COUNT@
  0002a	57		 push	 edi
  0002b	ff d6		 call	 esi

; 432  : 	PyModule_AddIntConstant(poModule, "SHOP_COIN_TYPE_GOLD", SHOP_COIN_TYPE_GOLD);

  0002d	6a 00		 push	 0
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@FOBHCAAH@SHOP_COIN_TYPE_GOLD@
  00034	57		 push	 edi
  00035	ff d6		 call	 esi

; 433  : 	PyModule_AddIntConstant(poModule, "SHOP_COIN_TYPE_SECONDARY_COIN", SHOP_COIN_TYPE_SECONDARY_COIN);

  00037	6a 01		 push	 1
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@GEPHLMDC@SHOP_COIN_TYPE_SECONDARY_COIN@
  0003e	57		 push	 edi
  0003f	ff d6		 call	 esi
  00041	83 c4 38	 add	 esp, 56			; 00000038H
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi

; 434  : }

  00046	c3		 ret	 0
?initshop@@YAXXZ ENDP					; initshop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\GameType.h
;	COMDAT ??0SItemPos@@QAE@XZ
_TEXT	SEGMENT
??0SItemPos@@QAE@XZ PROC				; SItemPos::SItemPos, COMDAT
; _this$ = ecx

; 185  :     {
; 186  : 		window_type =     INVENTORY;
; 187  : 		cell = WORD_MAX;

  00000	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  00005	c6 01 01	 mov	 BYTE PTR [ecx], 1
  00008	66 89 41 01	 mov	 WORD PTR [ecx+1], ax

; 188  :     }

  0000c	8b c1		 mov	 eax, ecx
  0000e	c3		 ret	 0
??0SItemPos@@QAE@XZ ENDP				; SItemPos::SItemPos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ?_Throw_tree_length_error@std@@YAXXZ
_TEXT	SEGMENT
?_Throw_tree_length_error@std@@YAXXZ PROC		; std::_Throw_tree_length_error, COMDAT

; 415  :     _Xlength_error("map/set too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Throw_tree:
  0000a	cc		 int	 3
?_Throw_tree_length_error@std@@YAXXZ ENDP		; std::_Throw_tree_length_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__New_ptr$1 = 12					; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 3042 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	57		 push	 edi

; 3043 :         // assign [_Ptr, _Ptr + _Count)
; 3044 :         if (_Count <= _Mypair._Myval2._Myres) {

  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b f9		 cmp	 edi, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2209 :         value_type* _Result = _Bx._Buf;

  00016	8b de		 mov	 ebx, esi

; 2227 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2210 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2211 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 1e		 mov	 ebx, DWORD PTR [esi]
$LN5@assign:

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0001f	57		 push	 edi
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 3045 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00026	53		 push	 ebx
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3047 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 3059 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4305 :         if (_New_size > max_size()) {

  0003e	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  00044	0f 87 91 00 00
	00		 ja	 $LN36@assign

; 4285 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b df		 mov	 ebx, edi
  0004c	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0004f	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4286 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 07		 jbe	 SHORT $LN19@assign

; 4287 :             return _Max;

  00057	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0005c	eb 1e		 jmp	 SHORT $LN18@assign
$LN19@assign:

; 4288 :         }
; 4289 : 
; 4290 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0005e	8b d1		 mov	 edx, ecx
  00060	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00065	d1 ea		 shr	 edx, 1
  00067	2b c2		 sub	 eax, edx
  00069	3b c8		 cmp	 ecx, eax
  0006b	76 07		 jbe	 SHORT $LN20@assign

; 4291 :             return _Max;

  0006d	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00072	eb 08		 jmp	 SHORT $LN18@assign
$LN20@assign:

; 4292 :         }
; 4293 : 
; 4294 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00074	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00077	3b d8		 cmp	 ebx, eax
  00079	0f 42 d8	 cmovb	 ebx, eax
$LN18@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4312 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0007c	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00085	57		 push	 edi
  00086	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4312 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00089	89 45 0c	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0008c	50		 push	 eax

; 4314 :         _Mypair._Myval2._Mysize = _New_size;

  0008d	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 4315 :         _Mypair._Myval2._Myres  = _New_capacity;

  00090	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00093	e8 00 00 00 00	 call	 _memcpy

; 3056 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00098	8b 5d 0c	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0009b	83 c4 10	 add	 esp, 16			; 00000010H

; 4317 :         if (_BUF_SIZE <= _Old_capacity) {

  0009e	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 3056 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a1	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 4317 :         if (_BUF_SIZE <= _Old_capacity) {

  000a5	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a8	72 19		 jb	 SHORT $LN13@assign

; 4318 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000aa	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ab	50		 push	 eax
  000ac	ff 36		 push	 DWORD PTR [esi]
  000ae	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3059 :     }

  000b3	83 c4 08	 add	 esp, 8

; 4319 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000b6	89 1e		 mov	 DWORD PTR [esi], ebx

; 3059 :     }

  000b8	8b c6		 mov	 eax, esi
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
$LN13@assign:

; 4321 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000c3	8d 45 0c	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000c6	50		 push	 eax
  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 3059 :     }

  000cd	83 c4 08	 add	 esp, 8
  000d0	8b c6		 mov	 eax, esi
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
$LN36@assign:

; 4306 :             _Xlen_string(); // result too long

  000db	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN33@assign:
  000e0	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2275 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
