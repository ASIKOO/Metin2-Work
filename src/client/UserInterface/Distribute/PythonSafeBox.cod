; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?initsafebox@@YAXXZ				; initsafebox
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??1?$CSingleton@VCPythonSafeBox@@@@UAE@XZ	; CSingleton<CPythonSafeBox>::~CSingleton<CPythonSafeBox>
PUBLIC	??_G?$CSingleton@VCPythonSafeBox@@@@UAEPAXI@Z	; CSingleton<CPythonSafeBox>::`scalar deleting destructor'
PUBLIC	??0CPythonSafeBox@@QAE@XZ			; CPythonSafeBox::CPythonSafeBox
PUBLIC	??1CPythonSafeBox@@UAE@XZ			; CPythonSafeBox::~CPythonSafeBox
PUBLIC	?OpenSafeBox@CPythonSafeBox@@QAEXH@Z		; CPythonSafeBox::OpenSafeBox
PUBLIC	?SetItemData@CPythonSafeBox@@QAEXKABUpacket_item@@@Z ; CPythonSafeBox::SetItemData
PUBLIC	?DelItemData@CPythonSafeBox@@QAEXK@Z		; CPythonSafeBox::DelItemData
PUBLIC	?SetMoney@CPythonSafeBox@@QAEXK@Z		; CPythonSafeBox::SetMoney
PUBLIC	?GetMoney@CPythonSafeBox@@QAEKXZ		; CPythonSafeBox::GetMoney
PUBLIC	?GetSlotItemID@CPythonSafeBox@@QAEHKPAK@Z	; CPythonSafeBox::GetSlotItemID
PUBLIC	?GetCurrentSafeBoxSize@CPythonSafeBox@@QAEHXZ	; CPythonSafeBox::GetCurrentSafeBoxSize
PUBLIC	?GetItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetItemDataPtr
PUBLIC	?OpenMall@CPythonSafeBox@@QAEXH@Z		; CPythonSafeBox::OpenMall
PUBLIC	?SetMallItemData@CPythonSafeBox@@QAEXKABUpacket_item@@@Z ; CPythonSafeBox::SetMallItemData
PUBLIC	?DelMallItemData@CPythonSafeBox@@QAEXK@Z	; CPythonSafeBox::DelMallItemData
PUBLIC	?GetMallItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetMallItemDataPtr
PUBLIC	?GetSlotMallItemID@CPythonSafeBox@@QAEHKPAK@Z	; CPythonSafeBox::GetSlotMallItemID
PUBLIC	?GetMallSize@CPythonSafeBox@@QAEKXZ		; CPythonSafeBox::GetMallSize
PUBLIC	?resize@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@QAEXI@Z ; std::vector<packet_item,std::allocator<packet_item> >::resize
PUBLIC	?_Xlength@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@CAXXZ ; std::vector<packet_item,std::allocator<packet_item> >::_Xlength
PUBLIC	??_GCPythonSafeBox@@UAEPAXI@Z			; CPythonSafeBox::`scalar deleting destructor'
PUBLIC	?safeboxGetCurrentSafeboxSize@@YAPAU_object@@PAU1@0@Z ; safeboxGetCurrentSafeboxSize
PUBLIC	?safeboxGetItemID@@YAPAU_object@@PAU1@0@Z	; safeboxGetItemID
PUBLIC	?safeboxGetItemCount@@YAPAU_object@@PAU1@0@Z	; safeboxGetItemCount
PUBLIC	?safeboxGetItemFlags@@YAPAU_object@@PAU1@0@Z	; safeboxGetItemFlags
PUBLIC	?safeboxGetItemMetinSocket@@YAPAU_object@@PAU1@0@Z ; safeboxGetItemMetinSocket
PUBLIC	?safeboxGetItemAttribute@@YAPAU_object@@PAU1@0@Z ; safeboxGetItemAttribute
PUBLIC	?safeboxGetMoney@@YAPAU_object@@PAU1@0@Z	; safeboxGetMoney
PUBLIC	?safeboxGetMallItemID@@YAPAU_object@@PAU1@0@Z	; safeboxGetMallItemID
PUBLIC	?safeboxGetMallItemCount@@YAPAU_object@@PAU1@0@Z ; safeboxGetMallItemCount
PUBLIC	?safeboxGetMallItemMetinSocket@@YAPAU_object@@PAU1@0@Z ; safeboxGetMallItemMetinSocket
PUBLIC	?safeboxGetMallItemAttribute@@YAPAU_object@@PAU1@0@Z ; safeboxGetMallItemAttribute
PUBLIC	?safeboxGetMallSize@@YAPAU_object@@PAU1@0@Z	; safeboxGetMallSize
PUBLIC	??$_Destroy_range@V?$allocator@Upacket_item@@@std@@@std@@YAXPAUpacket_item@@QAU1@AAV?$allocator@Upacket_item@@@0@@Z ; std::_Destroy_range<std::allocator<packet_item> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<packet_item,std::allocator<packet_item> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@PAU1@IAAV?$allocator@Upacket_item@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<packet_item> >
PUBLIC	??$_Uninitialized_move@PAUpacket_item@@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@QAU1@0PAU1@AAV?$allocator@Upacket_item@@@0@@Z ; std::_Uninitialized_move<packet_item *,std::allocator<packet_item> >
PUBLIC	??$_Copy_memmove@PAUpacket_item@@PAU1@@std@@YAPAUpacket_item@@PAU1@00@Z ; std::_Copy_memmove<packet_item *,packet_item *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
PUBLIC	??_7?$CSingleton@VCPythonSafeBox@@@@6B@		; CSingleton<CPythonSafeBox>::`vftable'
PUBLIC	??_7CPythonSafeBox@@6B@				; CPythonSafeBox::`vftable'
PUBLIC	??_C@_0EB@NFGEBKNF@CPythonSafeBox?3?3SetItemData?$CIdwS@ ; `string'
PUBLIC	??_C@_0EB@ILLOPJOM@CPythonSafeBox?3?3DelItemData?$CIdwS@ ; `string'
PUBLIC	??_C@_0ED@OIOPNNLC@CPythonSafeBox?3?3GetSlotItemID?$CId@ ; `string'
PUBLIC	??_C@_0EB@BNCIHACH@CPythonSafeBox?3?3GetItemData?$CIdwS@ ; `string'
PUBLIC	??_C@_0EF@BFNMLNFN@CPythonSafeBox?3?3SetMallItemData@ ; `string'
PUBLIC	??_C@_0EF@MEFPDFOJ@CPythonSafeBox?3?3DelMallItemData@ ; `string'
PUBLIC	??_C@_0EH@BNEMANLE@CPythonSafeBox?3?3GetMallSlotItem@ ; `string'
PUBLIC	??_C@_01KBJDNOO@i@				; `string'
PUBLIC	??_C@_02PDIHAGKM@ii@				; `string'
PUBLIC	??_C@_0BG@JANGHGIO@GetCurrentSafeboxSize@	; `string'
PUBLIC	??_C@_09GMBNEEAB@GetItemID@			; `string'
PUBLIC	??_C@_0N@LEKALLIG@GetItemCount@			; `string'
PUBLIC	??_C@_0N@DMCGDNGF@GetItemFlags@			; `string'
PUBLIC	??_C@_0BD@JBOBKHIE@GetItemMetinSocket@		; `string'
PUBLIC	??_C@_0BB@GOKPPDHH@GetItemAttribute@		; `string'
PUBLIC	??_C@_08OAJFGNBC@GetMoney@			; `string'
PUBLIC	??_C@_0O@BCKKGAPN@GetMallItemID@		; `string'
PUBLIC	??_C@_0BB@KMJDPGMF@GetMallItemCount@		; `string'
PUBLIC	??_C@_0BH@EIOFOGDJ@GetMallItemMetinSocket@	; `string'
PUBLIC	??_C@_0BF@HIELOHFB@GetMallItemAttribute@	; `string'
PUBLIC	??_C@_0M@GGDNKKEE@GetMallSize@			; `string'
PUBLIC	??_C@_07CPPOKFKF@safebox@			; `string'
PUBLIC	??_C@_0BF@DMABFMEE@SAFEBOX_SLOT_X_COUNT@	; `string'
PUBLIC	??_C@_0BF@PAKLFMNK@SAFEBOX_SLOT_Y_COUNT@	; `string'
PUBLIC	??_C@_0BC@JOOAEPKL@SAFEBOX_PAGE_SIZE@		; `string'
PUBLIC	??_R4CPythonSafeBox@@6B@			; CPythonSafeBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCPythonSafeBox@@@8			; CPythonSafeBox `RTTI Type Descriptor'
PUBLIC	??_R3CPythonSafeBox@@8				; CPythonSafeBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CPythonSafeBox@@8				; CPythonSafeBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CPythonSafeBox@@8			; CPythonSafeBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$CSingleton@VCPythonSafeBox@@@@8	; CSingleton<CPythonSafeBox>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$CSingleton@VCPythonSafeBox@@@@@8	; CSingleton<CPythonSafeBox> `RTTI Type Descriptor'
PUBLIC	??_R3?$CSingleton@VCPythonSafeBox@@@@8		; CSingleton<CPythonSafeBox>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CSingleton@VCPythonSafeBox@@@@8		; CSingleton<CPythonSafeBox>::`RTTI Base Class Array'
PUBLIC	??_R4?$CSingleton@VCPythonSafeBox@@@@6B@	; CSingleton<CPythonSafeBox>::`RTTI Complete Object Locator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	__imp__Py_BuildValue:PROC
EXTRN	__imp__PyModule_AddIntConstant:PROC
EXTRN	__imp__Py_InitModule4:PROC
EXTRN	?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z:PROC ; PyTuple_GetInteger
EXTRN	?Py_BuildException@@YAPAU_object@@PBDZZ:PROC	; Py_BuildException
EXTRN	?Py_BadArgument@@YAPAU_object@@XZ:PROC		; Py_BadArgument
EXTRN	??_E?$CSingleton@VCPythonSafeBox@@@@UAEPAXI@Z:PROC ; CSingleton<CPythonSafeBox>::`vector deleting destructor'
EXTRN	??_ECPythonSafeBox@@UAEPAXI@Z:PROC		; CPythonSafeBox::`vector deleting destructor'
EXTRN	__CxxThrowException@8:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A DD 01H DUP (?) ; CSingleton<CPythonSafeBox>::ms_singleton
_BSS	ENDS
;	COMDAT ??_R4?$CSingleton@VCPythonSafeBox@@@@6B@
rdata$r	SEGMENT
??_R4?$CSingleton@VCPythonSafeBox@@@@6B@ DD 00H		; CSingleton<CPythonSafeBox>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CSingleton@VCPythonSafeBox@@@@@8
	DD	FLAT:??_R3?$CSingleton@VCPythonSafeBox@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CSingleton@VCPythonSafeBox@@@@8
rdata$r	SEGMENT
??_R2?$CSingleton@VCPythonSafeBox@@@@8 DD FLAT:??_R1A@?0A@EA@?$CSingleton@VCPythonSafeBox@@@@8 ; CSingleton<CPythonSafeBox>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CSingleton@VCPythonSafeBox@@@@8
rdata$r	SEGMENT
??_R3?$CSingleton@VCPythonSafeBox@@@@8 DD 00H		; CSingleton<CPythonSafeBox>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CSingleton@VCPythonSafeBox@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CSingleton@VCPythonSafeBox@@@@@8
data$rs	SEGMENT
??_R0?AV?$CSingleton@VCPythonSafeBox@@@@@8 DD FLAT:??_7type_info@@6B@ ; CSingleton<CPythonSafeBox> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CSingleton@VCPythonSafeBox@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CSingleton@VCPythonSafeBox@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CSingleton@VCPythonSafeBox@@@@8 DD FLAT:??_R0?AV?$CSingleton@VCPythonSafeBox@@@@@8 ; CSingleton<CPythonSafeBox>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CSingleton@VCPythonSafeBox@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CPythonSafeBox@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CPythonSafeBox@@8 DD FLAT:??_R0?AVCPythonSafeBox@@@8 ; CPythonSafeBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CPythonSafeBox@@8
rdata$r	ENDS
;	COMDAT ??_R2CPythonSafeBox@@8
rdata$r	SEGMENT
??_R2CPythonSafeBox@@8 DD FLAT:??_R1A@?0A@EA@CPythonSafeBox@@8 ; CPythonSafeBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$CSingleton@VCPythonSafeBox@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CPythonSafeBox@@8
rdata$r	SEGMENT
??_R3CPythonSafeBox@@8 DD 00H				; CPythonSafeBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CPythonSafeBox@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCPythonSafeBox@@@8
data$rs	SEGMENT
??_R0?AVCPythonSafeBox@@@8 DD FLAT:??_7type_info@@6B@	; CPythonSafeBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCPythonSafeBox@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CPythonSafeBox@@6B@
rdata$r	SEGMENT
??_R4CPythonSafeBox@@6B@ DD 00H				; CPythonSafeBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCPythonSafeBox@@@8
	DD	FLAT:??_R3CPythonSafeBox@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BC@JOOAEPKL@SAFEBOX_PAGE_SIZE@
CONST	SEGMENT
??_C@_0BC@JOOAEPKL@SAFEBOX_PAGE_SIZE@ DB 'SAFEBOX_PAGE_SIZE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PAKLFMNK@SAFEBOX_SLOT_Y_COUNT@
CONST	SEGMENT
??_C@_0BF@PAKLFMNK@SAFEBOX_SLOT_Y_COUNT@ DB 'SAFEBOX_SLOT_Y_COUNT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DMABFMEE@SAFEBOX_SLOT_X_COUNT@
CONST	SEGMENT
??_C@_0BF@DMABFMEE@SAFEBOX_SLOT_X_COUNT@ DB 'SAFEBOX_SLOT_X_COUNT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07CPPOKFKF@safebox@
CONST	SEGMENT
??_C@_07CPPOKFKF@safebox@ DB 'safebox', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GGDNKKEE@GetMallSize@
CONST	SEGMENT
??_C@_0M@GGDNKKEE@GetMallSize@ DB 'GetMallSize', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HIELOHFB@GetMallItemAttribute@
CONST	SEGMENT
??_C@_0BF@HIELOHFB@GetMallItemAttribute@ DB 'GetMallItemAttribute', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EIOFOGDJ@GetMallItemMetinSocket@
CONST	SEGMENT
??_C@_0BH@EIOFOGDJ@GetMallItemMetinSocket@ DB 'GetMallItemMetinSocket', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KMJDPGMF@GetMallItemCount@
CONST	SEGMENT
??_C@_0BB@KMJDPGMF@GetMallItemCount@ DB 'GetMallItemCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BCKKGAPN@GetMallItemID@
CONST	SEGMENT
??_C@_0O@BCKKGAPN@GetMallItemID@ DB 'GetMallItemID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAJFGNBC@GetMoney@
CONST	SEGMENT
??_C@_08OAJFGNBC@GetMoney@ DB 'GetMoney', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GOKPPDHH@GetItemAttribute@
CONST	SEGMENT
??_C@_0BB@GOKPPDHH@GetItemAttribute@ DB 'GetItemAttribute', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JBOBKHIE@GetItemMetinSocket@
CONST	SEGMENT
??_C@_0BD@JBOBKHIE@GetItemMetinSocket@ DB 'GetItemMetinSocket', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DMCGDNGF@GetItemFlags@
CONST	SEGMENT
??_C@_0N@DMCGDNGF@GetItemFlags@ DB 'GetItemFlags', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LEKALLIG@GetItemCount@
CONST	SEGMENT
??_C@_0N@LEKALLIG@GetItemCount@ DB 'GetItemCount', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09GMBNEEAB@GetItemID@
CONST	SEGMENT
??_C@_09GMBNEEAB@GetItemID@ DB 'GetItemID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JANGHGIO@GetCurrentSafeboxSize@
CONST	SEGMENT
??_C@_0BG@JANGHGIO@GetCurrentSafeboxSize@ DB 'GetCurrentSafeboxSize', 00H ; `string'
CONST	ENDS
;	COMDAT ?s_methods@?1??initsafebox@@YAXXZ@4PAUPyMethodDef@@A
_DATA	SEGMENT
?s_methods@?1??initsafebox@@YAXXZ@4PAUPyMethodDef@@A DD FLAT:??_C@_0BG@JANGHGIO@GetCurrentSafeboxSize@ ; `initsafebox'::`2'::s_methods
	DD	FLAT:?safeboxGetCurrentSafeboxSize@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_09GMBNEEAB@GetItemID@
	DD	FLAT:?safeboxGetItemID@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0N@LEKALLIG@GetItemCount@
	DD	FLAT:?safeboxGetItemCount@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0N@DMCGDNGF@GetItemFlags@
	DD	FLAT:?safeboxGetItemFlags@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BD@JBOBKHIE@GetItemMetinSocket@
	DD	FLAT:?safeboxGetItemMetinSocket@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BB@GOKPPDHH@GetItemAttribute@
	DD	FLAT:?safeboxGetItemAttribute@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_08OAJFGNBC@GetMoney@
	DD	FLAT:?safeboxGetMoney@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0O@BCKKGAPN@GetMallItemID@
	DD	FLAT:?safeboxGetMallItemID@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BB@KMJDPGMF@GetMallItemCount@
	DD	FLAT:?safeboxGetMallItemCount@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BH@EIOFOGDJ@GetMallItemMetinSocket@
	DD	FLAT:?safeboxGetMallItemMetinSocket@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BF@HIELOHFB@GetMallItemAttribute@
	DD	FLAT:?safeboxGetMallItemAttribute@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0M@GGDNKKEE@GetMallSize@
	DD	FLAT:?safeboxGetMallSize@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	00H
	DD	00H
	DD	00H
	ORG $+4
_DATA	ENDS
;	COMDAT ??_C@_02PDIHAGKM@ii@
CONST	SEGMENT
??_C@_02PDIHAGKM@ii@ DB 'ii', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KBJDNOO@i@
CONST	SEGMENT
??_C@_01KBJDNOO@i@ DB 'i', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@BNEMANLE@CPythonSafeBox?3?3GetMallSlotItem@
CONST	SEGMENT
??_C@_0EH@BNEMANLE@CPythonSafeBox?3?3GetMallSlotItem@ DB 'CPythonSafeBox:'
	DB	':GetMallSlotItemID(dwSlotIndex=%d) - Strange slot index', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@MEFPDFOJ@CPythonSafeBox?3?3DelMallItemData@
CONST	SEGMENT
??_C@_0EF@MEFPDFOJ@CPythonSafeBox?3?3DelMallItemData@ DB 'CPythonSafeBox:'
	DB	':DelMallItemData(dwSlotIndex=%d) - Strange slot index', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@BFNMLNFN@CPythonSafeBox?3?3SetMallItemData@
CONST	SEGMENT
??_C@_0EF@BFNMLNFN@CPythonSafeBox?3?3SetMallItemData@ DB 'CPythonSafeBox:'
	DB	':SetMallItemData(dwSlotIndex=%d) - Strange slot index', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@BNCIHACH@CPythonSafeBox?3?3GetItemData?$CIdwS@
CONST	SEGMENT
??_C@_0EB@BNCIHACH@CPythonSafeBox?3?3GetItemData?$CIdwS@ DB 'CPythonSafeB'
	DB	'ox::GetItemData(dwSlotIndex=%d) - Strange slot index', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@OIOPNNLC@CPythonSafeBox?3?3GetSlotItemID?$CId@
CONST	SEGMENT
??_C@_0ED@OIOPNNLC@CPythonSafeBox?3?3GetSlotItemID?$CId@ DB 'CPythonSafeB'
	DB	'ox::GetSlotItemID(dwSlotIndex=%d) - Strange slot index', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@ILLOPJOM@CPythonSafeBox?3?3DelItemData?$CIdwS@
CONST	SEGMENT
??_C@_0EB@ILLOPJOM@CPythonSafeBox?3?3DelItemData?$CIdwS@ DB 'CPythonSafeB'
	DB	'ox::DelItemData(dwSlotIndex=%d) - Strange slot index', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@NFGEBKNF@CPythonSafeBox?3?3SetItemData?$CIdwS@
CONST	SEGMENT
??_C@_0EB@NFGEBKNF@CPythonSafeBox?3?3SetItemData?$CIdwS@ DB 'CPythonSafeB'
	DB	'ox::SetItemData(dwSlotIndex=%d) - Strange slot index', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CPythonSafeBox@@6B@
CONST	SEGMENT
??_7CPythonSafeBox@@6B@ DD FLAT:??_R4CPythonSafeBox@@6B@ ; CPythonSafeBox::`vftable'
	DD	FLAT:??_ECPythonSafeBox@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CSingleton@VCPythonSafeBox@@@@6B@
CONST	SEGMENT
??_7?$CSingleton@VCPythonSafeBox@@@@6B@ DD FLAT:??_R4?$CSingleton@VCPythonSafeBox@@@@6B@ ; CSingleton<CPythonSafeBox>::`vftable'
	DD	FLAT:??_E?$CSingleton@VCPythonSafeBox@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Copy_memmove@PAUpacket_item@@PAU1@@std@@YAPAUpacket_item@@PAU1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAUpacket_item@@PAU1@@std@@YAPAUpacket_item@@PAU1@00@Z PROC ; std::_Copy_memmove<packet_item *,packet_item *>, COMDAT

; 4360 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4361 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4362 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4363 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4364 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4365 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4366 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4367 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAUpacket_item@@PAU1@@std@@YAPAUpacket_item@@PAU1@00@Z ENDP ; std::_Copy_memmove<packet_item *,packet_item *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUpacket_item@@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@QAU1@0PAU1@AAV?$allocator@Upacket_item@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUpacket_item@@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@QAU1@0PAU1@AAV?$allocator@Upacket_item@@@0@@Z PROC ; std::_Uninitialized_move<packet_item *,std::allocator<packet_item> >, COMDAT

; 1685 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 1686 :     // move [_First, _Last) to raw _Dest, using _Al
; 1687 :     // note: only called internally from elsewhere in the STL
; 1688 :     using _Ptrval     = typename _Alloc::value_type*;
; 1689 :     auto _UFirst      = _Get_unwrapped(_First);
; 1690 :     const auto _ULast = _Get_unwrapped(_Last);
; 1691 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1692 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1693 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	ff 75 10	 push	 DWORD PTR __Dest$[ebp]
  00007	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000a	57		 push	 edi
  0000b	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0000e	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUpacket_item@@PAU1@@std@@YAPAUpacket_item@@PAU1@00@Z ; std::_Copy_memmove<packet_item *,packet_item *>

; 1694 :         return _Dest + (_ULast - _UFirst);

  00013	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00016	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  0001b	f7 ef		 imul	 edi
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	03 d7		 add	 edx, edi
  00022	c1 fa 05	 sar	 edx, 5
  00025	8b c2		 mov	 eax, edx
  00027	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0002a	03 c2		 add	 eax, edx
  0002c	6b c0 2e	 imul	 eax, eax, 46
  0002f	5f		 pop	 edi
  00030	03 45 10	 add	 eax, DWORD PTR __Dest$[ebp]

; 1695 :     } else {
; 1696 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1697 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1698 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1699 :         }
; 1700 : 
; 1701 :         return _Backout._Release();
; 1702 :     }
; 1703 : }

  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
??$_Uninitialized_move@PAUpacket_item@@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@QAU1@0PAU1@AAV?$allocator@Upacket_item@@@0@@Z ENDP ; std::_Uninitialized_move<packet_item *,std::allocator<packet_item> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@PAU1@IAAV?$allocator@Upacket_item@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@PAU1@IAAV?$allocator@Upacket_item@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<packet_item> >, COMDAT

; 1862 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1863 :     // value-initialize _Count objects to raw _First, using _Al
; 1864 :     using _Ptrty = typename _Alloc::value_type*;
; 1865 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1866 :         auto _PFirst = _Unfancy(_First);
; 1867 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1868 :         return _First + _Count;
; 1869 :     } else {
; 1870 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1871 :         for (; 0 < _Count; --_Count) {

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	57		 push	 edi

; 1535 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00007	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]

; 1863 :     // value-initialize _Count objects to raw _First, using _Al
; 1864 :     using _Ptrty = typename _Alloc::value_type*;
; 1865 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1866 :         auto _PFirst = _Unfancy(_First);
; 1867 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1868 :         return _First + _Count;
; 1869 :     } else {
; 1870 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1871 :         for (; 0 < _Count; --_Count) {

  0000a	85 c0		 test	 eax, eax
  0000c	74 17		 je	 SHORT $LN18@Uninitiali
  0000e	56		 push	 esi
  0000f	6b f0 2e	 imul	 esi, eax, 46
  00012	56		 push	 esi
  00013	6a 00		 push	 0
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 _memset
  0001b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001e	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]

; 1872 :             _Backout._Emplace_back();
; 1873 :         }
; 1874 : 
; 1875 :         return _Backout._Release();

  00021	5e		 pop	 esi
  00022	5f		 pop	 edi

; 1876 :     }
; 1877 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
$LN18@Uninitiali:

; 1872 :             _Backout._Emplace_back();
; 1873 :         }
; 1874 : 
; 1875 :         return _Backout._Release();

  00025	8b c7		 mov	 eax, edi
  00027	5f		 pop	 edi

; 1876 :     }
; 1877 : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@PAU1@IAAV?$allocator@Upacket_item@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<packet_item> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
tv324 = -4						; size = 4
__Oldsize$1$ = 8					; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<packet_item,std::allocator<packet_item> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1182 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 1183 :         if (_Newsize > max_size()) {

  00005	8b 5d 08	 mov	 ebx, DWORD PTR __Newsize$[ebp]
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f9		 mov	 edi, ecx
  0000c	81 fb 16 b2 90
	05		 cmp	 ebx, 93368854		; 0590b216H
  00012	0f 87 dc 00 00
	00		 ja	 $LN35@Resize_rea

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00018	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0001b	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  00020	2b 0f		 sub	 ecx, DWORD PTR [edi]
  00022	f7 e9		 imul	 ecx
  00024	03 d1		 add	 edx, ecx

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00026	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00029	2b 0f		 sub	 ecx, DWORD PTR [edi]

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;
; 1188 :         pointer& _Myfirst = _My_data._Myfirst;
; 1189 :         pointer& _Mylast  = _My_data._Mylast;
; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0002b	c1 fa 05	 sar	 edx, 5
  0002e	8b c2		 mov	 eax, edx
  00030	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00033	03 c2		 add	 eax, edx
  00035	89 45 08	 mov	 DWORD PTR __Oldsize$1$[ebp], eax

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00038	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  0003d	f7 e9		 imul	 ecx

; 1620 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0003f	b8 16 b2 90 05	 mov	 eax, 93368854		; 0590b216H

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00044	03 d1		 add	 edx, ecx
  00046	c1 fa 05	 sar	 edx, 5
  00049	8b ca		 mov	 ecx, edx
  0004b	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0004e	03 ca		 add	 ecx, edx

; 1620 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00050	8b d1		 mov	 edx, ecx
  00052	d1 ea		 shr	 edx, 1
  00054	2b c2		 sub	 eax, edx
  00056	3b c8		 cmp	 ecx, eax
  00058	76 7c		 jbe	 SHORT $LN10@Resize_rea

; 1621 :             return _Max; // geometric growth would overflow

  0005a	b8 16 b2 90 05	 mov	 eax, 93368854		; 0590b216H
$LN18@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 65   :     return _Count * _Ty_size;

  0005f	6b c0 2e	 imul	 eax, eax, 46

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00062	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00063	89 45 fc	 mov	 DWORD PTR tv324[ebp], eax

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00066	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  0006b	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  0006d	8b c3		 mov	 eax, ebx
  0006f	2b 45 08	 sub	 eax, DWORD PTR __Oldsize$1$[ebp]

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00072	57		 push	 edi
  00073	50		 push	 eax

; 1192 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);
; 1193 : 
; 1194 :         const pointer _Newvec         = _Getal().allocate(_Newcapacity);
; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  00074	6b 45 08 2e	 imul	 eax, DWORD PTR __Oldsize$1$[ebp], 46
  00078	03 c6		 add	 eax, esi

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@PAU1@IAAV?$allocator@Upacket_item@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<packet_item> >

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00080	57		 push	 edi
  00081	56		 push	 esi
  00082	ff 77 04	 push	 DWORD PTR [edi+4]
  00085	ff 37		 push	 DWORD PTR [edi]
  00087	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUpacket_item@@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@QAU1@0PAU1@AAV?$allocator@Upacket_item@@@0@@Z ; std::_Uninitialized_move<packet_item *,std::allocator<packet_item> >

; 1676 :         if (_Myfirst) { // destroy and deallocate old array

  0008c	8b 07		 mov	 eax, DWORD PTR [edi]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0008e	83 c4 20	 add	 esp, 32			; 00000020H

; 1676 :         if (_Myfirst) { // destroy and deallocate old array

  00091	85 c0		 test	 eax, eax
  00093	74 26		 je	 SHORT $LN29@Resize_rea

; 1677 :             _Destroy(_Myfirst, _Mylast);
; 1678 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00095	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00098	2b c8		 sub	 ecx, eax
  0009a	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  0009f	f7 e9		 imul	 ecx
  000a1	03 d1		 add	 edx, ecx
  000a3	c1 fa 05	 sar	 edx, 5
  000a6	8b c2		 mov	 eax, edx
  000a8	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000ab	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ad	6b c0 2e	 imul	 eax, eax, 46
  000b0	50		 push	 eax
  000b1	ff 37		 push	 DWORD PTR [edi]
  000b3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000b8	83 c4 08	 add	 esp, 8
$LN29@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1682 :         _Mylast  = _Newvec + _Newsize;

  000bb	6b c3 2e	 imul	 eax, ebx, 46
  000be	89 37		 mov	 DWORD PTR [edi], esi
  000c0	03 c6		 add	 eax, esi
  000c2	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 1683 :         _Myend   = _Newvec + _Newcapacity;

  000c5	8b 45 fc	 mov	 eax, DWORD PTR tv324[ebp]
  000c8	03 c6		 add	 eax, esi
  000ca	89 47 08	 mov	 DWORD PTR [edi+8], eax
  000cd	5f		 pop	 edi
  000ce	5e		 pop	 esi
  000cf	5b		 pop	 ebx

; 1200 :         _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 1201 :         _CATCH_ALL
; 1202 :         _Destroy(_Appended_first, _Appended_last);
; 1203 :         _Getal().deallocate(_Newvec, _Newcapacity);
; 1204 :         _RERAISE;
; 1205 :         _CATCH_END
; 1206 : 
; 1207 :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 1208 :     }

  000d0	8b e5		 mov	 esp, ebp
  000d2	5d		 pop	 ebp
  000d3	c2 08 00	 ret	 8
$LN10@Resize_rea:

; 1624 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  000d6	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 1625 : 
; 1626 :         if (_Geometric < _Newsize) {

  000d9	3b c3		 cmp	 eax, ebx
  000db	73 07		 jae	 SHORT $LN11@Resize_rea

; 1627 :             return _Newsize; // geometric growth would be insufficient

  000dd	8b c3		 mov	 eax, ebx
  000df	e9 7b ff ff ff	 jmp	 $LN18@Resize_rea
$LN11@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  000e4	3d 16 b2 90 05	 cmp	 eax, 93368854		; 0590b216H
  000e9	0f 86 70 ff ff
	ff		 jbe	 $LN18@Resize_rea

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000ef	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN35@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1184 :             _Xlength();

  000f4	e8 00 00 00 00	 call	 ?_Xlength@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@CAXXZ ; std::vector<packet_item,std::allocator<packet_item> >::_Xlength
$LN33@Resize_rea:
  000f9	cc		 int	 3
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<packet_item,std::allocator<packet_item> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@Upacket_item@@@std@@@std@@YAXPAUpacket_item@@QAU1@AAV?$allocator@Upacket_item@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@Upacket_item@@@std@@@std@@YAXPAUpacket_item@@QAU1@AAV?$allocator@Upacket_item@@@0@@Z PROC ; std::_Destroy_range<std::allocator<packet_item> >, COMDAT

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {
; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@Upacket_item@@@std@@@std@@YAXPAUpacket_item@@QAU1@AAV?$allocator@Upacket_item@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<packet_item> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetMallSize@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetMallSize@@YAPAU_object@@PAU1@0@Z PROC	; safeboxGetMallSize, COMDAT

; 309  : 	return Py_BuildValue("i", CPythonSafeBox::Instance().GetMallSize());

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  00006	e8 00 00 00 00	 call	 ?GetMallSize@CPythonSafeBox@@QAEKXZ ; CPythonSafeBox::GetMallSize
  0000b	50		 push	 eax
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00017	83 c4 08	 add	 esp, 8

; 310  : }

  0001a	c3		 ret	 0
?safeboxGetMallSize@@YAPAU_object@@PAU1@0@Z ENDP	; safeboxGetMallSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetMallItemAttribute@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_pItemData$1 = -12					; size = 4
_iSlotIndex$ = -8					; size = 4
_iAttrSlotIndex$ = -4					; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetMallItemAttribute@@YAPAU_object@@PAU1@0@Z PROC ; safeboxGetMallItemAttribute, COMDAT

; 289  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 290  : 	int iSlotIndex;
; 291  : 	if (!PyTuple_GetInteger(poArgs, 0, &iSlotIndex))

  00006	8d 45 f8	 lea	 eax, DWORD PTR _iSlotIndex$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	84 c0		 test	 al, al
  00019	75 0e		 jne	 SHORT $LN2@safeboxGet
$LN8@safeboxGet:

; 305  : }

  0001b	6a 00		 push	 0
  0001d	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00022	83 c4 04	 add	 esp, 4
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
$LN2@safeboxGet:

; 292  : 		return Py_BuildException();
; 293  : 	int iAttrSlotIndex;
; 294  : 	if (!PyTuple_GetInteger(poArgs, 1, &iAttrSlotIndex))

  00029	8d 45 fc	 lea	 eax, DWORD PTR _iAttrSlotIndex$[ebp]
  0002c	50		 push	 eax
  0002d	6a 01		 push	 1
  0002f	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00032	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	84 c0		 test	 al, al
  0003c	74 dd		 je	 SHORT $LN8@safeboxGet

; 295  : 		return Py_BuildException();
; 296  : 
; 297  : 	if (iAttrSlotIndex >= 0 && iAttrSlotIndex < ITEM_ATTRIBUTE_SLOT_MAX_NUM)

  0003e	83 7d fc 06	 cmp	 DWORD PTR _iAttrSlotIndex$[ebp], 6
  00042	77 3d		 ja	 SHORT $LN5@safeboxGet

; 298  : 	{
; 299  : 		TItemData * pItemData;
; 300  : 		if (CPythonSafeBox::Instance().GetMallItemDataPtr(iSlotIndex, &pItemData))

  00044	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  0004a	8d 45 f4	 lea	 eax, DWORD PTR _pItemData$1[ebp]
  0004d	50		 push	 eax
  0004e	ff 75 f8	 push	 DWORD PTR _iSlotIndex$[ebp]
  00051	e8 00 00 00 00	 call	 ?GetMallItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetMallItemDataPtr
  00056	85 c0		 test	 eax, eax
  00058	74 27		 je	 SHORT $LN5@safeboxGet

; 301  : 			return Py_BuildValue("ii", pItemData->aAttr[iAttrSlotIndex].bType, pItemData->aAttr[iAttrSlotIndex].sValue);

  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _iAttrSlotIndex$[ebp]
  0005d	8b 45 f4	 mov	 eax, DWORD PTR _pItemData$1[ebp]
  00060	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
  00063	03 c8		 add	 ecx, eax
  00065	0f bf 41 1a	 movsx	 eax, WORD PTR [ecx+26]
  00069	50		 push	 eax
  0006a	0f b6 41 19	 movzx	 eax, BYTE PTR [ecx+25]
  0006e	50		 push	 eax

; 305  : }

  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_02PDIHAGKM@ii@
  00074	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
$LN5@safeboxGet:

; 302  : 	}
; 303  : 
; 304  : 	return Py_BuildValue("ii", 0, 0);

  00081	6a 00		 push	 0
  00083	6a 00		 push	 0

; 305  : }

  00085	68 00 00 00 00	 push	 OFFSET ??_C@_02PDIHAGKM@ii@
  0008a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00090	83 c4 0c	 add	 esp, 12			; 0000000cH
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
?safeboxGetMallItemAttribute@@YAPAU_object@@PAU1@0@Z ENDP ; safeboxGetMallItemAttribute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetMallItemMetinSocket@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_pItemData$ = -12					; size = 4
_iSlotIndex$ = -8					; size = 4
_iSocketIndex$ = -4					; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetMallItemMetinSocket@@YAPAU_object@@PAU1@0@Z PROC ; safeboxGetMallItemMetinSocket, COMDAT

; 270  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 271  : 	int iSlotIndex;
; 272  : 	if (!PyTuple_GetInteger(poArgs, 0, &iSlotIndex))

  00006	8d 45 f8	 lea	 eax, DWORD PTR _iSlotIndex$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	84 c0		 test	 al, al
  00019	75 09		 jne	 SHORT $LN2@safeboxGet
$LN7@safeboxGet:

; 286  : }

  0001b	e8 00 00 00 00	 call	 ?Py_BadArgument@@YAPAU_object@@XZ ; Py_BadArgument
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
$LN2@safeboxGet:

; 273  : 		return Py_BadArgument();
; 274  : 	int iSocketIndex;
; 275  : 	if (!PyTuple_GetInteger(poArgs, 1, &iSocketIndex))

  00024	8d 45 fc	 lea	 eax, DWORD PTR _iSocketIndex$[ebp]
  00027	50		 push	 eax
  00028	6a 01		 push	 1
  0002a	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0002d	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH
  00035	84 c0		 test	 al, al
  00037	74 e2		 je	 SHORT $LN7@safeboxGet

; 276  : 		return Py_BadArgument();
; 277  : 
; 278  : 	if (iSocketIndex >= ITEM_SOCKET_SLOT_MAX_NUM)

  00039	83 7d fc 03	 cmp	 DWORD PTR _iSocketIndex$[ebp], 3
  0003d	7c 0e		 jl	 SHORT $LN4@safeboxGet
$LN8@safeboxGet:

; 286  : }

  0003f	6a 00		 push	 0
  00041	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00046	83 c4 04	 add	 esp, 4
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN4@safeboxGet:

; 279  : 		return Py_BuildException();
; 280  : 
; 281  : 	TItemData * pItemData;
; 282  : 	if (!CPythonSafeBox::Instance().GetMallItemDataPtr(iSlotIndex, &pItemData))

  0004d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  00053	8d 45 f4	 lea	 eax, DWORD PTR _pItemData$[ebp]
  00056	50		 push	 eax
  00057	ff 75 f8	 push	 DWORD PTR _iSlotIndex$[ebp]
  0005a	e8 00 00 00 00	 call	 ?GetMallItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetMallItemDataPtr
  0005f	85 c0		 test	 eax, eax
  00061	74 dc		 je	 SHORT $LN8@safeboxGet

; 283  : 		return Py_BuildException();
; 284  : 
; 285  : 	return Py_BuildValue("i", pItemData->alSockets[iSocketIndex]);

  00063	8b 4d fc	 mov	 ecx, DWORD PTR _iSocketIndex$[ebp]
  00066	8b 45 f4	 mov	 eax, DWORD PTR _pItemData$[ebp]
  00069	ff 74 88 0d	 push	 DWORD PTR [eax+ecx*4+13]
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00078	83 c4 08	 add	 esp, 8

; 286  : }

  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c3		 ret	 0
?safeboxGetMallItemMetinSocket@@YAPAU_object@@PAU1@0@Z ENDP ; safeboxGetMallItemMetinSocket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetMallItemCount@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_pInstance$ = -8					; size = 4
_ipos$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetMallItemCount@@YAPAU_object@@PAU1@0@Z PROC	; safeboxGetMallItemCount, COMDAT

; 257  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 258  : 	int ipos;
; 259  : 	if (!PyTuple_GetInteger(poArgs, 0, &ipos))

  00006	8d 45 fc	 lea	 eax, DWORD PTR _ipos$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	84 c0		 test	 al, al
  00019	75 09		 jne	 SHORT $LN2@safeboxGet

; 260  : 		return Py_BadArgument();

  0001b	e8 00 00 00 00	 call	 ?Py_BadArgument@@YAPAU_object@@XZ ; Py_BadArgument

; 267  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
$LN2@safeboxGet:

; 261  : 
; 262  : 	TItemData * pInstance;
; 263  : 	if (!CPythonSafeBox::Instance().GetMallItemDataPtr(ipos, &pInstance))

  00024	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  0002a	8d 45 f8	 lea	 eax, DWORD PTR _pInstance$[ebp]
  0002d	50		 push	 eax
  0002e	ff 75 fc	 push	 DWORD PTR _ipos$[ebp]
  00031	e8 00 00 00 00	 call	 ?GetMallItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetMallItemDataPtr
  00036	85 c0		 test	 eax, eax
  00038	75 0d		 jne	 SHORT $LN3@safeboxGet

; 264  : 		return Py_BuildException();

  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00040	83 c4 04	 add	 esp, 4

; 267  : }

  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
$LN3@safeboxGet:

; 265  : 
; 266  : 	return Py_BuildValue("i", pInstance->count);

  00047	8b 45 f8	 mov	 eax, DWORD PTR _pInstance$[ebp]
  0004a	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  0004e	50		 push	 eax
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0005a	83 c4 08	 add	 esp, 8

; 267  : }

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
?safeboxGetMallItemCount@@YAPAU_object@@PAU1@0@Z ENDP	; safeboxGetMallItemCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetMallItemID@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_pInstance$ = -8					; size = 4
_ipos$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetMallItemID@@YAPAU_object@@PAU1@0@Z PROC	; safeboxGetMallItemID, COMDAT

; 244  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 245  : 	int ipos;
; 246  : 	if (!PyTuple_GetInteger(poArgs, 0, &ipos))

  00006	8d 45 fc	 lea	 eax, DWORD PTR _ipos$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	84 c0		 test	 al, al
  00019	75 09		 jne	 SHORT $LN2@safeboxGet

; 247  : 		return Py_BadArgument();

  0001b	e8 00 00 00 00	 call	 ?Py_BadArgument@@YAPAU_object@@XZ ; Py_BadArgument

; 254  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
$LN2@safeboxGet:

; 248  : 
; 249  : 	TItemData * pInstance;
; 250  : 	if (!CPythonSafeBox::Instance().GetMallItemDataPtr(ipos, &pInstance))

  00024	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  0002a	8d 45 f8	 lea	 eax, DWORD PTR _pInstance$[ebp]
  0002d	50		 push	 eax
  0002e	ff 75 fc	 push	 DWORD PTR _ipos$[ebp]
  00031	e8 00 00 00 00	 call	 ?GetMallItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetMallItemDataPtr
  00036	85 c0		 test	 eax, eax
  00038	75 0d		 jne	 SHORT $LN3@safeboxGet

; 251  : 		return Py_BuildException();

  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00040	83 c4 04	 add	 esp, 4

; 254  : }

  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
$LN3@safeboxGet:

; 252  : 
; 253  : 	return Py_BuildValue("i", pInstance->vnum);

  00047	8b 45 f8	 mov	 eax, DWORD PTR _pInstance$[ebp]
  0004a	ff 30		 push	 DWORD PTR [eax]
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00057	83 c4 08	 add	 esp, 8

; 254  : }

  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?safeboxGetMallItemID@@YAPAU_object@@PAU1@0@Z ENDP	; safeboxGetMallItemID
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetMoney@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetMoney@@YAPAU_object@@PAU1@0@Z PROC		; safeboxGetMoney, COMDAT

; 240  : 	return Py_BuildValue("i", CPythonSafeBox::Instance().GetMoney());

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  00006	e8 00 00 00 00	 call	 ?GetMoney@CPythonSafeBox@@QAEKXZ ; CPythonSafeBox::GetMoney
  0000b	50		 push	 eax
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00017	83 c4 08	 add	 esp, 8

; 241  : }

  0001a	c3		 ret	 0
?safeboxGetMoney@@YAPAU_object@@PAU1@0@Z ENDP		; safeboxGetMoney
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetItemAttribute@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_pItemData$1 = -12					; size = 4
_iSlotIndex$ = -8					; size = 4
_iAttrSlotIndex$ = -4					; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetItemAttribute@@YAPAU_object@@PAU1@0@Z PROC	; safeboxGetItemAttribute, COMDAT

; 220  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 221  : 	int iSlotIndex;
; 222  : 	if (!PyTuple_GetInteger(poArgs, 0, &iSlotIndex))

  00006	8d 45 f8	 lea	 eax, DWORD PTR _iSlotIndex$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	84 c0		 test	 al, al
  00019	75 0e		 jne	 SHORT $LN2@safeboxGet
$LN8@safeboxGet:

; 236  : }

  0001b	6a 00		 push	 0
  0001d	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00022	83 c4 04	 add	 esp, 4
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
$LN2@safeboxGet:

; 223  : 		return Py_BuildException();
; 224  : 	int iAttrSlotIndex;
; 225  : 	if (!PyTuple_GetInteger(poArgs, 1, &iAttrSlotIndex))

  00029	8d 45 fc	 lea	 eax, DWORD PTR _iAttrSlotIndex$[ebp]
  0002c	50		 push	 eax
  0002d	6a 01		 push	 1
  0002f	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00032	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	84 c0		 test	 al, al
  0003c	74 dd		 je	 SHORT $LN8@safeboxGet

; 226  : 		return Py_BuildException();
; 227  : 
; 228  : 	if (iAttrSlotIndex >= 0 && iAttrSlotIndex < ITEM_ATTRIBUTE_SLOT_MAX_NUM)

  0003e	83 7d fc 06	 cmp	 DWORD PTR _iAttrSlotIndex$[ebp], 6
  00042	77 3d		 ja	 SHORT $LN5@safeboxGet

; 229  : 	{
; 230  : 		TItemData * pItemData;
; 231  : 		if (CPythonSafeBox::Instance().GetItemDataPtr(iSlotIndex, &pItemData))

  00044	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  0004a	8d 45 f4	 lea	 eax, DWORD PTR _pItemData$1[ebp]
  0004d	50		 push	 eax
  0004e	ff 75 f8	 push	 DWORD PTR _iSlotIndex$[ebp]
  00051	e8 00 00 00 00	 call	 ?GetItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetItemDataPtr
  00056	85 c0		 test	 eax, eax
  00058	74 27		 je	 SHORT $LN5@safeboxGet

; 232  : 			return Py_BuildValue("ii", pItemData->aAttr[iAttrSlotIndex].bType, pItemData->aAttr[iAttrSlotIndex].sValue);

  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _iAttrSlotIndex$[ebp]
  0005d	8b 45 f4	 mov	 eax, DWORD PTR _pItemData$1[ebp]
  00060	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
  00063	03 c8		 add	 ecx, eax
  00065	0f bf 41 1a	 movsx	 eax, WORD PTR [ecx+26]
  00069	50		 push	 eax
  0006a	0f b6 41 19	 movzx	 eax, BYTE PTR [ecx+25]
  0006e	50		 push	 eax

; 236  : }

  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_02PDIHAGKM@ii@
  00074	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007d	8b e5		 mov	 esp, ebp
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
$LN5@safeboxGet:

; 233  : 	}
; 234  : 
; 235  : 	return Py_BuildValue("ii", 0, 0);

  00081	6a 00		 push	 0
  00083	6a 00		 push	 0

; 236  : }

  00085	68 00 00 00 00	 push	 OFFSET ??_C@_02PDIHAGKM@ii@
  0008a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00090	83 c4 0c	 add	 esp, 12			; 0000000cH
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
?safeboxGetItemAttribute@@YAPAU_object@@PAU1@0@Z ENDP	; safeboxGetItemAttribute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetItemMetinSocket@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_pItemData$ = -12					; size = 4
_iSlotIndex$ = -8					; size = 4
_iSocketIndex$ = -4					; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetItemMetinSocket@@YAPAU_object@@PAU1@0@Z PROC	; safeboxGetItemMetinSocket, COMDAT

; 201  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 202  : 	int iSlotIndex;
; 203  : 	if (!PyTuple_GetInteger(poArgs, 0, &iSlotIndex))

  00006	8d 45 f8	 lea	 eax, DWORD PTR _iSlotIndex$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	84 c0		 test	 al, al
  00019	75 09		 jne	 SHORT $LN2@safeboxGet
$LN7@safeboxGet:

; 217  : }

  0001b	e8 00 00 00 00	 call	 ?Py_BadArgument@@YAPAU_object@@XZ ; Py_BadArgument
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
$LN2@safeboxGet:

; 204  : 		return Py_BadArgument();
; 205  : 	int iSocketIndex;
; 206  : 	if (!PyTuple_GetInteger(poArgs, 1, &iSocketIndex))

  00024	8d 45 fc	 lea	 eax, DWORD PTR _iSocketIndex$[ebp]
  00027	50		 push	 eax
  00028	6a 01		 push	 1
  0002a	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0002d	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH
  00035	84 c0		 test	 al, al
  00037	74 e2		 je	 SHORT $LN7@safeboxGet

; 207  : 		return Py_BadArgument();
; 208  : 
; 209  : 	if (iSocketIndex >= ITEM_SOCKET_SLOT_MAX_NUM)

  00039	83 7d fc 03	 cmp	 DWORD PTR _iSocketIndex$[ebp], 3
  0003d	7c 0e		 jl	 SHORT $LN4@safeboxGet
$LN8@safeboxGet:

; 217  : }

  0003f	6a 00		 push	 0
  00041	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00046	83 c4 04	 add	 esp, 4
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN4@safeboxGet:

; 210  : 		return Py_BuildException();
; 211  : 
; 212  : 	TItemData * pItemData;
; 213  : 	if (!CPythonSafeBox::Instance().GetItemDataPtr(iSlotIndex, &pItemData))

  0004d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  00053	8d 45 f4	 lea	 eax, DWORD PTR _pItemData$[ebp]
  00056	50		 push	 eax
  00057	ff 75 f8	 push	 DWORD PTR _iSlotIndex$[ebp]
  0005a	e8 00 00 00 00	 call	 ?GetItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetItemDataPtr
  0005f	85 c0		 test	 eax, eax
  00061	74 dc		 je	 SHORT $LN8@safeboxGet

; 214  : 		return Py_BuildException();
; 215  : 
; 216  : 	return Py_BuildValue("i", pItemData->alSockets[iSocketIndex]);

  00063	8b 4d fc	 mov	 ecx, DWORD PTR _iSocketIndex$[ebp]
  00066	8b 45 f4	 mov	 eax, DWORD PTR _pItemData$[ebp]
  00069	ff 74 88 0d	 push	 DWORD PTR [eax+ecx*4+13]
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00072	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00078	83 c4 08	 add	 esp, 8

; 217  : }

  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c3		 ret	 0
?safeboxGetItemMetinSocket@@YAPAU_object@@PAU1@0@Z ENDP	; safeboxGetItemMetinSocket
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetItemFlags@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_pInstance$ = -8					; size = 4
_ipos$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetItemFlags@@YAPAU_object@@PAU1@0@Z PROC	; safeboxGetItemFlags, COMDAT

; 188  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 189  : 	int ipos;
; 190  : 	if (!PyTuple_GetInteger(poArgs, 0, &ipos))

  00006	8d 45 fc	 lea	 eax, DWORD PTR _ipos$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	84 c0		 test	 al, al
  00019	75 09		 jne	 SHORT $LN2@safeboxGet

; 191  : 		return Py_BadArgument();

  0001b	e8 00 00 00 00	 call	 ?Py_BadArgument@@YAPAU_object@@XZ ; Py_BadArgument

; 198  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
$LN2@safeboxGet:

; 192  : 
; 193  : 	TItemData * pInstance;
; 194  : 	if (!CPythonSafeBox::Instance().GetItemDataPtr(ipos, &pInstance))

  00024	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  0002a	8d 45 f8	 lea	 eax, DWORD PTR _pInstance$[ebp]
  0002d	50		 push	 eax
  0002e	ff 75 fc	 push	 DWORD PTR _ipos$[ebp]
  00031	e8 00 00 00 00	 call	 ?GetItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetItemDataPtr
  00036	85 c0		 test	 eax, eax
  00038	75 0d		 jne	 SHORT $LN3@safeboxGet

; 195  : 		return Py_BuildException();

  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00040	83 c4 04	 add	 esp, 4

; 198  : }

  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
$LN3@safeboxGet:

; 196  : 
; 197  : 	return Py_BuildValue("i", pInstance->flags);

  00047	8b 45 f8	 mov	 eax, DWORD PTR _pInstance$[ebp]
  0004a	ff 70 05	 push	 DWORD PTR [eax+5]
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00058	83 c4 08	 add	 esp, 8

; 198  : }

  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
?safeboxGetItemFlags@@YAPAU_object@@PAU1@0@Z ENDP	; safeboxGetItemFlags
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetItemCount@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_pInstance$ = -8					; size = 4
_ipos$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetItemCount@@YAPAU_object@@PAU1@0@Z PROC	; safeboxGetItemCount, COMDAT

; 175  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 176  : 	int ipos;
; 177  : 	if (!PyTuple_GetInteger(poArgs, 0, &ipos))

  00006	8d 45 fc	 lea	 eax, DWORD PTR _ipos$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	84 c0		 test	 al, al
  00019	75 09		 jne	 SHORT $LN2@safeboxGet

; 178  : 		return Py_BadArgument();

  0001b	e8 00 00 00 00	 call	 ?Py_BadArgument@@YAPAU_object@@XZ ; Py_BadArgument

; 185  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
$LN2@safeboxGet:

; 179  : 
; 180  : 	TItemData * pInstance;
; 181  : 	if (!CPythonSafeBox::Instance().GetItemDataPtr(ipos, &pInstance))

  00024	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  0002a	8d 45 f8	 lea	 eax, DWORD PTR _pInstance$[ebp]
  0002d	50		 push	 eax
  0002e	ff 75 fc	 push	 DWORD PTR _ipos$[ebp]
  00031	e8 00 00 00 00	 call	 ?GetItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetItemDataPtr
  00036	85 c0		 test	 eax, eax
  00038	75 0d		 jne	 SHORT $LN3@safeboxGet

; 182  : 		return Py_BuildException();

  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00040	83 c4 04	 add	 esp, 4

; 185  : }

  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
$LN3@safeboxGet:

; 183  : 
; 184  : 	return Py_BuildValue("i", pInstance->count);

  00047	8b 45 f8	 mov	 eax, DWORD PTR _pInstance$[ebp]
  0004a	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  0004e	50		 push	 eax
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0005a	83 c4 08	 add	 esp, 8

; 185  : }

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
?safeboxGetItemCount@@YAPAU_object@@PAU1@0@Z ENDP	; safeboxGetItemCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetItemID@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_pInstance$ = -8					; size = 4
_ipos$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetItemID@@YAPAU_object@@PAU1@0@Z PROC		; safeboxGetItemID, COMDAT

; 162  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 163  : 	int ipos;
; 164  : 	if (!PyTuple_GetInteger(poArgs, 0, &ipos))

  00006	8d 45 fc	 lea	 eax, DWORD PTR _ipos$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	84 c0		 test	 al, al
  00019	75 09		 jne	 SHORT $LN2@safeboxGet

; 165  : 		return Py_BadArgument();

  0001b	e8 00 00 00 00	 call	 ?Py_BadArgument@@YAPAU_object@@XZ ; Py_BadArgument

; 172  : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
$LN2@safeboxGet:

; 166  : 
; 167  : 	TItemData * pInstance;
; 168  : 	if (!CPythonSafeBox::Instance().GetItemDataPtr(ipos, &pInstance))

  00024	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  0002a	8d 45 f8	 lea	 eax, DWORD PTR _pInstance$[ebp]
  0002d	50		 push	 eax
  0002e	ff 75 fc	 push	 DWORD PTR _ipos$[ebp]
  00031	e8 00 00 00 00	 call	 ?GetItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetItemDataPtr
  00036	85 c0		 test	 eax, eax
  00038	75 0d		 jne	 SHORT $LN3@safeboxGet

; 169  : 		return Py_BuildException();

  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00040	83 c4 04	 add	 esp, 4

; 172  : }

  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
$LN3@safeboxGet:

; 170  : 
; 171  : 	return Py_BuildValue("i", pInstance->vnum);

  00047	8b 45 f8	 mov	 eax, DWORD PTR _pInstance$[ebp]
  0004a	ff 30		 push	 DWORD PTR [eax]
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00057	83 c4 08	 add	 esp, 8

; 172  : }

  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?safeboxGetItemID@@YAPAU_object@@PAU1@0@Z ENDP		; safeboxGetItemID
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetCurrentSafeboxSize@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetCurrentSafeboxSize@@YAPAU_object@@PAU1@0@Z PROC ; safeboxGetCurrentSafeboxSize, COMDAT

; 158  : 	return Py_BuildValue("i", CPythonSafeBox::Instance().GetCurrentSafeBoxSize());

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  00006	e8 00 00 00 00	 call	 ?GetCurrentSafeBoxSize@CPythonSafeBox@@QAEHXZ ; CPythonSafeBox::GetCurrentSafeBoxSize
  0000b	50		 push	 eax
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00017	83 c4 08	 add	 esp, 8

; 159  : }

  0001a	c3		 ret	 0
?safeboxGetCurrentSafeboxSize@@YAPAU_object@@PAU1@0@Z ENDP ; safeboxGetCurrentSafeboxSize
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCPythonSafeBox@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCPythonSafeBox@@UAEPAXI@Z PROC			; CPythonSafeBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CPythonSafeBox@@UAE@XZ ; CPythonSafeBox::~CPythonSafeBox
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 20		 push	 32			; 00000020H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GCPythonSafeBox@@UAEPAXI@Z ENDP			; CPythonSafeBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Xlength@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@CAXXZ PROC ; std::vector<packet_item,std::allocator<packet_item> >::_Xlength, COMDAT

; 1705 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@CAXXZ ENDP ; std::vector<packet_item,std::allocator<packet_item> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?resize@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
$T1 = 11						; size = 1
?resize@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@QAEXI@Z PROC ; std::vector<packet_item,std::allocator<packet_item> >::resize, COMDAT
; _this$ = ecx

; 1240 :     void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00008	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  0000d	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  00010	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00012	2b f1		 sub	 esi, ecx
  00014	f7 ee		 imul	 esi
  00016	03 d6		 add	 edx, esi

; 1216 :         if (_Newsize < _Oldsize) { // trim

  00018	8b 75 08	 mov	 esi, DWORD PTR __Newsize$[ebp]
  0001b	c1 fa 05	 sar	 edx, 5
  0001e	8b da		 mov	 ebx, edx
  00020	c1 eb 1f	 shr	 ebx, 31			; 0000001fH
  00023	03 da		 add	 ebx, edx
  00025	3b f3		 cmp	 esi, ebx
  00027	73 0f		 jae	 SHORT $LN4@resize

; 1217 :             const pointer _Newlast = _Myfirst + _Newsize;

  00029	6b c6 2e	 imul	 eax, esi, 46
  0002c	03 c1		 add	 eax, ecx

; 1241 :         // trim or append value-initialized elements, provide strong guarantee
; 1242 :         _Resize(_Newsize, _Value_init_tag{});
; 1243 :     }

  0002e	89 47 04	 mov	 DWORD PTR [edi+4], eax
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	5d		 pop	 ebp
  00035	c2 04 00	 ret	 4
$LN4@resize:

; 1224 :         if (_Newsize > _Oldsize) { // append

  00038	76 41		 jbe	 SHORT $LN5@resize

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  0003a	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0003d	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  00042	2b 0f		 sub	 ecx, DWORD PTR [edi]
  00044	f7 e9		 imul	 ecx
  00046	03 d1		 add	 edx, ecx
  00048	c1 fa 05	 sar	 edx, 5
  0004b	8b c2		 mov	 eax, edx
  0004d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00050	03 c2		 add	 eax, edx

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  00052	3b f0		 cmp	 esi, eax
  00054	76 13		 jbe	 SHORT $LN6@resize

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  00056	8d 45 0b	 lea	 eax, DWORD PTR $T1[ebp]
  00059	8b cf		 mov	 ecx, edi
  0005b	50		 push	 eax
  0005c	56		 push	 esi
  0005d	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<packet_item,std::allocator<packet_item> >::_Resize_reallocate<std::_Value_init_tag>
  00062	5f		 pop	 edi

; 1241 :         // trim or append value-initialized elements, provide strong guarantee
; 1242 :         _Resize(_Newsize, _Value_init_tag{});
; 1243 :     }

  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	5d		 pop	 ebp
  00066	c2 04 00	 ret	 4
$LN6@resize:

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00069	57		 push	 edi

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  0006a	2b f3		 sub	 esi, ebx

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0006c	56		 push	 esi
  0006d	ff 77 04	 push	 DWORD PTR [edi+4]
  00070	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@PAU1@IAAV?$allocator@Upacket_item@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<packet_item> >
  00075	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1241 :         // trim or append value-initialized elements, provide strong guarantee
; 1242 :         _Resize(_Newsize, _Value_init_tag{});
; 1243 :     }

  00078	89 47 04	 mov	 DWORD PTR [edi+4], eax
$LN5@resize:
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
  0007d	5b		 pop	 ebx
  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
?resize@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@QAEXI@Z ENDP ; std::vector<packet_item,std::allocator<packet_item> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?GetMallSize@CPythonSafeBox@@QAEKXZ
_TEXT	SEGMENT
?GetMallSize@CPythonSafeBox@@QAEKXZ PROC		; CPythonSafeBox::GetMallSize, COMDAT
; _this$ = ecx

; 143  : {

  00000	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00001	8b 71 14	 mov	 esi, DWORD PTR [ecx+20]
  00004	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  00009	2b 71 10	 sub	 esi, DWORD PTR [ecx+16]
  0000c	f7 ee		 imul	 esi
  0000e	03 d6		 add	 edx, esi
  00010	c1 fa 05	 sar	 edx, 5
  00013	8b c2		 mov	 eax, edx
  00015	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00018	03 c2		 add	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 144  : 	return m_MallItemInstanceVector.size();

  0001a	5e		 pop	 esi

; 145  : }

  0001b	c3		 ret	 0
?GetMallSize@CPythonSafeBox@@QAEKXZ ENDP		; CPythonSafeBox::GetMallSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?GetSlotMallItemID@CPythonSafeBox@@QAEHKPAK@Z
_TEXT	SEGMENT
_dwSlotIndex$ = 8					; size = 4
_pdwItemID$ = 12					; size = 4
?GetSlotMallItemID@CPythonSafeBox@@QAEHKPAK@Z PROC	; CPythonSafeBox::GetSlotMallItemID, COMDAT
; _this$ = ecx

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00004	8b 71 10	 mov	 esi, DWORD PTR [ecx+16]
  00007	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  0000c	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  0000f	2b ce		 sub	 ecx, esi
  00011	f7 e9		 imul	 ecx
  00013	03 d1		 add	 edx, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 131  : 	if (dwSlotIndex >= m_MallItemInstanceVector.size())

  00015	8b 4d 08	 mov	 ecx, DWORD PTR _dwSlotIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00018	c1 fa 05	 sar	 edx, 5
  0001b	8b c2		 mov	 eax, edx
  0001d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00020	03 c2		 add	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 131  : 	if (dwSlotIndex >= m_MallItemInstanceVector.size())

  00022	3b c8		 cmp	 ecx, eax
  00024	72 15		 jb	 SHORT $LN2@GetSlotMal

; 132  : 	{
; 133  : 		TraceError("CPythonSafeBox::GetMallSlotItemID(dwSlotIndex=%d) - Strange slot index", dwSlotIndex);

  00026	51		 push	 ecx
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@BNEMANLE@CPythonSafeBox?3?3GetMallSlotItem@
  0002c	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00031	83 c4 08	 add	 esp, 8

; 134  : 		return FALSE;

  00034	33 c0		 xor	 eax, eax
  00036	5e		 pop	 esi

; 140  : }

  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
$LN2@GetSlotMal:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0003b	6b c1 2e	 imul	 eax, ecx, 46
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 137  : 	*pdwItemID = m_MallItemInstanceVector[dwSlotIndex].vnum;

  0003e	8b 0c 30	 mov	 ecx, DWORD PTR [eax+esi]
  00041	8b 45 0c	 mov	 eax, DWORD PTR _pdwItemID$[ebp]
  00044	5e		 pop	 esi
  00045	89 08		 mov	 DWORD PTR [eax], ecx

; 138  : 
; 139  : 	return TRUE;

  00047	b8 01 00 00 00	 mov	 eax, 1

; 140  : }

  0004c	5d		 pop	 ebp
  0004d	c2 08 00	 ret	 8
?GetSlotMallItemID@CPythonSafeBox@@QAEHKPAK@Z ENDP	; CPythonSafeBox::GetSlotMallItemID
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?GetMallItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z
_TEXT	SEGMENT
_dwSlotIndex$ = 8					; size = 4
_ppInstance$ = 12					; size = 4
?GetMallItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z PROC ; CPythonSafeBox::GetMallItemDataPtr, COMDAT
; _this$ = ecx

; 117  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00004	8b 71 10	 mov	 esi, DWORD PTR [ecx+16]
  00007	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  0000c	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  0000f	2b ce		 sub	 ecx, esi
  00011	f7 e9		 imul	 ecx
  00013	03 d1		 add	 edx, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 118  : 	if (dwSlotIndex >= m_MallItemInstanceVector.size())

  00015	8b 4d 08	 mov	 ecx, DWORD PTR _dwSlotIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00018	c1 fa 05	 sar	 edx, 5
  0001b	8b c2		 mov	 eax, edx
  0001d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00020	03 c2		 add	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 118  : 	if (dwSlotIndex >= m_MallItemInstanceVector.size())

  00022	3b c8		 cmp	 ecx, eax
  00024	72 15		 jb	 SHORT $LN2@GetMallIte

; 119  : 	{
; 120  : 		TraceError("CPythonSafeBox::GetMallSlotItemID(dwSlotIndex=%d) - Strange slot index", dwSlotIndex);

  00026	51		 push	 ecx
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@BNEMANLE@CPythonSafeBox?3?3GetMallSlotItem@
  0002c	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00031	83 c4 08	 add	 esp, 8

; 121  : 		return FALSE;

  00034	33 c0		 xor	 eax, eax
  00036	5e		 pop	 esi

; 127  : }

  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
$LN2@GetMallIte:

; 124  : 	*ppInstance = &m_MallItemInstanceVector[dwSlotIndex];

  0003b	8b 45 0c	 mov	 eax, DWORD PTR _ppInstance$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0003e	6b c9 2e	 imul	 ecx, ecx, 46
  00041	03 ce		 add	 ecx, esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 124  : 	*ppInstance = &m_MallItemInstanceVector[dwSlotIndex];

  00043	89 08		 mov	 DWORD PTR [eax], ecx

; 125  : 
; 126  : 	return TRUE;

  00045	b8 01 00 00 00	 mov	 eax, 1
  0004a	5e		 pop	 esi

; 127  : }

  0004b	5d		 pop	 ebp
  0004c	c2 08 00	 ret	 8
?GetMallItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ENDP ; CPythonSafeBox::GetMallItemDataPtr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?DelMallItemData@CPythonSafeBox@@QAEXK@Z
_TEXT	SEGMENT
_dwSlotIndex$ = 8					; size = 4
?DelMallItemData@CPythonSafeBox@@QAEXK@Z PROC		; CPythonSafeBox::DelMallItemData, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00004	8b 71 10	 mov	 esi, DWORD PTR [ecx+16]
  00007	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  0000c	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  0000f	2b ce		 sub	 ecx, esi
  00011	f7 e9		 imul	 ecx
  00013	03 d1		 add	 edx, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 106  : 	if (dwSlotIndex >= m_MallItemInstanceVector.size())

  00015	8b 4d 08	 mov	 ecx, DWORD PTR _dwSlotIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00018	c1 fa 05	 sar	 edx, 5
  0001b	8b c2		 mov	 eax, edx
  0001d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00020	03 c2		 add	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 106  : 	if (dwSlotIndex >= m_MallItemInstanceVector.size())

  00022	3b c8		 cmp	 ecx, eax
  00024	72 13		 jb	 SHORT $LN2@DelMallIte

; 107  : 	{
; 108  : 		TraceError("CPythonSafeBox::DelMallItemData(dwSlotIndex=%d) - Strange slot index", dwSlotIndex);

  00026	51		 push	 ecx
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@MEFPDFOJ@CPythonSafeBox?3?3DelMallItemData@
  0002c	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00031	83 c4 08	 add	 esp, 8
  00034	5e		 pop	 esi

; 114  : }

  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
$LN2@DelMallIte:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00039	6b c1 2e	 imul	 eax, ecx, 46
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 113  : 	ZeroMemory(&rInstance, sizeof(rInstance));

  0003c	6a 2e		 push	 46			; 0000002eH
  0003e	6a 00		 push	 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00040	03 c6		 add	 eax, esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 113  : 	ZeroMemory(&rInstance, sizeof(rInstance));

  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 _memset
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004b	5e		 pop	 esi

; 114  : }

  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
?DelMallItemData@CPythonSafeBox@@QAEXK@Z ENDP		; CPythonSafeBox::DelMallItemData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?SetMallItemData@CPythonSafeBox@@QAEXKABUpacket_item@@@Z
_TEXT	SEGMENT
_dwSlotIndex$ = 8					; size = 4
_rItemData$ = 12					; size = 4
?SetMallItemData@CPythonSafeBox@@QAEXKABUpacket_item@@@Z PROC ; CPythonSafeBox::SetMallItemData, COMDAT
; _this$ = ecx

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00004	8b 71 10	 mov	 esi, DWORD PTR [ecx+16]
  00007	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  0000c	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  0000f	2b ce		 sub	 ecx, esi
  00011	f7 e9		 imul	 ecx
  00013	03 d1		 add	 edx, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 95   : 	if (dwSlotIndex >= m_MallItemInstanceVector.size())

  00015	8b 4d 08	 mov	 ecx, DWORD PTR _dwSlotIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00018	c1 fa 05	 sar	 edx, 5
  0001b	8b c2		 mov	 eax, edx
  0001d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00020	03 c2		 add	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 95   : 	if (dwSlotIndex >= m_MallItemInstanceVector.size())

  00022	3b c8		 cmp	 ecx, eax
  00024	72 13		 jb	 SHORT $LN2@SetMallIte

; 96   : 	{
; 97   : 		TraceError("CPythonSafeBox::SetMallItemData(dwSlotIndex=%d) - Strange slot index", dwSlotIndex);

  00026	51		 push	 ecx
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@BFNMLNFN@CPythonSafeBox?3?3SetMallItemData@
  0002c	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00031	83 c4 08	 add	 esp, 8
  00034	5e		 pop	 esi

; 102  : }

  00035	5d		 pop	 ebp
  00036	c2 08 00	 ret	 8
$LN2@SetMallIte:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00039	6b d1 2e	 imul	 edx, ecx, 46
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 101  : 	m_MallItemInstanceVector[dwSlotIndex] = rItemData;

  0003c	8b 4d 0c	 mov	 ecx, DWORD PTR _rItemData$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0003f	03 d6		 add	 edx, esi
  00041	5e		 pop	 esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 101  : 	m_MallItemInstanceVector[dwSlotIndex] = rItemData;

  00042	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00045	0f 11 02	 movups	 XMMWORD PTR [edx], xmm0
  00048	0f 10 41 10	 movups	 xmm0, XMMWORD PTR [ecx+16]
  0004c	0f 11 42 10	 movups	 XMMWORD PTR [edx+16], xmm0
  00050	f3 0f 7e 41 20	 movq	 xmm0, QWORD PTR [ecx+32]
  00055	66 0f d6 42 20	 movq	 QWORD PTR [edx+32], xmm0
  0005a	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  0005d	89 42 28	 mov	 DWORD PTR [edx+40], eax
  00060	66 8b 41 2c	 mov	 ax, WORD PTR [ecx+44]
  00064	66 89 42 2c	 mov	 WORD PTR [edx+44], ax

; 102  : }

  00068	5d		 pop	 ebp
  00069	c2 08 00	 ret	 8
?SetMallItemData@CPythonSafeBox@@QAEXKABUpacket_item@@@Z ENDP ; CPythonSafeBox::SetMallItemData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?OpenMall@CPythonSafeBox@@QAEXH@Z
_TEXT	SEGMENT
_iSize$ = 8						; size = 4
?OpenMall@CPythonSafeBox@@QAEXH@Z PROC			; CPythonSafeBox::OpenMall, COMDAT
; _this$ = ecx

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 83   : 	m_MallItemInstanceVector.clear();

  00003	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8d 71 10	 lea	 esi, DWORD PTR [ecx+16]
  0000b	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 84   : 	m_MallItemInstanceVector.resize(SAFEBOX_SLOT_X_COUNT * iSize);

  0000e	8b ce		 mov	 ecx, esi
  00010	8b 45 08	 mov	 eax, DWORD PTR _iSize$[ebp]
  00013	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?resize@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@QAEXI@Z ; std::vector<packet_item,std::allocator<packet_item> >::resize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0001c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001f	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  00024	2b 0e		 sub	 ecx, DWORD PTR [esi]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 86   : 	for (DWORD i = 0; i < m_MallItemInstanceVector.size(); ++i)

  00026	33 db		 xor	 ebx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00028	f7 e9		 imul	 ecx
  0002a	03 d1		 add	 edx, ecx
  0002c	c1 fa 05	 sar	 edx, 5
  0002f	8b c2		 mov	 eax, edx
  00031	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00034	03 c2		 add	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 86   : 	for (DWORD i = 0; i < m_MallItemInstanceVector.size(); ++i)

  00036	74 3a		 je	 SHORT $LN3@OpenMall

; 83   : 	m_MallItemInstanceVector.clear();

  00038	57		 push	 edi
  00039	33 ff		 xor	 edi, edi
  0003b	0f 1f 44 00 00	 npad	 5
$LL4@OpenMall:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00040	8b 06		 mov	 eax, DWORD PTR [esi]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 89   : 		ZeroMemory(&rInstance, sizeof(rInstance));

  00042	6a 2e		 push	 46			; 0000002eH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00044	03 c7		 add	 eax, edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 89   : 		ZeroMemory(&rInstance, sizeof(rInstance));

  00046	6a 00		 push	 0
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 _memset
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0004e	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00051	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  00056	2b 0e		 sub	 ecx, DWORD PTR [esi]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 86   : 	for (DWORD i = 0; i < m_MallItemInstanceVector.size(); ++i)

  00058	43		 inc	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00059	f7 e9		 imul	 ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 89   : 		ZeroMemory(&rInstance, sizeof(rInstance));

  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	83 c7 2e	 add	 edi, 46			; 0000002eH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00061	03 d1		 add	 edx, ecx
  00063	c1 fa 05	 sar	 edx, 5
  00066	8b c2		 mov	 eax, edx
  00068	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0006b	03 c2		 add	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 86   : 	for (DWORD i = 0; i < m_MallItemInstanceVector.size(); ++i)

  0006d	3b d8		 cmp	 ebx, eax
  0006f	72 cf		 jb	 SHORT $LL4@OpenMall
  00071	5f		 pop	 edi
$LN3@OpenMall:
  00072	5e		 pop	 esi

; 90   : 	}
; 91   : }

  00073	5b		 pop	 ebx
  00074	5d		 pop	 ebp
  00075	c2 04 00	 ret	 4
?OpenMall@CPythonSafeBox@@QAEXH@Z ENDP			; CPythonSafeBox::OpenMall
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?GetItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z
_TEXT	SEGMENT
_dwSlotIndex$ = 8					; size = 4
_ppInstance$ = 12					; size = 4
?GetItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z PROC ; CPythonSafeBox::GetItemDataPtr, COMDAT
; _this$ = ecx

; 69   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00004	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00007	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  0000c	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000f	2b ce		 sub	 ecx, esi
  00011	f7 e9		 imul	 ecx
  00013	03 d1		 add	 edx, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 70   : 	if (dwSlotIndex >= m_ItemInstanceVector.size())

  00015	8b 4d 08	 mov	 ecx, DWORD PTR _dwSlotIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00018	c1 fa 05	 sar	 edx, 5
  0001b	8b c2		 mov	 eax, edx
  0001d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00020	03 c2		 add	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 70   : 	if (dwSlotIndex >= m_ItemInstanceVector.size())

  00022	3b c8		 cmp	 ecx, eax
  00024	72 15		 jb	 SHORT $LN2@GetItemDat

; 71   : 	{
; 72   : 		TraceError("CPythonSafeBox::GetItemData(dwSlotIndex=%d) - Strange slot index", dwSlotIndex);

  00026	51		 push	 ecx
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@BNCIHACH@CPythonSafeBox?3?3GetItemData?$CIdwS@
  0002c	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00031	83 c4 08	 add	 esp, 8

; 73   : 		return FALSE;

  00034	33 c0		 xor	 eax, eax
  00036	5e		 pop	 esi

; 79   : }

  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
$LN2@GetItemDat:

; 76   : 	*ppInstance = &m_ItemInstanceVector[dwSlotIndex];

  0003b	8b 45 0c	 mov	 eax, DWORD PTR _ppInstance$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0003e	6b c9 2e	 imul	 ecx, ecx, 46
  00041	03 ce		 add	 ecx, esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 76   : 	*ppInstance = &m_ItemInstanceVector[dwSlotIndex];

  00043	89 08		 mov	 DWORD PTR [eax], ecx

; 77   : 
; 78   : 	return TRUE;

  00045	b8 01 00 00 00	 mov	 eax, 1
  0004a	5e		 pop	 esi

; 79   : }

  0004b	5d		 pop	 ebp
  0004c	c2 08 00	 ret	 8
?GetItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ENDP ; CPythonSafeBox::GetItemDataPtr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?GetCurrentSafeBoxSize@CPythonSafeBox@@QAEHXZ
_TEXT	SEGMENT
?GetCurrentSafeBoxSize@CPythonSafeBox@@QAEHXZ PROC	; CPythonSafeBox::GetCurrentSafeBoxSize, COMDAT
; _this$ = ecx

; 51   : {

  00000	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00001	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00004	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  00009	2b 71 04	 sub	 esi, DWORD PTR [ecx+4]
  0000c	f7 ee		 imul	 esi
  0000e	03 d6		 add	 edx, esi
  00010	c1 fa 05	 sar	 edx, 5
  00013	8b c2		 mov	 eax, edx
  00015	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00018	03 c2		 add	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 52   : 	return m_ItemInstanceVector.size();

  0001a	5e		 pop	 esi

; 53   : }

  0001b	c3		 ret	 0
?GetCurrentSafeBoxSize@CPythonSafeBox@@QAEHXZ ENDP	; CPythonSafeBox::GetCurrentSafeBoxSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?GetSlotItemID@CPythonSafeBox@@QAEHKPAK@Z
_TEXT	SEGMENT
_dwSlotIndex$ = 8					; size = 4
_pdwItemID$ = 12					; size = 4
?GetSlotItemID@CPythonSafeBox@@QAEHKPAK@Z PROC		; CPythonSafeBox::GetSlotItemID, COMDAT
; _this$ = ecx

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00004	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00007	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  0000c	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000f	2b ce		 sub	 ecx, esi
  00011	f7 e9		 imul	 ecx
  00013	03 d1		 add	 edx, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 57   : 	if (dwSlotIndex >= m_ItemInstanceVector.size())

  00015	8b 4d 08	 mov	 ecx, DWORD PTR _dwSlotIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00018	c1 fa 05	 sar	 edx, 5
  0001b	8b c2		 mov	 eax, edx
  0001d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00020	03 c2		 add	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 57   : 	if (dwSlotIndex >= m_ItemInstanceVector.size())

  00022	3b c8		 cmp	 ecx, eax
  00024	72 15		 jb	 SHORT $LN2@GetSlotIte

; 58   : 	{
; 59   : 		TraceError("CPythonSafeBox::GetSlotItemID(dwSlotIndex=%d) - Strange slot index", dwSlotIndex);

  00026	51		 push	 ecx
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@OIOPNNLC@CPythonSafeBox?3?3GetSlotItemID?$CId@
  0002c	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00031	83 c4 08	 add	 esp, 8

; 60   : 		return FALSE;

  00034	33 c0		 xor	 eax, eax
  00036	5e		 pop	 esi

; 66   : }

  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
$LN2@GetSlotIte:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0003b	6b c1 2e	 imul	 eax, ecx, 46
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 63   : 	*pdwItemID=m_ItemInstanceVector[dwSlotIndex].vnum;

  0003e	8b 0c 30	 mov	 ecx, DWORD PTR [eax+esi]
  00041	8b 45 0c	 mov	 eax, DWORD PTR _pdwItemID$[ebp]
  00044	5e		 pop	 esi
  00045	89 08		 mov	 DWORD PTR [eax], ecx

; 64   : 
; 65   : 	return TRUE;

  00047	b8 01 00 00 00	 mov	 eax, 1

; 66   : }

  0004c	5d		 pop	 ebp
  0004d	c2 08 00	 ret	 8
?GetSlotItemID@CPythonSafeBox@@QAEHKPAK@Z ENDP		; CPythonSafeBox::GetSlotItemID
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?GetMoney@CPythonSafeBox@@QAEKXZ
_TEXT	SEGMENT
?GetMoney@CPythonSafeBox@@QAEKXZ PROC			; CPythonSafeBox::GetMoney, COMDAT
; _this$ = ecx

; 47   : 	return m_dwMoney;

  00000	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]

; 48   : }

  00003	c3		 ret	 0
?GetMoney@CPythonSafeBox@@QAEKXZ ENDP			; CPythonSafeBox::GetMoney
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?SetMoney@CPythonSafeBox@@QAEXK@Z
_TEXT	SEGMENT
_dwMoney$ = 8						; size = 4
?SetMoney@CPythonSafeBox@@QAEXK@Z PROC			; CPythonSafeBox::SetMoney, COMDAT
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 42   : 	m_dwMoney = dwMoney;

  00003	8b 45 08	 mov	 eax, DWORD PTR _dwMoney$[ebp]
  00006	89 41 1c	 mov	 DWORD PTR [ecx+28], eax

; 43   : }

  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?SetMoney@CPythonSafeBox@@QAEXK@Z ENDP			; CPythonSafeBox::SetMoney
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?DelItemData@CPythonSafeBox@@QAEXK@Z
_TEXT	SEGMENT
_dwSlotIndex$ = 8					; size = 4
?DelItemData@CPythonSafeBox@@QAEXK@Z PROC		; CPythonSafeBox::DelItemData, COMDAT
; _this$ = ecx

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00004	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00007	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  0000c	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000f	2b ce		 sub	 ecx, esi
  00011	f7 e9		 imul	 ecx
  00013	03 d1		 add	 edx, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 30   : 	if (dwSlotIndex >= m_ItemInstanceVector.size())

  00015	8b 4d 08	 mov	 ecx, DWORD PTR _dwSlotIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00018	c1 fa 05	 sar	 edx, 5
  0001b	8b c2		 mov	 eax, edx
  0001d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00020	03 c2		 add	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 30   : 	if (dwSlotIndex >= m_ItemInstanceVector.size())

  00022	3b c8		 cmp	 ecx, eax
  00024	72 13		 jb	 SHORT $LN2@DelItemDat

; 31   : 	{
; 32   : 		TraceError("CPythonSafeBox::DelItemData(dwSlotIndex=%d) - Strange slot index", dwSlotIndex);

  00026	51		 push	 ecx
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@ILLOPJOM@CPythonSafeBox?3?3DelItemData?$CIdwS@
  0002c	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00031	83 c4 08	 add	 esp, 8
  00034	5e		 pop	 esi

; 38   : }

  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
$LN2@DelItemDat:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00039	6b c1 2e	 imul	 eax, ecx, 46
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 37   : 	ZeroMemory(&rInstance, sizeof(rInstance));

  0003c	6a 2e		 push	 46			; 0000002eH
  0003e	6a 00		 push	 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00040	03 c6		 add	 eax, esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 37   : 	ZeroMemory(&rInstance, sizeof(rInstance));

  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 _memset
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004b	5e		 pop	 esi

; 38   : }

  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
?DelItemData@CPythonSafeBox@@QAEXK@Z ENDP		; CPythonSafeBox::DelItemData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?SetItemData@CPythonSafeBox@@QAEXKABUpacket_item@@@Z
_TEXT	SEGMENT
_dwSlotIndex$ = 8					; size = 4
_rItemInstance$ = 12					; size = 4
?SetItemData@CPythonSafeBox@@QAEXKABUpacket_item@@@Z PROC ; CPythonSafeBox::SetItemData, COMDAT
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00004	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00007	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  0000c	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000f	2b ce		 sub	 ecx, esi
  00011	f7 e9		 imul	 ecx
  00013	03 d1		 add	 edx, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 19   : 	if (dwSlotIndex >= m_ItemInstanceVector.size())

  00015	8b 4d 08	 mov	 ecx, DWORD PTR _dwSlotIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00018	c1 fa 05	 sar	 edx, 5
  0001b	8b c2		 mov	 eax, edx
  0001d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00020	03 c2		 add	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 19   : 	if (dwSlotIndex >= m_ItemInstanceVector.size())

  00022	3b c8		 cmp	 ecx, eax
  00024	72 13		 jb	 SHORT $LN2@SetItemDat

; 20   : 	{
; 21   : 		TraceError("CPythonSafeBox::SetItemData(dwSlotIndex=%d) - Strange slot index", dwSlotIndex);

  00026	51		 push	 ecx
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@NFGEBKNF@CPythonSafeBox?3?3SetItemData?$CIdwS@
  0002c	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00031	83 c4 08	 add	 esp, 8
  00034	5e		 pop	 esi

; 26   : }

  00035	5d		 pop	 ebp
  00036	c2 08 00	 ret	 8
$LN2@SetItemDat:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00039	6b d1 2e	 imul	 edx, ecx, 46
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 25   : 	m_ItemInstanceVector[dwSlotIndex] = rItemInstance;

  0003c	8b 4d 0c	 mov	 ecx, DWORD PTR _rItemInstance$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  0003f	03 d6		 add	 edx, esi
  00041	5e		 pop	 esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 25   : 	m_ItemInstanceVector[dwSlotIndex] = rItemInstance;

  00042	0f 10 01	 movups	 xmm0, XMMWORD PTR [ecx]
  00045	0f 11 02	 movups	 XMMWORD PTR [edx], xmm0
  00048	0f 10 41 10	 movups	 xmm0, XMMWORD PTR [ecx+16]
  0004c	0f 11 42 10	 movups	 XMMWORD PTR [edx+16], xmm0
  00050	f3 0f 7e 41 20	 movq	 xmm0, QWORD PTR [ecx+32]
  00055	66 0f d6 42 20	 movq	 QWORD PTR [edx+32], xmm0
  0005a	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  0005d	89 42 28	 mov	 DWORD PTR [edx+40], eax
  00060	66 8b 41 2c	 mov	 ax, WORD PTR [ecx+44]
  00064	66 89 42 2c	 mov	 WORD PTR [edx+44], ax

; 26   : }

  00068	5d		 pop	 ebp
  00069	c2 08 00	 ret	 8
?SetItemData@CPythonSafeBox@@QAEXKABUpacket_item@@@Z ENDP ; CPythonSafeBox::SetItemData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?OpenSafeBox@CPythonSafeBox@@QAEXH@Z
_TEXT	SEGMENT
_iSize$ = 8						; size = 4
?OpenSafeBox@CPythonSafeBox@@QAEXH@Z PROC		; CPythonSafeBox::OpenSafeBox, COMDAT
; _this$ = ecx

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 7    : 	m_ItemInstanceVector.clear();

  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
  0000b	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0
  00012	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 8    : 	m_ItemInstanceVector.resize(SAFEBOX_SLOT_X_COUNT * iSize);

  00015	8b ce		 mov	 ecx, esi
  00017	8b 45 08	 mov	 eax, DWORD PTR _iSize$[ebp]
  0001a	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ?resize@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@QAEXI@Z ; std::vector<packet_item,std::allocator<packet_item> >::resize
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00023	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00026	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  0002b	2b 0e		 sub	 ecx, DWORD PTR [esi]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 10   : 	for (DWORD i = 0; i < m_ItemInstanceVector.size(); ++i)

  0002d	33 db		 xor	 ebx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0002f	f7 e9		 imul	 ecx
  00031	03 d1		 add	 edx, ecx
  00033	c1 fa 05	 sar	 edx, 5
  00036	8b c2		 mov	 eax, edx
  00038	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0003b	03 c2		 add	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 10   : 	for (DWORD i = 0; i < m_ItemInstanceVector.size(); ++i)

  0003d	74 35		 je	 SHORT $LN3@OpenSafeBo

; 6    : 	m_dwMoney = 0;

  0003f	57		 push	 edi
  00040	33 ff		 xor	 edi, edi
$LL4@OpenSafeBo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00042	8b 06		 mov	 eax, DWORD PTR [esi]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 13   : 		ZeroMemory(&rInstance, sizeof(rInstance));

  00044	6a 2e		 push	 46			; 0000002eH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1504 :         return _My_data._Myfirst[_Pos];

  00046	03 c7		 add	 eax, edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 13   : 		ZeroMemory(&rInstance, sizeof(rInstance));

  00048	6a 00		 push	 0
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 _memset
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00050	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00053	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  00058	2b 0e		 sub	 ecx, DWORD PTR [esi]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 10   : 	for (DWORD i = 0; i < m_ItemInstanceVector.size(); ++i)

  0005a	43		 inc	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0005b	f7 e9		 imul	 ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 13   : 		ZeroMemory(&rInstance, sizeof(rInstance));

  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	83 c7 2e	 add	 edi, 46			; 0000002eH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00063	03 d1		 add	 edx, ecx
  00065	c1 fa 05	 sar	 edx, 5
  00068	8b c2		 mov	 eax, edx
  0006a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0006d	03 c2		 add	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 10   : 	for (DWORD i = 0; i < m_ItemInstanceVector.size(); ++i)

  0006f	3b d8		 cmp	 ebx, eax
  00071	72 cf		 jb	 SHORT $LL4@OpenSafeBo
  00073	5f		 pop	 edi
$LN3@OpenSafeBo:
  00074	5e		 pop	 esi

; 14   : 	}
; 15   : }

  00075	5b		 pop	 ebx
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
?OpenSafeBox@CPythonSafeBox@@QAEXH@Z ENDP		; CPythonSafeBox::OpenSafeBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ??1CPythonSafeBox@@UAE@XZ
_TEXT	SEGMENT
??1CPythonSafeBox@@UAE@XZ PROC				; CPythonSafeBox::~CPythonSafeBox, COMDAT
; _this$ = ecx

; 153  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi
  00004	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CPythonSafeBox@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  0000a	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  0000d	85 ff		 test	 edi, edi
  0000f	74 3a		 je	 SHORT $LN6@CPythonSaf

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00011	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00014	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  00019	2b cf		 sub	 ecx, edi
  0001b	f7 e9		 imul	 ecx
  0001d	03 d1		 add	 edx, ecx
  0001f	c1 fa 05	 sar	 edx, 5
  00022	8b c2		 mov	 eax, edx
  00024	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00027	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00029	6b c0 2e	 imul	 eax, eax, 46
  0002c	50		 push	 eax
  0002d	57		 push	 edi
  0002e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00033	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  0003d	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1700 :             _Myend   = pointer();

  00044	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CPythonSaf:

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  0004b	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0004e	85 ff		 test	 edi, edi
  00050	74 3a		 je	 SHORT $LN19@CPythonSaf

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00052	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00055	b8 c9 42 16 b2	 mov	 eax, -1307163959	; b21642c9H
  0005a	2b cf		 sub	 ecx, edi
  0005c	f7 e9		 imul	 ecx
  0005e	03 d1		 add	 edx, ecx
  00060	c1 fa 05	 sar	 edx, 5
  00063	8b c2		 mov	 eax, edx
  00065	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00068	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0006a	6b c0 2e	 imul	 eax, eax, 46
  0006d	50		 push	 eax
  0006e	57		 push	 edi
  0006f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00074	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  0007e	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1700 :             _Myend   = pointer();

  00085	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN19@CPythonSaf:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 154  : }

  0008c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CSingleton@VCPythonSafeBox@@@@6B@
  00092	5f		 pop	 edi
  00093	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A, 0 ; CSingleton<CPythonSafeBox>::ms_singleton
  0009d	5e		 pop	 esi
  0009e	c3		 ret	 0
??1CPythonSafeBox@@UAE@XZ ENDP				; CPythonSafeBox::~CPythonSafeBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ??0CPythonSafeBox@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPythonSafeBox@@QAE@XZ PROC				; CPythonSafeBox::CPythonSafeBox, COMDAT
; _this$ = ecx

; 148  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 15   : 		ms_singleton = (T*) ((int) this + offset);

  00004	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A, ecx ; CSingleton<CPythonSafeBox>::ms_singleton
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 150  : }

  0000a	8b c1		 mov	 eax, ecx
  0000c	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7CPythonSafeBox@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00012	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00019	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00020	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00027	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  0002e	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
  00035	c7 41 18 00 00
	00 00		 mov	 DWORD PTR [ecx+24], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 148  : {

  0003c	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 149  : 	m_dwMoney = 0;

  0003f	c7 41 1c 00 00
	00 00		 mov	 DWORD PTR [ecx+28], 0

; 150  : }

  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
??0CPythonSafeBox@@QAE@XZ ENDP				; CPythonSafeBox::CPythonSafeBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
;	COMDAT ??_G?$CSingleton@VCPythonSafeBox@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CSingleton@VCPythonSafeBox@@@@UAEPAXI@Z PROC	; CSingleton<CPythonSafeBox>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1

; 19   : 	{ 

  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CSingleton@VCPythonSafeBox@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0; 

  00010	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A, 0 ; CSingleton<CPythonSafeBox>::ms_singleton
  0001a	74 0b		 je	 SHORT $LN6@scalar
  0001c	6a 04		 push	 4
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00024	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_G?$CSingleton@VCPythonSafeBox@@@@UAEPAXI@Z ENDP	; CSingleton<CPythonSafeBox>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
;	COMDAT ??1?$CSingleton@VCPythonSafeBox@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CSingleton@VCPythonSafeBox@@@@UAE@XZ PROC		; CSingleton<CPythonSafeBox>::~CSingleton<CPythonSafeBox>, COMDAT
; _this$ = ecx

; 19   : 	{ 

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CSingleton@VCPythonSafeBox@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0; 

  00006	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A, 0 ; CSingleton<CPythonSafeBox>::ms_singleton

; 22   : 	}

  00010	c3		 ret	 0
??1?$CSingleton@VCPythonSafeBox@@@@UAE@XZ ENDP		; CSingleton<CPythonSafeBox>::~CSingleton<CPythonSafeBox>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?initsafebox@@YAXXZ
_TEXT	SEGMENT
?initsafebox@@YAXXZ PROC				; initsafebox, COMDAT

; 313  : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 314  : 	static PyMethodDef s_methods[] =
; 315  : 	{
; 316  : 		// SafeBox
; 317  : 		{ "GetCurrentSafeboxSize",		safeboxGetCurrentSafeboxSize,			METH_VARARGS },
; 318  : 		{ "GetItemID",					safeboxGetItemID,						METH_VARARGS },
; 319  : 		{ "GetItemCount",				safeboxGetItemCount,					METH_VARARGS },
; 320  : 		{ "GetItemFlags",				safeboxGetItemFlags,					METH_VARARGS },
; 321  : 		{ "GetItemMetinSocket",			safeboxGetItemMetinSocket,				METH_VARARGS },
; 322  : 		{ "GetItemAttribute",			safeboxGetItemAttribute,				METH_VARARGS },
; 323  : 		{ "GetMoney",					safeboxGetMoney,						METH_VARARGS },
; 324  : 
; 325  : 		// Mall
; 326  : 		{ "GetMallItemID",				safeboxGetMallItemID,					METH_VARARGS },
; 327  : 		{ "GetMallItemCount",			safeboxGetMallItemCount,				METH_VARARGS },
; 328  : 		{ "GetMallItemMetinSocket",		safeboxGetMallItemMetinSocket,			METH_VARARGS },
; 329  : 		{ "GetMallItemAttribute",		safeboxGetMallItemAttribute,			METH_VARARGS },
; 330  : 		{ "GetMallSize",				safeboxGetMallSize,						METH_VARARGS },
; 331  : 		{ NULL,							NULL,									NULL },
; 332  : 	};
; 333  : 
; 334  : 	PyObject * poModule = Py_InitModule("safebox", s_methods);

  00002	68 f5 03 00 00	 push	 1013			; 000003f5H
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	68 00 00 00 00	 push	 OFFSET ?s_methods@?1??initsafebox@@YAXXZ@4PAUPyMethodDef@@A
  00010	68 00 00 00 00	 push	 OFFSET ??_C@_07CPPOKFKF@safebox@
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_InitModule4

; 335  : 	PyModule_AddIntConstant(poModule, "SAFEBOX_SLOT_X_COUNT", CPythonSafeBox::SAFEBOX_SLOT_X_COUNT);

  0001b	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__PyModule_AddIntConstant
  00021	8b f8		 mov	 edi, eax
  00023	6a 05		 push	 5
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@DMABFMEE@SAFEBOX_SLOT_X_COUNT@
  0002a	57		 push	 edi
  0002b	ff d6		 call	 esi

; 336  : 	PyModule_AddIntConstant(poModule, "SAFEBOX_SLOT_Y_COUNT", CPythonSafeBox::SAFEBOX_SLOT_Y_COUNT);

  0002d	6a 09		 push	 9
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@PAKLFMNK@SAFEBOX_SLOT_Y_COUNT@
  00034	57		 push	 edi
  00035	ff d6		 call	 esi

; 337  : 	PyModule_AddIntConstant(poModule, "SAFEBOX_PAGE_SIZE", CPythonSafeBox::SAFEBOX_PAGE_SIZE);

  00037	6a 2d		 push	 45			; 0000002dH
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@JOOAEPKL@SAFEBOX_PAGE_SIZE@
  0003e	57		 push	 edi
  0003f	ff d6		 call	 esi
  00041	83 c4 38	 add	 esp, 56			; 00000038H
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi

; 338  : }

  00046	c3		 ret	 0
?initsafebox@@YAXXZ ENDP				; initsafebox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
END
