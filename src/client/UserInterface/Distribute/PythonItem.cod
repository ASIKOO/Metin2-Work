; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
PUBLIC	??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
PUBLIC	??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
PUBLIC	??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vector deleting destructor'
EXTRN	??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z:PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vector deleting destructor'
;	COMDAT ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDe'
	DB	'corator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDec'
	DB	'orator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpd'
	DB	'ateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@N'
	DB	'EffectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEff'
	DB	'ectUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffe'
	DB	'ctUpdateDecorator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecora'
	DB	'tor@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8 DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDeco'
	DB	'rator@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD 00H ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@@8
	DD	FLAT:??_R3?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ DD FLAT:??_R4?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`vftable'
	DD	FLAT:??_E?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
CONST	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	___local_stdio_printf_options
PUBLIC	_sprintf
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?_Throw_tree_length_error@std@@YAXXZ		; std::_Throw_tree_length_error
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?RotationArc@@YA?AUD3DXQUATERNION@@ABUD3DXVECTOR3@@0@Z ; RotationArc
PUBLIC	??1?$CSingleton@VCPythonItem@@@@UAE@XZ		; CSingleton<CPythonItem>::~CSingleton<CPythonItem>
PUBLIC	??_G?$CSingleton@VCPythonItem@@@@UAEPAXI@Z	; CSingleton<CPythonItem>::`scalar deleting destructor'
PUBLIC	?Update@SGroundItemInstance@CPythonItem@@QAE_NXZ ; CPythonItem::SGroundItemInstance::Update
PUBLIC	?Clear@SGroundItemInstance@CPythonItem@@QAEXXZ	; CPythonItem::SGroundItemInstance::Clear
PUBLIC	?__PlayDropSound@SGroundItemInstance@CPythonItem@@SAXKABUD3DXVECTOR3@@@Z ; CPythonItem::SGroundItemInstance::__PlayDropSound
PUBLIC	??1SGroundItemInstance@CPythonItem@@UAE@XZ	; CPythonItem::SGroundItemInstance::~SGroundItemInstance
PUBLIC	??_GSGroundItemInstance@CPythonItem@@UAEPAXI@Z	; CPythonItem::SGroundItemInstance::`scalar deleting destructor'
PUBLIC	??0CPythonItem@@QAE@XZ				; CPythonItem::CPythonItem
PUBLIC	??1CPythonItem@@UAE@XZ				; CPythonItem::~CPythonItem
PUBLIC	?Destroy@CPythonItem@@QAEXXZ			; CPythonItem::Destroy
PUBLIC	?Create@CPythonItem@@QAEXXZ			; CPythonItem::Create
PUBLIC	?PlayUseSound@CPythonItem@@QAEXK@Z		; CPythonItem::PlayUseSound
PUBLIC	?PlayDropSound@CPythonItem@@QAEXK@Z		; CPythonItem::PlayDropSound
PUBLIC	?PlayUsePotionSound@CPythonItem@@QAEXXZ		; CPythonItem::PlayUsePotionSound
PUBLIC	?SetUseSoundFileName@CPythonItem@@QAEXKABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CPythonItem::SetUseSoundFileName
PUBLIC	?SetDropSoundFileName@CPythonItem@@QAEXKABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CPythonItem::SetDropSoundFileName
PUBLIC	?GetInfo@CPythonItem@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CPythonItem::GetInfo
PUBLIC	?DeleteAllItems@CPythonItem@@QAEXXZ		; CPythonItem::DeleteAllItems
PUBLIC	?Render@CPythonItem@@QAEXXZ			; CPythonItem::Render
PUBLIC	?Update@CPythonItem@@QAEXABUtagPOINT@@@Z	; CPythonItem::Update
PUBLIC	?CreateItem@CPythonItem@@QAEXKKMMM_N@Z		; CPythonItem::CreateItem
PUBLIC	?DeleteItem@CPythonItem@@QAEXK@Z		; CPythonItem::DeleteItem
PUBLIC	?SetOwnership@CPythonItem@@QAEXKPBD@Z		; CPythonItem::SetOwnership
PUBLIC	?GetOwnership@CPythonItem@@QAE_NKPAPBD@Z	; CPythonItem::GetOwnership
PUBLIC	?GetGroundItemPosition@CPythonItem@@QAEHKPAUD3DXVECTOR3@@@Z ; CPythonItem::GetGroundItemPosition
PUBLIC	?GetPickedItemID@CPythonItem@@QAE_NPAK@Z	; CPythonItem::GetPickedItemID
PUBLIC	?GetCloseItem@CPythonItem@@QAE_NABUD3DXVECTOR3@@PAKK@Z ; CPythonItem::GetCloseItem
PUBLIC	?GetCloseMoney@CPythonItem@@QAE_NABUD3DXVECTOR3@@PAKK@Z ; CPythonItem::GetCloseMoney
PUBLIC	?GetVirtualNumberOfGroundItem@CPythonItem@@QAEKK@Z ; CPythonItem::GetVirtualNumberOfGroundItem
PUBLIC	?BuildNoGradeNameData@CPythonItem@@QAEXH@Z	; CPythonItem::BuildNoGradeNameData
PUBLIC	?GetNoGradeNameDataCount@CPythonItem@@QAEKXZ	; CPythonItem::GetNoGradeNameDataCount
PUBLIC	?GetNoGradeNameDataPtr@CPythonItem@@QAEPAVCItemData@@K@Z ; CPythonItem::GetNoGradeNameDataPtr
PUBLIC	?__Pick@CPythonItem@@IAEKABUtagPOINT@@@Z	; CPythonItem::__Pick
PUBLIC	?__GetUseSoundType@CPythonItem@@IAEKABVCItemData@@@Z ; CPythonItem::__GetUseSoundType
PUBLIC	?__GetDropSoundType@CPythonItem@@IAEKABVCItemData@@@Z ; CPythonItem::__GetDropSoundType
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> >,0> >
PUBLIC	?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Lrotate
PUBLIC	?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Rrotate
PUBLIC	?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Extract
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Insert_node
PUBLIC	??1?$map@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@@std@@QAE@XZ ; std::map<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::~map<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >
PUBLIC	??1?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@UAE@XZ ; CDynamicPool<CPythonItem::SGroundItemInstance>::~CDynamicPool<CPythonItem::SGroundItemInstance>
PUBLIC	?Delete@?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@KAXPAUSGroundItemInstance@CPythonItem@@@Z ; CDynamicPool<CPythonItem::SGroundItemInstance>::Delete
PUBLIC	?_Xlength@?$vector@PAUSGroundItemInstance@CPythonItem@@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@CAXXZ ; std::vector<CPythonItem::SGroundItemInstance *,std::allocator<CPythonItem::SGroundItemInstance *> >::_Xlength
PUBLIC	??_G?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@UAEPAXI@Z ; CDynamicPool<CPythonItem::SGroundItemInstance>::`scalar deleting destructor'
PUBLIC	??_GCPythonItem@@UAEPAXI@Z			; CPythonItem::`scalar deleting destructor'
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >,std::_Iterator_base0>::operator++
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> > >
PUBLIC	??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
PUBLIC	??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
PUBLIC	?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
PUBLIC	??$_Emplace_reallocate@ABQAUSGroundItemInstance@CPythonItem@@@?$vector@PAUSGroundItemInstance@CPythonItem@@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@QAEPAPAUSGroundItemInstance@CPythonItem@@QAPAU23@ABQAU23@@Z ; std::vector<CPythonItem::SGroundItemInstance *,std::allocator<CPythonItem::SGroundItemInstance *> >::_Emplace_reallocate<CPythonItem::SGroundItemInstance * const &>
PUBLIC	??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z ; std::_Pocca<std::allocator<char> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCItemData@@@std@@@std@@YAXPAPAVCItemData@@QAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ; std::_Destroy_range<std::allocator<CItemData *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@YAXPAPAUSGroundItemInstance@CPythonItem@@QAPAU12@AAV?$allocator@PAUSGroundItemInstance@CPythonItem@@@0@@Z ; std::_Destroy_range<std::allocator<CPythonItem::SGroundItemInstance *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
PUBLIC	??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> >,0> >::_Find_lower_bound<unsigned long>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> * const &>
PUBLIC	??$_Uninitialized_move@PAPAUSGroundItemInstance@CPythonItem@@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@YAPAPAUSGroundItemInstance@CPythonItem@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSGroundItemInstance@CPythonItem@@@0@@Z ; std::_Uninitialized_move<CPythonItem::SGroundItemInstance * *,std::allocator<CPythonItem::SGroundItemInstance *> >
PUBLIC	??$_Sort_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@0HU?$less@X@0@@Z ; std::_Sort_unchecked<std::pair<float,int> *,std::less<void> >
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> > >
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> *>
PUBLIC	??$_Copy_memmove@PAPAUSGroundItemInstance@CPythonItem@@PAPAU12@@std@@YAPAPAUSGroundItemInstance@CPythonItem@@PAPAU12@00@Z ; std::_Copy_memmove<CPythonItem::SGroundItemInstance * *,CPythonItem::SGroundItemInstance * *>
PUBLIC	??$_Partition_by_median_guess_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MH@std@@PAU12@@0@PAU?$pair@MH@0@0U?$less@X@0@@Z ; std::_Partition_by_median_guess_unchecked<std::pair<float,int> *,std::less<void> >
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> * &>
PUBLIC	??$_Pop_heap_hole_by_index@PAU?$pair@MH@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@HH$$QAU10@U?$less@X@0@@Z ; std::_Pop_heap_hole_by_index<std::pair<float,int> *,std::pair<float,int>,std::less<void> >
PUBLIC	??$_Med3_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@00U?$less@X@0@@Z ; std::_Med3_unchecked<std::pair<float,int> *,std::less<void> >
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BB@GCADKGJO@map?1set?5too?5long@		; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCSoundManager@@@@0PAVCSoundManager@@A ; CSingleton<CSoundManager>::ms_singleton
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A ; CSingleton<CItemManager>::ms_singleton
PUBLIC	?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
PUBLIC	?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
PUBLIC	?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCPythonBackground@@@@0PAVCPythonBackground@@A ; CSingleton<CPythonBackground>::ms_singleton
PUBLIC	?ms_singleton@?$CSingleton@VCPythonItem@@@@0PAVCPythonItem@@A ; CSingleton<CPythonItem>::ms_singleton
PUBLIC	??_7?$CSingleton@VCPythonItem@@@@6B@		; CSingleton<CPythonItem>::`vftable'
PUBLIC	?ms_astDropSoundFileName@SGroundItemInstance@CPythonItem@@2PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; CPythonItem::SGroundItemInstance::ms_astDropSoundFileName
PUBLIC	??_7SGroundItemInstance@CPythonItem@@6B@	; CPythonItem::SGroundItemInstance::`vftable'
PUBLIC	??_7?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@6B@ ; CDynamicPool<CPythonItem::SGroundItemInstance>::`vftable'
PUBLIC	??_7CPythonItem@@6B@				; CPythonItem::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCPythonTextTail@@@@0PAVCPythonTextTail@@A ; CSingleton<CPythonTextTail>::ms_singleton
PUBLIC	??_C@_0BH@BBCPOMJB@Item?3?5Inst?5?$CFd?0?5Pool?5?$CFd@ ; `string'
PUBLIC	??_C@_0BJ@CMCGILDJ@SetDropSoundFile?5?$CFd?5?3?5?$CFs@ ; `string'
PUBLIC	??_C@_0CO@ILCHIEAM@d?3?1ymir?5work?1effect?1etc?1dropite@ ; `string'
PUBLIC	??_R4CPythonItem@@6B@				; CPythonItem::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCPythonItem@@@8				; CPythonItem `RTTI Type Descriptor'
PUBLIC	??_R3CPythonItem@@8				; CPythonItem::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CPythonItem@@8				; CPythonItem::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CPythonItem@@8			; CPythonItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$CSingleton@VCPythonItem@@@@8	; CSingleton<CPythonItem>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$CSingleton@VCPythonItem@@@@@8		; CSingleton<CPythonItem> `RTTI Type Descriptor'
PUBLIC	??_R3?$CSingleton@VCPythonItem@@@@8		; CSingleton<CPythonItem>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CSingleton@VCPythonItem@@@@8		; CSingleton<CPythonItem>::`RTTI Base Class Array'
PUBLIC	??_R4?$CSingleton@VCPythonItem@@@@6B@		; CSingleton<CPythonItem>::`RTTI Complete Object Locator'
PUBLIC	??_R4SGroundItemInstance@CPythonItem@@6B@	; CPythonItem::SGroundItemInstance::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSGroundItemInstance@CPythonItem@@@8	; CPythonItem::SGroundItemInstance `RTTI Type Descriptor'
PUBLIC	??_R3SGroundItemInstance@CPythonItem@@8		; CPythonItem::SGroundItemInstance::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SGroundItemInstance@CPythonItem@@8		; CPythonItem::SGroundItemInstance::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SGroundItemInstance@CPythonItem@@8 ; CPythonItem::SGroundItemInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@6B@ ; CDynamicPool<CPythonItem::SGroundItemInstance>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@@8 ; CDynamicPool<CPythonItem::SGroundItemInstance> `RTTI Type Descriptor'
PUBLIC	??_R3?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@8 ; CDynamicPool<CPythonItem::SGroundItemInstance>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@8 ; CDynamicPool<CPythonItem::SGroundItemInstance>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@8 ; CDynamicPool<CPythonItem::SGroundItemInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3cf5c28f
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@40000000
PUBLIC	__real@40400000
PUBLIC	__real@41200000
PUBLIC	__real@42c80000
PUBLIC	__xmm@41f00000000000000000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??_L@YGXPAXIIP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_D3DXVec3Normalize@8:PROC
EXTRN	_D3DXVec3TransformCoord@12:PROC
EXTRN	_D3DXMatrixRotationQuaternion@8:PROC
EXTRN	_D3DXQuaternionRotationAxis@12:PROC
EXTRN	_D3DXQuaternionMultiply@12:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?Tracenf@@YAXPBDZZ:PROC				; Tracenf
EXTRN	?GetCurrentMillisecond@CTimer@@QAEKXZ:PROC	; CTimer::GetCurrentMillisecond
EXTRN	?SetDiffuseOperation@CScreen@@QAEXXZ:PROC	; CScreen::SetDiffuseOperation
EXTRN	?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ:PROC ; CGraphicObjectInstance::GetPosition
EXTRN	?SetPosition@CGraphicObjectInstance@@QAEXMMM@Z:PROC ; CGraphicObjectInstance::SetPosition
EXTRN	?SetRotationQuaternion@CGraphicObjectInstance@@QAEXABUD3DXQUATERNION@@@Z:PROC ; CGraphicObjectInstance::SetRotationQuaternion
EXTRN	?Clear@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Clear
EXTRN	?Update@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Update
EXTRN	?Render@CGraphicObjectInstance@@QAE_NXZ:PROC	; CGraphicObjectInstance::Render
EXTRN	?BlendRender@CGraphicObjectInstance@@QAEXXZ:PROC ; CGraphicObjectInstance::BlendRender
EXTRN	?Deform@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Deform
EXTRN	?Transform@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Transform
EXTRN	?Show@CGraphicObjectInstance@@QAEXXZ:PROC	; CGraphicObjectInstance::Show
EXTRN	??0CGraphicThingInstance@@QAE@XZ:PROC		; CGraphicThingInstance::CGraphicThingInstance
EXTRN	??1CGraphicThingInstance@@UAE@XZ:PROC		; CGraphicThingInstance::~CGraphicThingInstance
EXTRN	?ReserveModelInstance@CGraphicThingInstance@@QAEXH@Z:PROC ; CGraphicThingInstance::ReserveModelInstance
EXTRN	?ReserveModelThing@CGraphicThingInstance@@QAEXH@Z:PROC ; CGraphicThingInstance::ReserveModelThing
EXTRN	?RegisterModelThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z:PROC ; CGraphicThingInstance::RegisterModelThing
EXTRN	?SetModelInstance@CGraphicThingInstance@@QAE_NHHHH@Z:PROC ; CGraphicThingInstance::SetModelInstance
EXTRN	?Intersect@CGraphicThingInstance@@QAE_NPAM00@Z:PROC ; CGraphicThingInstance::Intersect
EXTRN	?GetBoundBox@CGraphicThingInstance@@QAEXPAUD3DXVECTOR3@@0@Z:PROC ; CGraphicThingInstance::GetBoundBox
EXTRN	?random@@YAKXZ:PROC				; random
EXTRN	?frandom@@YAMMM@Z:PROC				; frandom
EXTRN	?PlaySound2D@CSoundManager@@QAEXPBD@Z:PROC	; CSoundManager::PlaySound2D
EXTRN	?PlaySound3D@CSoundManager@@QAEXMMMPBDH@Z:PROC	; CSoundManager::PlaySound3D
EXTRN	?GetDropModelThing@CItemData@@QAEPAVCGraphicThing@@XZ:PROC ; CItemData::GetDropModelThing
EXTRN	?GetName@CItemData@@QBEPBDXZ:PROC		; CItemData::GetName
EXTRN	?GetType@CItemData@@QBEEXZ:PROC			; CItemData::GetType
EXTRN	?GetSubType@CItemData@@QBEEXZ:PROC		; CItemData::GetSubType
EXTRN	?GetWeaponType@CItemData@@QBEKXZ:PROC		; CItemData::GetWeaponType
EXTRN	?GetItemDataPointer@CItemManager@@QAEHKPAPAVCItemData@@@Z:PROC ; CItemManager::GetItemDataPointer
EXTRN	?RegisterEffect2@CEffectManager@@QAEHPBDPAK_N@Z:PROC ; CEffectManager::RegisterEffect2
EXTRN	?CreateEffect@CEffectManager@@QAEHKABUD3DXVECTOR3@@0@Z:PROC ; CEffectManager::CreateEffect
EXTRN	?DestroyEffectInstance@CEffectManager@@QAE_NK@Z:PROC ; CEffectManager::DestroyEffectInstance
EXTRN	?GetHeight@CMapManager@@QAEMMM@Z:PROC		; CMapManager::GetHeight
EXTRN	?GetNormal@CMapManager@@QAE_NHHPAUD3DXVECTOR3@@@Z:PROC ; CMapManager::GetNormal
EXTRN	??_E?$CSingleton@VCPythonItem@@@@UAEPAXI@Z:PROC	; CSingleton<CPythonItem>::`vector deleting destructor'
EXTRN	??_ESGroundItemInstance@CPythonItem@@UAEPAXI@Z:PROC ; CPythonItem::SGroundItemInstance::`vector deleting destructor'
EXTRN	??_E?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@UAEPAXI@Z:PROC ; CDynamicPool<CPythonItem::SGroundItemInstance>::`vector deleting destructor'
EXTRN	??_ECPythonItem@@UAEPAXI@Z:PROC			; CPythonItem::`vector deleting destructor'
EXTRN	?RegisterItemTextTail@CPythonTextTail@@QAEXKPBDPAVCGraphicObjectInstance@@@Z:PROC ; CPythonTextTail::RegisterItemTextTail
EXTRN	?SetItemTextTailOwner@CPythonTextTail@@QAEXKPBD@Z:PROC ; CPythonTextTail::SetItemTextTailOwner
EXTRN	?DeleteItemTextTail@CPythonTextTail@@QAEXK@Z:PROC ; CPythonTextTail::DeleteItemTextTail
EXTRN	?Pick@CPythonTextTail@@QAEHHH@Z:PROC		; CPythonTextTail::Pick
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftoui3:PROC
EXTRN	__libm_sse2_cos_precise:PROC
EXTRN	__libm_sse2_sin_precise:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A DD 01H DUP (?) ; CSingleton<CTimer>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A DD 01H DUP (?) ; CSingleton<CPythonGraphic>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCSoundManager@@@@0PAVCSoundManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCSoundManager@@@@0PAVCSoundManager@@A DD 01H DUP (?) ; CSingleton<CSoundManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A DD 01H DUP (?) ; CSingleton<CItemManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A DD 01H DUP (?) ; CSingleton<CEffectManager>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCPythonBackground@@@@0PAVCPythonBackground@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCPythonBackground@@@@0PAVCPythonBackground@@A DD 01H DUP (?) ; CSingleton<CPythonBackground>::ms_singleton
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCPythonItem@@@@0PAVCPythonItem@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCPythonItem@@@@0PAVCPythonItem@@A DD 01H DUP (?) ; CSingleton<CPythonItem>::ms_singleton
_BSS	ENDS
_BSS	SEGMENT
?ms_astDropSoundFileName@SGroundItemInstance@CPythonItem@@2PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A DB 078H DUP (?) ; CPythonItem::SGroundItemInstance::ms_astDropSoundFileName
_BSS	ENDS
;	COMDAT ?ms_singleton@?$CSingleton@VCPythonTextTail@@@@0PAVCPythonTextTail@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCPythonTextTail@@@@0PAVCPythonTextTail@@A DD 01H DUP (?) ; CSingleton<CPythonTextTail>::ms_singleton
_BSS	ENDS
CRT$XCU	SEGMENT
??ms_astDropSoundFileName$initializer$@SGroundItemInstance@CPythonItem@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_astDropSoundFileName@SGroundItemInstance@CPythonItem@@2PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A@@YAXXZ ; ??ms_astDropSoundFileName$initializer$@SGroundItemInstance@CPythonItem@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3cf5c28f
CONST	SEGMENT
__real@3cf5c28f DD 03cf5c28fr			; 0.03
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@8 DD FLAT:??_R0?AV?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@@8 ; CDynamicPool<CPythonItem::SGroundItemInstance>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@8
rdata$r	SEGMENT
??_R2?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@8 DD FLAT:??_R1A@?0A@EA@?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@8 ; CDynamicPool<CPythonItem::SGroundItemInstance>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@8
rdata$r	SEGMENT
??_R3?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@8 DD 00H ; CDynamicPool<CPythonItem::SGroundItemInstance>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@@8
data$rs	SEGMENT
??_R0?AV?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@@8 DD FLAT:??_7type_info@@6B@ ; CDynamicPool<CPythonItem::SGroundItemInstance> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@6B@
rdata$r	SEGMENT
??_R4?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@6B@ DD 00H ; CDynamicPool<CPythonItem::SGroundItemInstance>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@@8
	DD	FLAT:??_R3?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SGroundItemInstance@CPythonItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SGroundItemInstance@CPythonItem@@8 DD FLAT:??_R0?AUSGroundItemInstance@CPythonItem@@@8 ; CPythonItem::SGroundItemInstance::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SGroundItemInstance@CPythonItem@@8
rdata$r	ENDS
;	COMDAT ??_R2SGroundItemInstance@CPythonItem@@8
rdata$r	SEGMENT
??_R2SGroundItemInstance@CPythonItem@@8 DD FLAT:??_R1A@?0A@EA@SGroundItemInstance@CPythonItem@@8 ; CPythonItem::SGroundItemInstance::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SGroundItemInstance@CPythonItem@@8
rdata$r	SEGMENT
??_R3SGroundItemInstance@CPythonItem@@8 DD 00H		; CPythonItem::SGroundItemInstance::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SGroundItemInstance@CPythonItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSGroundItemInstance@CPythonItem@@@8
data$rs	SEGMENT
??_R0?AUSGroundItemInstance@CPythonItem@@@8 DD FLAT:??_7type_info@@6B@ ; CPythonItem::SGroundItemInstance `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSGroundItemInstance@CPythonItem@@', 00H
data$rs	ENDS
;	COMDAT ??_R4SGroundItemInstance@CPythonItem@@6B@
rdata$r	SEGMENT
??_R4SGroundItemInstance@CPythonItem@@6B@ DD 00H	; CPythonItem::SGroundItemInstance::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSGroundItemInstance@CPythonItem@@@8
	DD	FLAT:??_R3SGroundItemInstance@CPythonItem@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CSingleton@VCPythonItem@@@@6B@
rdata$r	SEGMENT
??_R4?$CSingleton@VCPythonItem@@@@6B@ DD 00H		; CSingleton<CPythonItem>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CSingleton@VCPythonItem@@@@@8
	DD	FLAT:??_R3?$CSingleton@VCPythonItem@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CSingleton@VCPythonItem@@@@8
rdata$r	SEGMENT
??_R2?$CSingleton@VCPythonItem@@@@8 DD FLAT:??_R1A@?0A@EA@?$CSingleton@VCPythonItem@@@@8 ; CSingleton<CPythonItem>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CSingleton@VCPythonItem@@@@8
rdata$r	SEGMENT
??_R3?$CSingleton@VCPythonItem@@@@8 DD 00H		; CSingleton<CPythonItem>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CSingleton@VCPythonItem@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CSingleton@VCPythonItem@@@@@8
data$rs	SEGMENT
??_R0?AV?$CSingleton@VCPythonItem@@@@@8 DD FLAT:??_7type_info@@6B@ ; CSingleton<CPythonItem> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CSingleton@VCPythonItem@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CSingleton@VCPythonItem@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CSingleton@VCPythonItem@@@@8 DD FLAT:??_R0?AV?$CSingleton@VCPythonItem@@@@@8 ; CSingleton<CPythonItem>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CSingleton@VCPythonItem@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CPythonItem@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CPythonItem@@8 DD FLAT:??_R0?AVCPythonItem@@@8 ; CPythonItem::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CPythonItem@@8
rdata$r	ENDS
;	COMDAT ??_R2CPythonItem@@8
rdata$r	SEGMENT
??_R2CPythonItem@@8 DD FLAT:??_R1A@?0A@EA@CPythonItem@@8 ; CPythonItem::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$CSingleton@VCPythonItem@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CPythonItem@@8
rdata$r	SEGMENT
??_R3CPythonItem@@8 DD 00H				; CPythonItem::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CPythonItem@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCPythonItem@@@8
data$rs	SEGMENT
??_R0?AVCPythonItem@@@8 DD FLAT:??_7type_info@@6B@	; CPythonItem `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCPythonItem@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CPythonItem@@6B@
rdata$r	SEGMENT
??_R4CPythonItem@@6B@ DD 00H				; CPythonItem::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCPythonItem@@@8
	DD	FLAT:??_R3CPythonItem@@8
rdata$r	ENDS
;	COMDAT ??_C@_0CO@ILCHIEAM@d?3?1ymir?5work?1effect?1etc?1dropite@
CONST	SEGMENT
??_C@_0CO@ILCHIEAM@d?3?1ymir?5work?1effect?1etc?1dropite@ DB 'd:/ymir wor'
	DB	'k/effect/etc/dropitem/dropitem.mse', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CMCGILDJ@SetDropSoundFile?5?$CFd?5?3?5?$CFs@
CONST	SEGMENT
??_C@_0BJ@CMCGILDJ@SetDropSoundFile?5?$CFd?5?3?5?$CFs@ DB 'SetDropSoundFi'
	DB	'le %d : %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BBCPOMJB@Item?3?5Inst?5?$CFd?0?5Pool?5?$CFd@
CONST	SEGMENT
??_C@_0BH@BBCPOMJB@Item?3?5Inst?5?$CFd?0?5Pool?5?$CFd@ DB 'Item: Inst %d,'
	DB	' Pool %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CPythonItem@@6B@
CONST	SEGMENT
??_7CPythonItem@@6B@ DD FLAT:??_R4CPythonItem@@6B@	; CPythonItem::`vftable'
	DD	FLAT:??_ECPythonItem@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@6B@
CONST	SEGMENT
??_7?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@6B@ DD FLAT:??_R4?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@6B@ ; CDynamicPool<CPythonItem::SGroundItemInstance>::`vftable'
	DD	FLAT:??_E?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7SGroundItemInstance@CPythonItem@@6B@
CONST	SEGMENT
??_7SGroundItemInstance@CPythonItem@@6B@ DD FLAT:??_R4SGroundItemInstance@CPythonItem@@6B@ ; CPythonItem::SGroundItemInstance::`vftable'
	DD	FLAT:??_ESGroundItemInstance@CPythonItem@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CSingleton@VCPythonItem@@@@6B@
CONST	SEGMENT
??_7?$CSingleton@VCPythonItem@@@@6B@ DD FLAT:??_R4?$CSingleton@VCPythonItem@@@@6B@ ; CSingleton<CPythonItem>::`vftable'
	DD	FLAT:??_E?$CSingleton@VCPythonItem@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A
_DATA	SEGMENT
?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A DD FLAT:??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@ ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BB@GCADKGJO@map?1set?5too?5long@ DB 'map/set too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@1@$$QAU?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@1@$$QAU?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@1@@Z$1
__ehfuncinfo$??$?0U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@1@$$QAU?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@1@$$QAU?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Emplace@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@1@@Z$2
__ehfuncinfo$??$_Emplace@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@_N@1@$$QAU?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@1@@Z$2
__ehfuncinfo$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@$0A@$0A@@?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Alloc@?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@QAEPAUSGroundItemInstance@CPythonItem@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Alloc@?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@QAEPAUSGroundItemInstance@CPythonItem@@XZ$0
__ehfuncinfo$?Alloc@?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@QAEPAUSGroundItemInstance@CPythonItem@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Alloc@?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@QAEPAUSGroundItemInstance@CPythonItem@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateItem@CPythonItem@@QAEXKKMMM_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateItem@CPythonItem@@QAEXKKMMM_N@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateItem@CPythonItem@@QAEXKKMMM_N@Z$8
__ehfuncinfo$?CreateItem@CPythonItem@@QAEXKKMMM_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?CreateItem@CPythonItem@@QAEXKKMMM_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CPythonItem@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CPythonItem@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CPythonItem@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CPythonItem@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CPythonItem@@QAE@XZ$2
__ehfuncinfo$??0CPythonItem@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CPythonItem@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA DD FLAT:??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; ??ms_kPool$initializer$@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
;	COMDAT ??$_Med3_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@00U?$less@X@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Mid$ = 12						; size = 4
__Last$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Med3_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@00U?$less@X@0@@Z PROC ; std::_Med3_unchecked<std::pair<float,int> *,std::less<void> >, COMDAT

; 7434 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00003	8b 55 0c	 mov	 edx, DWORD PTR __Mid$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7434 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  00006	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00007	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7434 : _CONSTEXPR20 void _Med3_unchecked(_RanIt _First, _RanIt _Mid, _RanIt _Last, _Pr _Pred) {

  0000a	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  0000b	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  0000f	f3 0f 10 0e	 movss	 xmm1, DWORD PTR [esi]
  00013	0f 2f c8	 comiss	 xmm1, xmm0
  00016	77 0d		 ja	 SHORT $LN81@Med3_unche
  00018	0f 2f c1	 comiss	 xmm0, xmm1
  0001b	77 24		 ja	 SHORT $LN27@Med3_unche
  0001d	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00020	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  00023	7d 1c		 jge	 SHORT $LN27@Med3_unche
$LN81@Med3_unche:

; 320  :         if (this != _STD addressof(_Right)) {

  00025	3b d6		 cmp	 edx, esi
  00027	74 18		 je	 SHORT $LN27@Med3_unche

; 105  :     _Left    = _STD move(_Right);

  00029	f3 0f 11 0a	 movss	 DWORD PTR [edx], xmm1
  0002d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 106  :     _Right   = _STD move(_Tmp);

  00030	f3 0f 11 06	 movss	 DWORD PTR [esi], xmm0

; 104  :     _Ty _Tmp = _STD move(_Left);

  00034	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]

; 105  :     _Left    = _STD move(_Right);

  00037	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 106  :     _Right   = _STD move(_Tmp);

  0003a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  0003d	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
$LN27@Med3_unche:

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00041	8b 7d 10	 mov	 edi, DWORD PTR __Last$[ebp]
  00044	f3 0f 10 0f	 movss	 xmm1, DWORD PTR [edi]
  00048	0f 2f c1	 comiss	 xmm0, xmm1
  0004b	77 0d		 ja	 SHORT $LN83@Med3_unche
  0004d	0f 2f c8	 comiss	 xmm1, xmm0
  00050	77 52		 ja	 SHORT $LN71@Med3_unche
  00052	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00055	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  00058	7d 4a		 jge	 SHORT $LN71@Med3_unche
$LN83@Med3_unche:

; 320  :         if (this != _STD addressof(_Right)) {

  0005a	3b fa		 cmp	 edi, edx
  0005c	74 18		 je	 SHORT $LN84@Med3_unche

; 105  :     _Left    = _STD move(_Right);

  0005e	f3 0f 11 07	 movss	 DWORD PTR [edi], xmm0
  00062	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 106  :     _Right   = _STD move(_Tmp);

  00065	f3 0f 11 0a	 movss	 DWORD PTR [edx], xmm1

; 104  :     _Ty _Tmp = _STD move(_Left);

  00069	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]

; 105  :     _Left    = _STD move(_Right);

  0006c	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 106  :     _Right   = _STD move(_Tmp);

  0006f	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00072	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
$LN84@Med3_unche:

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00076	f3 0f 10 0e	 movss	 xmm1, DWORD PTR [esi]
  0007a	0f 2f c8	 comiss	 xmm1, xmm0
  0007d	77 0d		 ja	 SHORT $LN85@Med3_unche
  0007f	0f 2f c1	 comiss	 xmm0, xmm1
  00082	77 20		 ja	 SHORT $LN71@Med3_unche
  00084	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00087	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  0008a	7d 18		 jge	 SHORT $LN71@Med3_unche
$LN85@Med3_unche:

; 320  :         if (this != _STD addressof(_Right)) {

  0008c	3b d6		 cmp	 edx, esi
  0008e	74 14		 je	 SHORT $LN71@Med3_unche

; 105  :     _Left    = _STD move(_Right);

  00090	f3 0f 11 0a	 movss	 DWORD PTR [edx], xmm1
  00094	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 106  :     _Right   = _STD move(_Tmp);

  00097	f3 0f 11 06	 movss	 DWORD PTR [esi], xmm0

; 104  :     _Ty _Tmp = _STD move(_Left);

  0009b	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]

; 105  :     _Left    = _STD move(_Right);

  0009e	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 106  :     _Right   = _STD move(_Tmp);

  000a1	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
$LN71@Med3_unche:
  000a4	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7447 : }

  000a5	5e		 pop	 esi
  000a6	5d		 pop	 ebp
  000a7	c3		 ret	 0
??$_Med3_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@00U?$less@X@0@@Z ENDP ; std::_Med3_unchecked<std::pair<float,int> *,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
;	COMDAT ??$_Pop_heap_hole_by_index@PAU?$pair@MH@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@HH$$QAU10@U?$less@X@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Top$1$ = 12						; size = 4
__Hole$ = 12						; size = 4
__Bottom$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$_Pop_heap_hole_by_index@PAU?$pair@MH@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@HH$$QAU10@U?$less@X@0@@Z PROC ; std::_Pop_heap_hole_by_index<std::pair<float,int> *,std::pair<float,int>,std::less<void> >, COMDAT

; 6186 :     _RanIt _First, _Iter_diff_t<_RanIt> _Hole, _Iter_diff_t<_RanIt> _Bottom, _Ty&& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 6187 :     // percolate _Hole to _Bottom, then push _Val
; 6188 :     _STL_INTERNAL_CHECK(_Bottom > 0);
; 6189 : 
; 6190 :     using _Diff      = _Iter_diff_t<_RanIt>;
; 6191 :     const _Diff _Top = _Hole;
; 6192 :     _Diff _Idx       = _Hole;
; 6193 : 
; 6194 :     // Check whether _Idx can have a child before calculating that child's index, since
; 6195 :     // calculating the child's index can trigger integer overflows
; 6196 :     const _Diff _Max_sequence_non_leaf = (_Bottom - 1) >> 1; // shift for codegen
; 6197 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  00003	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00006	53		 push	 ebx
  00007	8b 5d 10	 mov	 ebx, DWORD PTR __Bottom$[ebp]
  0000a	56		 push	 esi
  0000b	8b 75 0c	 mov	 esi, DWORD PTR __Hole$[ebp]
  0000e	8b d6		 mov	 edx, esi
  00010	57		 push	 edi
  00011	8d 7b ff	 lea	 edi, DWORD PTR [ebx-1]
  00014	89 75 0c	 mov	 DWORD PTR __Top$1$[ebp], esi
  00017	d1 ff		 sar	 edi, 1
  00019	3b f7		 cmp	 esi, edi
  0001b	7d 47		 jge	 SHORT $LN3@Pop_heap_h
  0001d	0f 1f 00	 npad	 3
$LL2@Pop_heap_h:

; 6198 :         _Idx = 2 * _Idx + 2;

  00020	03 d2		 add	 edx, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00022	f3 0f 10 4c d1
	10		 movss	 xmm1, DWORD PTR [ecx+edx*8+16]
  00028	f3 0f 10 44 d1
	08		 movss	 xmm0, DWORD PTR [ecx+edx*8+8]
  0002e	0f 2f c1	 comiss	 xmm0, xmm1
  00031	77 16		 ja	 SHORT $LN40@Pop_heap_h
  00033	0f 2f c8	 comiss	 xmm1, xmm0
  00036	77 0a		 ja	 SHORT $LN11@Pop_heap_h
  00038	8b 44 d1 14	 mov	 eax, DWORD PTR [ecx+edx*8+20]
  0003c	3b 44 d1 0c	 cmp	 eax, DWORD PTR [ecx+edx*8+12]
  00040	7c 07		 jl	 SHORT $LN40@Pop_heap_h
$LN11@Pop_heap_h:
  00042	b8 02 00 00 00	 mov	 eax, 2
  00047	eb 05		 jmp	 SHORT $LN13@Pop_heap_h
$LN40@Pop_heap_h:
  00049	b8 01 00 00 00	 mov	 eax, 1
$LN13@Pop_heap_h:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6202 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  0004e	03 d0		 add	 edx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  00050	8b 04 d1	 mov	 eax, DWORD PTR [ecx+edx*8]
  00053	89 04 f1	 mov	 DWORD PTR [ecx+esi*8], eax

; 291  :         second = _STD forward<_Ty2>(_Right.second);

  00056	8b 44 d1 04	 mov	 eax, DWORD PTR [ecx+edx*8+4]
  0005a	89 44 f1 04	 mov	 DWORD PTR [ecx+esi*8+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6203 :         _Hole             = _Idx;

  0005e	8b f2		 mov	 esi, edx
  00060	3b d7		 cmp	 edx, edi
  00062	7c bc		 jl	 SHORT $LL2@Pop_heap_h
$LN3@Pop_heap_h:

; 6204 :     }
; 6205 : 
; 6206 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  00064	3b d7		 cmp	 edx, edi
  00066	75 17		 jne	 SHORT $LN5@Pop_heap_h
  00068	f6 c3 01	 test	 bl, 1
  0006b	75 12		 jne	 SHORT $LN5@Pop_heap_h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  0006d	8b 44 d9 f8	 mov	 eax, DWORD PTR [ecx+ebx*8-8]
  00071	89 04 f1	 mov	 DWORD PTR [ecx+esi*8], eax

; 291  :         second = _STD forward<_Ty2>(_Right.second);

  00074	8b 44 d9 fc	 mov	 eax, DWORD PTR [ecx+ebx*8-4]
  00078	89 44 f1 04	 mov	 DWORD PTR [ecx+esi*8+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6208 :         _Hole             = _Bottom - 1;

  0007c	8d 73 ff	 lea	 esi, DWORD PTR [ebx-1]
$LN5@Pop_heap_h:

; 6077 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  0007f	8b 5d 0c	 mov	 ebx, DWORD PTR __Top$1$[ebp]
  00082	8b 7d 14	 mov	 edi, DWORD PTR __Val$[ebp]
  00085	3b de		 cmp	 ebx, esi
  00087	7d 3b		 jge	 SHORT $LN47@Pop_heap_h
  00089	0f 1f 80 00 00
	00 00		 npad	 7
$LL21@Pop_heap_h:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00090	f3 0f 10 0f	 movss	 xmm1, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6076 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  00094	8d 56 ff	 lea	 edx, DWORD PTR [esi-1]
  00097	d1 fa		 sar	 edx, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00099	f3 0f 10 04 d1	 movss	 xmm0, DWORD PTR [ecx+edx*8]
  0009e	0f 2f c8	 comiss	 xmm1, xmm0
  000a1	77 0e		 ja	 SHORT $LN46@Pop_heap_h
  000a3	0f 2f c1	 comiss	 xmm0, xmm1
  000a6	77 1c		 ja	 SHORT $LN47@Pop_heap_h
  000a8	8b 44 d1 04	 mov	 eax, DWORD PTR [ecx+edx*8+4]
  000ac	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
  000af	7d 13		 jge	 SHORT $LN47@Pop_heap_h
$LN46@Pop_heap_h:

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  000b1	f3 0f 11 04 f1	 movss	 DWORD PTR [ecx+esi*8], xmm0

; 291  :         second = _STD forward<_Ty2>(_Right.second);

  000b6	8b 44 d1 04	 mov	 eax, DWORD PTR [ecx+edx*8+4]
  000ba	89 44 f1 04	 mov	 DWORD PTR [ecx+esi*8+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6081 :         _Hole             = _Idx;

  000be	8b f2		 mov	 esi, edx
  000c0	3b da		 cmp	 ebx, edx
  000c2	7c cc		 jl	 SHORT $LL21@Pop_heap_h
$LN47@Pop_heap_h:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  000c4	8b 07		 mov	 eax, DWORD PTR [edi]
  000c6	89 04 f1	 mov	 DWORD PTR [ecx+esi*8], eax

; 291  :         second = _STD forward<_Ty2>(_Right.second);

  000c9	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000cc	5f		 pop	 edi
  000cd	89 44 f1 04	 mov	 DWORD PTR [ecx+esi*8+4], eax
  000d1	5e		 pop	 esi
  000d2	5b		 pop	 ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6212 : }

  000d3	5d		 pop	 ebp
  000d4	c3		 ret	 0
??$_Pop_heap_hole_by_index@PAU?$pair@MH@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@HH$$QAU10@U?$less@X@0@@Z ENDP ; std::_Pop_heap_hole_by_index<std::pair<float,int> *,std::pair<float,int>,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@0@0@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> * &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
;	COMDAT ??$_Partition_by_median_guess_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MH@std@@PAU12@@0@PAU?$pair@MH@0@0U?$less@X@0@@Z
_TEXT	SEGMENT
__Pfirst$1$ = -8					; size = 4
tv1402 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Glast$1$ = 20						; size = 4
__Pred$ = 20						; size = 1
??$_Partition_by_median_guess_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MH@std@@PAU12@@0@PAU?$pair@MH@0@0U?$less@X@0@@Z PROC ; std::_Partition_by_median_guess_unchecked<std::pair<float,int> *,std::less<void> >, COMDAT

; 7467 : _CONSTEXPR20 pair<_RanIt, _RanIt> _Partition_by_median_guess_unchecked(_RanIt _First, _RanIt _Last, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 7468 :     // partition [_First, _Last)
; 7469 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00006	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	53		 push	 ebx
  0000c	8b 5d 0c	 mov	 ebx, DWORD PTR __First$[ebp]

; 7470 :     _Guess_median_unchecked(_First, _Mid, _Prev_iter(_Last), _Pred);

  0000f	83 c1 f8	 add	 ecx, -8			; fffffff8H
  00012	2b c3		 sub	 eax, ebx
  00014	c1 f8 04	 sar	 eax, 4
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8d 34 c3	 lea	 esi, DWORD PTR [ebx+eax*8]

; 7453 :     const _Diff _Count = _Last - _First;

  0001c	8b c1		 mov	 eax, ecx
  0001e	2b c3		 sub	 eax, ebx

; 7468 :     // partition [_First, _Last)
; 7469 :     _RanIt _Mid = _First + ((_Last - _First) >> 1); // shift for codegen

  00020	89 75 f8	 mov	 DWORD PTR __Pfirst$1$[ebp], esi

; 7453 :     const _Diff _Count = _Last - _First;

  00023	c1 f8 03	 sar	 eax, 3

; 7454 :     if (40 < _Count) { // Tukey's ninther

  00026	83 f8 28	 cmp	 eax, 40			; 00000028H
  00029	7e 66		 jle	 SHORT $LN35@Partition_

; 7455 :         const _Diff _Step     = (_Count + 1) >> 3; // +1 can't overflow because range was made inclusive in caller

  0002b	40		 inc	 eax
  0002c	c1 f8 03	 sar	 eax, 3

; 7456 :         const _Diff _Two_step = _Step << 1; // note: intentionally discards low-order bit
; 7457 :         _Med3_unchecked(_First, _First + _Step, _First + _Two_step, _Pred);

  0002f	8b c8		 mov	 ecx, eax
  00031	c1 e1 04	 shl	 ecx, 4
  00034	89 4d fc	 mov	 DWORD PTR tv1402[ebp], ecx
  00037	8d 3c c5 00 00
	00 00		 lea	 edi, DWORD PTR [eax*8]
  0003e	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  00041	8d 14 1f	 lea	 edx, DWORD PTR [edi+ebx]
  00044	03 c1		 add	 eax, ecx
  00046	8b 5d 14	 mov	 ebx, DWORD PTR __Pred$[ebp]
  00049	53		 push	 ebx
  0004a	50		 push	 eax
  0004b	52		 push	 edx
  0004c	ff 75 0c	 push	 DWORD PTR __First$[ebp]
  0004f	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@00U?$less@X@0@@Z ; std::_Med3_unchecked<std::pair<float,int> *,std::less<void> >

; 7458 :         _Med3_unchecked(_Mid - _Step, _Mid, _Mid + _Step, _Pred);

  00054	53		 push	 ebx
  00055	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  00058	50		 push	 eax
  00059	8b c6		 mov	 eax, esi
  0005b	2b c7		 sub	 eax, edi
  0005d	56		 push	 esi
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@00U?$less@X@0@@Z ; std::_Med3_unchecked<std::pair<float,int> *,std::less<void> >

; 7459 :         _Med3_unchecked(_Last - _Two_step, _Last - _Step, _Last, _Pred);

  00064	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  00067	83 c0 f8	 add	 eax, -8			; fffffff8H
  0006a	8b f0		 mov	 esi, eax
  0006c	53		 push	 ebx
  0006d	50		 push	 eax
  0006e	2b 45 fc	 sub	 eax, DWORD PTR tv1402[ebp]
  00071	2b f7		 sub	 esi, edi
  00073	56		 push	 esi
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@00U?$less@X@0@@Z ; std::_Med3_unchecked<std::pair<float,int> *,std::less<void> >

; 7460 :         _Med3_unchecked(_First + _Step, _Mid, _Last - _Step, _Pred);

  0007a	53		 push	 ebx
  0007b	8b 5d 0c	 mov	 ebx, DWORD PTR __First$[ebp]
  0007e	56		 push	 esi
  0007f	8b 75 f8	 mov	 esi, DWORD PTR __Pfirst$1$[ebp]
  00082	56		 push	 esi
  00083	8d 04 1f	 lea	 eax, DWORD PTR [edi+ebx]
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@00U?$less@X@0@@Z ; std::_Med3_unchecked<std::pair<float,int> *,std::less<void> >
  0008c	83 c4 40	 add	 esp, 64			; 00000040H

; 7461 :     } else {

  0008f	eb 0e		 jmp	 SHORT $LN36@Partition_
$LN35@Partition_:

; 7462 :         _Med3_unchecked(_First, _Mid, _Last, _Pred);

  00091	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  00094	51		 push	 ecx
  00095	56		 push	 esi
  00096	53		 push	 ebx
  00097	e8 00 00 00 00	 call	 ??$_Med3_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@00U?$less@X@0@@Z ; std::_Med3_unchecked<std::pair<float,int> *,std::less<void> >
  0009c	83 c4 10	 add	 esp, 16			; 00000010H
$LN36@Partition_:

; 7471 :     _RanIt _Pfirst = _Mid;
; 7472 :     _RanIt _Plast  = _Next_iter(_Pfirst);

  0009f	8d 7e 08	 lea	 edi, DWORD PTR [esi+8]

; 7473 : 
; 7474 :     while (_First < _Pfirst && !_DEBUG_LT_PRED(_Pred, *_Prev_iter(_Pfirst), *_Pfirst)
; 7475 :            && !_Pred(*_Pfirst, *_Prev_iter(_Pfirst))) {

  000a2	3b de		 cmp	 ebx, esi
  000a4	73 3d		 jae	 SHORT $LN260@Partition_
  000a6	f3 0f 10 0e	 movss	 xmm1, DWORD PTR [esi]
  000aa	66 0f 1f 44 00
	00		 npad	 6
$LL2@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000b0	f3 0f 10 46 f8	 movss	 xmm0, DWORD PTR [esi-8]
  000b5	0f 2f c8	 comiss	 xmm1, xmm0
  000b8	77 29		 ja	 SHORT $LN260@Partition_
  000ba	0f 2f c1	 comiss	 xmm0, xmm1
  000bd	77 24		 ja	 SHORT $LN260@Partition_
  000bf	8b 46 fc	 mov	 eax, DWORD PTR [esi-4]
  000c2	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  000c5	7c 1c		 jl	 SHORT $LN260@Partition_
  000c7	0f 2f c1	 comiss	 xmm0, xmm1
  000ca	77 17		 ja	 SHORT $LN260@Partition_
  000cc	0f 2f c8	 comiss	 xmm1, xmm0
  000cf	77 08		 ja	 SHORT $LN248@Partition_
  000d1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000d4	3b 46 fc	 cmp	 eax, DWORD PTR [esi-4]
  000d7	7c 0a		 jl	 SHORT $LN260@Partition_
$LN248@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7476 :         --_Pfirst;

  000d9	83 c6 f8	 add	 esi, -8			; fffffff8H
  000dc	0f 28 c8	 movaps	 xmm1, xmm0
  000df	3b de		 cmp	 ebx, esi
  000e1	72 cd		 jb	 SHORT $LL2@Partition_
$LN260@Partition_:

; 7477 :     }
; 7478 : 
; 7479 :     while (_Plast < _Last && !_DEBUG_LT_PRED(_Pred, *_Plast, *_Pfirst) && !_Pred(*_Pfirst, *_Plast)) {

  000e3	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
  000e6	3b f9		 cmp	 edi, ecx
  000e8	73 35		 jae	 SHORT $LN261@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000ea	f3 0f 10 0e	 movss	 xmm1, DWORD PTR [esi]
  000ee	66 90		 npad	 2
$LL4@Partition_:
  000f0	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]
  000f4	0f 2f c8	 comiss	 xmm1, xmm0
  000f7	77 26		 ja	 SHORT $LN261@Partition_
  000f9	0f 2f c1	 comiss	 xmm0, xmm1
  000fc	77 21		 ja	 SHORT $LN261@Partition_
  000fe	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00101	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  00104	7c 19		 jl	 SHORT $LN261@Partition_
  00106	0f 2f c1	 comiss	 xmm0, xmm1
  00109	77 14		 ja	 SHORT $LN261@Partition_
  0010b	0f 2f c8	 comiss	 xmm1, xmm0
  0010e	77 08		 ja	 SHORT $LN250@Partition_
  00110	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00113	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
  00116	7c 07		 jl	 SHORT $LN261@Partition_
$LN250@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7480 :         ++_Plast;

  00118	83 c7 08	 add	 edi, 8
  0011b	3b f9		 cmp	 edi, ecx
  0011d	72 d1		 jb	 SHORT $LL4@Partition_
$LN261@Partition_:

; 7481 :     }
; 7482 : 
; 7483 :     _RanIt _Gfirst = _Plast;
; 7484 :     _RanIt _Glast  = _Pfirst;

  0011f	8b ce		 mov	 ecx, esi
  00121	8b d7		 mov	 edx, edi
  00123	89 4d 14	 mov	 DWORD PTR __Glast$1$[ebp], ecx
$LN271@Partition_:

; 7485 : 
; 7486 :     for (;;) { // partition
; 7487 :         for (; _Gfirst < _Last; ++_Gfirst) {

  00126	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  00129	0f 1f 80 00 00
	00 00		 npad	 7
$LL6@Partition_:
  00130	3b d0		 cmp	 edx, eax
  00132	73 67		 jae	 SHORT $LN230@Partition_
  00134	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
  00137	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL11@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00140	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  00144	f3 0f 10 0a	 movss	 xmm1, DWORD PTR [edx]
  00148	0f 2f c8	 comiss	 xmm1, xmm0
  0014b	77 41		 ja	 SHORT $LN9@Partition_
  0014d	0f 2f c1	 comiss	 xmm0, xmm1
  00150	77 43		 ja	 SHORT $LN262@Partition_
  00152	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00155	3b 42 04	 cmp	 eax, DWORD PTR [edx+4]
  00158	7c 34		 jl	 SHORT $LN9@Partition_
  0015a	0f 2f c1	 comiss	 xmm0, xmm1
  0015d	77 36		 ja	 SHORT $LN262@Partition_
  0015f	0f 2f c8	 comiss	 xmm1, xmm0
  00162	77 08		 ja	 SHORT $LN253@Partition_
  00164	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00167	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  0016a	7c 29		 jl	 SHORT $LN262@Partition_
$LN253@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7492 :             } else if (_Plast != _Gfirst) {

  0016c	3b fa		 cmp	 edi, edx
  0016e	74 1b		 je	 SHORT $LN19@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 104  :     _Ty _Tmp = _STD move(_Left);

  00170	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]

; 105  :     _Left    = _STD move(_Right);

  00174	f3 0f 11 0f	 movss	 DWORD PTR [edi], xmm1
  00178	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 106  :     _Right   = _STD move(_Tmp);

  0017b	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 104  :     _Ty _Tmp = _STD move(_Left);

  0017f	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]

; 105  :     _Left    = _STD move(_Right);

  00182	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 106  :     _Right   = _STD move(_Tmp);

  00185	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7495 :             } else {

  00188	8b 4d 10	 mov	 ecx, DWORD PTR __Last$[ebp]
$LN19@Partition_:

; 7485 : 
; 7486 :     for (;;) { // partition
; 7487 :         for (; _Gfirst < _Last; ++_Gfirst) {

  0018b	83 c7 08	 add	 edi, 8
$LN9@Partition_:
  0018e	83 c2 08	 add	 edx, 8
  00191	3b d1		 cmp	 edx, ecx
  00193	72 ab		 jb	 SHORT $LL11@Partition_
$LN262@Partition_:
  00195	8b 4d 14	 mov	 ecx, DWORD PTR __Glast$1$[ebp]
  00198	8b 5d 0c	 mov	 ebx, DWORD PTR __First$[ebp]
$LN230@Partition_:

; 7500 :         for (; _First < _Glast; --_Glast) {

  0019b	3b cb		 cmp	 ecx, ebx
  0019d	76 75		 jbe	 SHORT $LN269@Partition_
  0019f	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  001a2	8d 59 fc	 lea	 ebx, DWORD PTR [ecx-4]
  001a5	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL14@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  001b0	f3 0f 10 4b fc	 movss	 xmm1, DWORD PTR [ebx-4]
  001b5	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  001b9	0f 2f c1	 comiss	 xmm0, xmm1
  001bc	77 44		 ja	 SHORT $LN12@Partition_
  001be	0f 2f c8	 comiss	 xmm1, xmm0
  001c1	77 4c		 ja	 SHORT $LN263@Partition_
  001c3	8b 03		 mov	 eax, DWORD PTR [ebx]
  001c5	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  001c8	7c 35		 jl	 SHORT $LN265@Partition_
  001ca	0f 2f c8	 comiss	 xmm1, xmm0
  001cd	77 40		 ja	 SHORT $LN263@Partition_
  001cf	0f 2f c1	 comiss	 xmm0, xmm1
  001d2	77 07		 ja	 SHORT $LN255@Partition_
  001d4	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001d7	3b 03		 cmp	 eax, DWORD PTR [ebx]
  001d9	7c 34		 jl	 SHORT $LN263@Partition_
$LN255@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7505 :             } else if (--_Pfirst != _Prev_iter(_Glast)) {

  001db	83 ee 08	 sub	 esi, 8
  001de	8d 43 fc	 lea	 eax, DWORD PTR [ebx-4]
  001e1	3b f0		 cmp	 esi, eax
  001e3	74 1a		 je	 SHORT $LN265@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 104  :     _Ty _Tmp = _STD move(_Left);

  001e5	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]

; 105  :     _Left    = _STD move(_Right);

  001e9	f3 0f 11 0e	 movss	 DWORD PTR [esi], xmm1
  001ed	8b 03		 mov	 eax, DWORD PTR [ebx]

; 106  :     _Right   = _STD move(_Tmp);

  001ef	f3 0f 11 43 fc	 movss	 DWORD PTR [ebx-4], xmm0

; 104  :     _Ty _Tmp = _STD move(_Left);

  001f4	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 105  :     _Left    = _STD move(_Right);

  001f7	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 106  :     _Right   = _STD move(_Tmp);

  001fa	89 0b		 mov	 DWORD PTR [ebx], ecx
  001fc	8b 4d 14	 mov	 ecx, DWORD PTR __Glast$1$[ebp]
$LN265@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7500 :         for (; _First < _Glast; --_Glast) {

  001ff	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
$LN12@Partition_:
  00202	83 e9 08	 sub	 ecx, 8
  00205	83 eb 08	 sub	 ebx, 8
  00208	89 4d 14	 mov	 DWORD PTR __Glast$1$[ebp], ecx
  0020b	3b c1		 cmp	 eax, ecx
  0020d	72 a1		 jb	 SHORT $LL14@Partition_
$LN263@Partition_:
  0020f	8b 5d 0c	 mov	 ebx, DWORD PTR __First$[ebp]

; 7506 :                 _STD iter_swap(_Pfirst, _Prev_iter(_Glast));
; 7507 :             }
; 7508 :         }
; 7509 : 
; 7510 :         if (_Glast == _First && _Gfirst == _Last) {

  00212	3b cb		 cmp	 ecx, ebx
$LN269@Partition_:
  00214	75 56		 jne	 SHORT $LN27@Partition_
  00216	3b 55 10	 cmp	 edx, DWORD PTR __Last$[ebp]
  00219	0f 84 e1 00 00
	00		 je	 $LN209@Partition_

; 7512 :         }
; 7513 : 
; 7514 :         if (_Glast == _First) { // no room at bottom, rotate pivot upward
; 7515 :             if (_Plast != _Gfirst) {

  0021f	3b fa		 cmp	 edi, edx
  00221	74 1c		 je	 SHORT $LN140@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 320  :         if (this != _STD addressof(_Right)) {

  00223	3b f7		 cmp	 esi, edi
  00225	74 18		 je	 SHORT $LN140@Partition_

; 105  :     _Left    = _STD move(_Right);

  00227	8b 07		 mov	 eax, DWORD PTR [edi]
  00229	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  0022d	89 06		 mov	 DWORD PTR [esi], eax
  0022f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]

; 106  :     _Right   = _STD move(_Tmp);

  00232	f3 0f 11 07	 movss	 DWORD PTR [edi], xmm0

; 104  :     _Ty _Tmp = _STD move(_Left);

  00236	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 105  :     _Left    = _STD move(_Right);

  00239	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 106  :     _Right   = _STD move(_Tmp);

  0023c	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
$LN140@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7519 :             ++_Plast;

  0023f	83 c7 08	 add	 edi, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 320  :         if (this != _STD addressof(_Right)) {

  00242	3b f2		 cmp	 esi, edx
  00244	74 18		 je	 SHORT $LN155@Partition_

; 105  :     _Left    = _STD move(_Right);

  00246	8b 02		 mov	 eax, DWORD PTR [edx]
  00248	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  0024c	89 06		 mov	 DWORD PTR [esi], eax
  0024e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 106  :     _Right   = _STD move(_Tmp);

  00251	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 104  :     _Ty _Tmp = _STD move(_Left);

  00255	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 105  :     _Left    = _STD move(_Right);

  00258	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 106  :     _Right   = _STD move(_Tmp);

  0025b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$LN155@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7522 :             ++_Gfirst;

  0025e	8b 4d 14	 mov	 ecx, DWORD PTR __Glast$1$[ebp]
  00261	83 c6 08	 add	 esi, 8
  00264	83 c2 08	 add	 edx, 8
  00267	e9 ba fe ff ff	 jmp	 $LN271@Partition_
$LN27@Partition_:

; 7523 :         } else if (_Gfirst == _Last) { // no room at top, rotate pivot downward

  0026c	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  0026f	83 c1 f8	 add	 ecx, -8			; fffffff8H
  00272	89 4d 14	 mov	 DWORD PTR __Glast$1$[ebp], ecx
  00275	3b d0		 cmp	 edx, eax
  00277	75 55		 jne	 SHORT $LN30@Partition_

; 7524 :             if (--_Glast != --_Pfirst) {

  00279	83 ee 08	 sub	 esi, 8
  0027c	3b ce		 cmp	 ecx, esi
  0027e	74 23		 je	 SHORT $LN256@Partition_
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 104  :     _Ty _Tmp = _STD move(_Left);

  00280	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]

; 105  :     _Left    = _STD move(_Right);

  00284	8b 06		 mov	 eax, DWORD PTR [esi]
  00286	8b 5d 14	 mov	 ebx, DWORD PTR __Glast$1$[ebp]
  00289	89 01		 mov	 DWORD PTR [ecx], eax
  0028b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 106  :     _Right   = _STD move(_Tmp);

  0028e	f3 0f 11 06	 movss	 DWORD PTR [esi], xmm0

; 104  :     _Ty _Tmp = _STD move(_Left);

  00292	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]

; 105  :     _Left    = _STD move(_Right);

  00295	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  00298	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]

; 106  :     _Right   = _STD move(_Tmp);

  0029b	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  0029e	8b cb		 mov	 ecx, ebx
  002a0	8b 5d 0c	 mov	 ebx, DWORD PTR __First$[ebp]
$LN256@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7528 :             _STD iter_swap(_Pfirst, --_Plast);

  002a3	83 ef 08	 sub	 edi, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 320  :         if (this != _STD addressof(_Right)) {

  002a6	3b f7		 cmp	 esi, edi
  002a8	0f 84 82 fe ff
	ff		 je	 $LL6@Partition_

; 105  :     _Left    = _STD move(_Right);

  002ae	8b 07		 mov	 eax, DWORD PTR [edi]
  002b0	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  002b4	89 06		 mov	 DWORD PTR [esi], eax
  002b6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]

; 106  :     _Right   = _STD move(_Tmp);

  002b9	f3 0f 11 07	 movss	 DWORD PTR [edi], xmm0

; 104  :     _Ty _Tmp = _STD move(_Left);

  002bd	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]

; 105  :     _Left    = _STD move(_Right);

  002c0	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 106  :     _Right   = _STD move(_Tmp);

  002c3	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7529 :         } else {

  002c6	8b 4d 14	 mov	 ecx, DWORD PTR __Glast$1$[ebp]
  002c9	e9 58 fe ff ff	 jmp	 $LN271@Partition_
$LN30@Partition_:

; 7530 :             _STD iter_swap(_Gfirst, --_Glast);

  002ce	89 4d 14	 mov	 DWORD PTR __Glast$1$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 320  :         if (this != _STD addressof(_Right)) {

  002d1	3b d1		 cmp	 edx, ecx
  002d3	74 23		 je	 SHORT $LN200@Partition_

; 105  :     _Left    = _STD move(_Right);

  002d5	8b 01		 mov	 eax, DWORD PTR [ecx]
  002d7	8b 5d 14	 mov	 ebx, DWORD PTR __Glast$1$[ebp]

; 104  :     _Ty _Tmp = _STD move(_Left);

  002da	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]

; 105  :     _Left    = _STD move(_Right);

  002de	89 02		 mov	 DWORD PTR [edx], eax

; 106  :     _Right   = _STD move(_Tmp);

  002e0	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 105  :     _Left    = _STD move(_Right);

  002e4	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  002e7	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  002ea	89 42 04	 mov	 DWORD PTR [edx+4], eax
  002ed	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]

; 106  :     _Right   = _STD move(_Tmp);

  002f0	89 4b 04	 mov	 DWORD PTR [ebx+4], ecx
  002f3	8b cb		 mov	 ecx, ebx
  002f5	8b 5d 0c	 mov	 ebx, DWORD PTR __First$[ebp]
$LN200@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7531 :             ++_Gfirst;

  002f8	83 c2 08	 add	 edx, 8

; 7532 :         }
; 7533 :     }

  002fb	e9 30 fe ff ff	 jmp	 $LL6@Partition_
$LN209@Partition_:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00300	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00303	89 78 04	 mov	 DWORD PTR [eax+4], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7511 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  00306	5f		 pop	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00307	89 30		 mov	 DWORD PTR [eax], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7511 :             return pair<_RanIt, _RanIt>(_Pfirst, _Plast);

  00309	5e		 pop	 esi
  0030a	5b		 pop	 ebx

; 7534 : }

  0030b	8b e5		 mov	 esp, ebp
  0030d	5d		 pop	 ebp
  0030e	c3		 ret	 0
??$_Partition_by_median_guess_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MH@std@@PAU12@@0@PAU?$pair@MH@0@0U?$less@X@0@@Z ENDP ; std::_Partition_by_median_guess_unchecked<std::pair<float,int> *,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAUSGroundItemInstance@CPythonItem@@PAPAU12@@std@@YAPAPAUSGroundItemInstance@CPythonItem@@PAPAU12@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAUSGroundItemInstance@CPythonItem@@PAPAU12@@std@@YAPAPAUSGroundItemInstance@CPythonItem@@PAPAU12@00@Z PROC ; std::_Copy_memmove<CPythonItem::SGroundItemInstance * *,CPythonItem::SGroundItemInstance * *>, COMDAT

; 4360 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 4361 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));
; 4362 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));
; 4363 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));
; 4364 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00003	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00006	56		 push	 esi

; 4365 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00007	8b 75 10	 mov	 esi, DWORD PTR __Dest$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000e	2b f8		 sub	 edi, eax
  00010	57		 push	 edi
  00011	50		 push	 eax
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _memmove
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4366 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0001b	8d 04 37	 lea	 eax, DWORD PTR [edi+esi]
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 4367 : }

  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
??$_Copy_memmove@PAPAUSGroundItemInstance@CPythonItem@@PAPAU12@@std@@YAPAPAUSGroundItemInstance@CPythonItem@@PAPAU12@00@Z ENDP ; std::_Copy_memmove<CPythonItem::SGroundItemInstance * *,CPythonItem::SGroundItemInstance * *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> *>, COMDAT

; 271  : #if _HAS_IF_CONSTEXPR
; 272  :     if constexpr (is_array_v<_Ty>) {
; 273  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 274  :     } else
; 275  : #endif // _HAS_IF_CONSTEXPR
; 276  :     {
; 277  :         _Obj.~_Ty();
; 278  :     }
; 279  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> > >, COMDAT
; _this$ = ecx

; 1057 :         if (_Ptr) {

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	74 0b		 je	 SHORT $LN2@Alloc_cons

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6a 18		 push	 24			; 00000018H
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0000f	83 c4 08	 add	 esp, 8
$LN2@Alloc_cons:

; 1058 :             _Al.deallocate(_Ptr, 1);
; 1059 :         }
; 1060 :     }

  00012	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
;	COMDAT ??$_Sort_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@0HU?$less@X@0@@Z
_TEXT	SEGMENT
__Val$1 = -24						; size = 8
__Val$2 = -24						; size = 8
__Val$3 = -16						; size = 8
__Mid$4 = -16						; size = 8
tv1142 = -12						; size = 4
__Max_sequence_non_leaf$1$ = -8				; size = 4
__Bottom$1$ = -4					; size = 4
__Val$1$ = 8						; size = 4
__First$ = 8						; size = 4
tv1134 = 12						; size = 4
__Last$ = 12						; size = 4
__Ideal$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$_Sort_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@0HU?$less@X@0@@Z PROC ; std::_Sort_unchecked<std::pair<float,int> *,std::less<void> >, COMDAT

; 7537 : _CONSTEXPR20 void _Sort_unchecked(_RanIt _First, _RanIt _Last, _Iter_diff_t<_RanIt> _Ideal, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	53		 push	 ebx

; 7538 :     // order [_First, _Last)
; 7539 :     for (;;) {
; 7540 :         if (_Last - _First <= _ISORT_MAX) { // small

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0000a	8b c3		 mov	 eax, ebx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  00011	2b c7		 sub	 eax, edi
  00013	83 e0 f8	 and	 eax, -8			; fffffff8H
  00016	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  0001b	7e 70		 jle	 SHORT $LN106@Sort_unche
  0001d	8b 75 10	 mov	 esi, DWORD PTR __Ideal$[ebp]
$LL2@Sort_unche:

; 7541 :             _Insertion_sort_unchecked(_First, _Last, _Pred);
; 7542 :             return;
; 7543 :         }
; 7544 : 
; 7545 :         if (_Ideal <= 0) { // heap sort if too many divisions

  00020	85 f6		 test	 esi, esi
  00022	0f 8e d5 00 00
	00		 jle	 $LN107@Sort_unche

; 7548 :             return;
; 7549 :         }
; 7550 : 
; 7551 :         // divide and conquer by quicksort
; 7552 :         auto _Mid = _Partition_by_median_guess_unchecked(_First, _Last, _Pred);

  00028	ff 75 14	 push	 DWORD PTR __Pred$[ebp]
  0002b	8d 45 f0	 lea	 eax, DWORD PTR __Mid$4[ebp]
  0002e	53		 push	 ebx
  0002f	57		 push	 edi
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??$_Partition_by_median_guess_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YA?AU?$pair@PAU?$pair@MH@std@@PAU12@@0@PAU?$pair@MH@0@0U?$less@X@0@@Z ; std::_Partition_by_median_guess_unchecked<std::pair<float,int> *,std::less<void> >

; 7553 : 
; 7554 :         _Ideal = (_Ideal >> 1) + (_Ideal >> 2); // allow 1.5 log2(N) divisions
; 7555 : 
; 7556 :         if (_Mid.first - _First < _Last - _Mid.second) { // loop on second half

  00036	8b 55 f0	 mov	 edx, DWORD PTR __Mid$4[ebp]
  00039	8b c6		 mov	 eax, esi
  0003b	c1 f8 02	 sar	 eax, 2
  0003e	8b cb		 mov	 ecx, ebx
  00040	8b 5d f4	 mov	 ebx, DWORD PTR __Mid$4[ebp+4]
  00043	83 c4 10	 add	 esp, 16			; 00000010H
  00046	d1 fe		 sar	 esi, 1
  00048	2b cb		 sub	 ecx, ebx
  0004a	03 f0		 add	 esi, eax
  0004c	83 e1 f8	 and	 ecx, -8			; fffffff8H
  0004f	8b c2		 mov	 eax, edx
  00051	2b c7		 sub	 eax, edi
  00053	83 e0 f8	 and	 eax, -8			; fffffff8H
  00056	3b c1		 cmp	 eax, ecx
  00058	8b 45 14	 mov	 eax, DWORD PTR __Pred$[ebp]
  0005b	50		 push	 eax
  0005c	56		 push	 esi
  0005d	7d 0e		 jge	 SHORT $LN7@Sort_unche

; 7557 :             _Sort_unchecked(_First, _Mid.first, _Ideal, _Pred);

  0005f	52		 push	 edx
  00060	57		 push	 edi
  00061	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@0HU?$less@X@0@@Z ; std::_Sort_unchecked<std::pair<float,int> *,std::less<void> >

; 7558 :             _First = _Mid.second;

  00066	8b fb		 mov	 edi, ebx

; 7559 :         } else { // loop on first half

  00068	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0006b	eb 0f		 jmp	 SHORT $LN144@Sort_unche
$LN7@Sort_unche:

; 7560 :             _Sort_unchecked(_Mid.second, _Last, _Ideal, _Pred);

  0006d	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  00070	53		 push	 ebx
  00071	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@0HU?$less@X@0@@Z ; std::_Sort_unchecked<std::pair<float,int> *,std::less<void> >

; 7561 :             _Last = _Mid.first;

  00076	8b 5d f0	 mov	 ebx, DWORD PTR __Mid$4[ebp]
  00079	89 5d 0c	 mov	 DWORD PTR __Last$[ebp], ebx
$LN144@Sort_unche:

; 7538 :     // order [_First, _Last)
; 7539 :     for (;;) {
; 7540 :         if (_Last - _First <= _ISORT_MAX) { // small

  0007c	8b c3		 mov	 eax, ebx
  0007e	83 c4 10	 add	 esp, 16			; 00000010H
  00081	2b c7		 sub	 eax, edi
  00083	83 e0 f8	 and	 eax, -8			; fffffff8H
  00086	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  0008b	7f 93		 jg	 SHORT $LL2@Sort_unche
$LN106@Sort_unche:

; 7412 :     if (_First != _Last) {

  0008d	3b fb		 cmp	 edi, ebx
  0008f	0f 84 f9 01 00
	00		 je	 $LN87@Sort_unche

; 7413 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  00095	8d 77 08	 lea	 esi, DWORD PTR [edi+8]
  00098	3b f3		 cmp	 esi, ebx
  0009a	0f 84 ee 01 00
	00		 je	 $LN87@Sort_unche
$LL11@Sort_unche:

; 7415 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Mid);

  000a0	8b 06		 mov	 eax, DWORD PTR [esi]
  000a2	8b d6		 mov	 edx, esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000a4	f3 0f 10 07	 movss	 xmm0, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7415 :             _Iter_value_t<_BidIt> _Val = _STD move(*_Mid);

  000a8	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  000ab	89 45 e8	 mov	 DWORD PTR __Val$2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000ae	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR __Val$2[ebp]
  000b3	0f 2f c1	 comiss	 xmm0, xmm1
  000b6	0f 87 a3 01 00
	00		 ja	 $LN122@Sort_unche
  000bc	0f 2f c8	 comiss	 xmm1, xmm0
  000bf	77 09		 ja	 SHORT $LN18@Sort_unche
  000c1	3b 5f 04	 cmp	 ebx, DWORD PTR [edi+4]
  000c4	0f 8c 95 01 00
	00		 jl	 $LN122@Sort_unche
$LN18@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7421 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  000ca	8b ce		 mov	 ecx, esi
  000cc	0f 1f 40 00	 npad	 4
$LL16@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000d0	f3 0f 10 41 f8	 movss	 xmm0, DWORD PTR [ecx-8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7421 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  000d5	83 e9 08	 sub	 ecx, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  000d8	0f 2f c1	 comiss	 xmm0, xmm1
  000db	77 12		 ja	 SHORT $LN140@Sort_unche
  000dd	0f 2f c8	 comiss	 xmm1, xmm0
  000e0	0f 87 70 01 00
	00		 ja	 $LN139@Sort_unche
  000e6	3b 59 04	 cmp	 ebx, DWORD PTR [ecx+4]
  000e9	0f 8d 67 01 00
	00		 jge	 $LN139@Sort_unche
$LN140@Sort_unche:

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  000ef	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 291  :         second = _STD forward<_Ty2>(_Right.second);

  000f3	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000f6	89 42 04	 mov	 DWORD PTR [edx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7421 :                 for (_BidIt _Prev = _Hole; _DEBUG_LT_PRED(_Pred, _Val, *--_Prev); _Hole = _Prev) {

  000f9	8b d1		 mov	 edx, ecx
  000fb	eb d3		 jmp	 SHORT $LL16@Sort_unche
$LN107@Sort_unche:

; 6360 :     _Diff _Bottom = _Last - _First;

  000fd	8b cb		 mov	 ecx, ebx
  000ff	2b cf		 sub	 ecx, edi
  00101	8b c1		 mov	 eax, ecx
  00103	89 4d f4	 mov	 DWORD PTR tv1142[ebp], ecx
  00106	c1 f8 03	 sar	 eax, 3

; 6361 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  00109	8b f0		 mov	 esi, eax
  0010b	89 45 fc	 mov	 DWORD PTR __Bottom$1$[ebp], eax
  0010e	d1 fe		 sar	 esi, 1
  00110	85 f6		 test	 esi, esi
  00112	0f 8e e5 00 00
	00		 jle	 $LN49@Sort_unche
  00118	8d 58 ff	 lea	 ebx, DWORD PTR [eax-1]
  0011b	d1 fb		 sar	 ebx, 1
  0011d	89 5d f8	 mov	 DWORD PTR __Max_sequence_non_leaf$1$[ebp], ebx
$LL48@Sort_unche:

; 6362 :         // reheap top half, bottom to top
; 6363 :         --_Hole;
; 6364 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  00120	8b 4c f7 fc	 mov	 ecx, DWORD PTR [edi+esi*8-4]
  00124	4e		 dec	 esi
  00125	89 4d 08	 mov	 DWORD PTR __Val$1$[ebp], ecx

; 6365 :         _Pop_heap_hole_by_index(_First, _Hole, _Bottom, _STD move(_Val), _Pred);

  00128	8b d6		 mov	 edx, esi

; 6192 :     _Diff _Idx       = _Hole;

  0012a	8b ce		 mov	 ecx, esi

; 6364 :         _Iter_value_t<_RanIt> _Val = _STD move(*(_First + _Hole));

  0012c	8b 04 f7	 mov	 eax, DWORD PTR [edi+esi*8]
  0012f	89 45 e8	 mov	 DWORD PTR __Val$1[ebp], eax

; 6197 :     while (_Idx < _Max_sequence_non_leaf) { // move _Hole down to larger child

  00132	3b f3		 cmp	 esi, ebx
  00134	7d 4e		 jge	 SHORT $LN54@Sort_unche
  00136	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL53@Sort_unche:

; 6198 :         _Idx = 2 * _Idx + 2;

  00140	03 c9		 add	 ecx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  00142	f3 0f 10 4c cf
	10		 movss	 xmm1, DWORD PTR [edi+ecx*8+16]
  00148	f3 0f 10 44 cf
	08		 movss	 xmm0, DWORD PTR [edi+ecx*8+8]
  0014e	0f 2f c1	 comiss	 xmm0, xmm1
  00151	77 16		 ja	 SHORT $LN125@Sort_unche
  00153	0f 2f c8	 comiss	 xmm1, xmm0
  00156	77 0a		 ja	 SHORT $LN62@Sort_unche
  00158	8b 44 cf 14	 mov	 eax, DWORD PTR [edi+ecx*8+20]
  0015c	3b 44 cf 0c	 cmp	 eax, DWORD PTR [edi+ecx*8+12]
  00160	7c 07		 jl	 SHORT $LN125@Sort_unche
$LN62@Sort_unche:
  00162	b8 02 00 00 00	 mov	 eax, 2
  00167	eb 05		 jmp	 SHORT $LN64@Sort_unche
$LN125@Sort_unche:
  00169	b8 01 00 00 00	 mov	 eax, 1
$LN64@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6202 :         *(_First + _Hole) = _STD move(*(_First + _Idx));

  0016e	03 c8		 add	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  00170	8b 04 cf	 mov	 eax, DWORD PTR [edi+ecx*8]
  00173	89 04 d7	 mov	 DWORD PTR [edi+edx*8], eax

; 291  :         second = _STD forward<_Ty2>(_Right.second);

  00176	8b 44 cf 04	 mov	 eax, DWORD PTR [edi+ecx*8+4]
  0017a	89 44 d7 04	 mov	 DWORD PTR [edi+edx*8+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6203 :         _Hole             = _Idx;

  0017e	8b d1		 mov	 edx, ecx
  00180	3b cb		 cmp	 ecx, ebx
  00182	7c bc		 jl	 SHORT $LL53@Sort_unche
$LN54@Sort_unche:

; 6204 :     }
; 6205 : 
; 6206 :     if (_Idx == _Max_sequence_non_leaf && _Bottom % 2 == 0) { // only child at bottom, move _Hole down to it

  00184	3b d3		 cmp	 edx, ebx
  00186	75 1a		 jne	 SHORT $LN56@Sort_unche
  00188	8b 4d fc	 mov	 ecx, DWORD PTR __Bottom$1$[ebp]
  0018b	f6 c1 01	 test	 cl, 1
  0018e	75 12		 jne	 SHORT $LN56@Sort_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  00190	8b 44 cf f8	 mov	 eax, DWORD PTR [edi+ecx*8-8]
  00194	89 04 d7	 mov	 DWORD PTR [edi+edx*8], eax

; 291  :         second = _STD forward<_Ty2>(_Right.second);

  00197	8b 44 cf fc	 mov	 eax, DWORD PTR [edi+ecx*8-4]
  0019b	89 44 d7 04	 mov	 DWORD PTR [edi+edx*8+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6208 :         _Hole             = _Bottom - 1;

  0019f	8d 51 ff	 lea	 edx, DWORD PTR [ecx-1]
$LN56@Sort_unche:

; 6077 :          _Top < _Hole && _DEBUG_LT_PRED(_Pred, *(_First + _Idx), _Val); //

  001a2	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR __Val$1[ebp]
  001a7	3b f2		 cmp	 esi, edx
  001a9	7d 35		 jge	 SHORT $LN127@Sort_unche
  001ab	8b 5d 08	 mov	 ebx, DWORD PTR __Val$1$[ebp]
  001ae	66 90		 npad	 2
$LL72@Sort_unche:

; 6076 :     for (_Diff _Idx = (_Hole - 1) >> 1; // shift for codegen

  001b0	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]
  001b3	d1 f9		 sar	 ecx, 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 352  :     return _Left.first < _Right.first || (!(_Right.first < _Left.first) && _Left.second < _Right.second);

  001b5	f3 0f 10 04 cf	 movss	 xmm0, DWORD PTR [edi+ecx*8]
  001ba	0f 2f c8	 comiss	 xmm1, xmm0
  001bd	77 0b		 ja	 SHORT $LN141@Sort_unche
  001bf	0f 2f c1	 comiss	 xmm0, xmm1
  001c2	77 19		 ja	 SHORT $LN143@Sort_unche
  001c4	39 5c cf 04	 cmp	 DWORD PTR [edi+ecx*8+4], ebx
  001c8	7d 13		 jge	 SHORT $LN143@Sort_unche
$LN141@Sort_unche:

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  001ca	f3 0f 11 04 d7	 movss	 DWORD PTR [edi+edx*8], xmm0

; 291  :         second = _STD forward<_Ty2>(_Right.second);

  001cf	8b 44 cf 04	 mov	 eax, DWORD PTR [edi+ecx*8+4]
  001d3	89 44 d7 04	 mov	 DWORD PTR [edi+edx*8+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6081 :         _Hole             = _Idx;

  001d7	8b d1		 mov	 edx, ecx
  001d9	3b f1		 cmp	 esi, ecx
  001db	7c d3		 jl	 SHORT $LL72@Sort_unche
$LN143@Sort_unche:
  001dd	8b 5d f8	 mov	 ebx, DWORD PTR __Max_sequence_non_leaf$1$[ebp]
$LN127@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 291  :         second = _STD forward<_Ty2>(_Right.second);

  001e0	8b 45 08	 mov	 eax, DWORD PTR __Val$1$[ebp]
  001e3	f3 0f 11 0c d7	 movss	 DWORD PTR [edi+edx*8], xmm1
  001e8	89 44 d7 04	 mov	 DWORD PTR [edi+edx*8+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6361 :     for (_Diff _Hole = _Bottom >> 1; _Hole > 0;) { // shift for codegen

  001ec	85 f6		 test	 esi, esi
  001ee	0f 8f 2c ff ff
	ff		 jg	 $LL48@Sort_unche
  001f4	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  001f7	8b 45 fc	 mov	 eax, DWORD PTR __Bottom$1$[ebp]
  001fa	8b 4d f4	 mov	 ecx, DWORD PTR tv1142[ebp]
$LN49@Sort_unche:

; 6592 :     for (; _Last - _First >= 2; --_Last) {

  001fd	83 f8 02	 cmp	 eax, 2
  00200	0f 8c 88 00 00
	00		 jl	 $LN87@Sort_unche

; 7546 :             _Make_heap_unchecked(_First, _Last, _Pred);
; 7547 :             _Sort_heap_unchecked(_First, _Last, _Pred);

  00206	8d 51 f8	 lea	 edx, DWORD PTR [ecx-8]
  00209	83 c3 f8	 add	 ebx, -8			; fffffff8H
  0020c	89 55 0c	 mov	 DWORD PTR tv1134[ebp], edx
  0020f	90		 npad	 1
$LL88@Sort_unche:

; 6230 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  00210	8b 03		 mov	 eax, DWORD PTR [ebx]

; 6221 :     _Pop_heap_hole_by_index(

  00212	8b f2		 mov	 esi, edx

; 6230 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  00214	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]

; 6221 :     _Pop_heap_hole_by_index(

  00217	ff 75 14	 push	 DWORD PTR __Pred$[ebp]

; 6230 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  0021a	89 45 f0	 mov	 DWORD PTR __Val$3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  0021d	8b 07		 mov	 eax, DWORD PTR [edi]
  0021f	89 03		 mov	 DWORD PTR [ebx], eax

; 291  :         second = _STD forward<_Ty2>(_Right.second);

  00221	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00224	89 44 17 04	 mov	 DWORD PTR [edi+edx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6221 :     _Pop_heap_hole_by_index(

  00228	8d 45 f0	 lea	 eax, DWORD PTR __Val$3[ebp]
  0022b	50		 push	 eax
  0022c	c1 fe 03	 sar	 esi, 3
  0022f	56		 push	 esi
  00230	6a 00		 push	 0
  00232	57		 push	 edi

; 6230 :         _Iter_value_t<_RanIt> _Val = _STD move(*_Last);

  00233	89 4d f4	 mov	 DWORD PTR __Val$3[ebp+4], ecx

; 6221 :     _Pop_heap_hole_by_index(

  00236	e8 00 00 00 00	 call	 ??$_Pop_heap_hole_by_index@PAU?$pair@MH@std@@U12@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@HH$$QAU10@U?$less@X@0@@Z ; std::_Pop_heap_hole_by_index<std::pair<float,int> *,std::pair<float,int>,std::less<void> >

; 6592 :     for (; _Last - _First >= 2; --_Last) {

  0023b	8b 55 0c	 mov	 edx, DWORD PTR tv1134[ebp]
  0023e	8d 5b f8	 lea	 ebx, DWORD PTR [ebx-8]
  00241	83 ea 08	 sub	 edx, 8

; 6221 :     _Pop_heap_hole_by_index(

  00244	83 c4 14	 add	 esp, 20			; 00000014H

; 6592 :     for (; _Last - _First >= 2; --_Last) {

  00247	89 55 0c	 mov	 DWORD PTR tv1134[ebp], edx
  0024a	83 fe 02	 cmp	 esi, 2
  0024d	7d c1		 jge	 SHORT $LL88@Sort_unche

; 7562 :         }
; 7563 :     }
; 7564 : }

  0024f	5f		 pop	 edi
  00250	5e		 pop	 esi
  00251	5b		 pop	 ebx
  00252	8b e5		 mov	 esp, ebp
  00254	5d		 pop	 ebp
  00255	c3		 ret	 0
$LN139@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  00256	f3 0f 11 0a	 movss	 DWORD PTR [edx], xmm1

; 291  :         second = _STD forward<_Ty2>(_Right.second);

  0025a	89 5a 04	 mov	 DWORD PTR [edx+4], ebx
  0025d	eb 23		 jmp	 SHORT $LN46@Sort_unche
$LN122@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 4700 :     while (_First != _Last) {

  0025f	3b f7		 cmp	 esi, edi
  00261	74 18		 je	 SHORT $LN30@Sort_unche
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7418 :                 _Move_backward_unchecked(_First, _Mid, ++_Hole);

  00263	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
$LL113@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  00266	8b 41 f4	 mov	 eax, DWORD PTR [ecx-12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 4701 :         *--_Dest = _STD move(*--_Last);

  00269	8d 49 f8	 lea	 ecx, DWORD PTR [ecx-8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  0026c	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 291  :         second = _STD forward<_Ty2>(_Right.second);

  0026f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00271	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 4700 :     while (_First != _Last) {

  00274	8d 41 fc	 lea	 eax, DWORD PTR [ecx-4]
  00277	3b c7		 cmp	 eax, edi
  00279	75 eb		 jne	 SHORT $LL113@Sort_unche
$LN30@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 290  :         first  = _STD forward<_Ty1>(_Right.first);

  0027b	f3 0f 11 0f	 movss	 DWORD PTR [edi], xmm1

; 291  :         second = _STD forward<_Ty2>(_Right.second);

  0027f	89 5f 04	 mov	 DWORD PTR [edi+4], ebx
$LN46@Sort_unche:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7413 :         for (_BidIt _Mid = _First; ++_Mid != _Last;) { // order next element

  00282	83 c6 08	 add	 esi, 8
  00285	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00288	0f 85 12 fe ff
	ff		 jne	 $LL11@Sort_unche
$LN87@Sort_unche:
  0028e	5f		 pop	 edi

; 7562 :         }
; 7563 :     }
; 7564 : }

  0028f	5e		 pop	 esi
  00290	5b		 pop	 ebx
  00291	8b e5		 mov	 esp, ebp
  00293	5d		 pop	 ebp
  00294	c3		 ret	 0
??$_Sort_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@0HU?$less@X@0@@Z ENDP ; std::_Sort_unchecked<std::pair<float,int> *,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAPAUSGroundItemInstance@CPythonItem@@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@YAPAPAUSGroundItemInstance@CPythonItem@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSGroundItemInstance@CPythonItem@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAPAUSGroundItemInstance@CPythonItem@@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@YAPAPAUSGroundItemInstance@CPythonItem@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSGroundItemInstance@CPythonItem@@@0@@Z PROC ; std::_Uninitialized_move<CPythonItem::SGroundItemInstance * *,std::allocator<CPythonItem::SGroundItemInstance *> >, COMDAT

; 1685 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 1686 :     // move [_First, _Last) to raw _Dest, using _Al
; 1687 :     // note: only called internally from elsewhere in the STL
; 1688 :     using _Ptrval     = typename _Alloc::value_type*;
; 1689 :     auto _UFirst      = _Get_unwrapped(_First);
; 1690 :     const auto _ULast = _Get_unwrapped(_Last);
; 1691 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1692 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1693 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00004	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	53		 push	 ebx
  0000c	57		 push	 edi
  0000d	ff 75 08	 push	 DWORD PTR __First$[ebp]
  00010	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAPAUSGroundItemInstance@CPythonItem@@PAPAU12@@std@@YAPAPAUSGroundItemInstance@CPythonItem@@PAPAU12@00@Z ; std::_Copy_memmove<CPythonItem::SGroundItemInstance * *,CPythonItem::SGroundItemInstance * *>

; 1694 :         return _Dest + (_ULast - _UFirst);

  00015	2b 7d 08	 sub	 edi, DWORD PTR __First$[ebp]
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	c1 ff 02	 sar	 edi, 2
  0001e	8d 04 bb	 lea	 eax, DWORD PTR [ebx+edi*4]
  00021	5f		 pop	 edi
  00022	5b		 pop	 ebx

; 1695 :     } else {
; 1696 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1697 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1698 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1699 :         }
; 1700 : 
; 1701 :         return _Backout._Release();
; 1702 :     }
; 1703 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Uninitialized_move@PAPAUSGroundItemInstance@CPythonItem@@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@YAPAPAUSGroundItemInstance@CPythonItem@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSGroundItemInstance@CPythonItem@@@0@@Z ENDP ; std::_Uninitialized_move<CPythonItem::SGroundItemInstance * *,std::allocator<CPythonItem::SGroundItemInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> >,0> >::_Find_lower_bound<unsigned long>, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00003	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00005	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  00008	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000b	89 02		 mov	 DWORD PTR [edx], eax
  0000d	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
  00014	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  00017	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0001b	75 28		 jne	 SHORT $LN12@Find_lower
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  0001d	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00020	56		 push	 esi
  00021	8b 31		 mov	 esi, DWORD PTR [ecx]
$LL2@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1704 :             _Result._Location._Parent = _Trynode;

  00023	89 02		 mov	 DWORD PTR [edx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  00025	39 70 10	 cmp	 DWORD PTR [eax+16], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  00028	73 07		 jae	 SHORT $LN4@Find_lower

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;
; 1707 :                 _Trynode                 = _Trynode->_Right;

  0002a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0002d	33 c9		 xor	 ecx, ecx

; 1708 :             } else {

  0002f	eb 0a		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;
; 1710 :                 _Result._Bound           = _Trynode;

  00031	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 1711 :                 _Trynode                 = _Trynode->_Left;

  00034	b9 01 00 00 00	 mov	 ecx, 1
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$LN5@Find_lower:

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;
; 1703 :         while (!_Trynode->_Isnil) {

  0003b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0003e	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00042	74 df		 je	 SHORT $LL2@Find_lower

; 1712 :             }
; 1713 :         }
; 1714 : 
; 1715 :         return _Result;

  00044	5e		 pop	 esi
$LN12@Find_lower:

; 1716 :     }

  00045	8b c2		 mov	 eax, edx
  00047	5d		 pop	 ebp
  00048	c2 08 00	 ret	 8
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> >,0> >::_Find_lower_bound<unsigned long>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCRotationDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CRotationDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCGravityDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CGravityDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CAirResistanceDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCNullDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CNullDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A ; CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool
  00005	e9 00 00 00 00	 jmp	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$yd	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ PROC ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool'', COMDAT

; 272  : template <class T> CDynamicPoolEx<T> CPooledObject<T>::ms_kPool;

  00000	68 00 00 00 00	 push	 OFFSET ??__F?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ; `dynamic atexit destructor for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__E?ms_kPool@?$CPooledObject@VCHeaderDecorator@NEffectUpdateDecorator@@@@1V?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPooledObject<NEffectUpdateDecorator::CHeaderDecorator>::ms_kPool''
text$di	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >, COMDAT

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {
; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCRotationDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCRotationDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CRotationDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >, COMDAT

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {
; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCGravityDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCGravityDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CGravityDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >, COMDAT

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {
; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCAirResistanceDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCAirResistanceDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CAirResistanceDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >, COMDAT

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {
; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationRandomDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >, COMDAT

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {
; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >, COMDAT

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {
; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CTextureAnimationCWDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >, COMDAT

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {
; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCNullDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCNullDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CNullDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z PROC ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >, COMDAT

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {
; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@std@@@std@@YAXPAPAVCHeaderDecorator@NEffectUpdateDecorator@@QAPAV12@AAV?$allocator@PAVCHeaderDecorator@NEffectUpdateDecorator@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<NEffectUpdateDecorator::CHeaderDecorator *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@YAXPAPAUSGroundItemInstance@CPythonItem@@QAPAU12@AAV?$allocator@PAUSGroundItemInstance@CPythonItem@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@YAXPAPAUSGroundItemInstance@CPythonItem@@QAPAU12@AAV?$allocator@PAUSGroundItemInstance@CPythonItem@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CPythonItem::SGroundItemInstance *> >, COMDAT

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {
; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@YAXPAPAUSGroundItemInstance@CPythonItem@@QAPAU12@AAV?$allocator@PAUSGroundItemInstance@CPythonItem@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CPythonItem::SGroundItemInstance *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVCItemData@@@std@@@std@@YAXPAPAVCItemData@@QAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVCItemData@@@std@@@std@@YAXPAPAVCItemData@@QAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CItemData *> >, COMDAT

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {
; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_range@V?$allocator@PAVCItemData@@@std@@@std@@YAXPAPAVCItemData@@QAPAV1@AAV?$allocator@PAVCItemData@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CItemData *> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z PROC ; std::_Pocca<std::allocator<char> >, COMDAT

; 886  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_copy_assignment::value) {
; 887  :         _Left = _Right;
; 888  :     }
; 889  : }

  00000	c2 00 00	 ret	 0
??$_Pocca@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@ABV10@@Z ENDP ; std::_Pocca<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??$_Emplace_reallocate@ABQAUSGroundItemInstance@CPythonItem@@@?$vector@PAUSGroundItemInstance@CPythonItem@@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@QAEPAPAUSGroundItemInstance@CPythonItem@@QAPAU23@ABQAU23@@Z
_TEXT	SEGMENT
tv435 = -12						; size = 4
__Newsize$1$ = -8					; size = 4
tv434 = -4						; size = 4
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@ABQAUSGroundItemInstance@CPythonItem@@@?$vector@PAUSGroundItemInstance@CPythonItem@@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@QAEPAPAUSGroundItemInstance@CPythonItem@@QAPAU23@ABQAU23@@Z PROC ; std::vector<CPythonItem::SGroundItemInstance *,std::allocator<CPythonItem::SGroundItemInstance *> >::_Emplace_reallocate<CPythonItem::SGroundItemInstance * const &>, COMDAT
; _this$ = ecx

; 725  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx

; 726  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 727  :         _Alty& _Al        = _Getal();
; 728  :         auto& _My_data    = _Mypair._Myval2;
; 729  :         pointer& _Myfirst = _My_data._Myfirst;
; 730  :         pointer& _Mylast  = _My_data._Mylast;
; 731  : 
; 732  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 733  : 
; 734  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx
  0000d	57		 push	 edi
  0000e	8b 16		 mov	 edx, DWORD PTR [esi]
  00010	2b da		 sub	 ebx, edx

; 735  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00012	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00015	2b c2		 sub	 eax, edx
  00017	c1 fb 02	 sar	 ebx, 2
  0001a	c1 f8 02	 sar	 eax, 2

; 736  : 
; 737  :         if (_Oldsize == max_size()) {

  0001d	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00022	0f 84 c4 00 00
	00		 je	 $LN39@Emplace_re

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00028	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  0002b	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0002e	2b ca		 sub	 ecx, edx

; 739  :         }
; 740  : 
; 741  :         const size_type _Newsize     = _Oldsize + 1;

  00030	89 7d f8	 mov	 DWORD PTR __Newsize$1$[ebp], edi

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00033	c1 f9 02	 sar	 ecx, 2

; 1620 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00036	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH
  0003b	8b d1		 mov	 edx, ecx
  0003d	d1 ea		 shr	 edx, 1
  0003f	2b c2		 sub	 eax, edx
  00041	3b c8		 cmp	 ecx, eax
  00043	76 3a		 jbe	 SHORT $LN12@Emplace_re

; 1621 :             return _Max; // geometric growth would overflow

  00045	b9 ff ff ff 3f	 mov	 ecx, 1073741823		; 3fffffffH
$LN20@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 65   :     return _Count * _Ty_size;

  0004a	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00051	50		 push	 eax

; 65   :     return _Count * _Ty_size;

  00052	89 45 f4	 mov	 DWORD PTR tv435[ebp], eax

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00055	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0005a	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005d	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 749  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  0005f	8d 04 9f	 lea	 eax, DWORD PTR [edi+ebx*4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00062	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 752  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00065	8b 5d 08	 mov	 ebx, DWORD PTR __Whereptr$[ebp]
  00068	89 45 fc	 mov	 DWORD PTR tv434[ebp], eax
  0006b	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0006d	89 08		 mov	 DWORD PTR [eax], ecx
  0006f	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00072	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00074	3b da		 cmp	 ebx, edx
  00076	75 1b		 jne	 SHORT $LN4@Emplace_re

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  00078	8b 5d fc	 mov	 ebx, DWORD PTR tv434[ebp]

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0007b	8b c7		 mov	 eax, edi

; 753  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);
; 754  :         } else { // provide basic guarantee

  0007d	eb 2b		 jmp	 SHORT $LN5@Emplace_re
$LN12@Emplace_re:

; 1624 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0007f	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  00082	8b cf		 mov	 ecx, edi
  00084	3b c7		 cmp	 eax, edi
  00086	0f 43 c8	 cmovae	 ecx, eax
  00089	81 f9 ff ff ff
	3f		 cmp	 ecx, 1073741823		; 3fffffffH
  0008f	77 60		 ja	 SHORT $LN40@Emplace_re
  00091	eb b7		 jmp	 SHORT $LN20@Emplace_re
$LN4@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00093	56		 push	 esi
  00094	57		 push	 edi
  00095	53		 push	 ebx
  00096	51		 push	 ecx
  00097	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSGroundItemInstance@CPythonItem@@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@YAPAPAUSGroundItemInstance@CPythonItem@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSGroundItemInstance@CPythonItem@@@0@@Z ; std::_Uninitialized_move<CPythonItem::SGroundItemInstance * *,std::allocator<CPythonItem::SGroundItemInstance *> >
  0009c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0009f	8b cb		 mov	 ecx, ebx

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a1	8b 5d fc	 mov	 ebx, DWORD PTR tv434[ebp]

; 1592 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  000a4	83 c4 10	 add	 esp, 16			; 00000010H

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000a7	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$LN5@Emplace_re:
  000aa	56		 push	 esi
  000ab	50		 push	 eax
  000ac	52		 push	 edx
  000ad	51		 push	 ecx
  000ae	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAPAUSGroundItemInstance@CPythonItem@@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@YAPAPAUSGroundItemInstance@CPythonItem@@QAPAU12@0PAPAU12@AAV?$allocator@PAUSGroundItemInstance@CPythonItem@@@0@@Z ; std::_Uninitialized_move<CPythonItem::SGroundItemInstance * *,std::allocator<CPythonItem::SGroundItemInstance *> >

; 1676 :         if (_Myfirst) { // destroy and deallocate old array

  000b3	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 755  :             _Umove(_Myfirst, _Whereptr, _Newvec);
; 756  :             _Constructed_first = _Newvec;
; 757  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  000b5	83 c4 10	 add	 esp, 16			; 00000010H

; 1676 :         if (_Myfirst) { // destroy and deallocate old array

  000b8	85 c9		 test	 ecx, ecx
  000ba	74 12		 je	 SHORT $LN33@Emplace_re

; 1677 :             _Destroy(_Myfirst, _Mylast);
; 1678 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000bc	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000bf	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000c1	83 e0 fc	 and	 eax, -4			; fffffffcH
  000c4	50		 push	 eax
  000c5	51		 push	 ecx
  000c6	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000cb	83 c4 08	 add	 esp, 8
$LN33@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1682 :         _Mylast  = _Newvec + _Newsize;

  000ce	8b 45 f8	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  000d1	89 3e		 mov	 DWORD PTR [esi], edi
  000d3	8d 0c 87	 lea	 ecx, DWORD PTR [edi+eax*4]

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000d6	8b c3		 mov	 eax, ebx

; 1682 :         _Mylast  = _Newvec + _Newsize;

  000d8	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 1683 :         _Myend   = _Newvec + _Newcapacity;

  000db	8b 4d f4	 mov	 ecx, DWORD PTR tv435[ebp]
  000de	03 cf		 add	 ecx, edi

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000e0	5f		 pop	 edi

; 1683 :         _Myend   = _Newvec + _Newcapacity;

  000e1	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 758  :         }
; 759  :         _CATCH_ALL
; 760  :         _Destroy(_Constructed_first, _Constructed_last);
; 761  :         _Al.deallocate(_Newvec, _Newcapacity);
; 762  :         _RERAISE;
; 763  :         _CATCH_END
; 764  : 
; 765  :         _Change_array(_Newvec, _Newsize, _Newcapacity);
; 766  :         return _Newvec + _Whereoff;

  000e4	5e		 pop	 esi
  000e5	5b		 pop	 ebx

; 767  :     }

  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c2 08 00	 ret	 8
$LN39@Emplace_re:

; 738  :             _Xlength();

  000ec	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PAUSGroundItemInstance@CPythonItem@@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@CAXXZ ; std::vector<CPythonItem::SGroundItemInstance *,std::allocator<CPythonItem::SGroundItemInstance *> >::_Xlength
$LN40@Emplace_re:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000f1	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN37@Emplace_re:
  000f6	cc		 int	 3
??$_Emplace_reallocate@ABQAUSGroundItemInstance@CPythonItem@@@?$vector@PAUSGroundItemInstance@CPythonItem@@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@QAEPAPAUSGroundItemInstance@CPythonItem@@QAPAU23@ABQAU23@@Z ENDP ; std::vector<CPythonItem::SGroundItemInstance *,std::allocator<CPythonItem::SGroundItemInstance *> >::_Emplace_reallocate<CPythonItem::SGroundItemInstance * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@KAXPAVCHeaderDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1700 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1700 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCHeaderDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CHeaderDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@KAXPAVCNullDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1700 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1700 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCNullDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CNullDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1700 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1700 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1700 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1700 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationCCWDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationCCWDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@KAXPAVCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1700 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1700 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCTextureAnimationRandomDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CTextureAnimationRandomDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@KAXPAVCAirResistanceDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1700 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1700 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCAirResistanceDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CAirResistanceDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@KAXPAVCGravityDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1700 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1700 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCGravityDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CGravityDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAEPAXI@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete, COMDAT

; 224  : 			::operator delete(pkData);

  00000	e9 00 00 00 00	 jmp	 ??3@YAXPAX@Z		; operator delete
?Delete@?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@KAXPAVCRotationDecorator@NEffectUpdateDecorator@@@Z ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ PROC ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>, COMDAT
; _this$ = ecx

; 132  : 		{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx
  00005	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000b	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0000e	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00011	3b f3		 cmp	 esi, ebx
  00013	74 14		 je	 SHORT $LN19@CDynamicPo
$LL20@CDynamicPo:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  00015	ff 36		 push	 DWORD PTR [esi]
  00017	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  0001c	83 c6 04	 add	 esi, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 224  : 			::operator delete(pkData);

  0001f	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00022	3b f3		 cmp	 esi, ebx
  00024	75 ef		 jne	 SHORT $LL20@CDynamicPo
  00026	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
$LN19@CDynamicPo:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 162  : 			m_kVct_pkFree.clear();

  00029	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0002c	89 77 08	 mov	 DWORD PTR [edi+8], esi
  0002f	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00032	85 c9		 test	 ecx, ecx
  00034	74 27		 je	 SHORT $LN27@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00036	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00039	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003b	83 e0 fc	 and	 eax, -4			; fffffffcH
  0003e	50		 push	 eax
  0003f	51		 push	 ecx
  00040	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00045	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0004c	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  0004f	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 1700 :             _Myend   = pointer();

  00056	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN27@CDynamicPo:

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00060	85 c9		 test	 ecx, ecx
  00062	74 27		 je	 SHORT $LN34@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00064	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00067	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00069	83 e0 fc	 and	 eax, -4			; fffffffcH
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00073	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007a	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  0007d	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0

; 1700 :             _Myend   = pointer();

  00084	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
$LN34@CDynamicPo:
  0008b	5f		 pop	 edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 142  : 		}

  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	c3		 ret	 0
??1?$CDynamicPoolEx@VCRotationDecorator@NEffectUpdateDecorator@@@@UAE@XZ ENDP ; CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>::~CDynamicPoolEx<NEffectUpdateDecorator::CRotationDecorator>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00005	8b 75 0c	 mov	 esi, DWORD PTR __Rootnode$[ebp]
  00008	8b d9		 mov	 ebx, ecx
  0000a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000e	75 25		 jne	 SHORT $LN3@Erase_tree
  00010	57		 push	 edi
  00011	8b 7d 08	 mov	 edi, DWORD PTR __Al$[ebp]
$LL2@Erase_tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	8b cb		 mov	 ecx, ebx
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 598  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001f	8b c6		 mov	 eax, esi

; 599  :     _Val         = static_cast<_Other&&>(_New_val);

  00021	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00023	6a 18		 push	 24			; 00000018H
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0002b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002e	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00032	74 e0		 je	 SHORT $LL2@Erase_tree
  00034	5f		 pop	 edi
$LN3@Erase_tree:
  00035	5e		 pop	 esi

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));
; 746  :         }
; 747  :     }

  00036	5b		 pop	 ebx
  00037	5d		 pop	 ebp
  00038	c2 08 00	 ret	 8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 51   :     _Tree_unchecked_const_iterator& operator++() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 52   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  00004	8b 16		 mov	 edx, DWORD PTR [esi]
  00006	8b 7a 08	 mov	 edi, DWORD PTR [edx+8]
  00009	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0000d	74 22		 je	 SHORT $LN4@operator

; 53   :             _Nodeptr _Pnode;
; 54   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  0000f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00012	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00016	75 12		 jne	 SHORT $LN19@operator
$LL2@operator:
  00018	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  0001b	75 0d		 jne	 SHORT $LN19@operator

; 55   :                 _Ptr = _Pnode; // ==> parent while right subtree

  0001d	89 06		 mov	 DWORD PTR [esi], eax
  0001f	8b d0		 mov	 edx, eax
  00021	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00024	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00028	74 ee		 je	 SHORT $LL2@operator
$LN19@operator:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())
; 59   :         } else {
; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree
; 61   :         }
; 62   : 
; 63   :         return *this;

  0002a	89 06		 mov	 DWORD PTR [esi], eax

; 64   :     }

  0002c	8b c6		 mov	 eax, esi
  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	c3		 ret	 0
$LN4@operator:

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00031	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00033	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00037	75 13		 jne	 SHORT $LN9@operator
  00039	0f 1f 80 00 00
	00 00		 npad	 7
$LL8@operator:
  00040	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  00042	8b f9		 mov	 edi, ecx
  00044	8b c8		 mov	 ecx, eax
  00046	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0004a	74 f4		 je	 SHORT $LL8@operator
$LN9@operator:

; 56   :             }
; 57   : 
; 58   :             _Ptr = _Pnode; // ==> parent (head if end())
; 59   :         } else {
; 60   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree
; 61   :         }
; 62   : 
; 63   :         return *this;

  0004c	89 3e		 mov	 DWORD PTR [esi], edi

; 64   :     }

  0004e	8b c6		 mov	 eax, esi
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__F?ms_astDropSoundFileName@SGroundItemInstance@CPythonItem@@2PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A@@YAXXZ
text$yd	SEGMENT
??__F?ms_astDropSoundFileName@SGroundItemInstance@CPythonItem@@2PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A@@YAXXZ PROC ; `dynamic atexit destructor for 'CPythonItem::SGroundItemInstance::ms_astDropSoundFileName'', COMDAT
  00000	68 00 00 00 00	 push	 OFFSET ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00005	6a 05		 push	 5
  00007	6a 18		 push	 24			; 00000018H
  00009	68 00 00 00 00	 push	 OFFSET ?ms_astDropSoundFileName@SGroundItemInstance@CPythonItem@@2PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; CPythonItem::SGroundItemInstance::ms_astDropSoundFileName
  0000e	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00013	c3		 ret	 0
??__F?ms_astDropSoundFileName@SGroundItemInstance@CPythonItem@@2PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'CPythonItem::SGroundItemInstance::ms_astDropSoundFileName''
text$yd	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ??__E?ms_astDropSoundFileName@SGroundItemInstance@CPythonItem@@2PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A@@YAXXZ
text$di	SEGMENT
??__E?ms_astDropSoundFileName@SGroundItemInstance@CPythonItem@@2PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A@@YAXXZ PROC ; `dynamic initializer for 'CPythonItem::SGroundItemInstance::ms_astDropSoundFileName'', COMDAT

; 13   : std::string CPythonItem::TGroundItemInstance::ms_astDropSoundFileName[DROPSOUND_NUM];

  00000	68 00 00 00 00	 push	 OFFSET ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00005	68 00 00 00 00	 push	 OFFSET ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0000a	6a 05		 push	 5
  0000c	6a 18		 push	 24			; 00000018H
  0000e	68 00 00 00 00	 push	 OFFSET ?ms_astDropSoundFileName@SGroundItemInstance@CPythonItem@@2PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A ; CPythonItem::SGroundItemInstance::ms_astDropSoundFileName
  00013	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z
  00018	68 00 00 00 00	 push	 OFFSET ??__F?ms_astDropSoundFileName@SGroundItemInstance@CPythonItem@@2PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A@@YAXXZ ; `dynamic atexit destructor for 'CPythonItem::SGroundItemInstance::ms_astDropSoundFileName''
  0001d	e8 00 00 00 00	 call	 _atexit
  00022	59		 pop	 ecx
  00023	c3		 ret	 0
??__E?ms_astDropSoundFileName@SGroundItemInstance@CPythonItem@@2PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A@@YAXXZ ENDP ; `dynamic initializer for 'CPythonItem::SGroundItemInstance::ms_astDropSoundFileName''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GCPythonItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCPythonItem@@UAEPAXI@Z PROC				; CPythonItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1CPythonItem@@UAE@XZ	; CPythonItem::~CPythonItem
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 0c 01 00 00	 push	 268			; 0000010cH
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GCPythonItem@@UAEPAXI@Z ENDP				; CPythonItem::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@UAEPAXI@Z PROC ; CDynamicPool<CPythonItem::SGroundItemInstance>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@UAE@XZ ; CDynamicPool<CPythonItem::SGroundItemInstance>::~CDynamicPool<CPythonItem::SGroundItemInstance>
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 24		 push	 36			; 00000024H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@UAEPAXI@Z ENDP ; CDynamicPool<CPythonItem::SGroundItemInstance>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Xlength@?$vector@PAUSGroundItemInstance@CPythonItem@@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PAUSGroundItemInstance@CPythonItem@@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@CAXXZ PROC ; std::vector<CPythonItem::SGroundItemInstance *,std::allocator<CPythonItem::SGroundItemInstance *> >::_Xlength, COMDAT

; 1705 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@PAUSGroundItemInstance@CPythonItem@@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@CAXXZ ENDP ; std::vector<CPythonItem::SGroundItemInstance *,std::allocator<CPythonItem::SGroundItemInstance *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ?Delete@?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@KAXPAUSGroundItemInstance@CPythonItem@@@Z
_TEXT	SEGMENT
_pkData$ = 8						; size = 4
?Delete@?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@KAXPAUSGroundItemInstance@CPythonItem@@@Z PROC ; CDynamicPool<CPythonItem::SGroundItemInstance>::Delete, COMDAT

; 109  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 110  : 			delete pkData;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pkData$[ebp]
  00006	85 c9		 test	 ecx, ecx
  00008	74 06		 je	 SHORT $LN3@Delete
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]
$LN3@Delete:

; 111  : 		}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
?Delete@?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@KAXPAUSGroundItemInstance@CPythonItem@@@Z ENDP ; CDynamicPool<CPythonItem::SGroundItemInstance>::Delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
;	COMDAT ??1?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@UAE@XZ PROC ; CDynamicPool<CPythonItem::SGroundItemInstance>::~CDynamicPool<CPythonItem::SGroundItemInstance>, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00009	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0000c	85 c9		 test	 ecx, ecx
  0000e	74 27		 je	 SHORT $LN6@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	83 e0 fc	 and	 eax, -4			; fffffffcH
  00018	50		 push	 eax
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  0001f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00026	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  00029	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0

; 1700 :             _Myend   = pointer();

  00030	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN6@CDynamicPo:

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00037	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 27		 je	 SHORT $LN13@CDynamicPo

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00043	83 e0 fc	 and	 eax, -4			; fffffffcH
  00046	50		 push	 eax
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  0004d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  00057	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 1700 :             _Myend   = pointer();

  0005e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN13@CDynamicPo:
  00065	5e		 pop	 esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 26   : 		}

  00066	c3		 ret	 0
??1?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@UAE@XZ ENDP ; CDynamicPool<CPythonItem::SGroundItemInstance>::~CDynamicPool<CPythonItem::SGroundItemInstance>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$map@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$map@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@@std@@QAE@XZ PROC ; std::map<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::~map<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> >,0> >
??1?$map@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@@std@@QAE@XZ ENDP ; std::map<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::~map<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Head$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 645  :         ++_Mysize;
; 646  :         const auto _Head  = _Myhead;
; 647  :         _Newnode->_Parent = _Loc._Parent;

  00006	8b 55 08	 mov	 edx, DWORD PTR __Loc$[ebp]
  00009	8b c1		 mov	 eax, ecx
  0000b	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	ff 40 04	 inc	 DWORD PTR [eax+4]
  00013	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]
  00016	89 4d f8	 mov	 DWORD PTR __Head$1$[ebp], ecx
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0001c	3b d1		 cmp	 edx, ecx
  0001e	75 12		 jne	 SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 650  :             _Head->_Parent   = _Newnode;

  00022	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 651  :             _Head->_Right    = _Newnode;

  00025	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 652  :             _Newnode->_Color = _Black; // the root is black

  00028	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 711  :     }

  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 0c 00	 ret	 12			; 0000000cH
$LN5@Insert_nod:

; 653  :             return _Newnode;
; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  00032	83 7d 0c 00	 cmp	 DWORD PTR __Loc$[ebp+4], 0
  00036	75 0d		 jne	 SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

  00038	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  0003b	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003e	75 0d		 jne	 SHORT $LN9@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

  00040	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

  00043	eb 08		 jmp	 SHORT $LN9@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

  00045	89 02		 mov	 DWORD PTR [edx], eax

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  00047	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00049	75 02		 jne	 SHORT $LN9@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

  0004b	89 01		 mov	 DWORD PTR [ecx], eax
$LN9@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  0004d	8b d0		 mov	 edx, eax
  0004f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00052	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00056	0f 85 99 01 00
	00		 jne	 $LN3@Insert_nod
  0005c	53		 push	 ebx
  0005d	56		 push	 esi
  0005e	57		 push	 edi
  0005f	90		 npad	 1
$LL2@Insert_nod:

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00060	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00063	8d 7a 04	 lea	 edi, DWORD PTR [edx+4]
  00066	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00069	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
  0006c	8b 06		 mov	 eax, DWORD PTR [esi]
  0006e	3b c8		 cmp	 ecx, eax
  00070	0f 85 ba 00 00
	00		 jne	 $LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00076	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00079	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  0007d	0f 84 b3 00 00
	00		 je	 $LN53@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;
; 676  :                     _Parent_sibling->_Color          = _Black;
; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 679  :                 } else { // parent's sibling has red and black children
; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  00083	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]
  00086	3b d6		 cmp	 edx, esi
  00088	75 47		 jne	 SHORT $LN51@Insert_nod

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008a	8b 06		 mov	 eax, DWORD PTR [esi]

; 681  :                         _Pnode = _Pnode->_Parent;

  0008c	8b d1		 mov	 edx, ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0008e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00091	8b 06		 mov	 eax, DWORD PTR [esi]
  00093	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00097	75 03		 jne	 SHORT $LN20@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00099	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN20@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0009c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0009e	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  000a4	8b 00		 mov	 eax, DWORD PTR [eax]
  000a6	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  000a9	75 0b		 jne	 SHORT $LN21@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  000ab	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000ae	8b fb		 mov	 edi, ebx
  000b0	89 16		 mov	 DWORD PTR [esi], edx
  000b2	89 33		 mov	 DWORD PTR [ebx], esi
  000b4	eb 1d		 jmp	 SHORT $LN49@Insert_nod
$LN21@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  000b6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000b8	3b 10		 cmp	 edx, DWORD PTR [eax]
  000ba	75 0a		 jne	 SHORT $LN23@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  000bc	89 30		 mov	 DWORD PTR [eax], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000be	8b fb		 mov	 edi, ebx
  000c0	89 16		 mov	 DWORD PTR [esi], edx
  000c2	89 33		 mov	 DWORD PTR [ebx], esi
  000c4	eb 0d		 jmp	 SHORT $LN49@Insert_nod
$LN23@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  000c6	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  000c9	8b fb		 mov	 edi, ebx
  000cb	89 16		 mov	 DWORD PTR [esi], edx
  000cd	89 33		 mov	 DWORD PTR [ebx], esi
  000cf	eb 02		 jmp	 SHORT $LN49@Insert_nod
$LN51@Insert_nod:
  000d1	8b f1		 mov	 esi, ecx
$LN49@Insert_nod:

; 682  :                         _Lrotate(_Pnode);
; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  000d3	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  000d7	8b 07		 mov	 eax, DWORD PTR [edi]
  000d9	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000dc	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

  000e0	8b 07		 mov	 eax, DWORD PTR [edi]
  000e2	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  000e5	8b 31		 mov	 esi, DWORD PTR [ecx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  000e7	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ea	89 01		 mov	 DWORD PTR [ecx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  000ec	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000ef	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f3	75 03		 jne	 SHORT $LN27@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  000f5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN27@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  000f8	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000fb	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00101	8b 00		 mov	 eax, DWORD PTR [eax]
  00103	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  00106	75 0b		 jne	 SHORT $LN28@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  00108	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0010b	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0010e	e9 cc 00 00 00	 jmp	 $LN52@Insert_nod
$LN28@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00113	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00116	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00119	75 0b		 jne	 SHORT $LN30@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0011b	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0011e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  00121	e9 b9 00 00 00	 jmp	 $LN52@Insert_nod
$LN30@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00126	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  00128	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

  0012b	e9 af 00 00 00	 jmp	 $LN52@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;
; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00130	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  00134	75 1b		 jne	 SHORT $LN15@Insert_nod
$LN53@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00136	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1
  0013a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  0013e	8b 07		 mov	 eax, DWORD PTR [edi]
  00140	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00143	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0
  00147	8b 07		 mov	 eax, DWORD PTR [edi]
  00149	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  0014c	e9 91 00 00 00	 jmp	 $LN46@Insert_nod
$LN15@Insert_nod:

; 692  :                     _Pnode->_Parent->_Color          = _Black;
; 693  :                     _Parent_sibling->_Color          = _Black;
; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;
; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;
; 696  :                 } else { // parent's sibling has red and black children
; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  00151	8b 01		 mov	 eax, DWORD PTR [ecx]
  00153	3b d0		 cmp	 edx, eax
  00155	75 3e		 jne	 SHORT $LN39@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

  00157	8b d1		 mov	 edx, ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00159	8b c8		 mov	 ecx, eax

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  0015b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0015e	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  00160	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00163	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00167	75 03		 jne	 SHORT $LN34@Insert_nod

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00169	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN34@Insert_nod:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0016c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0016e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00171	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00179	75 05		 jne	 SHORT $LN35@Insert_nod

; 491  :             _Myhead->_Parent = _Pnode;

  0017b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0017e	eb 0e		 jmp	 SHORT $LN38@Insert_nod
$LN35@Insert_nod:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00180	8b 03		 mov	 eax, DWORD PTR [ebx]
  00182	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00185	75 05		 jne	 SHORT $LN37@Insert_nod

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00187	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  0018a	eb 02		 jmp	 SHORT $LN38@Insert_nod
$LN37@Insert_nod:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0018c	89 08		 mov	 DWORD PTR [eax], ecx
$LN38@Insert_nod:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0018e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 499  :         _Wherenode->_Parent = _Pnode;

  00191	8b fb		 mov	 edi, ebx
  00193	89 0b		 mov	 DWORD PTR [ebx], ecx
$LN39@Insert_nod:

; 699  :                         _Rrotate(_Pnode);
; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  00195	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00199	8b 07		 mov	 eax, DWORD PTR [edi]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

  001a2	8b 07		 mov	 eax, DWORD PTR [edi]
  001a4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  001a7	8b 71 08	 mov	 esi, DWORD PTR [ecx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  001aa	8b 06		 mov	 eax, DWORD PTR [esi]
  001ac	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  001af	8b 06		 mov	 eax, DWORD PTR [esi]
  001b1	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  001b5	75 03		 jne	 SHORT $LN41@Insert_nod

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  001b7	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN41@Insert_nod:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  001ba	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001bd	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  001c0	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  001c3	8b 00		 mov	 eax, DWORD PTR [eax]
  001c5	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  001c8	75 05		 jne	 SHORT $LN42@Insert_nod

; 469  :             _Myhead->_Parent = _Pnode;

  001ca	89 70 04	 mov	 DWORD PTR [eax+4], esi
  001cd	eb 0e		 jmp	 SHORT $LN45@Insert_nod
$LN42@Insert_nod:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  001cf	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001d2	3b 08		 cmp	 ecx, DWORD PTR [eax]
  001d4	75 04		 jne	 SHORT $LN44@Insert_nod

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  001d6	89 30		 mov	 DWORD PTR [eax], esi

; 472  :         } else {

  001d8	eb 03		 jmp	 SHORT $LN45@Insert_nod
$LN44@Insert_nod:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  001da	89 70 08	 mov	 DWORD PTR [eax+8], esi
$LN45@Insert_nod:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  001dd	89 0e		 mov	 DWORD PTR [esi], ecx
$LN52@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  001df	89 71 04	 mov	 DWORD PTR [ecx+4], esi
$LN46@Insert_nod:
  001e2	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001e5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  001e9	0f 84 71 fe ff
	ff		 je	 $LL2@Insert_nod
  001ef	8b 4d f8	 mov	 ecx, DWORD PTR __Head$1$[ebp]
  001f2	5f		 pop	 edi
  001f3	5e		 pop	 esi
  001f4	5b		 pop	 ebx
$LN3@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }
; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

  001f5	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  001f8	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 710  :         return _Newnode;

  001fc	8b 45 10	 mov	 eax, DWORD PTR __Newnode$[ebp]

; 711  :     }

  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 0c 00	 ret	 12			; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
tv1186 = -8						; size = 4
tv1182 = -8						; size = 4
tv1149 = -8						; size = 4
__Erasednode$1$ = -4					; size = 4
__Where$ = 8						; size = 4
?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Extract, COMDAT
; _this$ = ecx

; 502  :     _Nodeptr _Extract(_Unchecked_const_iterator _Where) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 503  :         _Nodeptr _Erasednode = _Where._Ptr; // node to erase

  00006	8b 45 08	 mov	 eax, DWORD PTR __Where$[ebp]
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	8b d9		 mov	 ebx, ecx
  0000d	89 45 fc	 mov	 DWORD PTR __Erasednode$1$[ebp], eax
  00010	57		 push	 edi

; 504  :         ++_Where; // save successor iterator for return

  00011	8d 4d 08	 lea	 ecx, DWORD PTR __Where$[ebp]
  00014	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >,std::_Iterator_base0>::operator++

; 505  : 
; 506  :         _Nodeptr _Fixnode; // the node to recolor as needed
; 507  :         _Nodeptr _Fixnodeparent; // parent of _Fixnode (which may be nil)
; 508  :         _Nodeptr _Pnode = _Erasednode;
; 509  : 
; 510  :         if (_Pnode->_Left->_Isnil) {

  00019	8b 55 fc	 mov	 edx, DWORD PTR __Erasednode$1$[ebp]
  0001c	8b 02		 mov	 eax, DWORD PTR [edx]
  0001e	8b 7a 08	 mov	 edi, DWORD PTR [edx+8]
  00021	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00025	75 18		 jne	 SHORT $LN86@Extract

; 511  :             _Fixnode = _Pnode->_Right; // stitch up right subtree
; 512  :         } else if (_Pnode->_Right->_Isnil) {

  00027	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0002b	74 04		 je	 SHORT $LN7@Extract

; 513  :             _Fixnode = _Pnode->_Left; // stitch up left subtree

  0002d	8b f8		 mov	 edi, eax

; 514  :         } else { // two subtrees, must lift successor node to replace erased

  0002f	eb 0e		 jmp	 SHORT $LN86@Extract
$LN7@Extract:

; 515  :             _Pnode   = _Where._Ptr; // _Pnode is successor node

  00031	8b 4d 08	 mov	 ecx, DWORD PTR __Where$[ebp]

; 516  :             _Fixnode = _Pnode->_Right; // _Fixnode is only subtree

  00034	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  00037	3b ca		 cmp	 ecx, edx

; 517  :         }
; 518  : 
; 519  :         if (_Pnode == _Erasednode) { // at most one subtree, relink it

  00039	0f 85 8b 00 00
	00		 jne	 $LN9@Extract
$LN86@Extract:

; 520  :             _Fixnodeparent = _Erasednode->_Parent;
; 521  :             if (!_Fixnode->_Isnil) {

  0003f	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00043	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  00046	75 03		 jne	 SHORT $LN11@Extract

; 522  :                 _Fixnode->_Parent = _Fixnodeparent; // link up

  00048	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN11@Extract:

; 523  :             }
; 524  : 
; 525  :             if (_Myhead->_Parent == _Erasednode) {

  0004b	8b 03		 mov	 eax, DWORD PTR [ebx]
  0004d	39 50 04	 cmp	 DWORD PTR [eax+4], edx
  00050	75 05		 jne	 SHORT $LN12@Extract

; 526  :                 _Myhead->_Parent = _Fixnode; // link down from root

  00052	89 78 04	 mov	 DWORD PTR [eax+4], edi
  00055	eb 0b		 jmp	 SHORT $LN15@Extract
$LN12@Extract:

; 527  :             } else if (_Fixnodeparent->_Left == _Erasednode) {

  00057	39 16		 cmp	 DWORD PTR [esi], edx
  00059	75 04		 jne	 SHORT $LN14@Extract

; 528  :                 _Fixnodeparent->_Left = _Fixnode; // link down to left

  0005b	89 3e		 mov	 DWORD PTR [esi], edi

; 529  :             } else {

  0005d	eb 03		 jmp	 SHORT $LN15@Extract
$LN14@Extract:

; 530  :                 _Fixnodeparent->_Right = _Fixnode; // link down to right

  0005f	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$LN15@Extract:

; 531  :             }
; 532  : 
; 533  :             if (_Myhead->_Left == _Erasednode) {

  00062	8b 03		 mov	 eax, DWORD PTR [ebx]
  00064	39 10		 cmp	 DWORD PTR [eax], edx
  00066	75 2b		 jne	 SHORT $LN16@Extract

; 534  :                 _Myhead->_Left = _Fixnode->_Isnil ? _Fixnodeparent // smallest is parent of erased node

  00068	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0006c	74 04		 je	 SHORT $LN42@Extract
  0006e	8b d6		 mov	 edx, esi
  00070	eb 1c		 jmp	 SHORT $LN48@Extract
$LN42@Extract:

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00072	8b 0f		 mov	 ecx, DWORD PTR [edi]

; 534  :                 _Myhead->_Left = _Fixnode->_Isnil ? _Fixnodeparent // smallest is parent of erased node

  00074	8b d7		 mov	 edx, edi

; 451  :         while (!_Pnode->_Left->_Isnil) {

  00076	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  0007a	75 12		 jne	 SHORT $LN48@Extract
  0007c	0f 1f 40 00	 npad	 4
$LL47@Extract:
  00080	8b 01		 mov	 eax, DWORD PTR [ecx]

; 452  :             _Pnode = _Pnode->_Left;

  00082	8b d1		 mov	 edx, ecx
  00084	8b c8		 mov	 ecx, eax
  00086	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0008a	74 f4		 je	 SHORT $LL47@Extract
  0008c	8b 03		 mov	 eax, DWORD PTR [ebx]
$LN48@Extract:

; 534  :                 _Myhead->_Left = _Fixnode->_Isnil ? _Fixnodeparent // smallest is parent of erased node

  0008e	89 10		 mov	 DWORD PTR [eax], edx
  00090	8b 55 fc	 mov	 edx, DWORD PTR __Erasednode$1$[ebp]
$LN16@Extract:

; 535  :                                                   : _Min(_Fixnode); // smallest in relinked subtree
; 536  :             }
; 537  : 
; 538  :             if (_Myhead->_Right == _Erasednode) {

  00093	8b 03		 mov	 eax, DWORD PTR [ebx]
  00095	39 50 08	 cmp	 DWORD PTR [eax+8], edx
  00098	75 2b		 jne	 SHORT $LN17@Extract

; 539  :                 _Myhead->_Right = _Fixnode->_Isnil ? _Fixnodeparent // largest is parent of erased node

  0009a	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  0009e	74 0a		 je	 SHORT $LN44@Extract
  000a0	8b ce		 mov	 ecx, esi
  000a2	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 540  :                                                    : _Max(_Fixnode); // largest in relinked subtree
; 541  :             }
; 542  :         } else { // erased has two subtrees, _Pnode is successor to erased

  000a5	8a 52 0c	 mov	 dl, BYTE PTR [edx+12]
  000a8	eb 7c		 jmp	 SHORT $LN55@Extract
$LN44@Extract:

; 443  :         while (!_Pnode->_Right->_Isnil) {

  000aa	8b 47 08	 mov	 eax, DWORD PTR [edi+8]

; 539  :                 _Myhead->_Right = _Fixnode->_Isnil ? _Fixnodeparent // largest is parent of erased node

  000ad	8b cf		 mov	 ecx, edi

; 443  :         while (!_Pnode->_Right->_Isnil) {

  000af	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000b3	75 0b		 jne	 SHORT $LN52@Extract
$LL51@Extract:

; 444  :             _Pnode = _Pnode->_Right;

  000b5	8b c8		 mov	 ecx, eax
  000b7	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000ba	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000be	74 f5		 je	 SHORT $LL51@Extract
$LN52@Extract:
  000c0	8b 03		 mov	 eax, DWORD PTR [ebx]

; 539  :                 _Myhead->_Right = _Fixnode->_Isnil ? _Fixnodeparent // largest is parent of erased node

  000c2	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN17@Extract:

; 540  :                                                    : _Max(_Fixnode); // largest in relinked subtree
; 541  :             }
; 542  :         } else { // erased has two subtrees, _Pnode is successor to erased

  000c5	8a 52 0c	 mov	 dl, BYTE PTR [edx+12]
  000c8	eb 5c		 jmp	 SHORT $LN55@Extract
$LN9@Extract:

; 543  :             _Erasednode->_Left->_Parent = _Pnode; // link left up

  000ca	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 544  :             _Pnode->_Left               = _Erasednode->_Left; // link successor down

  000cd	8b 02		 mov	 eax, DWORD PTR [edx]
  000cf	89 01		 mov	 DWORD PTR [ecx], eax

; 545  : 
; 546  :             if (_Pnode == _Erasednode->_Right) {

  000d1	3b 4a 08	 cmp	 ecx, DWORD PTR [edx+8]
  000d4	75 04		 jne	 SHORT $LN18@Extract

; 547  :                 _Fixnodeparent = _Pnode; // successor is next to erased

  000d6	8b f1		 mov	 esi, ecx

; 548  :             } else { // successor further down, link in place of erased

  000d8	eb 1a		 jmp	 SHORT $LN19@Extract
$LN18@Extract:

; 549  :                 _Fixnodeparent = _Pnode->_Parent; // parent is successor's
; 550  :                 if (!_Fixnode->_Isnil) {

  000da	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  000de	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  000e1	75 03		 jne	 SHORT $LN20@Extract

; 551  :                     _Fixnode->_Parent = _Fixnodeparent; // link fix up

  000e3	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN20@Extract:

; 552  :                 }
; 553  : 
; 554  :                 _Fixnodeparent->_Left        = _Fixnode; // link fix down

  000e6	89 3e		 mov	 DWORD PTR [esi], edi

; 555  :                 _Pnode->_Right               = _Erasednode->_Right; // link next down

  000e8	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000eb	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 556  :                 _Erasednode->_Right->_Parent = _Pnode; // right up

  000ee	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000f1	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN19@Extract:

; 557  :             }
; 558  : 
; 559  :             if (_Myhead->_Parent == _Erasednode) {

  000f4	8b 03		 mov	 eax, DWORD PTR [ebx]
  000f6	39 50 04	 cmp	 DWORD PTR [eax+4], edx
  000f9	75 05		 jne	 SHORT $LN21@Extract

; 560  :                 _Myhead->_Parent = _Pnode; // link down from root

  000fb	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  000fe	eb 0e		 jmp	 SHORT $LN24@Extract
$LN21@Extract:

; 561  :             } else if (_Erasednode->_Parent->_Left == _Erasednode) {

  00100	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00103	39 10		 cmp	 DWORD PTR [eax], edx
  00105	75 04		 jne	 SHORT $LN23@Extract

; 562  :                 _Erasednode->_Parent->_Left = _Pnode; // link down to left

  00107	89 08		 mov	 DWORD PTR [eax], ecx

; 563  :             } else {

  00109	eb 03		 jmp	 SHORT $LN24@Extract
$LN23@Extract:

; 564  :                 _Erasednode->_Parent->_Right = _Pnode; // link down to right

  0010b	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN24@Extract:

; 567  :             _Pnode->_Parent = _Erasednode->_Parent; // link successor up

  0010e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 104  :     _Ty _Tmp = _STD move(_Left);

  00111	8a 51 0c	 mov	 dl, BYTE PTR [ecx+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 567  :             _Pnode->_Parent = _Erasednode->_Parent; // link successor up

  00114	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 105  :     _Left    = _STD move(_Right);

  00117	8b 45 fc	 mov	 eax, DWORD PTR __Erasednode$1$[ebp]
  0011a	8a 40 0c	 mov	 al, BYTE PTR [eax+12]
  0011d	88 41 0c	 mov	 BYTE PTR [ecx+12], al

; 106  :     _Right   = _STD move(_Tmp);

  00120	8b 45 fc	 mov	 eax, DWORD PTR __Erasednode$1$[ebp]
  00123	88 50 0c	 mov	 BYTE PTR [eax+12], dl
$LN55@Extract:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 571  :         if (_Erasednode->_Color == _Black) { // erasing black link, must recolor/rebalance tree

  00126	80 fa 01	 cmp	 dl, 1
  00129	0f 85 46 01 00
	00		 jne	 $LN25@Extract

; 572  :             for (; _Fixnode != _Myhead->_Parent && _Fixnode->_Color == _Black; _Fixnodeparent = _Fixnode->_Parent) {

  0012f	8b 03		 mov	 eax, DWORD PTR [ebx]
  00131	3b 78 04	 cmp	 edi, DWORD PTR [eax+4]
  00134	0f 84 37 01 00
	00		 je	 $LN3@Extract
  0013a	66 0f 1f 44 00
	00		 npad	 6
$LL4@Extract:
  00140	80 7f 0c 01	 cmp	 BYTE PTR [edi+12], 1
  00144	89 75 f8	 mov	 DWORD PTR tv1186[ebp], esi
  00147	0f 85 24 01 00
	00		 jne	 $LN3@Extract

; 573  :                 if (_Fixnode == _Fixnodeparent->_Left) { // fixup left subtree

  0014d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0014f	3b f9		 cmp	 edi, ecx
  00151	0f 85 a2 00 00
	00		 jne	 $LN26@Extract

; 574  :                     _Pnode = _Fixnodeparent->_Right;

  00157	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 575  :                     if (_Pnode->_Color == _Red) { // rotate red up from right subtree

  0015a	80 79 0c 00	 cmp	 BYTE PTR [ecx+12], 0
  0015e	75 43		 jne	 SHORT $LN87@Extract

; 576  :                         _Pnode->_Color         = _Black;

  00160	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  00164	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]

; 577  :                         _Fixnodeparent->_Color = _Red;

  00167	c6 46 0c 00	 mov	 BYTE PTR [esi+12], 0

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0016b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0016d	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  00170	8b 01		 mov	 eax, DWORD PTR [ecx]
  00172	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00176	75 03		 jne	 SHORT $LN57@Extract

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00178	89 70 04	 mov	 DWORD PTR [eax+4], esi
$LN57@Extract:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0017b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0017e	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  00181	8b 03		 mov	 eax, DWORD PTR [ebx]
  00183	3b 70 04	 cmp	 esi, DWORD PTR [eax+4]
  00186	75 05		 jne	 SHORT $LN58@Extract

; 469  :             _Myhead->_Parent = _Pnode;

  00188	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0018b	eb 0e		 jmp	 SHORT $LN61@Extract
$LN58@Extract:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  0018d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00190	3b 30		 cmp	 esi, DWORD PTR [eax]
  00192	75 04		 jne	 SHORT $LN60@Extract

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  00194	89 08		 mov	 DWORD PTR [eax], ecx

; 472  :         } else {

  00196	eb 03		 jmp	 SHORT $LN61@Extract
$LN60@Extract:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  00198	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN61@Extract:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

  0019b	89 31		 mov	 DWORD PTR [ecx], esi

; 477  :         _Wherenode->_Parent = _Pnode;

  0019d	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 578  :                         _Lrotate(_Fixnodeparent);
; 579  :                         _Pnode = _Fixnodeparent->_Right;

  001a0	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
$LN87@Extract:

; 580  :                     }
; 581  : 
; 582  :                     if (_Pnode->_Isnil) {

  001a3	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  001a7	0f 85 b1 00 00
	00		 jne	 $LN2@Extract

; 583  :                         _Fixnode = _Fixnodeparent; // shouldn't happen
; 584  :                     } else if (_Pnode->_Left->_Color == _Black
; 585  :                                && _Pnode->_Right->_Color == _Black) { // redden right subtree with black children

  001ad	8b 11		 mov	 edx, DWORD PTR [ecx]
  001af	80 7a 0c 01	 cmp	 BYTE PTR [edx+12], 1
  001b3	75 0d		 jne	 SHORT $LN89@Extract
  001b5	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  001b8	80 78 0c 01	 cmp	 BYTE PTR [eax+12], 1
  001bc	0f 84 98 00 00
	00		 je	 $LN93@Extract
$LN89@Extract:

; 586  :                         _Pnode->_Color = _Red;
; 587  :                         _Fixnode       = _Fixnodeparent;
; 588  :                     } else { // must rearrange right subtree
; 589  :                         if (_Pnode->_Right->_Color == _Black) { // rotate red up from left sub-subtree

  001c2	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  001c5	80 78 0c 01	 cmp	 BYTE PTR [eax+12], 1
  001c9	75 13		 jne	 SHORT $LN33@Extract

; 590  :                             _Pnode->_Left->_Color = _Black;

  001cb	c6 42 0c 01	 mov	 BYTE PTR [edx+12], 1

; 591  :                             _Pnode->_Color        = _Red;

  001cf	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0

; 592  :                             _Rrotate(_Pnode);

  001d3	51		 push	 ecx
  001d4	8b cb		 mov	 ecx, ebx
  001d6	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Rrotate

; 593  :                             _Pnode = _Fixnodeparent->_Right;

  001db	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
$LN33@Extract:

; 594  :                         }
; 595  : 
; 596  :                         _Pnode->_Color         = _Fixnodeparent->_Color;

  001de	8a 46 0c	 mov	 al, BYTE PTR [esi+12]
  001e1	88 41 0c	 mov	 BYTE PTR [ecx+12], al

; 597  :                         _Fixnodeparent->_Color = _Black;

  001e4	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 598  :                         _Pnode->_Right->_Color = _Black;

  001e8	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 599  :                         _Lrotate(_Fixnodeparent);

  001eb	8b cb		 mov	 ecx, ebx
  001ed	56		 push	 esi
  001ee	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  001f2	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Lrotate

; 600  :                         break; // tree now recolored/rebalanced

  001f7	eb 78		 jmp	 SHORT $LN3@Extract
$LN26@Extract:

; 601  :                     }
; 602  :                 } else { // fixup right subtree
; 603  :                     _Pnode = _Fixnodeparent->_Left;
; 604  :                     if (_Pnode->_Color == _Red) { // rotate red up from left subtree

  001f9	80 79 0c 00	 cmp	 BYTE PTR [ecx+12], 0
  001fd	75 44		 jne	 SHORT $LN88@Extract

; 605  :                         _Pnode->_Color         = _Black;

  001ff	c6 41 0c 01	 mov	 BYTE PTR [ecx+12], 1

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00203	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 606  :                         _Fixnodeparent->_Color = _Red;

  00205	c6 46 0c 00	 mov	 BYTE PTR [esi+12], 0

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  00209	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0020c	89 06		 mov	 DWORD PTR [esi], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  0020e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00211	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00215	75 03		 jne	 SHORT $LN64@Extract

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00217	89 70 04	 mov	 DWORD PTR [eax+4], esi
$LN64@Extract:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0021a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0021d	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00220	8b 03		 mov	 eax, DWORD PTR [ebx]
  00222	3b 70 04	 cmp	 esi, DWORD PTR [eax+4]
  00225	75 05		 jne	 SHORT $LN65@Extract

; 491  :             _Myhead->_Parent = _Pnode;

  00227	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0022a	eb 0f		 jmp	 SHORT $LN68@Extract
$LN65@Extract:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  0022c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0022f	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00232	75 05		 jne	 SHORT $LN67@Extract

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  00234	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 494  :         } else {

  00237	eb 02		 jmp	 SHORT $LN68@Extract
$LN67@Extract:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  00239	89 08		 mov	 DWORD PTR [eax], ecx
$LN68@Extract:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

  0023b	89 71 08	 mov	 DWORD PTR [ecx+8], esi

; 499  :         _Wherenode->_Parent = _Pnode;

  0023e	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 607  :                         _Rrotate(_Fixnodeparent);
; 608  :                         _Pnode = _Fixnodeparent->_Left;

  00241	8b 0e		 mov	 ecx, DWORD PTR [esi]
$LN88@Extract:

; 609  :                     }
; 610  : 
; 611  :                     if (_Pnode->_Isnil) {

  00243	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00247	75 15		 jne	 SHORT $LN2@Extract

; 612  :                         _Fixnode = _Fixnodeparent; // shouldn't happen
; 613  :                     } else if (_Pnode->_Right->_Color == _Black
; 614  :                                && _Pnode->_Left->_Color == _Black) { // redden left subtree with black children

  00249	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0024c	80 7a 0c 01	 cmp	 BYTE PTR [edx+12], 1
  00250	75 3a		 jne	 SHORT $LN90@Extract
  00252	8b 01		 mov	 eax, DWORD PTR [ecx]
  00254	80 78 0c 01	 cmp	 BYTE PTR [eax+12], 1
  00258	75 32		 jne	 SHORT $LN90@Extract
$LN93@Extract:

; 572  :             for (; _Fixnode != _Myhead->_Parent && _Fixnode->_Color == _Black; _Fixnodeparent = _Fixnode->_Parent) {

  0025a	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0
$LN2@Extract:
  0025e	8b 03		 mov	 eax, DWORD PTR [ebx]
  00260	8b 4d f8	 mov	 ecx, DWORD PTR tv1186[ebp]
  00263	8b f9		 mov	 edi, ecx
  00265	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00268	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  0026b	0f 85 cf fe ff
	ff		 jne	 $LL4@Extract
$LN3@Extract:

; 629  :                         break; // tree now recolored/rebalanced
; 630  :                     }
; 631  :                 }
; 632  :             }
; 633  : 
; 634  :             _Fixnode->_Color = _Black; // stopping node is black

  00271	c6 47 0c 01	 mov	 BYTE PTR [edi+12], 1
$LN25@Extract:

; 635  :         }
; 636  : 
; 637  :         if (0 < _Mysize) {

  00275	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00278	8b 45 fc	 mov	 eax, DWORD PTR __Erasednode$1$[ebp]
  0027b	85 c9		 test	 ecx, ecx
  0027d	74 04		 je	 SHORT $LN40@Extract

; 638  :             --_Mysize;

  0027f	49		 dec	 ecx
  00280	89 4b 04	 mov	 DWORD PTR [ebx+4], ecx
$LN40@Extract:

; 639  :         }
; 640  : 
; 641  :         return _Erasednode;
; 642  :     }

  00283	5f		 pop	 edi
  00284	5e		 pop	 esi
  00285	5b		 pop	 ebx
  00286	8b e5		 mov	 esp, ebp
  00288	5d		 pop	 ebp
  00289	c2 04 00	 ret	 4
$LN90@Extract:

; 615  :                         _Pnode->_Color = _Red;
; 616  :                         _Fixnode       = _Fixnodeparent;
; 617  :                     } else { // must rearrange left subtree
; 618  :                         if (_Pnode->_Left->_Color == _Black) { // rotate red up from right sub-subtree

  0028c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0028e	80 78 0c 01	 cmp	 BYTE PTR [eax+12], 1
  00292	75 12		 jne	 SHORT $LN39@Extract

; 619  :                             _Pnode->_Right->_Color = _Black;

  00294	c6 42 0c 01	 mov	 BYTE PTR [edx+12], 1

; 620  :                             _Pnode->_Color         = _Red;

  00298	c6 41 0c 00	 mov	 BYTE PTR [ecx+12], 0

; 621  :                             _Lrotate(_Pnode);

  0029c	51		 push	 ecx
  0029d	8b cb		 mov	 ecx, ebx
  0029f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Lrotate

; 622  :                             _Pnode = _Fixnodeparent->_Left;

  002a4	8b 0e		 mov	 ecx, DWORD PTR [esi]
$LN39@Extract:

; 623  :                         }
; 624  : 
; 625  :                         _Pnode->_Color         = _Fixnodeparent->_Color;

  002a6	8a 46 0c	 mov	 al, BYTE PTR [esi+12]
  002a9	88 41 0c	 mov	 BYTE PTR [ecx+12], al

; 626  :                         _Fixnodeparent->_Color = _Black;

  002ac	c6 46 0c 01	 mov	 BYTE PTR [esi+12], 1

; 627  :                         _Pnode->_Left->_Color  = _Black;

  002b0	8b 01		 mov	 eax, DWORD PTR [ecx]

; 628  :                         _Rrotate(_Fixnodeparent);

  002b2	8b cb		 mov	 ecx, ebx
  002b4	56		 push	 esi
  002b5	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1
  002b9	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Rrotate
  002be	eb b1		 jmp	 SHORT $LN3@Extract
?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Extract
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Rrotate, COMDAT
; _this$ = ecx

; 480  :     void _Rrotate(_Nodeptr _Wherenode) noexcept { // promote left node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]

; 482  :         _Wherenode->_Left = _Pnode->_Right;

  00009	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000c	89 02		 mov	 DWORD PTR [edx], eax

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

  0000e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00011	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00015	75 03		 jne	 SHORT $LN2@Rrotate

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN2@Rrotate:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

  0001a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0001d	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

  00020	8b 01		 mov	 eax, DWORD PTR [ecx]
  00022	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00025	75 0e		 jne	 SHORT $LN3@Rrotate

; 491  :             _Myhead->_Parent = _Pnode;

  00027	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;
; 499  :         _Wherenode->_Parent = _Pnode;
; 500  :     }

  0002a	89 56 08	 mov	 DWORD PTR [esi+8], edx
  0002d	89 72 04	 mov	 DWORD PTR [edx+4], esi
  00030	5e		 pop	 esi
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
$LN3@Rrotate:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00035	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00038	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  0003b	75 0e		 jne	 SHORT $LN5@Rrotate

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

  0003d	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;
; 499  :         _Wherenode->_Parent = _Pnode;
; 500  :     }

  00040	89 56 08	 mov	 DWORD PTR [esi+8], edx
  00043	89 72 04	 mov	 DWORD PTR [edx+4], esi
  00046	5e		 pop	 esi
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
$LN5@Rrotate:

; 494  :         } else {
; 495  :             _Wherenode->_Parent->_Left = _Pnode;

  0004b	89 30		 mov	 DWORD PTR [eax], esi

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;
; 499  :         _Wherenode->_Parent = _Pnode;
; 500  :     }

  0004d	89 56 08	 mov	 DWORD PTR [esi+8], edx
  00050	89 72 04	 mov	 DWORD PTR [edx+4], esi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Rrotate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Lrotate, COMDAT
; _this$ = ecx

; 458  :     void _Lrotate(_Nodeptr _Wherenode) noexcept { // promote right node to root of subtree

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  00003	8b 55 08	 mov	 edx, DWORD PTR __Wherenode$[ebp]
  00006	56		 push	 esi
  00007	8b 72 08	 mov	 esi, DWORD PTR [edx+8]

; 460  :         _Wherenode->_Right = _Pnode->_Left;

  0000a	8b 06		 mov	 eax, DWORD PTR [esi]
  0000c	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

  0000f	8b 06		 mov	 eax, DWORD PTR [esi]
  00011	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  00015	75 03		 jne	 SHORT $LN2@Lrotate

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN2@Lrotate:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

  0001a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0001d	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

  00020	8b 01		 mov	 eax, DWORD PTR [ecx]
  00022	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  00025	75 0d		 jne	 SHORT $LN3@Lrotate

; 469  :             _Myhead->_Parent = _Pnode;

  00027	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;
; 477  :         _Wherenode->_Parent = _Pnode;
; 478  :     }

  0002a	89 16		 mov	 DWORD PTR [esi], edx
  0002c	89 72 04	 mov	 DWORD PTR [edx+4], esi
  0002f	5e		 pop	 esi
  00030	5d		 pop	 ebp
  00031	c2 04 00	 ret	 4
$LN3@Lrotate:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  00034	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00037	3b 10		 cmp	 edx, DWORD PTR [eax]
  00039	75 0c		 jne	 SHORT $LN5@Lrotate

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

  0003b	89 30		 mov	 DWORD PTR [eax], esi

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;
; 477  :         _Wherenode->_Parent = _Pnode;
; 478  :     }

  0003d	89 16		 mov	 DWORD PTR [esi], edx
  0003f	89 72 04	 mov	 DWORD PTR [edx+4], esi
  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp
  00044	c2 04 00	 ret	 4
$LN5@Lrotate:

; 472  :         } else {
; 473  :             _Wherenode->_Parent->_Right = _Pnode;

  00047	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;
; 477  :         _Wherenode->_Parent = _Pnode;
; 478  :     }

  0004a	89 16		 mov	 DWORD PTR [esi], edx
  0004c	89 72 04	 mov	 DWORD PTR [edx+4], esi
  0004f	5e		 pop	 esi
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Lrotate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> >,0> >, COMDAT
; _this$ = ecx

; 1189 :     ~_Tree() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

  00004	8b 07		 mov	 eax, DWORD PTR [edi]
  00006	8b 70 04	 mov	 esi, DWORD PTR [eax+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00009	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0000d	75 23		 jne	 SHORT $LN7@Tree
  0000f	90		 npad	 1
$LL6@Tree:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b cf		 mov	 ecx, edi
  00015	57		 push	 edi
  00016	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 598  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0001b	8b c6		 mov	 eax, esi

; 599  :     _Val         = static_cast<_Other&&>(_New_val);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0001f	6a 18		 push	 24			; 00000018H
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00027	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0002a	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  0002e	74 e0		 je	 SHORT $LL6@Tree
  00030	8b 07		 mov	 eax, DWORD PTR [edi]
$LN7@Tree:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00032	6a 18		 push	 24			; 00000018H
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0003a	83 c4 08	 add	 esp, 8
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1196 :     }

  0003f	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> >,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?__GetDropSoundType@CPythonItem@@IAEKABVCItemData@@@Z
_TEXT	SEGMENT
_c_rkItemData$ = 8					; size = 4
?__GetDropSoundType@CPythonItem@@IAEKABVCItemData@@@Z PROC ; CPythonItem::__GetDropSoundType, COMDAT
; _this$ = ecx

; 193  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 194  : 	switch (c_rkItemData.GetType())

  00004	8b 75 08	 mov	 esi, DWORD PTR _c_rkItemData$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?GetType@CItemData@@QBEEXZ ; CItemData::GetType
  0000e	0f b6 c0	 movzx	 eax, al
  00011	83 e8 01	 sub	 eax, 1
  00014	74 2a		 je	 SHORT $LN8@GetDropSou
  00016	83 e8 01	 sub	 eax, 1
  00019	75 40		 jne	 SHORT $LN10@GetDropSou

; 207  : 					break;
; 208  : 			}
; 209  : 			break;
; 210  : 		case CItemData::ITEM_TYPE_ARMOR:
; 211  : 			switch (c_rkItemData.GetSubType())

  0001b	8b ce		 mov	 ecx, esi
  0001d	e8 00 00 00 00	 call	 ?GetSubType@CItemData@@QBEEXZ ; CItemData::GetSubType
  00022	84 c0		 test	 al, al
  00024	74 10		 je	 SHORT $LN14@GetDropSou
  00026	2c 05		 sub	 al, 5
  00028	3c 01		 cmp	 al, 1
  0002a	77 2f		 ja	 SHORT $LN10@GetDropSou

; 212  : 			{
; 213  : 				case CItemData::ARMOR_NECK:
; 214  : 				case CItemData::ARMOR_EAR:
; 215  : 					return DROPSOUND_ACCESSORY;

  0002c	b8 04 00 00 00	 mov	 eax, 4
  00031	5e		 pop	 esi

; 219  : 				default:
; 220  : 					return DROPSOUND_DEFAULT;		
; 221  : 					break;
; 222  : 			}
; 223  : 			break;	
; 224  : 		default:
; 225  : 			return DROPSOUND_DEFAULT;
; 226  : 			break;
; 227  : 	}
; 228  : 
; 229  : 	return DROPSOUND_DEFAULT;
; 230  : }

  00032	5d		 pop	 ebp
  00033	c2 04 00	 ret	 4
$LN14@GetDropSou:

; 216  : 					break;
; 217  : 				case CItemData::ARMOR_BODY:
; 218  : 					return DROPSOUND_ARMOR;

  00036	b8 01 00 00 00	 mov	 eax, 1
  0003b	5e		 pop	 esi

; 219  : 				default:
; 220  : 					return DROPSOUND_DEFAULT;		
; 221  : 					break;
; 222  : 			}
; 223  : 			break;	
; 224  : 		default:
; 225  : 			return DROPSOUND_DEFAULT;
; 226  : 			break;
; 227  : 	}
; 228  : 
; 229  : 	return DROPSOUND_DEFAULT;
; 230  : }

  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
$LN8@GetDropSou:

; 195  : 	{
; 196  : 		case CItemData::ITEM_TYPE_WEAPON:
; 197  : 			switch (c_rkItemData.GetWeaponType())

  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?GetWeaponType@CItemData@@QBEKXZ ; CItemData::GetWeaponType
  00047	83 e8 02	 sub	 eax, 2
  0004a	74 16		 je	 SHORT $LN9@GetDropSou
  0004c	83 e8 04	 sub	 eax, 4
  0004f	74 0a		 je	 SHORT $LN10@GetDropSou

; 204  : 					break;
; 205  : 				default:
; 206  : 					return DROPSOUND_WEAPON;

  00051	b8 02 00 00 00	 mov	 eax, 2
  00056	5e		 pop	 esi

; 219  : 				default:
; 220  : 					return DROPSOUND_DEFAULT;		
; 221  : 					break;
; 222  : 			}
; 223  : 			break;	
; 224  : 		default:
; 225  : 			return DROPSOUND_DEFAULT;
; 226  : 			break;
; 227  : 	}
; 228  : 
; 229  : 	return DROPSOUND_DEFAULT;
; 230  : }

  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
$LN10@GetDropSou:

; 201  : 					break;
; 202  : 				case CItemData::WEAPON_ARROW:
; 203  : 					return DROPSOUND_DEFAULT;

  0005b	33 c0		 xor	 eax, eax
  0005d	5e		 pop	 esi

; 219  : 				default:
; 220  : 					return DROPSOUND_DEFAULT;		
; 221  : 					break;
; 222  : 			}
; 223  : 			break;	
; 224  : 		default:
; 225  : 			return DROPSOUND_DEFAULT;
; 226  : 			break;
; 227  : 	}
; 228  : 
; 229  : 	return DROPSOUND_DEFAULT;
; 230  : }

  0005e	5d		 pop	 ebp
  0005f	c2 04 00	 ret	 4
$LN9@GetDropSou:

; 198  : 			{
; 199  : 				case CItemData::WEAPON_BOW:
; 200  : 					return DROPSOUND_BOW;

  00062	b8 03 00 00 00	 mov	 eax, 3
  00067	5e		 pop	 esi

; 219  : 				default:
; 220  : 					return DROPSOUND_DEFAULT;		
; 221  : 					break;
; 222  : 			}
; 223  : 			break;	
; 224  : 		default:
; 225  : 			return DROPSOUND_DEFAULT;
; 226  : 			break;
; 227  : 	}
; 228  : 
; 229  : 	return DROPSOUND_DEFAULT;
; 230  : }

  00068	5d		 pop	 ebp
  00069	c2 04 00	 ret	 4
?__GetDropSoundType@CPythonItem@@IAEKABVCItemData@@@Z ENDP ; CPythonItem::__GetDropSoundType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?__GetUseSoundType@CPythonItem@@IAEKABVCItemData@@@Z
_TEXT	SEGMENT
_c_rkItemData$ = 8					; size = 4
?__GetUseSoundType@CPythonItem@@IAEKABVCItemData@@@Z PROC ; CPythonItem::__GetUseSoundType, COMDAT
; _this$ = ecx

; 234  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 235  : 	switch (c_rkItemData.GetType())

  00004	8b 75 08	 mov	 esi, DWORD PTR _c_rkItemData$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	e8 00 00 00 00	 call	 ?GetType@CItemData@@QBEEXZ ; CItemData::GetType
  0000e	0f b6 c0	 movzx	 eax, al
  00011	83 e8 01	 sub	 eax, 1
  00014	74 63		 je	 SHORT $LN10@GetUseSoun
  00016	83 e8 01	 sub	 eax, 1
  00019	74 39		 je	 SHORT $LN14@GetUseSoun
  0001b	83 e8 01	 sub	 eax, 1
  0001e	75 74		 jne	 SHORT $LN12@GetUseSoun

; 260  : 				default:
; 261  : 					return USESOUND_DEFAULT;		
; 262  : 					break;
; 263  : 			}
; 264  : 			break;
; 265  : 		case CItemData::ITEM_TYPE_USE:
; 266  : 			switch (c_rkItemData.GetSubType())

  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?GetSubType@CItemData@@QBEEXZ ; CItemData::GetSubType
  00027	0f b6 c0	 movzx	 eax, al
  0002a	83 e8 00	 sub	 eax, 0
  0002d	74 1e		 je	 SHORT $LN20@GetUseSoun
  0002f	83 e8 01	 sub	 eax, 1
  00032	74 0f		 je	 SHORT $LN21@GetUseSoun
  00034	83 e8 06	 sub	 eax, 6
  00037	75 5b		 jne	 SHORT $LN12@GetUseSoun

; 267  : 			{
; 268  : 				case CItemData::USE_ABILITY_UP:
; 269  : 					return USESOUND_POTION;

  00039	b8 06 00 00 00	 mov	 eax, 6
  0003e	5e		 pop	 esi

; 276  : 					break;
; 277  : 				default:
; 278  : 					return USESOUND_DEFAULT;		
; 279  : 					break;
; 280  : 			}
; 281  : 			break;			
; 282  : 		default:
; 283  : 			return USESOUND_DEFAULT;
; 284  : 			break;
; 285  : 	}
; 286  : 
; 287  : 	return USESOUND_DEFAULT;
; 288  : }

  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
$LN21@GetUseSoun:

; 273  : 					break;
; 274  : 				case CItemData::USE_TALISMAN:
; 275  : 					return USESOUND_PORTAL;

  00043	b8 07 00 00 00	 mov	 eax, 7
  00048	5e		 pop	 esi

; 276  : 					break;
; 277  : 				default:
; 278  : 					return USESOUND_DEFAULT;		
; 279  : 					break;
; 280  : 			}
; 281  : 			break;			
; 282  : 		default:
; 283  : 			return USESOUND_DEFAULT;
; 284  : 			break;
; 285  : 	}
; 286  : 
; 287  : 	return USESOUND_DEFAULT;
; 288  : }

  00049	5d		 pop	 ebp
  0004a	c2 04 00	 ret	 4
$LN20@GetUseSoun:

; 270  : 					break;
; 271  : 				case CItemData::USE_POTION:
; 272  : 					return USESOUND_NONE;

  0004d	33 c0		 xor	 eax, eax
  0004f	5e		 pop	 esi

; 276  : 					break;
; 277  : 				default:
; 278  : 					return USESOUND_DEFAULT;		
; 279  : 					break;
; 280  : 			}
; 281  : 			break;			
; 282  : 		default:
; 283  : 			return USESOUND_DEFAULT;
; 284  : 			break;
; 285  : 	}
; 286  : 
; 287  : 	return USESOUND_DEFAULT;
; 288  : }

  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
$LN14@GetUseSoun:

; 248  : 					break;
; 249  : 			}
; 250  : 			break;
; 251  : 		case CItemData::ITEM_TYPE_ARMOR:
; 252  : 			switch (c_rkItemData.GetSubType())

  00054	8b ce		 mov	 ecx, esi
  00056	e8 00 00 00 00	 call	 ?GetSubType@CItemData@@QBEEXZ ; CItemData::GetSubType
  0005b	84 c0		 test	 al, al
  0005d	74 10		 je	 SHORT $LN16@GetUseSoun
  0005f	2c 05		 sub	 al, 5
  00061	3c 01		 cmp	 al, 1
  00063	77 2f		 ja	 SHORT $LN12@GetUseSoun

; 253  : 			{
; 254  : 				case CItemData::ARMOR_NECK:
; 255  : 				case CItemData::ARMOR_EAR:
; 256  : 					return USESOUND_ACCESSORY;

  00065	b8 05 00 00 00	 mov	 eax, 5
  0006a	5e		 pop	 esi

; 276  : 					break;
; 277  : 				default:
; 278  : 					return USESOUND_DEFAULT;		
; 279  : 					break;
; 280  : 			}
; 281  : 			break;			
; 282  : 		default:
; 283  : 			return USESOUND_DEFAULT;
; 284  : 			break;
; 285  : 	}
; 286  : 
; 287  : 	return USESOUND_DEFAULT;
; 288  : }

  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
$LN16@GetUseSoun:

; 257  : 					break;
; 258  : 				case CItemData::ARMOR_BODY:
; 259  : 					return USESOUND_ARMOR;

  0006f	b8 02 00 00 00	 mov	 eax, 2
  00074	5e		 pop	 esi

; 276  : 					break;
; 277  : 				default:
; 278  : 					return USESOUND_DEFAULT;		
; 279  : 					break;
; 280  : 			}
; 281  : 			break;			
; 282  : 		default:
; 283  : 			return USESOUND_DEFAULT;
; 284  : 			break;
; 285  : 	}
; 286  : 
; 287  : 	return USESOUND_DEFAULT;
; 288  : }

  00075	5d		 pop	 ebp
  00076	c2 04 00	 ret	 4
$LN10@GetUseSoun:

; 236  : 	{
; 237  : 		case CItemData::ITEM_TYPE_WEAPON:
; 238  : 			switch (c_rkItemData.GetWeaponType())

  00079	8b ce		 mov	 ecx, esi
  0007b	e8 00 00 00 00	 call	 ?GetWeaponType@CItemData@@QBEKXZ ; CItemData::GetWeaponType
  00080	83 e8 02	 sub	 eax, 2
  00083	74 19		 je	 SHORT $LN11@GetUseSoun
  00085	83 e8 04	 sub	 eax, 4
  00088	74 0a		 je	 SHORT $LN12@GetUseSoun

; 245  : 					break;
; 246  : 				default:
; 247  : 					return USESOUND_WEAPON;

  0008a	b8 03 00 00 00	 mov	 eax, 3
  0008f	5e		 pop	 esi

; 276  : 					break;
; 277  : 				default:
; 278  : 					return USESOUND_DEFAULT;		
; 279  : 					break;
; 280  : 			}
; 281  : 			break;			
; 282  : 		default:
; 283  : 			return USESOUND_DEFAULT;
; 284  : 			break;
; 285  : 	}
; 286  : 
; 287  : 	return USESOUND_DEFAULT;
; 288  : }

  00090	5d		 pop	 ebp
  00091	c2 04 00	 ret	 4
$LN12@GetUseSoun:

; 242  : 					break;
; 243  : 				case CItemData::WEAPON_ARROW:
; 244  : 					return USESOUND_DEFAULT;

  00094	b8 01 00 00 00	 mov	 eax, 1
  00099	5e		 pop	 esi

; 276  : 					break;
; 277  : 				default:
; 278  : 					return USESOUND_DEFAULT;		
; 279  : 					break;
; 280  : 			}
; 281  : 			break;			
; 282  : 		default:
; 283  : 			return USESOUND_DEFAULT;
; 284  : 			break;
; 285  : 	}
; 286  : 
; 287  : 	return USESOUND_DEFAULT;
; 288  : }

  0009a	5d		 pop	 ebp
  0009b	c2 04 00	 ret	 4
$LN11@GetUseSoun:

; 239  : 			{
; 240  : 				case CItemData::WEAPON_BOW:
; 241  : 					return USESOUND_BOW;

  0009e	b8 04 00 00 00	 mov	 eax, 4
  000a3	5e		 pop	 esi

; 276  : 					break;
; 277  : 				default:
; 278  : 					return USESOUND_DEFAULT;		
; 279  : 					break;
; 280  : 			}
; 281  : 			break;			
; 282  : 		default:
; 283  : 			return USESOUND_DEFAULT;
; 284  : 			break;
; 285  : 	}
; 286  : 
; 287  : 	return USESOUND_DEFAULT;
; 288  : }

  000a4	5d		 pop	 ebp
  000a5	c2 04 00	 ret	 4
?__GetUseSoundType@CPythonItem@@IAEKABVCItemData@@@Z ENDP ; CPythonItem::__GetUseSoundType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?__Pick@CPythonItem@@IAEKABUtagPOINT@@@Z
_TEXT	SEGMENT
_fu$ = -16						; size = 4
_fv$ = -12						; size = 4
_ft$ = -8						; size = 4
_itor$ = -4						; size = 4
_c_rkPtMouse$ = 8					; size = 4
?__Pick@CPythonItem@@IAEKABUtagPOINT@@@Z PROC		; CPythonItem::__Pick, COMDAT
; _this$ = ecx

; 619  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  0000a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0000d	8b 30		 mov	 esi, DWORD PTR [eax]
  0000f	89 75 fc	 mov	 DWORD PTR _itor$[ebp], esi
  00012	3b f0		 cmp	 esi, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 623  : 	for (; itor != m_GroundItemInstanceMap.end(); ++itor)

  00014	74 2b		 je	 SHORT $LN3@Pick
$LL18@Pick:

; 624  : 	{
; 625  : 		TGroundItemInstance * pInstance = itor->second;

  00016	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]

; 626  : 
; 627  : 		if (pInstance->ThingInstance.Intersect(&fu, &fv, &ft))

  00019	8d 45 f8	 lea	 eax, DWORD PTR _ft$[ebp]
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR _fv$[ebp]
  00020	83 c1 3c	 add	 ecx, 60			; 0000003cH
  00023	50		 push	 eax
  00024	8d 45 f0	 lea	 eax, DWORD PTR _fu$[ebp]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ?Intersect@CGraphicThingInstance@@QAE_NPAM00@Z ; CGraphicThingInstance::Intersect
  0002d	84 c0		 test	 al, al
  0002f	75 2b		 jne	 SHORT $LN44@Pick
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 198  :         _Mybase::operator++();

  00031	8d 4d fc	 lea	 ecx, DWORD PTR _itor$[ebp]
  00034	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >,std::_Iterator_base0>::operator++

; 232  :         return this->_Ptr == _Right._Ptr;

  00039	8b 75 fc	 mov	 esi, DWORD PTR _itor$[ebp]
  0003c	3b 77 04	 cmp	 esi, DWORD PTR [edi+4]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 623  : 	for (; itor != m_GroundItemInstanceMap.end(); ++itor)

  0003f	75 d5		 jne	 SHORT $LL18@Pick
$LN3@Pick:

; 630  : 		}
; 631  : 	}
; 632  : 
; 633  : 	CPythonTextTail& rkTextTailMgr=CPythonTextTail::Instance();
; 634  : 	return rkTextTailMgr.Pick(c_rkPtMouse.x, c_rkPtMouse.y);

  00041	8b 45 08	 mov	 eax, DWORD PTR _c_rkPtMouse$[ebp]
  00044	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonTextTail@@@@0PAVCPythonTextTail@@A ; CSingleton<CPythonTextTail>::ms_singleton
  0004a	ff 70 04	 push	 DWORD PTR [eax+4]
  0004d	ff 30		 push	 DWORD PTR [eax]
  0004f	e8 00 00 00 00	 call	 ?Pick@CPythonTextTail@@QAEHHH@Z ; CPythonTextTail::Pick
  00054	5f		 pop	 edi

; 635  : }

  00055	5e		 pop	 esi
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 04 00	 ret	 4
$LN44@Pick:

; 628  : 		{
; 629  : 			return itor->first;

  0005c	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0005f	5f		 pop	 edi

; 635  : }

  00060	5e		 pop	 esi
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?__Pick@CPythonItem@@IAEKABUtagPOINT@@@Z ENDP		; CPythonItem::__Pick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?GetNoGradeNameDataPtr@CPythonItem@@QAEPAVCItemData@@K@Z
_TEXT	SEGMENT
_dwIndex$ = 8						; size = 4
?GetNoGradeNameDataPtr@CPythonItem@@QAEPAVCItemData@@K@Z PROC ; CPythonItem::GetNoGradeNameDataPtr, COMDAT
; _this$ = ecx

; 679  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00003	8b 81 04 01 00
	00		 mov	 eax, DWORD PTR [ecx+260]
  00009	8b 91 00 01 00
	00		 mov	 edx, DWORD PTR [ecx+256]
  0000f	2b c2		 sub	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 680  : 	if (dwIndex >= m_NoGradeNameItemData.size())

  00011	8b 4d 08	 mov	 ecx, DWORD PTR _dwIndex$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00014	c1 f8 02	 sar	 eax, 2
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 680  : 	if (dwIndex >= m_NoGradeNameItemData.size())

  00017	3b c8		 cmp	 ecx, eax
  00019	72 06		 jb	 SHORT $LN2@GetNoGrade

; 681  : 		return NULL;

  0001b	33 c0		 xor	 eax, eax

; 684  : }

  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
$LN2@GetNoGrade:

; 682  : 
; 683  : 	return m_NoGradeNameItemData[dwIndex];

  00021	8b 04 8a	 mov	 eax, DWORD PTR [edx+ecx*4]

; 684  : }

  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?GetNoGradeNameDataPtr@CPythonItem@@QAEPAVCItemData@@K@Z ENDP ; CPythonItem::GetNoGradeNameDataPtr
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?GetNoGradeNameDataCount@CPythonItem@@QAEKXZ
_TEXT	SEGMENT
?GetNoGradeNameDataCount@CPythonItem@@QAEKXZ PROC	; CPythonItem::GetNoGradeNameDataCount, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00000	8b 81 04 01 00
	00		 mov	 eax, DWORD PTR [ecx+260]
  00006	2b 81 00 01 00
	00		 sub	 eax, DWORD PTR [ecx+256]
  0000c	c1 f8 02	 sar	 eax, 2
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 676  : }

  0000f	c3		 ret	 0
?GetNoGradeNameDataCount@CPythonItem@@QAEKXZ ENDP	; CPythonItem::GetNoGradeNameDataCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?BuildNoGradeNameData@CPythonItem@@QAEXH@Z
_TEXT	SEGMENT
_iType$ = 8						; size = 4
?BuildNoGradeNameData@CPythonItem@@QAEXH@Z PROC		; CPythonItem::BuildNoGradeNameData, COMDAT
; _this$ = ecx

; 658  : 	/*
; 659  : 	CMapIterator<std::string, CItemData *> itor = CItemManager::Instance().GetItemNameMapIterator();
; 660  : 
; 661  : 	m_NoGradeNameItemData.clear();
; 662  : 	m_NoGradeNameItemData.reserve(1024);
; 663  : 
; 664  : 	while (++itor)
; 665  : 	{
; 666  : 		CItemData * pItemData = *itor;
; 667  : 		if (iType == pItemData->GetType())
; 668  : 			m_NoGradeNameItemData.push_back(pItemData);
; 669  : 	}
; 670  : 	*/
; 671  : }

  00000	c2 04 00	 ret	 4
?BuildNoGradeNameData@CPythonItem@@QAEXH@Z ENDP		; CPythonItem::BuildNoGradeNameData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?GetVirtualNumberOfGroundItem@CPythonItem@@QAEKK@Z
_TEXT	SEGMENT
__Loc$1 = -12						; size = 12
_dwVID$ = 8						; size = 4
?GetVirtualNumberOfGroundItem@CPythonItem@@QAEKK@Z PROC	; CPythonItem::GetVirtualNumberOfGroundItem, COMDAT
; _this$ = ecx

; 647  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00007	8d 45 08	 lea	 eax, DWORD PTR _dwVID$[ebp]
  0000a	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 648  : 	TGroundItemInstanceMap::iterator itor = m_GroundItemInstanceMap.find(dwVID);

  0000b	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0000e	8d 45 f4	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00011	8b ce		 mov	 ecx, esi
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00019	8b 4d fc	 mov	 ecx, DWORD PTR __Loc$1[ebp+8]
  0001c	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00020	75 19		 jne	 SHORT $LN39@GetVirtual
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  00022	8b 45 08	 mov	 eax, DWORD PTR _dwVID$[ebp]
  00025	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00028	72 11		 jb	 SHORT $LN39@GetVirtual

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0002a	3b 0e		 cmp	 ecx, DWORD PTR [esi]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 650  : 	if (itor == m_GroundItemInstanceMap.end())

  0002c	74 0d		 je	 SHORT $LN39@GetVirtual

; 652  : 	else
; 653  : 		return itor->second->dwVirtualNumber;

  0002e	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00031	5e		 pop	 esi
  00032	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 654  : }

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
$LN39@GetVirtual:

; 651  : 		return 0;

  0003b	33 c0		 xor	 eax, eax
  0003d	5e		 pop	 esi

; 654  : }

  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c2 04 00	 ret	 4
?GetVirtualNumberOfGroundItem@CPythonItem@@QAEKK@Z ENDP	; CPythonItem::GetVirtualNumberOfGroundItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?GetCloseMoney@CPythonItem@@QAE_NABUD3DXVECTOR3@@PAKK@Z
_TEXT	SEGMENT
_dwxDistance$1$ = -16					; size = 4
_dwCloseItemID$1$ = -12					; size = 4
_i$ = -8						; size = 4
_dwCloseItemDistance$1$ = -4				; size = 4
_c_rPixelPosition$ = 8					; size = 4
_pdwItemID$ = 12					; size = 4
_dwDistance$ = 16					; size = 4
?GetCloseMoney@CPythonItem@@QAE_NABUD3DXVECTOR3@@PAKK@Z PROC ; CPythonItem::GetCloseMoney, COMDAT
; _this$ = ecx

; 541  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  00008	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 543  : 	DWORD dwCloseItemDistance = 1000 * 1000;

  0000b	ba 40 42 0f 00	 mov	 edx, 1000000		; 000f4240H
  00010	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _dwCloseItemID$1$[ebp], 0
  00017	89 55 fc	 mov	 DWORD PTR _dwCloseItemDistance$1$[ebp], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0001a	8b 37		 mov	 esi, DWORD PTR [edi]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 546  : 	for (i = m_GroundItemInstanceMap.begin(); i != m_GroundItemInstanceMap.end(); ++i)

  0001c	89 75 f8	 mov	 DWORD PTR _i$[ebp], esi
  0001f	3b f7		 cmp	 esi, edi
  00021	74 68		 je	 SHORT $LN3@GetCloseMo
$LL26@GetCloseMo:

; 547  : 	{
; 548  : 		TGroundItemInstance * pInstance = i->second;

  00023	8b 46 14	 mov	 eax, DWORD PTR [esi+20]

; 549  : 
; 550  : 		if (pInstance->dwVirtualNumber!=VNUM_MONEY)

  00026	83 78 04 01	 cmp	 DWORD PTR [eax+4], 1
  0002a	75 4d		 jne	 SHORT $LN2@GetCloseMo

; 551  : 			continue;
; 552  : 
; 553  : 		DWORD dwxDistance = DWORD(c_rPixelPosition.x-pInstance->v3EndPosition.x);

  0002c	8b 4d 08	 mov	 ecx, DWORD PTR _c_rPixelPosition$[ebp]
  0002f	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00033	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  00038	e8 00 00 00 00	 call	 __ftoui3
  0003d	89 45 f0	 mov	 DWORD PTR _dwxDistance$1$[ebp], eax

; 554  : 		DWORD dwyDistance = DWORD(c_rPixelPosition.y-(-pInstance->v3EndPosition.y));

  00040	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00043	f3 0f 10 48 0c	 movss	 xmm1, DWORD PTR [eax+12]
  00048	8b 45 08	 mov	 eax, DWORD PTR _c_rPixelPosition$[ebp]
  0004b	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  00052	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00057	f3 0f 5c c1	 subss	 xmm0, xmm1
  0005b	e8 00 00 00 00	 call	 __ftoui3

; 555  : 		DWORD dwDistance = DWORD(dwxDistance*dwxDistance + dwyDistance*dwyDistance);
; 556  : 
; 557  : 		if (dwxDistance*dwxDistance + dwyDistance*dwyDistance < dwCloseItemDistance)

  00060	8b 4d f0	 mov	 ecx, DWORD PTR _dwxDistance$1$[ebp]
  00063	0f af c0	 imul	 eax, eax
  00066	0f af c9	 imul	 ecx, ecx
  00069	03 c1		 add	 eax, ecx
  0006b	3b 45 fc	 cmp	 eax, DWORD PTR _dwCloseItemDistance$1$[ebp]
  0006e	73 09		 jae	 SHORT $LN2@GetCloseMo

; 558  : 		{
; 559  : 			dwCloseItemID = i->first;

  00070	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00073	89 4d f4	 mov	 DWORD PTR _dwCloseItemID$1$[ebp], ecx

; 560  : 			dwCloseItemDistance = dwDistance;

  00076	89 45 fc	 mov	 DWORD PTR _dwCloseItemDistance$1$[ebp], eax
$LN2@GetCloseMo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 198  :         _Mybase::operator++();

  00079	8d 4d f8	 lea	 ecx, DWORD PTR _i$[ebp]
  0007c	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >,std::_Iterator_base0>::operator++

; 232  :         return this->_Ptr == _Right._Ptr;

  00081	8b 75 f8	 mov	 esi, DWORD PTR _i$[ebp]
  00084	3b f7		 cmp	 esi, edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 546  : 	for (i = m_GroundItemInstanceMap.begin(); i != m_GroundItemInstanceMap.end(); ++i)

  00086	75 9b		 jne	 SHORT $LL26@GetCloseMo
  00088	8b 55 fc	 mov	 edx, DWORD PTR _dwCloseItemDistance$1$[ebp]
$LN3@GetCloseMo:

; 561  : 		}
; 562  : 	}
; 563  : 
; 564  : 	if (dwCloseItemDistance>float(dwDistance)*float(dwDistance))

  0008b	8b 45 10	 mov	 eax, DWORD PTR _dwDistance$[ebp]
  0008e	5f		 pop	 edi
  0008f	5e		 pop	 esi
  00090	66 0f 6e c0	 movd	 xmm0, eax
  00094	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00098	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0009b	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  000a4	66 0f 5a c8	 cvtpd2ps xmm1, xmm0
  000a8	66 0f 6e c2	 movd	 xmm0, edx
  000ac	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000b0	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  000b3	f3 0f 59 c9	 mulss	 xmm1, xmm1
  000b7	f2 0f 58 04 d5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  000c0	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  000c4	0f 2f c1	 comiss	 xmm0, xmm1
  000c7	76 08		 jbe	 SHORT $LN7@GetCloseMo

; 565  : 		return false;

  000c9	32 c0		 xor	 al, al

; 570  : }

  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 0c 00	 ret	 12			; 0000000cH
$LN7@GetCloseMo:

; 566  : 
; 567  : 	*pdwItemID=dwCloseItemID;

  000d1	8b 45 0c	 mov	 eax, DWORD PTR _pdwItemID$[ebp]
  000d4	8b 4d f4	 mov	 ecx, DWORD PTR _dwCloseItemID$1$[ebp]
  000d7	89 08		 mov	 DWORD PTR [eax], ecx

; 568  : 
; 569  : 	return true;

  000d9	b0 01		 mov	 al, 1

; 570  : }

  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 0c 00	 ret	 12			; 0000000cH
?GetCloseMoney@CPythonItem@@QAE_NABUD3DXVECTOR3@@PAKK@Z ENDP ; CPythonItem::GetCloseMoney
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?GetCloseItem@CPythonItem@@QAE_NABUD3DXVECTOR3@@PAKK@Z
_TEXT	SEGMENT
tv362 = -20						; size = 4
_dwxDistance$1$ = -16					; size = 4
_dwCloseItemID$1$ = -12					; size = 4
_i$ = -8						; size = 4
_dwCloseItemDistance$1$ = -4				; size = 4
_c_rPixelPosition$ = 8					; size = 4
_pdwItemID$ = 12					; size = 4
_dwDistance$ = 16					; size = 4
?GetCloseItem@CPythonItem@@QAE_NABUD3DXVECTOR3@@PAKK@Z PROC ; CPythonItem::GetCloseItem, COMDAT
; _this$ = ecx

; 573  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  00008	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 575  : 	DWORD dwCloseItemDistance = 1000 * 1000;

  0000b	ba 40 42 0f 00	 mov	 edx, 1000000		; 000f4240H
  00010	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _dwCloseItemID$1$[ebp], 0
  00017	89 55 fc	 mov	 DWORD PTR _dwCloseItemDistance$1$[ebp], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0001a	8b 37		 mov	 esi, DWORD PTR [edi]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 578  : 	for (i = m_GroundItemInstanceMap.begin(); i != m_GroundItemInstanceMap.end(); ++i)

  0001c	89 75 f8	 mov	 DWORD PTR _i$[ebp], esi
  0001f	3b f7		 cmp	 esi, edi
  00021	74 71		 je	 SHORT $LN3@GetCloseIt

; 583  : 		DWORD dwyDistance = DWORD(c_rPixelPosition.y-(-pInstance->v3EndPosition.y));

  00023	8b 45 08	 mov	 eax, DWORD PTR _c_rPixelPosition$[ebp]
$LL25@GetCloseIt:

; 579  : 	{
; 580  : 		TGroundItemInstance * pInstance = i->second;

  00026	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]

; 581  : 
; 582  : 		DWORD dwxDistance = DWORD(c_rPixelPosition.x-pInstance->v3EndPosition.x);

  00029	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0002d	89 55 ec	 mov	 DWORD PTR tv362[ebp], edx
  00030	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00035	e8 00 00 00 00	 call	 __ftoui3

; 583  : 		DWORD dwyDistance = DWORD(c_rPixelPosition.y-(-pInstance->v3EndPosition.y));

  0003a	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0003d	89 45 f0	 mov	 DWORD PTR _dwxDistance$1$[ebp], eax
  00040	f3 0f 10 49 0c	 movss	 xmm1, DWORD PTR [ecx+12]
  00045	8b 4d 08	 mov	 ecx, DWORD PTR _c_rPixelPosition$[ebp]
  00048	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  0004f	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00054	f3 0f 5c c1	 subss	 xmm0, xmm1
  00058	e8 00 00 00 00	 call	 __ftoui3

; 584  : 		DWORD dwDistance = DWORD(dwxDistance*dwxDistance + dwyDistance*dwyDistance);
; 585  : 
; 586  : 		if (dwxDistance*dwxDistance + dwyDistance*dwyDistance < dwCloseItemDistance)

  0005d	8b 4d f0	 mov	 ecx, DWORD PTR _dwxDistance$1$[ebp]
  00060	0f af c0	 imul	 eax, eax
  00063	0f af c9	 imul	 ecx, ecx
  00066	03 c8		 add	 ecx, eax
  00068	3b 4d fc	 cmp	 ecx, DWORD PTR _dwCloseItemDistance$1$[ebp]
  0006b	73 06		 jae	 SHORT $LN2@GetCloseIt

; 587  : 		{
; 588  : 			dwCloseItemID = i->first;

  0006d	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00070	89 45 f4	 mov	 DWORD PTR _dwCloseItemID$1$[ebp], eax
$LN2@GetCloseIt:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 198  :         _Mybase::operator++();

  00073	3b 4d ec	 cmp	 ecx, DWORD PTR tv362[ebp]
  00076	8b c1		 mov	 eax, ecx
  00078	8d 4d f8	 lea	 ecx, DWORD PTR _i$[ebp]
  0007b	0f 43 45 ec	 cmovae	 eax, DWORD PTR tv362[ebp]
  0007f	89 45 fc	 mov	 DWORD PTR _dwCloseItemDistance$1$[ebp], eax
  00082	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >,std::_Iterator_base0>::operator++

; 232  :         return this->_Ptr == _Right._Ptr;

  00087	8b 75 f8	 mov	 esi, DWORD PTR _i$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 578  : 	for (i = m_GroundItemInstanceMap.begin(); i != m_GroundItemInstanceMap.end(); ++i)

  0008a	8b 45 08	 mov	 eax, DWORD PTR _c_rPixelPosition$[ebp]
  0008d	8b 55 fc	 mov	 edx, DWORD PTR _dwCloseItemDistance$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 232  :         return this->_Ptr == _Right._Ptr;

  00090	3b f7		 cmp	 esi, edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 578  : 	for (i = m_GroundItemInstanceMap.begin(); i != m_GroundItemInstanceMap.end(); ++i)

  00092	75 92		 jne	 SHORT $LL25@GetCloseIt
$LN3@GetCloseIt:

; 589  : 			dwCloseItemDistance = dwDistance;
; 590  : 		}
; 591  : 	}
; 592  : 
; 593  : 	if (dwCloseItemDistance>float(dwDistance)*float(dwDistance))

  00094	8b 45 10	 mov	 eax, DWORD PTR _dwDistance$[ebp]
  00097	5f		 pop	 edi
  00098	5e		 pop	 esi
  00099	66 0f 6e c0	 movd	 xmm0, eax
  0009d	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000a1	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000a4	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  000ad	66 0f 5a c8	 cvtpd2ps xmm1, xmm0
  000b1	66 0f 6e c2	 movd	 xmm0, edx
  000b5	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000b9	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  000bc	f3 0f 59 c9	 mulss	 xmm1, xmm1
  000c0	f2 0f 58 04 d5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  000c9	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  000cd	0f 2f c1	 comiss	 xmm0, xmm1
  000d0	76 08		 jbe	 SHORT $LN6@GetCloseIt

; 594  : 		return false;

  000d2	32 c0		 xor	 al, al

; 599  : }

  000d4	8b e5		 mov	 esp, ebp
  000d6	5d		 pop	 ebp
  000d7	c2 0c 00	 ret	 12			; 0000000cH
$LN6@GetCloseIt:

; 595  : 
; 596  : 	*pdwItemID=dwCloseItemID;

  000da	8b 45 0c	 mov	 eax, DWORD PTR _pdwItemID$[ebp]
  000dd	8b 4d f4	 mov	 ecx, DWORD PTR _dwCloseItemID$1$[ebp]
  000e0	89 08		 mov	 DWORD PTR [eax], ecx

; 597  : 
; 598  : 	return true;

  000e2	b0 01		 mov	 al, 1

; 599  : }

  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c2 0c 00	 ret	 12			; 0000000cH
?GetCloseItem@CPythonItem@@QAE_NABUD3DXVECTOR3@@PAKK@Z ENDP ; CPythonItem::GetCloseItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?GetPickedItemID@CPythonItem@@QAE_NPAK@Z
_TEXT	SEGMENT
_pdwPickedItemID$ = 8					; size = 4
?GetPickedItemID@CPythonItem@@QAE_NPAK@Z PROC		; CPythonItem::GetPickedItemID, COMDAT
; _this$ = ecx

; 638  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 639  : 	if (INVALID_ID==m_dwPickedItemID)

  00003	8b 49 34	 mov	 ecx, DWORD PTR [ecx+52]
  00006	83 f9 ff	 cmp	 ecx, -1
  00009	75 06		 jne	 SHORT $LN2@GetPickedI

; 640  : 		return false;

  0000b	32 c0		 xor	 al, al

; 644  : }

  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
$LN2@GetPickedI:

; 641  : 
; 642  : 	*pdwPickedItemID=m_dwPickedItemID;

  00011	8b 45 08	 mov	 eax, DWORD PTR _pdwPickedItemID$[ebp]
  00014	89 08		 mov	 DWORD PTR [eax], ecx

; 643  : 	return true;

  00016	b0 01		 mov	 al, 1

; 644  : }

  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?GetPickedItemID@CPythonItem@@QAE_NPAK@Z ENDP		; CPythonItem::GetPickedItemID
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?GetGroundItemPosition@CPythonItem@@QAEHKPAUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
__Loc$1 = -12						; size = 12
_dwVirtualID$ = 8					; size = 4
_pPosition$ = 12					; size = 4
?GetGroundItemPosition@CPythonItem@@QAEHKPAUD3DXVECTOR3@@@Z PROC ; CPythonItem::GetGroundItemPosition, COMDAT
; _this$ = ecx

; 602  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00007	8d 45 08	 lea	 eax, DWORD PTR _dwVirtualID$[ebp]
  0000a	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 603  : 	TGroundItemInstanceMap::iterator itor = m_GroundItemInstanceMap.find(dwVirtualID);

  0000b	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0000e	8d 45 f4	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00011	8b ce		 mov	 ecx, esi
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00019	8b 4d fc	 mov	 ecx, DWORD PTR __Loc$1[ebp+8]
  0001c	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00020	75 41		 jne	 SHORT $LN38@GetGroundI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  00022	8b 45 08	 mov	 eax, DWORD PTR _dwVirtualID$[ebp]
  00025	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00028	72 39		 jb	 SHORT $LN38@GetGroundI

; 232  :         return this->_Ptr == _Right._Ptr;

  0002a	39 0e		 cmp	 DWORD PTR [esi], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 604  : 	if (m_GroundItemInstanceMap.end() == itor)

  0002c	74 35		 je	 SHORT $LN38@GetGroundI

; 606  : 
; 607  : 	TGroundItemInstance * pInstance = itor->second;

  0002e	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]

; 608  : 
; 609  : 	const D3DXVECTOR3& rkD3DVct3=pInstance->ThingInstance.GetPosition();

  00031	8d 49 3c	 lea	 ecx, DWORD PTR [ecx+60]
  00034	e8 00 00 00 00	 call	 ?GetPosition@CGraphicObjectInstance@@QBEABUD3DXVECTOR3@@XZ ; CGraphicObjectInstance::GetPosition

; 610  : 
; 611  : 	pPosition->x=+rkD3DVct3.x;

  00039	8b 55 0c	 mov	 edx, DWORD PTR _pPosition$[ebp]
  0003c	5e		 pop	 esi
  0003d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003f	89 0a		 mov	 DWORD PTR [edx], ecx

; 612  : 	pPosition->y=-rkD3DVct3.y;

  00041	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00046	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0004d	f3 0f 11 42 04	 movss	 DWORD PTR [edx+4], xmm0

; 613  : 	pPosition->z=+rkD3DVct3.z;

  00052	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00055	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 614  : 
; 615  : 	return TRUE;

  00058	b8 01 00 00 00	 mov	 eax, 1

; 616  : }

  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c2 08 00	 ret	 8
$LN38@GetGroundI:

; 605  : 		return FALSE;

  00063	33 c0		 xor	 eax, eax
  00065	5e		 pop	 esi

; 616  : }

  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 08 00	 ret	 8
?GetGroundItemPosition@CPythonItem@@QAEHKPAUD3DXVECTOR3@@@Z ENDP ; CPythonItem::GetGroundItemPosition
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?GetOwnership@CPythonItem@@QAE_NKPAPBD@Z
_TEXT	SEGMENT
__Loc$1 = -12						; size = 12
_dwVID$ = 8						; size = 4
_c_pszName$ = 12					; size = 4
?GetOwnership@CPythonItem@@QAE_NKPAPBD@Z PROC		; CPythonItem::GetOwnership, COMDAT
; _this$ = ecx

; 497  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00007	8d 45 08	 lea	 eax, DWORD PTR _dwVID$[ebp]
  0000a	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 498  : 	TGroundItemInstanceMap::iterator itor = m_GroundItemInstanceMap.find(dwVID);

  0000b	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0000e	8d 45 f4	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00011	8b ce		 mov	 ecx, esi
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00019	8b 4d fc	 mov	 ecx, DWORD PTR __Loc$1[ebp+8]
  0001c	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00020	75 2b		 jne	 SHORT $LN45@GetOwnersh
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  00022	8b 45 08	 mov	 eax, DWORD PTR _dwVID$[ebp]
  00025	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00028	72 23		 jb	 SHORT $LN45@GetOwnersh

; 232  :         return this->_Ptr == _Right._Ptr;

  0002a	39 0e		 cmp	 DWORD PTR [esi], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 500  : 	if (m_GroundItemInstanceMap.end() == itor)

  0002c	74 1f		 je	 SHORT $LN45@GetOwnersh
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3752 :         return _Mypair._Myval2._Myptr();

  0002e	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00031	81 c1 2c 02 00
	00		 add	 ecx, 556		; 0000022cH

; 2227 :         return _BUF_SIZE <= _Myres;

  00037	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2219 :         if (_Large_string_engaged()) {

  0003b	72 02		 jb	 SHORT $LN40@GetOwnersh

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN40@GetOwnersh:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 504  : 	*c_pszName = pGroundItemInstance->stOwnership.c_str();

  0003f	8b 45 0c	 mov	 eax, DWORD PTR _c_pszName$[ebp]
  00042	5e		 pop	 esi
  00043	89 08		 mov	 DWORD PTR [eax], ecx

; 505  : 
; 506  : 	return true;

  00045	b0 01		 mov	 al, 1

; 507  : }

  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 08 00	 ret	 8
$LN45@GetOwnersh:

; 501  : 		return false;

  0004d	32 c0		 xor	 al, al
  0004f	5e		 pop	 esi

; 507  : }

  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 08 00	 ret	 8
?GetOwnership@CPythonItem@@QAE_NKPAPBD@Z ENDP		; CPythonItem::GetOwnership
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?SetOwnership@CPythonItem@@QAEXKPBD@Z
_TEXT	SEGMENT
__Loc$1 = -12						; size = 12
_dwVID$ = 8						; size = 4
_c_pszName$ = 12					; size = 4
?SetOwnership@CPythonItem@@QAEXKPBD@Z PROC		; CPythonItem::SetOwnership, COMDAT
; _this$ = ecx

; 483  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00007	8d 45 08	 lea	 eax, DWORD PTR _dwVID$[ebp]
  0000a	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 484  : 	TGroundItemInstanceMap::iterator itor = m_GroundItemInstanceMap.find(dwVID);

  0000b	8d 71 04	 lea	 esi, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  0000e	8d 45 f4	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00011	8b ce		 mov	 ecx, esi
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00019	8b 55 fc	 mov	 edx, DWORD PTR __Loc$1[ebp+8]
  0001c	80 7a 0d 00	 cmp	 BYTE PTR [edx+13], 0
  00020	75 3e		 jne	 SHORT $LN1@SetOwnersh
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  00022	57		 push	 edi
  00023	8b 7d 08	 mov	 edi, DWORD PTR _dwVID$[ebp]
  00026	3b 7a 10	 cmp	 edi, DWORD PTR [edx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00029	72 34		 jb	 SHORT $LN43@SetOwnersh

; 232  :         return this->_Ptr == _Right._Ptr;

  0002b	39 16		 cmp	 DWORD PTR [esi], edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 486  : 	if (m_GroundItemInstanceMap.end() == itor)

  0002d	74 30		 je	 SHORT $LN43@SetOwnersh
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 389  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0002f	8b 75 0c	 mov	 esi, DWORD PTR _c_pszName$[ebp]
  00032	8b ce		 mov	 ecx, esi
  00034	53		 push	 ebx
  00035	8d 59 01	 lea	 ebx, DWORD PTR [ecx+1]
$LL42@SetOwnersh:
  00038	8a 01		 mov	 al, BYTE PTR [ecx]
  0003a	41		 inc	 ecx
  0003b	84 c0		 test	 al, al
  0003d	75 f9		 jne	 SHORT $LL42@SetOwnersh
  0003f	2b cb		 sub	 ecx, ebx

; 3062 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00041	51		 push	 ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 490  : 	pGroundItemInstance->stOwnership.assign(c_pszName);

  00042	8b 4a 14	 mov	 ecx, DWORD PTR [edx+20]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3062 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00045	56		 push	 esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 490  : 	pGroundItemInstance->stOwnership.assign(c_pszName);

  00046	81 c1 2c 02 00
	00		 add	 ecx, 556		; 0000022cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3062 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0004c	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 493  : 	rkTextTail.SetItemTextTailOwner(dwVID, c_pszName);

  00051	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonTextTail@@@@0PAVCPythonTextTail@@A ; CSingleton<CPythonTextTail>::ms_singleton
  00057	56		 push	 esi
  00058	57		 push	 edi
  00059	e8 00 00 00 00	 call	 ?SetItemTextTailOwner@CPythonTextTail@@QAEXKPBD@Z ; CPythonTextTail::SetItemTextTailOwner
  0005e	5b		 pop	 ebx
$LN43@SetOwnersh:
  0005f	5f		 pop	 edi
$LN1@SetOwnersh:
  00060	5e		 pop	 esi

; 494  : }

  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 08 00	 ret	 8
?SetOwnership@CPythonItem@@QAEXKPBD@Z ENDP		; CPythonItem::SetOwnership
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?DeleteItem@CPythonItem@@QAEXK@Z
_TEXT	SEGMENT
__Loc$1 = -16						; size = 12
_this$1$ = -4						; size = 4
_pGroundItemInstance$1$ = 8				; size = 4
_pkData$ = 8						; size = 4
_dwVirtualID$ = 8					; size = 4
?DeleteItem@CPythonItem@@QAEXK@Z PROC			; CPythonItem::DeleteItem, COMDAT
; _this$ = ecx

; 525  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	8b c1		 mov	 eax, ecx
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax

; 526  : 	TGroundItemInstanceMap::iterator itor = m_GroundItemInstanceMap.find(dwVirtualID);

  0000d	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00010	8d 45 08	 lea	 eax, DWORD PTR _dwVirtualID$[ebp]
  00013	8b cf		 mov	 ecx, edi
  00015	50		 push	 eax
  00016	8d 45 f0	 lea	 eax, DWORD PTR __Loc$1[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> >,0> >::_Find_lower_bound<unsigned long>

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0001f	8b 75 f8	 mov	 esi, DWORD PTR __Loc$1[ebp+8]
  00022	80 7e 0d 00	 cmp	 BYTE PTR [esi+13], 0
  00026	75 60		 jne	 SHORT $LN1@DeleteItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  00028	53		 push	 ebx
  00029	8b 5d 08	 mov	 ebx, DWORD PTR _dwVirtualID$[ebp]
  0002c	3b 5e 10	 cmp	 ebx, DWORD PTR [esi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0002f	72 56		 jb	 SHORT $LN69@DeleteItem

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00031	39 37		 cmp	 DWORD PTR [edi], esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 527  : 	if (m_GroundItemInstanceMap.end() == itor)

  00033	74 52		 je	 SHORT $LN69@DeleteItem

; 528  : 		return;
; 529  : 
; 530  : 	TGroundItemInstance * pGroundItemInstance = itor->second;

  00035	8b 46 14	 mov	 eax, DWORD PTR [esi+20]

; 531  : 	pGroundItemInstance->Clear();

  00038	8b c8		 mov	 ecx, eax
  0003a	89 45 08	 mov	 DWORD PTR _pGroundItemInstance$1$[ebp], eax
  0003d	e8 00 00 00 00	 call	 ?Clear@SGroundItemInstance@CPythonItem@@QAEXXZ ; CPythonItem::SGroundItemInstance::Clear
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 81   : 			m_kVct_pkFree.push_back(pkData);

  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$1$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 532  : 	m_GroundItemInstancePool.Free(pGroundItemInstance);

  00045	8b 55 08	 mov	 edx, DWORD PTR _pGroundItemInstance$1$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 81   : 			m_kVct_pkFree.push_back(pkData);

  00048	83 c1 1c	 add	 ecx, 28			; 0000001cH
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 532  : 	m_GroundItemInstancePool.Free(pGroundItemInstance);

  0004b	89 55 08	 mov	 DWORD PTR _pkData$[ebp], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0004e	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00051	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
  00054	74 08		 je	 SHORT $LN42@DeleteItem

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00056	89 10		 mov	 DWORD PTR [eax], edx

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00058	83 41 04 04	 add	 DWORD PTR [ecx+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0005c	eb 0a		 jmp	 SHORT $LN41@DeleteItem
$LN42@DeleteItem:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0005e	8d 55 08	 lea	 edx, DWORD PTR _pkData$[ebp]
  00061	52		 push	 edx
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSGroundItemInstance@CPythonItem@@@?$vector@PAUSGroundItemInstance@CPythonItem@@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@QAEPAPAUSGroundItemInstance@CPythonItem@@QAPAU23@ABQAU23@@Z ; std::vector<CPythonItem::SGroundItemInstance *,std::allocator<CPythonItem::SGroundItemInstance *> >::_Emplace_reallocate<CPythonItem::SGroundItemInstance * const &>
$LN41@DeleteItem:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1389 :         _Nodeptr _Erasednode = _Scary->_Extract(_Where); // node to erase

  00068	56		 push	 esi
  00069	8b cf		 mov	 ecx, edi
  0006b	e8 00 00 00 00	 call	 ?_Extract@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Extract
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00070	6a 18		 push	 24			; 00000018H
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 536  : 	CPythonTextTail::Instance().DeleteItemTextTail(dwVirtualID);

  00078	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonTextTail@@@@0PAVCPythonTextTail@@A ; CSingleton<CPythonTextTail>::ms_singleton
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  0007e	83 c4 08	 add	 esp, 8
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 536  : 	CPythonTextTail::Instance().DeleteItemTextTail(dwVirtualID);

  00081	53		 push	 ebx
  00082	e8 00 00 00 00	 call	 ?DeleteItemTextTail@CPythonTextTail@@QAEXK@Z ; CPythonTextTail::DeleteItemTextTail
$LN69@DeleteItem:
  00087	5b		 pop	 ebx
$LN1@DeleteItem:
  00088	5f		 pop	 edi

; 537  : }

  00089	5e		 pop	 esi
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 04 00	 ret	 4
?DeleteItem@CPythonItem@@QAEXK@Z ENDP			; CPythonItem::DeleteItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\pythonitem.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?CreateItem@CPythonItem@@QAEXKKMMM_N@Z
_TEXT	SEGMENT
$T2 = -256						; size = 16
$T3 = -256						; size = 16
tv1982 = -240						; size = 16
_q$4 = -240						; size = 16
_this$GSCopy$1$ = -212					; size = 4
_this$1$ = -212						; size = 4
$T5 = -208						; size = 4
_pItemData$ = -204					; size = 4
$T6 = -200						; size = 4
_z$GSCopy$ = -200					; size = 4
_fx$ = -200						; size = 4
_fx$ = -200						; size = 4
_fy$ = -200						; size = 4
$T7 = -200						; size = 4
_pkNewData$8 = -200					; size = 4
$T9 = -196						; size = 8
$T10 = -196						; size = 8
_rot$1$ = -192						; size = 4
_pItemModel$1$ = -192					; size = 4
$T11 = -192						; size = 1
tv2188 = -192						; size = 4
tv2132 = -192						; size = 4
tv2076 = -192						; size = 4
tv1902 = -192						; size = 4
tv1882 = -192						; size = 4
tv1856 = -192						; size = 4
tv1830 = -192						; size = 4
_fz$ = -192						; size = 4
_fy$ = -192						; size = 4
_fx$ = -192						; size = 4
_y$GSCopy$1$ = -188					; size = 4
__Myhead$12 = -188					; size = 4
_fy$ = -188						; size = 4
_fz$ = -188						; size = 4
_fz$ = -188						; size = 4
_rot$13 = -188						; size = 4
_mat$14 = -184						; size = 64
_vMax$15 = -116						; size = 12
_normal$ = -104						; size = 12
_v3Adjust$16 = -92					; size = 12
$T17 = -92						; size = 12
_vMin$18 = -80						; size = 12
$T19 = -80						; size = 12
$T20 = -68						; size = 12
$T21 = -68						; size = 12
$T22 = -68						; size = 12
$T23 = -68						; size = 12
__Loc$24 = -56						; size = 12
$T25 = -56						; size = 12
$T26 = -56						; size = 12
$T27 = -56						; size = 12
$T28 = -56						; size = 12
$T29 = -56						; size = 12
$T30 = -56						; size = 12
_f$31 = -44						; size = 24
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_dwVirtualID$ = 8					; size = 4
_dwVirtualNumber$ = 12					; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_z$ = 24						; size = 4
_bDrop$ = 28						; size = 1
?CreateItem@CPythonItem@@QAEXKKMMM_N@Z PROC		; CPythonItem::CreateItem, COMDAT
; _this$ = ecx

; 291  : {

  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	6a ff		 push	 -1
  00018	68 00 00 00 00	 push	 __ehhandler$?CreateItem@CPythonItem@@QAEXKKMMM_N@Z
  0001d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00023	50		 push	 eax
  00024	53		 push	 ebx
  00025	81 ec f8 00 00
	00		 sub	 esp, 248		; 000000f8H
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00035	56		 push	 esi
  00036	57		 push	 edi
  00037	50		 push	 eax
  00038	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00041	8b f1		 mov	 esi, ecx
  00043	89 b5 2c ff ff
	ff		 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi
  00049	f3 0f 10 43 10	 movss	 xmm0, DWORD PTR _x$[ebx]

; 292  : 	//CItemManager& rkItemMgr=CItemManager::Instance();
; 293  : 
; 294  : 	CItemData * pItemData;
; 295  : 	if (!CItemManager::Instance().GetItemDataPointer(dwVirtualNumber, &pItemData))

  0004e	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _pItemData$[ebp]
  00054	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A ; CSingleton<CItemManager>::ms_singleton
  0005a	0f 29 85 10 ff
	ff ff		 movaps	 XMMWORD PTR tv1982[ebp], xmm0
  00061	f3 0f 10 43 14	 movss	 xmm0, DWORD PTR _y$[ebx]
  00066	50		 push	 eax
  00067	ff 73 0c	 push	 DWORD PTR _dwVirtualNumber$[ebx]
  0006a	f3 0f 11 85 44
	ff ff ff	 movss	 DWORD PTR _y$GSCopy$1$[ebp], xmm0
  00072	f3 0f 10 43 18	 movss	 xmm0, DWORD PTR _z$[ebx]
  00077	f3 0f 11 85 30
	ff ff ff	 movss	 DWORD PTR $T5[ebp], xmm0
  0007f	e8 00 00 00 00	 call	 ?GetItemDataPointer@CItemManager@@QAEHKPAPAVCItemData@@@Z ; CItemManager::GetItemDataPointer
  00084	85 c0		 test	 eax, eax
  00086	0f 84 92 08 00
	00		 je	 $LN1@CreateItem

; 296  : 		return;
; 297  : 
; 298  : 	CGraphicThing* pItemModel = pItemData->GetDropModelThing();

  0008c	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR _pItemData$[ebp]
  00092	e8 00 00 00 00	 call	 ?GetDropModelThing@CItemData@@QAEPAVCGraphicThing@@XZ ; CItemData::GetDropModelThing
  00097	89 85 40 ff ff
	ff		 mov	 DWORD PTR _pItemModel$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  0009d	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 63   : 			if (m_kVct_pkFree.empty())

  000a0	39 46 1c	 cmp	 DWORD PTR [esi+28], eax
  000a3	0f 85 82 00 00
	00		 jne	 $LN23@CreateItem

; 65   : 				T* pkNewData=new T;

  000a9	68 44 02 00 00	 push	 580			; 00000244H
  000ae	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000b3	8b f8		 mov	 edi, eax
  000b5	83 c4 04	 add	 esp, 4
  000b8	89 bd 38 ff ff
	ff		 mov	 DWORD PTR $T7[ebp], edi
  000be	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000c5	85 ff		 test	 edi, edi
  000c7	74 2b		 je	 SHORT $LN25@CreateItem
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\pythonitem.h

; 71   : 			SGroundItemInstance() {}

  000c9	8d 4f 3c	 lea	 ecx, DWORD PTR [edi+60]
  000cc	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7SGroundItemInstance@CPythonItem@@6B@
  000d2	e8 00 00 00 00	 call	 ??0CGraphicThingInstance@@QAE@XZ ; CGraphicThingInstance::CGraphicThingInstance
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4377 :         _Mypair._Myval2._Mysize = 0;

  000d7	c7 87 3c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [edi+572], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000e1	c7 87 40 02 00
	00 0f 00 00 00	 mov	 DWORD PTR [edi+576], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000eb	c6 87 2c 02 00
	00 00		 mov	 BYTE PTR [edi+556], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 65   : 				T* pkNewData=new T;

  000f2	eb 02		 jmp	 SHORT $LN26@CreateItem
$LN25@CreateItem:
  000f4	33 ff		 xor	 edi, edi
$LN26@CreateItem:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  000f6	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 66   : 				m_kVct_pkData.push_back(pkNewData);

  000f9	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  000fc	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00103	89 bd 38 ff ff
	ff		 mov	 DWORD PTR _pkNewData$8[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00109	3b 46 18	 cmp	 eax, DWORD PTR [esi+24]
  0010c	74 0b		 je	 SHORT $LN48@CreateItem

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0010e	89 38		 mov	 DWORD PTR [eax], edi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00110	83 41 04 04	 add	 DWORD PTR [ecx+4], 4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00114	ff 46 2c	 inc	 DWORD PTR [esi+44]

; 68   : 				return pkNewData;

  00117	eb 1b		 jmp	 SHORT $LN22@CreateItem
$LN48@CreateItem:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00119	8d 95 38 ff ff
	ff		 lea	 edx, DWORD PTR _pkNewData$8[ebp]
  0011f	52		 push	 edx
  00120	50		 push	 eax
  00121	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSGroundItemInstance@CPythonItem@@@?$vector@PAUSGroundItemInstance@CPythonItem@@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@QAEPAPAUSGroundItemInstance@CPythonItem@@QAPAU23@ABQAU23@@Z ; std::vector<CPythonItem::SGroundItemInstance *,std::allocator<CPythonItem::SGroundItemInstance *> >::_Emplace_reallocate<CPythonItem::SGroundItemInstance * const &>
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 67   : 				++m_uUsedCapacity;

  00126	ff 46 2c	 inc	 DWORD PTR [esi+44]

; 68   : 				return pkNewData;

  00129	eb 09		 jmp	 SHORT $LN22@CreateItem
$LN23@CreateItem:

; 69   : 			}
; 70   : 
; 71   : 			T* pkFreeData=m_kVct_pkFree.back();

  0012b	8b 78 fc	 mov	 edi, DWORD PTR [eax-4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1559 :         return _My_data._Mylast[-1];

  0012e	83 c0 fc	 add	 eax, -4			; fffffffcH

; 1338 :         --_Mylast;

  00131	89 46 20	 mov	 DWORD PTR [esi+32], eax
$LN22@CreateItem:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 301  : 	pGroundItemInstance->dwVirtualNumber = dwVirtualNumber;

  00134	8b 43 0c	 mov	 eax, DWORD PTR _dwVirtualNumber$[ebx]
  00137	89 47 04	 mov	 DWORD PTR [edi+4], eax

; 302  : 
; 303  : 	bool bStabGround = false;
; 304  : 
; 305  : 	if (bDrop)

  0013a	8a 43 1c	 mov	 al, BYTE PTR _bDrop$[ebx]
  0013d	84 c0		 test	 al, al
  0013f	74 71		 je	 SHORT $LN3@CreateItem

; 306  : 	{
; 307  : 		z = CPythonBackground::Instance().GetHeight(x, y) + 10.0f;

  00141	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR _y$GSCopy$1$[ebp]
  00149	83 ec 08	 sub	 esp, 8
  0014c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonBackground@@@@0PAVCPythonBackground@@A ; CSingleton<CPythonBackground>::ms_singleton
  00152	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00158	0f 28 85 10 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR tv1982[ebp]
  0015f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00164	e8 00 00 00 00	 call	 ?GetHeight@CMapManager@@QAEMMM@Z ; CMapManager::GetHeight
  00169	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@41200000

; 308  : 
; 309  : 		if (pItemData->GetType()==CItemData::ITEM_TYPE_WEAPON && 

  0016f	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR _pItemData$[ebp]
  00175	d9 9d 38 ff ff
	ff		 fstp	 DWORD PTR _z$GSCopy$[ebp]
  0017b	e8 00 00 00 00	 call	 ?GetType@CItemData@@QBEEXZ ; CItemData::GetType
  00180	3c 01		 cmp	 al, 1
  00182	75 1a		 jne	 SHORT $LN6@CreateItem
  00184	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR _pItemData$[ebp]
  0018a	e8 00 00 00 00	 call	 ?GetWeaponType@CItemData@@QBEKXZ ; CItemData::GetWeaponType
  0018f	85 c0		 test	 eax, eax
  00191	74 0b		 je	 SHORT $LN6@CreateItem
  00193	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR _pItemData$[ebp]
  00199	e8 00 00 00 00	 call	 ?GetWeaponType@CItemData@@QBEKXZ ; CItemData::GetWeaponType
$LN6@CreateItem:

; 310  : 			(pItemData->GetWeaponType() == CItemData::WEAPON_SWORD || 
; 311  : 			 pItemData->GetWeaponType() == CItemData::WEAPON_ARROW))
; 312  : 			bStabGround = true;
; 313  : 
; 314  : 		bStabGround = false;
; 315  : 		pGroundItemInstance->bAnimEnded = false;
; 316  : 	}

  0019e	f3 0f 10 85 38
	ff ff ff	 movss	 xmm0, DWORD PTR _z$GSCopy$[ebp]
  001a6	32 c0		 xor	 al, al
  001a8	f3 0f 11 85 30
	ff ff ff	 movss	 DWORD PTR $T5[ebp], xmm0
  001b0	eb 02		 jmp	 SHORT $LN4@CreateItem
$LN3@CreateItem:

; 317  : 	else
; 318  : 	{
; 319  : 		pGroundItemInstance->bAnimEnded = true;

  001b2	b0 01		 mov	 al, 1
$LN4@CreateItem:

; 320  : 	}
; 321  : 
; 322  : 	{
; 323  : 		// attaching effect
; 324  : 		CEffectManager & rem =CEffectManager::Instance();

  001b4	88 87 24 02 00
	00		 mov	 BYTE PTR [edi+548], al

; 325  : 		pGroundItemInstance->dwEffectInstanceIndex = 

  001ba	8d 45 a4	 lea	 eax, DWORD PTR $T17[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 180  :     x = fx;

  001bd	0f 28 85 10 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR tv1982[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 325  : 		pGroundItemInstance->dwEffectInstanceIndex = 

  001c4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 180  :     x = fx;

  001ca	f3 0f 11 45 b0	 movss	 DWORD PTR $T19[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 325  : 		pGroundItemInstance->dwEffectInstanceIndex = 

  001cf	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR _y$GSCopy$1$[ebp]
  001d7	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  001de	50		 push	 eax
  001df	8d 45 b0	 lea	 eax, DWORD PTR $T19[ebp]
  001e2	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR $T6[ebp], xmm0
  001ea	50		 push	 eax
  001eb	ff 76 30	 push	 DWORD PTR [esi+48]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 181  :     y = fy;

  001ee	f3 0f 11 45 b4	 movss	 DWORD PTR $T19[ebp+4], xmm0

; 182  :     z = fz;

  001f3	f3 0f 10 85 30
	ff ff ff	 movss	 xmm0, DWORD PTR $T5[ebp]

; 180  :     x = fx;

  001fb	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR $T17[ebp], 0

; 181  :     y = fy;

  00202	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR $T17[ebp+4], 0

; 182  :     z = fz;

  00209	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR $T17[ebp+8], 0
  00210	f3 0f 11 45 b8	 movss	 DWORD PTR $T19[ebp+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 325  : 		pGroundItemInstance->dwEffectInstanceIndex = 

  00215	e8 00 00 00 00	 call	 ?CreateEffect@CEffectManager@@QAEHKABUD3DXVECTOR3@@0@Z ; CEffectManager::CreateEffect
  0021a	89 87 28 02 00
	00		 mov	 DWORD PTR [edi+552], eax

; 326  : 		rem.CreateEffect(m_dwDropItemEffectID, D3DXVECTOR3(x, -y, z), D3DXVECTOR3(0,0,0));		
; 327  : 
; 328  : 		pGroundItemInstance->eDropSoundType=__GetDropSoundType(*pItemData);

  00220	8b ce		 mov	 ecx, esi
  00222	ff b5 34 ff ff
	ff		 push	 DWORD PTR _pItemData$[ebp]
  00228	e8 00 00 00 00	 call	 ?__GetDropSoundType@CPythonItem@@IAEKABVCItemData@@@Z ; CPythonItem::__GetDropSoundType
  0022d	89 87 20 02 00
	00		 mov	 DWORD PTR [edi+544], eax

; 329  : 	}
; 330  : 
; 331  : 
; 332  : 	D3DXVECTOR3 normal;
; 333  : 	if (!CPythonBackground::Instance().GetNormal(int(x),int(y),&normal))

  00233	8d 45 98	 lea	 eax, DWORD PTR _normal$[ebp]
  00236	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonBackground@@@@0PAVCPythonBackground@@A ; CSingleton<CPythonBackground>::ms_singleton
  0023c	50		 push	 eax
  0023d	f3 0f 2c 85 44
	ff ff ff	 cvttss2si eax, DWORD PTR _y$GSCopy$1$[ebp]
  00245	50		 push	 eax
  00246	f3 0f 2c 85 10
	ff ff ff	 cvttss2si eax, DWORD PTR tv1982[ebp]
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?GetNormal@CMapManager@@QAE_NHHPAUD3DXVECTOR3@@@Z ; CMapManager::GetNormal
  00254	84 c0		 test	 al, al
  00256	75 15		 jne	 SHORT $LN7@CreateItem

; 334  : 		normal = D3DXVECTOR3(0.0f,0.0f,1.0f);

  00258	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _normal$[ebp], 0
  0025f	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR _normal$[ebp+4], 0
  00266	c7 45 a0 00 00
	80 3f		 mov	 DWORD PTR _normal$[ebp+8], 1065353216 ; 3f800000H
$LN7@CreateItem:

; 335  : 
; 336  : 	pGroundItemInstance->ThingInstance.Clear();

  0026d	8d 4f 3c	 lea	 ecx, DWORD PTR [edi+60]
  00270	e8 00 00 00 00	 call	 ?Clear@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Clear

; 337  : 	pGroundItemInstance->ThingInstance.ReserveModelThing(1);

  00275	6a 01		 push	 1
  00277	8d 4f 3c	 lea	 ecx, DWORD PTR [edi+60]
  0027a	e8 00 00 00 00	 call	 ?ReserveModelThing@CGraphicThingInstance@@QAEXH@Z ; CGraphicThingInstance::ReserveModelThing

; 338  : 	pGroundItemInstance->ThingInstance.ReserveModelInstance(1);

  0027f	6a 01		 push	 1
  00281	8d 4f 3c	 lea	 ecx, DWORD PTR [edi+60]
  00284	e8 00 00 00 00	 call	 ?ReserveModelInstance@CGraphicThingInstance@@QAEXH@Z ; CGraphicThingInstance::ReserveModelInstance

; 339  : 	pGroundItemInstance->ThingInstance.RegisterModelThing(0, pItemModel);

  00289	ff b5 40 ff ff
	ff		 push	 DWORD PTR _pItemModel$1$[ebp]
  0028f	8d 4f 3c	 lea	 ecx, DWORD PTR [edi+60]
  00292	6a 00		 push	 0
  00294	e8 00 00 00 00	 call	 ?RegisterModelThing@CGraphicThingInstance@@QAEXHPAVCGraphicThing@@@Z ; CGraphicThingInstance::RegisterModelThing

; 340  : 	pGroundItemInstance->ThingInstance.SetModelInstance(0, 0, 0);

  00299	6a ff		 push	 -1
  0029b	6a 00		 push	 0
  0029d	6a 00		 push	 0
  0029f	6a 00		 push	 0
  002a1	8d 4f 3c	 lea	 ecx, DWORD PTR [edi+60]
  002a4	e8 00 00 00 00	 call	 ?SetModelInstance@CGraphicThingInstance@@QAE_NHHHH@Z ; CGraphicThingInstance::SetModelInstance

; 341  : 	if (bDrop)

  002a9	80 7b 1c 00	 cmp	 BYTE PTR _bDrop$[ebx], 0
  002ad	f3 0f 10 8d 38
	ff ff ff	 movss	 xmm1, DWORD PTR $T6[ebp]
  002b5	74 2d		 je	 SHORT $LN8@CreateItem
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 182  :     z = fz;

  002b7	f3 0f 10 85 30
	ff ff ff	 movss	 xmm0, DWORD PTR $T5[ebp]
  002bf	0f 57 d2	 xorps	 xmm2, xmm2
  002c2	f3 0f 11 45 d0	 movss	 DWORD PTR $T30[ebp+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 343  : 		pGroundItemInstance->v3EndPosition = D3DXVECTOR3(x,-y,z);

  002c7	0f 28 85 10 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR tv1982[ebp]
  002ce	8b 45 d0	 mov	 eax, DWORD PTR $T30[ebp+8]
  002d1	0f 14 c1	 unpcklps xmm0, xmm1
  002d4	0f 57 c9	 xorps	 xmm1, xmm1
  002d7	66 0f d6 47 08	 movq	 QWORD PTR [edi+8], xmm0
  002dc	0f 57 c0	 xorps	 xmm0, xmm0
  002df	89 47 10	 mov	 DWORD PTR [edi+16], eax

; 344  : 		pGroundItemInstance->ThingInstance.SetPosition(0,0,0);
; 345  : 	}

  002e2	eb 0f		 jmp	 SHORT $LN9@CreateItem
$LN8@CreateItem:
  002e4	0f 28 85 10 ff
	ff ff		 movaps	 xmm0, XMMWORD PTR tv1982[ebp]
  002eb	f3 0f 10 95 30
	ff ff ff	 movss	 xmm2, DWORD PTR $T5[ebp]
$LN9@CreateItem:

; 346  : 	else
; 347  : 		pGroundItemInstance->ThingInstance.SetPosition(x, -y, z);
; 348  : 
; 349  : 	pGroundItemInstance->ThingInstance.Update();

  002f3	83 ec 0c	 sub	 esp, 12			; 0000000cH
  002f6	8d 4f 3c	 lea	 ecx, DWORD PTR [edi+60]
  002f9	f3 0f 11 54 24
	08		 movss	 DWORD PTR [esp+8], xmm2
  002ff	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  00305	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0030a	e8 00 00 00 00	 call	 ?SetPosition@CGraphicObjectInstance@@QAEXMMM@Z ; CGraphicObjectInstance::SetPosition
  0030f	8d 4f 3c	 lea	 ecx, DWORD PTR [edi+60]
  00312	e8 00 00 00 00	 call	 ?Update@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Update

; 350  : 	pGroundItemInstance->ThingInstance.Transform();

  00317	8d 4f 3c	 lea	 ecx, DWORD PTR [edi+60]
  0031a	e8 00 00 00 00	 call	 ?Transform@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Transform

; 351  : 	pGroundItemInstance->ThingInstance.Deform();

  0031f	8d 4f 3c	 lea	 ecx, DWORD PTR [edi+60]
  00322	e8 00 00 00 00	 call	 ?Deform@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Deform

; 352  : 
; 353  : 	if (bDrop)

  00327	80 7b 1c 00	 cmp	 BYTE PTR _bDrop$[ebx], 0
  0032b	0f 84 ea 04 00
	00		 je	 $LN10@CreateItem

; 354  : 	{
; 355  : 		D3DXVECTOR3 vMin, vMax;
; 356  : 		pGroundItemInstance->ThingInstance.GetBoundBox(&vMin,&vMax);

  00331	8d 45 8c	 lea	 eax, DWORD PTR _vMax$15[ebp]
  00334	50		 push	 eax
  00335	8d 45 b0	 lea	 eax, DWORD PTR _vMin$18[ebp]
  00338	50		 push	 eax
  00339	8d 4f 3c	 lea	 ecx, DWORD PTR [edi+60]
  0033c	e8 00 00 00 00	 call	 ?GetBoundBox@CGraphicThingInstance@@QAEXPAUD3DXVECTOR3@@0@Z ; CGraphicThingInstance::GetBoundBox
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00341	f3 0f 10 5d b0	 movss	 xmm3, DWORD PTR _vMin$18[ebp]
  00346	f3 0f 10 7d 8c	 movss	 xmm7, DWORD PTR _vMax$15[ebp]
  0034b	f3 0f 10 6d 90	 movss	 xmm5, DWORD PTR _vMax$15[ebp+4]
  00350	f3 0f 58 df	 addss	 xmm3, xmm7
  00354	f3 0f 10 55 b4	 movss	 xmm2, DWORD PTR _vMin$18[ebp+4]
  00359	f3 0f 10 65 94	 movss	 xmm4, DWORD PTR _vMax$15[ebp+8]
  0035e	f3 0f 58 d5	 addss	 xmm2, xmm5
  00362	f3 0f 10 4d b8	 movss	 xmm1, DWORD PTR _vMin$18[ebp+8]

; 182  :     z = fz;

  00367	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000

; 257  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  0036f	f3 0f 58 cc	 addss	 xmm1, xmm4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 361  : 				make_pair(vMax.x - vMin.x,0), 

  00373	f3 0f 5c 7d b0	 subss	 xmm7, DWORD PTR _vMin$18[ebp]

; 362  : 				make_pair(vMax.y - vMin.y,1), 

  00378	f3 0f 5c 6d b4	 subss	 xmm5, DWORD PTR _vMin$18[ebp+4]

; 363  : 				make_pair(vMax.z - vMin.z,2)

  0037d	f3 0f 5c 65 b8	 subss	 xmm4, DWORD PTR _vMin$18[ebp+8]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 182  :     z = fz;

  00382	f3 0f 59 d8	 mulss	 xmm3, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7571 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  00386	c6 85 40 ff ff
	ff 00		 mov	 BYTE PTR $T11[ebp], 0
  0038d	ff b5 40 ff ff
	ff		 push	 DWORD PTR $T11[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00393	f3 0f 59 d0	 mulss	 xmm2, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7571 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  00397	6a 03		 push	 3
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 269  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00399	f3 0f 59 c8	 mulss	 xmm1, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0039d	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _f$31[ebp+4], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 357  : 		pGroundItemInstance->v3Center = (vMin + vMax) * 0.5f;

  003a4	0f 14 da	 unpcklps xmm3, xmm2
  003a7	66 0f d6 5f 30	 movq	 QWORD PTR [edi+48], xmm3
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 182  :     z = fz;

  003ac	f3 0f 11 4d d0	 movss	 DWORD PTR $T29[ebp+8], xmm1
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 357  : 		pGroundItemInstance->v3Center = (vMin + vMax) * 0.5f;

  003b1	8b 45 d0	 mov	 eax, DWORD PTR $T29[ebp+8]
  003b4	89 47 38	 mov	 DWORD PTR [edi+56], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7571 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  003b7	8d 45 ec	 lea	 eax, DWORD PTR _f$31[ebp+24]
  003ba	50		 push	 eax
  003bb	8d 45 d4	 lea	 eax, DWORD PTR _f$31[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  003be	f3 0f 11 7d d4	 movss	 DWORD PTR _f$31[ebp], xmm7
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7571 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  003c3	50		 push	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  003c4	f3 0f 11 6d dc	 movss	 DWORD PTR _f$31[ebp+8], xmm5
  003c9	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR _f$31[ebp+12], 1
  003d0	f3 0f 11 65 e4	 movss	 DWORD PTR _f$31[ebp+16], xmm4
  003d5	c7 45 e8 02 00
	00 00		 mov	 DWORD PTR _f$31[ebp+20], 2
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7571 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  003dc	e8 00 00 00 00	 call	 ??$_Sort_unchecked@PAU?$pair@MH@std@@U?$less@X@2@@std@@YAXPAU?$pair@MH@0@0HU?$less@X@0@@Z ; std::_Sort_unchecked<std::pair<float,int> *,std::less<void> >
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 398  : 			if (f[0].second == 0)

  003e1	8b 45 d8	 mov	 eax, DWORD PTR _f$31[ebp+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 7571 :     _Sort_unchecked(_UFirst, _ULast, _ULast - _UFirst, _Pass_fn(_Pred));

  003e4	83 c4 10	 add	 esp, 16			; 00000010H
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 398  : 			if (f[0].second == 0)

  003e7	85 c0		 test	 eax, eax
  003e9	0f 85 e3 00 00
	00		 jne	 $LN17@CreateItem
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 180  :     x = fx;

  003ef	89 45 bc	 mov	 DWORD PTR $T23[ebp], eax

; 181  :     y = fy;

  003f2	89 45 c0	 mov	 DWORD PTR $T23[ebp+4], eax

; 182  :     z = fz;

  003f5	c7 45 c4 00 00
	80 3f		 mov	 DWORD PTR $T23[ebp+8], 1065353216 ; 3f800000H
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 401  : 				pGroundItemInstance->qEnd = 

  003fc	e8 00 00 00 00	 call	 ?random@@YAKXZ		; random
  00401	83 e0 01	 and	 eax, 1
  00404	83 ec 08	 sub	 esp, 8
  00407	66 0f 6e c0	 movd	 xmm0, eax
  0040b	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0040f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00412	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  0041b	c7 44 24 04 cd
	cc cc 3d	 mov	 DWORD PTR [esp+4], 1036831949 ; 3dcccccdH
  00423	c7 04 24 cd cc
	cc bd		 mov	 DWORD PTR [esp], -1110651699 ; bdcccccdH
  0042a	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0042e	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR tv1830[ebp], xmm0
  00436	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  0043b	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR tv1830[ebp]
  00443	f3 0f 58 c0	 addss	 xmm0, xmm0
  00447	c7 44 24 04 cd
	cc cc 3d	 mov	 DWORD PTR [esp+4], 1036831949 ; 3dcccccdH
  0044f	c7 04 24 cd cc
	cc bd		 mov	 DWORD PTR [esp], -1110651699 ; bdcccccdH
  00456	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  0045e	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR tv2188[ebp], xmm0
  00466	d8 85 40 ff ff
	ff		 fadd	 DWORD PTR tv2188[ebp]
  0046c	d9 9d 40 ff ff
	ff		 fstp	 DWORD PTR _fx$[ebp]
  00472	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  00477	d9 ee		 fldz
  00479	de c1		 faddp	 ST(1), ST(0)
  0047b	c7 44 24 04 cd
	cc cc 3d	 mov	 DWORD PTR [esp+4], 1036831949 ; 3dcccccdH
  00483	c7 04 24 cd cc
	cc bd		 mov	 DWORD PTR [esp], -1110651699 ; bdcccccdH
  0048a	d9 9d 38 ff ff
	ff		 fstp	 DWORD PTR _fy$[ebp]
  00490	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  00495	d9 ee		 fldz
  00497	8d 45 bc	 lea	 eax, DWORD PTR $T23[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 180  :     x = fx;

  0049a	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR _fx$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 401  : 				pGroundItemInstance->qEnd = 

  004a2	de c1		 faddp	 ST(1), ST(0)
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 180  :     x = fx;

  004a4	f3 0f 11 45 c8	 movss	 DWORD PTR $T28[ebp], xmm0

; 181  :     y = fy;

  004a9	f3 0f 10 85 38
	ff ff ff	 movss	 xmm0, DWORD PTR _fy$[ebp]
  004b1	f3 0f 11 45 cc	 movss	 DWORD PTR $T28[ebp+4], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 401  : 				pGroundItemInstance->qEnd = 

  004b6	50		 push	 eax
  004b7	d9 9d 44 ff ff
	ff		 fstp	 DWORD PTR _fz$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 182  :     z = fz;

  004bd	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR _fz$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 401  : 				pGroundItemInstance->qEnd = 

  004c5	8d 45 c8	 lea	 eax, DWORD PTR $T28[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 182  :     z = fz;

  004c8	f3 0f 11 45 d0	 movss	 DWORD PTR $T28[ebp+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 408  : 			}

  004cd	e9 a7 01 00 00	 jmp	 $LN186@CreateItem
$LN17@CreateItem:

; 409  : 			else if (f[0].second == 1)

  004d2	83 ec 08	 sub	 esp, 8
  004d5	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR $T27[ebp], 0
  004dc	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR $T27[ebp+4], 0
  004e3	c7 45 d0 00 00
	80 3f		 mov	 DWORD PTR $T27[ebp+8], 1065353216 ; 3f800000H
  004ea	c7 44 24 04 cd
	cc cc 3d	 mov	 DWORD PTR [esp+4], 1036831949 ; 3dcccccdH
  004f2	c7 04 24 cd cc
	cc bd		 mov	 DWORD PTR [esp], -1110651699 ; bdcccccdH
  004f9	83 f8 01	 cmp	 eax, 1
  004fc	0f 85 b8 00 00
	00		 jne	 $LN19@CreateItem

; 411  : 				pGroundItemInstance->qEnd = 

  00502	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  00507	d9 ee		 fldz
  00509	de c1		 faddp	 ST(1), ST(0)
  0050b	d9 9d 38 ff ff
	ff		 fstp	 DWORD PTR _fx$[ebp]
  00511	e8 00 00 00 00	 call	 ?random@@YAKXZ		; random
  00516	83 e0 01	 and	 eax, 1
  00519	66 0f 6e c0	 movd	 xmm0, eax
  0051d	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00521	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00524	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  0052d	c7 44 24 04 cd
	cc cc 3d	 mov	 DWORD PTR [esp+4], 1036831949 ; 3dcccccdH
  00535	c7 04 24 cd cc
	cc bd		 mov	 DWORD PTR [esp], -1110651699 ; bdcccccdH
  0053c	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00540	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR tv1856[ebp], xmm0
  00548	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  0054d	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR tv1856[ebp]
  00555	f3 0f 58 c0	 addss	 xmm0, xmm0
  00559	c7 44 24 04 cd
	cc cc 3d	 mov	 DWORD PTR [esp+4], 1036831949 ; 3dcccccdH
  00561	c7 04 24 cd cc
	cc bd		 mov	 DWORD PTR [esp], -1110651699 ; bdcccccdH
  00568	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00570	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR tv2132[ebp], xmm0
  00578	d8 85 40 ff ff
	ff		 fadd	 DWORD PTR tv2132[ebp]
  0057e	d9 9d 40 ff ff
	ff		 fstp	 DWORD PTR _fy$[ebp]
  00584	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  00589	d9 ee		 fldz
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 180  :     x = fx;

  0058b	f3 0f 10 85 38
	ff ff ff	 movss	 xmm0, DWORD PTR _fx$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 411  : 				pGroundItemInstance->qEnd = 

  00593	de c1		 faddp	 ST(1), ST(0)
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 180  :     x = fx;

  00595	f3 0f 11 45 bc	 movss	 DWORD PTR $T22[ebp], xmm0

; 181  :     y = fy;

  0059a	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR _fy$[ebp]
  005a2	f3 0f 11 45 c0	 movss	 DWORD PTR $T22[ebp+4], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 411  : 				pGroundItemInstance->qEnd = 

  005a7	d9 9d 44 ff ff
	ff		 fstp	 DWORD PTR _fz$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 182  :     z = fz;

  005ad	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR _fz$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 418  : 			}

  005b5	e9 b3 00 00 00	 jmp	 $LN187@CreateItem
$LN19@CreateItem:

; 421  : 				pGroundItemInstance->qEnd = 

  005ba	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  005bf	d9 ee		 fldz
  005c1	de c1		 faddp	 ST(1), ST(0)
  005c3	c7 44 24 04 cd
	cc cc 3d	 mov	 DWORD PTR [esp+4], 1036831949 ; 3dcccccdH
  005cb	c7 04 24 cd cc
	cc bd		 mov	 DWORD PTR [esp], -1110651699 ; bdcccccdH
  005d2	d9 9d 38 ff ff
	ff		 fstp	 DWORD PTR _fx$[ebp]
  005d8	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  005dd	d9 ee		 fldz
  005df	de c1		 faddp	 ST(1), ST(0)
  005e1	d9 9d 44 ff ff
	ff		 fstp	 DWORD PTR _fy$[ebp]
  005e7	e8 00 00 00 00	 call	 ?random@@YAKXZ		; random
  005ec	83 e0 01	 and	 eax, 1
  005ef	66 0f 6e c0	 movd	 xmm0, eax
  005f3	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  005f7	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  005fa	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00603	c7 44 24 04 cd
	cc cc 3d	 mov	 DWORD PTR [esp+4], 1036831949 ; 3dcccccdH
  0060b	c7 04 24 cd cc
	cc bd		 mov	 DWORD PTR [esp], -1110651699 ; bdcccccdH
  00612	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00616	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR tv1882[ebp], xmm0
  0061e	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  00623	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR tv1882[ebp]
  0062b	f3 0f 58 c0	 addss	 xmm0, xmm0
  0062f	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00637	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR tv2076[ebp], xmm0
  0063f	d8 85 40 ff ff
	ff		 fadd	 DWORD PTR tv2076[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 180  :     x = fx;

  00645	f3 0f 10 85 38
	ff ff ff	 movss	 xmm0, DWORD PTR _fx$[ebp]
  0064d	f3 0f 11 45 bc	 movss	 DWORD PTR $T21[ebp], xmm0

; 181  :     y = fy;

  00652	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR _fy$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 421  : 				pGroundItemInstance->qEnd = 

  0065a	d9 9d 40 ff ff
	ff		 fstp	 DWORD PTR _fz$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 181  :     y = fy;

  00660	f3 0f 11 45 c0	 movss	 DWORD PTR $T21[ebp+4], xmm0

; 182  :     z = fz;

  00665	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR _fz$[ebp]
$LN187@CreateItem:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 431  : 		float rot = frandom(0, 2*3.1415926535f);

  0066d	8d 45 c8	 lea	 eax, DWORD PTR $T26[ebp]
  00670	f3 0f 11 45 c4	 movss	 DWORD PTR $T21[ebp+8], xmm0
  00675	50		 push	 eax
  00676	8d 45 bc	 lea	 eax, DWORD PTR $T21[ebp]
$LN186@CreateItem:
  00679	50		 push	 eax
  0067a	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  00680	50		 push	 eax
  00681	e8 00 00 00 00	 call	 ?RotationArc@@YA?AUD3DXQUATERNION@@ABUD3DXVECTOR3@@0@Z ; RotationArc
  00686	83 c4 14	 add	 esp, 20			; 00000014H
  00689	83 ec 08	 sub	 esp, 8
  0068c	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  0068f	c7 44 24 04 db
	0f c9 40	 mov	 DWORD PTR [esp+4], 1086918619 ; 40c90fdbH
  00697	0f 11 47 20	 movups	 XMMWORD PTR [edi+32], xmm0
  0069b	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  006a2	e8 00 00 00 00	 call	 ?frandom@@YAMMM@Z	; frandom
  006a7	d9 9d 44 ff ff
	ff		 fstp	 DWORD PTR _rot$13[ebp]
  006ad	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR _rot$13[ebp]
  006b5	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

  006b8	0f 5a c0	 cvtps2pd xmm0, xmm0
  006bb	e8 00 00 00 00	 call	 __libm_sse2_sin_precise

; 649  :             return (float)cos(_X);

  006c0	f3 0f 10 8d 44
	ff ff ff	 movss	 xmm1, DWORD PTR _rot$13[ebp]

; 750  :             return (float)sin(_X);

  006c8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006cc	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR tv1902[ebp], xmm0

; 649  :             return (float)cos(_X);

  006d4	0f 5a c1	 cvtps2pd xmm0, xmm1
  006d7	e8 00 00 00 00	 call	 __libm_sse2_cos_precise
  006dc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 433  : 		D3DXQuaternionMultiply(&pGroundItemInstance->qEnd, &pGroundItemInstance->qEnd, &q);

  006e0	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _q$4[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 667  :     x = fx;

  006e6	c7 85 10 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _q$4[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 433  : 		D3DXQuaternionMultiply(&pGroundItemInstance->qEnd, &pGroundItemInstance->qEnd, &q);

  006f0	50		 push	 eax
  006f1	8d 47 20	 lea	 eax, DWORD PTR [edi+32]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 668  :     y = fy;

  006f4	c7 85 14 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _q$4[ebp+4], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 433  : 		D3DXQuaternionMultiply(&pGroundItemInstance->qEnd, &pGroundItemInstance->qEnd, &q);

  006fe	50		 push	 eax
  006ff	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 669  :     z = fz;

  00700	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR _q$4[ebp+8], xmm0

; 670  :     w = fw;

  00708	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR tv1902[ebp]
  00710	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _q$4[ebp+12], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 433  : 		D3DXQuaternionMultiply(&pGroundItemInstance->qEnd, &pGroundItemInstance->qEnd, &q);

  00718	e8 00 00 00 00	 call	 _D3DXQuaternionMultiply@12

; 434  : 		q = RotationArc(D3DXVECTOR3(0,0,1),normal);

  0071d	8d 45 98	 lea	 eax, DWORD PTR _normal$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 180  :     x = fx;

  00720	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR $T25[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 434  : 		q = RotationArc(D3DXVECTOR3(0,0,1),normal);

  00727	50		 push	 eax
  00728	8d 45 c8	 lea	 eax, DWORD PTR $T25[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 181  :     y = fy;

  0072b	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR $T25[ebp+4], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 434  : 		q = RotationArc(D3DXVECTOR3(0,0,1),normal);

  00732	50		 push	 eax
  00733	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 182  :     z = fz;

  00739	c7 45 d0 00 00
	80 3f		 mov	 DWORD PTR $T25[ebp+8], 1065353216 ; 3f800000H
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 434  : 		q = RotationArc(D3DXVECTOR3(0,0,1),normal);

  00740	50		 push	 eax
  00741	e8 00 00 00 00	 call	 ?RotationArc@@YA?AUD3DXQUATERNION@@ABUD3DXVECTOR3@@0@Z ; RotationArc
  00746	83 c4 0c	 add	 esp, 12			; 0000000cH
  00749	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]

; 435  : 		D3DXQuaternionMultiply(&pGroundItemInstance->qEnd, &pGroundItemInstance->qEnd, &q);

  0074c	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR _q$4[ebp]
  00752	50		 push	 eax
  00753	8d 47 20	 lea	 eax, DWORD PTR [edi+32]
  00756	50		 push	 eax
  00757	50		 push	 eax
  00758	0f 11 85 10 ff
	ff ff		 movups	 XMMWORD PTR _q$4[ebp], xmm0
  0075f	e8 00 00 00 00	 call	 _D3DXQuaternionMultiply@12

; 436  : 
; 437  : 		pGroundItemInstance->dwStartTime = CTimer::Instance().GetCurrentMillisecond();

  00764	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  0076a	e8 00 00 00 00	 call	 ?GetCurrentMillisecond@CTimer@@QAEKXZ ; CTimer::GetCurrentMillisecond

; 439  : 		pGroundItemInstance->v3RotationAxis.x = sinf(rot+0);//frandom(0.4f,0.7f) * (2*(int)(random()%2) - 1);

  0076f	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR _rot$13[ebp]
  00777	0f 57 c9	 xorps	 xmm1, xmm1
  0077a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0077e	89 87 18 02 00
	00		 mov	 DWORD PTR [edi+536], eax
  00784	05 2c 01 00 00	 add	 eax, 300		; 0000012cH
  00789	89 87 1c 02 00
	00		 mov	 DWORD PTR [edi+540], eax
  0078f	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR _rot$1$[ebp], xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

  00797	0f 5a c0	 cvtps2pd xmm0, xmm0
  0079a	e8 00 00 00 00	 call	 __libm_sse2_sin_precise
  0079f	0f 57 c9	 xorps	 xmm1, xmm1
  007a2	f2 0f 5a c8	 cvtsd2ss xmm1, xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 439  : 		pGroundItemInstance->v3RotationAxis.x = sinf(rot+0);//frandom(0.4f,0.7f) * (2*(int)(random()%2) - 1);

  007a6	f3 0f 11 4f 14	 movss	 DWORD PTR [edi+20], xmm1
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

  007ab	f3 0f 10 8d 40
	ff ff ff	 movss	 xmm1, DWORD PTR _rot$1$[ebp]
  007b3	0f 5a c1	 cvtps2pd xmm0, xmm1
  007b6	e8 00 00 00 00	 call	 __libm_sse2_cos_precise
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 249  :     return D3DXVECTOR3(-x, -y, -z);

  007bb	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __xmm@80000000800000008000000080000000
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

  007c3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 441  : 		pGroundItemInstance->v3RotationAxis.z = 0;//frandom(0.4f,0.7f) * (2*(int)(random()%2) - 1);

  007c7	c7 47 1c 00 00
	00 00		 mov	 DWORD PTR [edi+28], 0
  007ce	f3 0f 11 47 18	 movss	 DWORD PTR [edi+24], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 249  :     return D3DXVECTOR3(-x, -y, -z);

  007d3	f3 0f 10 57 30	 movss	 xmm2, DWORD PTR [edi+48]
  007d8	f3 0f 10 4f 34	 movss	 xmm1, DWORD PTR [edi+52]
  007dd	0f 57 d3	 xorps	 xmm2, xmm3
  007e0	f3 0f 10 47 38	 movss	 xmm0, DWORD PTR [edi+56]
  007e5	0f 57 cb	 xorps	 xmm1, xmm3
  007e8	0f 57 c3	 xorps	 xmm0, xmm3

; 180  :     x = fx;

  007eb	f3 0f 11 55 a4	 movss	 DWORD PTR _v3Adjust$16[ebp], xmm2

; 181  :     y = fy;

  007f0	f3 0f 11 4d a8	 movss	 DWORD PTR _v3Adjust$16[ebp+4], xmm1
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 459  : 		D3DXMatrixRotationQuaternion(&mat, &pGroundItemInstance->qEnd);

  007f5	8d 47 20	 lea	 eax, DWORD PTR [edi+32]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 182  :     z = fz;

  007f8	f3 0f 11 45 ac	 movss	 DWORD PTR _v3Adjust$16[ebp+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 459  : 		D3DXMatrixRotationQuaternion(&mat, &pGroundItemInstance->qEnd);

  007fd	50		 push	 eax
  007fe	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _mat$14[ebp]
  00804	50		 push	 eax
  00805	e8 00 00 00 00	 call	 _D3DXMatrixRotationQuaternion@8

; 460  : 		/*D3DXMatrixRotationYawPitchRoll(&mat, 
; 461  : 			D3DXToRadian(pGroundItemInstance->rEnd.y), 
; 462  : 			D3DXToRadian(pGroundItemInstance->rEnd.x), 
; 463  : 			D3DXToRadian(pGroundItemInstance->rEnd.z));*/
; 464  : 
; 465  : 		D3DXVec3TransformCoord(&v3Adjust,&v3Adjust,&mat);

  0080a	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _mat$14[ebp]
  00810	50		 push	 eax
  00811	8d 45 a4	 lea	 eax, DWORD PTR _v3Adjust$16[ebp]
  00814	50		 push	 eax
  00815	50		 push	 eax
  00816	e8 00 00 00 00	 call	 _D3DXVec3TransformCoord@12
$LN10@CreateItem:

; 466  : 		//Tracef("%f %f %f\n",v3Adjust.x,v3Adjust.y,v3Adjust.z);
; 467  : 		//pGroundItemInstance->v3EndPosition += v3Adjust;
; 468  : 		//pGroundItemInstance->rEnd.z += pGroundItemInstance->v3Center.z;
; 469  : 	}
; 470  : 
; 471  : 	pGroundItemInstance->ThingInstance.Show();

  0081b	8d 4f 3c	 lea	 ecx, DWORD PTR [edi+60]
  0081e	e8 00 00 00 00	 call	 ?Show@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Show
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00823	8b 43 08	 mov	 eax, DWORD PTR _dwVirtualID$[ebx]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 473  : 	m_GroundItemInstanceMap.insert(TGroundItemInstanceMap::value_type(dwVirtualID, pGroundItemInstance));

  00826	8b b5 2c ff ff
	ff		 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0082c	89 85 3c ff ff
	ff		 mov	 DWORD PTR $T10[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 473  : 	m_GroundItemInstanceMap.insert(TGroundItemInstanceMap::value_type(dwVirtualID, pGroundItemInstance));

  00832	83 c6 04	 add	 esi, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00835	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR $T10[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  0083b	89 bd 40 ff ff
	ff		 mov	 DWORD PTR $T10[ebp+4], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  00841	50		 push	 eax
  00842	8d 45 bc	 lea	 eax, DWORD PTR $T20[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 473  : 	m_GroundItemInstanceMap.insert(TGroundItemInstanceMap::value_type(dwVirtualID, pGroundItemInstance));

  00845	89 b5 2c ff ff
	ff		 mov	 DWORD PTR _this$1$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1009 :             _Loc                = _Find_lower_bound(_Keyval);

  0084b	50		 push	 eax
  0084c	8b ce		 mov	 ecx, esi
  0084e	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> >,0> >::_Find_lower_bound<unsigned long>
  00853	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00856	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  0085a	66 0f d6 45 c8	 movq	 QWORD PTR __Loc$24[ebp], xmm0

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0085f	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00863	75 0c		 jne	 SHORT $LN126@CreateItem
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  00865	8b 43 08	 mov	 eax, DWORD PTR _dwVirtualID$[ebx]
  00868	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0086b	0f 83 8d 00 00
	00		 jae	 $LN172@CreateItem
$LN126@CreateItem:

; 1719 :         if (max_size() == _Get_scary()->_Mysize) {

  00871	81 7e 04 aa aa
	aa 0a		 cmp	 DWORD PTR [esi+4], 178956970 ; 0aaaaaaaH
  00878	0f 84 c0 00 00
	00		 je	 $LN189@CreateItem

; 1015 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  0087e	8b 06		 mov	 eax, DWORD PTR [esi]
  00880	89 85 44 ff ff
	ff		 mov	 DWORD PTR __Myhead$12[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1045 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00886	89 b5 3c ff ff
	ff		 mov	 DWORD PTR $T9[ebp], esi

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0088c	6a 18		 push	 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 784  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  0088e	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1052 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00895	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR $T9[ebp+4], 0

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0089f	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>

; 1053 :         _Ptr = _Al.allocate(1);

  008a4	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 786  :     }

  008a6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1

; 806  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  008ad	8b 43 08	 mov	 eax, DWORD PTR _dwVirtualID$[ebx]
  008b0	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 807  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  008b3	8d 85 44 ff ff
	ff		 lea	 eax, DWORD PTR __Myhead$12[ebp]
  008b9	50		 push	 eax
  008ba	56		 push	 esi
  008bb	89 7e 14	 mov	 DWORD PTR [esi+20], edi
  008be	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> * &>

; 808  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  008c3	8d 85 44 ff ff
	ff		 lea	 eax, DWORD PTR __Myhead$12[ebp]
  008c9	50		 push	 eax
  008ca	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  008cd	50		 push	 eax
  008ce	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> * &>

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  008d3	8d 85 44 ff ff
	ff		 lea	 eax, DWORD PTR __Myhead$12[ebp]
  008d9	50		 push	 eax
  008da	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  008dd	50		 push	 eax
  008de	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> * &>

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  008e3	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR _this$1$[ebp]

; 809  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  008e9	83 c4 1c	 add	 esp, 28			; 0000001cH

; 810  :         this->_Ptr->_Color = _Red;

  008ec	66 c7 46 0c 00
	00		 mov	 WORD PTR [esi+12], 0

; 1034 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  008f2	56		 push	 esi
  008f3	ff 75 cc	 push	 DWORD PTR __Loc$24[ebp+4]
  008f6	ff 75 c8	 push	 DWORD PTR __Loc$24[ebp]
  008f9	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Insert_node
$LN172@CreateItem:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 476  : 	rkTextTail.RegisterItemTextTail(

  008fe	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR _pItemData$[ebp]
  00904	8d 47 3c	 lea	 eax, DWORD PTR [edi+60]
  00907	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonTextTail@@@@0PAVCPythonTextTail@@A ; CSingleton<CPythonTextTail>::ms_singleton
  0090d	50		 push	 eax
  0090e	e8 00 00 00 00	 call	 ?GetName@CItemData@@QBEPBDXZ ; CItemData::GetName
  00913	50		 push	 eax
  00914	ff 73 08	 push	 DWORD PTR _dwVirtualID$[ebx]
  00917	8b ce		 mov	 ecx, esi
  00919	e8 00 00 00 00	 call	 ?RegisterItemTextTail@CPythonTextTail@@QAEXKPBDPAVCGraphicObjectInstance@@@Z ; CPythonTextTail::RegisterItemTextTail
$LN1@CreateItem:

; 480  : }

  0091e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00921	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00928	59		 pop	 ecx
  00929	5f		 pop	 edi
  0092a	5e		 pop	 esi
  0092b	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0092e	33 cd		 xor	 ecx, ebp
  00930	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00935	8b e5		 mov	 esp, ebp
  00937	5d		 pop	 ebp
  00938	8b e3		 mov	 esp, ebx
  0093a	5b		 pop	 ebx
  0093b	c2 18 00	 ret	 24			; 00000018H
$LN189@CreateItem:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1720 :             _Throw_tree_length_error();

  0093e	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN185@CreateItem:
  00943	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateItem@CPythonItem@@QAEXKKMMM_N@Z$0:
  00000	68 44 02 00 00	 push	 580			; 00000244H
  00005	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR $T7[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00011	83 c4 08	 add	 esp, 8
  00014	c3		 ret	 0
__unwindfunclet$?CreateItem@CPythonItem@@QAEXKKMMM_N@Z$8:
  00015	8d 8d 3c ff ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> > >
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
__ehhandler$?CreateItem@CPythonItem@@QAEXKKMMM_N@Z:
  00025	90		 npad	 1
  00026	90		 npad	 1
  00027	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002e	8b 8a f8 fe ff
	ff		 mov	 ecx, DWORD PTR [edx-264]
  00034	33 c8		 xor	 ecx, eax
  00036	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003b	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0003e	33 c8		 xor	 ecx, eax
  00040	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00045	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateItem@CPythonItem@@QAEXKKMMM_N@Z
  0004a	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateItem@CPythonItem@@QAEXKKMMM_N@Z ENDP		; CPythonItem::CreateItem
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?Update@CPythonItem@@QAEXABUtagPOINT@@@Z
_TEXT	SEGMENT
_itor$ = -4						; size = 4
_c_rkPtMouse$ = 8					; size = 4
?Update@CPythonItem@@QAEXABUtagPOINT@@@Z PROC		; CPythonItem::Update, COMDAT
; _this$ = ecx

; 111  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  00007	8b 56 04	 mov	 edx, DWORD PTR [esi+4]

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0000a	8b 02		 mov	 eax, DWORD PTR [edx]
  0000c	89 45 fc	 mov	 DWORD PTR _itor$[ebp], eax
  0000f	3b c2		 cmp	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 113  : 	for(; itor != m_GroundItemInstanceMap.end(); ++itor)

  00011	74 18		 je	 SHORT $LN3@Update
$LL17@Update:

; 114  : 	{
; 115  : 		itor->second->Update();

  00013	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00016	e8 00 00 00 00	 call	 ?Update@SGroundItemInstance@CPythonItem@@QAE_NXZ ; CPythonItem::SGroundItemInstance::Update
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 198  :         _Mybase::operator++();

  0001b	8d 4d fc	 lea	 ecx, DWORD PTR _itor$[ebp]
  0001e	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >,std::_Iterator_base0>::operator++

; 232  :         return this->_Ptr == _Right._Ptr;

  00023	8b 45 fc	 mov	 eax, DWORD PTR _itor$[ebp]
  00026	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 113  : 	for(; itor != m_GroundItemInstanceMap.end(); ++itor)

  00029	75 e8		 jne	 SHORT $LL17@Update
$LN3@Update:

; 116  : 	}
; 117  : 
; 118  : 	m_dwPickedItemID=__Pick(c_rkPtMouse);

  0002b	ff 75 08	 push	 DWORD PTR _c_rkPtMouse$[ebp]
  0002e	8b ce		 mov	 ecx, esi
  00030	e8 00 00 00 00	 call	 ?__Pick@CPythonItem@@IAEKABUtagPOINT@@@Z ; CPythonItem::__Pick
  00035	89 46 34	 mov	 DWORD PTR [esi+52], eax
  00038	5e		 pop	 esi

; 119  : }

  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c2 04 00	 ret	 4
?Update@CPythonItem@@QAEXABUtagPOINT@@@Z ENDP		; CPythonItem::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?Render@CPythonItem@@QAEXXZ
_TEXT	SEGMENT
_itor$ = -4						; size = 4
?Render@CPythonItem@@QAEXXZ PROC			; CPythonItem::Render, COMDAT
; _this$ = ecx

; 122  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx

; 123  : 	CPythonGraphic::Instance().SetDiffuseOperation();

  00007	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonGraphic@@@@0PAVCPythonGraphic@@A ; CSingleton<CPythonGraphic>::ms_singleton
  0000d	e8 00 00 00 00	 call	 ?SetDiffuseOperation@CScreen@@QAEXXZ ; CScreen::SetDiffuseOperation
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  00012	8b 57 04	 mov	 edx, DWORD PTR [edi+4]

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00015	8b 02		 mov	 eax, DWORD PTR [edx]
  00017	89 45 fc	 mov	 DWORD PTR _itor$[ebp], eax
  0001a	3b c2		 cmp	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 125  : 	for (; itor != m_GroundItemInstanceMap.end(); ++itor)

  0001c	74 26		 je	 SHORT $LN3@Render
  0001e	56		 push	 esi
  0001f	90		 npad	 1
$LL17@Render:

; 126  : 	{
; 127  : 		CGraphicThingInstance & rInstance = itor->second->ThingInstance;

  00020	8b 70 14	 mov	 esi, DWORD PTR [eax+20]

; 128  : 		//rInstance.Update();
; 129  : 		rInstance.Render();

  00023	8d 4e 3c	 lea	 ecx, DWORD PTR [esi+60]
  00026	e8 00 00 00 00	 call	 ?Render@CGraphicObjectInstance@@QAE_NXZ ; CGraphicObjectInstance::Render

; 130  : 		rInstance.BlendRender();

  0002b	8d 4e 3c	 lea	 ecx, DWORD PTR [esi+60]
  0002e	e8 00 00 00 00	 call	 ?BlendRender@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::BlendRender
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 198  :         _Mybase::operator++();

  00033	8d 4d fc	 lea	 ecx, DWORD PTR _itor$[ebp]
  00036	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >,std::_Iterator_base0>::operator++

; 232  :         return this->_Ptr == _Right._Ptr;

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _itor$[ebp]
  0003e	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 125  : 	for (; itor != m_GroundItemInstanceMap.end(); ++itor)

  00041	75 dd		 jne	 SHORT $LL17@Render
  00043	5e		 pop	 esi
$LN3@Render:
  00044	5f		 pop	 edi

; 131  : 	}
; 132  : }

  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
?Render@CPythonItem@@QAEXXZ ENDP			; CPythonItem::Render
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?DeleteAllItems@CPythonItem@@QAEXXZ
_TEXT	SEGMENT
_rkTextTail$1$ = -12					; size = 4
_pkData$ = -8						; size = 4
_i$ = -4						; size = 4
?DeleteAllItems@CPythonItem@@QAEXXZ PROC		; CPythonItem::DeleteAllItems, COMDAT
; _this$ = ecx

; 510  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 511  : 	CPythonTextTail& rkTextTail=CPythonTextTail::Instance();

  00006	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonTextTail@@@@0PAVCPythonTextTail@@A ; CSingleton<CPythonTextTail>::ms_singleton
  0000c	53		 push	 ebx
  0000d	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  0000e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00011	8d 59 04	 lea	 ebx, DWORD PTR [ecx+4]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 510  : {

  00014	57		 push	 edi

; 511  : 	CPythonTextTail& rkTextTail=CPythonTextTail::Instance();

  00015	89 55 f4	 mov	 DWORD PTR _rkTextTail$1$[ebp], edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00018	8b 06		 mov	 eax, DWORD PTR [esi]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 514  : 	for (i= m_GroundItemInstanceMap.begin(); i!=m_GroundItemInstanceMap.end(); ++i)

  0001a	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0001d	3b c6		 cmp	 eax, esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 514  : 	for (i= m_GroundItemInstanceMap.begin(); i!=m_GroundItemInstanceMap.end(); ++i)

  0001f	74 4a		 je	 SHORT $LN3@DeleteAllI
  00021	8d 79 1c	 lea	 edi, DWORD PTR [ecx+28]
$LL23@DeleteAllI:

; 515  : 	{
; 516  : 		TGroundItemInstance* pGroundItemInst=i->second;
; 517  : 		rkTextTail.DeleteItemTextTail(i->first);

  00024	ff 70 10	 push	 DWORD PTR [eax+16]
  00027	8b 70 14	 mov	 esi, DWORD PTR [eax+20]
  0002a	8b ca		 mov	 ecx, edx
  0002c	e8 00 00 00 00	 call	 ?DeleteItemTextTail@CPythonTextTail@@QAEXK@Z ; CPythonTextTail::DeleteItemTextTail

; 518  : 		pGroundItemInst->Clear();

  00031	8b ce		 mov	 ecx, esi
  00033	e8 00 00 00 00	 call	 ?Clear@SGroundItemInstance@CPythonItem@@QAEXXZ ; CPythonItem::SGroundItemInstance::Clear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  00038	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 519  : 		m_GroundItemInstancePool.Free(pGroundItemInst);

  0003b	89 75 f8	 mov	 DWORD PTR _pkData$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 704  :         if (_Mylast != _My_data._Myend) {

  0003e	3b 47 08	 cmp	 eax, DWORD PTR [edi+8]
  00041	74 08		 je	 SHORT $LN53@DeleteAllI

; 687  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  00043	89 30		 mov	 DWORD PTR [eax], esi

; 688  :         _Orphan_range(_Mylast, _Mylast);
; 689  :         _Ty& _Result = *_Mylast;
; 690  :         ++_Mylast;

  00045	83 47 04 04	 add	 DWORD PTR [edi+4], 4

; 705  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  00049	eb 0c		 jmp	 SHORT $LN2@DeleteAllI
$LN53@DeleteAllI:

; 706  :         }
; 707  : 
; 708  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  0004b	8d 4d f8	 lea	 ecx, DWORD PTR _pkData$[ebp]
  0004e	51		 push	 ecx
  0004f	50		 push	 eax
  00050	8b cf		 mov	 ecx, edi
  00052	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@ABQAUSGroundItemInstance@CPythonItem@@@?$vector@PAUSGroundItemInstance@CPythonItem@@V?$allocator@PAUSGroundItemInstance@CPythonItem@@@std@@@std@@QAEPAPAUSGroundItemInstance@CPythonItem@@QAPAU23@ABQAU23@@Z ; std::vector<CPythonItem::SGroundItemInstance *,std::allocator<CPythonItem::SGroundItemInstance *> >::_Emplace_reallocate<CPythonItem::SGroundItemInstance * const &>
$LN2@DeleteAllI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 198  :         _Mybase::operator++();

  00057	8d 4d fc	 lea	 ecx, DWORD PTR _i$[ebp]
  0005a	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >,std::_Iterator_base0>::operator++

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0005f	8b 33		 mov	 esi, DWORD PTR [ebx]

; 232  :         return this->_Ptr == _Right._Ptr;

  00061	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 514  : 	for (i= m_GroundItemInstanceMap.begin(); i!=m_GroundItemInstanceMap.end(); ++i)

  00064	8b 55 f4	 mov	 edx, DWORD PTR _rkTextTail$1$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 232  :         return this->_Ptr == _Right._Ptr;

  00067	3b c6		 cmp	 eax, esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 514  : 	for (i= m_GroundItemInstanceMap.begin(); i!=m_GroundItemInstanceMap.end(); ++i)

  00069	75 b9		 jne	 SHORT $LL23@DeleteAllI
$LN3@DeleteAllI:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1448 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

  0006b	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0006e	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00072	75 20		 jne	 SHORT $LN61@DeleteAllI
$LL60@DeleteAllI:

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

  00074	ff 77 08	 push	 DWORD PTR [edi+8]
  00077	8b cb		 mov	 ecx, ebx
  00079	53		 push	 ebx
  0007a	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> > >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 598  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0007f	8b c7		 mov	 eax, edi

; 599  :     _Val         = static_cast<_Other&&>(_New_val);

  00081	8b 3f		 mov	 edi, DWORD PTR [edi]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 696  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00083	6a 18		 push	 24			; 00000018H
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008b	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  0008e	80 7f 0d 00	 cmp	 BYTE PTR [edi+13], 0
  00092	74 e0		 je	 SHORT $LL60@DeleteAllI
$LN61@DeleteAllI:

; 1452 :         _Scary->_Mysize = 0;

  00094	5f		 pop	 edi
  00095	89 76 04	 mov	 DWORD PTR [esi+4], esi
  00098	89 36		 mov	 DWORD PTR [esi], esi
  0009a	89 76 08	 mov	 DWORD PTR [esi+8], esi
  0009d	5e		 pop	 esi
  0009e	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0
  000a5	5b		 pop	 ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 522  : }

  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
?DeleteAllItems@CPythonItem@@QAEXXZ ENDP		; CPythonItem::DeleteAllItems
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?GetInfo@CPythonItem@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
__Old_size$1$ = -276					; size = 4
__New_ptr$1 = -272					; size = 4
__Old$1$ = -268						; size = 4
tv484 = -264						; size = 4
tv480 = -264						; size = 4
$T2 = -264						; size = 4
_szInfo$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_pstInfo$ = 8						; size = 4
?GetInfo@CPythonItem@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CPythonItem::GetInfo, COMDAT
; _this$ = ecx

; 16   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00013	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00016	2b 41 10	 sub	 eax, DWORD PTR [ecx+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 16   : {

  00019	53		 push	 ebx
  0001a	8b 5d 08	 mov	 ebx, DWORD PTR _pstInfo$[ebp]
  0001d	56		 push	 esi
  0001e	57		 push	 edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0001f	c1 f8 02	 sar	 eax, 2
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 18   : 	sprintf(szInfo, "Item: Inst %d, Pool %d", m_GroundItemInstanceMap.size(), m_GroundItemInstancePool.GetCapacity());

  00022	50		 push	 eax
  00023	ff 71 08	 push	 DWORD PTR [ecx+8]
  00026	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szInfo$[ebp]
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@BBCPOMJB@Item?3?5Inst?5?$CFd?0?5Pool?5?$CFd@
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 _sprintf
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 389  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00037	8d bd fc fe ff
	ff		 lea	 edi, DWORD PTR _szInfo$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 18   : 	sprintf(szInfo, "Item: Inst %d, Pool %d", m_GroundItemInstanceMap.size(), m_GroundItemInstancePool.GetCapacity());

  0003d	83 c4 10	 add	 esp, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 389  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00040	8d 4f 01	 lea	 ecx, DWORD PTR [edi+1]
$LL53@GetInfo:
  00043	8a 07		 mov	 al, BYTE PTR [edi]
  00045	47		 inc	 edi
  00046	84 c0		 test	 al, al
  00048	75 f9		 jne	 SHORT $LL53@GetInfo

; 2938 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  0004a	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]

; 389  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0004d	2b f9		 sub	 edi, ecx

; 2937 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  0004f	8b 73 10	 mov	 esi, DWORD PTR [ebx+16]

; 2938 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  00052	8b c2		 mov	 eax, edx
  00054	2b c6		 sub	 eax, esi
  00056	89 b5 ec fe ff
	ff		 mov	 DWORD PTR __Old_size$1$[ebp], esi
  0005c	89 95 f4 fe ff
	ff		 mov	 DWORD PTR __Old$1$[ebp], edx
  00062	3b f8		 cmp	 edi, eax
  00064	77 37		 ja	 SHORT $LN12@GetInfo

; 2939 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00066	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  00069	89 43 10	 mov	 DWORD PTR [ebx+16], eax

; 2227 :         return _BUF_SIZE <= _Myres;

  0006c	83 fa 10	 cmp	 edx, 16			; 00000010H

; 2210 :         if (_Large_string_engaged()) {

  0006f	72 02		 jb	 SHORT $LN15@GetInfo

; 2211 :             _Result = _Unfancy(_Bx._Ptr);

  00071	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$LN15@GetInfo:

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00073	57		 push	 edi
  00074	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szInfo$[ebp]

; 2941 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

  0007a	03 f3		 add	 esi, ebx

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0007c	50		 push	 eax
  0007d	56		 push	 esi
  0007e	e8 00 00 00 00	 call	 _memmove
  00083	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2942 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  00086	c6 04 3e 00	 mov	 BYTE PTR [esi+edi], 0
  0008a	5f		 pop	 edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 21   : }

  0008b	5e		 pop	 esi
  0008c	5b		 pop	 ebx
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00090	33 cd		 xor	 ecx, ebp
  00092	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 04 00	 ret	 4
$LN12@GetInfo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4333 :         if (max_size() - _Old_size < _Size_increase) {

  0009d	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  000a2	2b c6		 sub	 eax, esi
  000a4	3b c7		 cmp	 eax, edi
  000a6	0f 82 02 01 00
	00		 jb	 $LN58@GetInfo

; 4335 :         }
; 4336 : 
; 4337 :         const size_type _New_size     = _Old_size + _Size_increase;

  000ac	8d 0c 3e	 lea	 ecx, DWORD PTR [esi+edi]

; 4285 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  000af	83 c9 0f	 or	 ecx, 15			; 0000000fH
  000b2	81 f9 ff ff ff
	7f		 cmp	 ecx, 2147483647		; 7fffffffH

; 4286 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  000b8	76 07		 jbe	 SHORT $LN29@GetInfo

; 4287 :             return _Max;

  000ba	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  000bf	eb 2d		 jmp	 SHORT $LN55@GetInfo
$LN29@GetInfo:

; 4288 :         }
; 4289 : 
; 4290 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  000c1	8b c2		 mov	 eax, edx
  000c3	d1 e8		 shr	 eax, 1
  000c5	89 85 f8 fe ff
	ff		 mov	 DWORD PTR tv484[ebp], eax
  000cb	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  000d0	2b 85 f8 fe ff
	ff		 sub	 eax, DWORD PTR tv484[ebp]
  000d6	3b d0		 cmp	 edx, eax
  000d8	76 07		 jbe	 SHORT $LN30@GetInfo

; 4291 :             return _Max;

  000da	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  000df	eb 0d		 jmp	 SHORT $LN55@GetInfo
$LN30@GetInfo:

; 4292 :         }
; 4293 : 
; 4294 :         return (_STD max)(_Masked, _Old + _Old / 2);

  000e1	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR tv484[ebp]
  000e7	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  000e9	3b c8		 cmp	 ecx, eax
  000eb	0f 42 c8	 cmovb	 ecx, eax
$LN55@GetInfo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4341 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000ee	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  000f1	89 8d f8 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000f7	50		 push	 eax
  000f8	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4343 :         _My_data._Mysize      = _New_size;

  000fd	8d 0c 3e	 lea	 ecx, DWORD PTR [esi+edi]
  00100	89 85 f0 fe ff
	ff		 mov	 DWORD PTR __New_ptr$1[ebp], eax
  00106	89 4b 10	 mov	 DWORD PTR [ebx+16], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00109	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4346 :         if (_BUF_SIZE <= _Old_capacity) {

  0010c	83 bd f4 fe ff
	ff 10		 cmp	 DWORD PTR __Old$1$[ebp], 16 ; 00000010H
  00113	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR $T2[ebp]
  00119	89 4b 14	 mov	 DWORD PTR [ebx+20], ecx
  0011c	8d 0c 30	 lea	 ecx, DWORD PTR [eax+esi]
  0011f	89 8d f8 fe ff
	ff		 mov	 DWORD PTR tv480[ebp], ecx
  00125	72 44		 jb	 SHORT $LN23@GetInfo

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00127	ff b5 ec fe ff
	ff		 push	 DWORD PTR __Old_size$1$[ebp]

; 4347 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  0012d	8b 33		 mov	 esi, DWORD PTR [ebx]

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0012f	56		 push	 esi
  00130	50		 push	 eax
  00131	e8 00 00 00 00	 call	 _memcpy
  00136	57		 push	 edi
  00137	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szInfo$[ebp]
  0013d	50		 push	 eax
  0013e	ff b5 f8 fe ff
	ff		 push	 DWORD PTR tv480[ebp]
  00144	e8 00 00 00 00	 call	 _memcpy

; 2952 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00149	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR tv480[ebp]
  0014f	c6 04 38 00	 mov	 BYTE PTR [eax+edi], 0

; 4349 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00153	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR __Old$1$[ebp]
  00159	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0015a	50		 push	 eax
  0015b	56		 push	 esi
  0015c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4350 :             _My_data._Bx._Ptr = _New_ptr;

  00161	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR __New_ptr$1[ebp]
  00167	89 03		 mov	 DWORD PTR [ebx], eax

; 4351 :         } else {

  00169	eb 2d		 jmp	 SHORT $LN56@GetInfo
$LN23@GetInfo:

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0016b	56		 push	 esi
  0016c	53		 push	 ebx
  0016d	50		 push	 eax
  0016e	e8 00 00 00 00	 call	 _memcpy
  00173	8b b5 f8 fe ff
	ff		 mov	 esi, DWORD PTR tv480[ebp]
  00179	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _szInfo$[ebp]
  0017f	57		 push	 edi
  00180	50		 push	 eax
  00181	56		 push	 esi
  00182	e8 00 00 00 00	 call	 _memcpy

; 4353 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  00187	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR __New_ptr$1[ebp]

; 2952 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  0018d	c6 04 3e 00	 mov	 BYTE PTR [esi+edi], 0

; 4353 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  00191	50		 push	 eax
  00192	53		 push	 ebx
  00193	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN56@GetInfo:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 21   : }

  00198	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0019b	83 c4 20	 add	 esp, 32			; 00000020H
  0019e	33 cd		 xor	 ecx, ebp
  001a0	5f		 pop	 edi
  001a1	5e		 pop	 esi
  001a2	5b		 pop	 ebx
  001a3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a8	8b e5		 mov	 esp, ebp
  001aa	5d		 pop	 ebp
  001ab	c2 04 00	 ret	 4
$LN58@GetInfo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4334 :             _Xlen_string(); // result too long

  001ae	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN54@GetInfo:
  001b3	cc		 int	 3
?GetInfo@CPythonItem@@QAEXPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CPythonItem::GetInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?SetDropSoundFileName@CPythonItem@@QAEXKABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_eItemType$ = 8						; size = 4
_c_rstFileName$ = 12					; size = 4
?SetDropSoundFileName@CPythonItem@@QAEXKABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CPythonItem::SetDropSoundFileName, COMDAT
; _this$ = ecx

; 145  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 146  : 	if (eItemType>=DROPSOUND_NUM)

  00004	8b 7d 08	 mov	 edi, DWORD PTR _eItemType$[ebp]
  00007	83 ff 05	 cmp	 edi, 5
  0000a	73 3f		 jae	 SHORT $LN12@SetDropSou
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2218 :         const value_type* _Result = _Bx._Buf;

  0000c	56		 push	 esi
  0000d	8b 75 0c	 mov	 esi, DWORD PTR _c_rstFileName$[ebp]
  00010	8b c6		 mov	 eax, esi

; 2227 :         return _BUF_SIZE <= _Myres;

  00012	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2219 :         if (_Large_string_engaged()) {

  00016	72 02		 jb	 SHORT $LN22@SetDropSou

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  00018	8b 06		 mov	 eax, DWORD PTR [esi]
$LN22@SetDropSou:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 149  : 	Tracenf("SetDropSoundFile %d : %s", eItemType, c_rstFileName.c_str());

  0001a	50		 push	 eax
  0001b	57		 push	 edi
  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@CMCGILDJ@SetDropSoundFile?5?$CFd?5?3?5?$CFs@
  00021	e8 00 00 00 00	 call	 ?Tracenf@@YAXPBDZZ	; Tracenf

; 150  : 
; 151  : 	SGroundItemInstance::ms_astDropSoundFileName[eItemType]=c_rstFileName;

  00026	8d 04 7f	 lea	 eax, DWORD PTR [edi+edi*2]
  00029	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002c	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR ?ms_astDropSoundFileName@SGroundItemInstance@CPythonItem@@2PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A[eax*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2863 :         if (this != _STD addressof(_Right)) {

  00033	3b ce		 cmp	 ecx, esi
  00035	74 13		 je	 SHORT $LN23@SetDropSou

; 2227 :         return _BUF_SIZE <= _Myres;

  00037	83 7e 14 10	 cmp	 DWORD PTR [esi+20], 16	; 00000010H

; 2218 :         const value_type* _Result = _Bx._Buf;

  0003b	8b c6		 mov	 eax, esi

; 2219 :         if (_Large_string_engaged()) {

  0003d	72 02		 jb	 SHORT $LN17@SetDropSou

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  0003f	8b 06		 mov	 eax, DWORD PTR [esi]
$LN17@SetDropSou:

; 2828 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00041	ff 76 10	 push	 DWORD PTR [esi+16]
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN23@SetDropSou:
  0004a	5e		 pop	 esi
$LN12@SetDropSou:
  0004b	5f		 pop	 edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 152  : }

  0004c	5d		 pop	 ebp
  0004d	c2 08 00	 ret	 8
?SetDropSoundFileName@CPythonItem@@QAEXKABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CPythonItem::SetDropSoundFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?SetUseSoundFileName@CPythonItem@@QAEXKABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_eItemType$ = 8						; size = 4
_c_rstFileName$ = 12					; size = 4
?SetUseSoundFileName@CPythonItem@@QAEXKABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CPythonItem::SetUseSoundFileName, COMDAT
; _this$ = ecx

; 135  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 136  : 	if (eItemType>=USESOUND_NUM)

  00003	8b 45 08	 mov	 eax, DWORD PTR _eItemType$[ebp]
  00006	83 f8 08	 cmp	 eax, 8
  00009	73 23		 jae	 SHORT $LN5@SetUseSoun

; 141  : 	m_astUseSoundFileName[eItemType]=c_rstFileName;	

  0000b	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0000e	8d 0c c1	 lea	 ecx, DWORD PTR [ecx+eax*8]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2863 :         if (this != _STD addressof(_Right)) {

  00011	8b 45 0c	 mov	 eax, DWORD PTR _c_rstFileName$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 141  : 	m_astUseSoundFileName[eItemType]=c_rstFileName;	

  00014	83 c1 40	 add	 ecx, 64			; 00000040H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2863 :         if (this != _STD addressof(_Right)) {

  00017	3b c8		 cmp	 ecx, eax
  00019	74 13		 je	 SHORT $LN5@SetUseSoun

; 2227 :         return _BUF_SIZE <= _Myres;

  0001b	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H

; 2218 :         const value_type* _Result = _Bx._Buf;

  0001f	8b d0		 mov	 edx, eax

; 2219 :         if (_Large_string_engaged()) {

  00021	72 02		 jb	 SHORT $LN10@SetUseSoun

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  00023	8b 10		 mov	 edx, DWORD PTR [eax]
$LN10@SetUseSoun:

; 2828 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00025	ff 70 10	 push	 DWORD PTR [eax+16]
  00028	52		 push	 edx
  00029	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN5@SetUseSoun:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 142  : }

  0002e	5d		 pop	 ebp
  0002f	c2 08 00	 ret	 8
?SetUseSoundFileName@CPythonItem@@QAEXKABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CPythonItem::SetUseSoundFileName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?PlayUsePotionSound@CPythonItem@@QAEXXZ
_TEXT	SEGMENT
?PlayUsePotionSound@CPythonItem@@QAEXXZ PROC		; CPythonItem::PlayUsePotionSound, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3752 :         return _Mypair._Myval2._Myptr();

  00000	81 c1 d0 00 00
	00		 add	 ecx, 208		; 000000d0H

; 2227 :         return _BUF_SIZE <= _Myres;

  00006	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H

; 2219 :         if (_Large_string_engaged()) {

  0000a	72 02		 jb	 SHORT $LN6@PlayUsePot

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  0000c	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN6@PlayUsePot:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 189  : 	CSoundManager::Instance().PlaySound2D(m_astUseSoundFileName[USESOUND_POTION].c_str());

  0000e	51		 push	 ecx
  0000f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCSoundManager@@@@0PAVCSoundManager@@A ; CSingleton<CSoundManager>::ms_singleton
  00015	e8 00 00 00 00	 call	 ?PlaySound2D@CSoundManager@@QAEXPBD@Z ; CSoundManager::PlaySound2D

; 190  : }

  0001a	c3		 ret	 0
?PlayUsePotionSound@CPythonItem@@QAEXXZ ENDP		; CPythonItem::PlayUsePotionSound
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?PlayDropSound@CPythonItem@@QAEXK@Z
_TEXT	SEGMENT
_pkItemData$ = -4					; size = 4
_dwItemID$ = 8						; size = 4
?PlayDropSound@CPythonItem@@QAEXK@Z PROC		; CPythonItem::PlayDropSound, COMDAT
; _this$ = ecx

; 173  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 174  : 	//CItemManager& rkItemMgr=CItemManager::Instance();
; 175  : 
; 176  : 	CItemData* pkItemData;
; 177  : 	if (!CItemManager::Instance().GetItemDataPointer(dwItemID, &pkItemData))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _pkItemData$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A ; CSingleton<CItemManager>::ms_singleton
  00010	50		 push	 eax
  00011	ff 75 08	 push	 DWORD PTR _dwItemID$[ebp]
  00014	e8 00 00 00 00	 call	 ?GetItemDataPointer@CItemManager@@QAEHKPAPAVCItemData@@@Z ; CItemManager::GetItemDataPointer
  00019	85 c0		 test	 eax, eax
  0001b	74 31		 je	 SHORT $LN1@PlayDropSo

; 178  : 		return;
; 179  : 
; 180  : 	DWORD eItemType=__GetDropSoundType(*pkItemData);

  0001d	ff 75 fc	 push	 DWORD PTR _pkItemData$[ebp]
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?__GetDropSoundType@CPythonItem@@IAEKABVCItemData@@@Z ; CPythonItem::__GetDropSoundType

; 181  : 	if (eItemType>=DROPSOUND_NUM)

  00027	83 f8 05	 cmp	 eax, 5
  0002a	73 22		 jae	 SHORT $LN1@PlayDropSo

; 184  : 	CSoundManager::Instance().PlaySound2D(SGroundItemInstance::ms_astDropSoundFileName[eItemType].c_str());

  0002c	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0002f	83 3c c5 14 00
	00 00 10	 cmp	 DWORD PTR ?ms_astDropSoundFileName@SGroundItemInstance@CPythonItem@@2PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A[eax*8+20], 16 ; 00000010H

; 3752 :         return _Mypair._Myval2._Myptr();

  00037	8d 04 c5 00 00
	00 00		 lea	 eax, DWORD PTR ?ms_astDropSoundFileName@SGroundItemInstance@CPythonItem@@2PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A[eax*8]

; 2219 :         if (_Large_string_engaged()) {

  0003e	72 02		 jb	 SHORT $LN8@PlayDropSo

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  00040	8b 00		 mov	 eax, DWORD PTR [eax]
$LN8@PlayDropSo:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 184  : 	CSoundManager::Instance().PlaySound2D(SGroundItemInstance::ms_astDropSoundFileName[eItemType].c_str());

  00042	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCSoundManager@@@@0PAVCSoundManager@@A ; CSingleton<CSoundManager>::ms_singleton
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ?PlaySound2D@CSoundManager@@QAEXPBD@Z ; CSoundManager::PlaySound2D
$LN1@PlayDropSo:
  0004e	5e		 pop	 esi

; 185  : }

  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
?PlayDropSound@CPythonItem@@QAEXK@Z ENDP		; CPythonItem::PlayDropSound
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?PlayUseSound@CPythonItem@@QAEXK@Z
_TEXT	SEGMENT
_pkItemData$ = -4					; size = 4
_dwItemID$ = 8						; size = 4
?PlayUseSound@CPythonItem@@QAEXK@Z PROC			; CPythonItem::PlayUseSound, COMDAT
; _this$ = ecx

; 155  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 156  : 	//CItemManager& rkItemMgr=CItemManager::Instance();
; 157  : 
; 158  : 	CItemData* pkItemData;
; 159  : 	if (!CItemManager::Instance().GetItemDataPointer(dwItemID, &pkItemData))

  00005	8d 45 fc	 lea	 eax, DWORD PTR _pkItemData$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCItemManager@@@@0PAVCItemManager@@A ; CSingleton<CItemManager>::ms_singleton
  00010	50		 push	 eax
  00011	ff 75 08	 push	 DWORD PTR _dwItemID$[ebp]
  00014	e8 00 00 00 00	 call	 ?GetItemDataPointer@CItemManager@@QAEHKPAPAVCItemData@@@Z ; CItemManager::GetItemDataPointer
  00019	85 c0		 test	 eax, eax
  0001b	74 31		 je	 SHORT $LN1@PlayUseSou

; 160  : 		return;
; 161  : 
; 162  : 	DWORD eItemType=__GetUseSoundType(*pkItemData);

  0001d	ff 75 fc	 push	 DWORD PTR _pkItemData$[ebp]
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?__GetUseSoundType@CPythonItem@@IAEKABVCItemData@@@Z ; CPythonItem::__GetUseSoundType

; 163  : 	if (eItemType==USESOUND_NONE)

  00027	85 c0		 test	 eax, eax
  00029	74 23		 je	 SHORT $LN1@PlayUseSou

; 164  : 		return;
; 165  : 	if (eItemType>=USESOUND_NUM)

  0002b	83 f8 08	 cmp	 eax, 8
  0002e	73 1e		 jae	 SHORT $LN1@PlayUseSou

; 168  : 	CSoundManager::Instance().PlaySound2D(m_astUseSoundFileName[eItemType].c_str());

  00030	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3752 :         return _Mypair._Myval2._Myptr();

  00033	8d 40 08	 lea	 eax, DWORD PTR [eax+8]

; 2227 :         return _BUF_SIZE <= _Myres;

  00036	83 7c c6 14 10	 cmp	 DWORD PTR [esi+eax*8+20], 16 ; 00000010H

; 3752 :         return _Mypair._Myval2._Myptr();

  0003b	8d 04 c6	 lea	 eax, DWORD PTR [esi+eax*8]

; 2219 :         if (_Large_string_engaged()) {

  0003e	72 02		 jb	 SHORT $LN9@PlayUseSou

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  00040	8b 00		 mov	 eax, DWORD PTR [eax]
$LN9@PlayUseSou:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 168  : 	CSoundManager::Instance().PlaySound2D(m_astUseSoundFileName[eItemType].c_str());

  00042	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCSoundManager@@@@0PAVCSoundManager@@A ; CSingleton<CSoundManager>::ms_singleton
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ?PlaySound2D@CSoundManager@@QAEXPBD@Z ; CSoundManager::PlaySound2D
$LN1@PlayUseSou:
  0004e	5e		 pop	 esi

; 169  : }

  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c2 04 00	 ret	 4
?PlayUseSound@CPythonItem@@QAEXK@Z ENDP			; CPythonItem::PlayUseSound
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?Create@CPythonItem@@QAEXXZ
_TEXT	SEGMENT
?Create@CPythonItem@@QAEXXZ PROC			; CPythonItem::Create, COMDAT
; _this$ = ecx

; 694  : 	CEffectManager::Instance().RegisterEffect2("d:/ymir work/effect/etc/dropitem/dropitem.mse", &m_dwDropItemEffectID);

  00000	6a 00		 push	 0
  00002	8d 41 30	 lea	 eax, DWORD PTR [ecx+48]
  00005	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  0000b	50		 push	 eax
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@ILCHIEAM@d?3?1ymir?5work?1effect?1etc?1dropite@
  00011	e8 00 00 00 00	 call	 ?RegisterEffect2@CEffectManager@@QAEHPBDPAK_N@Z ; CEffectManager::RegisterEffect2

; 695  : }

  00016	c3		 ret	 0
?Create@CPythonItem@@QAEXXZ ENDP			; CPythonItem::Create
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?Destroy@CPythonItem@@QAEXXZ
_TEXT	SEGMENT
?Destroy@CPythonItem@@QAEXXZ PROC			; CPythonItem::Destroy, COMDAT
; _this$ = ecx

; 687  : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f9		 mov	 edi, ecx

; 688  : 	DeleteAllItems();

  00005	e8 00 00 00 00	 call	 ?DeleteAllItems@CPythonItem@@QAEXXZ ; CPythonItem::DeleteAllItems
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  0000a	8b 5f 14	 mov	 ebx, DWORD PTR [edi+20]
  0000d	8b 77 10	 mov	 esi, DWORD PTR [edi+16]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00010	3b f3		 cmp	 esi, ebx
  00012	74 16		 je	 SHORT $LN21@Destroy
$LL22@Destroy:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 110  : 			delete pkData;

  00014	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00016	85 c9		 test	 ecx, ecx
  00018	74 06		 je	 SHORT $LN20@Destroy
  0001a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001c	6a 01		 push	 1
  0001e	ff 10		 call	 DWORD PTR [eax]
$LN20@Destroy:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 307  :     for (; _UFirst != _ULast; ++_UFirst) {

  00020	83 c6 04	 add	 esi, 4
  00023	3b f3		 cmp	 esi, ebx
  00025	75 ed		 jne	 SHORT $LL22@Destroy
  00027	8b 77 10	 mov	 esi, DWORD PTR [edi+16]
$LN21@Destroy:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 52   : 			m_kVct_pkFree.clear();

  0002a	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  0002d	89 77 14	 mov	 DWORD PTR [edi+20], esi
  00030	89 47 20	 mov	 DWORD PTR [edi+32], eax
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 690  : }

  00036	c3		 ret	 0
?Destroy@CPythonItem@@QAEXXZ ENDP			; CPythonItem::Destroy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ??1CPythonItem@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CPythonItem@@UAE@XZ PROC				; CPythonItem::~CPythonItem, COMDAT
; _this$ = ecx

; 704  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CPythonItem@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b f1		 mov	 esi, ecx
  00025	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CPythonItem@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  0002b	8b 8e 00 01 00
	00		 mov	 ecx, DWORD PTR [esi+256]
  00031	85 c9		 test	 ecx, ecx
  00033	74 33		 je	 SHORT $LN6@CPythonIte

; 1695 :             _Destroy(_Myfirst, _Mylast);
; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00035	8b 86 08 01 00
	00		 mov	 eax, DWORD PTR [esi+264]
  0003b	2b c1		 sub	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0003d	83 e0 fc	 and	 eax, -4			; fffffffcH
  00040	50		 push	 eax
  00041	51		 push	 ecx
  00042	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00047	c7 86 00 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+256], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00051	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  00054	c7 86 04 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+260], 0

; 1700 :             _Myend   = pointer();

  0005e	c7 86 08 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+264], 0
$LN6@CPythonIte:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 706  : }

  00068	68 00 00 00 00	 push	 OFFSET ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0006d	6a 08		 push	 8
  0006f	6a 18		 push	 24			; 00000018H
  00071	8d 46 40	 lea	 eax, DWORD PTR [esi+64]
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0007a	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0007d	e8 00 00 00 00	 call	 ??1?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@UAE@XZ ; CDynamicPool<CPythonItem::SGroundItemInstance>::~CDynamicPool<CPythonItem::SGroundItemInstance>
  00082	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00085	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tmap_traits@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,CPythonItem::SGroundItemInstance *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *> >,0> >
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 19   : 	{ 

  0008a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CSingleton@VCPythonItem@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0; 

  00090	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCPythonItem@@@@0PAVCPythonItem@@A, 0 ; CSingleton<CPythonItem>::ms_singleton
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 706  : }

  0009a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a4	59		 pop	 ecx
  000a5	5e		 pop	 esi
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
  000aa	cc		 int	 3
  000ab	cc		 int	 3
  000ac	cc		 int	 3
  000ad	cc		 int	 3
  000ae	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CPythonItem@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CPythonItem@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CPythonItem@@UAE@XZ ENDP				; CPythonItem::~CPythonItem
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ??0CPythonItem@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__Pnode$2 = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CPythonItem@@QAE@XZ PROC				; CPythonItem::CPythonItem, COMDAT
; _this$ = ecx

; 698  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CPythonItem@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d ec	 mov	 DWORD PTR _this$[ebp], ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 15   : 		ms_singleton = (T*) ((int) this + offset);

  0002d	89 1d 00 00 00
	00		 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCPythonItem@@@@0PAVCPythonItem@@A, ebx ; CSingleton<CPythonItem>::ms_singleton
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 698  : {

  00033	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  00036	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7CPythonItem@@6B@
  0003c	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0003f	6a 18		 push	 24			; 00000018H
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 698  : {

  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

  00048	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  0004e	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00055	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 343  :         const auto _Pnode = _Al.allocate(1);

  0005a	8b f0		 mov	 esi, eax

; 344  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  0005c	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  0005f	50		 push	 eax
  00060	56		 push	 esi
  00061	89 75 f0	 mov	 DWORD PTR __Pnode$2[ebp], esi
  00064	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> * const &>

; 345  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  00069	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  0006c	50		 push	 eax
  0006d	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00070	51		 push	 ecx
  00071	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> * const &>

; 346  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  00076	8d 45 f0	 lea	 eax, DWORD PTR __Pnode$2[ebp]
  00079	50		 push	 eax
  0007a	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> *,std::_Tree_node<std::pair<unsigned long const ,CPythonItem::SGroundItemInstance *>,void *> * const &>

; 347  :         _Pnode->_Color = _Black;

  00083	66 c7 46 0c 01
	01		 mov	 WORD PTR [esi+12], 257	; 00000101H
  00089	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2021 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  0008c	89 37		 mov	 DWORD PTR [edi], esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 12   : 		{

  0008e	c7 43 0c 00 00
	00 00		 mov	 DWORD PTR [ebx+12], OFFSET ??_7?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00095	c7 43 10 00 00
	00 00		 mov	 DWORD PTR [ebx+16], 0
  0009c	c7 43 14 00 00
	00 00		 mov	 DWORD PTR [ebx+20], 0
  000a3	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], 0
  000aa	c7 43 1c 00 00
	00 00		 mov	 DWORD PTR [ebx+28], 0
  000b1	c7 43 20 00 00
	00 00		 mov	 DWORD PTR [ebx+32], 0
  000b8	c7 43 24 00 00
	00 00		 mov	 DWORD PTR [ebx+36], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterLib\Pool.h

; 14   : 			m_uInitCapacity=0;

  000bf	c7 43 28 00 00
	00 00		 mov	 DWORD PTR [ebx+40], 0

; 15   : 			m_uUsedCapacity=0;

  000c6	c7 43 2c 00 00
	00 00		 mov	 DWORD PTR [ebx+44], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 698  : {

  000cd	68 00 00 00 00	 push	 OFFSET ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000d2	68 00 00 00 00	 push	 OFFSET ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000d7	6a 08		 push	 8
  000d9	6a 18		 push	 24			; 00000018H
  000db	8d 43 40	 lea	 eax, DWORD PTR [ebx+64]
  000de	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000e2	50		 push	 eax
  000e3	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000e8	c7 83 00 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+256], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 701  : }

  000f2	8b c3		 mov	 eax, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000f4	c7 83 04 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+260], 0
  000fe	c7 83 08 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+264], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 700  : 	m_dwPickedItemID = INVALID_ID;

  00108	c7 43 34 ff ff
	ff ff		 mov	 DWORD PTR [ebx+52], -1

; 701  : }

  0010f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00112	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00119	59		 pop	 ecx
  0011a	5f		 pop	 edi
  0011b	5e		 pop	 esi
  0011c	5b		 pop	 ebx
  0011d	8b e5		 mov	 esp, ebp
  0011f	5d		 pop	 ebp
  00120	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CPythonItem@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CSingleton@VCPythonItem@@@@UAE@XZ ; CSingleton<CPythonItem>::~CSingleton<CPythonItem>
__unwindfunclet$??0CPythonItem@@QAE@XZ$1:
  00008	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 04	 add	 ecx, 4
  0000e	e9 00 00 00 00	 jmp	 ??1?$map@KPAUSGroundItemInstance@CPythonItem@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUSGroundItemInstance@CPythonItem@@@std@@@4@@std@@QAE@XZ
__unwindfunclet$??0CPythonItem@@QAE@XZ$2:
  00013	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00019	e9 00 00 00 00	 jmp	 ??1?$CDynamicPool@USGroundItemInstance@CPythonItem@@@@UAE@XZ ; CDynamicPool<CPythonItem::SGroundItemInstance>::~CDynamicPool<CPythonItem::SGroundItemInstance>
  0001e	cc		 int	 3
  0001f	cc		 int	 3
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
__ehhandler$??0CPythonItem@@QAE@XZ:
  00023	90		 npad	 1
  00024	90		 npad	 1
  00025	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00029	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002c	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0002f	33 c8		 xor	 ecx, eax
  00031	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00036	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CPythonItem@@QAE@XZ
  0003b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CPythonItem@@QAE@XZ ENDP				; CPythonItem::CPythonItem
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\pythonitem.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\pythonitem.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\pythonitem.h
;	COMDAT ??_GSGroundItemInstance@CPythonItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSGroundItemInstance@CPythonItem@@UAEPAXI@Z PROC	; CPythonItem::SGroundItemInstance::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   : 			virtual ~SGroundItemInstance() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SGroundItemInstance@CPythonItem@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0000c	8b 86 40 02 00
	00		 mov	 eax, DWORD PTR [esi+576]
  00012	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00015	72 10		 jb	 SHORT $LN11@scalar

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00017	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00018	50		 push	 eax
  00019	ff b6 2c 02 00
	00		 push	 DWORD PTR [esi+556]
  0001f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00024	83 c4 08	 add	 esp, 8
$LN11@scalar:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\pythonitem.h

; 72   : 			virtual ~SGroundItemInstance() {}

  00027	8d 4e 3c	 lea	 ecx, DWORD PTR [esi+60]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  0002a	c7 86 3c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+572], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00034	c7 86 40 02 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+576], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0003e	c6 86 2c 02 00
	00 00		 mov	 BYTE PTR [esi+556], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\pythonitem.h

; 72   : 			virtual ~SGroundItemInstance() {}

  00045	e8 00 00 00 00	 call	 ??1CGraphicThingInstance@@UAE@XZ ; CGraphicThingInstance::~CGraphicThingInstance
  0004a	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0004e	74 0e		 je	 SHORT $LN17@scalar
  00050	68 44 02 00 00	 push	 580			; 00000244H
  00055	56		 push	 esi
  00056	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0005b	83 c4 08	 add	 esp, 8
$LN17@scalar:
  0005e	8b c6		 mov	 eax, esi
  00060	5e		 pop	 esi
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
??_GSGroundItemInstance@CPythonItem@@UAEPAXI@Z ENDP	; CPythonItem::SGroundItemInstance::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\pythonitem.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\pythonitem.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\pythonitem.h
;	COMDAT ??1SGroundItemInstance@CPythonItem@@UAE@XZ
_TEXT	SEGMENT
??1SGroundItemInstance@CPythonItem@@UAE@XZ PROC		; CPythonItem::SGroundItemInstance::~SGroundItemInstance, COMDAT
; _this$ = ecx

; 72   : 			virtual ~SGroundItemInstance() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SGroundItemInstance@CPythonItem@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00009	8b 86 40 02 00
	00		 mov	 eax, DWORD PTR [esi+576]
  0000f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 10		 jb	 SHORT $LN7@SGroundIte

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	50		 push	 eax
  00016	ff b6 2c 02 00
	00		 push	 DWORD PTR [esi+556]
  0001c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00021	83 c4 08	 add	 esp, 8
$LN7@SGroundIte:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00024	c7 86 3c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+572], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\pythonitem.h

; 72   : 			virtual ~SGroundItemInstance() {}

  0002e	8d 4e 3c	 lea	 ecx, DWORD PTR [esi+60]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00031	c7 86 40 02 00
	00 0f 00 00 00	 mov	 DWORD PTR [esi+576], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0003b	c6 86 2c 02 00
	00 00		 mov	 BYTE PTR [esi+556], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\pythonitem.h

; 72   : 			virtual ~SGroundItemInstance() {}

  00042	5e		 pop	 esi
  00043	e9 00 00 00 00	 jmp	 ??1CGraphicThingInstance@@UAE@XZ ; CGraphicThingInstance::~CGraphicThingInstance
??1SGroundItemInstance@CPythonItem@@UAE@XZ ENDP		; CPythonItem::SGroundItemInstance::~SGroundItemInstance
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?__PlayDropSound@SGroundItemInstance@CPythonItem@@SAXKABUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
_eItemType$ = 8						; size = 4
_c_rv3Pos$ = 12						; size = 4
?__PlayDropSound@SGroundItemInstance@CPythonItem@@SAXKABUD3DXVECTOR3@@@Z PROC ; CPythonItem::SGroundItemInstance::__PlayDropSound, COMDAT

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 32   : 	if (eItemType>=DROPSOUND_NUM)

  00003	8b 45 08	 mov	 eax, DWORD PTR _eItemType$[ebp]
  00006	83 f8 05	 cmp	 eax, 5
  00009	73 49		 jae	 SHORT $LN1@PlayDropSo

; 35   : 	CSoundManager::Instance().PlaySound3D(c_rv3Pos.x, c_rv3Pos.y, c_rv3Pos.z, ms_astDropSoundFileName[eItemType].c_str());

  0000b	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0000e	83 3c c5 14 00
	00 00 10	 cmp	 DWORD PTR ?ms_astDropSoundFileName@SGroundItemInstance@CPythonItem@@2PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A[eax*8+20], 16 ; 00000010H

; 3752 :         return _Mypair._Myval2._Myptr();

  00016	8d 04 c5 00 00
	00 00		 lea	 eax, DWORD PTR ?ms_astDropSoundFileName@SGroundItemInstance@CPythonItem@@2PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A[eax*8]

; 2219 :         if (_Large_string_engaged()) {

  0001d	72 02		 jb	 SHORT $LN7@PlayDropSo

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  0001f	8b 00		 mov	 eax, DWORD PTR [eax]
$LN7@PlayDropSo:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 35   : 	CSoundManager::Instance().PlaySound3D(c_rv3Pos.x, c_rv3Pos.y, c_rv3Pos.z, ms_astDropSoundFileName[eItemType].c_str());

  00021	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCSoundManager@@@@0PAVCSoundManager@@A ; CSingleton<CSoundManager>::ms_singleton
  00027	6a 01		 push	 1
  00029	50		 push	 eax
  0002a	8b 45 0c	 mov	 eax, DWORD PTR _c_rv3Pos$[ebp]
  0002d	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00030	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00035	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0003b	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00040	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00046	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0004a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004f	e8 00 00 00 00	 call	 ?PlaySound3D@CSoundManager@@QAEXMMMPBDH@Z ; CSoundManager::PlaySound3D
$LN1@PlayDropSo:

; 36   : }

  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?__PlayDropSound@SGroundItemInstance@CPythonItem@@SAXKABUD3DXVECTOR3@@@Z ENDP ; CPythonItem::SGroundItemInstance::__PlayDropSound
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?Clear@SGroundItemInstance@CPythonItem@@QAEXXZ
_TEXT	SEGMENT
?Clear@SGroundItemInstance@CPythonItem@@QAEXXZ PROC	; CPythonItem::SGroundItemInstance::Clear, COMDAT
; _this$ = ecx

; 24   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3062 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00003	6a 00		 push	 0
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 25   : 	stOwnership = "";

  0000a	8d 8e 2c 02 00
	00		 lea	 ecx, DWORD PTR [esi+556]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3062 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00010	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 26   : 	ThingInstance.Clear();

  00015	8d 4e 3c	 lea	 ecx, DWORD PTR [esi+60]
  00018	e8 00 00 00 00	 call	 ?Clear@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Clear

; 27   : 	CEffectManager::Instance().DestroyEffectInstance(dwEffectInstanceIndex);

  0001d	ff b6 28 02 00
	00		 push	 DWORD PTR [esi+552]
  00023	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCEffectManager@@@@0PAVCEffectManager@@A ; CSingleton<CEffectManager>::ms_singleton
  00029	e8 00 00 00 00	 call	 ?DestroyEffectInstance@CEffectManager@@QAE_NK@Z ; CEffectManager::DestroyEffectInstance
  0002e	5e		 pop	 esi

; 28   : }

  0002f	c3		 ret	 0
?Clear@SGroundItemInstance@CPythonItem@@QAEXXZ ENDP	; CPythonItem::SGroundItemInstance::Clear
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?Update@SGroundItemInstance@CPythonItem@@QAE_NXZ
_TEXT	SEGMENT
_qc$1 = -72						; size = 16
_q$2 = -56						; size = 16
_qc$3 = -56						; size = 16
_qAdjust$4 = -40					; size = 16
_qAdjust$5 = -24					; size = 16
_v3NewPosition$6 = -20					; size = 12
_rate$1$ = -8						; size = 4
_this$1$ = -4						; size = 4
tv467 = -4						; size = 4
?Update@SGroundItemInstance@CPythonItem@@QAE_NXZ PROC	; CPythonItem::SGroundItemInstance::Update, COMDAT
; _this$ = ecx

; 39   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx
  00009	89 7d fc	 mov	 DWORD PTR _this$1$[ebp], edi

; 40   : 	if (bAnimEnded)

  0000c	80 bf 24 02 00
	00 00		 cmp	 BYTE PTR [edi+548], 0
  00013	74 07		 je	 SHORT $LN2@Update

; 41   : 		return false;

  00015	32 c0		 xor	 al, al
  00017	5f		 pop	 edi

; 108  : }

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
$LN2@Update:

; 42   : 	if (dwEndTime < CTimer::Instance().GetCurrentMillisecond())

  0001c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  00022	56		 push	 esi
  00023	e8 00 00 00 00	 call	 ?GetCurrentMillisecond@CTimer@@QAEKXZ ; CTimer::GetCurrentMillisecond
  00028	8d 77 20	 lea	 esi, DWORD PTR [edi+32]
  0002b	8d 4f 3c	 lea	 ecx, DWORD PTR [edi+60]
  0002e	39 87 1c 02 00
	00		 cmp	 DWORD PTR [edi+540], eax
  00034	0f 83 e2 00 00
	00		 jae	 $LN3@Update

; 43   : 	{
; 44   : 		ThingInstance.SetRotationQuaternion(qEnd);

  0003a	56		 push	 esi
  0003b	e8 00 00 00 00	 call	 ?SetRotationQuaternion@CGraphicObjectInstance@@QAEXABUD3DXQUATERNION@@@Z ; CGraphicObjectInstance::SetRotationQuaternion

; 54   : 		D3DXQUATERNION qAdjust(-v3Center.x, -v3Center.y, -v3Center.z, 0.0f);

  00040	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000

; 57   : 		D3DXQuaternionMultiply(&qAdjust,&qAdjust,&qEnd);

  00048	8d 45 e8	 lea	 eax, DWORD PTR _qAdjust$5[ebp]
  0004b	f3 0f 10 47 30	 movss	 xmm0, DWORD PTR [edi+48]
  00050	0f 57 c1	 xorps	 xmm0, xmm1
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 670  :     w = fw;

  00053	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _qAdjust$5[ebp+12], 0
  0005a	f3 0f 11 45 e8	 movss	 DWORD PTR _qAdjust$5[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 54   : 		D3DXQUATERNION qAdjust(-v3Center.x, -v3Center.y, -v3Center.z, 0.0f);

  0005f	f3 0f 10 47 34	 movss	 xmm0, DWORD PTR [edi+52]
  00064	0f 57 c1	 xorps	 xmm0, xmm1
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 668  :     y = fy;

  00067	f3 0f 11 45 ec	 movss	 DWORD PTR _qAdjust$5[ebp+4], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 54   : 		D3DXQUATERNION qAdjust(-v3Center.x, -v3Center.y, -v3Center.z, 0.0f);

  0006c	f3 0f 10 47 38	 movss	 xmm0, DWORD PTR [edi+56]
  00071	0f 57 c1	 xorps	 xmm0, xmm1
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 669  :     z = fz;

  00074	f3 0f 11 45 f0	 movss	 DWORD PTR _qAdjust$5[ebp+8], xmm0

; 1616 :     pOut->x = -pQ->x;

  00079	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  0007d	0f 57 c1	 xorps	 xmm0, xmm1
  00080	f3 0f 11 45 c8	 movss	 DWORD PTR _qc$3[ebp], xmm0

; 1617 :     pOut->y = -pQ->y;

  00085	f3 0f 10 46 04	 movss	 xmm0, DWORD PTR [esi+4]
  0008a	0f 57 c1	 xorps	 xmm0, xmm1
  0008d	f3 0f 11 45 cc	 movss	 DWORD PTR _qc$3[ebp+4], xmm0

; 1618 :     pOut->z = -pQ->z;

  00092	f3 0f 10 46 08	 movss	 xmm0, DWORD PTR [esi+8]
  00097	0f 57 c1	 xorps	 xmm0, xmm1
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 57   : 		D3DXQuaternionMultiply(&qAdjust,&qAdjust,&qEnd);

  0009a	56		 push	 esi
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1618 :     pOut->z = -pQ->z;

  0009b	f3 0f 11 45 d0	 movss	 DWORD PTR _qc$3[ebp+8], xmm0

; 1619 :     pOut->w =  pQ->w;

  000a0	f3 0f 10 46 0c	 movss	 xmm0, DWORD PTR [esi+12]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 57   : 		D3DXQuaternionMultiply(&qAdjust,&qAdjust,&qEnd);

  000a5	50		 push	 eax
  000a6	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1619 :     pOut->w =  pQ->w;

  000a7	f3 0f 11 45 d4	 movss	 DWORD PTR _qc$3[ebp+12], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 57   : 		D3DXQuaternionMultiply(&qAdjust,&qAdjust,&qEnd);

  000ac	e8 00 00 00 00	 call	 _D3DXQuaternionMultiply@12

; 58   : 		D3DXQuaternionMultiply(&qAdjust,&qc,&qAdjust);

  000b1	8d 45 e8	 lea	 eax, DWORD PTR _qAdjust$5[ebp]
  000b4	50		 push	 eax
  000b5	8d 45 c8	 lea	 eax, DWORD PTR _qc$3[ebp]
  000b8	50		 push	 eax
  000b9	8d 45 e8	 lea	 eax, DWORD PTR _qAdjust$5[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 _D3DXQuaternionMultiply@12

; 59   : 
; 60   : 		ThingInstance.SetPosition(v3EndPosition.x+qAdjust.x, 

  000c2	f3 0f 10 47 10	 movss	 xmm0, DWORD PTR [edi+16]
  000c7	8d 77 08	 lea	 esi, DWORD PTR [edi+8]
  000ca	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _qAdjust$5[ebp+8]
  000cf	83 ec 0c	 sub	 esp, 12			; 0000000cH
  000d2	8d 4f 3c	 lea	 ecx, DWORD PTR [edi+60]
  000d5	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  000db	f3 0f 10 47 0c	 movss	 xmm0, DWORD PTR [edi+12]
  000e0	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _qAdjust$5[ebp+4]
  000e5	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000eb	f3 0f 10 06	 movss	 xmm0, DWORD PTR [esi]
  000ef	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _qAdjust$5[ebp]
  000f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f9	e8 00 00 00 00	 call	 ?SetPosition@CGraphicObjectInstance@@QAEXMMM@Z ; CGraphicObjectInstance::SetPosition

; 61   : 			v3EndPosition.y+qAdjust.y,
; 62   : 			v3EndPosition.z+qAdjust.z);
; 63   : 		//ThingInstance.Update();
; 64   : 		bAnimEnded = true;
; 65   : 
; 66   : 		__PlayDropSound(eDropSoundType, v3EndPosition);

  000fe	56		 push	 esi
  000ff	ff b7 20 02 00
	00		 push	 DWORD PTR [edi+544]
  00105	c6 87 24 02 00
	00 01		 mov	 BYTE PTR [edi+548], 1
  0010c	e8 00 00 00 00	 call	 ?__PlayDropSound@SGroundItemInstance@CPythonItem@@SAXKABUD3DXVECTOR3@@@Z ; CPythonItem::SGroundItemInstance::__PlayDropSound
  00111	83 c4 08	 add	 esp, 8

; 67   : 	}

  00114	8d 77 3c	 lea	 esi, DWORD PTR [edi+60]
  00117	e9 d2 01 00 00	 jmp	 $LN4@Update
$LN3@Update:

; 68   : 	else
; 69   : 	{
; 70   : 		DWORD time = CTimer::Instance().GetCurrentMillisecond() - dwStartTime;

  0011c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  00122	e8 00 00 00 00	 call	 ?GetCurrentMillisecond@CTimer@@QAEKXZ ; CTimer::GetCurrentMillisecond

; 71   : 		DWORD etime = dwEndTime - CTimer::Instance().GetCurrentMillisecond();

  00127	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCTimer@@@@0PAVCTimer@@A ; CSingleton<CTimer>::ms_singleton
  0012d	8b f0		 mov	 esi, eax
  0012f	2b b7 18 02 00
	00		 sub	 esi, DWORD PTR [edi+536]
  00135	8b bf 1c 02 00
	00		 mov	 edi, DWORD PTR [edi+540]
  0013b	e8 00 00 00 00	 call	 ?GetCurrentMillisecond@CTimer@@QAEKXZ ; CTimer::GetCurrentMillisecond
  00140	66 0f 6e c6	 movd	 xmm0, esi
  00144	8b cf		 mov	 ecx, edi

; 72   : 		float rate = time * 1.0f / (dwEndTime - dwStartTime);

  00146	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0014a	2b c8		 sub	 ecx, eax
  0014c	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  0014f	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00152	2b b8 18 02 00
	00		 sub	 edi, DWORD PTR [eax+536]
  00158	f2 0f 58 04 f5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[esi*8]
  00161	66 0f 5a d0	 cvtpd2ps xmm2, xmm0
  00165	66 0f 6e c7	 movd	 xmm0, edi
  00169	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0016d	c1 ef 1f	 shr	 edi, 31			; 0000001fH
  00170	f2 0f 58 04 fd
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edi*8]

; 73   : 
; 74   : 		D3DXVECTOR3 v3NewPosition=v3EndPosition;// = rate*(v3EndPosition - v3StartPosition) + v3StartPosition;

  00179	8b f8		 mov	 edi, eax
  0017b	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0017f	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00182	89 45 f4	 mov	 DWORD PTR _v3NewPosition$6[ebp+8], eax

; 75   : 		v3NewPosition.z += 100-100*rate*(3*rate-2);//-100*(rate-1)*(3*rate+2);
; 76   : 
; 77   : 		D3DXQUATERNION q;
; 78   : 		D3DXQuaternionRotationAxis(&q, &v3RotationAxis, etime * 0.03f *(-1+rate*(3*rate-2)));

  00185	8d 47 14	 lea	 eax, DWORD PTR [edi+20]
  00188	f3 0f 5e d0	 divss	 xmm2, xmm0
  0018c	f3 0f 7e 47 08	 movq	 xmm0, QWORD PTR [edi+8]
  00191	66 0f d6 45 ec	 movq	 QWORD PTR _v3NewPosition$6[ebp], xmm0
  00196	0f 28 c2	 movaps	 xmm0, xmm2
  00199	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40400000
  001a1	f3 0f 11 55 f8	 movss	 DWORD PTR _rate$1$[ebp], xmm2
  001a6	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@40000000
  001ae	0f 28 c8	 movaps	 xmm1, xmm0
  001b1	f3 0f 11 45 fc	 movss	 DWORD PTR tv467[ebp], xmm0
  001b6	66 0f 6e c1	 movd	 xmm0, ecx
  001ba	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  001be	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  001c1	51		 push	 ecx
  001c2	f3 0f 59 ca	 mulss	 xmm1, xmm2
  001c6	f2 0f 58 04 cd
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
  001cf	f3 0f 5c 0d 00
	00 00 00	 subss	 xmm1, DWORD PTR __real@3f800000
  001d7	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  001db	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3cf5c28f
  001e3	f3 0f 59 c8	 mulss	 xmm1, xmm0
  001e7	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  001ec	50		 push	 eax
  001ed	8d 45 c8	 lea	 eax, DWORD PTR _q$2[ebp]
  001f0	50		 push	 eax
  001f1	e8 00 00 00 00	 call	 _D3DXQuaternionRotationAxis@12

; 79   : 		//ThingInstance.SetRotation(rEnd.y + etime*rStart.y, rEnd.x + etime*rStart.x, rEnd.z + etime*rStart.z);
; 80   : 		D3DXQuaternionMultiply(&q,&qEnd,&q);

  001f6	8d 45 c8	 lea	 eax, DWORD PTR _q$2[ebp]
  001f9	50		 push	 eax
  001fa	8d 47 20	 lea	 eax, DWORD PTR [edi+32]
  001fd	50		 push	 eax
  001fe	8d 45 c8	 lea	 eax, DWORD PTR _q$2[ebp]
  00201	50		 push	 eax
  00202	e8 00 00 00 00	 call	 _D3DXQuaternionMultiply@12

; 81   : 
; 82   : 		ThingInstance.SetRotationQuaternion(q);

  00207	8d 45 c8	 lea	 eax, DWORD PTR _q$2[ebp]
  0020a	8d 77 3c	 lea	 esi, DWORD PTR [edi+60]
  0020d	50		 push	 eax
  0020e	8b ce		 mov	 ecx, esi
  00210	e8 00 00 00 00	 call	 ?SetRotationQuaternion@CGraphicObjectInstance@@QAEXABUD3DXQUATERNION@@@Z ; CGraphicObjectInstance::SetRotationQuaternion

; 83   : 		D3DXQUATERNION qAdjust(-v3Center.x, -v3Center.y, -v3Center.z, 0.0f);

  00215	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  0021d	f3 0f 10 47 30	 movss	 xmm0, DWORD PTR [edi+48]
  00222	0f 57 c1	 xorps	 xmm0, xmm1
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 670  :     w = fw;

  00225	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _qAdjust$4[ebp+12], 0
  0022c	f3 0f 11 45 d8	 movss	 DWORD PTR _qAdjust$4[ebp], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 83   : 		D3DXQUATERNION qAdjust(-v3Center.x, -v3Center.y, -v3Center.z, 0.0f);

  00231	f3 0f 10 47 34	 movss	 xmm0, DWORD PTR [edi+52]
  00236	0f 57 c1	 xorps	 xmm0, xmm1
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 668  :     y = fy;

  00239	f3 0f 11 45 dc	 movss	 DWORD PTR _qAdjust$4[ebp+4], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 83   : 		D3DXQUATERNION qAdjust(-v3Center.x, -v3Center.y, -v3Center.z, 0.0f);

  0023e	f3 0f 10 47 38	 movss	 xmm0, DWORD PTR [edi+56]
  00243	0f 57 c1	 xorps	 xmm0, xmm1
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 669  :     z = fz;

  00246	f3 0f 11 45 e0	 movss	 DWORD PTR _qAdjust$4[ebp+8], xmm0

; 1616 :     pOut->x = -pQ->x;

  0024b	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _q$2[ebp]
  00250	0f 57 c1	 xorps	 xmm0, xmm1
  00253	f3 0f 11 45 b8	 movss	 DWORD PTR _qc$1[ebp], xmm0

; 1617 :     pOut->y = -pQ->y;

  00258	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _q$2[ebp+4]
  0025d	0f 57 c1	 xorps	 xmm0, xmm1
  00260	f3 0f 11 45 bc	 movss	 DWORD PTR _qc$1[ebp+4], xmm0

; 1618 :     pOut->z = -pQ->z;

  00265	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _q$2[ebp+8]
  0026a	0f 57 c1	 xorps	 xmm0, xmm1
  0026d	f3 0f 11 45 c0	 movss	 DWORD PTR _qc$1[ebp+8], xmm0

; 1619 :     pOut->w =  pQ->w;

  00272	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _q$2[ebp+12]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 86   : 		D3DXQuaternionMultiply(&qAdjust,&qAdjust,&q);

  00277	8d 45 c8	 lea	 eax, DWORD PTR _q$2[ebp]
  0027a	50		 push	 eax
  0027b	8d 45 d8	 lea	 eax, DWORD PTR _qAdjust$4[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1619 :     pOut->w =  pQ->w;

  0027e	f3 0f 11 45 c4	 movss	 DWORD PTR _qc$1[ebp+12], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp

; 86   : 		D3DXQuaternionMultiply(&qAdjust,&qAdjust,&q);

  00283	50		 push	 eax
  00284	50		 push	 eax
  00285	e8 00 00 00 00	 call	 _D3DXQuaternionMultiply@12

; 87   : 		D3DXQuaternionMultiply(&qAdjust,&qc,&qAdjust);

  0028a	8d 45 d8	 lea	 eax, DWORD PTR _qAdjust$4[ebp]
  0028d	50		 push	 eax
  0028e	8d 45 b8	 lea	 eax, DWORD PTR _qc$1[ebp]
  00291	50		 push	 eax
  00292	8d 45 d8	 lea	 eax, DWORD PTR _qAdjust$4[ebp]
  00295	50		 push	 eax
  00296	e8 00 00 00 00	 call	 _D3DXQuaternionMultiply@12
  0029b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42c80000

; 88   : 		
; 89   : 		ThingInstance.SetPosition(v3NewPosition.x+qAdjust.x, 

  002a3	83 ec 0c	 sub	 esp, 12			; 0000000cH
  002a6	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR _rate$1$[ebp]
  002ab	8b ce		 mov	 ecx, esi
  002ad	f3 0f 59 c8	 mulss	 xmm1, xmm0
  002b1	f3 0f 59 4d fc	 mulss	 xmm1, DWORD PTR tv467[ebp]
  002b6	f3 0f 5c c1	 subss	 xmm0, xmm1
  002ba	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _v3NewPosition$6[ebp+8]
  002bf	f3 0f 58 45 e0	 addss	 xmm0, DWORD PTR _qAdjust$4[ebp+8]
  002c4	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  002ca	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _qAdjust$4[ebp+4]
  002cf	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _v3NewPosition$6[ebp+4]
  002d4	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  002da	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _qAdjust$4[ebp]
  002df	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _v3NewPosition$6[ebp]
  002e4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e9	e8 00 00 00 00	 call	 ?SetPosition@CGraphicObjectInstance@@QAEXMMM@Z ; CGraphicObjectInstance::SetPosition
$LN4@Update:

; 90   : 			v3NewPosition.y+qAdjust.y,
; 91   : 			v3NewPosition.z+qAdjust.z);
; 92   : 		
; 93   : 		/*D3DXVECTOR3 v3Adjust = -v3Center;
; 94   : 		D3DXMATRIX mat;
; 95   : 		D3DXMatrixRotationYawPitchRoll(&mat, 
; 96   : 		D3DXToRadian(rEnd.y + etime*rStart.y), 
; 97   : 		D3DXToRadian(rEnd.x + etime*rStart.x), 
; 98   : 		D3DXToRadian(rEnd.z + etime*rStart.z));
; 99   : 						
; 100  : 		D3DXVec3TransformCoord(&v3Adjust,&v3Adjust,&mat);
; 101  : 		//Tracef("%f %f %f\n",v3Adjust.x,v3Adjust.y,v3Adjust.z);
; 102  : 		v3NewPosition += v3Adjust;
; 103  : 		ThingInstance.SetPosition(v3NewPosition.x, v3NewPosition.y, v3NewPosition.z);*/
; 104  : 	}
; 105  : 	ThingInstance.Transform();

  002ee	8b ce		 mov	 ecx, esi
  002f0	e8 00 00 00 00	 call	 ?Transform@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Transform

; 106  : 	ThingInstance.Deform();				

  002f5	8b ce		 mov	 ecx, esi
  002f7	e8 00 00 00 00	 call	 ?Deform@CGraphicObjectInstance@@QAEXXZ ; CGraphicObjectInstance::Deform

; 107  : 	return !bAnimEnded;

  002fc	80 bf 24 02 00
	00 00		 cmp	 BYTE PTR [edi+548], 0
  00303	5e		 pop	 esi
  00304	0f 94 c0	 sete	 al
  00307	5f		 pop	 edi

; 108  : }

  00308	8b e5		 mov	 esp, ebp
  0030a	5d		 pop	 ebp
  0030b	c3		 ret	 0
?Update@SGroundItemInstance@CPythonItem@@QAE_NXZ ENDP	; CPythonItem::SGroundItemInstance::Update
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
;	COMDAT ??_G?$CSingleton@VCPythonItem@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CSingleton@VCPythonItem@@@@UAEPAXI@Z PROC		; CSingleton<CPythonItem>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1

; 19   : 	{ 

  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CSingleton@VCPythonItem@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0; 

  00010	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCPythonItem@@@@0PAVCPythonItem@@A, 0 ; CSingleton<CPythonItem>::ms_singleton
  0001a	74 0b		 je	 SHORT $LN6@scalar
  0001c	6a 04		 push	 4
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00024	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
??_G?$CSingleton@VCPythonItem@@@@UAEPAXI@Z ENDP		; CSingleton<CPythonItem>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
;	COMDAT ??1?$CSingleton@VCPythonItem@@@@UAE@XZ
_TEXT	SEGMENT
??1?$CSingleton@VCPythonItem@@@@UAE@XZ PROC		; CSingleton<CPythonItem>::~CSingleton<CPythonItem>, COMDAT
; _this$ = ecx

; 19   : 	{ 

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CSingleton@VCPythonItem@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0; 

  00006	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCPythonItem@@@@0PAVCPythonItem@@A, 0 ; CSingleton<CPythonItem>::ms_singleton

; 22   : 	}

  00010	c3		 ret	 0
??1?$CSingleton@VCPythonItem@@@@UAE@XZ ENDP		; CSingleton<CPythonItem>::~CSingleton<CPythonItem>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterlib\GrpMath.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterlib\GrpMath.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterlib\GrpMath.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterlib\GrpMath.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterlib\GrpMath.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterlib\GrpMath.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterlib\GrpMath.h
;	COMDAT ?RotationArc@@YA?AUD3DXQUATERNION@@ABUD3DXVECTOR3@@0@Z
_TEXT	SEGMENT
_vnTo$ = -28						; size = 12
_vnFrom$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_vFrom$ = 12						; size = 4
_vTo$ = 16						; size = 4
?RotationArc@@YA?AUD3DXQUATERNION@@ABUD3DXVECTOR3@@0@Z PROC ; RotationArc, COMDAT

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 20	 sub	 esp, 32			; 00000020H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c4		 xor	 eax, esp
  00010	89 44 24 1c	 mov	 DWORD PTR __$ArrayPad$[esp+32], eax
  00014	8b 45 0c	 mov	 eax, DWORD PTR _vFrom$[ebp]
  00017	56		 push	 esi
  00018	8b 75 10	 mov	 esi, DWORD PTR _vTo$[ebp]
  0001b	57		 push	 edi
  0001c	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]

; 74   : 	D3DXVECTOR3 vnFrom, vnTo;
; 75   : 	D3DXVec3Normalize(&vnFrom, &vFrom);

  0001f	50		 push	 eax
  00020	8d 44 24 1c	 lea	 eax, DWORD PTR _vnFrom$[esp+44]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 _D3DXVec3Normalize@8

; 76   : 	D3DXVec3Normalize(&vnTo, &vTo);

  0002a	56		 push	 esi
  0002b	8d 44 24 10	 lea	 eax, DWORD PTR _vnTo$[esp+44]
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 _D3DXVec3Normalize@8
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1264 :     return pV1->x * pV2->x + pV1->y * pV2->y + pV1->z * pV2->z;

  00035	f3 0f 10 4c 24
	10		 movss	 xmm1, DWORD PTR _vnTo$[esp+44]
  0003b	f3 0f 59 4c 24
	1c		 mulss	 xmm1, DWORD PTR _vnFrom$[esp+44]
  00041	f3 0f 10 44 24
	18		 movss	 xmm0, DWORD PTR _vnFrom$[esp+40]
  00047	f3 0f 59 44 24
	0c		 mulss	 xmm0, DWORD PTR _vnTo$[esp+40]
  0004d	f3 0f 58 c8	 addss	 xmm1, xmm0
  00051	f3 0f 10 44 24
	20		 movss	 xmm0, DWORD PTR _vnFrom$[esp+48]
  00057	f3 0f 59 44 24
	14		 mulss	 xmm0, DWORD PTR _vnTo$[esp+48]
  0005d	f3 0f 58 c8	 addss	 xmm1, xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterlib\GrpMath.h

; 67   : 	float s = sqrtf((1+d)*2);

  00061	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3f800000
  00069	f3 0f 58 c9	 addss	 xmm1, xmm1
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  0006d	0f 5a c1	 cvtps2pd xmm0, xmm1
  00070	0f 57 c9	 xorps	 xmm1, xmm1
  00073	66 0f 2e c8	 ucomisd xmm1, xmm0
  00077	77 06		 ja	 SHORT $LN13@RotationAr
  00079	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  0007d	eb 05		 jmp	 SHORT $LN14@RotationAr
$LN13@RotationAr:
  0007f	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN14@RotationAr:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00084	f3 0f 10 7c 24
	10		 movss	 xmm7, DWORD PTR _vnTo$[esp+44]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  0008a	0f 57 db	 xorps	 xmm3, xmm3
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  0008d	f3 0f 10 74 24
	1c		 movss	 xmm6, DWORD PTR _vnFrom$[esp+44]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterlib\GrpMath.h

; 77   : 	return RotationNormalizedArc(vnFrom, vnTo);

  00093	8b c7		 mov	 eax, edi
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  00095	f3 0f 10 64 24
	20		 movss	 xmm4, DWORD PTR _vnFrom$[esp+48]
  0009b	f3 0f 10 4c 24
	14		 movss	 xmm1, DWORD PTR _vnTo$[esp+48]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

  000a1	f2 0f 5a d8	 cvtsd2ss xmm3, xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterlib\GrpMath.h

; 78   : }

  000a5	8b 4c 24 24	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+40]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1277 :     v.x = pV1->y * pV2->z - pV1->z * pV2->y;

  000a9	0f 28 c7	 movaps	 xmm0, xmm7
  000ac	f3 0f 59 ce	 mulss	 xmm1, xmm6

; 1279 :     v.z = pV1->x * pV2->y - pV1->y * pV2->x;

  000b0	f3 0f 59 7c 24
	18		 mulss	 xmm7, DWORD PTR _vnFrom$[esp+40]
  000b6	f3 0f 59 74 24
	0c		 mulss	 xmm6, DWORD PTR _vnTo$[esp+40]
  000bc	f3 0f 59 c4	 mulss	 xmm0, xmm4
  000c0	f3 0f 59 64 24
	0c		 mulss	 xmm4, DWORD PTR _vnTo$[esp+40]
  000c6	f3 0f 5c fe	 subss	 xmm7, xmm6
  000ca	f3 0f 5c c8	 subss	 xmm1, xmm0
  000ce	f3 0f 10 44 24
	18		 movss	 xmm0, DWORD PTR _vnFrom$[esp+40]
  000d4	f3 0f 59 44 24
	14		 mulss	 xmm0, DWORD PTR _vnTo$[esp+48]

; 668  :     y = fy;

  000da	f3 0f 5e fb	 divss	 xmm7, xmm3

; 1278 :     v.y = pV1->z * pV2->x - pV1->x * pV2->z;

  000de	f3 0f 5c e0	 subss	 xmm4, xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterlib\GrpMath.h

; 67   : 	float s = sqrtf((1+d)*2);

  000e2	f3 0f 5e cb	 divss	 xmm1, xmm3
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 667  :     x = fx;

  000e6	f3 0f 5e e3	 divss	 xmm4, xmm3
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterlib\GrpMath.h

; 69   : 	return D3DXQUATERNION(c.x/s,c.y/s,c.z/s,s*0.5f);

  000ea	f3 0f 59 1d 00
	00 00 00	 mulss	 xmm3, DWORD PTR __real@3f000000
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 667  :     x = fx;

  000f2	f3 0f 11 0f	 movss	 DWORD PTR [edi], xmm1

; 668  :     y = fy;

  000f6	f3 0f 11 67 04	 movss	 DWORD PTR [edi+4], xmm4

; 669  :     z = fz;

  000fb	f3 0f 11 7f 08	 movss	 DWORD PTR [edi+8], xmm7

; 670  :     w = fw;

  00100	f3 0f 11 5f 0c	 movss	 DWORD PTR [edi+12], xmm3
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterlib\GrpMath.h

; 78   : }

  00105	5f		 pop	 edi
  00106	5e		 pop	 esi
  00107	33 cc		 xor	 ecx, esp
  00109	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010e	8b e5		 mov	 esp, ebp
  00110	5d		 pop	 ebp
  00111	c3		 ret	 0
?RotationArc@@YA?AUD3DXQUATERNION@@ABUD3DXVECTOR3@@0@Z ENDP ; RotationArc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 271  : #if _HAS_IF_CONSTEXPR
; 272  :     if constexpr (is_array_v<_Ty>) {
; 273  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 274  :     } else
; 275  : #endif // _HAS_IF_CONSTEXPR
; 276  :     {
; 277  :         _Obj.~_Ty();
; 278  :     }
; 279  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ?_Throw_tree_length_error@std@@YAXXZ
_TEXT	SEGMENT
?_Throw_tree_length_error@std@@YAXXZ PROC		; std::_Throw_tree_length_error, COMDAT

; 415  :     _Xlength_error("map/set too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Throw_tree:
  0000a	cc		 int	 3
?_Throw_tree_length_error@std@@YAXXZ ENDP		; std::_Throw_tree_length_error
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__New_ptr$1 = 12					; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 3042 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	57		 push	 edi

; 3043 :         // assign [_Ptr, _Ptr + _Count)
; 3044 :         if (_Count <= _Mypair._Myval2._Myres) {

  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b f9		 cmp	 edi, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2209 :         value_type* _Result = _Bx._Buf;

  00016	8b de		 mov	 ebx, esi

; 2227 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2210 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2211 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 1e		 mov	 ebx, DWORD PTR [esi]
$LN5@assign:

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0001f	57		 push	 edi
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 3045 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00026	53		 push	 ebx
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3047 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 3059 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4305 :         if (_New_size > max_size()) {

  0003e	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  00044	0f 87 91 00 00
	00		 ja	 $LN36@assign

; 4285 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b df		 mov	 ebx, edi
  0004c	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0004f	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4286 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 07		 jbe	 SHORT $LN19@assign

; 4287 :             return _Max;

  00057	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0005c	eb 1e		 jmp	 SHORT $LN18@assign
$LN19@assign:

; 4288 :         }
; 4289 : 
; 4290 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0005e	8b d1		 mov	 edx, ecx
  00060	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00065	d1 ea		 shr	 edx, 1
  00067	2b c2		 sub	 eax, edx
  00069	3b c8		 cmp	 ecx, eax
  0006b	76 07		 jbe	 SHORT $LN20@assign

; 4291 :             return _Max;

  0006d	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00072	eb 08		 jmp	 SHORT $LN18@assign
$LN20@assign:

; 4292 :         }
; 4293 : 
; 4294 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00074	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00077	3b d8		 cmp	 ebx, eax
  00079	0f 42 d8	 cmovb	 ebx, eax
$LN18@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4312 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0007c	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00085	57		 push	 edi
  00086	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4312 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00089	89 45 0c	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0008c	50		 push	 eax

; 4314 :         _Mypair._Myval2._Mysize = _New_size;

  0008d	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 4315 :         _Mypair._Myval2._Myres  = _New_capacity;

  00090	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00093	e8 00 00 00 00	 call	 _memcpy

; 3056 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00098	8b 5d 0c	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0009b	83 c4 10	 add	 esp, 16			; 00000010H

; 4317 :         if (_BUF_SIZE <= _Old_capacity) {

  0009e	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 3056 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a1	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 4317 :         if (_BUF_SIZE <= _Old_capacity) {

  000a5	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a8	72 19		 jb	 SHORT $LN13@assign

; 4318 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000aa	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ab	50		 push	 eax
  000ac	ff 36		 push	 DWORD PTR [esi]
  000ae	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3059 :     }

  000b3	83 c4 08	 add	 esp, 8

; 4319 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000b6	89 1e		 mov	 DWORD PTR [esi], ebx

; 3059 :     }

  000b8	8b c6		 mov	 eax, esi
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
$LN13@assign:

; 4321 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000c3	8d 45 0c	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000c6	50		 push	 eax
  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 3059 :     }

  000cd	83 c4 08	 add	 esp, 8
  000d0	8b c6		 mov	 eax, esi
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
$LN36@assign:

; 4306 :             _Xlen_string(); // result too long

  000db	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN33@assign:
  000e0	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2800 :     ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2227 :         return _BUF_SIZE <= _Myres;

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN4@basic_stri

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN4@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi

; 2801 :         _Tidy_deallocate();
; 2802 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2803 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2804 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2805 :         _Mypair._Myval2._Myproxy = nullptr;
; 2806 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2807 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2808 :     }

  00029	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 4377 :         _Mypair._Myval2._Mysize = 0;

  00000	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0

; 2366 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 2367 :         _Tidy_init();
; 2368 :     }

  00007	8b c1		 mov	 eax, ecx

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00009	c7 41 14 0f 00
	00 00		 mov	 DWORD PTR [ecx+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00010	c6 01 00	 mov	 BYTE PTR [ecx], 0

; 2366 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 2367 :         _Tidy_init();
; 2368 :     }

  00013	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2275 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00011	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	ff 70 04	 push	 DWORD PTR [eax+4]
  0001b	83 c9 01	 or	 ecx, 1
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00024	83 c9 ff	 or	 ecx, -1
  00027	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002a	85 c0		 test	 eax, eax
  0002c	0f 48 c1	 cmovs	 eax, ecx

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);
; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);
; 1792 :         return _Result;
; 1793 :     }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.h
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = ecx

; 177  :     D3DXMATRIX() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonItem.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	c2 00 00	 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
