; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	?initsafebox@@YAXXZ				; initsafebox
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??_G?$CSingleton@VCPythonSafeBox@@@@UAEPAXI@Z	; CSingleton<CPythonSafeBox>::`scalar deleting destructor'
PUBLIC	??0CPythonSafeBox@@QAE@XZ			; CPythonSafeBox::CPythonSafeBox
PUBLIC	??1CPythonSafeBox@@UAE@XZ			; CPythonSafeBox::~CPythonSafeBox
PUBLIC	?OpenSafeBox@CPythonSafeBox@@QAEXH@Z		; CPythonSafeBox::OpenSafeBox
PUBLIC	?SetItemData@CPythonSafeBox@@QAEXKABUpacket_item@@@Z ; CPythonSafeBox::SetItemData
PUBLIC	?DelItemData@CPythonSafeBox@@QAEXK@Z		; CPythonSafeBox::DelItemData
PUBLIC	?SetMoney@CPythonSafeBox@@QAEXK@Z		; CPythonSafeBox::SetMoney
PUBLIC	?GetMoney@CPythonSafeBox@@QAEKXZ		; CPythonSafeBox::GetMoney
PUBLIC	?GetSlotItemID@CPythonSafeBox@@QAEHKPAK@Z	; CPythonSafeBox::GetSlotItemID
PUBLIC	?GetCurrentSafeBoxSize@CPythonSafeBox@@QAEHXZ	; CPythonSafeBox::GetCurrentSafeBoxSize
PUBLIC	?GetItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetItemDataPtr
PUBLIC	?OpenMall@CPythonSafeBox@@QAEXH@Z		; CPythonSafeBox::OpenMall
PUBLIC	?SetMallItemData@CPythonSafeBox@@QAEXKABUpacket_item@@@Z ; CPythonSafeBox::SetMallItemData
PUBLIC	?DelMallItemData@CPythonSafeBox@@QAEXK@Z	; CPythonSafeBox::DelMallItemData
PUBLIC	?GetMallItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetMallItemDataPtr
PUBLIC	?GetSlotMallItemID@CPythonSafeBox@@QAEHKPAK@Z	; CPythonSafeBox::GetSlotMallItemID
PUBLIC	?GetMallSize@CPythonSafeBox@@QAEKXZ		; CPythonSafeBox::GetMallSize
PUBLIC	?deallocate@?$allocator@Upacket_item@@@std@@QAEXQAUpacket_item@@I@Z ; std::allocator<packet_item>::deallocate
PUBLIC	?clear@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@QAEXXZ ; std::vector<packet_item,std::allocator<packet_item> >::clear
PUBLIC	?_Destroy@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXPAUpacket_item@@0@Z ; std::vector<packet_item,std::allocator<packet_item> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@ABEII@Z ; std::vector<packet_item,std::allocator<packet_item> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXQAUpacket_item@@II@Z ; std::vector<packet_item,std::allocator<packet_item> >::_Change_array
PUBLIC	?_Tidy@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXXZ ; std::vector<packet_item,std::allocator<packet_item> >::_Tidy
PUBLIC	?_Xlength@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@CAXXZ ; std::vector<packet_item,std::allocator<packet_item> >::_Xlength
PUBLIC	?_Getal@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEAAV?$allocator@Upacket_item@@@2@XZ ; std::vector<packet_item,std::allocator<packet_item> >::_Getal
PUBLIC	??_GCPythonSafeBox@@UAEPAXI@Z			; CPythonSafeBox::`scalar deleting destructor'
PUBLIC	?safeboxGetCurrentSafeboxSize@@YAPAU_object@@PAU1@0@Z ; safeboxGetCurrentSafeboxSize
PUBLIC	?safeboxGetItemID@@YAPAU_object@@PAU1@0@Z	; safeboxGetItemID
PUBLIC	?safeboxGetItemCount@@YAPAU_object@@PAU1@0@Z	; safeboxGetItemCount
PUBLIC	?safeboxGetItemFlags@@YAPAU_object@@PAU1@0@Z	; safeboxGetItemFlags
PUBLIC	?safeboxGetItemMetinSocket@@YAPAU_object@@PAU1@0@Z ; safeboxGetItemMetinSocket
PUBLIC	?safeboxGetItemAttribute@@YAPAU_object@@PAU1@0@Z ; safeboxGetItemAttribute
PUBLIC	?safeboxGetMoney@@YAPAU_object@@PAU1@0@Z	; safeboxGetMoney
PUBLIC	?safeboxGetMallItemID@@YAPAU_object@@PAU1@0@Z	; safeboxGetMallItemID
PUBLIC	?safeboxGetMallItemCount@@YAPAU_object@@PAU1@0@Z ; safeboxGetMallItemCount
PUBLIC	?safeboxGetMallItemMetinSocket@@YAPAU_object@@PAU1@0@Z ; safeboxGetMallItemMetinSocket
PUBLIC	?safeboxGetMallItemAttribute@@YAPAU_object@@PAU1@0@Z ; safeboxGetMallItemAttribute
PUBLIC	?safeboxGetMallSize@@YAPAU_object@@PAU1@0@Z	; safeboxGetMallSize
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<packet_item,std::allocator<packet_item> >::_Resize<std::_Value_init_tag>
PUBLIC	??$_Destroy_range@V?$allocator@Upacket_item@@@std@@@std@@YAXPAUpacket_item@@QAU1@AAV?$allocator@Upacket_item@@@0@@Z ; std::_Destroy_range<std::allocator<packet_item> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<packet_item,std::allocator<packet_item> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@PAU1@IAAV?$allocator@Upacket_item@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<packet_item> >
PUBLIC	??$_Uninitialized_move@PAUpacket_item@@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@QAU1@0PAU1@AAV?$allocator@Upacket_item@@@0@@Z ; std::_Uninitialized_move<packet_item *,std::allocator<packet_item> >
PUBLIC	??$_Copy_memmove@PAUpacket_item@@PAU1@@std@@YAPAUpacket_item@@PAU1@00@Z ; std::_Copy_memmove<packet_item *,packet_item *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
PUBLIC	??_7?$CSingleton@VCPythonSafeBox@@@@6B@		; CSingleton<CPythonSafeBox>::`vftable'
PUBLIC	??_7CPythonSafeBox@@6B@				; CPythonSafeBox::`vftable'
PUBLIC	??_C@_0EB@NFGEBKNF@CPythonSafeBox?3?3SetItemData?$CIdwS@ ; `string'
PUBLIC	??_C@_0EB@ILLOPJOM@CPythonSafeBox?3?3DelItemData?$CIdwS@ ; `string'
PUBLIC	??_C@_0ED@OIOPNNLC@CPythonSafeBox?3?3GetSlotItemID?$CId@ ; `string'
PUBLIC	??_C@_0EB@BNCIHACH@CPythonSafeBox?3?3GetItemData?$CIdwS@ ; `string'
PUBLIC	??_C@_0EF@BFNMLNFN@CPythonSafeBox?3?3SetMallItemData@ ; `string'
PUBLIC	??_C@_0EF@MEFPDFOJ@CPythonSafeBox?3?3DelMallItemData@ ; `string'
PUBLIC	??_C@_0EH@BNEMANLE@CPythonSafeBox?3?3GetMallSlotItem@ ; `string'
PUBLIC	??_C@_01KBJDNOO@i@				; `string'
PUBLIC	??_C@_02PDIHAGKM@ii@				; `string'
PUBLIC	??_C@_0BG@JANGHGIO@GetCurrentSafeboxSize@	; `string'
PUBLIC	??_C@_09GMBNEEAB@GetItemID@			; `string'
PUBLIC	??_C@_0N@LEKALLIG@GetItemCount@			; `string'
PUBLIC	??_C@_0N@DMCGDNGF@GetItemFlags@			; `string'
PUBLIC	??_C@_0BD@JBOBKHIE@GetItemMetinSocket@		; `string'
PUBLIC	??_C@_0BB@GOKPPDHH@GetItemAttribute@		; `string'
PUBLIC	??_C@_08OAJFGNBC@GetMoney@			; `string'
PUBLIC	??_C@_0O@BCKKGAPN@GetMallItemID@		; `string'
PUBLIC	??_C@_0BB@KMJDPGMF@GetMallItemCount@		; `string'
PUBLIC	??_C@_0BH@EIOFOGDJ@GetMallItemMetinSocket@	; `string'
PUBLIC	??_C@_0BF@HIELOHFB@GetMallItemAttribute@	; `string'
PUBLIC	??_C@_0M@GGDNKKEE@GetMallSize@			; `string'
PUBLIC	??_C@_07CPPOKFKF@safebox@			; `string'
PUBLIC	??_C@_0BF@DMABFMEE@SAFEBOX_SLOT_X_COUNT@	; `string'
PUBLIC	??_C@_0BF@PAKLFMNK@SAFEBOX_SLOT_Y_COUNT@	; `string'
PUBLIC	??_C@_0BC@JOOAEPKL@SAFEBOX_PAGE_SIZE@		; `string'
PUBLIC	??_R4CPythonSafeBox@@6B@			; CPythonSafeBox::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCPythonSafeBox@@@8			; CPythonSafeBox `RTTI Type Descriptor'
PUBLIC	??_R3CPythonSafeBox@@8				; CPythonSafeBox::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CPythonSafeBox@@8				; CPythonSafeBox::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CPythonSafeBox@@8			; CPythonSafeBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$CSingleton@VCPythonSafeBox@@@@8	; CSingleton<CPythonSafeBox>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$CSingleton@VCPythonSafeBox@@@@@8	; CSingleton<CPythonSafeBox> `RTTI Type Descriptor'
PUBLIC	??_R3?$CSingleton@VCPythonSafeBox@@@@8		; CSingleton<CPythonSafeBox>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CSingleton@VCPythonSafeBox@@@@8		; CSingleton<CPythonSafeBox>::`RTTI Base Class Array'
PUBLIC	??_R4?$CSingleton@VCPythonSafeBox@@@@6B@	; CSingleton<CPythonSafeBox>::`RTTI Complete Object Locator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	__imp__Py_BuildValue:PROC
EXTRN	__imp__PyModule_AddIntConstant:PROC
EXTRN	__imp__Py_InitModule4:PROC
EXTRN	?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z:PROC ; PyTuple_GetInteger
EXTRN	?Py_BuildException@@YAPAU_object@@PBDZZ:PROC	; Py_BuildException
EXTRN	?Py_BadArgument@@YAPAU_object@@XZ:PROC		; Py_BadArgument
EXTRN	??_E?$CSingleton@VCPythonSafeBox@@@@UAEPAXI@Z:PROC ; CSingleton<CPythonSafeBox>::`vector deleting destructor'
EXTRN	??_ECPythonSafeBox@@UAEPAXI@Z:PROC		; CPythonSafeBox::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A DD 01H DUP (?) ; CSingleton<CPythonSafeBox>::ms_singleton
_BSS	ENDS
;	COMDAT ??_R4?$CSingleton@VCPythonSafeBox@@@@6B@
rdata$r	SEGMENT
??_R4?$CSingleton@VCPythonSafeBox@@@@6B@ DD 00H		; CSingleton<CPythonSafeBox>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CSingleton@VCPythonSafeBox@@@@@8
	DD	FLAT:??_R3?$CSingleton@VCPythonSafeBox@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CSingleton@VCPythonSafeBox@@@@8
rdata$r	SEGMENT
??_R2?$CSingleton@VCPythonSafeBox@@@@8 DD FLAT:??_R1A@?0A@EA@?$CSingleton@VCPythonSafeBox@@@@8 ; CSingleton<CPythonSafeBox>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CSingleton@VCPythonSafeBox@@@@8
rdata$r	SEGMENT
??_R3?$CSingleton@VCPythonSafeBox@@@@8 DD 00H		; CSingleton<CPythonSafeBox>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CSingleton@VCPythonSafeBox@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CSingleton@VCPythonSafeBox@@@@@8
data$rs	SEGMENT
??_R0?AV?$CSingleton@VCPythonSafeBox@@@@@8 DD FLAT:??_7type_info@@6B@ ; CSingleton<CPythonSafeBox> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CSingleton@VCPythonSafeBox@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CSingleton@VCPythonSafeBox@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CSingleton@VCPythonSafeBox@@@@8 DD FLAT:??_R0?AV?$CSingleton@VCPythonSafeBox@@@@@8 ; CSingleton<CPythonSafeBox>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CSingleton@VCPythonSafeBox@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CPythonSafeBox@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CPythonSafeBox@@8 DD FLAT:??_R0?AVCPythonSafeBox@@@8 ; CPythonSafeBox::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CPythonSafeBox@@8
rdata$r	ENDS
;	COMDAT ??_R2CPythonSafeBox@@8
rdata$r	SEGMENT
??_R2CPythonSafeBox@@8 DD FLAT:??_R1A@?0A@EA@CPythonSafeBox@@8 ; CPythonSafeBox::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$CSingleton@VCPythonSafeBox@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CPythonSafeBox@@8
rdata$r	SEGMENT
??_R3CPythonSafeBox@@8 DD 00H				; CPythonSafeBox::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CPythonSafeBox@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCPythonSafeBox@@@8
data$rs	SEGMENT
??_R0?AVCPythonSafeBox@@@8 DD FLAT:??_7type_info@@6B@	; CPythonSafeBox `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCPythonSafeBox@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CPythonSafeBox@@6B@
rdata$r	SEGMENT
??_R4CPythonSafeBox@@6B@ DD 00H				; CPythonSafeBox::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCPythonSafeBox@@@8
	DD	FLAT:??_R3CPythonSafeBox@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BC@JOOAEPKL@SAFEBOX_PAGE_SIZE@
CONST	SEGMENT
??_C@_0BC@JOOAEPKL@SAFEBOX_PAGE_SIZE@ DB 'SAFEBOX_PAGE_SIZE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PAKLFMNK@SAFEBOX_SLOT_Y_COUNT@
CONST	SEGMENT
??_C@_0BF@PAKLFMNK@SAFEBOX_SLOT_Y_COUNT@ DB 'SAFEBOX_SLOT_Y_COUNT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DMABFMEE@SAFEBOX_SLOT_X_COUNT@
CONST	SEGMENT
??_C@_0BF@DMABFMEE@SAFEBOX_SLOT_X_COUNT@ DB 'SAFEBOX_SLOT_X_COUNT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07CPPOKFKF@safebox@
CONST	SEGMENT
??_C@_07CPPOKFKF@safebox@ DB 'safebox', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GGDNKKEE@GetMallSize@
CONST	SEGMENT
??_C@_0M@GGDNKKEE@GetMallSize@ DB 'GetMallSize', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HIELOHFB@GetMallItemAttribute@
CONST	SEGMENT
??_C@_0BF@HIELOHFB@GetMallItemAttribute@ DB 'GetMallItemAttribute', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EIOFOGDJ@GetMallItemMetinSocket@
CONST	SEGMENT
??_C@_0BH@EIOFOGDJ@GetMallItemMetinSocket@ DB 'GetMallItemMetinSocket', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KMJDPGMF@GetMallItemCount@
CONST	SEGMENT
??_C@_0BB@KMJDPGMF@GetMallItemCount@ DB 'GetMallItemCount', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BCKKGAPN@GetMallItemID@
CONST	SEGMENT
??_C@_0O@BCKKGAPN@GetMallItemID@ DB 'GetMallItemID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAJFGNBC@GetMoney@
CONST	SEGMENT
??_C@_08OAJFGNBC@GetMoney@ DB 'GetMoney', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GOKPPDHH@GetItemAttribute@
CONST	SEGMENT
??_C@_0BB@GOKPPDHH@GetItemAttribute@ DB 'GetItemAttribute', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JBOBKHIE@GetItemMetinSocket@
CONST	SEGMENT
??_C@_0BD@JBOBKHIE@GetItemMetinSocket@ DB 'GetItemMetinSocket', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DMCGDNGF@GetItemFlags@
CONST	SEGMENT
??_C@_0N@DMCGDNGF@GetItemFlags@ DB 'GetItemFlags', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LEKALLIG@GetItemCount@
CONST	SEGMENT
??_C@_0N@LEKALLIG@GetItemCount@ DB 'GetItemCount', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09GMBNEEAB@GetItemID@
CONST	SEGMENT
??_C@_09GMBNEEAB@GetItemID@ DB 'GetItemID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JANGHGIO@GetCurrentSafeboxSize@
CONST	SEGMENT
??_C@_0BG@JANGHGIO@GetCurrentSafeboxSize@ DB 'GetCurrentSafeboxSize', 00H ; `string'
CONST	ENDS
;	COMDAT ?s_methods@?1??initsafebox@@YAXXZ@4PAUPyMethodDef@@A
_DATA	SEGMENT
?s_methods@?1??initsafebox@@YAXXZ@4PAUPyMethodDef@@A DD FLAT:??_C@_0BG@JANGHGIO@GetCurrentSafeboxSize@ ; `initsafebox'::`2'::s_methods
	DD	FLAT:?safeboxGetCurrentSafeboxSize@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_09GMBNEEAB@GetItemID@
	DD	FLAT:?safeboxGetItemID@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0N@LEKALLIG@GetItemCount@
	DD	FLAT:?safeboxGetItemCount@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0N@DMCGDNGF@GetItemFlags@
	DD	FLAT:?safeboxGetItemFlags@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BD@JBOBKHIE@GetItemMetinSocket@
	DD	FLAT:?safeboxGetItemMetinSocket@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BB@GOKPPDHH@GetItemAttribute@
	DD	FLAT:?safeboxGetItemAttribute@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_08OAJFGNBC@GetMoney@
	DD	FLAT:?safeboxGetMoney@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0O@BCKKGAPN@GetMallItemID@
	DD	FLAT:?safeboxGetMallItemID@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BB@KMJDPGMF@GetMallItemCount@
	DD	FLAT:?safeboxGetMallItemCount@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BH@EIOFOGDJ@GetMallItemMetinSocket@
	DD	FLAT:?safeboxGetMallItemMetinSocket@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BF@HIELOHFB@GetMallItemAttribute@
	DD	FLAT:?safeboxGetMallItemAttribute@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0M@GGDNKKEE@GetMallSize@
	DD	FLAT:?safeboxGetMallSize@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	00H
	DD	00H
	DD	00H
	ORG $+4
_DATA	ENDS
;	COMDAT ??_C@_02PDIHAGKM@ii@
CONST	SEGMENT
??_C@_02PDIHAGKM@ii@ DB 'ii', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KBJDNOO@i@
CONST	SEGMENT
??_C@_01KBJDNOO@i@ DB 'i', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@BNEMANLE@CPythonSafeBox?3?3GetMallSlotItem@
CONST	SEGMENT
??_C@_0EH@BNEMANLE@CPythonSafeBox?3?3GetMallSlotItem@ DB 'CPythonSafeBox:'
	DB	':GetMallSlotItemID(dwSlotIndex=%d) - Strange slot index', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@MEFPDFOJ@CPythonSafeBox?3?3DelMallItemData@
CONST	SEGMENT
??_C@_0EF@MEFPDFOJ@CPythonSafeBox?3?3DelMallItemData@ DB 'CPythonSafeBox:'
	DB	':DelMallItemData(dwSlotIndex=%d) - Strange slot index', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@BFNMLNFN@CPythonSafeBox?3?3SetMallItemData@
CONST	SEGMENT
??_C@_0EF@BFNMLNFN@CPythonSafeBox?3?3SetMallItemData@ DB 'CPythonSafeBox:'
	DB	':SetMallItemData(dwSlotIndex=%d) - Strange slot index', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@BNCIHACH@CPythonSafeBox?3?3GetItemData?$CIdwS@
CONST	SEGMENT
??_C@_0EB@BNCIHACH@CPythonSafeBox?3?3GetItemData?$CIdwS@ DB 'CPythonSafeB'
	DB	'ox::GetItemData(dwSlotIndex=%d) - Strange slot index', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@OIOPNNLC@CPythonSafeBox?3?3GetSlotItemID?$CId@
CONST	SEGMENT
??_C@_0ED@OIOPNNLC@CPythonSafeBox?3?3GetSlotItemID?$CId@ DB 'CPythonSafeB'
	DB	'ox::GetSlotItemID(dwSlotIndex=%d) - Strange slot index', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@ILLOPJOM@CPythonSafeBox?3?3DelItemData?$CIdwS@
CONST	SEGMENT
??_C@_0EB@ILLOPJOM@CPythonSafeBox?3?3DelItemData?$CIdwS@ DB 'CPythonSafeB'
	DB	'ox::DelItemData(dwSlotIndex=%d) - Strange slot index', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@NFGEBKNF@CPythonSafeBox?3?3SetItemData?$CIdwS@
CONST	SEGMENT
??_C@_0EB@NFGEBKNF@CPythonSafeBox?3?3SetItemData?$CIdwS@ DB 'CPythonSafeB'
	DB	'ox::SetItemData(dwSlotIndex=%d) - Strange slot index', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CPythonSafeBox@@6B@
CONST	SEGMENT
??_7CPythonSafeBox@@6B@ DD FLAT:??_R4CPythonSafeBox@@6B@ ; CPythonSafeBox::`vftable'
	DD	FLAT:??_ECPythonSafeBox@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CSingleton@VCPythonSafeBox@@@@6B@
CONST	SEGMENT
??_7?$CSingleton@VCPythonSafeBox@@@@6B@ DD FLAT:??_R4?$CSingleton@VCPythonSafeBox@@@@6B@ ; CSingleton<CPythonSafeBox>::`vftable'
	DD	FLAT:??_E?$CSingleton@VCPythonSafeBox@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$26 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$0
__unwindtable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$26
__ehfuncinfo$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$_Copy_memmove@PAUpacket_item@@PAU1@@std@@YAPAUpacket_item@@PAU1@00@Z
_TEXT	SEGMENT
__Last_ch$ = -16					; size = 4
__Count$ = -12						; size = 4
__Dest_ch$ = -8						; size = 4
__First_ch$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAUpacket_item@@PAU1@@std@@YAPAUpacket_item@@PAU1@00@Z PROC ; std::_Copy_memmove<packet_item *,packet_item *>, COMDAT

; 4360 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 4361 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));

  00006	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00009	89 45 fc	 mov	 DWORD PTR __First_ch$[ebp], eax

; 4362 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));

  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000f	89 45 f0	 mov	 DWORD PTR __Last_ch$[ebp], eax

; 4363 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));

  00012	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00015	89 45 f8	 mov	 DWORD PTR __Dest_ch$[ebp], eax

; 4364 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00018	8b 45 f0	 mov	 eax, DWORD PTR __Last_ch$[ebp]
  0001b	2b 45 fc	 sub	 eax, DWORD PTR __First_ch$[ebp]
  0001e	89 45 f4	 mov	 DWORD PTR __Count$[ebp], eax

; 4365 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00021	ff 75 f4	 push	 DWORD PTR __Count$[ebp]
  00024	ff 75 fc	 push	 DWORD PTR __First_ch$[ebp]
  00027	ff 75 f8	 push	 DWORD PTR __Dest_ch$[ebp]
  0002a	e8 00 00 00 00	 call	 _memmove
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4366 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  00032	8b 45 f8	 mov	 eax, DWORD PTR __Dest_ch$[ebp]
  00035	03 45 f4	 add	 eax, DWORD PTR __Count$[ebp]

; 4367 : }

  00038	c9		 leave
  00039	c3		 ret	 0
??$_Copy_memmove@PAUpacket_item@@PAU1@@std@@YAPAUpacket_item@@PAU1@00@Z ENDP ; std::_Copy_memmove<packet_item *,packet_item *>
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUpacket_item@@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@QAU1@0PAU1@AAV?$allocator@Upacket_item@@@0@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
__UFirst$ = -8						; size = 4
__ULast$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUpacket_item@@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@QAU1@0PAU1@AAV?$allocator@Upacket_item@@@0@@Z PROC ; std::_Uninitialized_move<packet_item *,std::allocator<packet_item> >, COMDAT

; 1685 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1686 :     // move [_First, _Last) to raw _Dest, using _Al
; 1687 :     // note: only called internally from elsewhere in the STL
; 1688 :     using _Ptrval     = typename _Alloc::value_type*;
; 1689 :     auto _UFirst      = _Get_unwrapped(_First);

  00006	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR __UFirst$[ebp], eax

; 1690 :     const auto _ULast = _Get_unwrapped(_Last);

  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000f	89 45 fc	 mov	 DWORD PTR __ULast$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  00012	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00015	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1693 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00018	ff 75 f4	 push	 DWORD PTR $T1[ebp]
  0001b	ff 75 fc	 push	 DWORD PTR __ULast$[ebp]
  0001e	ff 75 f8	 push	 DWORD PTR __UFirst$[ebp]
  00021	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUpacket_item@@PAU1@@std@@YAPAUpacket_item@@PAU1@00@Z ; std::_Copy_memmove<packet_item *,packet_item *>
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1694 :         return _Dest + (_ULast - _UFirst);

  00029	8b 45 fc	 mov	 eax, DWORD PTR __ULast$[ebp]
  0002c	2b 45 f8	 sub	 eax, DWORD PTR __UFirst$[ebp]
  0002f	99		 cdq
  00030	6a 2e		 push	 46			; 0000002eH
  00032	59		 pop	 ecx
  00033	f7 f9		 idiv	 ecx
  00035	6b c0 2e	 imul	 eax, eax, 46
  00038	03 45 10	 add	 eax, DWORD PTR __Dest$[ebp]

; 1695 :     } else {
; 1696 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1697 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1698 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1699 :         }
; 1700 : 
; 1701 :         return _Backout._Release();
; 1702 :     }
; 1703 : }

  0003b	c9		 leave
  0003c	c3		 ret	 0
??$_Uninitialized_move@PAUpacket_item@@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@QAU1@0PAU1@AAV?$allocator@Upacket_item@@@0@@Z ENDP ; std::_Uninitialized_move<packet_item *,std::allocator<packet_item> >
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_new.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@PAU1@IAAV?$allocator@Upacket_item@@@0@@Z
_TEXT	SEGMENT
__Backout$1 = -32					; size = 12
___formal$ = -20					; size = 4
$T2 = -16						; size = 4
$T3 = -12						; size = 4
$T4 = -8						; size = 4
__Ptr$ = -4						; size = 4
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@PAU1@IAAV?$allocator@Upacket_item@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<packet_item> >, COMDAT

; 1862 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H

; 1535 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00006	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00009	89 45 e0	 mov	 DWORD PTR __Backout$1[ebp], eax
  0000c	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0000f	89 45 e4	 mov	 DWORD PTR __Backout$1[ebp+4], eax
  00012	8b 45 10	 mov	 eax, DWORD PTR __Al$[ebp]
  00015	89 45 e8	 mov	 DWORD PTR __Backout$1[ebp+8], eax

; 1863 :     // value-initialize _Count objects to raw _First, using _Al
; 1864 :     using _Ptrty = typename _Alloc::value_type*;
; 1865 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1866 :         auto _PFirst = _Unfancy(_First);
; 1867 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1868 :         return _First + _Count;
; 1869 :     } else {
; 1870 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1871 :         for (; 0 < _Count; --_Count) {

  00018	eb 07		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  0001a	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0001d	48		 dec	 eax
  0001e	89 45 0c	 mov	 DWORD PTR __Count$[ebp], eax
$LN4@Uninitiali:
  00021	83 7d 0c 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00025	76 32		 jbe	 SHORT $LN3@Uninitiali

; 1546 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00027	8b 45 e4	 mov	 eax, DWORD PTR __Backout$1[ebp+4]
  0002a	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  0002d	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00030	89 45 f8	 mov	 DWORD PTR $T4[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1546 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00033	8b 45 e8	 mov	 eax, DWORD PTR __Backout$1[ebp+8]
  00036	89 45 ec	 mov	 DWORD PTR ___formal$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_new.h

; 169  :         return _Where;

  00039	8b 45 f8	 mov	 eax, DWORD PTR $T4[ebp]
  0003c	89 45 f4	 mov	 DWORD PTR $T3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  0003f	6a 2e		 push	 46			; 0000002eH
  00041	6a 00		 push	 0
  00043	ff 75 f4	 push	 DWORD PTR $T3[ebp]
  00046	e8 00 00 00 00	 call	 _memset
  0004b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1547 :         ++_Last;

  0004e	8b 45 e4	 mov	 eax, DWORD PTR __Backout$1[ebp+4]
  00051	83 c0 2e	 add	 eax, 46			; 0000002eH
  00054	89 45 e4	 mov	 DWORD PTR __Backout$1[ebp+4], eax

; 1872 :             _Backout._Emplace_back();
; 1873 :         }

  00057	eb c1		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1551 :         _First = _Last;

  00059	8b 45 e4	 mov	 eax, DWORD PTR __Backout$1[ebp+4]
  0005c	89 45 e0	 mov	 DWORD PTR __Backout$1[ebp], eax

; 1552 :         return _Last;

  0005f	8b 45 e4	 mov	 eax, DWORD PTR __Backout$1[ebp+4]
  00062	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax

; 1541 :         _Destroy_range(_First, _Last, _Al);

  00065	ff 75 e8	 push	 DWORD PTR __Backout$1[ebp+8]
  00068	ff 75 e4	 push	 DWORD PTR __Backout$1[ebp+4]
  0006b	ff 75 e0	 push	 DWORD PTR __Backout$1[ebp]
  0006e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@Upacket_item@@@std@@@std@@YAXPAUpacket_item@@QAU1@AAV?$allocator@Upacket_item@@@0@@Z ; std::_Destroy_range<std::allocator<packet_item> >
  00073	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1874 : 
; 1875 :         return _Backout._Release();

  00076	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]

; 1876 :     }
; 1877 : }

  00079	c9		 leave
  0007a	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@PAU1@IAAV?$allocator@Upacket_item@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<packet_item> >
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\limits
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
__Max_possible$2 = -148					; size = 4
$T3 = -144						; size = 4
$T4 = -140						; size = 4
__First$ = -136						; size = 4
__Last$ = -132						; size = 4
$T5 = -128						; size = 4
$T6 = -124						; size = 4
tv244 = -120						; size = 4
$T7 = -116						; size = 4
$T8 = -112						; size = 4
$T9 = -108						; size = 4
$T10 = -104						; size = 4
$T11 = -100						; size = 4
$T12 = -96						; size = 4
$T13 = -92						; size = 4
$T14 = -88						; size = 4
$T15 = -84						; size = 4
__Appended_last$ = -80					; size = 4
__Myfirst$ = -76					; size = 4
__Mylast$ = -72						; size = 4
__Oldsize$ = -68					; size = 4
__My_data$ = -64					; size = 4
tv147 = -60						; size = 4
$T16 = -56						; size = 4
$T17 = -52						; size = 4
__Appended_first$ = -48					; size = 4
___formal$ = -44					; size = 1
___formal$ = -40					; size = 1
__Overflow_is_possible$18 = -33				; size = 1
__Newvec$ = -32						; size = 4
__Newcapacity$ = -28					; size = 4
$T19 = -21						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<packet_item,std::allocator<packet_item> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1182 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00020	33 c5		 xor	 eax, ebp
  00022	50		 push	 eax
  00023	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00026	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002c	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1737 :         return _Mypair._Get_first();

  00032	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1351 :         return *this;

  00035	89 45 ac	 mov	 DWORD PTR $T15[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1737 :         return _Mypair._Get_first();

  00038	8b 45 ac	 mov	 eax, DWORD PTR $T15[ebp]
  0003b	89 85 74 ff ff
	ff		 mov	 DWORD PTR $T4[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 710  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00041	c7 45 cc 16 b2
	90 05		 mov	 DWORD PTR $T17[ebp], 93368854 ; 0590b216H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\limits

; 557  :         return INT_MAX;

  00048	c7 45 a8 ff ff
	ff 7f		 mov	 DWORD PTR $T14[ebp], 2147483647 ; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1488 :         return (_STD min)(

  0004f	8b 45 a8	 mov	 eax, DWORD PTR $T14[ebp]
  00052	89 45 c8	 mov	 DWORD PTR $T16[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 68   :     return _Right < _Left ? _Right : _Left;

  00055	8b 45 cc	 mov	 eax, DWORD PTR $T17[ebp]
  00058	3b 45 c8	 cmp	 eax, DWORD PTR $T16[ebp]
  0005b	73 08		 jae	 SHORT $LN26@Resize_rea
  0005d	8d 45 cc	 lea	 eax, DWORD PTR $T17[ebp]
  00060	89 45 c4	 mov	 DWORD PTR tv147[ebp], eax
  00063	eb 06		 jmp	 SHORT $LN27@Resize_rea
$LN26@Resize_rea:
  00065	8d 45 c8	 lea	 eax, DWORD PTR $T16[ebp]
  00068	89 45 c4	 mov	 DWORD PTR tv147[ebp], eax
$LN27@Resize_rea:
  0006b	8b 45 c4	 mov	 eax, DWORD PTR tv147[ebp]
  0006e	89 45 a4	 mov	 DWORD PTR $T13[ebp], eax
  00071	8b 45 a4	 mov	 eax, DWORD PTR $T13[ebp]
  00074	89 45 a0	 mov	 DWORD PTR $T12[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1488 :         return (_STD min)(

  00077	8b 45 a0	 mov	 eax, DWORD PTR $T12[ebp]
  0007a	8b 00		 mov	 eax, DWORD PTR [eax]
  0007c	89 45 9c	 mov	 DWORD PTR $T11[ebp], eax

; 1183 :         if (_Newsize > max_size()) {

  0007f	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00082	3b 45 9c	 cmp	 eax, DWORD PTR $T11[ebp]
  00085	76 05		 jbe	 SHORT $LN2@Resize_rea

; 1184 :             _Xlength();

  00087	e8 00 00 00 00	 call	 ?_Xlength@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@CAXXZ ; std::vector<packet_item,std::allocator<packet_item> >::_Xlength
$LN2@Resize_rea:

; 1185 :         }
; 1186 : 
; 1187 :         auto& _My_data    = _Mypair._Myval2;

  0008c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0008f	89 45 c0	 mov	 DWORD PTR __My_data$[ebp], eax

; 1188 :         pointer& _Myfirst = _My_data._Myfirst;

  00092	8b 45 c0	 mov	 eax, DWORD PTR __My_data$[ebp]
  00095	89 45 b4	 mov	 DWORD PTR __Myfirst$[ebp], eax

; 1189 :         pointer& _Mylast  = _My_data._Mylast;

  00098	8b 45 c0	 mov	 eax, DWORD PTR __My_data$[ebp]
  0009b	83 c0 04	 add	 eax, 4
  0009e	89 45 b8	 mov	 DWORD PTR __Mylast$[ebp], eax

; 1190 : 
; 1191 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  000a1	8b 45 b8	 mov	 eax, DWORD PTR __Mylast$[ebp]
  000a4	8b 4d b4	 mov	 ecx, DWORD PTR __Myfirst$[ebp]
  000a7	8b 00		 mov	 eax, DWORD PTR [eax]
  000a9	2b 01		 sub	 eax, DWORD PTR [ecx]
  000ab	99		 cdq
  000ac	6a 2e		 push	 46			; 0000002eH
  000ae	59		 pop	 ecx
  000af	f7 f9		 idiv	 ecx
  000b1	89 45 bc	 mov	 DWORD PTR __Oldsize$[ebp], eax

; 1192 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  000b4	ff 75 08	 push	 DWORD PTR __Newsize$[ebp]
  000b7	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@ABEII@Z ; std::vector<packet_item,std::allocator<packet_item> >::_Calculate_growth
  000bf	89 45 e4	 mov	 DWORD PTR __Newcapacity$[ebp], eax

; 1733 :         return _Mypair._Get_first();

  000c2	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  000c5	89 45 98	 mov	 DWORD PTR $T10[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  000c8	8b 45 98	 mov	 eax, DWORD PTR $T10[ebp]
  000cb	89 85 70 ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  000d1	c6 45 df 01	 mov	 BYTE PTR __Overflow_is_possible$18[ebp], 1

; 57   : 
; 58   :     if _CONSTEXPR_IF (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  000d5	c7 85 6c ff ff
	ff 16 b2 90 05	 mov	 DWORD PTR __Max_possible$2[ebp], 93368854 ; 0590b216H

; 60   :         if (_Count > _Max_possible) {

  000df	81 7d e4 16 b2
	90 05		 cmp	 DWORD PTR __Newcapacity$[ebp], 93368854 ; 0590b216H
  000e6	76 05		 jbe	 SHORT $LN65@Resize_rea

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  000e8	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN65@Resize_rea:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  000ed	6b 45 e4 2e	 imul	 eax, DWORD PTR __Newcapacity$[ebp], 46
  000f1	89 45 94	 mov	 DWORD PTR $T9[ebp], eax

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000f4	ff 75 94	 push	 DWORD PTR $T9[ebp]
  000f7	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  000fc	59		 pop	 ecx
  000fd	89 45 e0	 mov	 DWORD PTR __Newvec$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1195 :         const pointer _Appended_first = _Newvec + _Oldsize;

  00100	6b 45 bc 2e	 imul	 eax, DWORD PTR __Oldsize$[ebp], 46
  00104	03 45 e0	 add	 eax, DWORD PTR __Newvec$[ebp]
  00107	89 45 d0	 mov	 DWORD PTR __Appended_first$[ebp], eax

; 1196 :         pointer _Appended_last        = _Appended_first;

  0010a	8b 45 d0	 mov	 eax, DWORD PTR __Appended_first$[ebp]
  0010d	89 45 b0	 mov	 DWORD PTR __Appended_last$[ebp], eax

; 1197 : 
; 1198 :         _TRY_BEGIN

  00110	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+12], 0

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  00114	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  00117	8a 00		 mov	 al, BYTE PTR [eax]
  00119	88 45 d8	 mov	 BYTE PTR ___formal$[ebp], al

; 1733 :         return _Mypair._Get_first();

  0011c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  0011f	89 45 90	 mov	 DWORD PTR $T8[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  00122	8b 45 90	 mov	 eax, DWORD PTR $T8[ebp]
  00125	89 45 8c	 mov	 DWORD PTR $T7[ebp], eax

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00128	ff 75 8c	 push	 DWORD PTR $T7[ebp]

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  0012b	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0012e	2b 45 bc	 sub	 eax, DWORD PTR __Oldsize$[ebp]

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00131	50		 push	 eax
  00132	ff 75 d0	 push	 DWORD PTR __Appended_first$[ebp]
  00135	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@PAU1@IAAV?$allocator@Upacket_item@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<packet_item> >
  0013a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0013d	89 45 88	 mov	 DWORD PTR tv244[ebp], eax

; 1199 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  00140	8b 45 88	 mov	 eax, DWORD PTR tv244[ebp]
  00143	89 45 b0	 mov	 DWORD PTR __Appended_last$[ebp], eax

; 1200 :         _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00146	8b 45 b8	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00149	8b 00		 mov	 eax, DWORD PTR [eax]
  0014b	89 85 7c ff ff
	ff		 mov	 DWORD PTR __Last$[ebp], eax
  00151	8b 45 b4	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  00154	8b 00		 mov	 eax, DWORD PTR [eax]
  00156	89 85 78 ff ff
	ff		 mov	 DWORD PTR __First$[ebp], eax

; 1607 :         _Umove_if_noexcept1(_First, _Last, _Dest,

  0015c	33 c0		 xor	 eax, eax
  0015e	88 45 eb	 mov	 BYTE PTR $T19[ebp], al
  00161	8a 45 eb	 mov	 al, BYTE PTR $T19[ebp]
  00164	88 45 d4	 mov	 BYTE PTR ___formal$[ebp], al

; 1733 :         return _Mypair._Get_first();

  00167	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  0016a	89 45 84	 mov	 DWORD PTR $T6[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  0016d	8b 45 84	 mov	 eax, DWORD PTR $T6[ebp]
  00170	89 45 80	 mov	 DWORD PTR $T5[ebp], eax

; 1597 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00173	ff 75 80	 push	 DWORD PTR $T5[ebp]
  00176	ff 75 e0	 push	 DWORD PTR __Newvec$[ebp]
  00179	ff b5 7c ff ff
	ff		 push	 DWORD PTR __Last$[ebp]
  0017f	ff b5 78 ff ff
	ff		 push	 DWORD PTR __First$[ebp]
  00185	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAUpacket_item@@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@QAU1@0PAU1@AAV?$allocator@Upacket_item@@@0@@Z ; std::_Uninitialized_move<packet_item *,std::allocator<packet_item> >
  0018a	83 c4 10	 add	 esp, 16			; 00000010H

; 1200 :         _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  0018d	eb 32		 jmp	 SHORT $LN5@Resize_rea
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$0:

; 1201 :         _CATCH_ALL
; 1202 :         _Destroy(_Appended_first, _Appended_last);

  0018f	ff 75 b0	 push	 DWORD PTR __Appended_last$[ebp]
  00192	ff 75 d0	 push	 DWORD PTR __Appended_first$[ebp]
  00195	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00198	e8 00 00 00 00	 call	 ?_Destroy@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXPAUpacket_item@@0@Z ; std::vector<packet_item,std::allocator<packet_item> >::_Destroy

; 1203 :         _Getal().deallocate(_Newvec, _Newcapacity);

  0019d	ff 75 e4	 push	 DWORD PTR __Newcapacity$[ebp]
  001a0	ff 75 e0	 push	 DWORD PTR __Newvec$[ebp]
  001a3	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001a6	e8 00 00 00 00	 call	 ?_Getal@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEAAV?$allocator@Upacket_item@@@2@XZ ; std::vector<packet_item,std::allocator<packet_item> >::_Getal
  001ab	8b c8		 mov	 ecx, eax
  001ad	e8 00 00 00 00	 call	 ?deallocate@?$allocator@Upacket_item@@@std@@QAEXQAUpacket_item@@I@Z ; std::allocator<packet_item>::deallocate

; 1204 :         _RERAISE;

  001b2	6a 00		 push	 0
  001b4	6a 00		 push	 0
  001b6	e8 00 00 00 00	 call	 __CxxThrowException@8

; 1205 :         _CATCH_END

  001bb	b8 00 00 00 00	 mov	 eax, $LN8@Resize_rea
  001c0	c3		 ret	 0
$LN5@Resize_rea:
  001c1	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
  001c5	eb 04		 jmp	 SHORT __tryend$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$1
$LN8@Resize_rea:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
  001c7	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$1:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1206 : 
; 1207 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  001cb	ff 75 e4	 push	 DWORD PTR __Newcapacity$[ebp]
  001ce	ff 75 08	 push	 DWORD PTR __Newsize$[ebp]
  001d1	ff 75 e0	 push	 DWORD PTR __Newvec$[ebp]
  001d4	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001d7	e8 00 00 00 00	 call	 ?_Change_array@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXQAUpacket_item@@II@Z ; std::vector<packet_item,std::allocator<packet_item> >::_Change_array
$LN68@Resize_rea:

; 1208 :     }

  001dc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  001df	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001e6	59		 pop	 ecx
  001e7	5f		 pop	 edi
  001e8	5e		 pop	 esi
  001e9	5b		 pop	 ebx
  001ea	c9		 leave
  001eb	c2 08 00	 ret	 8
  001ee	cc		 int	 3
  001ef	cc		 int	 3
  001f0	cc		 int	 3
  001f1	cc		 int	 3
  001f2	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 8a 68 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-152]
  0000f	33 c8		 xor	 ecx, eax
  00011	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00016	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
  0001b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<packet_item,std::allocator<packet_item> >::_Resize_reallocate<std::_Value_init_tag>
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@Upacket_item@@@std@@@std@@YAXPAUpacket_item@@QAU1@AAV?$allocator@Upacket_item@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@Upacket_item@@@std@@@std@@YAXPAUpacket_item@@QAU1@AAV?$allocator@Upacket_item@@@0@@Z PROC ; std::_Destroy_range<std::allocator<packet_item> >, COMDAT

; 962  :     _Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {
; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy_range@V?$allocator@Upacket_item@@@std@@@std@@YAXPAUpacket_item@@QAU1@AAV?$allocator@Upacket_item@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<packet_item> >
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
__Oldlast$1 = -56					; size = 4
$T2 = -52						; size = 4
$T3 = -48						; size = 4
__Oldcapacity$4 = -44					; size = 4
__Last$ = -40						; size = 4
$T5 = -36						; size = 4
$T6 = -32						; size = 4
__Newlast$7 = -28					; size = 4
__Oldsize$ = -24					; size = 4
__Myfirst$ = -20					; size = 4
__My_data$ = -16					; size = 4
_this$ = -12						; size = 4
__Mylast$ = -8						; size = 4
___formal$ = -4						; size = 1
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<packet_item,std::allocator<packet_item> >::_Resize<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1211 :     void _Resize(const size_type _Newsize, const _Ty2& _Val) { // trim or append elements, provide strong guarantee

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1212 :         auto& _My_data      = _Mypair._Myval2;

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 f0	 mov	 DWORD PTR __My_data$[ebp], eax

; 1213 :         pointer& _Myfirst   = _My_data._Myfirst;

  0000f	8b 45 f0	 mov	 eax, DWORD PTR __My_data$[ebp]
  00012	89 45 ec	 mov	 DWORD PTR __Myfirst$[ebp], eax

; 1214 :         pointer& _Mylast    = _My_data._Mylast;

  00015	8b 45 f0	 mov	 eax, DWORD PTR __My_data$[ebp]
  00018	83 c0 04	 add	 eax, 4
  0001b	89 45 f8	 mov	 DWORD PTR __Mylast$[ebp], eax

; 1215 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  0001e	8b 45 f8	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00021	8b 4d ec	 mov	 ecx, DWORD PTR __Myfirst$[ebp]
  00024	8b 00		 mov	 eax, DWORD PTR [eax]
  00026	2b 01		 sub	 eax, DWORD PTR [ecx]
  00028	99		 cdq
  00029	6a 2e		 push	 46			; 0000002eH
  0002b	59		 pop	 ecx
  0002c	f7 f9		 idiv	 ecx
  0002e	89 45 e8	 mov	 DWORD PTR __Oldsize$[ebp], eax

; 1216 :         if (_Newsize < _Oldsize) { // trim

  00031	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00034	3b 45 e8	 cmp	 eax, DWORD PTR __Oldsize$[ebp]
  00037	73 3b		 jae	 SHORT $LN2@Resize

; 1217 :             const pointer _Newlast = _Myfirst + _Newsize;

  00039	6b 45 08 2e	 imul	 eax, DWORD PTR __Newsize$[ebp], 46
  0003d	8b 4d ec	 mov	 ecx, DWORD PTR __Myfirst$[ebp]
  00040	03 01		 add	 eax, DWORD PTR [ecx]
  00042	89 45 e4	 mov	 DWORD PTR __Newlast$7[ebp], eax

; 1218 :             _Orphan_range(_Newlast, _Mylast);
; 1219 :             _Destroy(_Newlast, _Mylast);

  00045	8b 45 f8	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00048	8b 00		 mov	 eax, DWORD PTR [eax]
  0004a	89 45 d8	 mov	 DWORD PTR __Last$[ebp], eax

; 1733 :         return _Mypair._Get_first();

  0004d	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  00050	89 45 e0	 mov	 DWORD PTR $T6[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  00053	8b 45 e0	 mov	 eax, DWORD PTR $T6[ebp]
  00056	89 45 dc	 mov	 DWORD PTR $T5[ebp], eax

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00059	ff 75 dc	 push	 DWORD PTR $T5[ebp]
  0005c	ff 75 d8	 push	 DWORD PTR __Last$[ebp]
  0005f	ff 75 e4	 push	 DWORD PTR __Newlast$7[ebp]
  00062	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@Upacket_item@@@std@@@std@@YAXPAUpacket_item@@QAU1@AAV?$allocator@Upacket_item@@@0@@Z ; std::_Destroy_range<std::allocator<packet_item> >
  00067	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1220 :             _Mylast = _Newlast;

  0006a	8b 45 f8	 mov	 eax, DWORD PTR __Mylast$[ebp]
  0006d	8b 4d e4	 mov	 ecx, DWORD PTR __Newlast$7[ebp]
  00070	89 08		 mov	 DWORD PTR [eax], ecx

; 1221 :             return;

  00072	eb 6a		 jmp	 SHORT $LN1@Resize
$LN2@Resize:

; 1222 :         }
; 1223 : 
; 1224 :         if (_Newsize > _Oldsize) { // append

  00074	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00077	3b 45 e8	 cmp	 eax, DWORD PTR __Oldsize$[ebp]
  0007a	76 62		 jbe	 SHORT $LN1@Resize

; 1225 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  0007c	8b 45 f0	 mov	 eax, DWORD PTR __My_data$[ebp]
  0007f	8b 4d ec	 mov	 ecx, DWORD PTR __Myfirst$[ebp]
  00082	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00085	2b 01		 sub	 eax, DWORD PTR [ecx]
  00087	99		 cdq
  00088	6a 2e		 push	 46			; 0000002eH
  0008a	59		 pop	 ecx
  0008b	f7 f9		 idiv	 ecx
  0008d	89 45 d4	 mov	 DWORD PTR __Oldcapacity$4[ebp], eax

; 1226 :             if (_Newsize > _Oldcapacity) { // reallocate

  00090	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00093	3b 45 d4	 cmp	 eax, DWORD PTR __Oldcapacity$4[ebp]
  00096	76 10		 jbe	 SHORT $LN4@Resize

; 1227 :                 _Resize_reallocate(_Newsize, _Val);

  00098	ff 75 0c	 push	 DWORD PTR __Val$[ebp]
  0009b	ff 75 08	 push	 DWORD PTR __Newsize$[ebp]
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<packet_item,std::allocator<packet_item> >::_Resize_reallocate<std::_Value_init_tag>

; 1228 :                 return;

  000a6	eb 36		 jmp	 SHORT $LN1@Resize
$LN4@Resize:

; 1229 :             }
; 1230 : 
; 1231 :             const pointer _Oldlast = _Mylast;

  000a8	8b 45 f8	 mov	 eax, DWORD PTR __Mylast$[ebp]
  000ab	8b 00		 mov	 eax, DWORD PTR [eax]
  000ad	89 45 c8	 mov	 DWORD PTR __Oldlast$1[ebp], eax

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  000b0	8b 45 0c	 mov	 eax, DWORD PTR __Val$[ebp]
  000b3	8a 00		 mov	 al, BYTE PTR [eax]
  000b5	88 45 fc	 mov	 BYTE PTR ___formal$[ebp], al

; 1733 :         return _Mypair._Get_first();

  000b8	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  000bb	89 45 d0	 mov	 DWORD PTR $T3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  000be	8b 45 d0	 mov	 eax, DWORD PTR $T3[ebp]
  000c1	89 45 cc	 mov	 DWORD PTR $T2[ebp], eax

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  000c4	ff 75 cc	 push	 DWORD PTR $T2[ebp]

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  000c7	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  000ca	2b 45 e8	 sub	 eax, DWORD PTR __Oldsize$[ebp]

; 1583 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  000cd	50		 push	 eax
  000ce	ff 75 c8	 push	 DWORD PTR __Oldlast$1[ebp]
  000d1	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@Upacket_item@@@std@@@std@@YAPAUpacket_item@@PAU1@IAAV?$allocator@Upacket_item@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<packet_item> >
  000d6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1232 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  000d9	8b 4d f8	 mov	 ecx, DWORD PTR __Mylast$[ebp]
  000dc	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@Resize:

; 1233 :             _Orphan_range(_Oldlast, _Oldlast);
; 1234 :         }
; 1235 : 
; 1236 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1237 :     }

  000de	c9		 leave
  000df	c2 08 00	 ret	 8
??$_Resize@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<packet_item,std::allocator<packet_item> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetMallSize@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetMallSize@@YAPAU_object@@PAU1@0@Z PROC	; safeboxGetMallSize, COMDAT

; 308  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  00009	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 309  : 	return Py_BuildValue("i", CPythonSafeBox::Instance().GetMallSize());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetMallSize@CPythonSafeBox@@QAEKXZ ; CPythonSafeBox::GetMallSize
  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00020	59		 pop	 ecx
  00021	59		 pop	 ecx

; 310  : }

  00022	c9		 leave
  00023	c3		 ret	 0
?safeboxGetMallSize@@YAPAU_object@@PAU1@0@Z ENDP	; safeboxGetMallSize
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetMallItemAttribute@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
$T1 = -16						; size = 4
_iSlotIndex$ = -12					; size = 4
_pItemData$2 = -8					; size = 4
_iAttrSlotIndex$ = -4					; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetMallItemAttribute@@YAPAU_object@@PAU1@0@Z PROC ; safeboxGetMallItemAttribute, COMDAT

; 289  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 290  : 	int iSlotIndex;
; 291  : 	if (!PyTuple_GetInteger(poArgs, 0, &iSlotIndex))

  00006	8d 45 f4	 lea	 eax, DWORD PTR _iSlotIndex$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	0f b6 c0	 movzx	 eax, al
  0001a	85 c0		 test	 eax, eax
  0001c	75 0d		 jne	 SHORT $LN2@safeboxGet

; 292  : 		return Py_BuildException();

  0001e	6a 00		 push	 0
  00020	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00025	59		 pop	 ecx
  00026	e9 85 00 00 00	 jmp	 $LN1@safeboxGet
$LN2@safeboxGet:

; 293  : 	int iAttrSlotIndex;
; 294  : 	if (!PyTuple_GetInteger(poArgs, 1, &iAttrSlotIndex))

  0002b	8d 45 fc	 lea	 eax, DWORD PTR _iAttrSlotIndex$[ebp]
  0002e	50		 push	 eax
  0002f	6a 01		 push	 1
  00031	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00034	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	0f b6 c0	 movzx	 eax, al
  0003f	85 c0		 test	 eax, eax
  00041	75 0a		 jne	 SHORT $LN3@safeboxGet

; 295  : 		return Py_BuildException();

  00043	6a 00		 push	 0
  00045	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  0004a	59		 pop	 ecx
  0004b	eb 63		 jmp	 SHORT $LN1@safeboxGet
$LN3@safeboxGet:

; 296  : 
; 297  : 	if (iAttrSlotIndex >= 0 && iAttrSlotIndex < ITEM_ATTRIBUTE_SLOT_MAX_NUM)

  0004d	83 7d fc 00	 cmp	 DWORD PTR _iAttrSlotIndex$[ebp], 0
  00051	7c 4b		 jl	 SHORT $LN4@safeboxGet
  00053	83 7d fc 07	 cmp	 DWORD PTR _iAttrSlotIndex$[ebp], 7
  00057	7d 45		 jge	 SHORT $LN4@safeboxGet
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00059	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  0005e	89 45 f0	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 300  : 		if (CPythonSafeBox::Instance().GetMallItemDataPtr(iSlotIndex, &pItemData))

  00061	8d 45 f8	 lea	 eax, DWORD PTR _pItemData$2[ebp]
  00064	50		 push	 eax
  00065	ff 75 f4	 push	 DWORD PTR _iSlotIndex$[ebp]
  00068	8b 4d f0	 mov	 ecx, DWORD PTR $T1[ebp]
  0006b	e8 00 00 00 00	 call	 ?GetMallItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetMallItemDataPtr
  00070	85 c0		 test	 eax, eax
  00072	74 2a		 je	 SHORT $LN4@safeboxGet

; 301  : 			return Py_BuildValue("ii", pItemData->aAttr[iAttrSlotIndex].bType, pItemData->aAttr[iAttrSlotIndex].sValue);

  00074	6b 45 fc 03	 imul	 eax, DWORD PTR _iAttrSlotIndex$[ebp], 3
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _pItemData$2[ebp]
  0007b	0f bf 44 01 1a	 movsx	 eax, WORD PTR [ecx+eax+26]
  00080	50		 push	 eax
  00081	6b 45 fc 03	 imul	 eax, DWORD PTR _iAttrSlotIndex$[ebp], 3
  00085	8b 4d f8	 mov	 ecx, DWORD PTR _pItemData$2[ebp]
  00088	0f b6 44 01 19	 movzx	 eax, BYTE PTR [ecx+eax+25]
  0008d	50		 push	 eax
  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_02PDIHAGKM@ii@
  00093	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00099	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009c	eb 12		 jmp	 SHORT $LN1@safeboxGet
$LN4@safeboxGet:

; 302  : 	}
; 303  : 
; 304  : 	return Py_BuildValue("ii", 0, 0);

  0009e	6a 00		 push	 0
  000a0	6a 00		 push	 0
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_02PDIHAGKM@ii@
  000a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  000ad	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@safeboxGet:

; 305  : }

  000b0	c9		 leave
  000b1	c3		 ret	 0
?safeboxGetMallItemAttribute@@YAPAU_object@@PAU1@0@Z ENDP ; safeboxGetMallItemAttribute
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetMallItemMetinSocket@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_pItemData$ = -16					; size = 4
$T1 = -12						; size = 4
_iSlotIndex$ = -8					; size = 4
_iSocketIndex$ = -4					; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetMallItemMetinSocket@@YAPAU_object@@PAU1@0@Z PROC ; safeboxGetMallItemMetinSocket, COMDAT

; 270  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 271  : 	int iSlotIndex;
; 272  : 	if (!PyTuple_GetInteger(poArgs, 0, &iSlotIndex))

  00006	8d 45 f8	 lea	 eax, DWORD PTR _iSlotIndex$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	0f b6 c0	 movzx	 eax, al
  0001a	85 c0		 test	 eax, eax
  0001c	75 07		 jne	 SHORT $LN2@safeboxGet

; 273  : 		return Py_BadArgument();

  0001e	e8 00 00 00 00	 call	 ?Py_BadArgument@@YAPAU_object@@XZ ; Py_BadArgument
  00023	eb 6b		 jmp	 SHORT $LN1@safeboxGet
$LN2@safeboxGet:

; 274  : 	int iSocketIndex;
; 275  : 	if (!PyTuple_GetInteger(poArgs, 1, &iSocketIndex))

  00025	8d 45 fc	 lea	 eax, DWORD PTR _iSocketIndex$[ebp]
  00028	50		 push	 eax
  00029	6a 01		 push	 1
  0002b	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0002e	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	75 07		 jne	 SHORT $LN3@safeboxGet

; 276  : 		return Py_BadArgument();

  0003d	e8 00 00 00 00	 call	 ?Py_BadArgument@@YAPAU_object@@XZ ; Py_BadArgument
  00042	eb 4c		 jmp	 SHORT $LN1@safeboxGet
$LN3@safeboxGet:

; 277  : 
; 278  : 	if (iSocketIndex >= ITEM_SOCKET_SLOT_MAX_NUM)

  00044	83 7d fc 03	 cmp	 DWORD PTR _iSocketIndex$[ebp], 3
  00048	7c 0a		 jl	 SHORT $LN4@safeboxGet

; 279  : 		return Py_BuildException();

  0004a	6a 00		 push	 0
  0004c	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00051	59		 pop	 ecx
  00052	eb 3c		 jmp	 SHORT $LN1@safeboxGet
$LN4@safeboxGet:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  00059	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 282  : 	if (!CPythonSafeBox::Instance().GetMallItemDataPtr(iSlotIndex, &pItemData))

  0005c	8d 45 f0	 lea	 eax, DWORD PTR _pItemData$[ebp]
  0005f	50		 push	 eax
  00060	ff 75 f8	 push	 DWORD PTR _iSlotIndex$[ebp]
  00063	8b 4d f4	 mov	 ecx, DWORD PTR $T1[ebp]
  00066	e8 00 00 00 00	 call	 ?GetMallItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetMallItemDataPtr
  0006b	85 c0		 test	 eax, eax
  0006d	75 0a		 jne	 SHORT $LN5@safeboxGet

; 283  : 		return Py_BuildException();

  0006f	6a 00		 push	 0
  00071	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00076	59		 pop	 ecx
  00077	eb 17		 jmp	 SHORT $LN1@safeboxGet
$LN5@safeboxGet:

; 284  : 
; 285  : 	return Py_BuildValue("i", pItemData->alSockets[iSocketIndex]);

  00079	8b 45 fc	 mov	 eax, DWORD PTR _iSocketIndex$[ebp]
  0007c	8b 4d f0	 mov	 ecx, DWORD PTR _pItemData$[ebp]
  0007f	ff 74 81 0d	 push	 DWORD PTR [ecx+eax*4+13]
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00088	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0008e	59		 pop	 ecx
  0008f	59		 pop	 ecx
$LN1@safeboxGet:

; 286  : }

  00090	c9		 leave
  00091	c3		 ret	 0
?safeboxGetMallItemMetinSocket@@YAPAU_object@@PAU1@0@Z ENDP ; safeboxGetMallItemMetinSocket
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetMallItemCount@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_pInstance$ = -12					; size = 4
$T1 = -8						; size = 4
_ipos$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetMallItemCount@@YAPAU_object@@PAU1@0@Z PROC	; safeboxGetMallItemCount, COMDAT

; 257  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 258  : 	int ipos;
; 259  : 	if (!PyTuple_GetInteger(poArgs, 0, &ipos))

  00006	8d 45 fc	 lea	 eax, DWORD PTR _ipos$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	0f b6 c0	 movzx	 eax, al
  0001a	85 c0		 test	 eax, eax
  0001c	75 07		 jne	 SHORT $LN2@safeboxGet

; 260  : 		return Py_BadArgument();

  0001e	e8 00 00 00 00	 call	 ?Py_BadArgument@@YAPAU_object@@XZ ; Py_BadArgument
  00023	eb 3a		 jmp	 SHORT $LN1@safeboxGet
$LN2@safeboxGet:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  0002a	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 263  : 	if (!CPythonSafeBox::Instance().GetMallItemDataPtr(ipos, &pInstance))

  0002d	8d 45 f4	 lea	 eax, DWORD PTR _pInstance$[ebp]
  00030	50		 push	 eax
  00031	ff 75 fc	 push	 DWORD PTR _ipos$[ebp]
  00034	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00037	e8 00 00 00 00	 call	 ?GetMallItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetMallItemDataPtr
  0003c	85 c0		 test	 eax, eax
  0003e	75 0a		 jne	 SHORT $LN3@safeboxGet

; 264  : 		return Py_BuildException();

  00040	6a 00		 push	 0
  00042	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00047	59		 pop	 ecx
  00048	eb 15		 jmp	 SHORT $LN1@safeboxGet
$LN3@safeboxGet:

; 265  : 
; 266  : 	return Py_BuildValue("i", pInstance->count);

  0004a	8b 45 f4	 mov	 eax, DWORD PTR _pInstance$[ebp]
  0004d	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  00051	50		 push	 eax
  00052	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0005d	59		 pop	 ecx
  0005e	59		 pop	 ecx
$LN1@safeboxGet:

; 267  : }

  0005f	c9		 leave
  00060	c3		 ret	 0
?safeboxGetMallItemCount@@YAPAU_object@@PAU1@0@Z ENDP	; safeboxGetMallItemCount
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetMallItemID@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_pInstance$ = -12					; size = 4
$T1 = -8						; size = 4
_ipos$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetMallItemID@@YAPAU_object@@PAU1@0@Z PROC	; safeboxGetMallItemID, COMDAT

; 244  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 245  : 	int ipos;
; 246  : 	if (!PyTuple_GetInteger(poArgs, 0, &ipos))

  00006	8d 45 fc	 lea	 eax, DWORD PTR _ipos$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	0f b6 c0	 movzx	 eax, al
  0001a	85 c0		 test	 eax, eax
  0001c	75 07		 jne	 SHORT $LN2@safeboxGet

; 247  : 		return Py_BadArgument();

  0001e	e8 00 00 00 00	 call	 ?Py_BadArgument@@YAPAU_object@@XZ ; Py_BadArgument
  00023	eb 37		 jmp	 SHORT $LN1@safeboxGet
$LN2@safeboxGet:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  0002a	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 250  : 	if (!CPythonSafeBox::Instance().GetMallItemDataPtr(ipos, &pInstance))

  0002d	8d 45 f4	 lea	 eax, DWORD PTR _pInstance$[ebp]
  00030	50		 push	 eax
  00031	ff 75 fc	 push	 DWORD PTR _ipos$[ebp]
  00034	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00037	e8 00 00 00 00	 call	 ?GetMallItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetMallItemDataPtr
  0003c	85 c0		 test	 eax, eax
  0003e	75 0a		 jne	 SHORT $LN3@safeboxGet

; 251  : 		return Py_BuildException();

  00040	6a 00		 push	 0
  00042	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00047	59		 pop	 ecx
  00048	eb 12		 jmp	 SHORT $LN1@safeboxGet
$LN3@safeboxGet:

; 252  : 
; 253  : 	return Py_BuildValue("i", pInstance->vnum);

  0004a	8b 45 f4	 mov	 eax, DWORD PTR _pInstance$[ebp]
  0004d	ff 30		 push	 DWORD PTR [eax]
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0005a	59		 pop	 ecx
  0005b	59		 pop	 ecx
$LN1@safeboxGet:

; 254  : }

  0005c	c9		 leave
  0005d	c3		 ret	 0
?safeboxGetMallItemID@@YAPAU_object@@PAU1@0@Z ENDP	; safeboxGetMallItemID
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetMoney@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetMoney@@YAPAU_object@@PAU1@0@Z PROC		; safeboxGetMoney, COMDAT

; 239  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  00009	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 240  : 	return Py_BuildValue("i", CPythonSafeBox::Instance().GetMoney());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetMoney@CPythonSafeBox@@QAEKXZ ; CPythonSafeBox::GetMoney
  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00020	59		 pop	 ecx
  00021	59		 pop	 ecx

; 241  : }

  00022	c9		 leave
  00023	c3		 ret	 0
?safeboxGetMoney@@YAPAU_object@@PAU1@0@Z ENDP		; safeboxGetMoney
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetItemAttribute@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
$T1 = -16						; size = 4
_iSlotIndex$ = -12					; size = 4
_pItemData$2 = -8					; size = 4
_iAttrSlotIndex$ = -4					; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetItemAttribute@@YAPAU_object@@PAU1@0@Z PROC	; safeboxGetItemAttribute, COMDAT

; 220  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 221  : 	int iSlotIndex;
; 222  : 	if (!PyTuple_GetInteger(poArgs, 0, &iSlotIndex))

  00006	8d 45 f4	 lea	 eax, DWORD PTR _iSlotIndex$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	0f b6 c0	 movzx	 eax, al
  0001a	85 c0		 test	 eax, eax
  0001c	75 0d		 jne	 SHORT $LN2@safeboxGet

; 223  : 		return Py_BuildException();

  0001e	6a 00		 push	 0
  00020	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00025	59		 pop	 ecx
  00026	e9 85 00 00 00	 jmp	 $LN1@safeboxGet
$LN2@safeboxGet:

; 224  : 	int iAttrSlotIndex;
; 225  : 	if (!PyTuple_GetInteger(poArgs, 1, &iAttrSlotIndex))

  0002b	8d 45 fc	 lea	 eax, DWORD PTR _iAttrSlotIndex$[ebp]
  0002e	50		 push	 eax
  0002f	6a 01		 push	 1
  00031	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00034	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	0f b6 c0	 movzx	 eax, al
  0003f	85 c0		 test	 eax, eax
  00041	75 0a		 jne	 SHORT $LN3@safeboxGet

; 226  : 		return Py_BuildException();

  00043	6a 00		 push	 0
  00045	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  0004a	59		 pop	 ecx
  0004b	eb 63		 jmp	 SHORT $LN1@safeboxGet
$LN3@safeboxGet:

; 227  : 
; 228  : 	if (iAttrSlotIndex >= 0 && iAttrSlotIndex < ITEM_ATTRIBUTE_SLOT_MAX_NUM)

  0004d	83 7d fc 00	 cmp	 DWORD PTR _iAttrSlotIndex$[ebp], 0
  00051	7c 4b		 jl	 SHORT $LN4@safeboxGet
  00053	83 7d fc 07	 cmp	 DWORD PTR _iAttrSlotIndex$[ebp], 7
  00057	7d 45		 jge	 SHORT $LN4@safeboxGet
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00059	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  0005e	89 45 f0	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 231  : 		if (CPythonSafeBox::Instance().GetItemDataPtr(iSlotIndex, &pItemData))

  00061	8d 45 f8	 lea	 eax, DWORD PTR _pItemData$2[ebp]
  00064	50		 push	 eax
  00065	ff 75 f4	 push	 DWORD PTR _iSlotIndex$[ebp]
  00068	8b 4d f0	 mov	 ecx, DWORD PTR $T1[ebp]
  0006b	e8 00 00 00 00	 call	 ?GetItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetItemDataPtr
  00070	85 c0		 test	 eax, eax
  00072	74 2a		 je	 SHORT $LN4@safeboxGet

; 232  : 			return Py_BuildValue("ii", pItemData->aAttr[iAttrSlotIndex].bType, pItemData->aAttr[iAttrSlotIndex].sValue);

  00074	6b 45 fc 03	 imul	 eax, DWORD PTR _iAttrSlotIndex$[ebp], 3
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _pItemData$2[ebp]
  0007b	0f bf 44 01 1a	 movsx	 eax, WORD PTR [ecx+eax+26]
  00080	50		 push	 eax
  00081	6b 45 fc 03	 imul	 eax, DWORD PTR _iAttrSlotIndex$[ebp], 3
  00085	8b 4d f8	 mov	 ecx, DWORD PTR _pItemData$2[ebp]
  00088	0f b6 44 01 19	 movzx	 eax, BYTE PTR [ecx+eax+25]
  0008d	50		 push	 eax
  0008e	68 00 00 00 00	 push	 OFFSET ??_C@_02PDIHAGKM@ii@
  00093	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00099	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009c	eb 12		 jmp	 SHORT $LN1@safeboxGet
$LN4@safeboxGet:

; 233  : 	}
; 234  : 
; 235  : 	return Py_BuildValue("ii", 0, 0);

  0009e	6a 00		 push	 0
  000a0	6a 00		 push	 0
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_02PDIHAGKM@ii@
  000a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  000ad	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@safeboxGet:

; 236  : }

  000b0	c9		 leave
  000b1	c3		 ret	 0
?safeboxGetItemAttribute@@YAPAU_object@@PAU1@0@Z ENDP	; safeboxGetItemAttribute
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetItemMetinSocket@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_pItemData$ = -16					; size = 4
$T1 = -12						; size = 4
_iSlotIndex$ = -8					; size = 4
_iSocketIndex$ = -4					; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetItemMetinSocket@@YAPAU_object@@PAU1@0@Z PROC	; safeboxGetItemMetinSocket, COMDAT

; 201  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 202  : 	int iSlotIndex;
; 203  : 	if (!PyTuple_GetInteger(poArgs, 0, &iSlotIndex))

  00006	8d 45 f8	 lea	 eax, DWORD PTR _iSlotIndex$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	0f b6 c0	 movzx	 eax, al
  0001a	85 c0		 test	 eax, eax
  0001c	75 07		 jne	 SHORT $LN2@safeboxGet

; 204  : 		return Py_BadArgument();

  0001e	e8 00 00 00 00	 call	 ?Py_BadArgument@@YAPAU_object@@XZ ; Py_BadArgument
  00023	eb 6b		 jmp	 SHORT $LN1@safeboxGet
$LN2@safeboxGet:

; 205  : 	int iSocketIndex;
; 206  : 	if (!PyTuple_GetInteger(poArgs, 1, &iSocketIndex))

  00025	8d 45 fc	 lea	 eax, DWORD PTR _iSocketIndex$[ebp]
  00028	50		 push	 eax
  00029	6a 01		 push	 1
  0002b	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0002e	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	75 07		 jne	 SHORT $LN3@safeboxGet

; 207  : 		return Py_BadArgument();

  0003d	e8 00 00 00 00	 call	 ?Py_BadArgument@@YAPAU_object@@XZ ; Py_BadArgument
  00042	eb 4c		 jmp	 SHORT $LN1@safeboxGet
$LN3@safeboxGet:

; 208  : 
; 209  : 	if (iSocketIndex >= ITEM_SOCKET_SLOT_MAX_NUM)

  00044	83 7d fc 03	 cmp	 DWORD PTR _iSocketIndex$[ebp], 3
  00048	7c 0a		 jl	 SHORT $LN4@safeboxGet

; 210  : 		return Py_BuildException();

  0004a	6a 00		 push	 0
  0004c	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00051	59		 pop	 ecx
  00052	eb 3c		 jmp	 SHORT $LN1@safeboxGet
$LN4@safeboxGet:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  00059	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 213  : 	if (!CPythonSafeBox::Instance().GetItemDataPtr(iSlotIndex, &pItemData))

  0005c	8d 45 f0	 lea	 eax, DWORD PTR _pItemData$[ebp]
  0005f	50		 push	 eax
  00060	ff 75 f8	 push	 DWORD PTR _iSlotIndex$[ebp]
  00063	8b 4d f4	 mov	 ecx, DWORD PTR $T1[ebp]
  00066	e8 00 00 00 00	 call	 ?GetItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetItemDataPtr
  0006b	85 c0		 test	 eax, eax
  0006d	75 0a		 jne	 SHORT $LN5@safeboxGet

; 214  : 		return Py_BuildException();

  0006f	6a 00		 push	 0
  00071	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00076	59		 pop	 ecx
  00077	eb 17		 jmp	 SHORT $LN1@safeboxGet
$LN5@safeboxGet:

; 215  : 
; 216  : 	return Py_BuildValue("i", pItemData->alSockets[iSocketIndex]);

  00079	8b 45 fc	 mov	 eax, DWORD PTR _iSocketIndex$[ebp]
  0007c	8b 4d f0	 mov	 ecx, DWORD PTR _pItemData$[ebp]
  0007f	ff 74 81 0d	 push	 DWORD PTR [ecx+eax*4+13]
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00088	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0008e	59		 pop	 ecx
  0008f	59		 pop	 ecx
$LN1@safeboxGet:

; 217  : }

  00090	c9		 leave
  00091	c3		 ret	 0
?safeboxGetItemMetinSocket@@YAPAU_object@@PAU1@0@Z ENDP	; safeboxGetItemMetinSocket
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetItemFlags@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_pInstance$ = -12					; size = 4
$T1 = -8						; size = 4
_ipos$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetItemFlags@@YAPAU_object@@PAU1@0@Z PROC	; safeboxGetItemFlags, COMDAT

; 188  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 189  : 	int ipos;
; 190  : 	if (!PyTuple_GetInteger(poArgs, 0, &ipos))

  00006	8d 45 fc	 lea	 eax, DWORD PTR _ipos$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	0f b6 c0	 movzx	 eax, al
  0001a	85 c0		 test	 eax, eax
  0001c	75 07		 jne	 SHORT $LN2@safeboxGet

; 191  : 		return Py_BadArgument();

  0001e	e8 00 00 00 00	 call	 ?Py_BadArgument@@YAPAU_object@@XZ ; Py_BadArgument
  00023	eb 38		 jmp	 SHORT $LN1@safeboxGet
$LN2@safeboxGet:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  0002a	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 194  : 	if (!CPythonSafeBox::Instance().GetItemDataPtr(ipos, &pInstance))

  0002d	8d 45 f4	 lea	 eax, DWORD PTR _pInstance$[ebp]
  00030	50		 push	 eax
  00031	ff 75 fc	 push	 DWORD PTR _ipos$[ebp]
  00034	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00037	e8 00 00 00 00	 call	 ?GetItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetItemDataPtr
  0003c	85 c0		 test	 eax, eax
  0003e	75 0a		 jne	 SHORT $LN3@safeboxGet

; 195  : 		return Py_BuildException();

  00040	6a 00		 push	 0
  00042	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00047	59		 pop	 ecx
  00048	eb 13		 jmp	 SHORT $LN1@safeboxGet
$LN3@safeboxGet:

; 196  : 
; 197  : 	return Py_BuildValue("i", pInstance->flags);

  0004a	8b 45 f4	 mov	 eax, DWORD PTR _pInstance$[ebp]
  0004d	ff 70 05	 push	 DWORD PTR [eax+5]
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0005b	59		 pop	 ecx
  0005c	59		 pop	 ecx
$LN1@safeboxGet:

; 198  : }

  0005d	c9		 leave
  0005e	c3		 ret	 0
?safeboxGetItemFlags@@YAPAU_object@@PAU1@0@Z ENDP	; safeboxGetItemFlags
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetItemCount@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_pInstance$ = -12					; size = 4
$T1 = -8						; size = 4
_ipos$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetItemCount@@YAPAU_object@@PAU1@0@Z PROC	; safeboxGetItemCount, COMDAT

; 175  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 176  : 	int ipos;
; 177  : 	if (!PyTuple_GetInteger(poArgs, 0, &ipos))

  00006	8d 45 fc	 lea	 eax, DWORD PTR _ipos$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	0f b6 c0	 movzx	 eax, al
  0001a	85 c0		 test	 eax, eax
  0001c	75 07		 jne	 SHORT $LN2@safeboxGet

; 178  : 		return Py_BadArgument();

  0001e	e8 00 00 00 00	 call	 ?Py_BadArgument@@YAPAU_object@@XZ ; Py_BadArgument
  00023	eb 3a		 jmp	 SHORT $LN1@safeboxGet
$LN2@safeboxGet:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  0002a	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 181  : 	if (!CPythonSafeBox::Instance().GetItemDataPtr(ipos, &pInstance))

  0002d	8d 45 f4	 lea	 eax, DWORD PTR _pInstance$[ebp]
  00030	50		 push	 eax
  00031	ff 75 fc	 push	 DWORD PTR _ipos$[ebp]
  00034	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00037	e8 00 00 00 00	 call	 ?GetItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetItemDataPtr
  0003c	85 c0		 test	 eax, eax
  0003e	75 0a		 jne	 SHORT $LN3@safeboxGet

; 182  : 		return Py_BuildException();

  00040	6a 00		 push	 0
  00042	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00047	59		 pop	 ecx
  00048	eb 15		 jmp	 SHORT $LN1@safeboxGet
$LN3@safeboxGet:

; 183  : 
; 184  : 	return Py_BuildValue("i", pInstance->count);

  0004a	8b 45 f4	 mov	 eax, DWORD PTR _pInstance$[ebp]
  0004d	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  00051	50		 push	 eax
  00052	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0005d	59		 pop	 ecx
  0005e	59		 pop	 ecx
$LN1@safeboxGet:

; 185  : }

  0005f	c9		 leave
  00060	c3		 ret	 0
?safeboxGetItemCount@@YAPAU_object@@PAU1@0@Z ENDP	; safeboxGetItemCount
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetItemID@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_pInstance$ = -12					; size = 4
$T1 = -8						; size = 4
_ipos$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetItemID@@YAPAU_object@@PAU1@0@Z PROC		; safeboxGetItemID, COMDAT

; 162  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 163  : 	int ipos;
; 164  : 	if (!PyTuple_GetInteger(poArgs, 0, &ipos))

  00006	8d 45 fc	 lea	 eax, DWORD PTR _ipos$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	0f b6 c0	 movzx	 eax, al
  0001a	85 c0		 test	 eax, eax
  0001c	75 07		 jne	 SHORT $LN2@safeboxGet

; 165  : 		return Py_BadArgument();

  0001e	e8 00 00 00 00	 call	 ?Py_BadArgument@@YAPAU_object@@XZ ; Py_BadArgument
  00023	eb 37		 jmp	 SHORT $LN1@safeboxGet
$LN2@safeboxGet:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  0002a	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 168  : 	if (!CPythonSafeBox::Instance().GetItemDataPtr(ipos, &pInstance))

  0002d	8d 45 f4	 lea	 eax, DWORD PTR _pInstance$[ebp]
  00030	50		 push	 eax
  00031	ff 75 fc	 push	 DWORD PTR _ipos$[ebp]
  00034	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00037	e8 00 00 00 00	 call	 ?GetItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ; CPythonSafeBox::GetItemDataPtr
  0003c	85 c0		 test	 eax, eax
  0003e	75 0a		 jne	 SHORT $LN3@safeboxGet

; 169  : 		return Py_BuildException();

  00040	6a 00		 push	 0
  00042	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00047	59		 pop	 ecx
  00048	eb 12		 jmp	 SHORT $LN1@safeboxGet
$LN3@safeboxGet:

; 170  : 
; 171  : 	return Py_BuildValue("i", pInstance->vnum);

  0004a	8b 45 f4	 mov	 eax, DWORD PTR _pInstance$[ebp]
  0004d	ff 30		 push	 DWORD PTR [eax]
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0005a	59		 pop	 ecx
  0005b	59		 pop	 ecx
$LN1@safeboxGet:

; 172  : }

  0005c	c9		 leave
  0005d	c3		 ret	 0
?safeboxGetItemID@@YAPAU_object@@PAU1@0@Z ENDP		; safeboxGetItemID
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?safeboxGetCurrentSafeboxSize@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?safeboxGetCurrentSafeboxSize@@YAPAU_object@@PAU1@0@Z PROC ; safeboxGetCurrentSafeboxSize, COMDAT

; 157  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A ; CSingleton<CPythonSafeBox>::ms_singleton
  00009	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 158  : 	return Py_BuildValue("i", CPythonSafeBox::Instance().GetCurrentSafeBoxSize());

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetCurrentSafeBoxSize@CPythonSafeBox@@QAEHXZ ; CPythonSafeBox::GetCurrentSafeBoxSize
  00014	50		 push	 eax
  00015	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00020	59		 pop	 ecx
  00021	59		 pop	 ecx

; 159  : }

  00022	c9		 leave
  00023	c3		 ret	 0
?safeboxGetCurrentSafeboxSize@@YAPAU_object@@PAU1@0@Z ENDP ; safeboxGetCurrentSafeboxSize
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_GCPythonSafeBox@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCPythonSafeBox@@UAEPAXI@Z PROC			; CPythonSafeBox::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CPythonSafeBox@@UAE@XZ ; CPythonSafeBox::~CPythonSafeBox
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0c		 je	 SHORT $LN2@scalar
  00017	6a 20		 push	 32			; 00000020H
  00019	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00021	59		 pop	 ecx
  00022	59		 pop	 ecx
$LN2@scalar:
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c9		 leave
  00027	c2 04 00	 ret	 4
??_GCPythonSafeBox@@UAEPAXI@Z ENDP			; CPythonSafeBox::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Getal@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEAAV?$allocator@Upacket_item@@@2@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
?_Getal@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEAAV?$allocator@Upacket_item@@@2@XZ PROC ; std::vector<packet_item,std::allocator<packet_item> >::_Getal, COMDAT
; _this$ = ecx

; 1732 :     _Alty& _Getal() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1733 :         return _Mypair._Get_first();

  00008	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  0000b	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  0000e	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]

; 1734 :     }

  00011	c9		 leave
  00012	c3		 ret	 0
?_Getal@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEAAV?$allocator@Upacket_item@@@2@XZ ENDP ; std::vector<packet_item,std::allocator<packet_item> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Xlength@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@CAXXZ PROC ; std::vector<packet_item,std::allocator<packet_item> >::_Xlength, COMDAT

; 1704 :     [[noreturn]] static void _Xlength() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1705 :         _Xlength_error("vector too long");

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00008	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1706 :     }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
?_Xlength@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@CAXXZ ENDP ; std::vector<packet_item,std::allocator<packet_item> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Tidy@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
$T1 = -52						; size = 4
__Ptr$ = -48						; size = 4
__Count$ = -44						; size = 4
$T2 = -40						; size = 4
__First$ = -36						; size = 4
__Last$ = -32						; size = 4
$T3 = -28						; size = 4
$T4 = -24						; size = 4
__Myend$ = -20						; size = 4
__Mylast$ = -16						; size = 4
_this$ = -12						; size = 4
__My_data$ = -8						; size = 4
__Myfirst$ = -4						; size = 4
?_Tidy@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXXZ PROC ; std::vector<packet_item,std::allocator<packet_item> >::_Tidy, COMDAT
; _this$ = ecx

; 1686 :     void _Tidy() noexcept { // free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1687 :         auto& _My_data    = _Mypair._Myval2;

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 f8	 mov	 DWORD PTR __My_data$[ebp], eax

; 1688 :         pointer& _Myfirst = _My_data._Myfirst;

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00012	89 45 fc	 mov	 DWORD PTR __Myfirst$[ebp], eax

; 1689 :         pointer& _Mylast  = _My_data._Mylast;

  00015	8b 45 f8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00018	83 c0 04	 add	 eax, 4
  0001b	89 45 f0	 mov	 DWORD PTR __Mylast$[ebp], eax

; 1690 :         pointer& _Myend   = _My_data._Myend;

  0001e	8b 45 f8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00021	83 c0 08	 add	 eax, 8
  00024	89 45 ec	 mov	 DWORD PTR __Myend$[ebp], eax

; 1691 : 
; 1692 :         _My_data._Orphan_all();
; 1693 : 
; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00027	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0002a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0002d	74 75		 je	 SHORT $LN3@Tidy

; 1695 :             _Destroy(_Myfirst, _Mylast);

  0002f	8b 45 f0	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00032	8b 00		 mov	 eax, DWORD PTR [eax]
  00034	89 45 e0	 mov	 DWORD PTR __Last$[ebp], eax
  00037	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0003a	8b 00		 mov	 eax, DWORD PTR [eax]
  0003c	89 45 dc	 mov	 DWORD PTR __First$[ebp], eax

; 1733 :         return _Mypair._Get_first();

  0003f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  00042	89 45 e8	 mov	 DWORD PTR $T4[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  00045	8b 45 e8	 mov	 eax, DWORD PTR $T4[ebp]
  00048	89 45 e4	 mov	 DWORD PTR $T3[ebp], eax

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0004b	ff 75 e4	 push	 DWORD PTR $T3[ebp]
  0004e	ff 75 e0	 push	 DWORD PTR __Last$[ebp]
  00051	ff 75 dc	 push	 DWORD PTR __First$[ebp]
  00054	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@Upacket_item@@@std@@@std@@YAXPAUpacket_item@@QAU1@AAV?$allocator@Upacket_item@@@0@@Z ; std::_Destroy_range<std::allocator<packet_item> >
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1733 :         return _Mypair._Get_first();

  0005c	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  0005f	89 45 d8	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  00062	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
  00065	89 45 cc	 mov	 DWORD PTR $T1[ebp], eax

; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00068	8b 45 ec	 mov	 eax, DWORD PTR __Myend$[ebp]
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR __Myfirst$[ebp]
  0006e	8b 00		 mov	 eax, DWORD PTR [eax]
  00070	2b 01		 sub	 eax, DWORD PTR [ecx]
  00072	99		 cdq
  00073	6a 2e		 push	 46			; 0000002eH
  00075	59		 pop	 ecx
  00076	f7 f9		 idiv	 ecx
  00078	89 45 d4	 mov	 DWORD PTR __Count$[ebp], eax
  0007b	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0007e	8b 00		 mov	 eax, DWORD PTR [eax]
  00080	89 45 d0	 mov	 DWORD PTR __Ptr$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	6b 45 d4 2e	 imul	 eax, DWORD PTR __Count$[ebp], 46
  00087	50		 push	 eax
  00088	ff 75 d0	 push	 DWORD PTR __Ptr$[ebp]
  0008b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00090	59		 pop	 ecx
  00091	59		 pop	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00092	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  00095	83 20 00	 and	 DWORD PTR [eax], 0

; 1699 :             _Mylast  = pointer();

  00098	8b 45 f0	 mov	 eax, DWORD PTR __Mylast$[ebp]
  0009b	83 20 00	 and	 DWORD PTR [eax], 0

; 1700 :             _Myend   = pointer();

  0009e	8b 45 ec	 mov	 eax, DWORD PTR __Myend$[ebp]
  000a1	83 20 00	 and	 DWORD PTR [eax], 0
$LN3@Tidy:

; 1701 :         }
; 1702 :     }

  000a4	c9		 leave
  000a5	c3		 ret	 0
?_Tidy@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXXZ ENDP ; std::vector<packet_item,std::allocator<packet_item> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Change_array@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXQAUpacket_item@@II@Z
_TEXT	SEGMENT
$T1 = -52						; size = 4
__Ptr$ = -48						; size = 4
__Count$ = -44						; size = 4
$T2 = -40						; size = 4
__First$ = -36						; size = 4
__Last$ = -32						; size = 4
$T3 = -28						; size = 4
$T4 = -24						; size = 4
__Myend$ = -20						; size = 4
__Mylast$ = -16						; size = 4
_this$ = -12						; size = 4
__My_data$ = -8						; size = 4
__Myfirst$ = -4						; size = 4
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXQAUpacket_item@@II@Z PROC ; std::vector<packet_item,std::allocator<packet_item> >::_Change_array, COMDAT
; _this$ = ecx

; 1667 :     void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1668 :         // orphan all iterators, discard old array, acquire new array
; 1669 :         auto& _My_data    = _Mypair._Myval2;

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 f8	 mov	 DWORD PTR __My_data$[ebp], eax

; 1670 :         pointer& _Myfirst = _My_data._Myfirst;

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00012	89 45 fc	 mov	 DWORD PTR __Myfirst$[ebp], eax

; 1671 :         pointer& _Mylast  = _My_data._Mylast;

  00015	8b 45 f8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00018	83 c0 04	 add	 eax, 4
  0001b	89 45 f0	 mov	 DWORD PTR __Mylast$[ebp], eax

; 1672 :         pointer& _Myend   = _My_data._Myend;

  0001e	8b 45 f8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00021	83 c0 08	 add	 eax, 8
  00024	89 45 ec	 mov	 DWORD PTR __Myend$[ebp], eax

; 1673 : 
; 1674 :         _My_data._Orphan_all();
; 1675 : 
; 1676 :         if (_Myfirst) { // destroy and deallocate old array

  00027	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0002a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0002d	74 63		 je	 SHORT $LN2@Change_arr

; 1677 :             _Destroy(_Myfirst, _Mylast);

  0002f	8b 45 f0	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00032	8b 00		 mov	 eax, DWORD PTR [eax]
  00034	89 45 e0	 mov	 DWORD PTR __Last$[ebp], eax
  00037	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0003a	8b 00		 mov	 eax, DWORD PTR [eax]
  0003c	89 45 dc	 mov	 DWORD PTR __First$[ebp], eax

; 1733 :         return _Mypair._Get_first();

  0003f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  00042	89 45 e8	 mov	 DWORD PTR $T4[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  00045	8b 45 e8	 mov	 eax, DWORD PTR $T4[ebp]
  00048	89 45 e4	 mov	 DWORD PTR $T3[ebp], eax

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0004b	ff 75 e4	 push	 DWORD PTR $T3[ebp]
  0004e	ff 75 e0	 push	 DWORD PTR __Last$[ebp]
  00051	ff 75 dc	 push	 DWORD PTR __First$[ebp]
  00054	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@Upacket_item@@@std@@@std@@YAXPAUpacket_item@@QAU1@AAV?$allocator@Upacket_item@@@0@@Z ; std::_Destroy_range<std::allocator<packet_item> >
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1733 :         return _Mypair._Get_first();

  0005c	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  0005f	89 45 d8	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  00062	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
  00065	89 45 cc	 mov	 DWORD PTR $T1[ebp], eax

; 1678 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00068	8b 45 ec	 mov	 eax, DWORD PTR __Myend$[ebp]
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR __Myfirst$[ebp]
  0006e	8b 00		 mov	 eax, DWORD PTR [eax]
  00070	2b 01		 sub	 eax, DWORD PTR [ecx]
  00072	99		 cdq
  00073	6a 2e		 push	 46			; 0000002eH
  00075	59		 pop	 ecx
  00076	f7 f9		 idiv	 ecx
  00078	89 45 d4	 mov	 DWORD PTR __Count$[ebp], eax
  0007b	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0007e	8b 00		 mov	 eax, DWORD PTR [eax]
  00080	89 45 d0	 mov	 DWORD PTR __Ptr$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	6b 45 d4 2e	 imul	 eax, DWORD PTR __Count$[ebp], 46
  00087	50		 push	 eax
  00088	ff 75 d0	 push	 DWORD PTR __Ptr$[ebp]
  0008b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00090	59		 pop	 ecx
  00091	59		 pop	 ecx
$LN2@Change_arr:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1681 :         _Myfirst = _Newvec;

  00092	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  00095	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  00098	89 08		 mov	 DWORD PTR [eax], ecx

; 1682 :         _Mylast  = _Newvec + _Newsize;

  0009a	6b 45 0c 2e	 imul	 eax, DWORD PTR __Newsize$[ebp], 46
  0009e	03 45 08	 add	 eax, DWORD PTR __Newvec$[ebp]
  000a1	8b 4d f0	 mov	 ecx, DWORD PTR __Mylast$[ebp]
  000a4	89 01		 mov	 DWORD PTR [ecx], eax

; 1683 :         _Myend   = _Newvec + _Newcapacity;

  000a6	6b 45 10 2e	 imul	 eax, DWORD PTR __Newcapacity$[ebp], 46
  000aa	03 45 08	 add	 eax, DWORD PTR __Newvec$[ebp]
  000ad	8b 4d ec	 mov	 ecx, DWORD PTR __Myend$[ebp]
  000b0	89 01		 mov	 DWORD PTR [ecx], eax

; 1684 :     }

  000b2	c9		 leave
  000b3	c2 0c 00	 ret	 12			; 0000000cH
?_Change_array@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXQAUpacket_item@@II@Z ENDP ; std::vector<packet_item,std::allocator<packet_item> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\limits
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Calculate_growth@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@ABEII@Z
_TEXT	SEGMENT
$T1 = -52						; size = 4
$T2 = -48						; size = 4
$T3 = -44						; size = 4
$T4 = -40						; size = 4
$T5 = -36						; size = 4
__Geometric$ = -32					; size = 4
__Max$ = -28						; size = 4
tv82 = -24						; size = 4
$T6 = -20						; size = 4
$T7 = -16						; size = 4
_this$ = -12						; size = 4
__My_data$8 = -8					; size = 4
__Oldcapacity$ = -4					; size = 4
__Newsize$ = 8						; size = 4
?_Calculate_growth@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@ABEII@Z PROC ; std::vector<packet_item,std::allocator<packet_item> >::_Calculate_growth, COMDAT
; _this$ = ecx

; 1615 :     size_type _Calculate_growth(const size_type _Newsize) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1493 :         auto& _My_data = _Mypair._Myval2;

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 f8	 mov	 DWORD PTR __My_data$8[ebp], eax

; 1494 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __My_data$8[ebp]
  00012	8b 4d f8	 mov	 ecx, DWORD PTR __My_data$8[ebp]
  00015	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00018	2b 01		 sub	 eax, DWORD PTR [ecx]
  0001a	99		 cdq
  0001b	6a 2e		 push	 46			; 0000002eH
  0001d	59		 pop	 ecx
  0001e	f7 f9		 idiv	 ecx
  00020	89 45 fc	 mov	 DWORD PTR __Oldcapacity$[ebp], eax

; 1737 :         return _Mypair._Get_first();

  00023	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1351 :         return *this;

  00026	89 45 dc	 mov	 DWORD PTR $T5[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1737 :         return _Mypair._Get_first();

  00029	8b 45 dc	 mov	 eax, DWORD PTR $T5[ebp]
  0002c	89 45 cc	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 710  :         return static_cast<size_t>(-1) / sizeof(value_type);

  0002f	c7 45 f0 16 b2
	90 05		 mov	 DWORD PTR $T7[ebp], 93368854 ; 0590b216H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\limits

; 557  :         return INT_MAX;

  00036	c7 45 d8 ff ff
	ff 7f		 mov	 DWORD PTR $T4[ebp], 2147483647 ; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1488 :         return (_STD min)(

  0003d	8b 45 d8	 mov	 eax, DWORD PTR $T4[ebp]
  00040	89 45 ec	 mov	 DWORD PTR $T6[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 68   :     return _Right < _Left ? _Right : _Left;

  00043	8b 45 f0	 mov	 eax, DWORD PTR $T7[ebp]
  00046	3b 45 ec	 cmp	 eax, DWORD PTR $T6[ebp]
  00049	73 08		 jae	 SHORT $LN25@Calculate_
  0004b	8d 45 f0	 lea	 eax, DWORD PTR $T7[ebp]
  0004e	89 45 e8	 mov	 DWORD PTR tv82[ebp], eax
  00051	eb 06		 jmp	 SHORT $LN26@Calculate_
$LN25@Calculate_:
  00053	8d 45 ec	 lea	 eax, DWORD PTR $T6[ebp]
  00056	89 45 e8	 mov	 DWORD PTR tv82[ebp], eax
$LN26@Calculate_:
  00059	8b 45 e8	 mov	 eax, DWORD PTR tv82[ebp]
  0005c	89 45 d4	 mov	 DWORD PTR $T3[ebp], eax
  0005f	8b 45 d4	 mov	 eax, DWORD PTR $T3[ebp]
  00062	89 45 d0	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1488 :         return (_STD min)(

  00065	8b 45 d0	 mov	 eax, DWORD PTR $T2[ebp]
  00068	8b 00		 mov	 eax, DWORD PTR [eax]
  0006a	89 45 e4	 mov	 DWORD PTR __Max$[ebp], eax

; 1616 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1617 :         const size_type _Oldcapacity = capacity();
; 1618 :         const auto _Max              = max_size();
; 1619 : 
; 1620 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  0006d	8b 45 fc	 mov	 eax, DWORD PTR __Oldcapacity$[ebp]
  00070	d1 e8		 shr	 eax, 1
  00072	8b 4d e4	 mov	 ecx, DWORD PTR __Max$[ebp]
  00075	2b c8		 sub	 ecx, eax
  00077	39 4d fc	 cmp	 DWORD PTR __Oldcapacity$[ebp], ecx
  0007a	76 05		 jbe	 SHORT $LN2@Calculate_

; 1621 :             return _Max; // geometric growth would overflow

  0007c	8b 45 e4	 mov	 eax, DWORD PTR __Max$[ebp]
  0007f	eb 1b		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1622 :         }
; 1623 : 
; 1624 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00081	8b 45 fc	 mov	 eax, DWORD PTR __Oldcapacity$[ebp]
  00084	d1 e8		 shr	 eax, 1
  00086	03 45 fc	 add	 eax, DWORD PTR __Oldcapacity$[ebp]
  00089	89 45 e0	 mov	 DWORD PTR __Geometric$[ebp], eax

; 1625 : 
; 1626 :         if (_Geometric < _Newsize) {

  0008c	8b 45 e0	 mov	 eax, DWORD PTR __Geometric$[ebp]
  0008f	3b 45 08	 cmp	 eax, DWORD PTR __Newsize$[ebp]
  00092	73 05		 jae	 SHORT $LN3@Calculate_

; 1627 :             return _Newsize; // geometric growth would be insufficient

  00094	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00097	eb 03		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1628 :         }
; 1629 : 
; 1630 :         return _Geometric; // geometric growth is sufficient

  00099	8b 45 e0	 mov	 eax, DWORD PTR __Geometric$[ebp]
$LN1@Calculate_:

; 1631 :     }

  0009c	c9		 leave
  0009d	c2 04 00	 ret	 4
?_Calculate_growth@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@ABEII@Z ENDP ; std::vector<packet_item,std::allocator<packet_item> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Destroy@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXPAUpacket_item@@0@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXPAUpacket_item@@0@Z PROC ; std::vector<packet_item,std::allocator<packet_item> >::_Destroy, COMDAT
; _this$ = ecx

; 1611 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1733 :         return _Mypair._Get_first();

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  0000c	89 45 f8	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  0000f	8b 45 f8	 mov	 eax, DWORD PTR $T2[ebp]
  00012	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00015	ff 75 f4	 push	 DWORD PTR $T1[ebp]
  00018	ff 75 0c	 push	 DWORD PTR __Last$[ebp]
  0001b	ff 75 08	 push	 DWORD PTR __First$[ebp]
  0001e	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@Upacket_item@@@std@@@std@@YAXPAUpacket_item@@QAU1@AAV?$allocator@Upacket_item@@@0@@Z ; std::_Destroy_range<std::allocator<packet_item> >
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1613 :     }

  00026	c9		 leave
  00027	c2 08 00	 ret	 8
?_Destroy@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXPAUpacket_item@@0@Z ENDP ; std::vector<packet_item,std::allocator<packet_item> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?clear@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__First$ = -32						; size = 4
__Last$ = -28						; size = 4
$T1 = -24						; size = 4
$T2 = -20						; size = 4
__Myfirst$ = -16					; size = 4
__Mylast$ = -12						; size = 4
_this$ = -8						; size = 4
__My_data$ = -4						; size = 4
?clear@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@QAEXXZ PROC ; std::vector<packet_item,std::allocator<packet_item> >::clear, COMDAT
; _this$ = ecx

; 1383 :     void clear() noexcept { // erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1384 :         auto& _My_data    = _Mypair._Myval2;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 fc	 mov	 DWORD PTR __My_data$[ebp], eax

; 1385 :         pointer& _Myfirst = _My_data._Myfirst;

  0000f	8b 45 fc	 mov	 eax, DWORD PTR __My_data$[ebp]
  00012	89 45 f0	 mov	 DWORD PTR __Myfirst$[ebp], eax

; 1386 :         pointer& _Mylast  = _My_data._Mylast;

  00015	8b 45 fc	 mov	 eax, DWORD PTR __My_data$[ebp]
  00018	83 c0 04	 add	 eax, 4
  0001b	89 45 f4	 mov	 DWORD PTR __Mylast$[ebp], eax

; 1387 : 
; 1388 :         _My_data._Orphan_all();
; 1389 :         _Destroy(_Myfirst, _Mylast);

  0001e	8b 45 f4	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00021	8b 00		 mov	 eax, DWORD PTR [eax]
  00023	89 45 e4	 mov	 DWORD PTR __Last$[ebp], eax
  00026	8b 45 f0	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  00029	8b 00		 mov	 eax, DWORD PTR [eax]
  0002b	89 45 e0	 mov	 DWORD PTR __First$[ebp], eax

; 1733 :         return _Mypair._Get_first();

  0002e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  00031	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  00034	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]
  00037	89 45 e8	 mov	 DWORD PTR $T1[ebp], eax

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0003a	ff 75 e8	 push	 DWORD PTR $T1[ebp]
  0003d	ff 75 e4	 push	 DWORD PTR __Last$[ebp]
  00040	ff 75 e0	 push	 DWORD PTR __First$[ebp]
  00043	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@Upacket_item@@@std@@@std@@YAXPAUpacket_item@@QAU1@AAV?$allocator@Upacket_item@@@0@@Z ; std::_Destroy_range<std::allocator<packet_item> >
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1390 :         _Mylast = _Myfirst;

  0004b	8b 45 f4	 mov	 eax, DWORD PTR __Mylast$[ebp]
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR __Myfirst$[ebp]
  00051	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00053	89 08		 mov	 DWORD PTR [eax], ecx

; 1391 :     }

  00055	c9		 leave
  00056	c3		 ret	 0
?clear@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@QAEXXZ ENDP ; std::vector<packet_item,std::allocator<packet_item> >::clear
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?deallocate@?$allocator@Upacket_item@@@std@@QAEXQAUpacket_item@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@Upacket_item@@@std@@QAEXQAUpacket_item@@I@Z PROC ; std::allocator<packet_item>::deallocate, COMDAT
; _this$ = ecx

; 808  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 809  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	6b 45 0c 2e	 imul	 eax, DWORD PTR __Count$[ebp], 46
  0000b	50		 push	 eax
  0000c	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	59		 pop	 ecx
  00015	59		 pop	 ecx

; 811  :     }

  00016	c9		 leave
  00017	c2 08 00	 ret	 8
?deallocate@?$allocator@Upacket_item@@@std@@QAEXQAUpacket_item@@I@Z ENDP ; std::allocator<packet_item>::deallocate
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?GetMallSize@CPythonSafeBox@@QAEKXZ
_TEXT	SEGMENT
$T1 = -12						; size = 4
_this$ = -8						; size = 4
__My_data$2 = -4					; size = 4
?GetMallSize@CPythonSafeBox@@QAEKXZ PROC		; CPythonSafeBox::GetMallSize, COMDAT
; _this$ = ecx

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 10	 add	 eax, 16			; 00000010H
  0000f	89 45 fc	 mov	 DWORD PTR __My_data$2[ebp], eax

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00012	8b 45 fc	 mov	 eax, DWORD PTR __My_data$2[ebp]
  00015	8b 4d fc	 mov	 ecx, DWORD PTR __My_data$2[ebp]
  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	2b 01		 sub	 eax, DWORD PTR [ecx]
  0001d	99		 cdq
  0001e	6a 2e		 push	 46			; 0000002eH
  00020	59		 pop	 ecx
  00021	f7 f9		 idiv	 ecx
  00023	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 144  : 	return m_MallItemInstanceVector.size();

  00026	8b 45 f4	 mov	 eax, DWORD PTR $T1[ebp]

; 145  : }

  00029	c9		 leave
  0002a	c3		 ret	 0
?GetMallSize@CPythonSafeBox@@QAEKXZ ENDP		; CPythonSafeBox::GetMallSize
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?GetSlotMallItemID@CPythonSafeBox@@QAEHKPAK@Z
_TEXT	SEGMENT
$T1 = -20						; size = 4
__My_data$2 = -16					; size = 4
$T3 = -12						; size = 4
_this$ = -8						; size = 4
__My_data$4 = -4					; size = 4
_dwSlotIndex$ = 8					; size = 4
_pdwItemID$ = 12					; size = 4
?GetSlotMallItemID@CPythonSafeBox@@QAEHKPAK@Z PROC	; CPythonSafeBox::GetSlotMallItemID, COMDAT
; _this$ = ecx

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 10	 add	 eax, 16			; 00000010H
  0000f	89 45 fc	 mov	 DWORD PTR __My_data$4[ebp], eax

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00012	8b 45 fc	 mov	 eax, DWORD PTR __My_data$4[ebp]
  00015	8b 4d fc	 mov	 ecx, DWORD PTR __My_data$4[ebp]
  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	2b 01		 sub	 eax, DWORD PTR [ecx]
  0001d	99		 cdq
  0001e	6a 2e		 push	 46			; 0000002eH
  00020	59		 pop	 ecx
  00021	f7 f9		 idiv	 ecx
  00023	89 45 f4	 mov	 DWORD PTR $T3[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 131  : 	if (dwSlotIndex >= m_MallItemInstanceVector.size())

  00026	8b 45 08	 mov	 eax, DWORD PTR _dwSlotIndex$[ebp]
  00029	3b 45 f4	 cmp	 eax, DWORD PTR $T3[ebp]
  0002c	72 13		 jb	 SHORT $LN2@GetSlotMal

; 132  : 	{
; 133  : 		TraceError("CPythonSafeBox::GetMallSlotItemID(dwSlotIndex=%d) - Strange slot index", dwSlotIndex);

  0002e	ff 75 08	 push	 DWORD PTR _dwSlotIndex$[ebp]
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@BNEMANLE@CPythonSafeBox?3?3GetMallSlotItem@
  00036	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0003b	59		 pop	 ecx
  0003c	59		 pop	 ecx

; 134  : 		return FALSE;

  0003d	33 c0		 xor	 eax, eax
  0003f	eb 22		 jmp	 SHORT $LN1@GetSlotMal
$LN2@GetSlotMal:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1498 :         auto& _My_data = _Mypair._Myval2;

  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 c0 10	 add	 eax, 16			; 00000010H
  00047	89 45 f0	 mov	 DWORD PTR __My_data$2[ebp], eax

; 1499 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1500 :         _STL_VERIFY(
; 1501 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1502 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1503 : 
; 1504 :         return _My_data._Myfirst[_Pos];

  0004a	6b 45 08 2e	 imul	 eax, DWORD PTR _dwSlotIndex$[ebp], 46
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR __My_data$2[ebp]
  00051	03 01		 add	 eax, DWORD PTR [ecx]
  00053	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 137  : 	*pdwItemID = m_MallItemInstanceVector[dwSlotIndex].vnum;

  00056	8b 45 0c	 mov	 eax, DWORD PTR _pdwItemID$[ebp]
  00059	8b 4d ec	 mov	 ecx, DWORD PTR $T1[ebp]
  0005c	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0005e	89 08		 mov	 DWORD PTR [eax], ecx

; 138  : 
; 139  : 	return TRUE;

  00060	33 c0		 xor	 eax, eax
  00062	40		 inc	 eax
$LN1@GetSlotMal:

; 140  : }

  00063	c9		 leave
  00064	c2 08 00	 ret	 8
?GetSlotMallItemID@CPythonSafeBox@@QAEHKPAK@Z ENDP	; CPythonSafeBox::GetSlotMallItemID
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?GetMallItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z
_TEXT	SEGMENT
$T1 = -20						; size = 4
__My_data$2 = -16					; size = 4
$T3 = -12						; size = 4
_this$ = -8						; size = 4
__My_data$4 = -4					; size = 4
_dwSlotIndex$ = 8					; size = 4
_ppInstance$ = 12					; size = 4
?GetMallItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z PROC ; CPythonSafeBox::GetMallItemDataPtr, COMDAT
; _this$ = ecx

; 117  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 10	 add	 eax, 16			; 00000010H
  0000f	89 45 fc	 mov	 DWORD PTR __My_data$4[ebp], eax

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00012	8b 45 fc	 mov	 eax, DWORD PTR __My_data$4[ebp]
  00015	8b 4d fc	 mov	 ecx, DWORD PTR __My_data$4[ebp]
  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	2b 01		 sub	 eax, DWORD PTR [ecx]
  0001d	99		 cdq
  0001e	6a 2e		 push	 46			; 0000002eH
  00020	59		 pop	 ecx
  00021	f7 f9		 idiv	 ecx
  00023	89 45 f4	 mov	 DWORD PTR $T3[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 118  : 	if (dwSlotIndex >= m_MallItemInstanceVector.size())

  00026	8b 45 08	 mov	 eax, DWORD PTR _dwSlotIndex$[ebp]
  00029	3b 45 f4	 cmp	 eax, DWORD PTR $T3[ebp]
  0002c	72 13		 jb	 SHORT $LN2@GetMallIte

; 119  : 	{
; 120  : 		TraceError("CPythonSafeBox::GetMallSlotItemID(dwSlotIndex=%d) - Strange slot index", dwSlotIndex);

  0002e	ff 75 08	 push	 DWORD PTR _dwSlotIndex$[ebp]
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@BNEMANLE@CPythonSafeBox?3?3GetMallSlotItem@
  00036	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0003b	59		 pop	 ecx
  0003c	59		 pop	 ecx

; 121  : 		return FALSE;

  0003d	33 c0		 xor	 eax, eax
  0003f	eb 20		 jmp	 SHORT $LN1@GetMallIte
$LN2@GetMallIte:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1498 :         auto& _My_data = _Mypair._Myval2;

  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 c0 10	 add	 eax, 16			; 00000010H
  00047	89 45 f0	 mov	 DWORD PTR __My_data$2[ebp], eax

; 1499 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1500 :         _STL_VERIFY(
; 1501 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1502 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1503 : 
; 1504 :         return _My_data._Myfirst[_Pos];

  0004a	6b 45 08 2e	 imul	 eax, DWORD PTR _dwSlotIndex$[ebp], 46
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR __My_data$2[ebp]
  00051	03 01		 add	 eax, DWORD PTR [ecx]
  00053	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 124  : 	*ppInstance = &m_MallItemInstanceVector[dwSlotIndex];

  00056	8b 45 0c	 mov	 eax, DWORD PTR _ppInstance$[ebp]
  00059	8b 4d ec	 mov	 ecx, DWORD PTR $T1[ebp]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 125  : 
; 126  : 	return TRUE;

  0005e	33 c0		 xor	 eax, eax
  00060	40		 inc	 eax
$LN1@GetMallIte:

; 127  : }

  00061	c9		 leave
  00062	c2 08 00	 ret	 8
?GetMallItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ENDP ; CPythonSafeBox::GetMallItemDataPtr
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?DelMallItemData@CPythonSafeBox@@QAEXK@Z
_TEXT	SEGMENT
_rInstance$ = -20					; size = 4
__My_data$1 = -16					; size = 4
$T2 = -12						; size = 4
_this$ = -8						; size = 4
__My_data$3 = -4					; size = 4
_dwSlotIndex$ = 8					; size = 4
?DelMallItemData@CPythonSafeBox@@QAEXK@Z PROC		; CPythonSafeBox::DelMallItemData, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 10	 add	 eax, 16			; 00000010H
  0000f	89 45 fc	 mov	 DWORD PTR __My_data$3[ebp], eax

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00012	8b 45 fc	 mov	 eax, DWORD PTR __My_data$3[ebp]
  00015	8b 4d fc	 mov	 ecx, DWORD PTR __My_data$3[ebp]
  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	2b 01		 sub	 eax, DWORD PTR [ecx]
  0001d	99		 cdq
  0001e	6a 2e		 push	 46			; 0000002eH
  00020	59		 pop	 ecx
  00021	f7 f9		 idiv	 ecx
  00023	89 45 f4	 mov	 DWORD PTR $T2[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 106  : 	if (dwSlotIndex >= m_MallItemInstanceVector.size())

  00026	8b 45 08	 mov	 eax, DWORD PTR _dwSlotIndex$[ebp]
  00029	3b 45 f4	 cmp	 eax, DWORD PTR $T2[ebp]
  0002c	72 11		 jb	 SHORT $LN2@DelMallIte

; 107  : 	{
; 108  : 		TraceError("CPythonSafeBox::DelMallItemData(dwSlotIndex=%d) - Strange slot index", dwSlotIndex);

  0002e	ff 75 08	 push	 DWORD PTR _dwSlotIndex$[ebp]
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@MEFPDFOJ@CPythonSafeBox?3?3DelMallItemData@
  00036	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0003b	59		 pop	 ecx
  0003c	59		 pop	 ecx

; 109  : 		return;

  0003d	eb 24		 jmp	 SHORT $LN1@DelMallIte
$LN2@DelMallIte:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1498 :         auto& _My_data = _Mypair._Myval2;

  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	83 c0 10	 add	 eax, 16			; 00000010H
  00045	89 45 f0	 mov	 DWORD PTR __My_data$1[ebp], eax

; 1499 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1500 :         _STL_VERIFY(
; 1501 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1502 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1503 : 
; 1504 :         return _My_data._Myfirst[_Pos];

  00048	6b 45 08 2e	 imul	 eax, DWORD PTR _dwSlotIndex$[ebp], 46
  0004c	8b 4d f0	 mov	 ecx, DWORD PTR __My_data$1[ebp]
  0004f	03 01		 add	 eax, DWORD PTR [ecx]
  00051	89 45 ec	 mov	 DWORD PTR _rInstance$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 113  : 	ZeroMemory(&rInstance, sizeof(rInstance));

  00054	6a 2e		 push	 46			; 0000002eH
  00056	6a 00		 push	 0
  00058	ff 75 ec	 push	 DWORD PTR _rInstance$[ebp]
  0005b	e8 00 00 00 00	 call	 _memset
  00060	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@DelMallIte:

; 114  : }

  00063	c9		 leave
  00064	c2 04 00	 ret	 4
?DelMallItemData@CPythonSafeBox@@QAEXK@Z ENDP		; CPythonSafeBox::DelMallItemData
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?SetMallItemData@CPythonSafeBox@@QAEXKABUpacket_item@@@Z
_TEXT	SEGMENT
$T1 = -20						; size = 4
__My_data$2 = -16					; size = 4
$T3 = -12						; size = 4
_this$ = -8						; size = 4
__My_data$4 = -4					; size = 4
_dwSlotIndex$ = 8					; size = 4
_rItemData$ = 12					; size = 4
?SetMallItemData@CPythonSafeBox@@QAEXKABUpacket_item@@@Z PROC ; CPythonSafeBox::SetMallItemData, COMDAT
; _this$ = ecx

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  0000b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000e	83 c0 10	 add	 eax, 16			; 00000010H
  00011	89 45 fc	 mov	 DWORD PTR __My_data$4[ebp], eax

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00014	8b 45 fc	 mov	 eax, DWORD PTR __My_data$4[ebp]
  00017	8b 4d fc	 mov	 ecx, DWORD PTR __My_data$4[ebp]
  0001a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001d	2b 01		 sub	 eax, DWORD PTR [ecx]
  0001f	99		 cdq
  00020	6a 2e		 push	 46			; 0000002eH
  00022	59		 pop	 ecx
  00023	f7 f9		 idiv	 ecx
  00025	89 45 f4	 mov	 DWORD PTR $T3[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 95   : 	if (dwSlotIndex >= m_MallItemInstanceVector.size())

  00028	8b 45 08	 mov	 eax, DWORD PTR _dwSlotIndex$[ebp]
  0002b	3b 45 f4	 cmp	 eax, DWORD PTR $T3[ebp]
  0002e	72 11		 jb	 SHORT $LN2@SetMallIte

; 96   : 	{
; 97   : 		TraceError("CPythonSafeBox::SetMallItemData(dwSlotIndex=%d) - Strange slot index", dwSlotIndex);

  00030	ff 75 08	 push	 DWORD PTR _dwSlotIndex$[ebp]
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@BFNMLNFN@CPythonSafeBox?3?3SetMallItemData@
  00038	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0003d	59		 pop	 ecx
  0003e	59		 pop	 ecx

; 98   : 		return;

  0003f	eb 22		 jmp	 SHORT $LN1@SetMallIte
$LN2@SetMallIte:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1498 :         auto& _My_data = _Mypair._Myval2;

  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 c0 10	 add	 eax, 16			; 00000010H
  00047	89 45 f0	 mov	 DWORD PTR __My_data$2[ebp], eax

; 1499 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1500 :         _STL_VERIFY(
; 1501 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1502 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1503 : 
; 1504 :         return _My_data._Myfirst[_Pos];

  0004a	6b 45 08 2e	 imul	 eax, DWORD PTR _dwSlotIndex$[ebp], 46
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR __My_data$2[ebp]
  00051	03 01		 add	 eax, DWORD PTR [ecx]
  00053	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 101  : 	m_MallItemInstanceVector[dwSlotIndex] = rItemData;

  00056	6a 0b		 push	 11			; 0000000bH
  00058	59		 pop	 ecx
  00059	8b 75 0c	 mov	 esi, DWORD PTR _rItemData$[ebp]
  0005c	8b 7d ec	 mov	 edi, DWORD PTR $T1[ebp]
  0005f	f3 a5		 rep movsd
  00061	66 a5		 movsw
$LN1@SetMallIte:

; 102  : }

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	c9		 leave
  00066	c2 08 00	 ret	 8
?SetMallItemData@CPythonSafeBox@@QAEXKABUpacket_item@@@Z ENDP ; CPythonSafeBox::SetMallItemData
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?OpenMall@CPythonSafeBox@@QAEXH@Z
_TEXT	SEGMENT
_rInstance$1 = -28					; size = 4
__My_data$2 = -24					; size = 4
$T3 = -20						; size = 4
__My_data$4 = -16					; size = 4
_i$5 = -12						; size = 4
_this$ = -8						; size = 4
$T6 = -1						; size = 1
_iSize$ = 8						; size = 4
?OpenMall@CPythonSafeBox@@QAEXH@Z PROC			; CPythonSafeBox::OpenMall, COMDAT
; _this$ = ecx

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 83   : 	m_MallItemInstanceVector.clear();

  00009	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	83 c1 10	 add	 ecx, 16			; 00000010H
  0000f	e8 00 00 00 00	 call	 ?clear@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@QAEXXZ ; std::vector<packet_item,std::allocator<packet_item> >::clear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1242 :         _Resize(_Newsize, _Value_init_tag{});

  00014	8d 45 ff	 lea	 eax, DWORD PTR $T6[ebp]
  00017	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 84   : 	m_MallItemInstanceVector.resize(SAFEBOX_SLOT_X_COUNT * iSize);

  00018	6b 45 08 05	 imul	 eax, DWORD PTR _iSize$[ebp], 5
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1242 :         _Resize(_Newsize, _Value_init_tag{});

  0001c	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 84   : 	m_MallItemInstanceVector.resize(SAFEBOX_SLOT_X_COUNT * iSize);

  0001d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	83 c1 10	 add	 ecx, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1242 :         _Resize(_Newsize, _Value_init_tag{});

  00023	e8 00 00 00 00	 call	 ??$_Resize@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<packet_item,std::allocator<packet_item> >::_Resize<std::_Value_init_tag>
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 86   : 	for (DWORD i = 0; i < m_MallItemInstanceVector.size(); ++i)

  00028	83 65 f4 00	 and	 DWORD PTR _i$5[ebp], 0
  0002c	eb 07		 jmp	 SHORT $LN4@OpenMall
$LN2@OpenMall:
  0002e	8b 45 f4	 mov	 eax, DWORD PTR _i$5[ebp]
  00031	40		 inc	 eax
  00032	89 45 f4	 mov	 DWORD PTR _i$5[ebp], eax
$LN4@OpenMall:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	83 c0 10	 add	 eax, 16			; 00000010H
  0003b	89 45 f0	 mov	 DWORD PTR __My_data$4[ebp], eax

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  0003e	8b 45 f0	 mov	 eax, DWORD PTR __My_data$4[ebp]
  00041	8b 4d f0	 mov	 ecx, DWORD PTR __My_data$4[ebp]
  00044	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00047	2b 01		 sub	 eax, DWORD PTR [ecx]
  00049	99		 cdq
  0004a	6a 2e		 push	 46			; 0000002eH
  0004c	59		 pop	 ecx
  0004d	f7 f9		 idiv	 ecx
  0004f	89 45 ec	 mov	 DWORD PTR $T3[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 86   : 	for (DWORD i = 0; i < m_MallItemInstanceVector.size(); ++i)

  00052	8b 45 f4	 mov	 eax, DWORD PTR _i$5[ebp]
  00055	3b 45 ec	 cmp	 eax, DWORD PTR $T3[ebp]
  00058	73 26		 jae	 SHORT $LN1@OpenMall
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1498 :         auto& _My_data = _Mypair._Myval2;

  0005a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005d	83 c0 10	 add	 eax, 16			; 00000010H
  00060	89 45 e8	 mov	 DWORD PTR __My_data$2[ebp], eax

; 1499 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1500 :         _STL_VERIFY(
; 1501 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1502 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1503 : 
; 1504 :         return _My_data._Myfirst[_Pos];

  00063	6b 45 f4 2e	 imul	 eax, DWORD PTR _i$5[ebp], 46
  00067	8b 4d e8	 mov	 ecx, DWORD PTR __My_data$2[ebp]
  0006a	03 01		 add	 eax, DWORD PTR [ecx]
  0006c	89 45 e4	 mov	 DWORD PTR _rInstance$1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 89   : 		ZeroMemory(&rInstance, sizeof(rInstance));

  0006f	6a 2e		 push	 46			; 0000002eH
  00071	6a 00		 push	 0
  00073	ff 75 e4	 push	 DWORD PTR _rInstance$1[ebp]
  00076	e8 00 00 00 00	 call	 _memset
  0007b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 90   : 	}

  0007e	eb ae		 jmp	 SHORT $LN2@OpenMall
$LN1@OpenMall:

; 91   : }

  00080	c9		 leave
  00081	c2 04 00	 ret	 4
?OpenMall@CPythonSafeBox@@QAEXH@Z ENDP			; CPythonSafeBox::OpenMall
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?GetItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z
_TEXT	SEGMENT
$T1 = -20						; size = 4
__My_data$2 = -16					; size = 4
$T3 = -12						; size = 4
_this$ = -8						; size = 4
__My_data$4 = -4					; size = 4
_dwSlotIndex$ = 8					; size = 4
_ppInstance$ = 12					; size = 4
?GetItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z PROC ; CPythonSafeBox::GetItemDataPtr, COMDAT
; _this$ = ecx

; 69   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	89 45 fc	 mov	 DWORD PTR __My_data$4[ebp], eax

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00012	8b 45 fc	 mov	 eax, DWORD PTR __My_data$4[ebp]
  00015	8b 4d fc	 mov	 ecx, DWORD PTR __My_data$4[ebp]
  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	2b 01		 sub	 eax, DWORD PTR [ecx]
  0001d	99		 cdq
  0001e	6a 2e		 push	 46			; 0000002eH
  00020	59		 pop	 ecx
  00021	f7 f9		 idiv	 ecx
  00023	89 45 f4	 mov	 DWORD PTR $T3[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 70   : 	if (dwSlotIndex >= m_ItemInstanceVector.size())

  00026	8b 45 08	 mov	 eax, DWORD PTR _dwSlotIndex$[ebp]
  00029	3b 45 f4	 cmp	 eax, DWORD PTR $T3[ebp]
  0002c	72 13		 jb	 SHORT $LN2@GetItemDat

; 71   : 	{
; 72   : 		TraceError("CPythonSafeBox::GetItemData(dwSlotIndex=%d) - Strange slot index", dwSlotIndex);

  0002e	ff 75 08	 push	 DWORD PTR _dwSlotIndex$[ebp]
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@BNCIHACH@CPythonSafeBox?3?3GetItemData?$CIdwS@
  00036	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0003b	59		 pop	 ecx
  0003c	59		 pop	 ecx

; 73   : 		return FALSE;

  0003d	33 c0		 xor	 eax, eax
  0003f	eb 20		 jmp	 SHORT $LN1@GetItemDat
$LN2@GetItemDat:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1498 :         auto& _My_data = _Mypair._Myval2;

  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 c0 04	 add	 eax, 4
  00047	89 45 f0	 mov	 DWORD PTR __My_data$2[ebp], eax

; 1499 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1500 :         _STL_VERIFY(
; 1501 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1502 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1503 : 
; 1504 :         return _My_data._Myfirst[_Pos];

  0004a	6b 45 08 2e	 imul	 eax, DWORD PTR _dwSlotIndex$[ebp], 46
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR __My_data$2[ebp]
  00051	03 01		 add	 eax, DWORD PTR [ecx]
  00053	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 76   : 	*ppInstance = &m_ItemInstanceVector[dwSlotIndex];

  00056	8b 45 0c	 mov	 eax, DWORD PTR _ppInstance$[ebp]
  00059	8b 4d ec	 mov	 ecx, DWORD PTR $T1[ebp]
  0005c	89 08		 mov	 DWORD PTR [eax], ecx

; 77   : 
; 78   : 	return TRUE;

  0005e	33 c0		 xor	 eax, eax
  00060	40		 inc	 eax
$LN1@GetItemDat:

; 79   : }

  00061	c9		 leave
  00062	c2 08 00	 ret	 8
?GetItemDataPtr@CPythonSafeBox@@QAEHKPAPAUpacket_item@@@Z ENDP ; CPythonSafeBox::GetItemDataPtr
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?GetCurrentSafeBoxSize@CPythonSafeBox@@QAEHXZ
_TEXT	SEGMENT
$T1 = -12						; size = 4
_this$ = -8						; size = 4
__My_data$2 = -4					; size = 4
?GetCurrentSafeBoxSize@CPythonSafeBox@@QAEHXZ PROC	; CPythonSafeBox::GetCurrentSafeBoxSize, COMDAT
; _this$ = ecx

; 51   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	89 45 fc	 mov	 DWORD PTR __My_data$2[ebp], eax

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00012	8b 45 fc	 mov	 eax, DWORD PTR __My_data$2[ebp]
  00015	8b 4d fc	 mov	 ecx, DWORD PTR __My_data$2[ebp]
  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	2b 01		 sub	 eax, DWORD PTR [ecx]
  0001d	99		 cdq
  0001e	6a 2e		 push	 46			; 0000002eH
  00020	59		 pop	 ecx
  00021	f7 f9		 idiv	 ecx
  00023	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 52   : 	return m_ItemInstanceVector.size();

  00026	8b 45 f4	 mov	 eax, DWORD PTR $T1[ebp]

; 53   : }

  00029	c9		 leave
  0002a	c3		 ret	 0
?GetCurrentSafeBoxSize@CPythonSafeBox@@QAEHXZ ENDP	; CPythonSafeBox::GetCurrentSafeBoxSize
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?GetSlotItemID@CPythonSafeBox@@QAEHKPAK@Z
_TEXT	SEGMENT
$T1 = -20						; size = 4
__My_data$2 = -16					; size = 4
$T3 = -12						; size = 4
_this$ = -8						; size = 4
__My_data$4 = -4					; size = 4
_dwSlotIndex$ = 8					; size = 4
_pdwItemID$ = 12					; size = 4
?GetSlotItemID@CPythonSafeBox@@QAEHKPAK@Z PROC		; CPythonSafeBox::GetSlotItemID, COMDAT
; _this$ = ecx

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	89 45 fc	 mov	 DWORD PTR __My_data$4[ebp], eax

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00012	8b 45 fc	 mov	 eax, DWORD PTR __My_data$4[ebp]
  00015	8b 4d fc	 mov	 ecx, DWORD PTR __My_data$4[ebp]
  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	2b 01		 sub	 eax, DWORD PTR [ecx]
  0001d	99		 cdq
  0001e	6a 2e		 push	 46			; 0000002eH
  00020	59		 pop	 ecx
  00021	f7 f9		 idiv	 ecx
  00023	89 45 f4	 mov	 DWORD PTR $T3[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 57   : 	if (dwSlotIndex >= m_ItemInstanceVector.size())

  00026	8b 45 08	 mov	 eax, DWORD PTR _dwSlotIndex$[ebp]
  00029	3b 45 f4	 cmp	 eax, DWORD PTR $T3[ebp]
  0002c	72 13		 jb	 SHORT $LN2@GetSlotIte

; 58   : 	{
; 59   : 		TraceError("CPythonSafeBox::GetSlotItemID(dwSlotIndex=%d) - Strange slot index", dwSlotIndex);

  0002e	ff 75 08	 push	 DWORD PTR _dwSlotIndex$[ebp]
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@OIOPNNLC@CPythonSafeBox?3?3GetSlotItemID?$CId@
  00036	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0003b	59		 pop	 ecx
  0003c	59		 pop	 ecx

; 60   : 		return FALSE;

  0003d	33 c0		 xor	 eax, eax
  0003f	eb 22		 jmp	 SHORT $LN1@GetSlotIte
$LN2@GetSlotIte:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1498 :         auto& _My_data = _Mypair._Myval2;

  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 c0 04	 add	 eax, 4
  00047	89 45 f0	 mov	 DWORD PTR __My_data$2[ebp], eax

; 1499 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1500 :         _STL_VERIFY(
; 1501 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1502 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1503 : 
; 1504 :         return _My_data._Myfirst[_Pos];

  0004a	6b 45 08 2e	 imul	 eax, DWORD PTR _dwSlotIndex$[ebp], 46
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR __My_data$2[ebp]
  00051	03 01		 add	 eax, DWORD PTR [ecx]
  00053	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 63   : 	*pdwItemID=m_ItemInstanceVector[dwSlotIndex].vnum;

  00056	8b 45 0c	 mov	 eax, DWORD PTR _pdwItemID$[ebp]
  00059	8b 4d ec	 mov	 ecx, DWORD PTR $T1[ebp]
  0005c	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0005e	89 08		 mov	 DWORD PTR [eax], ecx

; 64   : 
; 65   : 	return TRUE;

  00060	33 c0		 xor	 eax, eax
  00062	40		 inc	 eax
$LN1@GetSlotIte:

; 66   : }

  00063	c9		 leave
  00064	c2 08 00	 ret	 8
?GetSlotItemID@CPythonSafeBox@@QAEHKPAK@Z ENDP		; CPythonSafeBox::GetSlotItemID
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?GetMoney@CPythonSafeBox@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMoney@CPythonSafeBox@@QAEKXZ PROC			; CPythonSafeBox::GetMoney, COMDAT
; _this$ = ecx

; 46   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 47   : 	return m_dwMoney;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]

; 48   : }

  0000d	c9		 leave
  0000e	c3		 ret	 0
?GetMoney@CPythonSafeBox@@QAEKXZ ENDP			; CPythonSafeBox::GetMoney
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?SetMoney@CPythonSafeBox@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwMoney$ = 8						; size = 4
?SetMoney@CPythonSafeBox@@QAEXK@Z PROC			; CPythonSafeBox::SetMoney, COMDAT
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 42   : 	m_dwMoney = dwMoney;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _dwMoney$[ebp]
  0000d	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 43   : }

  00010	c9		 leave
  00011	c2 04 00	 ret	 4
?SetMoney@CPythonSafeBox@@QAEXK@Z ENDP			; CPythonSafeBox::SetMoney
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?DelItemData@CPythonSafeBox@@QAEXK@Z
_TEXT	SEGMENT
_rInstance$ = -20					; size = 4
__My_data$1 = -16					; size = 4
$T2 = -12						; size = 4
_this$ = -8						; size = 4
__My_data$3 = -4					; size = 4
_dwSlotIndex$ = 8					; size = 4
?DelItemData@CPythonSafeBox@@QAEXK@Z PROC		; CPythonSafeBox::DelItemData, COMDAT
; _this$ = ecx

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	89 45 fc	 mov	 DWORD PTR __My_data$3[ebp], eax

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00012	8b 45 fc	 mov	 eax, DWORD PTR __My_data$3[ebp]
  00015	8b 4d fc	 mov	 ecx, DWORD PTR __My_data$3[ebp]
  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	2b 01		 sub	 eax, DWORD PTR [ecx]
  0001d	99		 cdq
  0001e	6a 2e		 push	 46			; 0000002eH
  00020	59		 pop	 ecx
  00021	f7 f9		 idiv	 ecx
  00023	89 45 f4	 mov	 DWORD PTR $T2[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 30   : 	if (dwSlotIndex >= m_ItemInstanceVector.size())

  00026	8b 45 08	 mov	 eax, DWORD PTR _dwSlotIndex$[ebp]
  00029	3b 45 f4	 cmp	 eax, DWORD PTR $T2[ebp]
  0002c	72 11		 jb	 SHORT $LN2@DelItemDat

; 31   : 	{
; 32   : 		TraceError("CPythonSafeBox::DelItemData(dwSlotIndex=%d) - Strange slot index", dwSlotIndex);

  0002e	ff 75 08	 push	 DWORD PTR _dwSlotIndex$[ebp]
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@ILLOPJOM@CPythonSafeBox?3?3DelItemData?$CIdwS@
  00036	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0003b	59		 pop	 ecx
  0003c	59		 pop	 ecx

; 33   : 		return;

  0003d	eb 24		 jmp	 SHORT $LN1@DelItemDat
$LN2@DelItemDat:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1498 :         auto& _My_data = _Mypair._Myval2;

  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	83 c0 04	 add	 eax, 4
  00045	89 45 f0	 mov	 DWORD PTR __My_data$1[ebp], eax

; 1499 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1500 :         _STL_VERIFY(
; 1501 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1502 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1503 : 
; 1504 :         return _My_data._Myfirst[_Pos];

  00048	6b 45 08 2e	 imul	 eax, DWORD PTR _dwSlotIndex$[ebp], 46
  0004c	8b 4d f0	 mov	 ecx, DWORD PTR __My_data$1[ebp]
  0004f	03 01		 add	 eax, DWORD PTR [ecx]
  00051	89 45 ec	 mov	 DWORD PTR _rInstance$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 37   : 	ZeroMemory(&rInstance, sizeof(rInstance));

  00054	6a 2e		 push	 46			; 0000002eH
  00056	6a 00		 push	 0
  00058	ff 75 ec	 push	 DWORD PTR _rInstance$[ebp]
  0005b	e8 00 00 00 00	 call	 _memset
  00060	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@DelItemDat:

; 38   : }

  00063	c9		 leave
  00064	c2 04 00	 ret	 4
?DelItemData@CPythonSafeBox@@QAEXK@Z ENDP		; CPythonSafeBox::DelItemData
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?SetItemData@CPythonSafeBox@@QAEXKABUpacket_item@@@Z
_TEXT	SEGMENT
$T1 = -20						; size = 4
__My_data$2 = -16					; size = 4
$T3 = -12						; size = 4
_this$ = -8						; size = 4
__My_data$4 = -4					; size = 4
_dwSlotIndex$ = 8					; size = 4
_rItemInstance$ = 12					; size = 4
?SetItemData@CPythonSafeBox@@QAEXKABUpacket_item@@@Z PROC ; CPythonSafeBox::SetItemData, COMDAT
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  0000b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000e	83 c0 04	 add	 eax, 4
  00011	89 45 fc	 mov	 DWORD PTR __My_data$4[ebp], eax

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00014	8b 45 fc	 mov	 eax, DWORD PTR __My_data$4[ebp]
  00017	8b 4d fc	 mov	 ecx, DWORD PTR __My_data$4[ebp]
  0001a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001d	2b 01		 sub	 eax, DWORD PTR [ecx]
  0001f	99		 cdq
  00020	6a 2e		 push	 46			; 0000002eH
  00022	59		 pop	 ecx
  00023	f7 f9		 idiv	 ecx
  00025	89 45 f4	 mov	 DWORD PTR $T3[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 19   : 	if (dwSlotIndex >= m_ItemInstanceVector.size())

  00028	8b 45 08	 mov	 eax, DWORD PTR _dwSlotIndex$[ebp]
  0002b	3b 45 f4	 cmp	 eax, DWORD PTR $T3[ebp]
  0002e	72 11		 jb	 SHORT $LN2@SetItemDat

; 20   : 	{
; 21   : 		TraceError("CPythonSafeBox::SetItemData(dwSlotIndex=%d) - Strange slot index", dwSlotIndex);

  00030	ff 75 08	 push	 DWORD PTR _dwSlotIndex$[ebp]
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@NFGEBKNF@CPythonSafeBox?3?3SetItemData?$CIdwS@
  00038	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0003d	59		 pop	 ecx
  0003e	59		 pop	 ecx

; 22   : 		return;

  0003f	eb 22		 jmp	 SHORT $LN1@SetItemDat
$LN2@SetItemDat:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1498 :         auto& _My_data = _Mypair._Myval2;

  00041	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00044	83 c0 04	 add	 eax, 4
  00047	89 45 f0	 mov	 DWORD PTR __My_data$2[ebp], eax

; 1499 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1500 :         _STL_VERIFY(
; 1501 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1502 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1503 : 
; 1504 :         return _My_data._Myfirst[_Pos];

  0004a	6b 45 08 2e	 imul	 eax, DWORD PTR _dwSlotIndex$[ebp], 46
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR __My_data$2[ebp]
  00051	03 01		 add	 eax, DWORD PTR [ecx]
  00053	89 45 ec	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 25   : 	m_ItemInstanceVector[dwSlotIndex] = rItemInstance;

  00056	6a 0b		 push	 11			; 0000000bH
  00058	59		 pop	 ecx
  00059	8b 75 0c	 mov	 esi, DWORD PTR _rItemInstance$[ebp]
  0005c	8b 7d ec	 mov	 edi, DWORD PTR $T1[ebp]
  0005f	f3 a5		 rep movsd
  00061	66 a5		 movsw
$LN1@SetItemDat:

; 26   : }

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	c9		 leave
  00066	c2 08 00	 ret	 8
?SetItemData@CPythonSafeBox@@QAEXKABUpacket_item@@@Z ENDP ; CPythonSafeBox::SetItemData
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?OpenSafeBox@CPythonSafeBox@@QAEXH@Z
_TEXT	SEGMENT
_rInstance$1 = -28					; size = 4
__My_data$2 = -24					; size = 4
$T3 = -20						; size = 4
__My_data$4 = -16					; size = 4
_i$5 = -12						; size = 4
_this$ = -8						; size = 4
$T6 = -1						; size = 1
_iSize$ = 8						; size = 4
?OpenSafeBox@CPythonSafeBox@@QAEXH@Z PROC		; CPythonSafeBox::OpenSafeBox, COMDAT
; _this$ = ecx

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 6    : 	m_dwMoney = 0;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 60 1c 00	 and	 DWORD PTR [eax+28], 0

; 7    : 	m_ItemInstanceVector.clear();

  00010	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 04	 add	 ecx, 4
  00016	e8 00 00 00 00	 call	 ?clear@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@QAEXXZ ; std::vector<packet_item,std::allocator<packet_item> >::clear
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1242 :         _Resize(_Newsize, _Value_init_tag{});

  0001b	8d 45 ff	 lea	 eax, DWORD PTR $T6[ebp]
  0001e	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 8    : 	m_ItemInstanceVector.resize(SAFEBOX_SLOT_X_COUNT * iSize);

  0001f	6b 45 08 05	 imul	 eax, DWORD PTR _iSize$[ebp], 5
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1242 :         _Resize(_Newsize, _Value_init_tag{});

  00023	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 8    : 	m_ItemInstanceVector.resize(SAFEBOX_SLOT_X_COUNT * iSize);

  00024	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	83 c1 04	 add	 ecx, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1242 :         _Resize(_Newsize, _Value_init_tag{});

  0002a	e8 00 00 00 00	 call	 ??$_Resize@U_Value_init_tag@std@@@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<packet_item,std::allocator<packet_item> >::_Resize<std::_Value_init_tag>
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 10   : 	for (DWORD i = 0; i < m_ItemInstanceVector.size(); ++i)

  0002f	83 65 f4 00	 and	 DWORD PTR _i$5[ebp], 0
  00033	eb 07		 jmp	 SHORT $LN4@OpenSafeBo
$LN2@OpenSafeBo:
  00035	8b 45 f4	 mov	 eax, DWORD PTR _i$5[ebp]
  00038	40		 inc	 eax
  00039	89 45 f4	 mov	 DWORD PTR _i$5[ebp], eax
$LN4@OpenSafeBo:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1483 :         auto& _My_data = _Mypair._Myval2;

  0003c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	83 c0 04	 add	 eax, 4
  00042	89 45 f0	 mov	 DWORD PTR __My_data$4[ebp], eax

; 1484 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00045	8b 45 f0	 mov	 eax, DWORD PTR __My_data$4[ebp]
  00048	8b 4d f0	 mov	 ecx, DWORD PTR __My_data$4[ebp]
  0004b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004e	2b 01		 sub	 eax, DWORD PTR [ecx]
  00050	99		 cdq
  00051	6a 2e		 push	 46			; 0000002eH
  00053	59		 pop	 ecx
  00054	f7 f9		 idiv	 ecx
  00056	89 45 ec	 mov	 DWORD PTR $T3[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 10   : 	for (DWORD i = 0; i < m_ItemInstanceVector.size(); ++i)

  00059	8b 45 f4	 mov	 eax, DWORD PTR _i$5[ebp]
  0005c	3b 45 ec	 cmp	 eax, DWORD PTR $T3[ebp]
  0005f	73 26		 jae	 SHORT $LN1@OpenSafeBo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1498 :         auto& _My_data = _Mypair._Myval2;

  00061	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00064	83 c0 04	 add	 eax, 4
  00067	89 45 e8	 mov	 DWORD PTR __My_data$2[ebp], eax

; 1499 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1500 :         _STL_VERIFY(
; 1501 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1502 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1503 : 
; 1504 :         return _My_data._Myfirst[_Pos];

  0006a	6b 45 f4 2e	 imul	 eax, DWORD PTR _i$5[ebp], 46
  0006e	8b 4d e8	 mov	 ecx, DWORD PTR __My_data$2[ebp]
  00071	03 01		 add	 eax, DWORD PTR [ecx]
  00073	89 45 e4	 mov	 DWORD PTR _rInstance$1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 13   : 		ZeroMemory(&rInstance, sizeof(rInstance));

  00076	6a 2e		 push	 46			; 0000002eH
  00078	6a 00		 push	 0
  0007a	ff 75 e4	 push	 DWORD PTR _rInstance$1[ebp]
  0007d	e8 00 00 00 00	 call	 _memset
  00082	83 c4 0c	 add	 esp, 12			; 0000000cH

; 14   : 	}

  00085	eb ae		 jmp	 SHORT $LN2@OpenSafeBo
$LN1@OpenSafeBo:

; 15   : }

  00087	c9		 leave
  00088	c2 04 00	 ret	 4
?OpenSafeBox@CPythonSafeBox@@QAEXH@Z ENDP		; CPythonSafeBox::OpenSafeBox
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ??1CPythonSafeBox@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CPythonSafeBox@@UAE@XZ PROC				; CPythonSafeBox::~CPythonSafeBox, COMDAT
; _this$ = ecx

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CPythonSafeBox@@6B@

; 154  : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 10	 add	 ecx, 16			; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 673  :         _Tidy();

  00016	e8 00 00 00 00	 call	 ?_Tidy@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXXZ ; std::vector<packet_item,std::allocator<packet_item> >::_Tidy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 154  : }

  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	83 c1 04	 add	 ecx, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 673  :         _Tidy();

  00021	e8 00 00 00 00	 call	 ?_Tidy@?$vector@Upacket_item@@V?$allocator@Upacket_item@@@std@@@std@@AAEXXZ ; std::vector<packet_item,std::allocator<packet_item> >::_Tidy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 19   : 	{ 

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CSingleton@VCPythonSafeBox@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0; 

  0002f	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A, 0 ; CSingleton<CPythonSafeBox>::ms_singleton
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 154  : }

  00036	c9		 leave
  00037	c3		 ret	 0
??1CPythonSafeBox@@UAE@XZ ENDP				; CPythonSafeBox::~CPythonSafeBox
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ??0CPythonSafeBox@@QAE@XZ
_TEXT	SEGMENT
_this$ = -32						; size = 4
_this$ = -28						; size = 4
_this$ = -24						; size = 4
_this$ = -20						; size = 4
_offset$1 = -16						; size = 4
_this$2 = -12						; size = 4
_this$3 = -8						; size = 4
_this$ = -4						; size = 4
??0CPythonSafeBox@@QAE@XZ PROC				; CPythonSafeBox::CPythonSafeBox, COMDAT
; _this$ = ecx

; 148  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 12   : 	{ 

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CSingleton@VCPythonSafeBox@@@@6B@

; 13   : 		assert(!ms_singleton);
; 14   : 		int offset = (int) (T*) 1 - (int) (CSingleton <T>*) (T*) 1; 

  00012	33 c0		 xor	 eax, eax
  00014	89 45 f0	 mov	 DWORD PTR _offset$1[ebp], eax

; 15   : 		ms_singleton = (T*) ((int) this + offset);

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	03 45 f0	 add	 eax, DWORD PTR _offset$1[ebp]
  0001d	a3 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A, eax ; CSingleton<CPythonSafeBox>::ms_singleton
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 148  : {

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CPythonSafeBox@@6B@
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	83 c0 04	 add	 eax, 4
  00031	89 45 ec	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 445  :     vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

  00034	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00037	89 45 e8	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  0003a	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	89 45 f8	 mov	 DWORD PTR _this$3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00040	8b 45 f8	 mov	 eax, DWORD PTR _this$3[ebp]
  00043	83 20 00	 and	 DWORD PTR [eax], 0
  00046	8b 45 f8	 mov	 eax, DWORD PTR _this$3[ebp]
  00049	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  0004d	8b 45 f8	 mov	 eax, DWORD PTR _this$3[ebp]
  00050	83 60 08 00	 and	 DWORD PTR [eax+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 148  : {

  00054	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00057	83 c0 10	 add	 eax, 16			; 00000010H
  0005a	89 45 e4	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 445  :     vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

  0005d	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00060	89 45 e0	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  00063	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00066	89 45 f4	 mov	 DWORD PTR _this$2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00069	8b 45 f4	 mov	 eax, DWORD PTR _this$2[ebp]
  0006c	83 20 00	 and	 DWORD PTR [eax], 0
  0006f	8b 45 f4	 mov	 eax, DWORD PTR _this$2[ebp]
  00072	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  00076	8b 45 f4	 mov	 eax, DWORD PTR _this$2[ebp]
  00079	83 60 08 00	 and	 DWORD PTR [eax+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp

; 149  : 	m_dwMoney = 0;

  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	83 60 1c 00	 and	 DWORD PTR [eax+28], 0

; 150  : }

  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	c9		 leave
  00088	c3		 ret	 0
??0CPythonSafeBox@@QAE@XZ ENDP				; CPythonSafeBox::CPythonSafeBox
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
;	COMDAT ??_G?$CSingleton@VCPythonSafeBox@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CSingleton@VCPythonSafeBox@@@@UAEPAXI@Z PROC	; CSingleton<CPythonSafeBox>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 19   : 	{ 

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CSingleton@VCPythonSafeBox@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0; 

  00010	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_singleton@?$CSingleton@VCPythonSafeBox@@@@0PAVCPythonSafeBox@@A, 0 ; CSingleton<CPythonSafeBox>::ms_singleton
  00017	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001a	83 e0 01	 and	 eax, 1
  0001d	74 0c		 je	 SHORT $LN2@scalar
  0001f	6a 04		 push	 4
  00021	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	59		 pop	 ecx
  0002a	59		 pop	 ecx
$LN2@scalar:
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c9		 leave
  0002f	c2 04 00	 ret	 4
??_G?$CSingleton@VCPythonSafeBox@@@@UAEPAXI@Z ENDP	; CSingleton<CPythonSafeBox>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Ptr$ = -12						; size = 4
__Block_size$ = -8					; size = 4
__Ptr_container$ = -4					; size = 4
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00006	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00009	83 c0 23	 add	 eax, 35			; 00000023H
  0000c	89 45 f8	 mov	 DWORD PTR __Block_size$[ebp], eax

; 116  :     if (_Block_size <= _Bytes) {

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __Block_size$[ebp]
  00012	3b 45 08	 cmp	 eax, DWORD PTR __Bytes$[ebp]
  00015	77 05		 ja	 SHORT $LN12@Allocate_m

; 117  :         _Throw_bad_array_new_length(); // add overflow

  00017	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN12@Allocate_m:

; 77   :         return ::operator new(_Bytes);

  0001c	ff 75 f8	 push	 DWORD PTR __Block_size$[ebp]
  0001f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00024	59		 pop	 ecx

; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00025	89 45 fc	 mov	 DWORD PTR __Ptr_container$[ebp], eax
$LN4@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00028	83 7d fc 00	 cmp	 DWORD PTR __Ptr_container$[ebp], 0
  0002c	74 02		 je	 SHORT $LN7@Allocate_m
  0002e	eb 09		 jmp	 SHORT $LN2@Allocate_m
$LN7@Allocate_m:
  00030	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
  00035	33 c0		 xor	 eax, eax
  00037	75 f7		 jne	 SHORT $LN7@Allocate_m
$LN2@Allocate_m:
  00039	33 c0		 xor	 eax, eax
  0003b	75 eb		 jne	 SHORT $LN4@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  0003d	8b 45 fc	 mov	 eax, DWORD PTR __Ptr_container$[ebp]
  00040	83 c0 23	 add	 eax, 35			; 00000023H
  00043	83 e0 e0	 and	 eax, -32		; ffffffe0H
  00046	89 45 f4	 mov	 DWORD PTR __Ptr$[ebp], eax

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00049	6a 04		 push	 4
  0004b	58		 pop	 eax
  0004c	6b c0 ff	 imul	 eax, eax, -1
  0004f	8b 4d f4	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00052	8b 55 fc	 mov	 edx, DWORD PTR __Ptr_container$[ebp]
  00055	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;

  00058	8b 45 f4	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN11@Allocate_m:

; 129  : }

  0005b	c9		 leave
  0005c	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	81 7d 08 00 10
	00 00		 cmp	 DWORD PTR __Bytes$[ebp], 4096 ; 00001000H
  0000a	72 0b		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000c	ff 75 08	 push	 DWORD PTR __Bytes$[ebp]
  0000f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00014	59		 pop	 ecx
  00015	eb 13		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00017	83 7d 08 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0001b	74 0b		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001d	ff 75 08	 push	 DWORD PTR __Bytes$[ebp]
  00020	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00025	59		 pop	 ecx

; 206  :         return _Traits::_Allocate(_Bytes);

  00026	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00028	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 210  : }

  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00022	81 7d 0c 00 10
	00 00		 cmp	 DWORD PTR __Bytes$[ebp], 4096 ; 00001000H
  00029	72 0f		 jb	 SHORT $LN2@Deallocate

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0002b	8d 45 0c	 lea	 eax, DWORD PTR __Bytes$[ebp]
  0002e	50		 push	 eax
  0002f	8d 45 08	 lea	 eax, DWORD PTR __Ptr$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
  00038	59		 pop	 ecx
  00039	59		 pop	 ecx
$LN2@Deallocate:

; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  0003a	ff 75 0c	 push	 DWORD PTR __Bytes$[ebp]
  0003d	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00040	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00045	59		 pop	 ecx
  00046	59		 pop	 ecx

; 222  : }

  00047	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00051	59		 pop	 ecx
  00052	c9		 leave
  00053	c3		 ret	 0
  00054	cc		 int	 3
  00055	cc		 int	 3
  00056	cc		 int	 3
  00057	cc		 int	 3
  00058	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonSafeBox.cpp
;	COMDAT ?initsafebox@@YAXXZ
_TEXT	SEGMENT
_poModule$ = -4						; size = 4
?initsafebox@@YAXXZ PROC				; initsafebox, COMDAT

; 313  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 314  : 	static PyMethodDef s_methods[] =
; 315  : 	{
; 316  : 		// SafeBox
; 317  : 		{ "GetCurrentSafeboxSize",		safeboxGetCurrentSafeboxSize,			METH_VARARGS },
; 318  : 		{ "GetItemID",					safeboxGetItemID,						METH_VARARGS },
; 319  : 		{ "GetItemCount",				safeboxGetItemCount,					METH_VARARGS },
; 320  : 		{ "GetItemFlags",				safeboxGetItemFlags,					METH_VARARGS },
; 321  : 		{ "GetItemMetinSocket",			safeboxGetItemMetinSocket,				METH_VARARGS },
; 322  : 		{ "GetItemAttribute",			safeboxGetItemAttribute,				METH_VARARGS },
; 323  : 		{ "GetMoney",					safeboxGetMoney,						METH_VARARGS },
; 324  : 
; 325  : 		// Mall
; 326  : 		{ "GetMallItemID",				safeboxGetMallItemID,					METH_VARARGS },
; 327  : 		{ "GetMallItemCount",			safeboxGetMallItemCount,				METH_VARARGS },
; 328  : 		{ "GetMallItemMetinSocket",		safeboxGetMallItemMetinSocket,			METH_VARARGS },
; 329  : 		{ "GetMallItemAttribute",		safeboxGetMallItemAttribute,			METH_VARARGS },
; 330  : 		{ "GetMallSize",				safeboxGetMallSize,						METH_VARARGS },
; 331  : 		{ NULL,							NULL,									NULL },
; 332  : 	};
; 333  : 
; 334  : 	PyObject * poModule = Py_InitModule("safebox", s_methods);

  00004	68 f5 03 00 00	 push	 1013			; 000003f5H
  00009	6a 00		 push	 0
  0000b	6a 00		 push	 0
  0000d	68 00 00 00 00	 push	 OFFSET ?s_methods@?1??initsafebox@@YAXXZ@4PAUPyMethodDef@@A
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_07CPPOKFKF@safebox@
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_InitModule4
  0001d	83 c4 14	 add	 esp, 20			; 00000014H
  00020	89 45 fc	 mov	 DWORD PTR _poModule$[ebp], eax

; 335  : 	PyModule_AddIntConstant(poModule, "SAFEBOX_SLOT_X_COUNT", CPythonSafeBox::SAFEBOX_SLOT_X_COUNT);

  00023	6a 05		 push	 5
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@DMABFMEE@SAFEBOX_SLOT_X_COUNT@
  0002a	ff 75 fc	 push	 DWORD PTR _poModule$[ebp]
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PyModule_AddIntConstant
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 336  : 	PyModule_AddIntConstant(poModule, "SAFEBOX_SLOT_Y_COUNT", CPythonSafeBox::SAFEBOX_SLOT_Y_COUNT);

  00036	6a 09		 push	 9
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@PAKLFMNK@SAFEBOX_SLOT_Y_COUNT@
  0003d	ff 75 fc	 push	 DWORD PTR _poModule$[ebp]
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PyModule_AddIntConstant
  00046	83 c4 0c	 add	 esp, 12			; 0000000cH

; 337  : 	PyModule_AddIntConstant(poModule, "SAFEBOX_PAGE_SIZE", CPythonSafeBox::SAFEBOX_PAGE_SIZE);

  00049	6a 2d		 push	 45			; 0000002dH
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@JOOAEPKL@SAFEBOX_PAGE_SIZE@
  00050	ff 75 fc	 push	 DWORD PTR _poModule$[ebp]
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PyModule_AddIntConstant
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH

; 338  : }

  0005c	c9		 leave
  0005d	c3		 ret	 0
?initsafebox@@YAXXZ ENDP				; initsafebox
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z
_TEXT	SEGMENT
__Min_back_shift$ = -16					; size = 4
__Ptr_user$ = -12					; size = 4
__Ptr_container$ = -8					; size = 4
__Back_shift$ = -4					; size = 4
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 132  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 133  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 134  :     _Bytes += _Non_user_size;

  00006	8b 45 0c	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00009	8b 00		 mov	 eax, DWORD PTR [eax]
  0000b	83 c0 23	 add	 eax, 35			; 00000023H
  0000e	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00011	89 01		 mov	 DWORD PTR [ecx], eax

; 135  : 
; 136  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00013	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00016	8b 00		 mov	 eax, DWORD PTR [eax]
  00018	89 45 f4	 mov	 DWORD PTR __Ptr_user$[ebp], eax

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001b	6a 04		 push	 4
  0001d	58		 pop	 eax
  0001e	6b c0 ff	 imul	 eax, eax, -1
  00021	8b 4d f4	 mov	 ecx, DWORD PTR __Ptr_user$[ebp]
  00024	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  00027	89 45 f8	 mov	 DWORD PTR __Ptr_container$[ebp], eax

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);

  0002a	c7 45 f0 04 00
	00 00		 mov	 DWORD PTR __Min_back_shift$[ebp], 4

; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00031	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00034	8b 00		 mov	 eax, DWORD PTR [eax]
  00036	2b 45 f8	 sub	 eax, DWORD PTR __Ptr_container$[ebp]
  00039	89 45 fc	 mov	 DWORD PTR __Back_shift$[ebp], eax
$LN4@Adjust_man:

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0003c	83 7d fc 04	 cmp	 DWORD PTR __Back_shift$[ebp], 4
  00040	72 08		 jb	 SHORT $LN7@Adjust_man
  00042	83 7d fc 23	 cmp	 DWORD PTR __Back_shift$[ebp], 35 ; 00000023H
  00046	77 02		 ja	 SHORT $LN7@Adjust_man
  00048	eb 09		 jmp	 SHORT $LN2@Adjust_man
$LN7@Adjust_man:
  0004a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
  0004f	33 c0		 xor	 eax, eax
  00051	75 f7		 jne	 SHORT $LN7@Adjust_man
$LN2@Adjust_man:
  00053	33 c0		 xor	 eax, eax
  00055	75 e5		 jne	 SHORT $LN4@Adjust_man

; 152  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00057	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0005a	8b 4d f8	 mov	 ecx, DWORD PTR __Ptr_container$[ebp]
  0005d	89 08		 mov	 DWORD PTR [eax], ecx
$LN10@Adjust_man:

; 153  : }

  0005f	c9		 leave
  00060	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@Throw_bad_:

; 322  : }

  0001c	c9		 leave
  0001d	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :     {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 90   :         __std_exception_destroy(&_Data);

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	83 c0 04	 add	 eax, 4
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ___std_exception_destroy
  0001c	59		 pop	 ecx
  0001d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00020	83 e0 01	 and	 eax, 1
  00023	74 0c		 je	 SHORT $LN2@scalar
  00025	6a 0c		 push	 12			; 0000000cH
  00027	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	59		 pop	 ecx
  00030	59		 pop	 ecx
$LN2@scalar:
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	c9		 leave
  00035	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABV01@@Z ; std::exception::exception
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_array_new_length@std@@6B@
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	c9		 leave
  00028	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :     {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 90   :         __std_exception_destroy(&_Data);

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	83 c0 04	 add	 eax, 4
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ___std_exception_destroy
  0001c	59		 pop	 ecx
  0001d	c9		 leave
  0001e	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 66   :     {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 65   :         : _Data()

  00010	33 c0		 xor	 eax, eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 c1 04	 add	 ecx, 4
  00018	89 01		 mov	 DWORD PTR [ecx], eax
  0001a	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 67   :         _Data._What = _Message;

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 130  :     {

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 141  :     {

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	c9		 leave
  0003d	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :     {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 90   :         __std_exception_destroy(&_Data);

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	83 c0 04	 add	 eax, 4
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ___std_exception_destroy
  0001c	59		 pop	 ecx
  0001d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00020	83 e0 01	 and	 eax, 1
  00023	74 0c		 je	 SHORT $LN2@scalar
  00025	6a 0c		 push	 12			; 0000000cH
  00027	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	59		 pop	 ecx
  00030	59		 pop	 ecx
$LN2@scalar:
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	c9		 leave
  00035	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABV01@@Z ; std::exception::exception
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	c9		 leave
  0001f	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :     {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 90   :         __std_exception_destroy(&_Data);

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	83 c0 04	 add	 eax, 4
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ___std_exception_destroy
  0001c	59		 pop	 ecx
  0001d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00020	83 e0 01	 and	 eax, 1
  00023	74 0c		 je	 SHORT $LN2@scalar
  00025	6a 0c		 push	 12			; 0000000cH
  00027	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	59		 pop	 ecx
  00030	59		 pop	 ecx
$LN2@scalar:
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	c9		 leave
  00035	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 94   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00008	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0000f	74 0b		 je	 SHORT $LN3@what
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00017	89 45 f8	 mov	 DWORD PTR tv69[ebp], eax
  0001a	eb 07		 jmp	 SHORT $LN4@what
$LN3@what:
  0001c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
$LN4@what:
  00023	8b 45 f8	 mov	 eax, DWORD PTR tv69[ebp]

; 96   :     }

  00026	c9		 leave
  00027	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 71   :         : _Data()

  00010	33 c0		 xor	 eax, eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 c1 04	 add	 ecx, 4
  00018	89 01		 mov	 DWORD PTR [ecx], eax
  0001a	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	83 c0 04	 add	 eax, 4
  00023	50		 push	 eax
  00024	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  00027	83 c0 04	 add	 eax, 4
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ___std_exception_copy
  00030	59		 pop	 ecx
  00031	59		 pop	 ecx

; 74   :     }

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	c9		 leave
  00036	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
END
