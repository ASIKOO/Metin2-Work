; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	?initMiniMap@@YAXXZ				; initMiniMap
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Reallocate_for@V<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_9366063389c5f42a00a5088cf24e69de>,char const *>
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	?miniMapSetScale@@YAPAU_object@@PAU1@0@Z	; miniMapSetScale
PUBLIC	?miniMapSetCenterPosition@@YAPAU_object@@PAU1@0@Z ; miniMapSetCenterPosition
PUBLIC	?miniMapSetMiniMapSize@@YAPAU_object@@PAU1@0@Z	; miniMapSetMiniMapSize
PUBLIC	?miniMapDestroy@@YAPAU_object@@PAU1@0@Z		; miniMapDestroy
PUBLIC	?miniMapCreate@@YAPAU_object@@PAU1@0@Z		; miniMapCreate
PUBLIC	?miniMapUpdate@@YAPAU_object@@PAU1@0@Z		; miniMapUpdate
PUBLIC	?miniMapRender@@YAPAU_object@@PAU1@0@Z		; miniMapRender
PUBLIC	?miniMapShow@@YAPAU_object@@PAU1@0@Z		; miniMapShow
PUBLIC	?miniMapHide@@YAPAU_object@@PAU1@0@Z		; miniMapHide
PUBLIC	?miniMapisShow@@YAPAU_object@@PAU1@0@Z		; miniMapisShow
PUBLIC	?miniMapScaleUp@@YAPAU_object@@PAU1@0@Z		; miniMapScaleUp
PUBLIC	?miniMapScaleDown@@YAPAU_object@@PAU1@0@Z	; miniMapScaleDown
PUBLIC	?miniMapGetInfo@@YAPAU_object@@PAU1@0@Z		; miniMapGetInfo
PUBLIC	?miniMapLoadAtlas@@YAPAU_object@@PAU1@0@Z	; miniMapLoadAtlas
PUBLIC	?miniMapUpdateAtlas@@YAPAU_object@@PAU1@0@Z	; miniMapUpdateAtlas
PUBLIC	?miniMapRenderAtlas@@YAPAU_object@@PAU1@0@Z	; miniMapRenderAtlas
PUBLIC	?miniMapShowAtlas@@YAPAU_object@@PAU1@0@Z	; miniMapShowAtlas
PUBLIC	?miniMapHideAtlas@@YAPAU_object@@PAU1@0@Z	; miniMapHideAtlas
PUBLIC	?miniMapisShowAtlas@@YAPAU_object@@PAU1@0@Z	; miniMapisShowAtlas
PUBLIC	?miniMapIsAtlas@@YAPAU_object@@PAU1@0@Z		; miniMapIsAtlas
PUBLIC	?miniMapGetAtlasInfo@@YAPAU_object@@PAU1@0@Z	; miniMapGetAtlasInfo
PUBLIC	?miniMapGetAtlasSize@@YAPAU_object@@PAU1@0@Z	; miniMapGetAtlasSize
PUBLIC	?miniMapAddWayPoint@@YAPAU_object@@PAU1@0@Z	; miniMapAddWayPoint
PUBLIC	?miniMapRemoveWayPoint@@YAPAU_object@@PAU1@0@Z	; miniMapRemoveWayPoint
PUBLIC	?miniMapRegisterAtlasWindow@@YAPAU_object@@PAU1@0@Z ; miniMapRegisterAtlasWindow
PUBLIC	?miniMapUnregisterAtlasWindow@@YAPAU_object@@PAU1@0@Z ; miniMapUnregisterAtlasWindow
PUBLIC	?miniMapGetGuildAreaID@@YAPAU_object@@PAU1@0@Z	; miniMapGetGuildAreaID
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
PUBLIC	??_C@_01OJONOECF@b@				; `string'
PUBLIC	??_C@_05BHNEPGFM@isiil@				; `string'
PUBLIC	??_C@_0CO@JOBACLFH@CPythonMiniMap?3?3Instance?$CI?$CJ?4Load@ ; `string'
PUBLIC	??_C@_06NGPFBJMH@isiili@			; `string'
PUBLIC	??_C@_03LMKNDPCK@bii@				; `string'
PUBLIC	??_C@_01KBJDNOO@i@				; `string'
PUBLIC	??_C@_08FMFAIGAB@SetScale@			; `string'
PUBLIC	??_C@_07CNPAFGOE@ScaleUp@			; `string'
PUBLIC	??_C@_09EHCACONO@ScaleDown@			; `string'
PUBLIC	??_C@_0P@JDEKHKMA@SetMiniMapSize@		; `string'
PUBLIC	??_C@_0BC@MCKFCFLJ@SetCenterPosition@		; `string'
PUBLIC	??_C@_07BDCAJABG@Destroy@			; `string'
PUBLIC	??_C@_06MIKANEJK@Create@			; `string'
PUBLIC	??_C@_06LMAGPFNF@Update@			; `string'
PUBLIC	??_C@_06EPLDPNDB@Render@			; `string'
PUBLIC	??_C@_04JLAJABDJ@Show@				; `string'
PUBLIC	??_C@_04EACEFPPN@Hide@				; `string'
PUBLIC	??_C@_06FDNPFPAD@isShow@			; `string'
PUBLIC	??_C@_07NAJNLNAF@GetInfo@			; `string'
PUBLIC	??_C@_09IMDAKKFO@LoadAtlas@			; `string'
PUBLIC	??_C@_0M@EIPBNHOF@UpdateAtlas@			; `string'
PUBLIC	??_C@_0M@KMBFBAJA@RenderAtlas@			; `string'
PUBLIC	??_C@_09HNEIIJJD@ShowAtlas@			; `string'
PUBLIC	??_C@_09BIFGHGHO@HideAtlas@			; `string'
PUBLIC	??_C@_0M@DHCMEFOB@isShowAtlas@			; `string'
PUBLIC	??_C@_07IFCOGPLJ@IsAtlas@			; `string'
PUBLIC	??_C@_0N@BFFOBNJI@GetAtlasInfo@			; `string'
PUBLIC	??_C@_0N@ENAKBIJM@GetAtlasSize@			; `string'
PUBLIC	??_C@_0M@DMLHJAOH@AddWayPoint@			; `string'
PUBLIC	??_C@_0P@BPFHEFHK@RemoveWayPoint@		; `string'
PUBLIC	??_C@_0BE@DJCJPBHI@RegisterAtlasWindow@		; `string'
PUBLIC	??_C@_0BG@BMPPHBMB@UnregisterAtlasWindow@	; `string'
PUBLIC	??_C@_0P@JOOPKKLO@GetGuildAreaID@		; `string'
PUBLIC	??_C@_07GGJFLPNN@miniMap@			; `string'
PUBLIC	??_C@_08MOLNEDKJ@TYPE_OPC@			; `string'
PUBLIC	??_C@_0M@KBKKLFCC@TYPE_OPCPVP@			; `string'
PUBLIC	??_C@_0BA@DAENBNGA@TYPE_OPCPVPSELF@		; `string'
PUBLIC	??_C@_08HGABCEMM@TYPE_NPC@			; `string'
PUBLIC	??_C@_0N@MFCFPPMD@TYPE_MONSTER@			; `string'
PUBLIC	??_C@_09LAKONOKF@TYPE_WARP@			; `string'
PUBLIC	??_C@_0O@JMCMGHKJ@TYPE_WAYPOINT@		; `string'
PUBLIC	??_C@_0L@NHHJIHMA@TYPE_PARTY@			; `string'
PUBLIC	??_C@_0M@IAHPEAKG@TYPE_EMPIRE@			; `string'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_strlen:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	__imp__Py_BuildValue:PROC
EXTRN	__imp__PyModule_AddIntConstant:PROC
EXTRN	__imp__Py_InitModule4:PROC
EXTRN	?PyTuple_GetString@@YA_NPAU_object@@HPAPAD@Z:PROC ; PyTuple_GetString
EXTRN	?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z:PROC ; PyTuple_GetInteger
EXTRN	?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z:PROC	; PyTuple_GetFloat
EXTRN	?PyTuple_GetObject@@YA_NPAU_object@@HPAPAU1@@Z:PROC ; PyTuple_GetObject
EXTRN	?Py_BuildException@@YAPAU_object@@PBDZZ:PROC	; Py_BuildException
EXTRN	?Py_BuildNone@@YAPAU_object@@XZ:PROC		; Py_BuildNone
EXTRN	?Destroy@CPythonMiniMap@@QAEXXZ:PROC		; CPythonMiniMap::Destroy
EXTRN	?Create@CPythonMiniMap@@QAE_NXZ:PROC		; CPythonMiniMap::Create
EXTRN	?IsAtlas@CPythonMiniMap@@QAE_NXZ:PROC		; CPythonMiniMap::IsAtlas
EXTRN	?CanShow@CPythonMiniMap@@QAE_NXZ:PROC		; CPythonMiniMap::CanShow
EXTRN	?CanShowAtlas@CPythonMiniMap@@QAE_NXZ:PROC	; CPythonMiniMap::CanShowAtlas
EXTRN	?SetMiniMapSize@CPythonMiniMap@@QAEXMM@Z:PROC	; CPythonMiniMap::SetMiniMapSize
EXTRN	?SetScale@CPythonMiniMap@@QAEXM@Z:PROC		; CPythonMiniMap::SetScale
EXTRN	?ScaleUp@CPythonMiniMap@@QAEXXZ:PROC		; CPythonMiniMap::ScaleUp
EXTRN	?ScaleDown@CPythonMiniMap@@QAEXXZ:PROC		; CPythonMiniMap::ScaleDown
EXTRN	?SetCenterPosition@CPythonMiniMap@@QAEXMM@Z:PROC ; CPythonMiniMap::SetCenterPosition
EXTRN	?Update@CPythonMiniMap@@QAEXMM@Z:PROC		; CPythonMiniMap::Update
EXTRN	?Render@CPythonMiniMap@@QAEXMM@Z:PROC		; CPythonMiniMap::Render
EXTRN	?Show@CPythonMiniMap@@QAEXXZ:PROC		; CPythonMiniMap::Show
EXTRN	?Hide@CPythonMiniMap@@QAEXXZ:PROC		; CPythonMiniMap::Hide
EXTRN	?GetPickedInstanceInfo@CPythonMiniMap@@QAE_NMMAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM1PAK@Z:PROC ; CPythonMiniMap::GetPickedInstanceInfo
EXTRN	?LoadAtlas@CPythonMiniMap@@QAE_NXZ:PROC		; CPythonMiniMap::LoadAtlas
EXTRN	?UpdateAtlas@CPythonMiniMap@@QAEXXZ:PROC	; CPythonMiniMap::UpdateAtlas
EXTRN	?RenderAtlas@CPythonMiniMap@@QAEXMM@Z:PROC	; CPythonMiniMap::RenderAtlas
EXTRN	?ShowAtlas@CPythonMiniMap@@QAEXXZ:PROC		; CPythonMiniMap::ShowAtlas
EXTRN	?HideAtlas@CPythonMiniMap@@QAEXXZ:PROC		; CPythonMiniMap::HideAtlas
EXTRN	?GetAtlasInfo@CPythonMiniMap@@QAE_NMMAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM1PAK2@Z:PROC ; CPythonMiniMap::GetAtlasInfo
EXTRN	?GetAtlasSize@CPythonMiniMap@@QAE_NPAM0@Z:PROC	; CPythonMiniMap::GetAtlasSize
EXTRN	?AddWayPoint@CPythonMiniMap@@QAEXEKMMV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z:PROC ; CPythonMiniMap::AddWayPoint
EXTRN	?RemoveWayPoint@CPythonMiniMap@@QAEXK@Z:PROC	; CPythonMiniMap::RemoveWayPoint
EXTRN	?RegisterAtlasWindow@CPythonMiniMap@@QAEXPAU_object@@@Z:PROC ; CPythonMiniMap::RegisterAtlasWindow
EXTRN	?UnregisterAtlasWindow@CPythonMiniMap@@QAEXXZ:PROC ; CPythonMiniMap::UnregisterAtlasWindow
EXTRN	?GetGuildAreaID@CPythonMiniMap@@QAEKKK@Z:PROC	; CPythonMiniMap::GetGuildAreaID
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftoui3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?PR_FCNV@@3MA:DWORD				; PR_FCNV
EXTRN	?PR_ICNV@@3JA:DWORD				; PR_ICNV
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A DD 01H DUP (?) ; CSingleton<CPythonMiniMap>::ms_singleton
_BSS	ENDS
;	COMDAT ??_C@_0M@IAHPEAKG@TYPE_EMPIRE@
CONST	SEGMENT
??_C@_0M@IAHPEAKG@TYPE_EMPIRE@ DB 'TYPE_EMPIRE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NHHJIHMA@TYPE_PARTY@
CONST	SEGMENT
??_C@_0L@NHHJIHMA@TYPE_PARTY@ DB 'TYPE_PARTY', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JMCMGHKJ@TYPE_WAYPOINT@
CONST	SEGMENT
??_C@_0O@JMCMGHKJ@TYPE_WAYPOINT@ DB 'TYPE_WAYPOINT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LAKONOKF@TYPE_WARP@
CONST	SEGMENT
??_C@_09LAKONOKF@TYPE_WARP@ DB 'TYPE_WARP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MFCFPPMD@TYPE_MONSTER@
CONST	SEGMENT
??_C@_0N@MFCFPPMD@TYPE_MONSTER@ DB 'TYPE_MONSTER', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HGABCEMM@TYPE_NPC@
CONST	SEGMENT
??_C@_08HGABCEMM@TYPE_NPC@ DB 'TYPE_NPC', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DAENBNGA@TYPE_OPCPVPSELF@
CONST	SEGMENT
??_C@_0BA@DAENBNGA@TYPE_OPCPVPSELF@ DB 'TYPE_OPCPVPSELF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KBKKLFCC@TYPE_OPCPVP@
CONST	SEGMENT
??_C@_0M@KBKKLFCC@TYPE_OPCPVP@ DB 'TYPE_OPCPVP', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08MOLNEDKJ@TYPE_OPC@
CONST	SEGMENT
??_C@_08MOLNEDKJ@TYPE_OPC@ DB 'TYPE_OPC', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GGJFLPNN@miniMap@
CONST	SEGMENT
??_C@_07GGJFLPNN@miniMap@ DB 'miniMap', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JOOPKKLO@GetGuildAreaID@
CONST	SEGMENT
??_C@_0P@JOOPKKLO@GetGuildAreaID@ DB 'GetGuildAreaID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BMPPHBMB@UnregisterAtlasWindow@
CONST	SEGMENT
??_C@_0BG@BMPPHBMB@UnregisterAtlasWindow@ DB 'UnregisterAtlasWindow', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DJCJPBHI@RegisterAtlasWindow@
CONST	SEGMENT
??_C@_0BE@DJCJPBHI@RegisterAtlasWindow@ DB 'RegisterAtlasWindow', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BPFHEFHK@RemoveWayPoint@
CONST	SEGMENT
??_C@_0P@BPFHEFHK@RemoveWayPoint@ DB 'RemoveWayPoint', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DMLHJAOH@AddWayPoint@
CONST	SEGMENT
??_C@_0M@DMLHJAOH@AddWayPoint@ DB 'AddWayPoint', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ENAKBIJM@GetAtlasSize@
CONST	SEGMENT
??_C@_0N@ENAKBIJM@GetAtlasSize@ DB 'GetAtlasSize', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BFFOBNJI@GetAtlasInfo@
CONST	SEGMENT
??_C@_0N@BFFOBNJI@GetAtlasInfo@ DB 'GetAtlasInfo', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07IFCOGPLJ@IsAtlas@
CONST	SEGMENT
??_C@_07IFCOGPLJ@IsAtlas@ DB 'IsAtlas', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DHCMEFOB@isShowAtlas@
CONST	SEGMENT
??_C@_0M@DHCMEFOB@isShowAtlas@ DB 'isShowAtlas', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BIFGHGHO@HideAtlas@
CONST	SEGMENT
??_C@_09BIFGHGHO@HideAtlas@ DB 'HideAtlas', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09HNEIIJJD@ShowAtlas@
CONST	SEGMENT
??_C@_09HNEIIJJD@ShowAtlas@ DB 'ShowAtlas', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KMBFBAJA@RenderAtlas@
CONST	SEGMENT
??_C@_0M@KMBFBAJA@RenderAtlas@ DB 'RenderAtlas', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EIPBNHOF@UpdateAtlas@
CONST	SEGMENT
??_C@_0M@EIPBNHOF@UpdateAtlas@ DB 'UpdateAtlas', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09IMDAKKFO@LoadAtlas@
CONST	SEGMENT
??_C@_09IMDAKKFO@LoadAtlas@ DB 'LoadAtlas', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NAJNLNAF@GetInfo@
CONST	SEGMENT
??_C@_07NAJNLNAF@GetInfo@ DB 'GetInfo', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FDNPFPAD@isShow@
CONST	SEGMENT
??_C@_06FDNPFPAD@isShow@ DB 'isShow', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04EACEFPPN@Hide@
CONST	SEGMENT
??_C@_04EACEFPPN@Hide@ DB 'Hide', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04JLAJABDJ@Show@
CONST	SEGMENT
??_C@_04JLAJABDJ@Show@ DB 'Show', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06EPLDPNDB@Render@
CONST	SEGMENT
??_C@_06EPLDPNDB@Render@ DB 'Render', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LMAGPFNF@Update@
CONST	SEGMENT
??_C@_06LMAGPFNF@Update@ DB 'Update', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06MIKANEJK@Create@
CONST	SEGMENT
??_C@_06MIKANEJK@Create@ DB 'Create', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07BDCAJABG@Destroy@
CONST	SEGMENT
??_C@_07BDCAJABG@Destroy@ DB 'Destroy', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MCKFCFLJ@SetCenterPosition@
CONST	SEGMENT
??_C@_0BC@MCKFCFLJ@SetCenterPosition@ DB 'SetCenterPosition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JDEKHKMA@SetMiniMapSize@
CONST	SEGMENT
??_C@_0P@JDEKHKMA@SetMiniMapSize@ DB 'SetMiniMapSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09EHCACONO@ScaleDown@
CONST	SEGMENT
??_C@_09EHCACONO@ScaleDown@ DB 'ScaleDown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CNPAFGOE@ScaleUp@
CONST	SEGMENT
??_C@_07CNPAFGOE@ScaleUp@ DB 'ScaleUp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08FMFAIGAB@SetScale@
CONST	SEGMENT
??_C@_08FMFAIGAB@SetScale@ DB 'SetScale', 00H		; `string'
CONST	ENDS
;	COMDAT ?s_methods@?1??initMiniMap@@YAXXZ@4PAUPyMethodDef@@A
_DATA	SEGMENT
?s_methods@?1??initMiniMap@@YAXXZ@4PAUPyMethodDef@@A DD FLAT:??_C@_08FMFAIGAB@SetScale@ ; `initMiniMap'::`2'::s_methods
	DD	FLAT:?miniMapSetScale@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_07CNPAFGOE@ScaleUp@
	DD	FLAT:?miniMapScaleUp@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_09EHCACONO@ScaleDown@
	DD	FLAT:?miniMapScaleDown@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0P@JDEKHKMA@SetMiniMapSize@
	DD	FLAT:?miniMapSetMiniMapSize@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BC@MCKFCFLJ@SetCenterPosition@
	DD	FLAT:?miniMapSetCenterPosition@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_07BDCAJABG@Destroy@
	DD	FLAT:?miniMapDestroy@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_06MIKANEJK@Create@
	DD	FLAT:?miniMapCreate@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_06LMAGPFNF@Update@
	DD	FLAT:?miniMapUpdate@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_06EPLDPNDB@Render@
	DD	FLAT:?miniMapRender@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_04JLAJABDJ@Show@
	DD	FLAT:?miniMapShow@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_04EACEFPPN@Hide@
	DD	FLAT:?miniMapHide@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_06FDNPFPAD@isShow@
	DD	FLAT:?miniMapisShow@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_07NAJNLNAF@GetInfo@
	DD	FLAT:?miniMapGetInfo@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_09IMDAKKFO@LoadAtlas@
	DD	FLAT:?miniMapLoadAtlas@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0M@EIPBNHOF@UpdateAtlas@
	DD	FLAT:?miniMapUpdateAtlas@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0M@KMBFBAJA@RenderAtlas@
	DD	FLAT:?miniMapRenderAtlas@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_09HNEIIJJD@ShowAtlas@
	DD	FLAT:?miniMapShowAtlas@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_09BIFGHGHO@HideAtlas@
	DD	FLAT:?miniMapHideAtlas@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0M@DHCMEFOB@isShowAtlas@
	DD	FLAT:?miniMapisShowAtlas@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_07IFCOGPLJ@IsAtlas@
	DD	FLAT:?miniMapIsAtlas@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0N@BFFOBNJI@GetAtlasInfo@
	DD	FLAT:?miniMapGetAtlasInfo@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0N@ENAKBIJM@GetAtlasSize@
	DD	FLAT:?miniMapGetAtlasSize@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0M@DMLHJAOH@AddWayPoint@
	DD	FLAT:?miniMapAddWayPoint@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0P@BPFHEFHK@RemoveWayPoint@
	DD	FLAT:?miniMapRemoveWayPoint@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BE@DJCJPBHI@RegisterAtlasWindow@
	DD	FLAT:?miniMapRegisterAtlasWindow@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0BG@BMPPHBMB@UnregisterAtlasWindow@
	DD	FLAT:?miniMapUnregisterAtlasWindow@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	FLAT:??_C@_0P@JOOPKKLO@GetGuildAreaID@
	DD	FLAT:?miniMapGetGuildAreaID@@YAPAU_object@@PAU1@0@Z
	DD	01H
	ORG $+4
	DD	00H
	DD	00H
	ORG $+8
_DATA	ENDS
;	COMDAT ??_C@_01KBJDNOO@i@
CONST	SEGMENT
??_C@_01KBJDNOO@i@ DB 'i', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03LMKNDPCK@bii@
CONST	SEGMENT
??_C@_03LMKNDPCK@bii@ DB 'bii', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06NGPFBJMH@isiili@
CONST	SEGMENT
??_C@_06NGPFBJMH@isiili@ DB 'isiili', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@JOBACLFH@CPythonMiniMap?3?3Instance?$CI?$CJ?4Load@
CONST	SEGMENT
??_C@_0CO@JOBACLFH@CPythonMiniMap?3?3Instance?$CI?$CJ?4Load@ DB 'CPythonM'
	DB	'iniMap::Instance().LoadAtlas() Failed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05BHNEPGFM@isiil@
CONST	SEGMENT
??_C@_05BHNEPGFM@isiil@ DB 'isiil', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01OJONOECF@b@
CONST	SEGMENT
??_C@_01OJONOECF@b@ DB 'b', 00H				; `string'
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?miniMapGetAtlasInfo@@YAPAU_object@@PAU1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?miniMapGetAtlasInfo@@YAPAU_object@@PAU1@0@Z$0
__ehfuncinfo$?miniMapGetAtlasInfo@@YAPAU_object@@PAU1@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?miniMapGetAtlasInfo@@YAPAU_object@@PAU1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?miniMapGetInfo@@YAPAU_object@@PAU1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?miniMapGetInfo@@YAPAU_object@@PAU1@0@Z$0
__ehfuncinfo$?miniMapGetInfo@@YAPAU_object@@PAU1@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?miniMapGetInfo@@YAPAU_object@@PAU1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapGetGuildAreaID@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_dwGuildID$ = -16					; size = 4
$T1 = -12						; size = 4
_fx$ = -8						; size = 4
_fy$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapGetGuildAreaID@@YAPAU_object@@PAU1@0@Z PROC	; miniMapGetGuildAreaID, COMDAT

; 290  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 291  : 	float fx;
; 292  : 	if (!PyTuple_GetFloat(poArgs, 0, &fx))

  00006	8d 45 f8	 lea	 eax, DWORD PTR _fx$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z ; PyTuple_GetFloat
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	0f b6 c0	 movzx	 eax, al
  0001a	85 c0		 test	 eax, eax
  0001c	75 0a		 jne	 SHORT $LN2@miniMapGet

; 293  : 		return Py_BuildException();

  0001e	6a 00		 push	 0
  00020	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00025	59		 pop	 ecx
  00026	eb 5b		 jmp	 SHORT $LN1@miniMapGet
$LN2@miniMapGet:

; 294  : 	float fy;
; 295  : 	if (!PyTuple_GetFloat(poArgs, 1, &fy))

  00028	8d 45 fc	 lea	 eax, DWORD PTR _fy$[ebp]
  0002b	50		 push	 eax
  0002c	6a 01		 push	 1
  0002e	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00031	e8 00 00 00 00	 call	 ?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z ; PyTuple_GetFloat
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
  00039	0f b6 c0	 movzx	 eax, al
  0003c	85 c0		 test	 eax, eax
  0003e	75 0a		 jne	 SHORT $LN3@miniMapGet

; 296  : 		return Py_BuildException();

  00040	6a 00		 push	 0
  00042	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00047	59		 pop	 ecx
  00048	eb 39		 jmp	 SHORT $LN1@miniMapGet
$LN3@miniMapGet:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  0004a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  0004f	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp

; 298  : 	DWORD dwGuildID = CPythonMiniMap::Instance().GetGuildAreaID(fx, fy);

  00052	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00057	e8 00 00 00 00	 call	 __ftoui3
  0005c	50		 push	 eax
  0005d	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00062	e8 00 00 00 00	 call	 __ftoui3
  00067	50		 push	 eax
  00068	8b 4d f4	 mov	 ecx, DWORD PTR $T1[ebp]
  0006b	e8 00 00 00 00	 call	 ?GetGuildAreaID@CPythonMiniMap@@QAEKKK@Z ; CPythonMiniMap::GetGuildAreaID
  00070	89 45 f0	 mov	 DWORD PTR _dwGuildID$[ebp], eax

; 299  : 	return Py_BuildValue("i", dwGuildID);

  00073	ff 75 f0	 push	 DWORD PTR _dwGuildID$[ebp]
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_01KBJDNOO@i@
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00081	59		 pop	 ecx
  00082	59		 pop	 ecx
$LN1@miniMapGet:

; 300  : }

  00083	c9		 leave
  00084	c3		 ret	 0
?miniMapGetGuildAreaID@@YAPAU_object@@PAU1@0@Z ENDP	; miniMapGetGuildAreaID
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapUnregisterAtlasWindow@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapUnregisterAtlasWindow@@YAPAU_object@@PAU1@0@Z PROC ; miniMapUnregisterAtlasWindow, COMDAT

; 284  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 285  : 	CPythonMiniMap::Instance().UnregisterAtlasWindow();

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  00009	e8 00 00 00 00	 call	 ?UnregisterAtlasWindow@CPythonMiniMap@@QAEXXZ ; CPythonMiniMap::UnregisterAtlasWindow

; 286  : 	return Py_BuildNone();

  0000e	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone

; 287  : }

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?miniMapUnregisterAtlasWindow@@YAPAU_object@@PAU1@0@Z ENDP ; miniMapUnregisterAtlasWindow
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapRegisterAtlasWindow@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poHandler$ = -4					; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapRegisterAtlasWindow@@YAPAU_object@@PAU1@0@Z PROC ; miniMapRegisterAtlasWindow, COMDAT

; 275  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 276  : 	PyObject * poHandler;
; 277  : 	if (!PyTuple_GetObject(poArgs, 0, &poHandler))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _poHandler$[ebp]
  00007	50		 push	 eax
  00008	6a 00		 push	 0
  0000a	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000d	e8 00 00 00 00	 call	 ?PyTuple_GetObject@@YA_NPAU_object@@HPAPAU1@@Z ; PyTuple_GetObject
  00012	83 c4 0c	 add	 esp, 12			; 0000000cH
  00015	0f b6 c0	 movzx	 eax, al
  00018	85 c0		 test	 eax, eax
  0001a	75 0a		 jne	 SHORT $LN4@miniMapReg

; 278  : 		return Py_BuildException();

  0001c	6a 00		 push	 0
  0001e	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00023	59		 pop	 ecx
  00024	eb 13		 jmp	 SHORT $LN1@miniMapReg
$LN4@miniMapReg:

; 279  : 	CPythonMiniMap::Instance().RegisterAtlasWindow(poHandler);

  00026	ff 75 fc	 push	 DWORD PTR _poHandler$[ebp]
  00029	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  0002f	e8 00 00 00 00	 call	 ?RegisterAtlasWindow@CPythonMiniMap@@QAEXPAU_object@@@Z ; CPythonMiniMap::RegisterAtlasWindow

; 280  : 	return Py_BuildNone();

  00034	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone
$LN1@miniMapReg:

; 281  : }

  00039	c9		 leave
  0003a	c3		 ret	 0
?miniMapRegisterAtlasWindow@@YAPAU_object@@PAU1@0@Z ENDP ; miniMapRegisterAtlasWindow
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapRemoveWayPoint@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_iID$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapRemoveWayPoint@@YAPAU_object@@PAU1@0@Z PROC	; miniMapRemoveWayPoint, COMDAT

; 264  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 265  : 	int iID;
; 266  : 	if (!PyTuple_GetInteger(poArgs, 0, &iID))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _iID$[ebp]
  00007	50		 push	 eax
  00008	6a 00		 push	 0
  0000a	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000d	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00012	83 c4 0c	 add	 esp, 12			; 0000000cH
  00015	0f b6 c0	 movzx	 eax, al
  00018	85 c0		 test	 eax, eax
  0001a	75 0a		 jne	 SHORT $LN4@miniMapRem

; 267  : 		return Py_BuildException();

  0001c	6a 00		 push	 0
  0001e	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00023	59		 pop	 ecx
  00024	eb 13		 jmp	 SHORT $LN1@miniMapRem
$LN4@miniMapRem:

; 268  : 	
; 269  : 	CPythonMiniMap::Instance().RemoveWayPoint((DWORD)iID);

  00026	ff 75 fc	 push	 DWORD PTR _iID$[ebp]
  00029	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  0002f	e8 00 00 00 00	 call	 ?RemoveWayPoint@CPythonMiniMap@@QAEXK@Z ; CPythonMiniMap::RemoveWayPoint

; 270  : 	
; 271  : 	return Py_BuildNone();

  00034	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone
$LN1@miniMapRem:

; 272  : }

  00039	c9		 leave
  0003a	c3		 ret	 0
?miniMapRemoveWayPoint@@YAPAU_object@@PAU1@0@Z ENDP	; miniMapRemoveWayPoint
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapAddWayPoint@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
$T1 = -24						; size = 4
$T2 = -20						; size = 4
_iID$ = -16						; size = 4
_fX$ = -12						; size = 4
_fY$ = -8						; size = 4
_buf$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapAddWayPoint@@YAPAU_object@@PAU1@0@Z PROC	; miniMapAddWayPoint, COMDAT

; 241  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H

; 242  : 	int iID;
; 243  : 	if (!PyTuple_GetInteger(poArgs, 0, &iID))

  00006	8d 45 f0	 lea	 eax, DWORD PTR _iID$[ebp]
  00009	50		 push	 eax
  0000a	6a 00		 push	 0
  0000c	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000f	e8 00 00 00 00	 call	 ?PyTuple_GetInteger@@YA_NPAU_object@@HPAH@Z ; PyTuple_GetInteger
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	0f b6 c0	 movzx	 eax, al
  0001a	85 c0		 test	 eax, eax
  0001c	75 0d		 jne	 SHORT $LN2@miniMapAdd

; 244  : 		return Py_BuildException();

  0001e	6a 00		 push	 0
  00020	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00025	59		 pop	 ecx
  00026	e9 ab 00 00 00	 jmp	 $LN1@miniMapAdd
$LN2@miniMapAdd:

; 245  : 	
; 246  : 	float fX;
; 247  : 	if (!PyTuple_GetFloat(poArgs, 1, &fX))

  0002b	8d 45 f4	 lea	 eax, DWORD PTR _fX$[ebp]
  0002e	50		 push	 eax
  0002f	6a 01		 push	 1
  00031	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00034	e8 00 00 00 00	 call	 ?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z ; PyTuple_GetFloat
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	0f b6 c0	 movzx	 eax, al
  0003f	85 c0		 test	 eax, eax
  00041	75 0d		 jne	 SHORT $LN3@miniMapAdd

; 248  : 		return Py_BuildException();

  00043	6a 00		 push	 0
  00045	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  0004a	59		 pop	 ecx
  0004b	e9 86 00 00 00	 jmp	 $LN1@miniMapAdd
$LN3@miniMapAdd:

; 249  : 	
; 250  : 	float fY;
; 251  : 	if (!PyTuple_GetFloat(poArgs, 2, &fY))

  00050	8d 45 f8	 lea	 eax, DWORD PTR _fY$[ebp]
  00053	50		 push	 eax
  00054	6a 02		 push	 2
  00056	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00059	e8 00 00 00 00	 call	 ?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z ; PyTuple_GetFloat
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00061	0f b6 c0	 movzx	 eax, al
  00064	85 c0		 test	 eax, eax
  00066	75 0a		 jne	 SHORT $LN4@miniMapAdd

; 252  : 		return Py_BuildException();

  00068	6a 00		 push	 0
  0006a	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  0006f	59		 pop	 ecx
  00070	eb 64		 jmp	 SHORT $LN1@miniMapAdd
$LN4@miniMapAdd:

; 253  : 
; 254  : 	char * buf;
; 255  : 	if (!PyTuple_GetString(poArgs, 3, &buf))

  00072	8d 45 fc	 lea	 eax, DWORD PTR _buf$[ebp]
  00075	50		 push	 eax
  00076	6a 03		 push	 3
  00078	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0007b	e8 00 00 00 00	 call	 ?PyTuple_GetString@@YA_NPAU_object@@HPAPAD@Z ; PyTuple_GetString
  00080	83 c4 0c	 add	 esp, 12			; 0000000cH
  00083	0f b6 c0	 movzx	 eax, al
  00086	85 c0		 test	 eax, eax
  00088	75 0a		 jne	 SHORT $LN5@miniMapAdd

; 256  : 		return Py_BuildException();

  0008a	6a 00		 push	 0
  0008c	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00091	59		 pop	 ecx
  00092	eb 42		 jmp	 SHORT $LN1@miniMapAdd
$LN5@miniMapAdd:

; 258  : 	CPythonMiniMap::Instance().AddWayPoint(CPythonMiniMap::TYPE_WAYPOINT, (DWORD)iID, fX, fY, buf);

  00094	6a 00		 push	 0
  00096	83 ec 18	 sub	 esp, 24			; 00000018H
  00099	8b cc		 mov	 ecx, esp
  0009b	89 65 e8	 mov	 DWORD PTR $T1[ebp], esp
  0009e	ff 75 fc	 push	 DWORD PTR _buf$[ebp]
  000a1	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  000a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  000ab	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp

; 258  : 	CPythonMiniMap::Instance().AddWayPoint(CPythonMiniMap::TYPE_WAYPOINT, (DWORD)iID, fX, fY, buf);

  000ae	51		 push	 ecx
  000af	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _fY$[ebp]
  000b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b9	51		 push	 ecx
  000ba	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _fX$[ebp]
  000bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c4	ff 75 f0	 push	 DWORD PTR _iID$[ebp]
  000c7	6a 06		 push	 6
  000c9	8b 4d ec	 mov	 ecx, DWORD PTR $T2[ebp]
  000cc	e8 00 00 00 00	 call	 ?AddWayPoint@CPythonMiniMap@@QAEXEKMMV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@K@Z ; CPythonMiniMap::AddWayPoint

; 259  : 	
; 260  : 	return Py_BuildNone();

  000d1	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone
$LN1@miniMapAdd:

; 261  : }

  000d6	c9		 leave
  000d7	c3		 ret	 0
?miniMapAddWayPoint@@YAPAU_object@@PAU1@0@Z ENDP	; miniMapAddWayPoint
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapGetAtlasSize@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_iSizeX$ = -32						; size = 4
_iSizeY$ = -28						; size = 4
_fSizeY$ = -24						; size = 4
_fSizeX$ = -20						; size = 4
$T1 = -16						; size = 4
tv76 = -12						; size = 4
tv72 = -8						; size = 4
_bGet$ = -1						; size = 1
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapGetAtlasSize@@YAPAU_object@@PAU1@0@Z PROC	; miniMapGetAtlasSize, COMDAT

; 213  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  0000b	89 45 f0	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp

; 215  : 	bool bGet = CPythonMiniMap::Instance().GetAtlasSize(&fSizeX, &fSizeY);

  0000e	8d 45 e8	 lea	 eax, DWORD PTR _fSizeY$[ebp]
  00011	50		 push	 eax
  00012	8d 45 ec	 lea	 eax, DWORD PTR _fSizeX$[ebp]
  00015	50		 push	 eax
  00016	8b 4d f0	 mov	 ecx, DWORD PTR $T1[ebp]
  00019	e8 00 00 00 00	 call	 ?GetAtlasSize@CPythonMiniMap@@QAE_NPAM0@Z ; CPythonMiniMap::GetAtlasSize
  0001e	88 45 ff	 mov	 BYTE PTR _bGet$[ebp], al

; 216  : 
; 217  : /*
; 218  : 	float fSizeXoo256 = fSizeX / 256.0f;
; 219  : 	float fSizeYoo256 = fSizeY / 256.0f;
; 220  : 
; 221  : 	if (fSizeXoo256 >= fSizeYoo256)
; 222  : 	{
; 223  : 		fSizeX /= fSizeYoo256;
; 224  : 		fSizeY = 256.0f;
; 225  : 	}
; 226  : 	else
; 227  : 	{
; 228  : 		fSizeX = 256.0f;
; 229  : 		fSizeY /= fSizeXoo256;
; 230  : 	}
; 231  : */
; 232  : 
; 233  : 	int iSizeX, iSizeY;
; 234  : 	PR_FLOAT_TO_INT(fSizeX, iSizeX);

  00021	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fSizeX$[ebp]
  00026	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm0
  0002e	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  00034	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  0003a	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00042	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00049	76 0b		 jbe	 SHORT $LN3@miniMapGet
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00050	48		 dec	 eax
  00051	89 45 f8	 mov	 DWORD PTR tv72[ebp], eax
  00054	eb 08		 jmp	 SHORT $LN4@miniMapGet
$LN3@miniMapGet:
  00056	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  0005b	89 45 f8	 mov	 DWORD PTR tv72[ebp], eax
$LN4@miniMapGet:
  0005e	8b 45 f8	 mov	 eax, DWORD PTR tv72[ebp]
  00061	89 45 e0	 mov	 DWORD PTR _iSizeX$[ebp], eax

; 235  : 	PR_FLOAT_TO_INT(fSizeY, iSizeY);

  00064	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _fSizeY$[ebp]
  00069	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm0
  00071	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  00077	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  0007d	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00085	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  0008c	76 0b		 jbe	 SHORT $LN5@miniMapGet
  0008e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00093	48		 dec	 eax
  00094	89 45 f4	 mov	 DWORD PTR tv76[ebp], eax
  00097	eb 08		 jmp	 SHORT $LN6@miniMapGet
$LN5@miniMapGet:
  00099	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  0009e	89 45 f4	 mov	 DWORD PTR tv76[ebp], eax
$LN6@miniMapGet:
  000a1	8b 45 f4	 mov	 eax, DWORD PTR tv76[ebp]
  000a4	89 45 e4	 mov	 DWORD PTR _iSizeY$[ebp], eax

; 236  : 
; 237  : 	return Py_BuildValue("bii", (int)bGet, iSizeX, iSizeY);

  000a7	ff 75 e4	 push	 DWORD PTR _iSizeY$[ebp]
  000aa	ff 75 e0	 push	 DWORD PTR _iSizeX$[ebp]
  000ad	0f b6 45 ff	 movzx	 eax, BYTE PTR _bGet$[ebp]
  000b1	50		 push	 eax
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_03LMKNDPCK@bii@
  000b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  000bd	83 c4 10	 add	 esp, 16			; 00000010H

; 238  : }

  000c0	c9		 leave
  000c1	c3		 ret	 0
?miniMapGetAtlasSize@@YAPAU_object@@PAU1@0@Z ENDP	; miniMapGetAtlasSize
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapGetAtlasInfo@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
$T2 = -92						; size = 4
$T3 = -88						; size = 4
_fScrrenX$ = -84					; size = 4
_fScrrenY$ = -80					; size = 4
_dwTextColor$ = -76					; size = 4
_dwGuildID$ = -72					; size = 4
tv133 = -68						; size = 4
_fPosY$ = -64						; size = 4
tv129 = -60						; size = 4
_fPosX$ = -56						; size = 4
_iPosX$ = -52						; size = 4
_iPosY$ = -48						; size = 4
_bFind$ = -41						; size = 1
_aString$ = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapGetAtlasInfo@@YAPAU_object@@PAU1@0@Z PROC	; miniMapGetAtlasInfo, COMDAT

; 190  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?miniMapGetAtlasInfo@@YAPAU_object@@PAU1@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 191  : 	float fScrrenX;
; 192  : 	if (!PyTuple_GetFloat(poArgs, 0, &fScrrenX))

  00028	8d 45 ac	 lea	 eax, DWORD PTR _fScrrenX$[ebp]
  0002b	50		 push	 eax
  0002c	6a 00		 push	 0
  0002e	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00031	e8 00 00 00 00	 call	 ?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z ; PyTuple_GetFloat
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
  00039	0f b6 c0	 movzx	 eax, al
  0003c	85 c0		 test	 eax, eax
  0003e	75 0d		 jne	 SHORT $LN2@miniMapGet

; 193  : 		return Py_BuildException();

  00040	6a 00		 push	 0
  00042	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00047	59		 pop	 ecx
  00048	e9 63 01 00 00	 jmp	 $LN1@miniMapGet
$LN2@miniMapGet:

; 194  : 	float fScrrenY;
; 195  : 	if (!PyTuple_GetFloat(poArgs, 1, &fScrrenY))

  0004d	8d 45 b0	 lea	 eax, DWORD PTR _fScrrenY$[ebp]
  00050	50		 push	 eax
  00051	6a 01		 push	 1
  00053	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00056	e8 00 00 00 00	 call	 ?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z ; PyTuple_GetFloat
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	0f b6 c0	 movzx	 eax, al
  00061	85 c0		 test	 eax, eax
  00063	75 0d		 jne	 SHORT $LN3@miniMapGet

; 196  : 		return Py_BuildException();

  00065	6a 00		 push	 0
  00067	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  0006c	59		 pop	 ecx
  0006d	e9 3e 01 00 00	 jmp	 $LN1@miniMapGet
$LN3@miniMapGet:

; 197  : 
; 198  : 	std::string aString = "";

  00072	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00077	8d 4d d8	 lea	 ecx, DWORD PTR _aString$[ebp]
  0007a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0007f	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 199  : 	float fPosX = 0.0f;

  00083	0f 57 c0	 xorps	 xmm0, xmm0
  00086	f3 0f 11 45 c8	 movss	 DWORD PTR _fPosX$[ebp], xmm0

; 200  : 	float fPosY = 0.0f;

  0008b	0f 57 c0	 xorps	 xmm0, xmm0
  0008e	f3 0f 11 45 c0	 movss	 DWORD PTR _fPosY$[ebp], xmm0

; 201  : 	DWORD dwTextColor = 0;

  00093	83 65 b4 00	 and	 DWORD PTR _dwTextColor$[ebp], 0

; 202  : 	DWORD dwGuildID = 0;

  00097	83 65 b8 00	 and	 DWORD PTR _dwGuildID$[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  0009b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  000a0	89 45 a8	 mov	 DWORD PTR $T3[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp

; 203  : 	bool bFind = CPythonMiniMap::Instance().GetAtlasInfo(fScrrenX, fScrrenY, aString, &fPosX, &fPosY, &dwTextColor, &dwGuildID);

  000a3	8d 45 b8	 lea	 eax, DWORD PTR _dwGuildID$[ebp]
  000a6	50		 push	 eax
  000a7	8d 45 b4	 lea	 eax, DWORD PTR _dwTextColor$[ebp]
  000aa	50		 push	 eax
  000ab	8d 45 c0	 lea	 eax, DWORD PTR _fPosY$[ebp]
  000ae	50		 push	 eax
  000af	8d 45 c8	 lea	 eax, DWORD PTR _fPosX$[ebp]
  000b2	50		 push	 eax
  000b3	8d 45 d8	 lea	 eax, DWORD PTR _aString$[ebp]
  000b6	50		 push	 eax
  000b7	51		 push	 ecx
  000b8	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _fScrrenY$[ebp]
  000bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c2	51		 push	 ecx
  000c3	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _fScrrenX$[ebp]
  000c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cd	8b 4d a8	 mov	 ecx, DWORD PTR $T3[ebp]
  000d0	e8 00 00 00 00	 call	 ?GetAtlasInfo@CPythonMiniMap@@QAE_NMMAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM1PAK2@Z ; CPythonMiniMap::GetAtlasInfo
  000d5	88 45 d7	 mov	 BYTE PTR _bFind$[ebp], al

; 204  : 	int iPosX, iPosY;
; 205  : 	PR_FLOAT_TO_INT(fPosX, iPosX);

  000d8	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _fPosX$[ebp]
  000dd	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm0
  000e5	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  000eb	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  000f1	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  000f9	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00100	76 0b		 jbe	 SHORT $LN5@miniMapGet
  00102	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00107	48		 dec	 eax
  00108	89 45 c4	 mov	 DWORD PTR tv129[ebp], eax
  0010b	eb 08		 jmp	 SHORT $LN6@miniMapGet
$LN5@miniMapGet:
  0010d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00112	89 45 c4	 mov	 DWORD PTR tv129[ebp], eax
$LN6@miniMapGet:
  00115	8b 45 c4	 mov	 eax, DWORD PTR tv129[ebp]
  00118	89 45 cc	 mov	 DWORD PTR _iPosX$[ebp], eax

; 206  : 	PR_FLOAT_TO_INT(fPosY, iPosY);

  0011b	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _fPosY$[ebp]
  00120	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm0
  00128	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  0012e	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  00134	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  0013c	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00143	76 0b		 jbe	 SHORT $LN7@miniMapGet
  00145	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  0014a	48		 dec	 eax
  0014b	89 45 bc	 mov	 DWORD PTR tv133[ebp], eax
  0014e	eb 08		 jmp	 SHORT $LN8@miniMapGet
$LN7@miniMapGet:
  00150	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00155	89 45 bc	 mov	 DWORD PTR tv133[ebp], eax
$LN8@miniMapGet:
  00158	8b 45 bc	 mov	 eax, DWORD PTR tv133[ebp]
  0015b	89 45 d0	 mov	 DWORD PTR _iPosY$[ebp], eax

; 207  : 	iPosX /= 100;

  0015e	8b 45 cc	 mov	 eax, DWORD PTR _iPosX$[ebp]
  00161	99		 cdq
  00162	6a 64		 push	 100			; 00000064H
  00164	59		 pop	 ecx
  00165	f7 f9		 idiv	 ecx
  00167	89 45 cc	 mov	 DWORD PTR _iPosX$[ebp], eax

; 208  : 	iPosY /= 100;

  0016a	8b 45 d0	 mov	 eax, DWORD PTR _iPosY$[ebp]
  0016d	99		 cdq
  0016e	6a 64		 push	 100			; 00000064H
  00170	59		 pop	 ecx
  00171	f7 f9		 idiv	 ecx
  00173	89 45 d0	 mov	 DWORD PTR _iPosY$[ebp], eax

; 209  : 	return Py_BuildValue("isiili", (int)bFind, aString.c_str(), iPosX, iPosY, (signed) dwTextColor, dwGuildID);

  00176	ff 75 b8	 push	 DWORD PTR _dwGuildID$[ebp]
  00179	ff 75 b4	 push	 DWORD PTR _dwTextColor$[ebp]
  0017c	ff 75 d0	 push	 DWORD PTR _iPosY$[ebp]
  0017f	ff 75 cc	 push	 DWORD PTR _iPosX$[ebp]
  00182	8d 4d d8	 lea	 ecx, DWORD PTR _aString$[ebp]
  00185	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0018a	50		 push	 eax
  0018b	0f b6 45 d7	 movzx	 eax, BYTE PTR _bFind$[ebp]
  0018f	50		 push	 eax
  00190	68 00 00 00 00	 push	 OFFSET ??_C@_06NGPFBJMH@isiili@
  00195	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  0019b	83 c4 1c	 add	 esp, 28			; 0000001cH
  0019e	89 45 a4	 mov	 DWORD PTR $T2[ebp], eax
  001a1	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2801 :         _Tidy_deallocate();

  001a5	8d 4d d8	 lea	 ecx, DWORD PTR _aString$[ebp]
  001a8	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp

; 209  : 	return Py_BuildValue("isiili", (int)bFind, aString.c_str(), iPosX, iPosY, (signed) dwTextColor, dwGuildID);

  001ad	8b 45 a4	 mov	 eax, DWORD PTR $T2[ebp]
$LN1@miniMapGet:

; 210  : }

  001b0	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001b3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001ba	59		 pop	 ecx
  001bb	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001be	33 cd		 xor	 ecx, ebp
  001c0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001c5	c9		 leave
  001c6	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?miniMapGetAtlasInfo@@YAPAU_object@@PAU1@0@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _aString$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?miniMapGetAtlasInfo@@YAPAU_object@@PAU1@0@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a ac	 mov	 ecx, DWORD PTR [edx-84]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?miniMapGetAtlasInfo@@YAPAU_object@@PAU1@0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?miniMapGetAtlasInfo@@YAPAU_object@@PAU1@0@Z ENDP	; miniMapGetAtlasInfo
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapIsAtlas@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_isData$ = -1						; size = 1
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapIsAtlas@@YAPAU_object@@PAU1@0@Z PROC		; miniMapIsAtlas, COMDAT

; 183  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00005	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  0000a	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp

; 184  : 	bool isData = CPythonMiniMap::Instance().IsAtlas();

  0000d	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00010	e8 00 00 00 00	 call	 ?IsAtlas@CPythonMiniMap@@QAE_NXZ ; CPythonMiniMap::IsAtlas
  00015	88 45 ff	 mov	 BYTE PTR _isData$[ebp], al

; 185  : 	return Py_BuildValue("b", isData);

  00018	0f b6 45 ff	 movzx	 eax, BYTE PTR _isData$[ebp]
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_01OJONOECF@b@
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00028	59		 pop	 ecx
  00029	59		 pop	 ecx

; 186  : }

  0002a	c9		 leave
  0002b	c3		 ret	 0
?miniMapIsAtlas@@YAPAU_object@@PAU1@0@Z ENDP		; miniMapIsAtlas
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapisShowAtlas@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_bShow$ = -1						; size = 1
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapisShowAtlas@@YAPAU_object@@PAU1@0@Z PROC	; miniMapisShowAtlas, COMDAT

; 177  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00005	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  0000a	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp

; 178  : 	bool bShow = CPythonMiniMap::Instance().CanShowAtlas();

  0000d	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00010	e8 00 00 00 00	 call	 ?CanShowAtlas@CPythonMiniMap@@QAE_NXZ ; CPythonMiniMap::CanShowAtlas
  00015	88 45 ff	 mov	 BYTE PTR _bShow$[ebp], al

; 179  : 	return Py_BuildValue("b", bShow);

  00018	0f b6 45 ff	 movzx	 eax, BYTE PTR _bShow$[ebp]
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_01OJONOECF@b@
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00028	59		 pop	 ecx
  00029	59		 pop	 ecx

; 180  : }

  0002a	c9		 leave
  0002b	c3		 ret	 0
?miniMapisShowAtlas@@YAPAU_object@@PAU1@0@Z ENDP	; miniMapisShowAtlas
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapHideAtlas@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapHideAtlas@@YAPAU_object@@PAU1@0@Z PROC		; miniMapHideAtlas, COMDAT

; 171  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 172  : 	CPythonMiniMap::Instance().HideAtlas();

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  00009	e8 00 00 00 00	 call	 ?HideAtlas@CPythonMiniMap@@QAEXXZ ; CPythonMiniMap::HideAtlas

; 173  : 	return Py_BuildNone();

  0000e	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone

; 174  : }

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?miniMapHideAtlas@@YAPAU_object@@PAU1@0@Z ENDP		; miniMapHideAtlas
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapShowAtlas@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapShowAtlas@@YAPAU_object@@PAU1@0@Z PROC		; miniMapShowAtlas, COMDAT

; 165  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 166  : 	CPythonMiniMap::Instance().ShowAtlas();

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  00009	e8 00 00 00 00	 call	 ?ShowAtlas@CPythonMiniMap@@QAEXXZ ; CPythonMiniMap::ShowAtlas

; 167  : 	return Py_BuildNone();

  0000e	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone

; 168  : }

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?miniMapShowAtlas@@YAPAU_object@@PAU1@0@Z ENDP		; miniMapShowAtlas
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapRenderAtlas@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_fScrrenX$ = -8						; size = 4
_fScrrenY$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapRenderAtlas@@YAPAU_object@@PAU1@0@Z PROC	; miniMapRenderAtlas, COMDAT

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx

; 152  : 	float fScrrenX;
; 153  : 	if (!PyTuple_GetFloat(poArgs, 0, &fScrrenX))

  00005	8d 45 f8	 lea	 eax, DWORD PTR _fScrrenX$[ebp]
  00008	50		 push	 eax
  00009	6a 00		 push	 0
  0000b	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000e	e8 00 00 00 00	 call	 ?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z ; PyTuple_GetFloat
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH
  00016	0f b6 c0	 movzx	 eax, al
  00019	85 c0		 test	 eax, eax
  0001b	75 0a		 jne	 SHORT $LN2@miniMapRen

; 154  : 		return Py_BuildException();

  0001d	6a 00		 push	 0
  0001f	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00024	59		 pop	 ecx
  00025	eb 48		 jmp	 SHORT $LN1@miniMapRen
$LN2@miniMapRen:

; 155  : 	
; 156  : 	float fScrrenY;
; 157  : 	if (!PyTuple_GetFloat(poArgs, 1, &fScrrenY))

  00027	8d 45 fc	 lea	 eax, DWORD PTR _fScrrenY$[ebp]
  0002a	50		 push	 eax
  0002b	6a 01		 push	 1
  0002d	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00030	e8 00 00 00 00	 call	 ?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z ; PyTuple_GetFloat
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH
  00038	0f b6 c0	 movzx	 eax, al
  0003b	85 c0		 test	 eax, eax
  0003d	75 0a		 jne	 SHORT $LN3@miniMapRen

; 158  : 		return Py_BuildException();

  0003f	6a 00		 push	 0
  00041	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00046	59		 pop	 ecx
  00047	eb 26		 jmp	 SHORT $LN1@miniMapRen
$LN3@miniMapRen:

; 159  : 	
; 160  : 	CPythonMiniMap::Instance().RenderAtlas(fScrrenX, fScrrenY);

  00049	51		 push	 ecx
  0004a	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fScrrenY$[ebp]
  0004f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00054	51		 push	 ecx
  00055	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _fScrrenX$[ebp]
  0005a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  00065	e8 00 00 00 00	 call	 ?RenderAtlas@CPythonMiniMap@@QAEXMM@Z ; CPythonMiniMap::RenderAtlas

; 161  : 	return Py_BuildNone();

  0006a	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone
$LN1@miniMapRen:

; 162  : }

  0006f	c9		 leave
  00070	c3		 ret	 0
?miniMapRenderAtlas@@YAPAU_object@@PAU1@0@Z ENDP	; miniMapRenderAtlas
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapUpdateAtlas@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapUpdateAtlas@@YAPAU_object@@PAU1@0@Z PROC	; miniMapUpdateAtlas, COMDAT

; 145  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 146  : 	CPythonMiniMap::Instance().UpdateAtlas();

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  00009	e8 00 00 00 00	 call	 ?UpdateAtlas@CPythonMiniMap@@QAEXXZ ; CPythonMiniMap::UpdateAtlas

; 147  : 	return Py_BuildNone();

  0000e	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone

; 148  : }

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?miniMapUpdateAtlas@@YAPAU_object@@PAU1@0@Z ENDP	; miniMapUpdateAtlas
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapLoadAtlas@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapLoadAtlas@@YAPAU_object@@PAU1@0@Z PROC		; miniMapLoadAtlas, COMDAT

; 138  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  00009	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp

; 139  : 	if (!CPythonMiniMap::Instance().LoadAtlas())

  0000c	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  0000f	e8 00 00 00 00	 call	 ?LoadAtlas@CPythonMiniMap@@QAE_NXZ ; CPythonMiniMap::LoadAtlas
  00014	0f b6 c0	 movzx	 eax, al
  00017	85 c0		 test	 eax, eax
  00019	75 0b		 jne	 SHORT $LN2@miniMapLoa

; 140  : 		TraceError("CPythonMiniMap::Instance().LoadAtlas() Failed");

  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@JOBACLFH@CPythonMiniMap?3?3Instance?$CI?$CJ?4Load@
  00020	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00025	59		 pop	 ecx
$LN2@miniMapLoa:

; 141  : 	return Py_BuildNone();

  00026	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone

; 142  : }

  0002b	c9		 leave
  0002c	c3		 ret	 0
?miniMapLoadAtlas@@YAPAU_object@@PAU1@0@Z ENDP		; miniMapLoadAtlas
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapGetInfo@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
$T2 = -88						; size = 4
_dwTextColor$ = -84					; size = 4
_fPosY$ = -80						; size = 4
_fPosX$ = -76						; size = 4
$T3 = -72						; size = 4
_fScrrenX$ = -68					; size = 4
_fScrrenY$ = -64					; size = 4
tv131 = -60						; size = 4
tv95 = -56						; size = 4
_iPosX$ = -52						; size = 4
_iPosY$ = -48						; size = 4
_bFind$ = -41						; size = 1
_aString$ = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapGetInfo@@YAPAU_object@@PAU1@0@Z PROC		; miniMapGetInfo, COMDAT

; 114  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?miniMapGetInfo@@YAPAU_object@@PAU1@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 115  : 	float fScrrenX;
; 116  : 	if (!PyTuple_GetFloat(poArgs, 0, &fScrrenX))

  00028	8d 45 bc	 lea	 eax, DWORD PTR _fScrrenX$[ebp]
  0002b	50		 push	 eax
  0002c	6a 00		 push	 0
  0002e	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00031	e8 00 00 00 00	 call	 ?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z ; PyTuple_GetFloat
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
  00039	0f b6 c0	 movzx	 eax, al
  0003c	85 c0		 test	 eax, eax
  0003e	75 0d		 jne	 SHORT $LN2@miniMapGet

; 117  : 		return Py_BuildException();

  00040	6a 00		 push	 0
  00042	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00047	59		 pop	 ecx
  00048	e9 3f 01 00 00	 jmp	 $LN1@miniMapGet
$LN2@miniMapGet:

; 118  : 	
; 119  : 	float fScrrenY;
; 120  : 	if (!PyTuple_GetFloat(poArgs, 1, &fScrrenY))

  0004d	8d 45 c0	 lea	 eax, DWORD PTR _fScrrenY$[ebp]
  00050	50		 push	 eax
  00051	6a 01		 push	 1
  00053	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00056	e8 00 00 00 00	 call	 ?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z ; PyTuple_GetFloat
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	0f b6 c0	 movzx	 eax, al
  00061	85 c0		 test	 eax, eax
  00063	75 0d		 jne	 SHORT $LN3@miniMapGet

; 121  : 		return Py_BuildException();

  00065	6a 00		 push	 0
  00067	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  0006c	59		 pop	 ecx
  0006d	e9 1a 01 00 00	 jmp	 $LN1@miniMapGet
$LN3@miniMapGet:

; 122  : 
; 123  : 	std::string aString;

  00072	8d 4d d8	 lea	 ecx, DWORD PTR _aString$[ebp]
  00075	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0007a	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  00083	89 45 b8	 mov	 DWORD PTR $T3[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp

; 126  : 	bool bFind = CPythonMiniMap::Instance().GetPickedInstanceInfo(fScrrenX, fScrrenY, aString, &fPosX, &fPosY, &dwTextColor);

  00086	8d 45 ac	 lea	 eax, DWORD PTR _dwTextColor$[ebp]
  00089	50		 push	 eax
  0008a	8d 45 b0	 lea	 eax, DWORD PTR _fPosY$[ebp]
  0008d	50		 push	 eax
  0008e	8d 45 b4	 lea	 eax, DWORD PTR _fPosX$[ebp]
  00091	50		 push	 eax
  00092	8d 45 d8	 lea	 eax, DWORD PTR _aString$[ebp]
  00095	50		 push	 eax
  00096	51		 push	 ecx
  00097	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _fScrrenY$[ebp]
  0009c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a1	51		 push	 ecx
  000a2	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _fScrrenX$[ebp]
  000a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ac	8b 4d b8	 mov	 ecx, DWORD PTR $T3[ebp]
  000af	e8 00 00 00 00	 call	 ?GetPickedInstanceInfo@CPythonMiniMap@@QAE_NMMAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAM1PAK@Z ; CPythonMiniMap::GetPickedInstanceInfo
  000b4	88 45 d7	 mov	 BYTE PTR _bFind$[ebp], al

; 127  : 	int iPosX, iPosY;
; 128  : 	PR_FLOAT_TO_INT(fPosX, iPosX);

  000b7	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _fPosX$[ebp]
  000bc	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm0
  000c4	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  000ca	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  000d0	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  000d8	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  000df	76 0b		 jbe	 SHORT $LN5@miniMapGet
  000e1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  000e6	48		 dec	 eax
  000e7	89 45 c8	 mov	 DWORD PTR tv95[ebp], eax
  000ea	eb 08		 jmp	 SHORT $LN6@miniMapGet
$LN5@miniMapGet:
  000ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  000f1	89 45 c8	 mov	 DWORD PTR tv95[ebp], eax
$LN6@miniMapGet:
  000f4	8b 45 c8	 mov	 eax, DWORD PTR tv95[ebp]
  000f7	89 45 cc	 mov	 DWORD PTR _iPosX$[ebp], eax

; 129  : 	PR_FLOAT_TO_INT(fPosY, iPosY);

  000fa	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _fPosY$[ebp]
  000ff	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?PR_FCNV@@3MA, xmm0
  00107	d9 05 00 00 00
	00		 fld	 DWORD PTR ?PR_FCNV@@3MA	; PR_FCNV
  0010d	db 1d 00 00 00
	00		 fistp	 DWORD PTR ?PR_ICNV@@3JA
  00113	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  0011b	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?PR_FCNV@@3MA
  00122	76 0b		 jbe	 SHORT $LN7@miniMapGet
  00124	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00129	48		 dec	 eax
  0012a	89 45 c4	 mov	 DWORD PTR tv131[ebp], eax
  0012d	eb 08		 jmp	 SHORT $LN8@miniMapGet
$LN7@miniMapGet:
  0012f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PR_ICNV@@3JA ; PR_ICNV
  00134	89 45 c4	 mov	 DWORD PTR tv131[ebp], eax
$LN8@miniMapGet:
  00137	8b 45 c4	 mov	 eax, DWORD PTR tv131[ebp]
  0013a	89 45 d0	 mov	 DWORD PTR _iPosY$[ebp], eax

; 130  : 	iPosX /= 100;

  0013d	8b 45 cc	 mov	 eax, DWORD PTR _iPosX$[ebp]
  00140	99		 cdq
  00141	6a 64		 push	 100			; 00000064H
  00143	59		 pop	 ecx
  00144	f7 f9		 idiv	 ecx
  00146	89 45 cc	 mov	 DWORD PTR _iPosX$[ebp], eax

; 131  : 	iPosY /= 100;

  00149	8b 45 d0	 mov	 eax, DWORD PTR _iPosY$[ebp]
  0014c	99		 cdq
  0014d	6a 64		 push	 100			; 00000064H
  0014f	59		 pop	 ecx
  00150	f7 f9		 idiv	 ecx
  00152	89 45 d0	 mov	 DWORD PTR _iPosY$[ebp], eax

; 132  : 	return Py_BuildValue("isiil", (int)bFind, aString.c_str(), iPosX, iPosY, (signed) dwTextColor);

  00155	ff 75 ac	 push	 DWORD PTR _dwTextColor$[ebp]
  00158	ff 75 d0	 push	 DWORD PTR _iPosY$[ebp]
  0015b	ff 75 cc	 push	 DWORD PTR _iPosX$[ebp]
  0015e	8d 4d d8	 lea	 ecx, DWORD PTR _aString$[ebp]
  00161	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00166	50		 push	 eax
  00167	0f b6 45 d7	 movzx	 eax, BYTE PTR _bFind$[ebp]
  0016b	50		 push	 eax
  0016c	68 00 00 00 00	 push	 OFFSET ??_C@_05BHNEPGFM@isiil@
  00171	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00177	83 c4 18	 add	 esp, 24			; 00000018H
  0017a	89 45 a8	 mov	 DWORD PTR $T2[ebp], eax
  0017d	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2801 :         _Tidy_deallocate();

  00181	8d 4d d8	 lea	 ecx, DWORD PTR _aString$[ebp]
  00184	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp

; 132  : 	return Py_BuildValue("isiil", (int)bFind, aString.c_str(), iPosX, iPosY, (signed) dwTextColor);

  00189	8b 45 a8	 mov	 eax, DWORD PTR $T2[ebp]
$LN1@miniMapGet:

; 133  : }

  0018c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0018f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00196	59		 pop	 ecx
  00197	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0019a	33 cd		 xor	 ecx, ebp
  0019c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a1	c9		 leave
  001a2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?miniMapGetInfo@@YAPAU_object@@PAU1@0@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _aString$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?miniMapGetInfo@@YAPAU_object@@PAU1@0@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a b0	 mov	 ecx, DWORD PTR [edx-80]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?miniMapGetInfo@@YAPAU_object@@PAU1@0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?miniMapGetInfo@@YAPAU_object@@PAU1@0@Z ENDP		; miniMapGetInfo
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapScaleDown@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapScaleDown@@YAPAU_object@@PAU1@0@Z PROC		; miniMapScaleDown, COMDAT

; 108  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 109  : 	CPythonMiniMap::Instance().ScaleDown();

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  00009	e8 00 00 00 00	 call	 ?ScaleDown@CPythonMiniMap@@QAEXXZ ; CPythonMiniMap::ScaleDown

; 110  : 	return Py_BuildNone();

  0000e	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone

; 111  : }

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?miniMapScaleDown@@YAPAU_object@@PAU1@0@Z ENDP		; miniMapScaleDown
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapScaleUp@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapScaleUp@@YAPAU_object@@PAU1@0@Z PROC		; miniMapScaleUp, COMDAT

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 103  : 	CPythonMiniMap::Instance().ScaleUp();

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  00009	e8 00 00 00 00	 call	 ?ScaleUp@CPythonMiniMap@@QAEXXZ ; CPythonMiniMap::ScaleUp

; 104  : 	return Py_BuildNone();

  0000e	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone

; 105  : }

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?miniMapScaleUp@@YAPAU_object@@PAU1@0@Z ENDP		; miniMapScaleUp
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapisShow@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_bShow$ = -1						; size = 1
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapisShow@@YAPAU_object@@PAU1@0@Z PROC		; miniMapisShow, COMDAT

; 96   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 27   : 		return (*ms_singleton);

  00005	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  0000a	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp

; 97   : 	bool bShow = CPythonMiniMap::Instance().CanShow();

  0000d	8b 4d f8	 mov	 ecx, DWORD PTR $T1[ebp]
  00010	e8 00 00 00 00	 call	 ?CanShow@CPythonMiniMap@@QAE_NXZ ; CPythonMiniMap::CanShow
  00015	88 45 ff	 mov	 BYTE PTR _bShow$[ebp], al

; 98   : 	return Py_BuildValue("b", bShow);

  00018	0f b6 45 ff	 movzx	 eax, BYTE PTR _bShow$[ebp]
  0001c	50		 push	 eax
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_01OJONOECF@b@
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_BuildValue
  00028	59		 pop	 ecx
  00029	59		 pop	 ecx

; 99   : }

  0002a	c9		 leave
  0002b	c3		 ret	 0
?miniMapisShow@@YAPAU_object@@PAU1@0@Z ENDP		; miniMapisShow
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapHide@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapHide@@YAPAU_object@@PAU1@0@Z PROC		; miniMapHide, COMDAT

; 90   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 91   : 	CPythonMiniMap::Instance().Hide();

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  00009	e8 00 00 00 00	 call	 ?Hide@CPythonMiniMap@@QAEXXZ ; CPythonMiniMap::Hide

; 92   : 	return Py_BuildNone();

  0000e	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone

; 93   : }

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?miniMapHide@@YAPAU_object@@PAU1@0@Z ENDP		; miniMapHide
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapShow@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapShow@@YAPAU_object@@PAU1@0@Z PROC		; miniMapShow, COMDAT

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 85   : 	CPythonMiniMap::Instance().Show();

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  00009	e8 00 00 00 00	 call	 ?Show@CPythonMiniMap@@QAEXXZ ; CPythonMiniMap::Show

; 86   : 	return Py_BuildNone();

  0000e	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone

; 87   : }

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?miniMapShow@@YAPAU_object@@PAU1@0@Z ENDP		; miniMapShow
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapRender@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_fScrrenX$ = -8						; size = 4
_fScrrenY$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapRender@@YAPAU_object@@PAU1@0@Z PROC		; miniMapRender, COMDAT

; 70   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx

; 71   : 	float fScrrenX;
; 72   : 	if (!PyTuple_GetFloat(poArgs, 0, &fScrrenX))

  00005	8d 45 f8	 lea	 eax, DWORD PTR _fScrrenX$[ebp]
  00008	50		 push	 eax
  00009	6a 00		 push	 0
  0000b	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000e	e8 00 00 00 00	 call	 ?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z ; PyTuple_GetFloat
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH
  00016	0f b6 c0	 movzx	 eax, al
  00019	85 c0		 test	 eax, eax
  0001b	75 0a		 jne	 SHORT $LN2@miniMapRen

; 73   : 		return Py_BuildException();

  0001d	6a 00		 push	 0
  0001f	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00024	59		 pop	 ecx
  00025	eb 48		 jmp	 SHORT $LN1@miniMapRen
$LN2@miniMapRen:

; 74   : 
; 75   : 	float fScrrenY;
; 76   : 	if (!PyTuple_GetFloat(poArgs, 1, &fScrrenY))

  00027	8d 45 fc	 lea	 eax, DWORD PTR _fScrrenY$[ebp]
  0002a	50		 push	 eax
  0002b	6a 01		 push	 1
  0002d	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00030	e8 00 00 00 00	 call	 ?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z ; PyTuple_GetFloat
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH
  00038	0f b6 c0	 movzx	 eax, al
  0003b	85 c0		 test	 eax, eax
  0003d	75 0a		 jne	 SHORT $LN3@miniMapRen

; 77   : 		return Py_BuildException();

  0003f	6a 00		 push	 0
  00041	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00046	59		 pop	 ecx
  00047	eb 26		 jmp	 SHORT $LN1@miniMapRen
$LN3@miniMapRen:

; 78   : 
; 79   : 	CPythonMiniMap::Instance().Render(fScrrenX, fScrrenY);

  00049	51		 push	 ecx
  0004a	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fScrrenY$[ebp]
  0004f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00054	51		 push	 ecx
  00055	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _fScrrenX$[ebp]
  0005a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  00065	e8 00 00 00 00	 call	 ?Render@CPythonMiniMap@@QAEXMM@Z ; CPythonMiniMap::Render

; 80   : 	return Py_BuildNone();

  0006a	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone
$LN1@miniMapRen:

; 81   : }

  0006f	c9		 leave
  00070	c3		 ret	 0
?miniMapRender@@YAPAU_object@@PAU1@0@Z ENDP		; miniMapRender
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapUpdate@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_fCenterX$ = -8						; size = 4
_fCenterY$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapUpdate@@YAPAU_object@@PAU1@0@Z PROC		; miniMapUpdate, COMDAT

; 56   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx

; 57   : 	float fCenterX;
; 58   : 	if (!PyTuple_GetFloat(poArgs, 0, &fCenterX))

  00005	8d 45 f8	 lea	 eax, DWORD PTR _fCenterX$[ebp]
  00008	50		 push	 eax
  00009	6a 00		 push	 0
  0000b	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000e	e8 00 00 00 00	 call	 ?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z ; PyTuple_GetFloat
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH
  00016	0f b6 c0	 movzx	 eax, al
  00019	85 c0		 test	 eax, eax
  0001b	75 0a		 jne	 SHORT $LN2@miniMapUpd

; 59   : 		return Py_BuildException();

  0001d	6a 00		 push	 0
  0001f	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00024	59		 pop	 ecx
  00025	eb 48		 jmp	 SHORT $LN1@miniMapUpd
$LN2@miniMapUpd:

; 60   : 
; 61   : 	float fCenterY;
; 62   : 	if (!PyTuple_GetFloat(poArgs, 1, &fCenterY))

  00027	8d 45 fc	 lea	 eax, DWORD PTR _fCenterY$[ebp]
  0002a	50		 push	 eax
  0002b	6a 01		 push	 1
  0002d	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00030	e8 00 00 00 00	 call	 ?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z ; PyTuple_GetFloat
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH
  00038	0f b6 c0	 movzx	 eax, al
  0003b	85 c0		 test	 eax, eax
  0003d	75 0a		 jne	 SHORT $LN3@miniMapUpd

; 63   : 		return Py_BuildException();

  0003f	6a 00		 push	 0
  00041	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00046	59		 pop	 ecx
  00047	eb 26		 jmp	 SHORT $LN1@miniMapUpd
$LN3@miniMapUpd:

; 64   : 
; 65   : 	CPythonMiniMap::Instance().Update(fCenterX, fCenterY);

  00049	51		 push	 ecx
  0004a	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fCenterY$[ebp]
  0004f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00054	51		 push	 ecx
  00055	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _fCenterX$[ebp]
  0005a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  00065	e8 00 00 00 00	 call	 ?Update@CPythonMiniMap@@QAEXMM@Z ; CPythonMiniMap::Update

; 66   : 	return Py_BuildNone();

  0006a	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone
$LN1@miniMapUpd:

; 67   : }

  0006f	c9		 leave
  00070	c3		 ret	 0
?miniMapUpdate@@YAPAU_object@@PAU1@0@Z ENDP		; miniMapUpdate
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapCreate@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapCreate@@YAPAU_object@@PAU1@0@Z PROC		; miniMapCreate, COMDAT

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 51   : 	CPythonMiniMap::Instance().Create();

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  00009	e8 00 00 00 00	 call	 ?Create@CPythonMiniMap@@QAE_NXZ ; CPythonMiniMap::Create

; 52   : 	return Py_BuildNone();

  0000e	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone

; 53   : }

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?miniMapCreate@@YAPAU_object@@PAU1@0@Z ENDP		; miniMapCreate
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapDestroy@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapDestroy@@YAPAU_object@@PAU1@0@Z PROC		; miniMapDestroy, COMDAT

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 45   : 	CPythonMiniMap::Instance().Destroy();

  00003	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  00009	e8 00 00 00 00	 call	 ?Destroy@CPythonMiniMap@@QAEXXZ ; CPythonMiniMap::Destroy

; 46   : 	return Py_BuildNone();

  0000e	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone

; 47   : }

  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?miniMapDestroy@@YAPAU_object@@PAU1@0@Z ENDP		; miniMapDestroy
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapSetMiniMapSize@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_fWidth$ = -8						; size = 4
_fHeight$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapSetMiniMapSize@@YAPAU_object@@PAU1@0@Z PROC	; miniMapSetMiniMapSize, COMDAT

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx

; 31   : 	float fWidth;
; 32   : 	if (!PyTuple_GetFloat(poArgs, 0, &fWidth))

  00005	8d 45 f8	 lea	 eax, DWORD PTR _fWidth$[ebp]
  00008	50		 push	 eax
  00009	6a 00		 push	 0
  0000b	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000e	e8 00 00 00 00	 call	 ?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z ; PyTuple_GetFloat
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH
  00016	0f b6 c0	 movzx	 eax, al
  00019	85 c0		 test	 eax, eax
  0001b	75 0a		 jne	 SHORT $LN2@miniMapSet

; 33   : 		return Py_BuildException();

  0001d	6a 00		 push	 0
  0001f	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00024	59		 pop	 ecx
  00025	eb 48		 jmp	 SHORT $LN1@miniMapSet
$LN2@miniMapSet:

; 34   : 
; 35   : 	float fHeight;
; 36   : 	if (!PyTuple_GetFloat(poArgs, 1, &fHeight))

  00027	8d 45 fc	 lea	 eax, DWORD PTR _fHeight$[ebp]
  0002a	50		 push	 eax
  0002b	6a 01		 push	 1
  0002d	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00030	e8 00 00 00 00	 call	 ?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z ; PyTuple_GetFloat
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH
  00038	0f b6 c0	 movzx	 eax, al
  0003b	85 c0		 test	 eax, eax
  0003d	75 0a		 jne	 SHORT $LN3@miniMapSet

; 37   : 		return Py_BuildException();

  0003f	6a 00		 push	 0
  00041	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00046	59		 pop	 ecx
  00047	eb 26		 jmp	 SHORT $LN1@miniMapSet
$LN3@miniMapSet:

; 38   : 
; 39   : 	CPythonMiniMap::Instance().SetMiniMapSize(fWidth, fHeight);

  00049	51		 push	 ecx
  0004a	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fHeight$[ebp]
  0004f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00054	51		 push	 ecx
  00055	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _fWidth$[ebp]
  0005a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  00065	e8 00 00 00 00	 call	 ?SetMiniMapSize@CPythonMiniMap@@QAEXMM@Z ; CPythonMiniMap::SetMiniMapSize

; 40   : 	return Py_BuildNone();

  0006a	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone
$LN1@miniMapSet:

; 41   : }

  0006f	c9		 leave
  00070	c3		 ret	 0
?miniMapSetMiniMapSize@@YAPAU_object@@PAU1@0@Z ENDP	; miniMapSetMiniMapSize
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapSetCenterPosition@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_fCenterX$ = -8						; size = 4
_fCenterY$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapSetCenterPosition@@YAPAU_object@@PAU1@0@Z PROC	; miniMapSetCenterPosition, COMDAT

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx

; 16   : 	float fCenterX;
; 17   : 	if (!PyTuple_GetFloat(poArgs, 0, &fCenterX))

  00005	8d 45 f8	 lea	 eax, DWORD PTR _fCenterX$[ebp]
  00008	50		 push	 eax
  00009	6a 00		 push	 0
  0000b	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000e	e8 00 00 00 00	 call	 ?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z ; PyTuple_GetFloat
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH
  00016	0f b6 c0	 movzx	 eax, al
  00019	85 c0		 test	 eax, eax
  0001b	75 0a		 jne	 SHORT $LN2@miniMapSet

; 18   : 		return Py_BuildException();

  0001d	6a 00		 push	 0
  0001f	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00024	59		 pop	 ecx
  00025	eb 48		 jmp	 SHORT $LN1@miniMapSet
$LN2@miniMapSet:

; 19   : 	
; 20   : 	float fCenterY;
; 21   : 	if (!PyTuple_GetFloat(poArgs, 1, &fCenterY))

  00027	8d 45 fc	 lea	 eax, DWORD PTR _fCenterY$[ebp]
  0002a	50		 push	 eax
  0002b	6a 01		 push	 1
  0002d	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  00030	e8 00 00 00 00	 call	 ?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z ; PyTuple_GetFloat
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH
  00038	0f b6 c0	 movzx	 eax, al
  0003b	85 c0		 test	 eax, eax
  0003d	75 0a		 jne	 SHORT $LN3@miniMapSet

; 22   : 		return Py_BuildException();

  0003f	6a 00		 push	 0
  00041	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00046	59		 pop	 ecx
  00047	eb 26		 jmp	 SHORT $LN1@miniMapSet
$LN3@miniMapSet:

; 23   : 	
; 24   : 	CPythonMiniMap::Instance().SetCenterPosition(fCenterX, fCenterY);

  00049	51		 push	 ecx
  0004a	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fCenterY$[ebp]
  0004f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00054	51		 push	 ecx
  00055	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _fCenterX$[ebp]
  0005a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  00065	e8 00 00 00 00	 call	 ?SetCenterPosition@CPythonMiniMap@@QAEXMM@Z ; CPythonMiniMap::SetCenterPosition

; 25   : 	return Py_BuildNone();

  0006a	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone
$LN1@miniMapSet:

; 26   : }

  0006f	c9		 leave
  00070	c3		 ret	 0
?miniMapSetCenterPosition@@YAPAU_object@@PAU1@0@Z ENDP	; miniMapSetCenterPosition
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?miniMapSetScale@@YAPAU_object@@PAU1@0@Z
_TEXT	SEGMENT
_fScale$ = -4						; size = 4
_poSelf$ = 8						; size = 4
_poArgs$ = 12						; size = 4
?miniMapSetScale@@YAPAU_object@@PAU1@0@Z PROC		; miniMapSetScale, COMDAT

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 6    : 	float fScale;
; 7    : 	if (!PyTuple_GetFloat(poArgs, 0, &fScale))

  00004	8d 45 fc	 lea	 eax, DWORD PTR _fScale$[ebp]
  00007	50		 push	 eax
  00008	6a 00		 push	 0
  0000a	ff 75 0c	 push	 DWORD PTR _poArgs$[ebp]
  0000d	e8 00 00 00 00	 call	 ?PyTuple_GetFloat@@YA_NPAU_object@@HPAM@Z ; PyTuple_GetFloat
  00012	83 c4 0c	 add	 esp, 12			; 0000000cH
  00015	0f b6 c0	 movzx	 eax, al
  00018	85 c0		 test	 eax, eax
  0001a	75 0a		 jne	 SHORT $LN2@miniMapSet

; 8    : 		return Py_BuildException();

  0001c	6a 00		 push	 0
  0001e	e8 00 00 00 00	 call	 ?Py_BuildException@@YAPAU_object@@PBDZZ ; Py_BuildException
  00023	59		 pop	 ecx
  00024	eb 1b		 jmp	 SHORT $LN1@miniMapSet
$LN2@miniMapSet:

; 9    : 
; 10   : 	CPythonMiniMap::Instance().SetScale(fScale);

  00026	51		 push	 ecx
  00027	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fScale$[ebp]
  0002c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00031	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCPythonMiniMap@@@@0PAVCPythonMiniMap@@A ; CSingleton<CPythonMiniMap>::ms_singleton
  00037	e8 00 00 00 00	 call	 ?SetScale@CPythonMiniMap@@QAEXM@Z ; CPythonMiniMap::SetScale

; 11   : 	return Py_BuildNone();

  0003c	e8 00 00 00 00	 call	 ?Py_BuildNone@@YAPAU_object@@XZ ; Py_BuildNone
$LN1@miniMapSet:

; 12   : }

  00041	c9		 leave
  00042	c3		 ret	 0
?miniMapSetScale@@YAPAU_object@@PAU1@0@Z ENDP		; miniMapSetScale
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Ptr$ = -12						; size = 4
__Block_size$ = -8					; size = 4
__Ptr_container$ = -4					; size = 4
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00006	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00009	83 c0 23	 add	 eax, 35			; 00000023H
  0000c	89 45 f8	 mov	 DWORD PTR __Block_size$[ebp], eax

; 116  :     if (_Block_size <= _Bytes) {

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __Block_size$[ebp]
  00012	3b 45 08	 cmp	 eax, DWORD PTR __Bytes$[ebp]
  00015	77 05		 ja	 SHORT $LN12@Allocate_m

; 117  :         _Throw_bad_array_new_length(); // add overflow

  00017	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN12@Allocate_m:

; 77   :         return ::operator new(_Bytes);

  0001c	ff 75 f8	 push	 DWORD PTR __Block_size$[ebp]
  0001f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00024	59		 pop	 ecx

; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00025	89 45 fc	 mov	 DWORD PTR __Ptr_container$[ebp], eax
$LN4@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00028	83 7d fc 00	 cmp	 DWORD PTR __Ptr_container$[ebp], 0
  0002c	74 02		 je	 SHORT $LN7@Allocate_m
  0002e	eb 09		 jmp	 SHORT $LN2@Allocate_m
$LN7@Allocate_m:
  00030	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
  00035	33 c0		 xor	 eax, eax
  00037	75 f7		 jne	 SHORT $LN7@Allocate_m
$LN2@Allocate_m:
  00039	33 c0		 xor	 eax, eax
  0003b	75 eb		 jne	 SHORT $LN4@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  0003d	8b 45 fc	 mov	 eax, DWORD PTR __Ptr_container$[ebp]
  00040	83 c0 23	 add	 eax, 35			; 00000023H
  00043	83 e0 e0	 and	 eax, -32		; ffffffe0H
  00046	89 45 f4	 mov	 DWORD PTR __Ptr$[ebp], eax

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00049	6a 04		 push	 4
  0004b	58		 pop	 eax
  0004c	6b c0 ff	 imul	 eax, eax, -1
  0004f	8b 4d f4	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00052	8b 55 fc	 mov	 edx, DWORD PTR __Ptr_container$[ebp]
  00055	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;

  00058	8b 45 f4	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN11@Allocate_m:

; 129  : }

  0005b	c9		 leave
  0005c	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	81 7d 08 00 10
	00 00		 cmp	 DWORD PTR __Bytes$[ebp], 4096 ; 00001000H
  0000a	72 0b		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000c	ff 75 08	 push	 DWORD PTR __Bytes$[ebp]
  0000f	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00014	59		 pop	 ecx
  00015	eb 13		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00017	83 7d 08 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0001b	74 0b		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001d	ff 75 08	 push	 DWORD PTR __Bytes$[ebp]
  00020	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00025	59		 pop	 ecx

; 206  :         return _Traits::_Allocate(_Bytes);

  00026	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00028	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 210  : }

  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00022	81 7d 0c 00 10
	00 00		 cmp	 DWORD PTR __Bytes$[ebp], 4096 ; 00001000H
  00029	72 0f		 jb	 SHORT $LN2@Deallocate

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0002b	8d 45 0c	 lea	 eax, DWORD PTR __Bytes$[ebp]
  0002e	50		 push	 eax
  0002f	8d 45 08	 lea	 eax, DWORD PTR __Ptr$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
  00038	59		 pop	 ecx
  00039	59		 pop	 ecx
$LN2@Deallocate:

; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  0003a	ff 75 0c	 push	 DWORD PTR __Bytes$[ebp]
  0003d	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00040	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00045	59		 pop	 ecx
  00046	59		 pop	 ecx

; 222  : }

  00047	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00051	59		 pop	 ecx
  00052	c9		 leave
  00053	c3		 ret	 0
  00054	cc		 int	 3
  00055	cc		 int	 3
  00056	cc		 int	 3
  00057	cc		 int	 3
  00058	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_new.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
$T3 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00006	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  00009	89 45 fc	 mov	 DWORD PTR $T3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_new.h

; 169  :         return _Where;

  0000c	8b 45 fc	 mov	 eax, DWORD PTR $T3[ebp]
  0000f	89 45 f8	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits

; 1443 :     return static_cast<_Ty&&>(_Arg);

  00012	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00015	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00018	8b 45 f8	 mov	 eax, DWORD PTR $T2[ebp]
  0001b	8b 4d f4	 mov	 ecx, DWORD PTR $T1[ebp]
  0001e	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00020	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  00022	c9		 leave
  00023	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@Z
_TEXT	SEGMENT
__Al$ = -40						; size = 4
__Ptr$ = -36						; size = 4
__Ptr$ = -32						; size = 4
$T1 = -28						; size = 4
__Old_capacity$ = -24					; size = 4
$T2 = -20						; size = 4
__New_capacity$ = -16					; size = 4
__New_ptr$ = -12					; size = 4
_this$ = -8						; size = 4
__Overflow_is_possible$3 = -2				; size = 1
$T4 = -1						; size = 1
__New_size$ = 8						; size = 4
__Fn$ = 12						; size = 1
_<_Args_0>$ = 16					; size = 4
??$_Reallocate_for@V<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_9366063389c5f42a00a5088cf24e69de>,char const *>, COMDAT
; _this$ = ecx

; 4302 :     basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 4303 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4304 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4305 :         if (_New_size > max_size()) {

  00009	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00011	39 45 08	 cmp	 DWORD PTR __New_size$[ebp], eax
  00014	76 05		 jbe	 SHORT $LN2@Reallocate

; 4306 :             _Xlen_string(); // result too long

  00016	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN2@Reallocate:

; 4307 :         }
; 4308 : 
; 4309 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

  0001b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  00021	89 45 e8	 mov	 DWORD PTR __Old_capacity$[ebp], eax

; 4310 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00024	ff 75 08	 push	 DWORD PTR __New_size$[ebp]
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  0002f	89 45 f0	 mov	 DWORD PTR __New_capacity$[ebp], eax

; 4409 :         return _Mypair._Get_first();

  00032	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  00035	89 45 e4	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4409 :         return _Mypair._Get_first();

  00038	8b 45 e4	 mov	 eax, DWORD PTR $T1[ebp]
  0003b	89 45 d8	 mov	 DWORD PTR __Al$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0003e	c6 45 fe 00	 mov	 BYTE PTR __Overflow_is_possible$3[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4312 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00042	8b 45 f0	 mov	 eax, DWORD PTR __New_capacity$[ebp]
  00045	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  0004c	59		 pop	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4312 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0004d	89 45 f4	 mov	 DWORD PTR __New_ptr$[ebp], eax

; 4313 :         _Mypair._Myval2._Orphan_all();
; 4314 :         _Mypair._Myval2._Mysize = _New_size;

  00050	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b 4d 08	 mov	 ecx, DWORD PTR __New_size$[ebp]
  00056	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 4315 :         _Mypair._Myval2._Myres  = _New_capacity;

  00059	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	8b 4d f0	 mov	 ecx, DWORD PTR __New_capacity$[ebp]
  0005f	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 4316 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

  00062	8b 45 f4	 mov	 eax, DWORD PTR __New_ptr$[ebp]
  00065	89 45 e0	 mov	 DWORD PTR __Ptr$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  00068	8b 45 e0	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0006b	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0006e	ff 75 08	 push	 DWORD PTR __New_size$[ebp]
  00071	ff 75 10	 push	 DWORD PTR _<_Args_0>$[ebp]
  00074	ff 75 ec	 push	 DWORD PTR $T2[ebp]
  00077	e8 00 00 00 00	 call	 _memcpy
  0007c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3056 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  0007f	c6 45 ff 00	 mov	 BYTE PTR $T4[ebp], 0

; 428  :         _Left = _Right;

  00083	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]
  00086	03 45 08	 add	 eax, DWORD PTR __New_size$[ebp]
  00089	8a 4d ff	 mov	 cl, BYTE PTR $T4[ebp]
  0008c	88 08		 mov	 BYTE PTR [eax], cl

; 4317 :         if (_BUF_SIZE <= _Old_capacity) {

  0008e	83 7d e8 10	 cmp	 DWORD PTR __Old_capacity$[ebp], 16 ; 00000010H
  00092	72 21		 jb	 SHORT $LN3@Reallocate

; 4318 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  00094	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00097	8b 00		 mov	 eax, DWORD PTR [eax]
  00099	89 45 dc	 mov	 DWORD PTR __Ptr$[ebp], eax
  0009c	8b 45 e8	 mov	 eax, DWORD PTR __Old_capacity$[ebp]
  0009f	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a0	50		 push	 eax
  000a1	ff 75 dc	 push	 DWORD PTR __Ptr$[ebp]
  000a4	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000a9	59		 pop	 ecx
  000aa	59		 pop	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4319 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000ab	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 4d f4	 mov	 ecx, DWORD PTR __New_ptr$[ebp]
  000b1	89 08		 mov	 DWORD PTR [eax], ecx

; 4320 :         } else {

  000b3	eb 0e		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4321 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000b5	8d 45 f4	 lea	 eax, DWORD PTR __New_ptr$[ebp]
  000b8	50		 push	 eax
  000b9	ff 75 f8	 push	 DWORD PTR _this$[ebp]
  000bc	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  000c1	59		 pop	 ecx
  000c2	59		 pop	 ecx
$LN4@Reallocate:

; 4322 :         }
; 4323 : 
; 4324 :         return *this;

  000c3	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@Reallocate:

; 4325 :     }

  000c6	c9		 leave
  000c7	c2 0c 00	 ret	 12			; 0000000cH
??$_Reallocate_for@V<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_9366063389c5f42a00a5088cf24e69de>,char const *>
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 270  : /* _CONSTEXPR20_DYNALLOC */ void _Destroy_in_place(_Ty& _Obj) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 271  : #if _HAS_IF_CONSTEXPR
; 272  :     if constexpr (is_array_v<_Ty>) {
; 273  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 274  :     } else
; 275  : #endif // _HAS_IF_CONSTEXPR
; 276  :     {
; 277  :         _Obj.~_Ty();
; 278  :     }
; 279  : }

  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\UserInterface\PythonMiniMapModule.cpp
;	COMDAT ?initMiniMap@@YAXXZ
_TEXT	SEGMENT
_poModule$ = -4						; size = 4
?initMiniMap@@YAXXZ PROC				; initMiniMap, COMDAT

; 303  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 304  : 	static PyMethodDef s_methods[] = 
; 305  : 	{
; 306  : 		{ "SetScale",						miniMapSetScale,								METH_VARARGS },
; 307  : 		{ "ScaleUp",						miniMapScaleUp,									METH_VARARGS },
; 308  : 		{ "ScaleDown",						miniMapScaleDown,								METH_VARARGS },
; 309  : 		{ "SetMiniMapSize",					miniMapSetMiniMapSize,							METH_VARARGS },
; 310  : 
; 311  : 		{ "SetCenterPosition",				miniMapSetCenterPosition,						METH_VARARGS },
; 312  : 
; 313  : 		{ "Destroy",						miniMapDestroy,									METH_VARARGS },
; 314  : 		{ "Create",							miniMapCreate,									METH_VARARGS },
; 315  : 		{ "Update",							miniMapUpdate,									METH_VARARGS },
; 316  : 		{ "Render",							miniMapRender,									METH_VARARGS },
; 317  : 
; 318  : 		{ "Show",							miniMapShow,									METH_VARARGS },
; 319  : 		{ "Hide",							miniMapHide,									METH_VARARGS },
; 320  : 
; 321  : 		{ "isShow",							miniMapisShow,									METH_VARARGS },
; 322  : 
; 323  : 		{ "GetInfo",						miniMapGetInfo,									METH_VARARGS },
; 324  : 
; 325  : 		{ "LoadAtlas",						miniMapLoadAtlas,								METH_VARARGS },
; 326  : 		{ "UpdateAtlas",					miniMapUpdateAtlas,								METH_VARARGS },
; 327  : 		{ "RenderAtlas",					miniMapRenderAtlas,								METH_VARARGS },
; 328  : 		{ "ShowAtlas",						miniMapShowAtlas,								METH_VARARGS },
; 329  : 		{ "HideAtlas",						miniMapHideAtlas,								METH_VARARGS },
; 330  : 		{ "isShowAtlas",					miniMapisShowAtlas,								METH_VARARGS },
; 331  : 		{ "IsAtlas",						miniMapIsAtlas,									METH_VARARGS },
; 332  : 		{ "GetAtlasInfo",					miniMapGetAtlasInfo,							METH_VARARGS },
; 333  : 		{ "GetAtlasSize",					miniMapGetAtlasSize,							METH_VARARGS },
; 334  : 
; 335  : 		{ "AddWayPoint",					miniMapAddWayPoint,								METH_VARARGS },
; 336  : 		{ "RemoveWayPoint",					miniMapRemoveWayPoint,							METH_VARARGS },
; 337  : 
; 338  : 		{ "RegisterAtlasWindow",			miniMapRegisterAtlasWindow,						METH_VARARGS },
; 339  : 		{ "UnregisterAtlasWindow",			miniMapUnregisterAtlasWindow,					METH_VARARGS },
; 340  : 
; 341  : 		{ "GetGuildAreaID",					miniMapGetGuildAreaID,							METH_VARARGS },
; 342  : 
; 343  : 		{ NULL, NULL },
; 344  : 	};
; 345  : 
; 346  : 	PyObject * poModule = Py_InitModule("miniMap", s_methods);

  00004	68 f5 03 00 00	 push	 1013			; 000003f5H
  00009	6a 00		 push	 0
  0000b	6a 00		 push	 0
  0000d	68 00 00 00 00	 push	 OFFSET ?s_methods@?1??initMiniMap@@YAXXZ@4PAUPyMethodDef@@A
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_07GGJFLPNN@miniMap@
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Py_InitModule4
  0001d	83 c4 14	 add	 esp, 20			; 00000014H
  00020	89 45 fc	 mov	 DWORD PTR _poModule$[ebp], eax

; 347  : 	
; 348  : 	PyModule_AddIntConstant(poModule, "TYPE_OPC",			CPythonMiniMap::TYPE_OPC);

  00023	6a 00		 push	 0
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_08MOLNEDKJ@TYPE_OPC@
  0002a	ff 75 fc	 push	 DWORD PTR _poModule$[ebp]
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PyModule_AddIntConstant
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 349  : 	PyModule_AddIntConstant(poModule, "TYPE_OPCPVP",		CPythonMiniMap::TYPE_OPCPVP);

  00036	6a 01		 push	 1
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0M@KBKKLFCC@TYPE_OPCPVP@
  0003d	ff 75 fc	 push	 DWORD PTR _poModule$[ebp]
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PyModule_AddIntConstant
  00046	83 c4 0c	 add	 esp, 12			; 0000000cH

; 350  : 	PyModule_AddIntConstant(poModule, "TYPE_OPCPVPSELF",	CPythonMiniMap::TYPE_OPCPVPSELF);

  00049	6a 02		 push	 2
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@DAENBNGA@TYPE_OPCPVPSELF@
  00050	ff 75 fc	 push	 DWORD PTR _poModule$[ebp]
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PyModule_AddIntConstant
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH

; 351  : 	PyModule_AddIntConstant(poModule, "TYPE_NPC",			CPythonMiniMap::TYPE_NPC);

  0005c	6a 03		 push	 3
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_08HGABCEMM@TYPE_NPC@
  00063	ff 75 fc	 push	 DWORD PTR _poModule$[ebp]
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PyModule_AddIntConstant
  0006c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 352  : 	PyModule_AddIntConstant(poModule, "TYPE_MONSTER",		CPythonMiniMap::TYPE_MONSTER);

  0006f	6a 04		 push	 4
  00071	68 00 00 00 00	 push	 OFFSET ??_C@_0N@MFCFPPMD@TYPE_MONSTER@
  00076	ff 75 fc	 push	 DWORD PTR _poModule$[ebp]
  00079	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PyModule_AddIntConstant
  0007f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 353  : 	PyModule_AddIntConstant(poModule, "TYPE_WARP",			CPythonMiniMap::TYPE_WARP);

  00082	6a 05		 push	 5
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_09LAKONOKF@TYPE_WARP@
  00089	ff 75 fc	 push	 DWORD PTR _poModule$[ebp]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PyModule_AddIntConstant
  00092	83 c4 0c	 add	 esp, 12			; 0000000cH

; 354  : 	PyModule_AddIntConstant(poModule, "TYPE_WAYPOINT",		CPythonMiniMap::TYPE_WAYPOINT);

  00095	6a 06		 push	 6
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JMCMGHKJ@TYPE_WAYPOINT@
  0009c	ff 75 fc	 push	 DWORD PTR _poModule$[ebp]
  0009f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PyModule_AddIntConstant
  000a5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 355  : 	PyModule_AddIntConstant(poModule, "TYPE_PARTY",		CPythonMiniMap::TYPE_PARTY);

  000a8	6a 07		 push	 7
  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_0L@NHHJIHMA@TYPE_PARTY@
  000af	ff 75 fc	 push	 DWORD PTR _poModule$[ebp]
  000b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PyModule_AddIntConstant
  000b8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 356  : 	PyModule_AddIntConstant(poModule, "TYPE_EMPIRE",		CPythonMiniMap::TYPE_EMPIRE);

  000bb	6a 08		 push	 8
  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IAHPEAKG@TYPE_EMPIRE@
  000c2	ff 75 fc	 push	 DWORD PTR _poModule$[ebp]
  000c5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PyModule_AddIntConstant
  000cb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 357  : }

  000ce	c9		 leave
  000cf	c3		 ret	 0
?initMiniMap@@YAXXZ ENDP				; initMiniMap
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	c9		 leave
  00008	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
_TEXT	SEGMENT
__Al$1 = -28						; size = 4
__Ptr$2 = -24						; size = 4
__Count$ = -20						; size = 4
$T3 = -16						; size = 4
tv68 = -12						; size = 4
_this$ = -8						; size = 4
$T4 = -2						; size = 1
$T5 = -1						; size = 1
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT
; _this$ = ecx

; 4383 :     void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2227 :         return _BUF_SIZE <= _Myres;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00010	72 09		 jb	 SHORT $LN9@Tidy_deall
  00012	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv68[ebp], 1
  00019	eb 04		 jmp	 SHORT $LN10@Tidy_deall
$LN9@Tidy_deall:
  0001b	83 65 f4 00	 and	 DWORD PTR tv68[ebp], 0
$LN10@Tidy_deall:
  0001f	8a 45 f4	 mov	 al, BYTE PTR tv68[ebp]
  00022	88 45 ff	 mov	 BYTE PTR $T5[ebp], al

; 4384 :         _Mypair._Myval2._Orphan_all();
; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00025	0f b6 45 ff	 movzx	 eax, BYTE PTR $T5[ebp]
  00029	85 c0		 test	 eax, eax
  0002b	74 34		 je	 SHORT $LN2@Tidy_deall

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	89 45 e8	 mov	 DWORD PTR __Ptr$2[ebp], eax

; 4409 :         return _Mypair._Get_first();

  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  00038	89 45 f0	 mov	 DWORD PTR $T3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4409 :         return _Mypair._Get_first();

  0003b	8b 45 f0	 mov	 eax, DWORD PTR $T3[ebp]
  0003e	89 45 e4	 mov	 DWORD PTR __Al$1[ebp], eax

; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

  00041	ff 75 f8	 push	 DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ; std::_Destroy_in_place<char *>
  00049	59		 pop	 ecx

; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0004a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  00050	40		 inc	 eax
  00051	89 45 ec	 mov	 DWORD PTR __Count$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00054	ff 75 ec	 push	 DWORD PTR __Count$[ebp]
  00057	ff 75 e8	 push	 DWORD PTR __Ptr$2[ebp]
  0005a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0005f	59		 pop	 ecx
  00060	59		 pop	 ecx
$LN2@Tidy_deall:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00061	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00064	83 60 10 00	 and	 DWORD PTR [eax+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00068	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	c7 40 14 0f 00
	00 00		 mov	 DWORD PTR [eax+20], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00072	c6 45 fe 00	 mov	 BYTE PTR $T4[ebp], 0
  00076	33 c0		 xor	 eax, eax
  00078	40		 inc	 eax
  00079	6b c0 00	 imul	 eax, eax, 0

; 428  :         _Left = _Right;

  0007c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	8a 55 fe	 mov	 dl, BYTE PTR $T4[ebp]
  00082	88 14 01	 mov	 BYTE PTR [ecx+eax], dl

; 4396 :     }

  00085	c9		 leave
  00086	c3		 ret	 0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT
; _this$ = ecx

; 4376 :     void _Tidy_init() noexcept { // initialize basic_string data members

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 4377 :         _Mypair._Myval2._Mysize = 0;

  00008	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	83 60 10 00	 and	 DWORD PTR [eax+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0000f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 40 14 0f 00
	00 00		 mov	 DWORD PTR [eax+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00019	c6 45 ff 00	 mov	 BYTE PTR $T1[ebp], 0
  0001d	33 c0		 xor	 eax, eax
  0001f	40		 inc	 eax
  00020	6b c0 00	 imul	 eax, eax, 0

; 428  :         _Left = _Right;

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8a 55 ff	 mov	 dl, BYTE PTR $T1[ebp]
  00029	88 14 01	 mov	 BYTE PTR [ecx+eax], dl

; 4381 :     }

  0002c	c9		 leave
  0002d	c3		 ret	 0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z
_TEXT	SEGMENT
$T1 = -36						; size = 4
$T2 = -32						; size = 4
tv93 = -28						; size = 4
$T3 = -24						; size = 4
_this$ = -20						; size = 4
$T4 = -16						; size = 4
__Masked$5 = -12					; size = 4
__Old$ = -8						; size = 4
__Max$ = -4						; size = 4
__Requested$ = 8					; size = 4
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT
; _this$ = ecx

; 4297 :     _NODISCARD size_type _Calculate_growth(const size_type _Requested) const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 4298 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

  00009	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00011	89 45 fc	 mov	 DWORD PTR __Max$[ebp], eax
  00014	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  0001a	89 45 f8	 mov	 DWORD PTR __Old$[ebp], eax

; 4285 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0001d	8b 45 08	 mov	 eax, DWORD PTR __Requested$[ebp]
  00020	83 c8 0f	 or	 eax, 15			; 0000000fH
  00023	89 45 f4	 mov	 DWORD PTR __Masked$5[ebp], eax

; 4286 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00026	8b 45 f4	 mov	 eax, DWORD PTR __Masked$5[ebp]
  00029	3b 45 fc	 cmp	 eax, DWORD PTR __Max$[ebp]
  0002c	76 08		 jbe	 SHORT $LN29@Calculate_

; 4287 :             return _Max;

  0002e	8b 45 fc	 mov	 eax, DWORD PTR __Max$[ebp]
  00031	89 45 f0	 mov	 DWORD PTR $T4[ebp], eax
  00034	eb 4c		 jmp	 SHORT $LN31@Calculate_
$LN29@Calculate_:

; 4288 :         }
; 4289 : 
; 4290 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00036	8b 45 f8	 mov	 eax, DWORD PTR __Old$[ebp]
  00039	d1 e8		 shr	 eax, 1
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR __Max$[ebp]
  0003e	2b c8		 sub	 ecx, eax
  00040	39 4d f8	 cmp	 DWORD PTR __Old$[ebp], ecx
  00043	76 08		 jbe	 SHORT $LN30@Calculate_

; 4291 :             return _Max;

  00045	8b 45 fc	 mov	 eax, DWORD PTR __Max$[ebp]
  00048	89 45 f0	 mov	 DWORD PTR $T4[ebp], eax
  0004b	eb 35		 jmp	 SHORT $LN31@Calculate_
$LN30@Calculate_:

; 4294 :         return (_STD max)(_Masked, _Old + _Old / 2);

  0004d	8b 45 f8	 mov	 eax, DWORD PTR __Old$[ebp]
  00050	d1 e8		 shr	 eax, 1
  00052	03 45 f8	 add	 eax, DWORD PTR __Old$[ebp]
  00055	89 45 e8	 mov	 DWORD PTR $T3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00058	8b 45 f4	 mov	 eax, DWORD PTR __Masked$5[ebp]
  0005b	3b 45 e8	 cmp	 eax, DWORD PTR $T3[ebp]
  0005e	73 08		 jae	 SHORT $LN35@Calculate_
  00060	8d 45 e8	 lea	 eax, DWORD PTR $T3[ebp]
  00063	89 45 e4	 mov	 DWORD PTR tv93[ebp], eax
  00066	eb 06		 jmp	 SHORT $LN36@Calculate_
$LN35@Calculate_:
  00068	8d 45 f4	 lea	 eax, DWORD PTR __Masked$5[ebp]
  0006b	89 45 e4	 mov	 DWORD PTR tv93[ebp], eax
$LN36@Calculate_:
  0006e	8b 45 e4	 mov	 eax, DWORD PTR tv93[ebp]
  00071	89 45 e0	 mov	 DWORD PTR $T2[ebp], eax
  00074	8b 45 e0	 mov	 eax, DWORD PTR $T2[ebp]
  00077	89 45 dc	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4294 :         return (_STD max)(_Masked, _Old + _Old / 2);

  0007a	8b 45 dc	 mov	 eax, DWORD PTR $T1[ebp]
  0007d	8b 00		 mov	 eax, DWORD PTR [eax]
  0007f	89 45 f0	 mov	 DWORD PTR $T4[ebp], eax
$LN31@Calculate_:

; 4298 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

  00082	8b 45 f0	 mov	 eax, DWORD PTR $T4[ebp]

; 4299 :     }

  00085	c9		 leave
  00086	c2 04 00	 ret	 4
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\limits
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -60						; size = 4
$T2 = -56						; size = 4
$T3 = -52						; size = 4
$T4 = -48						; size = 4
__Storage_max$ = -44					; size = 4
$T5 = -40						; size = 4
$T6 = -36						; size = 4
$T7 = -32						; size = 4
_this$ = -28						; size = 4
tv70 = -24						; size = 4
$T8 = -20						; size = 4
$T9 = -16						; size = 4
tv67 = -12						; size = 4
__Alloc_max$ = -8					; size = 4
$T10 = -4						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 3773 :     _NODISCARD size_type max_size() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00006	89 4d e4	 mov	 DWORD PTR _this$[ebp], ecx

; 4413 :         return _Mypair._Get_first();

  00009	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1351 :         return *this;

  0000c	89 45 e0	 mov	 DWORD PTR $T7[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4413 :         return _Mypair._Get_first();

  0000f	8b 45 e0	 mov	 eax, DWORD PTR $T7[ebp]
  00012	89 45 c4	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 710  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00015	83 4d f8 ff	 or	 DWORD PTR __Alloc_max$[ebp], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3775 :         const size_type _Storage_max = // can always store small string

  00019	c7 45 fc 10 00
	00 00		 mov	 DWORD PTR $T10[ebp], 16	; 00000010H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00020	8b 45 f8	 mov	 eax, DWORD PTR __Alloc_max$[ebp]
  00023	3b 45 fc	 cmp	 eax, DWORD PTR $T10[ebp]
  00026	73 08		 jae	 SHORT $LN14@max_size
  00028	8d 45 fc	 lea	 eax, DWORD PTR $T10[ebp]
  0002b	89 45 f4	 mov	 DWORD PTR tv67[ebp], eax
  0002e	eb 06		 jmp	 SHORT $LN15@max_size
$LN14@max_size:
  00030	8d 45 f8	 lea	 eax, DWORD PTR __Alloc_max$[ebp]
  00033	89 45 f4	 mov	 DWORD PTR tv67[ebp], eax
$LN15@max_size:
  00036	8b 45 f4	 mov	 eax, DWORD PTR tv67[ebp]
  00039	89 45 dc	 mov	 DWORD PTR $T6[ebp], eax
  0003c	8b 45 dc	 mov	 eax, DWORD PTR $T6[ebp]
  0003f	89 45 d8	 mov	 DWORD PTR $T5[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3775 :         const size_type _Storage_max = // can always store small string

  00042	8b 45 d8	 mov	 eax, DWORD PTR $T5[ebp]
  00045	8b 00		 mov	 eax, DWORD PTR [eax]
  00047	89 45 d4	 mov	 DWORD PTR __Storage_max$[ebp], eax

; 3777 :         return (_STD min)(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  0004a	8b 45 d4	 mov	 eax, DWORD PTR __Storage_max$[ebp]
  0004d	48		 dec	 eax
  0004e	89 45 f0	 mov	 DWORD PTR $T9[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\limits

; 557  :         return INT_MAX;

  00051	c7 45 d0 ff ff
	ff 7f		 mov	 DWORD PTR $T4[ebp], 2147483647 ; 7fffffffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3777 :         return (_STD min)(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00058	8b 45 d0	 mov	 eax, DWORD PTR $T4[ebp]
  0005b	89 45 ec	 mov	 DWORD PTR $T8[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 68   :     return _Right < _Left ? _Right : _Left;

  0005e	8b 45 f0	 mov	 eax, DWORD PTR $T9[ebp]
  00061	3b 45 ec	 cmp	 eax, DWORD PTR $T8[ebp]
  00064	73 08		 jae	 SHORT $LN22@max_size
  00066	8d 45 f0	 lea	 eax, DWORD PTR $T9[ebp]
  00069	89 45 e8	 mov	 DWORD PTR tv70[ebp], eax
  0006c	eb 06		 jmp	 SHORT $LN23@max_size
$LN22@max_size:
  0006e	8d 45 ec	 lea	 eax, DWORD PTR $T8[ebp]
  00071	89 45 e8	 mov	 DWORD PTR tv70[ebp], eax
$LN23@max_size:
  00074	8b 45 e8	 mov	 eax, DWORD PTR tv70[ebp]
  00077	89 45 cc	 mov	 DWORD PTR $T3[ebp], eax
  0007a	8b 45 cc	 mov	 eax, DWORD PTR $T3[ebp]
  0007d	89 45 c8	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3777 :         return (_STD min)(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00080	8b 45 c8	 mov	 eax, DWORD PTR $T2[ebp]
  00083	8b 00		 mov	 eax, DWORD PTR [eax]

; 3778 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 3779 :         );
; 3780 :     }

  00085	c9		 leave
  00086	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
$T1 = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__Result$2 = -16					; size = 4
tv80 = -12						; size = 4
_this$ = -8						; size = 4
$T3 = -1						; size = 1
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 3751 :     _NODISCARD _Ret_z_ const _Elem* c_str() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 3752 :         return _Mypair._Myval2._Myptr();

  00009	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 f8	 mov	 DWORD PTR _this$[ebp], eax

; 2218 :         const value_type* _Result = _Bx._Buf;

  0000f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00012	89 45 f0	 mov	 DWORD PTR __Result$2[ebp], eax

; 2227 :         return _BUF_SIZE <= _Myres;

  00015	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0001c	72 09		 jb	 SHORT $LN9@c_str
  0001e	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv80[ebp], 1
  00025	eb 04		 jmp	 SHORT $LN10@c_str
$LN9@c_str:
  00027	83 65 f4 00	 and	 DWORD PTR tv80[ebp], 0
$LN10@c_str:
  0002b	8a 45 f4	 mov	 al, BYTE PTR tv80[ebp]
  0002e	88 45 ff	 mov	 BYTE PTR $T3[ebp], al

; 2219 :         if (_Large_string_engaged()) {

  00031	0f b6 45 ff	 movzx	 eax, BYTE PTR $T3[ebp]
  00035	85 c0		 test	 eax, eax
  00037	74 0e		 je	 SHORT $LN4@c_str

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  00039	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 00		 mov	 eax, DWORD PTR [eax]
  0003e	89 45 e8	 mov	 DWORD PTR __Ptr$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  00041	8b 45 e8	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00044	89 45 f0	 mov	 DWORD PTR __Result$2[ebp], eax
$LN4@c_str:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2223 :         return _Result;

  00047	8b 45 f0	 mov	 eax, DWORD PTR __Result$2[ebp]
  0004a	89 45 e4	 mov	 DWORD PTR $T1[ebp], eax

; 3752 :         return _Mypair._Myval2._Myptr();

  0004d	8b 45 e4	 mov	 eax, DWORD PTR $T1[ebp]

; 3753 :     }

  00050	c9		 leave
  00051	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
$T1 = -16						; size = 1
__Old_ptr$2 = -12					; size = 4
_this$ = -8						; size = 4
$T3 = -1						; size = 1
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 3042 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3043 :         // assign [_Ptr, _Ptr + _Count)
; 3044 :         if (_Count <= _Mypair._Myval2._Myres) {

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  0000f	3b 48 14	 cmp	 ecx, DWORD PTR [eax+20]
  00012	77 39		 ja	 SHORT $LN2@assign

; 3045 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  00014	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0001c	89 45 f4	 mov	 DWORD PTR __Old_ptr$2[ebp], eax

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  0001f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  00025	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00028	ff 75 0c	 push	 DWORD PTR __Count$[ebp]
  0002b	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  0002e	ff 75 f4	 push	 DWORD PTR __Old_ptr$2[ebp]
  00031	e8 00 00 00 00	 call	 _memmove
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3047 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00039	c6 45 ff 00	 mov	 BYTE PTR $T3[ebp], 0

; 428  :         _Left = _Right;

  0003d	8b 45 f4	 mov	 eax, DWORD PTR __Old_ptr$2[ebp]
  00040	03 45 0c	 add	 eax, DWORD PTR __Count$[ebp]
  00043	8a 4d ff	 mov	 cl, BYTE PTR $T3[ebp]
  00046	88 08		 mov	 BYTE PTR [eax], cl

; 3049 :             return *this;

  00048	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	eb 16		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 3050 :         }
; 3051 : 
; 3052 :         return _Reallocate_for(

  0004d	33 c0		 xor	 eax, eax
  0004f	88 45 f0	 mov	 BYTE PTR $T1[ebp], al
  00052	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00055	ff 75 f0	 push	 DWORD PTR $T1[ebp]
  00058	ff 75 0c	 push	 DWORD PTR __Count$[ebp]
  0005b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	e8 00 00 00 00	 call	 ??$_Reallocate_for@V<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_9366063389c5f42a00a5088cf24e69de>,char const *>
$LN1@assign:

; 3053 :             _Count,
; 3054 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {
; 3055 :                 _Traits::copy(_New_ptr, _Ptr, _Count);
; 3056 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 3057 :             },
; 3058 :             _Ptr);
; 3059 :     }

  00063	c9		 leave
  00064	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2800 :     ~basic_string() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2801 :         _Tidy_deallocate();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 2802 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2803 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2804 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2805 :         _Mypair._Myval2._Myproxy = nullptr;
; 2806 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2807 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2808 :     }

  0000f	c9		 leave
  00010	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
_TEXT	SEGMENT
__Alproxy$ = -40					; size = 4
$T2 = -36						; size = 4
$T3 = -32						; size = 4
_this$ = -28						; size = 4
_this$ = -24						; size = 4
_this$ = -20						; size = 4
_$S6$ = -13						; size = 1
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2413 :     basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00028	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	89 45 e4	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  0002e	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00031	89 45 e8	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00034	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00037	83 60 10 00	 and	 DWORD PTR [eax+16], 0
  0003b	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	83 60 14 00	 and	 DWORD PTR [eax+20], 0

; 2413 :     basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

  00042	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 2414 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00046	8d 45 f3	 lea	 eax, DWORD PTR _$S6$[ebp]
  00049	89 45 d8	 mov	 DWORD PTR __Alproxy$[ebp], eax

; 2415 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2416 :         _Tidy_init();

  0004c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004f	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 389  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00054	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00057	e8 00 00 00 00	 call	 _strlen
  0005c	59		 pop	 ecx
  0005d	89 45 e0	 mov	 DWORD PTR $T3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 997  :     return _Len;

  00060	8b 45 e0	 mov	 eax, DWORD PTR $T3[ebp]
  00063	89 45 dc	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3062 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00066	ff 75 dc	 push	 DWORD PTR $T2[ebp]
  00069	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  0006c	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2417 :         assign(_Ptr);
; 2418 :         _Proxy._Release();
; 2419 :     }

  00074	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00078	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0007b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00085	59		 pop	 ecx
  00086	c9		 leave
  00087	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
_this$ = -8						; size = 4
_this$ = -4						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2365 :     basic_string() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 f4	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  0000f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00012	89 45 f8	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00015	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 60 10 00	 and	 DWORD PTR [eax+16], 0
  0001c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	83 60 14 00	 and	 DWORD PTR [eax+20], 0

; 2366 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));
; 2367 :         _Tidy_init();

  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2368 :     }

  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c9		 leave
  0002f	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
__Ptr$ = -20						; size = 4
__Result$ = -16						; size = 4
tv76 = -12						; size = 4
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2208 :     value_type* _Myptr() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2209 :         value_type* _Result = _Bx._Buf;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 f0	 mov	 DWORD PTR __Result$[ebp], eax

; 2227 :         return _BUF_SIZE <= _Myres;

  0000f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00016	72 09		 jb	 SHORT $LN6@Myptr
  00018	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  0001f	eb 04		 jmp	 SHORT $LN7@Myptr
$LN6@Myptr:
  00021	83 65 f4 00	 and	 DWORD PTR tv76[ebp], 0
$LN7@Myptr:
  00025	8a 45 f4	 mov	 al, BYTE PTR tv76[ebp]
  00028	88 45 ff	 mov	 BYTE PTR $T1[ebp], al

; 2210 :         if (_Large_string_engaged()) {

  0002b	0f b6 45 ff	 movzx	 eax, BYTE PTR $T1[ebp]
  0002f	85 c0		 test	 eax, eax
  00031	74 0e		 je	 SHORT $LN2@Myptr

; 2211 :             _Result = _Unfancy(_Bx._Ptr);

  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 ec	 mov	 DWORD PTR __Ptr$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  0003b	8b 45 ec	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003e	89 45 f0	 mov	 DWORD PTR __Result$[ebp], eax
$LN2@Myptr:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2214 :         return _Result;

  00041	8b 45 f0	 mov	 eax, DWORD PTR __Result$[ebp]

; 2215 :     }

  00044	c9		 leave
  00045	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2274 : [[noreturn]] inline void _Xlen_string() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2275 :     _Xlength_error("string too long");

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00008	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN2@Xlen_strin:

; 2276 : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z
_TEXT	SEGMENT
__Min_back_shift$ = -16					; size = 4
__Ptr_user$ = -12					; size = 4
__Ptr_container$ = -8					; size = 4
__Back_shift$ = -4					; size = 4
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 132  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 133  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 134  :     _Bytes += _Non_user_size;

  00006	8b 45 0c	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00009	8b 00		 mov	 eax, DWORD PTR [eax]
  0000b	83 c0 23	 add	 eax, 35			; 00000023H
  0000e	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00011	89 01		 mov	 DWORD PTR [ecx], eax

; 135  : 
; 136  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00013	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00016	8b 00		 mov	 eax, DWORD PTR [eax]
  00018	89 45 f4	 mov	 DWORD PTR __Ptr_user$[ebp], eax

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001b	6a 04		 push	 4
  0001d	58		 pop	 eax
  0001e	6b c0 ff	 imul	 eax, eax, -1
  00021	8b 4d f4	 mov	 ecx, DWORD PTR __Ptr_user$[ebp]
  00024	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  00027	89 45 f8	 mov	 DWORD PTR __Ptr_container$[ebp], eax

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);

  0002a	c7 45 f0 04 00
	00 00		 mov	 DWORD PTR __Min_back_shift$[ebp], 4

; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00031	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00034	8b 00		 mov	 eax, DWORD PTR [eax]
  00036	2b 45 f8	 sub	 eax, DWORD PTR __Ptr_container$[ebp]
  00039	89 45 fc	 mov	 DWORD PTR __Back_shift$[ebp], eax
$LN4@Adjust_man:

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0003c	83 7d fc 04	 cmp	 DWORD PTR __Back_shift$[ebp], 4
  00040	72 08		 jb	 SHORT $LN7@Adjust_man
  00042	83 7d fc 23	 cmp	 DWORD PTR __Back_shift$[ebp], 35 ; 00000023H
  00046	77 02		 ja	 SHORT $LN7@Adjust_man
  00048	eb 09		 jmp	 SHORT $LN2@Adjust_man
$LN7@Adjust_man:
  0004a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
  0004f	33 c0		 xor	 eax, eax
  00051	75 f7		 jne	 SHORT $LN7@Adjust_man
$LN2@Adjust_man:
  00053	33 c0		 xor	 eax, eax
  00055	75 e5		 jne	 SHORT $LN4@Adjust_man

; 152  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00057	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0005a	8b 4d f8	 mov	 ecx, DWORD PTR __Ptr_container$[ebp]
  0005d	89 08		 mov	 DWORD PTR [eax], ecx
$LN10@Adjust_man:

; 153  : }

  0005f	c9		 leave
  00060	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN2@Throw_bad_:

; 322  : }

  0001c	c9		 leave
  0001d	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :     {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 90   :         __std_exception_destroy(&_Data);

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	83 c0 04	 add	 eax, 4
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ___std_exception_destroy
  0001c	59		 pop	 ecx
  0001d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00020	83 e0 01	 and	 eax, 1
  00023	74 0c		 je	 SHORT $LN2@scalar
  00025	6a 0c		 push	 12			; 0000000cH
  00027	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	59		 pop	 ecx
  00030	59		 pop	 ecx
$LN2@scalar:
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	c9		 leave
  00035	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABV01@@Z ; std::exception::exception
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_array_new_length@std@@6B@
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	c9		 leave
  00028	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :     {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 90   :         __std_exception_destroy(&_Data);

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	83 c0 04	 add	 eax, 4
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ___std_exception_destroy
  0001c	59		 pop	 ecx
  0001d	c9		 leave
  0001e	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 66   :     {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 65   :         : _Data()

  00010	33 c0		 xor	 eax, eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 c1 04	 add	 ecx, 4
  00018	89 01		 mov	 DWORD PTR [ecx], eax
  0001a	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 67   :         _Data._What = _Message;

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 130  :     {

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 141  :     {

  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	c9		 leave
  0003d	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :     {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 90   :         __std_exception_destroy(&_Data);

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	83 c0 04	 add	 eax, 4
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ___std_exception_destroy
  0001c	59		 pop	 ecx
  0001d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00020	83 e0 01	 and	 eax, 1
  00023	74 0c		 je	 SHORT $LN2@scalar
  00025	6a 0c		 push	 12			; 0000000cH
  00027	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	59		 pop	 ecx
  00030	59		 pop	 ecx
$LN2@scalar:
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	c9		 leave
  00035	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	ff 75 08	 push	 DWORD PTR ___that$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	e8 00 00 00 00	 call	 ??0exception@std@@QAE@ABV01@@Z ; std::exception::exception
  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	c9		 leave
  0001f	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 89   :     {

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 90   :         __std_exception_destroy(&_Data);

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	83 c0 04	 add	 eax, 4
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ___std_exception_destroy
  0001c	59		 pop	 ecx
  0001d	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00020	83 e0 01	 and	 eax, 1
  00023	74 0c		 je	 SHORT $LN2@scalar
  00025	6a 0c		 push	 12			; 0000000cH
  00027	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002f	59		 pop	 ecx
  00030	59		 pop	 ecx
$LN2@scalar:
  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	c9		 leave
  00035	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 94   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00008	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0000f	74 0b		 je	 SHORT $LN3@what
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00017	89 45 f8	 mov	 DWORD PTR tv69[ebp], eax
  0001a	eb 07		 jmp	 SHORT $LN4@what
$LN3@what:
  0001c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
$LN4@what:
  00023	8b 45 f8	 mov	 eax, DWORD PTR tv69[ebp]

; 96   :     }

  00026	c9		 leave
  00027	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 71   :         : _Data()

  00010	33 c0		 xor	 eax, eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	83 c1 04	 add	 ecx, 4
  00018	89 01		 mov	 DWORD PTR [ecx], eax
  0001a	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	83 c0 04	 add	 eax, 4
  00023	50		 push	 eax
  00024	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  00027	83 c0 04	 add	 eax, 4
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ___std_exception_copy
  00030	59		 pop	 ecx
  00031	59		 pop	 ecx

; 74   :     }

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	c9		 leave
  00036	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
END
