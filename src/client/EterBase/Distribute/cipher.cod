; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??1Exception@CryptoPP@@UAE@XZ			; CryptoPP::Exception::~Exception
PUBLIC	?what@Exception@CryptoPP@@UBEPBDXZ		; CryptoPP::Exception::what
PUBLIC	??0Exception@CryptoPP@@QAE@ABV01@@Z		; CryptoPP::Exception::Exception
PUBLIC	??_GException@CryptoPP@@UAEPAXI@Z		; CryptoPP::Exception::`scalar deleting destructor'
PUBLIC	??0InvalidArgument@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CryptoPP::InvalidArgument::InvalidArgument
PUBLIC	??1InvalidArgument@CryptoPP@@UAE@XZ		; CryptoPP::InvalidArgument::~InvalidArgument
PUBLIC	??0InvalidArgument@CryptoPP@@QAE@ABV01@@Z	; CryptoPP::InvalidArgument::InvalidArgument
PUBLIC	??_GInvalidArgument@CryptoPP@@UAEPAXI@Z		; CryptoPP::InvalidArgument::`scalar deleting destructor'
PUBLIC	??0InvalidDataFormat@CryptoPP@@QAE@ABV01@@Z	; CryptoPP::InvalidDataFormat::InvalidDataFormat
PUBLIC	??_GInvalidDataFormat@CryptoPP@@UAEPAXI@Z	; CryptoPP::InvalidDataFormat::`scalar deleting destructor'
PUBLIC	??0NotImplemented@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CryptoPP::NotImplemented::NotImplemented
PUBLIC	??1NotImplemented@CryptoPP@@UAE@XZ		; CryptoPP::NotImplemented::~NotImplemented
PUBLIC	??0NotImplemented@CryptoPP@@QAE@ABV01@@Z	; CryptoPP::NotImplemented::NotImplemented
PUBLIC	??_GNotImplemented@CryptoPP@@UAEPAXI@Z		; CryptoPP::NotImplemented::`scalar deleting destructor'
PUBLIC	??1NameValuePairs@CryptoPP@@UAE@XZ		; CryptoPP::NameValuePairs::~NameValuePairs
PUBLIC	??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z ; CryptoPP::NameValuePairs::ValueTypeMismatch::ValueTypeMismatch
PUBLIC	??1ValueTypeMismatch@NameValuePairs@CryptoPP@@UAE@XZ ; CryptoPP::NameValuePairs::ValueTypeMismatch::~ValueTypeMismatch
PUBLIC	??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV012@@Z ; CryptoPP::NameValuePairs::ValueTypeMismatch::ValueTypeMismatch
PUBLIC	??_GValueTypeMismatch@NameValuePairs@CryptoPP@@UAEPAXI@Z ; CryptoPP::NameValuePairs::ValueTypeMismatch::`scalar deleting destructor'
PUBLIC	?ThrowIfTypeMismatch@NameValuePairs@CryptoPP@@SAXPBDABVtype_info@@1@Z ; CryptoPP::NameValuePairs::ThrowIfTypeMismatch
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1Clonable@CryptoPP@@UAE@XZ			; CryptoPP::Clonable::~Clonable
PUBLIC	?Clone@Clonable@CryptoPP@@UBEPAV12@XZ		; CryptoPP::Clonable::Clone
PUBLIC	?AlgorithmName@Algorithm@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::Algorithm::AlgorithmName
PUBLIC	??1SimpleKeyingInterface@CryptoPP@@UAE@XZ	; CryptoPP::SimpleKeyingInterface::~SimpleKeyingInterface
PUBLIC	?IsValidKeyLength@SimpleKeyingInterface@CryptoPP@@UBE_NI@Z ; CryptoPP::SimpleKeyingInterface::IsValidKeyLength
PUBLIC	?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterface::MinIVLength
PUBLIC	?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterface::MaxIVLength
PUBLIC	?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z ; CryptoPP::SimpleKeyingInterface::Resynchronize
PUBLIC	?IsPermutation@BlockTransformation@CryptoPP@@UBE_NXZ ; CryptoPP::BlockTransformation::IsPermutation
PUBLIC	?OptimalNumberOfParallelBlocks@BlockTransformation@CryptoPP@@UBEIXZ ; CryptoPP::BlockTransformation::OptimalNumberOfParallelBlocks
PUBLIC	?MandatoryBlockSize@StreamTransformation@CryptoPP@@UBEIXZ ; CryptoPP::StreamTransformation::MandatoryBlockSize
PUBLIC	?GetOptimalBlockSizeUsed@StreamTransformation@CryptoPP@@UBEIXZ ; CryptoPP::StreamTransformation::GetOptimalBlockSizeUsed
PUBLIC	?MinLastBlockSize@StreamTransformation@CryptoPP@@UBEIXZ ; CryptoPP::StreamTransformation::MinLastBlockSize
PUBLIC	?GetAlgorithm@BlockCipher@CryptoPP@@MBEABVAlgorithm@2@XZ ; CryptoPP::BlockCipher::GetAlgorithm
PUBLIC	?GetAlgorithm@SymmetricCipher@CryptoPP@@MBEABVAlgorithm@2@XZ ; CryptoPP::SymmetricCipher::GetAlgorithm
PUBLIC	?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z ; CryptoPP::RandomNumberGenerator::IncorporateEntropy
PUBLIC	?CanIncorporateEntropy@RandomNumberGenerator@CryptoPP@@UBE_NXZ ; CryptoPP::RandomNumberGenerator::CanIncorporateEntropy
PUBLIC	??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CryptoPP::CryptoMaterial::InvalidMaterial::InvalidMaterial
PUBLIC	??1InvalidMaterial@CryptoMaterial@CryptoPP@@UAE@XZ ; CryptoPP::CryptoMaterial::InvalidMaterial::~InvalidMaterial
PUBLIC	??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV012@@Z ; CryptoPP::CryptoMaterial::InvalidMaterial::InvalidMaterial
PUBLIC	??_GInvalidMaterial@CryptoMaterial@CryptoPP@@UAEPAXI@Z ; CryptoPP::CryptoMaterial::InvalidMaterial::`scalar deleting destructor'
PUBLIC	?ThrowIfInvalid@CryptoMaterial@CryptoPP@@UBEXAAVRandomNumberGenerator@2@I@Z ; CryptoPP::CryptoMaterial::ThrowIfInvalid
PUBLIC	?AccessMaterial@KeyAgreementAlgorithm@CryptoPP@@UAEAAVCryptoMaterial@2@XZ ; CryptoPP::KeyAgreementAlgorithm::AccessMaterial
PUBLIC	?GetMaterial@KeyAgreementAlgorithm@CryptoPP@@UBEABVCryptoMaterial@2@XZ ; CryptoPP::KeyAgreementAlgorithm::GetMaterial
PUBLIC	?GetCryptoParameters@KeyAgreementAlgorithm@CryptoPP@@UBEABVCryptoParameters@2@XZ ; CryptoPP::KeyAgreementAlgorithm::GetCryptoParameters
PUBLIC	??1ASN1Object@CryptoPP@@UAE@XZ			; CryptoPP::ASN1Object::~ASN1Object
PUBLIC	?BEREncode@ASN1Object@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z ; CryptoPP::ASN1Object::BEREncode
PUBLIC	??0Cipher@@QAE@XZ				; Cipher::Cipher
PUBLIC	??1Cipher@@QAE@XZ				; Cipher::~Cipher
PUBLIC	?CleanUp@Cipher@@QAEXXZ				; Cipher::CleanUp
PUBLIC	?Prepare@Cipher@@QAEIPAXPAI@Z			; Cipher::Prepare
PUBLIC	?Activate@Cipher@@QAE_N_NIPBXI@Z		; Cipher::Activate
PUBLIC	?SetUp@Cipher@@AAE_N_N@Z			; Cipher::SetUp
PUBLIC	?CheckSize@?$AllocatorBase@I@CryptoPP@@KAXI@Z	; CryptoPP::AllocatorBase<unsigned int>::CheckSize
PUBLIC	??1AdditiveCipherAbstractPolicy@CryptoPP@@UAE@XZ ; CryptoPP::AdditiveCipherAbstractPolicy::~AdditiveCipherAbstractPolicy
PUBLIC	?GetOptimalBlockSize@AdditiveCipherAbstractPolicy@CryptoPP@@UBEIXZ ; CryptoPP::AdditiveCipherAbstractPolicy::GetOptimalBlockSize
PUBLIC	??0?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@I@Z ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
PUBLIC	??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
PUBLIC	?Assign@?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAEXPBEI@Z ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::Assign
PUBLIC	??1ConstByteArrayParameter@CryptoPP@@QAE@XZ	; CryptoPP::ConstByteArrayParameter::~ConstByteArrayParameter
PUBLIC	??0ConstByteArrayParameter@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::ConstByteArrayParameter::ConstByteArrayParameter
PUBLIC	??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@PBD@Z ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::ParameterNotUsed
PUBLIC	??1ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@UAE@XZ ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::~ParameterNotUsed
PUBLIC	??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@ABV012@@Z ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::ParameterNotUsed
PUBLIC	??_GParameterNotUsed@AlgorithmParametersBase@CryptoPP@@UAEPAXI@Z ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::`scalar deleting destructor'
PUBLIC	??1AlgorithmParametersBase@CryptoPP@@UAE@XZ	; CryptoPP::AlgorithmParametersBase::~AlgorithmParametersBase
PUBLIC	??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>
PUBLIC	?reset@?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAEXPAVAlgorithmParametersBase@2@@Z ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::reset
PUBLIC	??_GAlgorithmParametersBase@CryptoPP@@UAEPAXI@Z	; CryptoPP::AlgorithmParametersBase::`scalar deleting destructor'
PUBLIC	?AssignValue@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UBEXPBDABVtype_info@@PAX@Z ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::AssignValue
PUBLIC	?MoveInto@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UBEXPAX@Z ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::MoveInto
PUBLIC	??_G?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UAEPAXI@Z ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::`scalar deleting destructor'
PUBLIC	??1AlgorithmParameters@CryptoPP@@UAE@XZ		; CryptoPP::AlgorithmParameters::~AlgorithmParameters
PUBLIC	?MinKeyLength@CipherModeBase@CryptoPP@@UBEIXZ	; CryptoPP::CipherModeBase::MinKeyLength
PUBLIC	?MaxKeyLength@CipherModeBase@CryptoPP@@UBEIXZ	; CryptoPP::CipherModeBase::MaxKeyLength
PUBLIC	?DefaultKeyLength@CipherModeBase@CryptoPP@@UBEIXZ ; CryptoPP::CipherModeBase::DefaultKeyLength
PUBLIC	?GetValidKeyLength@CipherModeBase@CryptoPP@@UBEII@Z ; CryptoPP::CipherModeBase::GetValidKeyLength
PUBLIC	?IsValidKeyLength@CipherModeBase@CryptoPP@@UBE_NI@Z ; CryptoPP::CipherModeBase::IsValidKeyLength
PUBLIC	?IVSize@CipherModeBase@CryptoPP@@UBEIXZ		; CryptoPP::CipherModeBase::IVSize
PUBLIC	?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z ; CryptoPP::CipherModeBase::SetFeedbackSize
PUBLIC	?ResizeBuffers@CipherModeBase@CryptoPP@@MAEXXZ	; CryptoPP::CipherModeBase::ResizeBuffers
PUBLIC	?CipherSetKey@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@EAEXABVNameValuePairs@2@PBEI@Z ; CryptoPP::ModePolicyCommonTemplate<CryptoPP::AdditiveCipherAbstractPolicy>::CipherSetKey
PUBLIC	??1?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@UAE@XZ ; CryptoPP::ModePolicyCommonTemplate<CryptoPP::AdditiveCipherAbstractPolicy>::~ModePolicyCommonTemplate<CryptoPP::AdditiveCipherAbstractPolicy>
PUBLIC	?CipherIsRandomAccess@CTR_ModePolicy@CryptoPP@@UBE_NXZ ; CryptoPP::CTR_ModePolicy::CipherIsRandomAccess
PUBLIC	?IVRequirement@CTR_ModePolicy@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ; CryptoPP::CTR_ModePolicy::IVRequirement
PUBLIC	?GetAlignment@CTR_ModePolicy@CryptoPP@@MBEIXZ	; CryptoPP::CTR_ModePolicy::GetAlignment
PUBLIC	?GetBytesPerIteration@CTR_ModePolicy@CryptoPP@@MBEIXZ ; CryptoPP::CTR_ModePolicy::GetBytesPerIteration
PUBLIC	?GetIterationsToBuffer@CTR_ModePolicy@CryptoPP@@MBEIXZ ; CryptoPP::CTR_ModePolicy::GetIterationsToBuffer
PUBLIC	?WriteKeystream@CTR_ModePolicy@CryptoPP@@MAEXPAEI@Z ; CryptoPP::CTR_ModePolicy::WriteKeystream
PUBLIC	?CanOperateKeystream@CTR_ModePolicy@CryptoPP@@MBE_NXZ ; CryptoPP::CTR_ModePolicy::CanOperateKeystream
PUBLIC	??1CTR_ModePolicy@CryptoPP@@UAE@XZ		; CryptoPP::CTR_ModePolicy::~CTR_ModePolicy
PUBLIC	??1?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@UAE@XZ ; CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy>::~AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy>
PUBLIC	?OptimalBlockSize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::OptimalBlockSize
PUBLIC	?OptimalDataAlignment@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::OptimalDataAlignment
PUBLIC	?IsSelfInverting@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::IsSelfInverting
PUBLIC	?IsForwardTransformation@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::IsForwardTransformation
PUBLIC	?IsRandomAccess@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::IsRandomAccess
PUBLIC	?GetPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MBEABUAdditiveCipherAbstractPolicy@2@XZ ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::GetPolicy
PUBLIC	?AccessPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MAEAAUAdditiveCipherAbstractPolicy@2@XZ ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::AccessPolicy
PUBLIC	??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>
PUBLIC	??_G?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@UAEPAXI@Z ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`scalar deleting destructor'
PUBLIC	??1Integer@CryptoPP@@UAE@XZ			; CryptoPP::Integer::~Integer
PUBLIC	??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z ; CryptoPP::MakeParameters<CryptoPP::ConstByteArrayParameter>
PUBLIC	?CanIncorporateEntropy@RandomPool@CryptoPP@@UBE_NXZ ; CryptoPP::RandomPool::CanIncorporateEntropy
PUBLIC	??1?$member_ptr@VBlockCipher@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::BlockCipher>::~member_ptr<CryptoPP::BlockCipher>
PUBLIC	??1RandomPool@CryptoPP@@UAE@XZ			; CryptoPP::RandomPool::~RandomPool
PUBLIC	??0SelfTestFailure@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CryptoPP::SelfTestFailure::SelfTestFailure
PUBLIC	??1SelfTestFailure@CryptoPP@@UAE@XZ		; CryptoPP::SelfTestFailure::~SelfTestFailure
PUBLIC	??0SelfTestFailure@CryptoPP@@QAE@ABV01@@Z	; CryptoPP::SelfTestFailure::SelfTestFailure
PUBLIC	??_GSelfTestFailure@CryptoPP@@UAEPAXI@Z		; CryptoPP::SelfTestFailure::`scalar deleting destructor'
PUBLIC	??1AutoSeededRandomPool@CryptoPP@@UAE@XZ	; CryptoPP::AutoSeededRandomPool::~AutoSeededRandomPool
PUBLIC	??_GAutoSeededRandomPool@CryptoPP@@UAEPAXI@Z	; CryptoPP::AutoSeededRandomPool::`scalar deleting destructor'
PUBLIC	??1?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UAE@XZ ; CryptoPP::AbstractGroup<CryptoPP::Integer>::~AbstractGroup<CryptoPP::Integer>
PUBLIC	?InversionIsFast@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::AbstractGroup<CryptoPP::Integer>::InversionIsFast
PUBLIC	?MultiplicativeGroup@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABV?$AbstractGroup@VInteger@CryptoPP@@@2@XZ ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroup
PUBLIC	?Equal@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE_NABVInteger@3@0@Z ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Equal
PUBLIC	?Identity@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@XZ ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Identity
PUBLIC	?Add@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@0@Z ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Add
PUBLIC	?Accumulate@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEAAVInteger@3@AAV43@ABV43@@Z ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Accumulate
PUBLIC	?Inverse@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@@Z ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Inverse
PUBLIC	?Subtract@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@0@Z ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Subtract
PUBLIC	?Reduce@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEAAVInteger@3@AAV43@ABV43@@Z ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Reduce
PUBLIC	?Double@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@@Z ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Double
PUBLIC	?ScalarMultiply@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@3@ABV43@0@Z ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::ScalarMultiply
PUBLIC	?CascadeScalarMultiply@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@3@ABV43@000@Z ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::CascadeScalarMultiply
PUBLIC	?SimultaneousMultiply@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEXPAVInteger@3@ABV43@PBV43@I@Z ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::SimultaneousMultiply
PUBLIC	??_GMultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UAEPAXI@Z ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::`scalar deleting destructor'
PUBLIC	?Clone@ModularArithmetic@CryptoPP@@UBEPAV12@XZ	; CryptoPP::ModularArithmetic::Clone
PUBLIC	?IsMontgomeryRepresentation@ModularArithmetic@CryptoPP@@UBE_NXZ ; CryptoPP::ModularArithmetic::IsMontgomeryRepresentation
PUBLIC	?ConvertIn@ModularArithmetic@CryptoPP@@UBE?AVInteger@2@ABV32@@Z ; CryptoPP::ModularArithmetic::ConvertIn
PUBLIC	?ConvertOut@ModularArithmetic@CryptoPP@@UBE?AVInteger@2@ABV32@@Z ; CryptoPP::ModularArithmetic::ConvertOut
PUBLIC	?Equal@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@0@Z ; CryptoPP::ModularArithmetic::Equal
PUBLIC	?Identity@ModularArithmetic@CryptoPP@@UBEABVInteger@2@XZ ; CryptoPP::ModularArithmetic::Identity
PUBLIC	?Double@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z ; CryptoPP::ModularArithmetic::Double
PUBLIC	?MultiplicativeIdentity@ModularArithmetic@CryptoPP@@UBEABVInteger@2@XZ ; CryptoPP::ModularArithmetic::MultiplicativeIdentity
PUBLIC	?Multiply@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z ; CryptoPP::ModularArithmetic::Multiply
PUBLIC	?Square@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z ; CryptoPP::ModularArithmetic::Square
PUBLIC	?IsUnit@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@@Z ; CryptoPP::ModularArithmetic::IsUnit
PUBLIC	?MultiplicativeInverse@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z ; CryptoPP::ModularArithmetic::MultiplicativeInverse
PUBLIC	?Divide@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z ; CryptoPP::ModularArithmetic::Divide
PUBLIC	??1ModularArithmetic@CryptoPP@@UAE@XZ		; CryptoPP::ModularArithmetic::~ModularArithmetic
PUBLIC	??_GModularArithmetic@CryptoPP@@UAEPAXI@Z	; CryptoPP::ModularArithmetic::`scalar deleting destructor'
PUBLIC	?Clone@MontgomeryRepresentation@CryptoPP@@UBEPAVModularArithmetic@2@XZ ; CryptoPP::MontgomeryRepresentation::Clone
PUBLIC	?IsMontgomeryRepresentation@MontgomeryRepresentation@CryptoPP@@UBE_NXZ ; CryptoPP::MontgomeryRepresentation::IsMontgomeryRepresentation
PUBLIC	?ConvertIn@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z ; CryptoPP::MontgomeryRepresentation::ConvertIn
PUBLIC	?MultiplicativeIdentity@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@XZ ; CryptoPP::MontgomeryRepresentation::MultiplicativeIdentity
PUBLIC	?CascadeExponentiate@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@000@Z ; CryptoPP::MontgomeryRepresentation::CascadeExponentiate
PUBLIC	?SimultaneousExponentiate@MontgomeryRepresentation@CryptoPP@@UBEXPAVInteger@2@ABV32@PBV32@I@Z ; CryptoPP::MontgomeryRepresentation::SimultaneousExponentiate
PUBLIC	??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::MontgomeryRepresentation::MontgomeryRepresentation
PUBLIC	??_GMontgomeryRepresentation@CryptoPP@@UAEPAXI@Z ; CryptoPP::MontgomeryRepresentation::`scalar deleting destructor'
PUBLIC	??0DL_BadElement@CryptoPP@@QAE@XZ		; CryptoPP::DL_BadElement::DL_BadElement
PUBLIC	??1DL_BadElement@CryptoPP@@UAE@XZ		; CryptoPP::DL_BadElement::~DL_BadElement
PUBLIC	??0DL_BadElement@CryptoPP@@QAE@ABV01@@Z		; CryptoPP::DL_BadElement::DL_BadElement
PUBLIC	??_GDL_BadElement@CryptoPP@@UAEPAXI@Z		; CryptoPP::DL_BadElement::`scalar deleting destructor'
PUBLIC	?IsInitialized@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::IsInitialized
PUBLIC	?GetBase@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@2@ABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@@Z ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::GetBase
PUBLIC	?_Xlength@?$vector@VInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@CAXXZ ; std::vector<CryptoPP::Integer,std::allocator<CryptoPP::Integer> >::_Xlength
PUBLIC	??1?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::~DL_FixedBasePrecomputationImpl<CryptoPP::Integer>
PUBLIC	?NeedConversions@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer>::NeedConversions
PUBLIC	?ConvertIn@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@@Z ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer>::ConvertIn
PUBLIC	?ConvertOut@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@@Z ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer>::ConvertOut
PUBLIC	?NeedConversions@ModExpPrecomputation@CryptoPP@@UBE_NXZ ; CryptoPP::ModExpPrecomputation::NeedConversions
PUBLIC	?ConvertIn@ModExpPrecomputation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z ; CryptoPP::ModExpPrecomputation::ConvertIn
PUBLIC	?ConvertOut@ModExpPrecomputation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z ; CryptoPP::ModExpPrecomputation::ConvertOut
PUBLIC	?GetGroup@ModExpPrecomputation@CryptoPP@@UBEABV?$AbstractGroup@VInteger@CryptoPP@@@2@XZ ; CryptoPP::ModExpPrecomputation::GetGroup
PUBLIC	?BERDecodeElement@ModExpPrecomputation@CryptoPP@@UBE?AVInteger@2@AAVBufferedTransformation@2@@Z ; CryptoPP::ModExpPrecomputation::BERDecodeElement
PUBLIC	?DEREncodeElement@ModExpPrecomputation@CryptoPP@@UBEXAAVBufferedTransformation@2@ABVInteger@2@@Z ; CryptoPP::ModExpPrecomputation::DEREncodeElement
PUBLIC	??1?$member_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::MontgomeryRepresentation>::~member_ptr<CryptoPP::MontgomeryRepresentation>
PUBLIC	?reset@?$member_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAEXPAVMontgomeryRepresentation@2@@Z ; CryptoPP::member_ptr<CryptoPP::MontgomeryRepresentation>::reset
PUBLIC	??4?$value_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAEAAV01@ABV01@@Z ; CryptoPP::value_ptr<CryptoPP::MontgomeryRepresentation>::operator=
PUBLIC	??1ModExpPrecomputation@CryptoPP@@QAE@XZ	; CryptoPP::ModExpPrecomputation::~ModExpPrecomputation
PUBLIC	?Validate@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE_NAAVRandomNumberGenerator@2@I@Z ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::Validate
PUBLIC	?SupportsPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::SupportsPrecomputation
PUBLIC	?Precompute@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UAEXI@Z ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::Precompute
PUBLIC	?LoadPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UAEXAAVBufferedTransformation@2@@Z ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::LoadPrecomputation
PUBLIC	?SavePrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::SavePrecomputation
PUBLIC	?GetSubgroupGenerator@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@2@XZ ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::GetSubgroupGenerator
PUBLIC	?SetSubgroupGenerator@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UAEXABVInteger@2@@Z ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::SetSubgroupGenerator
PUBLIC	?ExponentiateBase@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@@Z ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::ExponentiateBase
PUBLIC	?ExponentiateElement@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::ExponentiateElement
PUBLIC	?GetCofactor@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@XZ ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::GetCofactor
PUBLIC	?Save@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::Save
PUBLIC	?Load@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@UAEXAAVBufferedTransformation@2@@Z ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::Load
PUBLIC	?GetSubgroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBEABVInteger@2@XZ ; CryptoPP::DL_GroupParameters_IntegerBased::GetSubgroupOrder
PUBLIC	?GetGroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ ; CryptoPP::DL_GroupParameters_IntegerBased::GetGroupOrder
PUBLIC	?FastSubgroupCheckAvailable@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NXZ ; CryptoPP::DL_GroupParameters_IntegerBased::FastSubgroupCheckAvailable
PUBLIC	?EncodeElement@DL_GroupParameters_IntegerBased@CryptoPP@@UBEX_NABVInteger@2@PAE@Z ; CryptoPP::DL_GroupParameters_IntegerBased::EncodeElement
PUBLIC	?GetEncodedElementSize@DL_GroupParameters_IntegerBased@CryptoPP@@UBEI_N@Z ; CryptoPP::DL_GroupParameters_IntegerBased::GetEncodedElementSize
PUBLIC	?ConvertElementToInteger@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@ABV32@@Z ; CryptoPP::DL_GroupParameters_IntegerBased::ConvertElementToInteger
PUBLIC	??1DL_GroupParameters_IntegerBased@CryptoPP@@UAE@XZ ; CryptoPP::DL_GroupParameters_IntegerBased::~DL_GroupParameters_IntegerBased
PUBLIC	?GetGroupPrecomputation@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UBEABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@XZ ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::GetGroupPrecomputation
PUBLIC	?GetBasePrecomputation@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UBEABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::GetBasePrecomputation
PUBLIC	?AccessBasePrecomputation@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAEAAV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::AccessBasePrecomputation
PUBLIC	??1?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAE@XZ ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::~DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>
PUBLIC	??_G?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAEPAXI@Z ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`scalar deleting destructor'
PUBLIC	?AssignFrom@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEXABVNameValuePairs@2@@Z ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::AssignFrom
PUBLIC	?GetBasePrecomputation@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UBEABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::GetBasePrecomputation
PUBLIC	?AccessBasePrecomputation@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEAAV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::AccessBasePrecomputation
PUBLIC	?GetModulus@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UBEABVInteger@2@XZ ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::GetModulus
PUBLIC	?SetModulusAndSubgroupGenerator@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEXABVInteger@2@0@Z ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::SetModulusAndSubgroupGenerator
PUBLIC	??4?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@QAEAAV01@ABV01@@Z ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::operator=
PUBLIC	?IsIdentity@DL_GroupParameters_GFP@CryptoPP@@UBE_NABVInteger@2@@Z ; CryptoPP::DL_GroupParameters_GFP::IsIdentity
PUBLIC	?GetVoidValue@DL_GroupParameters_GFP@CryptoPP@@UBE_NPBDABVtype_info@@PAX@Z ; CryptoPP::DL_GroupParameters_GFP::GetVoidValue
PUBLIC	?GetFieldType@DL_GroupParameters_GFP@CryptoPP@@MBEHXZ ; CryptoPP::DL_GroupParameters_GFP::GetFieldType
PUBLIC	??0DL_GroupParameters_GFP@CryptoPP@@QAE@XZ	; CryptoPP::DL_GroupParameters_GFP::DL_GroupParameters_GFP
PUBLIC	??_GDL_GroupParameters_GFP@CryptoPP@@UAEPAXI@Z	; CryptoPP::DL_GroupParameters_GFP::`scalar deleting destructor'
PUBLIC	??$GetValueHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@VDL_GroupParameters_GFP@2@@CryptoPP@@YA?AV?$GetValueHelperClass@VDL_GroupParameters_GFP@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PBVDL_GroupParameters_GFP@0@PBDABVtype_info@@PAXPBVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z ; CryptoPP::GetValueHelper<CryptoPP::DL_GroupParameters_IntegerBased,CryptoPP::DL_GroupParameters_GFP>
PUBLIC	??0?$GetValueHelperClass@VDL_GroupParameters_GFP@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@QAE@PBVDL_GroupParameters_GFP@1@PBDABVtype_info@@PAXPBVNameValuePairs@1@@Z ; CryptoPP::GetValueHelperClass<CryptoPP::DL_GroupParameters_GFP,CryptoPP::DL_GroupParameters_IntegerBased>::GetValueHelperClass<CryptoPP::DL_GroupParameters_GFP,CryptoPP::DL_GroupParameters_IntegerBased>
PUBLIC	?GetDefaultSubgroupOrderSize@DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@MBEII@Z ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::GetDefaultSubgroupOrderSize
PUBLIC	??_GDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@UAEPAXI@Z ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`scalar deleting destructor'
PUBLIC	?AccessCryptoParameters@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UAEAAVCryptoParameters@2@XZ ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::AccessCryptoParameters
PUBLIC	?AgreedValueLength@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEIXZ ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::AgreedValueLength
PUBLIC	?PrivateKeyLength@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEIXZ ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::PrivateKeyLength
PUBLIC	?PublicKeyLength@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEIXZ ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::PublicKeyLength
PUBLIC	?GeneratePrivateKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::GeneratePrivateKey
PUBLIC	?GeneratePublicKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::GeneratePublicKey
PUBLIC	?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::Agree
PUBLIC	?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::GeneratePublicKey
PUBLIC	?AlgorithmName@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::AlgorithmName
PUBLIC	?GetKeyAgreementAlgorithm@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@EBEABV?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@2@XZ ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::GetKeyAgreementAlgorithm
PUBLIC	?AccessAbstractGroupParameters@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@EAEAAV?$DL_GroupParameters@VInteger@CryptoPP@@@2@XZ ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::AccessAbstractGroupParameters
PUBLIC	??1?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UAE@XZ ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::~DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >
PUBLIC	??_G?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UAEPAXI@Z ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`scalar deleting destructor'
PUBLIC	?AccessCryptoParameters@DH2@CryptoPP@@UAEAAVCryptoParameters@2@XZ ; CryptoPP::DH2::AccessCryptoParameters
PUBLIC	?AgreedValueLength@DH2@CryptoPP@@UBEIXZ		; CryptoPP::DH2::AgreedValueLength
PUBLIC	?StaticPrivateKeyLength@DH2@CryptoPP@@UBEIXZ	; CryptoPP::DH2::StaticPrivateKeyLength
PUBLIC	?StaticPublicKeyLength@DH2@CryptoPP@@UBEIXZ	; CryptoPP::DH2::StaticPublicKeyLength
PUBLIC	?GenerateStaticPrivateKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z ; CryptoPP::DH2::GenerateStaticPrivateKey
PUBLIC	?GenerateStaticPublicKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z ; CryptoPP::DH2::GenerateStaticPublicKey
PUBLIC	?GenerateStaticKeyPair@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE1@Z ; CryptoPP::DH2::GenerateStaticKeyPair
PUBLIC	?EphemeralPrivateKeyLength@DH2@CryptoPP@@UBEIXZ	; CryptoPP::DH2::EphemeralPrivateKeyLength
PUBLIC	?EphemeralPublicKeyLength@DH2@CryptoPP@@UBEIXZ	; CryptoPP::DH2::EphemeralPublicKeyLength
PUBLIC	?GenerateEphemeralPrivateKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z ; CryptoPP::DH2::GenerateEphemeralPrivateKey
PUBLIC	?GenerateEphemeralPublicKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z ; CryptoPP::DH2::GenerateEphemeralPublicKey
PUBLIC	?GenerateEphemeralKeyPair@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE1@Z ; CryptoPP::DH2::GenerateEphemeralKeyPair
PUBLIC	??_GDH2@CryptoPP@@UAEPAXI@Z			; CryptoPP::DH2::`scalar deleting destructor'
PUBLIC	??0?$FixedSizeSecBlock@I$0CA@V?$FixedSizeAllocatorWithCleanup@I$0CA@V?$NullAllocator@I@CryptoPP@@$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::FixedSizeSecBlock<unsigned int,32,CryptoPP::FixedSizeAllocatorWithCleanup<unsigned int,32,CryptoPP::NullAllocator<unsigned int>,0> >::FixedSizeSecBlock<unsigned int,32,CryptoPP::FixedSizeAllocatorWithCleanup<unsigned int,32,CryptoPP::NullAllocator<unsigned int>,0> >
PUBLIC	?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::MinKeyLength
PUBLIC	?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::MaxKeyLength
PUBLIC	?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::DefaultKeyLength
PUBLIC	?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::GetValidKeyLength
PUBLIC	?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::IVRequirement
PUBLIC	?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::IVSize
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> > >::AlgorithmName
PUBLIC	?BlockSize@?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ; CryptoPP::BlockCipherImpl<CryptoPP::CAST256_Info,CryptoPP::BlockCipher>::BlockSize
PUBLIC	?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::MinKeyLength
PUBLIC	?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::MaxKeyLength
PUBLIC	?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::DefaultKeyLength
PUBLIC	?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::GetValidKeyLength
PUBLIC	?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::IVRequirement
PUBLIC	?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::IVSize
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> > >::AlgorithmName
PUBLIC	?BlockSize@?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ; CryptoPP::BlockCipherImpl<CryptoPP::RC6_Info,CryptoPP::BlockCipher>::BlockSize
PUBLIC	??0?$SecBlock@IV?$AllocatorWithCleanup@I$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::SecBlock<unsigned int,CryptoPP::AllocatorWithCleanup<unsigned int,0> >::SecBlock<unsigned int,CryptoPP::AllocatorWithCleanup<unsigned int,0> >
PUBLIC	?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::MinKeyLength
PUBLIC	?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::MaxKeyLength
PUBLIC	?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::DefaultKeyLength
PUBLIC	?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::GetValidKeyLength
PUBLIC	?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::IVRequirement
PUBLIC	?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::IVSize
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> > >::AlgorithmName
PUBLIC	?BlockSize@?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ; CryptoPP::BlockCipherImpl<CryptoPP::MARS_Info,CryptoPP::BlockCipher>::BlockSize
PUBLIC	??0?$FixedSizeSecBlock@I$0CI@V?$FixedSizeAllocatorWithCleanup@I$0CI@V?$NullAllocator@I@CryptoPP@@$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::FixedSizeSecBlock<unsigned int,40,CryptoPP::FixedSizeAllocatorWithCleanup<unsigned int,40,CryptoPP::NullAllocator<unsigned int>,0> >::FixedSizeSecBlock<unsigned int,40,CryptoPP::FixedSizeAllocatorWithCleanup<unsigned int,40,CryptoPP::NullAllocator<unsigned int>,0> >
PUBLIC	?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::MinKeyLength
PUBLIC	?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::MaxKeyLength
PUBLIC	?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::DefaultKeyLength
PUBLIC	?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::GetValidKeyLength
PUBLIC	?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::IVRequirement
PUBLIC	?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::IVSize
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> > >::AlgorithmName
PUBLIC	?BlockSize@?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ; CryptoPP::BlockCipherImpl<CryptoPP::Serpent_Info,CryptoPP::BlockCipher>::BlockSize
PUBLIC	?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::MinKeyLength
PUBLIC	?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::MaxKeyLength
PUBLIC	?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::DefaultKeyLength
PUBLIC	?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::GetValidKeyLength
PUBLIC	?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::IVRequirement
PUBLIC	?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::IVSize
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> > >::AlgorithmName
PUBLIC	?BlockSize@?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ; CryptoPP::BlockCipherImpl<CryptoPP::Twofish_Info,CryptoPP::BlockCipher>::BlockSize
PUBLIC	??0?$FixedSizeSecBlock@I$0EAA@V?$FixedSizeAllocatorWithCleanup@I$0EAA@V?$NullAllocator@I@CryptoPP@@$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::FixedSizeSecBlock<unsigned int,1024,CryptoPP::FixedSizeAllocatorWithCleanup<unsigned int,1024,CryptoPP::NullAllocator<unsigned int>,0> >::FixedSizeSecBlock<unsigned int,1024,CryptoPP::FixedSizeAllocatorWithCleanup<unsigned int,1024,CryptoPP::NullAllocator<unsigned int>,0> >
PUBLIC	?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::MinKeyLength
PUBLIC	?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::MaxKeyLength
PUBLIC	?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::DefaultKeyLength
PUBLIC	?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::GetValidKeyLength
PUBLIC	?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::IVRequirement
PUBLIC	?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::IVSize
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> > >::AlgorithmName
PUBLIC	?BlockSize@?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ; CryptoPP::BlockCipherImpl<CryptoPP::Blowfish_Info,CryptoPP::BlockCipher>::BlockSize
PUBLIC	?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::MinKeyLength
PUBLIC	?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::MaxKeyLength
PUBLIC	?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::DefaultKeyLength
PUBLIC	?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::GetValidKeyLength
PUBLIC	?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::IVRequirement
PUBLIC	?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::IVSize
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> > >::AlgorithmName
PUBLIC	?BlockSize@?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ; CryptoPP::BlockCipherImpl<CryptoPP::Camellia_Info,CryptoPP::BlockCipher>::BlockSize
PUBLIC	?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::MinKeyLength
PUBLIC	?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::MaxKeyLength
PUBLIC	?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::DefaultKeyLength
PUBLIC	?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::GetValidKeyLength
PUBLIC	?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::IVRequirement
PUBLIC	?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::IVSize
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> > >::AlgorithmName
PUBLIC	?BlockSize@?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ; CryptoPP::BlockCipherImpl<CryptoPP::DES_EDE2_Info,CryptoPP::BlockCipher>::BlockSize
PUBLIC	?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::MinKeyLength
PUBLIC	?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::MaxKeyLength
PUBLIC	?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::DefaultKeyLength
PUBLIC	?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::GetValidKeyLength
PUBLIC	?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::IVRequirement
PUBLIC	?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::IVSize
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> > >::AlgorithmName
PUBLIC	?BlockSize@?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ; CryptoPP::BlockCipherImpl<CryptoPP::IDEA_Info,CryptoPP::BlockCipher>::BlockSize
PUBLIC	?OptimalDataAlignment@Base@IDEA@CryptoPP@@UBEIXZ ; CryptoPP::IDEA::Base::OptimalDataAlignment
PUBLIC	?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::MinKeyLength
PUBLIC	?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::MaxKeyLength
PUBLIC	?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::DefaultKeyLength
PUBLIC	?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::GetValidKeyLength
PUBLIC	?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::IVRequirement
PUBLIC	?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::IVSize
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> > >::AlgorithmName
PUBLIC	?BlockSize@?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ; CryptoPP::BlockCipherImpl<CryptoPP::RC5_Info,CryptoPP::BlockCipher>::BlockSize
PUBLIC	?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::MinKeyLength
PUBLIC	?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::MaxKeyLength
PUBLIC	?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::DefaultKeyLength
PUBLIC	?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::GetValidKeyLength
PUBLIC	?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::IVRequirement
PUBLIC	?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::IVSize
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> > >::AlgorithmName
PUBLIC	?BlockSize@?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ; CryptoPP::BlockCipherImpl<CryptoPP::SEED_Info,CryptoPP::BlockCipher>::BlockSize
PUBLIC	?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::MinKeyLength
PUBLIC	?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::MaxKeyLength
PUBLIC	?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::DefaultKeyLength
PUBLIC	?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::GetValidKeyLength
PUBLIC	?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::IVRequirement
PUBLIC	?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::IVSize
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> > >::AlgorithmName
PUBLIC	?BlockSize@?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ; CryptoPP::BlockCipherImpl<CryptoPP::SHACAL2_Info,CryptoPP::BlockCipher>::BlockSize
PUBLIC	?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::MinKeyLength
PUBLIC	?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::MaxKeyLength
PUBLIC	?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::DefaultKeyLength
PUBLIC	?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::GetValidKeyLength
PUBLIC	?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::IVRequirement
PUBLIC	?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::IVSize
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> > >::AlgorithmName
PUBLIC	?BlockSize@?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ; CryptoPP::BlockCipherImpl<CryptoPP::TEA_Info,CryptoPP::BlockCipher>::BlockSize
PUBLIC	??1BlockCipherAlgorithm@@UAE@XZ			; BlockCipherAlgorithm::~BlockCipherAlgorithm
PUBLIC	?Pick@BlockCipherAlgorithm@@SAPAU1@H@Z		; BlockCipherAlgorithm::Pick
PUBLIC	??_GBlockCipherAlgorithm@@UAEPAXI@Z		; BlockCipherAlgorithm::`scalar deleting destructor'
PUBLIC	??1KeyAgreement@@UAE@XZ				; KeyAgreement::~KeyAgreement
PUBLIC	??_GKeyAgreement@@UAEPAXI@Z			; KeyAgreement::`scalar deleting destructor'
PUBLIC	??0DH2KeyAgreement@@QAE@XZ			; DH2KeyAgreement::DH2KeyAgreement
PUBLIC	??1DH2KeyAgreement@@UAE@XZ			; DH2KeyAgreement::~DH2KeyAgreement
PUBLIC	?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z		; DH2KeyAgreement::Prepare
PUBLIC	?Agree@DH2KeyAgreement@@UAE_NIPBXI@Z		; DH2KeyAgreement::Agree
PUBLIC	??_GDH2KeyAgreement@@UAEPAXI@Z			; DH2KeyAgreement::`scalar deleting destructor'
PUBLIC	??1?$auto_ptr@UBlockCipherAlgorithm@@@std@@QAE@XZ ; std::auto_ptr<BlockCipherAlgorithm>::~auto_ptr<BlockCipherAlgorithm>
PUBLIC	??1?$BlockCipherDetail@VRC6@CryptoPP@@@@UAE@XZ	; BlockCipherDetail<CryptoPP::RC6>::~BlockCipherDetail<CryptoPP::RC6>
PUBLIC	?GetBlockSize@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::RC6>::GetBlockSize
PUBLIC	?GetDefaultKeyLength@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::RC6>::GetDefaultKeyLength
PUBLIC	?GetIVLength@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::RC6>::GetIVLength
PUBLIC	?CreateEncoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::RC6>::CreateEncoder
PUBLIC	?CreateDecoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::RC6>::CreateDecoder
PUBLIC	??_G?$BlockCipherDetail@VRC6@CryptoPP@@@@UAEPAXI@Z ; BlockCipherDetail<CryptoPP::RC6>::`scalar deleting destructor'
PUBLIC	??1?$BlockCipherDetail@VMARS@CryptoPP@@@@UAE@XZ	; BlockCipherDetail<CryptoPP::MARS>::~BlockCipherDetail<CryptoPP::MARS>
PUBLIC	?GetBlockSize@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::MARS>::GetBlockSize
PUBLIC	?GetDefaultKeyLength@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::MARS>::GetDefaultKeyLength
PUBLIC	?GetIVLength@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::MARS>::GetIVLength
PUBLIC	?CreateEncoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::MARS>::CreateEncoder
PUBLIC	?CreateDecoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::MARS>::CreateDecoder
PUBLIC	??_G?$BlockCipherDetail@VMARS@CryptoPP@@@@UAEPAXI@Z ; BlockCipherDetail<CryptoPP::MARS>::`scalar deleting destructor'
PUBLIC	??1?$BlockCipherDetail@VTwofish@CryptoPP@@@@UAE@XZ ; BlockCipherDetail<CryptoPP::Twofish>::~BlockCipherDetail<CryptoPP::Twofish>
PUBLIC	?GetBlockSize@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::Twofish>::GetBlockSize
PUBLIC	?GetDefaultKeyLength@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::Twofish>::GetDefaultKeyLength
PUBLIC	?GetIVLength@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::Twofish>::GetIVLength
PUBLIC	?CreateEncoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::Twofish>::CreateEncoder
PUBLIC	?CreateDecoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::Twofish>::CreateDecoder
PUBLIC	??_G?$BlockCipherDetail@VTwofish@CryptoPP@@@@UAEPAXI@Z ; BlockCipherDetail<CryptoPP::Twofish>::`scalar deleting destructor'
PUBLIC	??1?$BlockCipherDetail@VSerpent@CryptoPP@@@@UAE@XZ ; BlockCipherDetail<CryptoPP::Serpent>::~BlockCipherDetail<CryptoPP::Serpent>
PUBLIC	?GetBlockSize@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::Serpent>::GetBlockSize
PUBLIC	?GetDefaultKeyLength@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::Serpent>::GetDefaultKeyLength
PUBLIC	?GetIVLength@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::Serpent>::GetIVLength
PUBLIC	?CreateEncoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::Serpent>::CreateEncoder
PUBLIC	?CreateDecoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::Serpent>::CreateDecoder
PUBLIC	??_G?$BlockCipherDetail@VSerpent@CryptoPP@@@@UAEPAXI@Z ; BlockCipherDetail<CryptoPP::Serpent>::`scalar deleting destructor'
PUBLIC	??1?$BlockCipherDetail@VCAST256@CryptoPP@@@@UAE@XZ ; BlockCipherDetail<CryptoPP::CAST256>::~BlockCipherDetail<CryptoPP::CAST256>
PUBLIC	?GetBlockSize@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::CAST256>::GetBlockSize
PUBLIC	?GetDefaultKeyLength@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::CAST256>::GetDefaultKeyLength
PUBLIC	?GetIVLength@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::CAST256>::GetIVLength
PUBLIC	?CreateEncoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::CAST256>::CreateEncoder
PUBLIC	?CreateDecoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::CAST256>::CreateDecoder
PUBLIC	??_G?$BlockCipherDetail@VCAST256@CryptoPP@@@@UAEPAXI@Z ; BlockCipherDetail<CryptoPP::CAST256>::`scalar deleting destructor'
PUBLIC	??1?$BlockCipherDetail@VIDEA@CryptoPP@@@@UAE@XZ	; BlockCipherDetail<CryptoPP::IDEA>::~BlockCipherDetail<CryptoPP::IDEA>
PUBLIC	?GetBlockSize@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::IDEA>::GetBlockSize
PUBLIC	?GetDefaultKeyLength@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::IDEA>::GetDefaultKeyLength
PUBLIC	?GetIVLength@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::IDEA>::GetIVLength
PUBLIC	?CreateEncoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::IDEA>::CreateEncoder
PUBLIC	?CreateDecoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::IDEA>::CreateDecoder
PUBLIC	??_G?$BlockCipherDetail@VIDEA@CryptoPP@@@@UAEPAXI@Z ; BlockCipherDetail<CryptoPP::IDEA>::`scalar deleting destructor'
PUBLIC	??1?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UAE@XZ ; BlockCipherDetail<CryptoPP::DES_EDE2>::~BlockCipherDetail<CryptoPP::DES_EDE2>
PUBLIC	?GetBlockSize@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::DES_EDE2>::GetBlockSize
PUBLIC	?GetDefaultKeyLength@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::DES_EDE2>::GetDefaultKeyLength
PUBLIC	?GetIVLength@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::DES_EDE2>::GetIVLength
PUBLIC	?CreateEncoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::DES_EDE2>::CreateEncoder
PUBLIC	?CreateDecoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::DES_EDE2>::CreateDecoder
PUBLIC	??_G?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UAEPAXI@Z ; BlockCipherDetail<CryptoPP::DES_EDE2>::`scalar deleting destructor'
PUBLIC	??1?$BlockCipherDetail@VCamellia@CryptoPP@@@@UAE@XZ ; BlockCipherDetail<CryptoPP::Camellia>::~BlockCipherDetail<CryptoPP::Camellia>
PUBLIC	?GetBlockSize@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::Camellia>::GetBlockSize
PUBLIC	?GetDefaultKeyLength@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::Camellia>::GetDefaultKeyLength
PUBLIC	?GetIVLength@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::Camellia>::GetIVLength
PUBLIC	?CreateEncoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::Camellia>::CreateEncoder
PUBLIC	?CreateDecoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::Camellia>::CreateDecoder
PUBLIC	??_G?$BlockCipherDetail@VCamellia@CryptoPP@@@@UAEPAXI@Z ; BlockCipherDetail<CryptoPP::Camellia>::`scalar deleting destructor'
PUBLIC	??1?$BlockCipherDetail@VSEED@CryptoPP@@@@UAE@XZ	; BlockCipherDetail<CryptoPP::SEED>::~BlockCipherDetail<CryptoPP::SEED>
PUBLIC	?GetBlockSize@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::SEED>::GetBlockSize
PUBLIC	?GetDefaultKeyLength@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::SEED>::GetDefaultKeyLength
PUBLIC	?GetIVLength@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::SEED>::GetIVLength
PUBLIC	?CreateEncoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::SEED>::CreateEncoder
PUBLIC	?CreateDecoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::SEED>::CreateDecoder
PUBLIC	??_G?$BlockCipherDetail@VSEED@CryptoPP@@@@UAEPAXI@Z ; BlockCipherDetail<CryptoPP::SEED>::`scalar deleting destructor'
PUBLIC	??1?$BlockCipherDetail@VRC5@CryptoPP@@@@UAE@XZ	; BlockCipherDetail<CryptoPP::RC5>::~BlockCipherDetail<CryptoPP::RC5>
PUBLIC	?GetBlockSize@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::RC5>::GetBlockSize
PUBLIC	?GetDefaultKeyLength@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::RC5>::GetDefaultKeyLength
PUBLIC	?GetIVLength@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::RC5>::GetIVLength
PUBLIC	?CreateEncoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::RC5>::CreateEncoder
PUBLIC	?CreateDecoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::RC5>::CreateDecoder
PUBLIC	??_G?$BlockCipherDetail@VRC5@CryptoPP@@@@UAEPAXI@Z ; BlockCipherDetail<CryptoPP::RC5>::`scalar deleting destructor'
PUBLIC	??1?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UAE@XZ ; BlockCipherDetail<CryptoPP::Blowfish>::~BlockCipherDetail<CryptoPP::Blowfish>
PUBLIC	?GetBlockSize@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::Blowfish>::GetBlockSize
PUBLIC	?GetDefaultKeyLength@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::Blowfish>::GetDefaultKeyLength
PUBLIC	?GetIVLength@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::Blowfish>::GetIVLength
PUBLIC	?CreateEncoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::Blowfish>::CreateEncoder
PUBLIC	?CreateDecoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::Blowfish>::CreateDecoder
PUBLIC	??_G?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UAEPAXI@Z ; BlockCipherDetail<CryptoPP::Blowfish>::`scalar deleting destructor'
PUBLIC	??1?$BlockCipherDetail@VTEA@CryptoPP@@@@UAE@XZ	; BlockCipherDetail<CryptoPP::TEA>::~BlockCipherDetail<CryptoPP::TEA>
PUBLIC	?GetBlockSize@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::TEA>::GetBlockSize
PUBLIC	?GetDefaultKeyLength@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::TEA>::GetDefaultKeyLength
PUBLIC	?GetIVLength@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::TEA>::GetIVLength
PUBLIC	?CreateEncoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::TEA>::CreateEncoder
PUBLIC	?CreateDecoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::TEA>::CreateDecoder
PUBLIC	??_G?$BlockCipherDetail@VTEA@CryptoPP@@@@UAEPAXI@Z ; BlockCipherDetail<CryptoPP::TEA>::`scalar deleting destructor'
PUBLIC	??1?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UAE@XZ ; BlockCipherDetail<CryptoPP::SHACAL2>::~BlockCipherDetail<CryptoPP::SHACAL2>
PUBLIC	?GetBlockSize@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::SHACAL2>::GetBlockSize
PUBLIC	?GetDefaultKeyLength@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::SHACAL2>::GetDefaultKeyLength
PUBLIC	?GetIVLength@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEHXZ ; BlockCipherDetail<CryptoPP::SHACAL2>::GetIVLength
PUBLIC	?CreateEncoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::SHACAL2>::CreateEncoder
PUBLIC	?CreateDecoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ; BlockCipherDetail<CryptoPP::SHACAL2>::CreateDecoder
PUBLIC	??_G?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UAEPAXI@Z ; BlockCipherDetail<CryptoPP::SHACAL2>::`scalar deleting destructor'
PUBLIC	?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@UBEPAVClonable@2@XZ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::SHACAL2::Enc>::Clone
PUBLIC	?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::IsForwardTransformation
PUBLIC	??_G?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@UAEPAXI@Z ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`scalar deleting destructor'
PUBLIC	??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc> >
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
PUBLIC	??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
PUBLIC	??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
PUBLIC	??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
PUBLIC	?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@UBEPAVClonable@2@XZ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::TEA::Enc>::Clone
PUBLIC	?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::IsForwardTransformation
PUBLIC	??_G?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@UAEPAXI@Z ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`scalar deleting destructor'
PUBLIC	??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc> >
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
PUBLIC	??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
PUBLIC	??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
PUBLIC	??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
PUBLIC	?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@UBEPAVClonable@2@XZ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::Blowfish::Base>::Clone
PUBLIC	?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::IsForwardTransformation
PUBLIC	??_G?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@UAEPAXI@Z ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`scalar deleting destructor'
PUBLIC	??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base> >
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
PUBLIC	??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
PUBLIC	??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
PUBLIC	??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
PUBLIC	?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@UBEPAVClonable@2@XZ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::RC5::Enc>::Clone
PUBLIC	?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::IsForwardTransformation
PUBLIC	??_G?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UAEPAXI@Z ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`scalar deleting destructor'
PUBLIC	??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc> >
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
PUBLIC	??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
PUBLIC	??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
PUBLIC	??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
PUBLIC	?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@UBEPAVClonable@2@XZ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::SEED::Base>::Clone
PUBLIC	?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::IsForwardTransformation
PUBLIC	??_G?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@UAEPAXI@Z ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`scalar deleting destructor'
PUBLIC	??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base> >
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
PUBLIC	??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
PUBLIC	??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
PUBLIC	??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
PUBLIC	?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@UBEPAVClonable@2@XZ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::Camellia::Base>::Clone
PUBLIC	?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::IsForwardTransformation
PUBLIC	??_G?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UAEPAXI@Z ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`scalar deleting destructor'
PUBLIC	??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base> >
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
PUBLIC	??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
PUBLIC	??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
PUBLIC	??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
PUBLIC	?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@UBEPAVClonable@2@XZ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::DES_EDE2::Base>::Clone
PUBLIC	?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::IsForwardTransformation
PUBLIC	??_G?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@UAEPAXI@Z ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`scalar deleting destructor'
PUBLIC	??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base> >
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
PUBLIC	??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
PUBLIC	??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
PUBLIC	??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
PUBLIC	?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@UBEPAVClonable@2@XZ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::IDEA::Base>::Clone
PUBLIC	?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::IsForwardTransformation
PUBLIC	??_G?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@UAEPAXI@Z ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`scalar deleting destructor'
PUBLIC	??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base> >
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
PUBLIC	??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
PUBLIC	??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
PUBLIC	??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
PUBLIC	?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@UBEPAVClonable@2@XZ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::CAST256::Base>::Clone
PUBLIC	?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::IsForwardTransformation
PUBLIC	??_G?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@UAEPAXI@Z ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`scalar deleting destructor'
PUBLIC	??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base> >
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
PUBLIC	??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
PUBLIC	??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
PUBLIC	??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
PUBLIC	?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@UBEPAVClonable@2@XZ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::Serpent::Enc>::Clone
PUBLIC	?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::IsForwardTransformation
PUBLIC	??_G?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@UAEPAXI@Z ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`scalar deleting destructor'
PUBLIC	??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc> >
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
PUBLIC	??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
PUBLIC	??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
PUBLIC	??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
PUBLIC	?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@UBEPAVClonable@2@XZ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::Twofish::Enc>::Clone
PUBLIC	?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::IsForwardTransformation
PUBLIC	??_G?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@UAEPAXI@Z ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`scalar deleting destructor'
PUBLIC	??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc> >
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
PUBLIC	??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
PUBLIC	??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
PUBLIC	??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
PUBLIC	?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@UBEPAVClonable@2@XZ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::MARS::Enc>::Clone
PUBLIC	?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::IsForwardTransformation
PUBLIC	??_G?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@UAEPAXI@Z ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`scalar deleting destructor'
PUBLIC	??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc> >
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
PUBLIC	??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
PUBLIC	??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
PUBLIC	??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
PUBLIC	?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@UBEPAVClonable@2@XZ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::RC6::Enc>::Clone
PUBLIC	?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::IsForwardTransformation
PUBLIC	??_G?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UAEPAXI@Z ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`scalar deleting destructor'
PUBLIC	??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc> >
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
PUBLIC	??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
PUBLIC	??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
PUBLIC	??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
PUBLIC	?Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@2@XZ ; CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref
PUBLIC	?AgreeWithEphemeralPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@ABV32@@Z ; CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::AgreeWithEphemeralPrivateKey
PUBLIC	?AgreeWithStaticPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV32@_N1@Z ; CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::AgreeWithStaticPrivateKey
PUBLIC	??$AssignFromHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@2@@CryptoPP@@YA?AV?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@0@ABVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z ; CryptoPP::AssignFromHelper<CryptoPP::DL_GroupParameters_IntegerBased,CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> > >
PUBLIC	??$StandardReallocate@EV?$AllocatorWithCleanup@E$00@CryptoPP@@@CryptoPP@@YAPAEAAV?$AllocatorWithCleanup@E$00@0@PAEII_N@Z ; CryptoPP::StandardReallocate<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,1> >
PUBLIC	??$StandardReallocate@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@YAPAEAAV?$AllocatorWithCleanup@E$0A@@0@PAEII_N@Z ; CryptoPP::StandardReallocate<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Destroy_range@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAXPAVInteger@CryptoPP@@QAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z ; std::_Destroy_range<std::allocator<CryptoPP::Integer> >
PUBLIC	??$_Pocca@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAXAAV?$allocator@VInteger@CryptoPP@@@0@ABV10@@Z ; std::_Pocca<std::allocator<CryptoPP::Integer> >
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Assign_range@PAVInteger@CryptoPP@@@?$vector@VInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@AAEXPAVInteger@CryptoPP@@0Uforward_iterator_tag@1@@Z ; std::vector<CryptoPP::Integer,std::allocator<CryptoPP::Integer> >::_Assign_range<CryptoPP::Integer *>
PUBLIC	??$_Uninitialized_copy@PAVInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAPAVInteger@CryptoPP@@QAV12@0PAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z ; std::_Uninitialized_copy<CryptoPP::Integer *,std::allocator<CryptoPP::Integer> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@VInteger@CryptoPP@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<CryptoPP::Integer> >::~_Uninitialized_backout_al<std::allocator<CryptoPP::Integer> >
PUBLIC	??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`vector deleting destructor'
PUBLIC	??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@WBI@AEPAXI@Z ; [thunk]:CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`vector deleting destructor'
PUBLIC	??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@WCI@AEPAXI@Z ; [thunk]:CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`vector deleting destructor'
PUBLIC	?AssignFrom@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@$4PPPPPPPM@A@AEXABVNameValuePairs@2@@Z ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::AssignFrom
PUBLIC	?Validate@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BE_NAAVRandomNumberGenerator@2@I@Z ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::Validate
PUBLIC	?Save@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BEXAAVBufferedTransformation@2@@Z ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::Save
PUBLIC	?Load@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXAAVBufferedTransformation@2@@Z ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::Load
PUBLIC	?SupportsPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BE_NXZ ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::SupportsPrecomputation
PUBLIC	?Precompute@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXI@Z ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::Precompute
PUBLIC	?LoadPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXAAVBufferedTransformation@2@@Z ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::LoadPrecomputation
PUBLIC	?SavePrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BEXAAVBufferedTransformation@2@@Z ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::SavePrecomputation
PUBLIC	??_E?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@$4PPPPPPPM@GM@AEPAXI@Z ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`vector deleting destructor'
PUBLIC	?GetVoidValue@DL_GroupParameters_IntegerBased@CryptoPP@@$4PPPPPPPM@EE@BE_NPBDABVtype_info@@PAX@Z ; CryptoPP::DL_GroupParameters_IntegerBased::GetVoidValue
PUBLIC	?AssignFrom@DL_GroupParameters_IntegerBased@CryptoPP@@$4PPPPPPPM@EE@AEXABVNameValuePairs@2@@Z ; CryptoPP::DL_GroupParameters_IntegerBased::AssignFrom
PUBLIC	??_EDL_GroupParameters_GFP@CryptoPP@@$4PPPPPPPM@GM@AEPAXI@Z ; CryptoPP::DL_GroupParameters_GFP::`vector deleting destructor'
PUBLIC	?GetVoidValue@DL_GroupParameters_GFP@CryptoPP@@$4PPPPPPPM@A@BE_NPBDABVtype_info@@PAX@Z ; CryptoPP::DL_GroupParameters_GFP::GetVoidValue
PUBLIC	??_EDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@$4PPPPPPPM@GM@AEPAXI@Z ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`vector deleting destructor'
PUBLIC	??_E?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`vector deleting destructor'
PUBLIC	??_E?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`vector deleting destructor'
PUBLIC	??_E?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`vector deleting destructor'
PUBLIC	??_E?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`vector deleting destructor'
PUBLIC	??_E?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`vector deleting destructor'
PUBLIC	??_E?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`vector deleting destructor'
PUBLIC	??_E?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`vector deleting destructor'
PUBLIC	??_E?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`vector deleting destructor'
PUBLIC	??_E?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`vector deleting destructor'
PUBLIC	??_E?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`vector deleting destructor'
PUBLIC	??_E?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`vector deleting destructor'
PUBLIC	??_E?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`vector deleting destructor'
PUBLIC	??_E?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
PUBLIC	?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_7Exception@CryptoPP@@6B@			; CryptoPP::Exception::`vftable'
PUBLIC	??_7InvalidArgument@CryptoPP@@6B@		; CryptoPP::InvalidArgument::`vftable'
PUBLIC	??_7InvalidDataFormat@CryptoPP@@6B@		; CryptoPP::InvalidDataFormat::`vftable'
PUBLIC	??_7NotImplemented@CryptoPP@@6B@		; CryptoPP::NotImplemented::`vftable'
PUBLIC	??_7ValueTypeMismatch@NameValuePairs@CryptoPP@@6B@ ; CryptoPP::NameValuePairs::ValueTypeMismatch::`vftable'
PUBLIC	??_C@_01GEODFPGF@?8@				; `string'
PUBLIC	??_C@_0BI@CPJAGCKP@?8?0?5trying?5to?5retrieve?5?8@ ; `string'
PUBLIC	??_C@_0M@PGGGIJHH@?8?0?5stored?5?8@		; `string'
PUBLIC	??_C@_0CE@LNMKHLKF@NameValuePairs?3?5type?5mismatch?5f@ ; `string'
PUBLIC	??_C@_0L@KPHNIBPN@ValueNames@			; `string'
PUBLIC	__TI4?AVValueTypeMismatch@NameValuePairs@CryptoPP@@
PUBLIC	__CTA4?AVValueTypeMismatch@NameValuePairs@CryptoPP@@
PUBLIC	??_R0?AVValueTypeMismatch@NameValuePairs@CryptoPP@@@8 ; CryptoPP::NameValuePairs::ValueTypeMismatch `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVValueTypeMismatch@NameValuePairs@CryptoPP@@@8??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV012@@Z48
PUBLIC	??_R0?AVInvalidArgument@CryptoPP@@@8		; CryptoPP::InvalidArgument `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVInvalidArgument@CryptoPP@@@8??0InvalidArgument@CryptoPP@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVException@CryptoPP@@@8			; CryptoPP::Exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVException@CryptoPP@@@8??0Exception@CryptoPP@@QAE@ABV01@@Z40
PUBLIC	__TI3?AVInvalidArgument@CryptoPP@@
PUBLIC	__CTA3?AVInvalidArgument@CryptoPP@@
PUBLIC	__TI3?AVNotImplemented@CryptoPP@@
PUBLIC	__CTA3?AVNotImplemented@CryptoPP@@
PUBLIC	??_R0?AVNotImplemented@CryptoPP@@@8		; CryptoPP::NotImplemented `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVNotImplemented@CryptoPP@@@8??0NotImplemented@CryptoPP@@QAE@ABV01@@Z40
PUBLIC	??_C@_0CA@CCPAJEEJ@Clone?$CI?$CJ?5is?5not?5implemented?5yet?4@ ; `string'
PUBLIC	??_C@_07CIFAGBMG@unknown@			; `string'
PUBLIC	??_C@_0DA@CJIHPKKH@?3?5this?5object?5doesn?8t?5support?5r@ ; `string'
PUBLIC	??_C@_0DK@CFJCNMFC@RandomNumberGenerator?3?5Incorpor@ ; `string'
PUBLIC	??_7InvalidMaterial@CryptoMaterial@CryptoPP@@6B@ ; CryptoPP::CryptoMaterial::InvalidMaterial::`vftable'
PUBLIC	__TI4?AVInvalidMaterial@CryptoMaterial@CryptoPP@@
PUBLIC	__CTA4?AVInvalidMaterial@CryptoMaterial@CryptoPP@@
PUBLIC	??_R0?AVInvalidMaterial@CryptoMaterial@CryptoPP@@@8 ; CryptoPP::CryptoMaterial::InvalidMaterial `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVInvalidMaterial@CryptoMaterial@CryptoPP@@@8??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV012@@Z40
PUBLIC	??_R0?AVInvalidDataFormat@CryptoPP@@@8		; CryptoPP::InvalidDataFormat `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVInvalidDataFormat@CryptoPP@@@8??0InvalidDataFormat@CryptoPP@@QAE@ABV01@@Z40
PUBLIC	??_C@_0DE@KNKMJKBA@CryptoMaterial?3?5this?5object?5con@ ; `string'
PUBLIC	??_C@_02JDBEGKHA@IV@				; `string'
PUBLIC	??_C@_0N@GKFFKNHD@FeedbackSize@			; `string'
PUBLIC	??_R0H@8					; int `RTTI Type Descriptor'
PUBLIC	??_7ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@6B@ ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::`vftable'
PUBLIC	??_7AlgorithmParametersBase@CryptoPP@@6B@	; CryptoPP::AlgorithmParametersBase::`vftable'
PUBLIC	??_C@_0L@IAABKFFP@?$CC?5not?5used@		; `string'
PUBLIC	??_C@_0CF@BLINCPFB@AlgorithmParametersBase?3?5parame@ ; `string'
PUBLIC	__TI3?AVParameterNotUsed@AlgorithmParametersBase@CryptoPP@@
PUBLIC	__CTA3?AVParameterNotUsed@AlgorithmParametersBase@CryptoPP@@
PUBLIC	??_R0?AVParameterNotUsed@AlgorithmParametersBase@CryptoPP@@@8 ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVParameterNotUsed@AlgorithmParametersBase@CryptoPP@@@8??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@ABV012@@Z40
PUBLIC	??_7?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@6B@ ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::`vftable'
PUBLIC	??_C@_0EH@FMNEDLJE@CipherModeBase?3?5feedback?5size?5c@ ; `string'
PUBLIC	??_C@_03LECCGOIK@CTR@				; `string'
PUBLIC	??_7?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`vftable'
PUBLIC	??_7?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`vftable'
PUBLIC	??_7?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`vftable'
PUBLIC	??_7?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`vftable'
PUBLIC	??_7SelfTestFailure@CryptoPP@@6B@		; CryptoPP::SelfTestFailure::`vftable'
PUBLIC	??_7AutoSeededRandomPool@CryptoPP@@6B@		; CryptoPP::AutoSeededRandomPool::`vftable'
PUBLIC	??_7MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@6B@ ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::`vftable'
PUBLIC	??_7ModularArithmetic@CryptoPP@@6B@		; CryptoPP::ModularArithmetic::`vftable'
PUBLIC	??_7MontgomeryRepresentation@CryptoPP@@6B@	; CryptoPP::MontgomeryRepresentation::`vftable'
PUBLIC	??_7DL_BadElement@CryptoPP@@6B@			; CryptoPP::DL_BadElement::`vftable'
PUBLIC	??_C@_0CA@BKIJBIHG@CryptoPP?3?5invalid?5group?5element@ ; `string'
PUBLIC	??_7?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@6B@ ; CryptoPP::DL_FixedBasePrecomputation<CryptoPP::Integer>::`vftable'
PUBLIC	??_7?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@6B@ ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::`vftable'
PUBLIC	??_7?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@6B@ ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer>::`vftable'
PUBLIC	??_7ModExpPrecomputation@CryptoPP@@6B@		; CryptoPP::ModExpPrecomputation::`vftable'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_7?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6B@ ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`vftable'
PUBLIC	??_7?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6BGeneratableCryptoMaterial@1@@ ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`vftable'
PUBLIC	??_7?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6BCryptoMaterial@1@@ ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`vftable'
PUBLIC	??_7DL_GroupParameters_GFP@CryptoPP@@6B@	; CryptoPP::DL_GroupParameters_GFP::`vftable'
PUBLIC	??_7DL_GroupParameters_GFP@CryptoPP@@6BGeneratableCryptoMaterial@1@@ ; CryptoPP::DL_GroupParameters_GFP::`vftable'
PUBLIC	??_7DL_GroupParameters_GFP@CryptoPP@@6BCryptoMaterial@1@@ ; CryptoPP::DL_GroupParameters_GFP::`vftable'
PUBLIC	??_8DL_GroupParameters_GFP@CryptoPP@@7B@	; CryptoPP::DL_GroupParameters_GFP::`vbtable'
PUBLIC	??_7DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6B@ ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`vftable'
PUBLIC	??_7DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6BGeneratableCryptoMaterial@1@@ ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`vftable'
PUBLIC	??_7DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6BCryptoMaterial@1@@ ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`vftable'
PUBLIC	??_8DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@7B@ ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`vbtable'
PUBLIC	??_7?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@6B@ ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`vftable'
PUBLIC	??_7DH2@CryptoPP@@6B@				; CryptoPP::DH2::`vftable'
PUBLIC	??_C@_08FGDDMCLK@CAST?9256@			; `string'
PUBLIC	??_C@_03EEHPEFCG@RC6@				; `string'
PUBLIC	??_C@_04EELIFPAL@MARS@				; `string'
PUBLIC	??_C@_07CCCAKGBN@Serpent@			; `string'
PUBLIC	??_C@_07DABDIDEC@Twofish@			; `string'
PUBLIC	??_C@_08KOMAHJJD@Blowfish@			; `string'
PUBLIC	??_C@_08EGCCLPME@Camellia@			; `string'
PUBLIC	??_C@_08ENLOJDBI@DES?9EDE2@			; `string'
PUBLIC	??_C@_04OHHLMMNP@IDEA@				; `string'
PUBLIC	??_C@_03GPFCBGOF@RC5@				; `string'
PUBLIC	??_C@_04IOANANM@SEED@				; `string'
PUBLIC	??_C@_08KKFFFOAL@SHACAL?92@			; `string'
PUBLIC	??_C@_03FOHIJHJ@TEA@				; `string'
PUBLIC	??_7BlockCipherAlgorithm@@6B@			; BlockCipherAlgorithm::`vftable'
PUBLIC	??_7KeyAgreement@@6B@				; KeyAgreement::`vftable'
PUBLIC	??_7DH2KeyAgreement@@6B@			; DH2KeyAgreement::`vftable'
PUBLIC	??_7?$BlockCipherDetail@VRC6@CryptoPP@@@@6B@	; BlockCipherDetail<CryptoPP::RC6>::`vftable'
PUBLIC	??_7?$BlockCipherDetail@VMARS@CryptoPP@@@@6B@	; BlockCipherDetail<CryptoPP::MARS>::`vftable'
PUBLIC	??_7?$BlockCipherDetail@VTwofish@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::Twofish>::`vftable'
PUBLIC	??_7?$BlockCipherDetail@VSerpent@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::Serpent>::`vftable'
PUBLIC	??_7?$BlockCipherDetail@VCAST256@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::CAST256>::`vftable'
PUBLIC	??_7?$BlockCipherDetail@VIDEA@CryptoPP@@@@6B@	; BlockCipherDetail<CryptoPP::IDEA>::`vftable'
PUBLIC	??_7?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::DES_EDE2>::`vftable'
PUBLIC	??_7?$BlockCipherDetail@VCamellia@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::Camellia>::`vftable'
PUBLIC	??_7?$BlockCipherDetail@VSEED@CryptoPP@@@@6B@	; BlockCipherDetail<CryptoPP::SEED>::`vftable'
PUBLIC	??_7?$BlockCipherDetail@VRC5@CryptoPP@@@@6B@	; BlockCipherDetail<CryptoPP::RC5>::`vftable'
PUBLIC	??_7?$BlockCipherDetail@VBlowfish@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::Blowfish>::`vftable'
PUBLIC	??_7?$BlockCipherDetail@VTEA@CryptoPP@@@@6B@	; BlockCipherDetail<CryptoPP::TEA>::`vftable'
PUBLIC	??_7?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::SHACAL2>::`vftable'
PUBLIC	??_C@_0BAD@CBGKIGNF@0xB10B8F96A080E01DDE92DE5EAE5D5@ ; `string'
PUBLIC	??_C@_0BAD@DPJDDMGO@0xA4D1CBD5C3FD34126765A442EFB99@ ; `string'
PUBLIC	??_C@_0CL@PHIFDFBK@0xF518AA8781A8DF278ABA4E7D64B7C@ ; `string'
PUBLIC	??_7?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`vftable'
PUBLIC	??_7?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
PUBLIC	??_7?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@6B@ ; CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`vftable'
PUBLIC	__TI3?AVSelfTestFailure@CryptoPP@@
PUBLIC	__CTA3?AVSelfTestFailure@CryptoPP@@
PUBLIC	??_R0?AVSelfTestFailure@CryptoPP@@@8		; CryptoPP::SelfTestFailure `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVSelfTestFailure@CryptoPP@@@8??0SelfTestFailure@CryptoPP@@QAE@ABV01@@Z40
PUBLIC	??_C@_0CD@OKCDBBIP@?3?5pairwise?5consistency?5test?5fai@ ; `string'
PUBLIC	??_R0?AVDL_BadElement@CryptoPP@@@8		; CryptoPP::DL_BadElement `RTTI Type Descriptor'
PUBLIC	??_R0?AVDL_GroupParameters_GFP@CryptoPP@@@8	; CryptoPP::DL_GroupParameters_GFP `RTTI Type Descriptor'
PUBLIC	??_C@_0M@POHHOAKA@ThisObject?3@			; `string'
PUBLIC	??_C@_01KMDKNFGN@?1@				; `string'
PUBLIC	??_R0?AVConstByteArrayParameter@CryptoPP@@@8	; CryptoPP::ConstByteArrayParameter `RTTI Type Descriptor'
PUBLIC	??_R0?AV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@@8 ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> > `RTTI Type Descriptor'
PUBLIC	__TI4?AVDL_BadElement@CryptoPP@@
PUBLIC	__CTA4?AVDL_BadElement@CryptoPP@@
PUBLIC	__CT??_R0?AVDL_BadElement@CryptoPP@@@8??0DL_BadElement@CryptoPP@@QAE@ABV01@@Z40
PUBLIC	??_C@_03GPBACPDH@DHC@				; `string'
PUBLIC	??_C@_02EPINMGPM@DH@				; `string'
PUBLIC	??_C@_0DL@LFCPKOMM@AllocatorBase?3?5requested?5size?5w@ ; `string'
PUBLIC	??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_string<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	?s_pObject@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@3@XZ@4V?$simple_ptr@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@3@C ; `CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref'::`2'::s_pObject
PUBLIC	?$TSS0@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@3@XZ@4HA ; `CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref'::`2'::$TSS0
PUBLIC	??_R0?AV?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::DL_GroupParameters<CryptoPP::Integer> `RTTI Type Descriptor'
PUBLIC	??_C@_0N@EDONPEO@ThisPointer?3@			; `string'
PUBLIC	??_R0?AVDL_GroupParameters_IntegerBased@CryptoPP@@@8 ; CryptoPP::DL_GroupParameters_IntegerBased `RTTI Type Descriptor'
PUBLIC	??_R0PAVDL_GroupParameters_GFP@CryptoPP@@@8	; CryptoPP::DL_GroupParameters_GFP * `RTTI Type Descriptor'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVRandomNumberGenerator@CryptoPP@@@8	; CryptoPP::RandomNumberGenerator `RTTI Type Descriptor'
PUBLIC	??_R3RandomNumberGenerator@CryptoPP@@8		; CryptoPP::RandomNumberGenerator::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RandomNumberGenerator@CryptoPP@@8		; CryptoPP::RandomNumberGenerator::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RandomNumberGenerator@CryptoPP@@8	; CryptoPP::RandomNumberGenerator::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Algorithm@CryptoPP@@8		; CryptoPP::Algorithm::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVAlgorithm@CryptoPP@@@8			; CryptoPP::Algorithm `RTTI Type Descriptor'
PUBLIC	??_R3Algorithm@CryptoPP@@8			; CryptoPP::Algorithm::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Algorithm@CryptoPP@@8			; CryptoPP::Algorithm::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Clonable@CryptoPP@@8		; CryptoPP::Clonable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVClonable@CryptoPP@@@8			; CryptoPP::Clonable `RTTI Type Descriptor'
PUBLIC	??_R3Clonable@CryptoPP@@8			; CryptoPP::Clonable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Clonable@CryptoPP@@8			; CryptoPP::Clonable::`RTTI Base Class Array'
PUBLIC	??_R4Exception@CryptoPP@@6B@			; CryptoPP::Exception::`RTTI Complete Object Locator'
PUBLIC	??_R3Exception@CryptoPP@@8			; CryptoPP::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@CryptoPP@@8			; CryptoPP::Exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@CryptoPP@@8		; CryptoPP::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InvalidArgument@CryptoPP@@6B@		; CryptoPP::InvalidArgument::`RTTI Complete Object Locator'
PUBLIC	??_R3InvalidArgument@CryptoPP@@8		; CryptoPP::InvalidArgument::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InvalidArgument@CryptoPP@@8		; CryptoPP::InvalidArgument::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InvalidArgument@CryptoPP@@8	; CryptoPP::InvalidArgument::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InvalidDataFormat@CryptoPP@@6B@		; CryptoPP::InvalidDataFormat::`RTTI Complete Object Locator'
PUBLIC	??_R3InvalidDataFormat@CryptoPP@@8		; CryptoPP::InvalidDataFormat::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InvalidDataFormat@CryptoPP@@8		; CryptoPP::InvalidDataFormat::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InvalidDataFormat@CryptoPP@@8	; CryptoPP::InvalidDataFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4NotImplemented@CryptoPP@@6B@		; CryptoPP::NotImplemented::`RTTI Complete Object Locator'
PUBLIC	??_R3NotImplemented@CryptoPP@@8			; CryptoPP::NotImplemented::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NotImplemented@CryptoPP@@8			; CryptoPP::NotImplemented::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NotImplemented@CryptoPP@@8	; CryptoPP::NotImplemented::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVNameValuePairs@CryptoPP@@@8		; CryptoPP::NameValuePairs `RTTI Type Descriptor'
PUBLIC	??_R3NameValuePairs@CryptoPP@@8			; CryptoPP::NameValuePairs::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NameValuePairs@CryptoPP@@8			; CryptoPP::NameValuePairs::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NameValuePairs@CryptoPP@@8	; CryptoPP::NameValuePairs::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ValueTypeMismatch@NameValuePairs@CryptoPP@@6B@ ; CryptoPP::NameValuePairs::ValueTypeMismatch::`RTTI Complete Object Locator'
PUBLIC	??_R3ValueTypeMismatch@NameValuePairs@CryptoPP@@8 ; CryptoPP::NameValuePairs::ValueTypeMismatch::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ValueTypeMismatch@NameValuePairs@CryptoPP@@8 ; CryptoPP::NameValuePairs::ValueTypeMismatch::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ValueTypeMismatch@NameValuePairs@CryptoPP@@8 ; CryptoPP::NameValuePairs::ValueTypeMismatch::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVSimpleKeyingInterface@CryptoPP@@@8	; CryptoPP::SimpleKeyingInterface `RTTI Type Descriptor'
PUBLIC	??_R3SimpleKeyingInterface@CryptoPP@@8		; CryptoPP::SimpleKeyingInterface::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SimpleKeyingInterface@CryptoPP@@8		; CryptoPP::SimpleKeyingInterface::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8	; CryptoPP::SimpleKeyingInterface::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVBlockTransformation@CryptoPP@@@8	; CryptoPP::BlockTransformation `RTTI Type Descriptor'
PUBLIC	??_R3BlockTransformation@CryptoPP@@8		; CryptoPP::BlockTransformation::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BlockTransformation@CryptoPP@@8		; CryptoPP::BlockTransformation::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BlockTransformation@CryptoPP@@8	; CryptoPP::BlockTransformation::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVStreamTransformation@CryptoPP@@@8	; CryptoPP::StreamTransformation `RTTI Type Descriptor'
PUBLIC	??_R3StreamTransformation@CryptoPP@@8		; CryptoPP::StreamTransformation::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StreamTransformation@CryptoPP@@8		; CryptoPP::StreamTransformation::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@StreamTransformation@CryptoPP@@8	; CryptoPP::StreamTransformation::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVBlockCipher@CryptoPP@@@8		; CryptoPP::BlockCipher `RTTI Type Descriptor'
PUBLIC	??_R3BlockCipher@CryptoPP@@8			; CryptoPP::BlockCipher::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BlockCipher@CryptoPP@@8			; CryptoPP::BlockCipher::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BlockCipher@CryptoPP@@8		; CryptoPP::BlockCipher::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@BlockTransformation@CryptoPP@@8	; CryptoPP::BlockTransformation::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R13?0A@EA@Algorithm@CryptoPP@@8		; CryptoPP::Algorithm::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R13?0A@EA@Clonable@CryptoPP@@8		; CryptoPP::Clonable::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVSymmetricCipher@CryptoPP@@@8		; CryptoPP::SymmetricCipher `RTTI Type Descriptor'
PUBLIC	??_R3SymmetricCipher@CryptoPP@@8		; CryptoPP::SymmetricCipher::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SymmetricCipher@CryptoPP@@8		; CryptoPP::SymmetricCipher::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8	; CryptoPP::SymmetricCipher::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@StreamTransformation@CryptoPP@@8	; CryptoPP::StreamTransformation::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVCryptoMaterial@CryptoPP@@@8		; CryptoPP::CryptoMaterial `RTTI Type Descriptor'
PUBLIC	??_R3CryptoMaterial@CryptoPP@@8			; CryptoPP::CryptoMaterial::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CryptoMaterial@CryptoPP@@8			; CryptoPP::CryptoMaterial::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CryptoMaterial@CryptoPP@@8	; CryptoPP::CryptoMaterial::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4InvalidMaterial@CryptoMaterial@CryptoPP@@6B@ ; CryptoPP::CryptoMaterial::InvalidMaterial::`RTTI Complete Object Locator'
PUBLIC	??_R3InvalidMaterial@CryptoMaterial@CryptoPP@@8	; CryptoPP::CryptoMaterial::InvalidMaterial::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InvalidMaterial@CryptoMaterial@CryptoPP@@8	; CryptoPP::CryptoMaterial::InvalidMaterial::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@InvalidMaterial@CryptoMaterial@CryptoPP@@8 ; CryptoPP::CryptoMaterial::InvalidMaterial::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVGeneratableCryptoMaterial@CryptoPP@@@8	; CryptoPP::GeneratableCryptoMaterial `RTTI Type Descriptor'
PUBLIC	??_R3GeneratableCryptoMaterial@CryptoPP@@8	; CryptoPP::GeneratableCryptoMaterial::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GeneratableCryptoMaterial@CryptoPP@@8	; CryptoPP::GeneratableCryptoMaterial::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@GeneratableCryptoMaterial@CryptoPP@@8 ; CryptoPP::GeneratableCryptoMaterial::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@33FA@CryptoMaterial@CryptoPP@@8		; CryptoPP::CryptoMaterial::`RTTI Base Class Descriptor at (0,4,4,80)'
PUBLIC	??_R1A@33EA@NameValuePairs@CryptoPP@@8		; CryptoPP::NameValuePairs::`RTTI Base Class Descriptor at (0,4,4,64)'
PUBLIC	??_R0?AVCryptoParameters@CryptoPP@@@8		; CryptoPP::CryptoParameters `RTTI Type Descriptor'
PUBLIC	??_R3CryptoParameters@CryptoPP@@8		; CryptoPP::CryptoParameters::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CryptoParameters@CryptoPP@@8		; CryptoPP::CryptoParameters::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CryptoParameters@CryptoPP@@8	; CryptoPP::CryptoParameters::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVAsymmetricAlgorithm@CryptoPP@@@8	; CryptoPP::AsymmetricAlgorithm `RTTI Type Descriptor'
PUBLIC	??_R3AsymmetricAlgorithm@CryptoPP@@8		; CryptoPP::AsymmetricAlgorithm::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AsymmetricAlgorithm@CryptoPP@@8		; CryptoPP::AsymmetricAlgorithm::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@AsymmetricAlgorithm@CryptoPP@@8	; CryptoPP::AsymmetricAlgorithm::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVKeyAgreementAlgorithm@CryptoPP@@@8	; CryptoPP::KeyAgreementAlgorithm `RTTI Type Descriptor'
PUBLIC	??_R3KeyAgreementAlgorithm@CryptoPP@@8		; CryptoPP::KeyAgreementAlgorithm::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2KeyAgreementAlgorithm@CryptoPP@@8		; CryptoPP::KeyAgreementAlgorithm::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@KeyAgreementAlgorithm@CryptoPP@@8	; CryptoPP::KeyAgreementAlgorithm::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVSimpleKeyAgreementDomain@CryptoPP@@@8	; CryptoPP::SimpleKeyAgreementDomain `RTTI Type Descriptor'
PUBLIC	??_R3SimpleKeyAgreementDomain@CryptoPP@@8	; CryptoPP::SimpleKeyAgreementDomain::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SimpleKeyAgreementDomain@CryptoPP@@8	; CryptoPP::SimpleKeyAgreementDomain::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SimpleKeyAgreementDomain@CryptoPP@@8 ; CryptoPP::SimpleKeyAgreementDomain::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVAuthenticatedKeyAgreementDomain@CryptoPP@@@8 ; CryptoPP::AuthenticatedKeyAgreementDomain `RTTI Type Descriptor'
PUBLIC	??_R3AuthenticatedKeyAgreementDomain@CryptoPP@@8 ; CryptoPP::AuthenticatedKeyAgreementDomain::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AuthenticatedKeyAgreementDomain@CryptoPP@@8 ; CryptoPP::AuthenticatedKeyAgreementDomain::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@AuthenticatedKeyAgreementDomain@CryptoPP@@8 ; CryptoPP::AuthenticatedKeyAgreementDomain::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVASN1Object@CryptoPP@@@8			; CryptoPP::ASN1Object `RTTI Type Descriptor'
PUBLIC	??_R3ASN1Object@CryptoPP@@8			; CryptoPP::ASN1Object::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ASN1Object@CryptoPP@@8			; CryptoPP::ASN1Object::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ASN1Object@CryptoPP@@8		; CryptoPP::ASN1Object::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4KeyAgreement@@6B@				; KeyAgreement::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVKeyAgreement@@@8			; KeyAgreement `RTTI Type Descriptor'
PUBLIC	??_R3KeyAgreement@@8				; KeyAgreement::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2KeyAgreement@@8				; KeyAgreement::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@KeyAgreement@@8			; KeyAgreement::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUAdditiveCipherAbstractPolicy@CryptoPP@@@8 ; CryptoPP::AdditiveCipherAbstractPolicy `RTTI Type Descriptor'
PUBLIC	??_R3AdditiveCipherAbstractPolicy@CryptoPP@@8	; CryptoPP::AdditiveCipherAbstractPolicy::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AdditiveCipherAbstractPolicy@CryptoPP@@8	; CryptoPP::AdditiveCipherAbstractPolicy::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8 ; CryptoPP::AdditiveCipherAbstractPolicy::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4AlgorithmParametersBase@CryptoPP@@6B@	; CryptoPP::AlgorithmParametersBase::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVAlgorithmParametersBase@CryptoPP@@@8	; CryptoPP::AlgorithmParametersBase `RTTI Type Descriptor'
PUBLIC	??_R3AlgorithmParametersBase@CryptoPP@@8	; CryptoPP::AlgorithmParametersBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AlgorithmParametersBase@CryptoPP@@8	; CryptoPP::AlgorithmParametersBase::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@AlgorithmParametersBase@CryptoPP@@8 ; CryptoPP::AlgorithmParametersBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@6B@ ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::`RTTI Complete Object Locator'
PUBLIC	??_R3ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@8 ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@8 ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@8 ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@6B@ ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter> `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCipherModeBase@CryptoPP@@@8		; CryptoPP::CipherModeBase `RTTI Type Descriptor'
PUBLIC	??_R3CipherModeBase@CryptoPP@@8			; CryptoPP::CipherModeBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CipherModeBase@CryptoPP@@8			; CryptoPP::CipherModeBase::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8	; CryptoPP::CipherModeBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ModePolicyCommonTemplate<CryptoPP::AdditiveCipherAbstractPolicy> `RTTI Type Descriptor'
PUBLIC	??_R3?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ModePolicyCommonTemplate<CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ModePolicyCommonTemplate<CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ModePolicyCommonTemplate<CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8 ; CryptoPP::AdditiveCipherAbstractPolicy::`RTTI Base Class Descriptor at (24,-1,0,64)'
PUBLIC	??_R0?AVCTR_ModePolicy@CryptoPP@@@8		; CryptoPP::CTR_ModePolicy `RTTI Type Descriptor'
PUBLIC	??_R3CTR_ModePolicy@CryptoPP@@8			; CryptoPP::CTR_ModePolicy::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTR_ModePolicy@CryptoPP@@8			; CryptoPP::CTR_ModePolicy::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8	; CryptoPP::CTR_ModePolicy::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@8 ; CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> `RTTI Type Descriptor'
PUBLIC	??_R3?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8 ; CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8 ; CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8 ; CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> > `RTTI Type Descriptor'
PUBLIC	??_R3?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EC@Algorithm@CryptoPP@@8		; CryptoPP::Algorithm::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R13?0A@EC@Clonable@CryptoPP@@8		; CryptoPP::Clonable::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8 ; CryptoPP::RandomNumberGenerator::`RTTI Base Class Descriptor at (40,-1,0,64)'
PUBLIC	??_R1CI@?0A@EC@Algorithm@CryptoPP@@8		; CryptoPP::Algorithm::`RTTI Base Class Descriptor at (40,-1,0,66)'
PUBLIC	??_R1CI@?0A@EC@Clonable@CryptoPP@@8		; CryptoPP::Clonable::`RTTI Base Class Descriptor at (40,-1,0,66)'
PUBLIC	??_R4?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@@8 ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> `RTTI Type Descriptor'
PUBLIC	??_R3?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8 ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8 ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8 ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1DN@?0A@EN@Empty@CryptoPP@@8		; CryptoPP::Empty::`RTTI Base Class Descriptor at (61,-1,0,77)'
PUBLIC	??_R0?AVEmpty@CryptoPP@@@8			; CryptoPP::Empty `RTTI Type Descriptor'
PUBLIC	??_R3Empty@CryptoPP@@8				; CryptoPP::Empty::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Empty@CryptoPP@@8				; CryptoPP::Empty::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Empty@CryptoPP@@8			; CryptoPP::Empty::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Complete Object Locator'
PUBLIC	??_R4ModularArithmetic@CryptoPP@@6B@		; CryptoPP::ModularArithmetic::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVModularArithmetic@CryptoPP@@@8		; CryptoPP::ModularArithmetic `RTTI Type Descriptor'
PUBLIC	??_R3ModularArithmetic@CryptoPP@@8		; CryptoPP::ModularArithmetic::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ModularArithmetic@CryptoPP@@8		; CryptoPP::ModularArithmetic::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ModularArithmetic@CryptoPP@@8	; CryptoPP::ModularArithmetic::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AbstractRing<CryptoPP::Integer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::AbstractRing<CryptoPP::Integer> `RTTI Type Descriptor'
PUBLIC	??_R3?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AbstractRing<CryptoPP::Integer>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AbstractRing<CryptoPP::Integer>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AbstractGroup<CryptoPP::Integer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::AbstractGroup<CryptoPP::Integer> `RTTI Type Descriptor'
PUBLIC	??_R3?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AbstractGroup<CryptoPP::Integer>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AbstractGroup<CryptoPP::Integer>::`RTTI Base Class Array'
PUBLIC	??_R4MontgomeryRepresentation@CryptoPP@@6B@	; CryptoPP::MontgomeryRepresentation::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMontgomeryRepresentation@CryptoPP@@@8	; CryptoPP::MontgomeryRepresentation `RTTI Type Descriptor'
PUBLIC	??_R3MontgomeryRepresentation@CryptoPP@@8	; CryptoPP::MontgomeryRepresentation::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MontgomeryRepresentation@CryptoPP@@8	; CryptoPP::MontgomeryRepresentation::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MontgomeryRepresentation@CryptoPP@@8 ; CryptoPP::MontgomeryRepresentation::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVNotCopyable@CryptoPP@@@8		; CryptoPP::NotCopyable `RTTI Type Descriptor'
PUBLIC	??_R3NotCopyable@CryptoPP@@8			; CryptoPP::NotCopyable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2NotCopyable@CryptoPP@@8			; CryptoPP::NotCopyable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@NotCopyable@CryptoPP@@8		; CryptoPP::NotCopyable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SelfTestFailure@CryptoPP@@6B@		; CryptoPP::SelfTestFailure::`RTTI Complete Object Locator'
PUBLIC	??_R3SelfTestFailure@CryptoPP@@8		; CryptoPP::SelfTestFailure::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SelfTestFailure@CryptoPP@@8		; CryptoPP::SelfTestFailure::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SelfTestFailure@CryptoPP@@8	; CryptoPP::SelfTestFailure::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4AutoSeededRandomPool@CryptoPP@@6B@		; CryptoPP::AutoSeededRandomPool::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVAutoSeededRandomPool@CryptoPP@@@8	; CryptoPP::AutoSeededRandomPool `RTTI Type Descriptor'
PUBLIC	??_R3AutoSeededRandomPool@CryptoPP@@8		; CryptoPP::AutoSeededRandomPool::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AutoSeededRandomPool@CryptoPP@@8		; CryptoPP::AutoSeededRandomPool::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@AutoSeededRandomPool@CryptoPP@@8	; CryptoPP::AutoSeededRandomPool::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@RandomPool@CryptoPP@@8		; CryptoPP::RandomPool::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVRandomPool@CryptoPP@@@8			; CryptoPP::RandomPool `RTTI Type Descriptor'
PUBLIC	??_R3RandomPool@CryptoPP@@8			; CryptoPP::RandomPool::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RandomPool@CryptoPP@@8			; CryptoPP::RandomPool::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@NotCopyable@CryptoPP@@8		; CryptoPP::NotCopyable::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R4MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@6B@ ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVMultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT `RTTI Type Descriptor'
PUBLIC	??_R3MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4DL_BadElement@CryptoPP@@6B@		; CryptoPP::DL_BadElement::`RTTI Complete Object Locator'
PUBLIC	??_R3DL_BadElement@CryptoPP@@8			; CryptoPP::DL_BadElement::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DL_BadElement@CryptoPP@@8			; CryptoPP::DL_BadElement::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DL_BadElement@CryptoPP@@8		; CryptoPP::DL_BadElement::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@GeneratableCryptoMaterial@CryptoPP@@8 ; CryptoPP::GeneratableCryptoMaterial::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R1A@73FA@CryptoMaterial@CryptoPP@@8		; CryptoPP::CryptoMaterial::`RTTI Base Class Descriptor at (0,8,4,80)'
PUBLIC	??_R1A@73EA@NameValuePairs@CryptoPP@@8		; CryptoPP::NameValuePairs::`RTTI Base Class Descriptor at (0,8,4,64)'
PUBLIC	??_R4?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@6B@ ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> `RTTI Type Descriptor'
PUBLIC	??_R3?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_FixedBasePrecomputation<CryptoPP::Integer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::DL_FixedBasePrecomputation<CryptoPP::Integer> `RTTI Type Descriptor'
PUBLIC	??_R3?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_FixedBasePrecomputation<CryptoPP::Integer>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_FixedBasePrecomputation<CryptoPP::Integer>::`RTTI Base Class Array'
PUBLIC	??_R4?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@6B@ ; CryptoPP::DL_FixedBasePrecomputation<CryptoPP::Integer>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@6B@ ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer> `RTTI Type Descriptor'
PUBLIC	??_R3?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ModExpPrecomputation@CryptoPP@@6B@		; CryptoPP::ModExpPrecomputation::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVModExpPrecomputation@CryptoPP@@@8	; CryptoPP::ModExpPrecomputation `RTTI Type Descriptor'
PUBLIC	??_R3ModExpPrecomputation@CryptoPP@@8		; CryptoPP::ModExpPrecomputation::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ModExpPrecomputation@CryptoPP@@8		; CryptoPP::ModExpPrecomputation::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ModExpPrecomputation@CryptoPP@@8	; CryptoPP::ModExpPrecomputation::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3DL_GroupParameters_IntegerBased@CryptoPP@@8 ; CryptoPP::DL_GroupParameters_IntegerBased::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DL_GroupParameters_IntegerBased@CryptoPP@@8 ; CryptoPP::DL_GroupParameters_IntegerBased::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DL_GroupParameters_IntegerBased@CryptoPP@@8 ; CryptoPP::DL_GroupParameters_IntegerBased::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> > `RTTI Type Descriptor'
PUBLIC	??_R3?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R13?0A@EA@CryptoParameters@CryptoPP@@8	; CryptoPP::CryptoParameters::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R3?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@8 ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@8 ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@8 ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@8 ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@@8 ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased> `RTTI Type Descriptor'
PUBLIC	??_R3?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@8 ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@8 ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`RTTI Base Class Array'
PUBLIC	??_R4?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6B@ ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6BGeneratableCryptoMaterial@1@@ ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6BCryptoMaterial@1@@ ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`RTTI Complete Object Locator'
PUBLIC	??_R4DL_GroupParameters_GFP@CryptoPP@@6B@	; CryptoPP::DL_GroupParameters_GFP::`RTTI Complete Object Locator'
PUBLIC	??_R3DL_GroupParameters_GFP@CryptoPP@@8		; CryptoPP::DL_GroupParameters_GFP::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DL_GroupParameters_GFP@CryptoPP@@8		; CryptoPP::DL_GroupParameters_GFP::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DL_GroupParameters_GFP@CryptoPP@@8 ; CryptoPP::DL_GroupParameters_GFP::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4DL_GroupParameters_GFP@CryptoPP@@6BGeneratableCryptoMaterial@1@@ ; CryptoPP::DL_GroupParameters_GFP::`RTTI Complete Object Locator'
PUBLIC	??_R4DL_GroupParameters_GFP@CryptoPP@@6BCryptoMaterial@1@@ ; CryptoPP::DL_GroupParameters_GFP::`RTTI Complete Object Locator'
PUBLIC	??_R4DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6B@ ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@@8 ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime `RTTI Type Descriptor'
PUBLIC	??_R3DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@8 ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@8 ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@8 ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6BGeneratableCryptoMaterial@1@@ ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`RTTI Complete Object Locator'
PUBLIC	??_R4DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6BCryptoMaterial@1@@ ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`RTTI Complete Object Locator'
PUBLIC	??_R4?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@6B@ ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@8 ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > `RTTI Type Descriptor'
PUBLIC	??_R3?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8 ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8 ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8 ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer> `RTTI Type Descriptor'
PUBLIC	??_R3?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::`RTTI Base Class Array'
PUBLIC	??_R0?AV?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::DL_KeyAgreementAlgorithm<CryptoPP::Integer> `RTTI Type Descriptor'
PUBLIC	??_R3?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_KeyAgreementAlgorithm<CryptoPP::Integer>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_KeyAgreementAlgorithm<CryptoPP::Integer>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_KeyAgreementAlgorithm<CryptoPP::Integer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@6B@ ; CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@8 ; CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > `RTTI Type Descriptor'
PUBLIC	??_R3?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8 ; CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8 ; CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8 ; CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4DH2@CryptoPP@@6B@				; CryptoPP::DH2::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDH2@CryptoPP@@@8			; CryptoPP::DH2 `RTTI Type Descriptor'
PUBLIC	??_R3DH2@CryptoPP@@8				; CryptoPP::DH2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DH2@CryptoPP@@8				; CryptoPP::DH2::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DH2@CryptoPP@@8			; CryptoPP::DH2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVBase@CAST256@CryptoPP@@@8		; CryptoPP::CAST256::Base `RTTI Type Descriptor'
PUBLIC	??_R3Base@CAST256@CryptoPP@@8			; CryptoPP::CAST256::Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Base@CAST256@CryptoPP@@8			; CryptoPP::CAST256::Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Base@CAST256@CryptoPP@@8		; CryptoPP::CAST256::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BB@?0A@EA@CAST@CryptoPP@@8			; CryptoPP::CAST::`RTTI Base Class Descriptor at (17,-1,0,64)'
PUBLIC	??_R0?AVCAST@CryptoPP@@@8			; CryptoPP::CAST `RTTI Type Descriptor'
PUBLIC	??_R3CAST@CryptoPP@@8				; CryptoPP::CAST::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAST@CryptoPP@@8				; CryptoPP::CAST::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAST@CryptoPP@@8			; CryptoPP::CAST::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::CAST256_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::CAST256_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::CAST256_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::CAST256_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> > `RTTI Type Descriptor'
PUBLIC	??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> `RTTI Type Descriptor'
PUBLIC	??_R3?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>::`RTTI Base Class Array'
PUBLIC	??_R1M@?0A@EA@CAST256_Info@CryptoPP@@8		; CryptoPP::CAST256_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUCAST256_Info@CryptoPP@@@8		; CryptoPP::CAST256_Info `RTTI Type Descriptor'
PUBLIC	??_R3CAST256_Info@CryptoPP@@8			; CryptoPP::CAST256_Info::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAST256_Info@CryptoPP@@8			; CryptoPP::CAST256_Info::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAST256_Info@CryptoPP@@8		; CryptoPP::CAST256_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8 ; CryptoPP::FixedBlockSize<16>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$FixedBlockSize@$0BA@@CryptoPP@@@8	; CryptoPP::FixedBlockSize<16> `RTTI Type Descriptor'
PUBLIC	??_R3?$FixedBlockSize@$0BA@@CryptoPP@@8		; CryptoPP::FixedBlockSize<16>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$FixedBlockSize@$0BA@@CryptoPP@@8		; CryptoPP::FixedBlockSize<16>::`RTTI Base Class Array'
PUBLIC	??_R10?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,32,1,4,0>::`RTTI Base Class Descriptor at (1,-1,0,64)'
PUBLIC	??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,16,32,1,4,0> `RTTI Type Descriptor'
PUBLIC	??_R3?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,32,1,4,0>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,32,1,4,0>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,32,1,4,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8 ; CryptoPP::FixedBlockSize<16>::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,32,1,4,0>::`RTTI Base Class Descriptor at (13,-1,0,64)'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::CAST256::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::CAST256::Base> `RTTI Type Descriptor'
PUBLIC	??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::CAST256::Base>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::CAST256::Base>::`RTTI Base Class Array'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBase@RC6@CryptoPP@@@8			; CryptoPP::RC6::Base `RTTI Type Descriptor'
PUBLIC	??_R3Base@RC6@CryptoPP@@8			; CryptoPP::RC6::Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Base@RC6@CryptoPP@@8			; CryptoPP::RC6::Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Base@RC6@CryptoPP@@8		; CryptoPP::RC6::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::RC6_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::RC6_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::RC6_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::RC6_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> > `RTTI Type Descriptor'
PUBLIC	??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> `RTTI Type Descriptor'
PUBLIC	??_R3?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>::`RTTI Base Class Array'
PUBLIC	??_R1M@?0A@EA@RC6_Info@CryptoPP@@8		; CryptoPP::RC6_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AURC6_Info@CryptoPP@@@8			; CryptoPP::RC6_Info `RTTI Type Descriptor'
PUBLIC	??_R3RC6_Info@CryptoPP@@8			; CryptoPP::RC6_Info::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RC6_Info@CryptoPP@@8			; CryptoPP::RC6_Info::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RC6_Info@CryptoPP@@8		; CryptoPP::RC6_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R10?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,0,255,1,4,0>::`RTTI Base Class Descriptor at (1,-1,0,64)'
PUBLIC	??_R0?AV?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,0,255,1,4,0> `RTTI Type Descriptor'
PUBLIC	??_R3?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,0,255,1,4,0>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,0,255,1,4,0>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,0,255,1,4,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R11?0A@EA@?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8 ; CryptoPP::VariableRounds<20,1,2147483647>::`RTTI Base Class Descriptor at (2,-1,0,64)'
PUBLIC	??_R0?AV?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@@8 ; CryptoPP::VariableRounds<20,1,2147483647> `RTTI Type Descriptor'
PUBLIC	??_R3?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8 ; CryptoPP::VariableRounds<20,1,2147483647>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8 ; CryptoPP::VariableRounds<20,1,2147483647>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8 ; CryptoPP::VariableRounds<20,1,2147483647>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,0,255,1,4,0>::`RTTI Base Class Descriptor at (13,-1,0,64)'
PUBLIC	??_R1O@?0A@EA@?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8 ; CryptoPP::VariableRounds<20,1,2147483647>::`RTTI Base Class Descriptor at (14,-1,0,64)'
PUBLIC	??_R0?AVEnc@RC6@CryptoPP@@@8			; CryptoPP::RC6::Enc `RTTI Type Descriptor'
PUBLIC	??_R3Enc@RC6@CryptoPP@@8			; CryptoPP::RC6::Enc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Enc@RC6@CryptoPP@@8			; CryptoPP::RC6::Enc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Enc@RC6@CryptoPP@@8		; CryptoPP::RC6::Enc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::RC6::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::RC6::Enc> `RTTI Type Descriptor'
PUBLIC	??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::RC6::Enc>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::RC6::Enc>::`RTTI Base Class Array'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBase@MARS@CryptoPP@@@8			; CryptoPP::MARS::Base `RTTI Type Descriptor'
PUBLIC	??_R3Base@MARS@CryptoPP@@8			; CryptoPP::MARS::Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Base@MARS@CryptoPP@@8			; CryptoPP::MARS::Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Base@MARS@CryptoPP@@8		; CryptoPP::MARS::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::MARS_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::MARS_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::MARS_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::MARS_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> > `RTTI Type Descriptor'
PUBLIC	??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> `RTTI Type Descriptor'
PUBLIC	??_R3?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>::`RTTI Base Class Array'
PUBLIC	??_R1M@?0A@EA@MARS_Info@CryptoPP@@8		; CryptoPP::MARS_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUMARS_Info@CryptoPP@@@8			; CryptoPP::MARS_Info `RTTI Type Descriptor'
PUBLIC	??_R3MARS_Info@CryptoPP@@8			; CryptoPP::MARS_Info::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MARS_Info@CryptoPP@@8			; CryptoPP::MARS_Info::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MARS_Info@CryptoPP@@8		; CryptoPP::MARS_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R10?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,56,4,4,0>::`RTTI Base Class Descriptor at (1,-1,0,64)'
PUBLIC	??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,16,56,4,4,0> `RTTI Type Descriptor'
PUBLIC	??_R3?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,56,4,4,0>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,56,4,4,0>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,56,4,4,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,56,4,4,0>::`RTTI Base Class Descriptor at (13,-1,0,64)'
PUBLIC	??_R0?AVEnc@MARS@CryptoPP@@@8			; CryptoPP::MARS::Enc `RTTI Type Descriptor'
PUBLIC	??_R3Enc@MARS@CryptoPP@@8			; CryptoPP::MARS::Enc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Enc@MARS@CryptoPP@@8			; CryptoPP::MARS::Enc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Enc@MARS@CryptoPP@@8		; CryptoPP::MARS::Enc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::MARS::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::MARS::Enc> `RTTI Type Descriptor'
PUBLIC	??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::MARS::Enc>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::MARS::Enc>::`RTTI Base Class Array'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBase@Serpent@CryptoPP@@@8		; CryptoPP::Serpent::Base `RTTI Type Descriptor'
PUBLIC	??_R3Base@Serpent@CryptoPP@@8			; CryptoPP::Serpent::Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Base@Serpent@CryptoPP@@8			; CryptoPP::Serpent::Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Base@Serpent@CryptoPP@@8		; CryptoPP::Serpent::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Serpent_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Serpent_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Serpent_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Serpent_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> > `RTTI Type Descriptor'
PUBLIC	??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> `RTTI Type Descriptor'
PUBLIC	??_R3?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>::`RTTI Base Class Array'
PUBLIC	??_R1M@?0A@EA@Serpent_Info@CryptoPP@@8		; CryptoPP::Serpent_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUSerpent_Info@CryptoPP@@@8		; CryptoPP::Serpent_Info `RTTI Type Descriptor'
PUBLIC	??_R3Serpent_Info@CryptoPP@@8			; CryptoPP::Serpent_Info::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Serpent_Info@CryptoPP@@8			; CryptoPP::Serpent_Info::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Serpent_Info@CryptoPP@@8		; CryptoPP::Serpent_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R10?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,0,32,1,4,0>::`RTTI Base Class Descriptor at (1,-1,0,64)'
PUBLIC	??_R0?AV?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,0,32,1,4,0> `RTTI Type Descriptor'
PUBLIC	??_R3?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,0,32,1,4,0>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,0,32,1,4,0>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,0,32,1,4,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R11?0A@EA@?$FixedRounds@$0CA@@CryptoPP@@8	; CryptoPP::FixedRounds<32>::`RTTI Base Class Descriptor at (2,-1,0,64)'
PUBLIC	??_R0?AV?$FixedRounds@$0CA@@CryptoPP@@@8	; CryptoPP::FixedRounds<32> `RTTI Type Descriptor'
PUBLIC	??_R3?$FixedRounds@$0CA@@CryptoPP@@8		; CryptoPP::FixedRounds<32>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$FixedRounds@$0CA@@CryptoPP@@8		; CryptoPP::FixedRounds<32>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$FixedRounds@$0CA@@CryptoPP@@8	; CryptoPP::FixedRounds<32>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,0,32,1,4,0>::`RTTI Base Class Descriptor at (13,-1,0,64)'
PUBLIC	??_R1O@?0A@EA@?$FixedRounds@$0CA@@CryptoPP@@8	; CryptoPP::FixedRounds<32>::`RTTI Base Class Descriptor at (14,-1,0,64)'
PUBLIC	??_R0?AVEnc@Serpent@CryptoPP@@@8		; CryptoPP::Serpent::Enc `RTTI Type Descriptor'
PUBLIC	??_R3Enc@Serpent@CryptoPP@@8			; CryptoPP::Serpent::Enc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Enc@Serpent@CryptoPP@@8			; CryptoPP::Serpent::Enc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Enc@Serpent@CryptoPP@@8		; CryptoPP::Serpent::Enc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::Serpent::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::Serpent::Enc> `RTTI Type Descriptor'
PUBLIC	??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::Serpent::Enc>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::Serpent::Enc>::`RTTI Base Class Array'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBase@Twofish@CryptoPP@@@8		; CryptoPP::Twofish::Base `RTTI Type Descriptor'
PUBLIC	??_R3Base@Twofish@CryptoPP@@8			; CryptoPP::Twofish::Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Base@Twofish@CryptoPP@@8			; CryptoPP::Twofish::Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Base@Twofish@CryptoPP@@8		; CryptoPP::Twofish::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Twofish_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Twofish_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Twofish_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Twofish_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> > `RTTI Type Descriptor'
PUBLIC	??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> `RTTI Type Descriptor'
PUBLIC	??_R3?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>::`RTTI Base Class Array'
PUBLIC	??_R1M@?0A@EA@Twofish_Info@CryptoPP@@8		; CryptoPP::Twofish_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUTwofish_Info@CryptoPP@@@8		; CryptoPP::Twofish_Info `RTTI Type Descriptor'
PUBLIC	??_R3Twofish_Info@CryptoPP@@8			; CryptoPP::Twofish_Info::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Twofish_Info@CryptoPP@@8			; CryptoPP::Twofish_Info::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Twofish_Info@CryptoPP@@8		; CryptoPP::Twofish_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R11?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8	; CryptoPP::FixedRounds<16>::`RTTI Base Class Descriptor at (2,-1,0,64)'
PUBLIC	??_R0?AV?$FixedRounds@$0BA@@CryptoPP@@@8	; CryptoPP::FixedRounds<16> `RTTI Type Descriptor'
PUBLIC	??_R3?$FixedRounds@$0BA@@CryptoPP@@8		; CryptoPP::FixedRounds<16>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$FixedRounds@$0BA@@CryptoPP@@8		; CryptoPP::FixedRounds<16>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8	; CryptoPP::FixedRounds<16>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8	; CryptoPP::FixedRounds<16>::`RTTI Base Class Descriptor at (14,-1,0,64)'
PUBLIC	??_R0?AVEnc@Twofish@CryptoPP@@@8		; CryptoPP::Twofish::Enc `RTTI Type Descriptor'
PUBLIC	??_R3Enc@Twofish@CryptoPP@@8			; CryptoPP::Twofish::Enc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Enc@Twofish@CryptoPP@@8			; CryptoPP::Twofish::Enc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Enc@Twofish@CryptoPP@@8		; CryptoPP::Twofish::Enc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::Twofish::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::Twofish::Enc> `RTTI Type Descriptor'
PUBLIC	??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::Twofish::Enc>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::Twofish::Enc>::`RTTI Base Class Array'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBase@Blowfish@CryptoPP@@@8		; CryptoPP::Blowfish::Base `RTTI Type Descriptor'
PUBLIC	??_R3Base@Blowfish@CryptoPP@@8			; CryptoPP::Blowfish::Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Base@Blowfish@CryptoPP@@8			; CryptoPP::Blowfish::Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Base@Blowfish@CryptoPP@@8		; CryptoPP::Blowfish::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Blowfish_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Blowfish_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Blowfish_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Blowfish_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> > `RTTI Type Descriptor'
PUBLIC	??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> `RTTI Type Descriptor'
PUBLIC	??_R3?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>::`RTTI Base Class Array'
PUBLIC	??_R1M@?0A@EA@Blowfish_Info@CryptoPP@@8		; CryptoPP::Blowfish_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUBlowfish_Info@CryptoPP@@@8		; CryptoPP::Blowfish_Info `RTTI Type Descriptor'
PUBLIC	??_R3Blowfish_Info@CryptoPP@@8			; CryptoPP::Blowfish_Info::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Blowfish_Info@CryptoPP@@8			; CryptoPP::Blowfish_Info::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Blowfish_Info@CryptoPP@@8		; CryptoPP::Blowfish_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8	; CryptoPP::FixedBlockSize<8>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$FixedBlockSize@$07@CryptoPP@@@8	; CryptoPP::FixedBlockSize<8> `RTTI Type Descriptor'
PUBLIC	??_R3?$FixedBlockSize@$07@CryptoPP@@8		; CryptoPP::FixedBlockSize<8>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$FixedBlockSize@$07@CryptoPP@@8		; CryptoPP::FixedBlockSize<8>::`RTTI Base Class Array'
PUBLIC	??_R10?0A@EA@?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,1,56,1,4,0>::`RTTI Base Class Descriptor at (1,-1,0,64)'
PUBLIC	??_R0?AV?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,1,56,1,4,0> `RTTI Type Descriptor'
PUBLIC	??_R3?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,1,56,1,4,0>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,1,56,1,4,0>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,1,56,1,4,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8	; CryptoPP::FixedBlockSize<8>::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,1,56,1,4,0>::`RTTI Base Class Descriptor at (13,-1,0,64)'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::Blowfish::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::Blowfish::Base> `RTTI Type Descriptor'
PUBLIC	??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::Blowfish::Base>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::Blowfish::Base>::`RTTI Base Class Array'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBase@Camellia@CryptoPP@@@8		; CryptoPP::Camellia::Base `RTTI Type Descriptor'
PUBLIC	??_R3Base@Camellia@CryptoPP@@8			; CryptoPP::Camellia::Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Base@Camellia@CryptoPP@@8			; CryptoPP::Camellia::Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Base@Camellia@CryptoPP@@8		; CryptoPP::Camellia::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Camellia_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Camellia_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Camellia_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Camellia_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> > `RTTI Type Descriptor'
PUBLIC	??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> `RTTI Type Descriptor'
PUBLIC	??_R3?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>::`RTTI Base Class Array'
PUBLIC	??_R1M@?0A@EA@Camellia_Info@CryptoPP@@8		; CryptoPP::Camellia_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUCamellia_Info@CryptoPP@@@8		; CryptoPP::Camellia_Info `RTTI Type Descriptor'
PUBLIC	??_R3Camellia_Info@CryptoPP@@8			; CryptoPP::Camellia_Info::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Camellia_Info@CryptoPP@@8			; CryptoPP::Camellia_Info::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Camellia_Info@CryptoPP@@8		; CryptoPP::Camellia_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R10?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,32,8,4,0>::`RTTI Base Class Descriptor at (1,-1,0,64)'
PUBLIC	??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,16,32,8,4,0> `RTTI Type Descriptor'
PUBLIC	??_R3?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,32,8,4,0>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,32,8,4,0>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,32,8,4,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,32,8,4,0>::`RTTI Base Class Descriptor at (13,-1,0,64)'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::Camellia::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::Camellia::Base> `RTTI Type Descriptor'
PUBLIC	??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::Camellia::Base>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::Camellia::Base>::`RTTI Base Class Array'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBase@DES_EDE2@CryptoPP@@@8		; CryptoPP::DES_EDE2::Base `RTTI Type Descriptor'
PUBLIC	??_R3Base@DES_EDE2@CryptoPP@@8			; CryptoPP::DES_EDE2::Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Base@DES_EDE2@CryptoPP@@8			; CryptoPP::DES_EDE2::Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Base@DES_EDE2@CryptoPP@@8		; CryptoPP::DES_EDE2::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::DES_EDE2_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::DES_EDE2_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::DES_EDE2_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::DES_EDE2_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> > `RTTI Type Descriptor'
PUBLIC	??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> `RTTI Type Descriptor'
PUBLIC	??_R3?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>::`RTTI Base Class Array'
PUBLIC	??_R1M@?0A@EA@DES_EDE2_Info@CryptoPP@@8		; CryptoPP::DES_EDE2_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUDES_EDE2_Info@CryptoPP@@@8		; CryptoPP::DES_EDE2_Info `RTTI Type Descriptor'
PUBLIC	??_R3DES_EDE2_Info@CryptoPP@@8			; CryptoPP::DES_EDE2_Info::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DES_EDE2_Info@CryptoPP@@8			; CryptoPP::DES_EDE2_Info::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DES_EDE2_Info@CryptoPP@@8		; CryptoPP::DES_EDE2_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R10?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8 ; CryptoPP::FixedKeyLength<16,4,0>::`RTTI Base Class Descriptor at (1,-1,0,64)'
PUBLIC	??_R0?AV?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@@8 ; CryptoPP::FixedKeyLength<16,4,0> `RTTI Type Descriptor'
PUBLIC	??_R3?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8	; CryptoPP::FixedKeyLength<16,4,0>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8	; CryptoPP::FixedKeyLength<16,4,0>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8 ; CryptoPP::FixedKeyLength<16,4,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8 ; CryptoPP::FixedKeyLength<16,4,0>::`RTTI Base Class Descriptor at (13,-1,0,64)'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::DES_EDE2::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::DES_EDE2::Base> `RTTI Type Descriptor'
PUBLIC	??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::DES_EDE2::Base>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::DES_EDE2::Base>::`RTTI Base Class Array'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBase@IDEA@CryptoPP@@@8			; CryptoPP::IDEA::Base `RTTI Type Descriptor'
PUBLIC	??_R3Base@IDEA@CryptoPP@@8			; CryptoPP::IDEA::Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Base@IDEA@CryptoPP@@8			; CryptoPP::IDEA::Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Base@IDEA@CryptoPP@@8		; CryptoPP::IDEA::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::IDEA_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::IDEA_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::IDEA_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::IDEA_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> > `RTTI Type Descriptor'
PUBLIC	??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> `RTTI Type Descriptor'
PUBLIC	??_R3?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>::`RTTI Base Class Array'
PUBLIC	??_R1M@?0A@EA@IDEA_Info@CryptoPP@@8		; CryptoPP::IDEA_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUIDEA_Info@CryptoPP@@@8			; CryptoPP::IDEA_Info `RTTI Type Descriptor'
PUBLIC	??_R3IDEA_Info@CryptoPP@@8			; CryptoPP::IDEA_Info::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IDEA_Info@CryptoPP@@8			; CryptoPP::IDEA_Info::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IDEA_Info@CryptoPP@@8		; CryptoPP::IDEA_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R11?0A@EA@?$FixedRounds@$07@CryptoPP@@8	; CryptoPP::FixedRounds<8>::`RTTI Base Class Descriptor at (2,-1,0,64)'
PUBLIC	??_R0?AV?$FixedRounds@$07@CryptoPP@@@8		; CryptoPP::FixedRounds<8> `RTTI Type Descriptor'
PUBLIC	??_R3?$FixedRounds@$07@CryptoPP@@8		; CryptoPP::FixedRounds<8>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$FixedRounds@$07@CryptoPP@@8		; CryptoPP::FixedRounds<8>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$FixedRounds@$07@CryptoPP@@8	; CryptoPP::FixedRounds<8>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1O@?0A@EA@?$FixedRounds@$07@CryptoPP@@8	; CryptoPP::FixedRounds<8>::`RTTI Base Class Descriptor at (14,-1,0,64)'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::IDEA::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::IDEA::Base> `RTTI Type Descriptor'
PUBLIC	??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::IDEA::Base>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::IDEA::Base>::`RTTI Base Class Array'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBase@RC5@CryptoPP@@@8			; CryptoPP::RC5::Base `RTTI Type Descriptor'
PUBLIC	??_R3Base@RC5@CryptoPP@@8			; CryptoPP::RC5::Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Base@RC5@CryptoPP@@8			; CryptoPP::RC5::Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Base@RC5@CryptoPP@@8		; CryptoPP::RC5::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::RC5_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::RC5_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::RC5_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::RC5_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> > `RTTI Type Descriptor'
PUBLIC	??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> `RTTI Type Descriptor'
PUBLIC	??_R3?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>::`RTTI Base Class Array'
PUBLIC	??_R1M@?0A@EA@RC5_Info@CryptoPP@@8		; CryptoPP::RC5_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AURC5_Info@CryptoPP@@@8			; CryptoPP::RC5_Info `RTTI Type Descriptor'
PUBLIC	??_R3RC5_Info@CryptoPP@@8			; CryptoPP::RC5_Info::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RC5_Info@CryptoPP@@8			; CryptoPP::RC5_Info::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RC5_Info@CryptoPP@@8		; CryptoPP::RC5_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R11?0A@EA@?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8 ; CryptoPP::VariableRounds<16,1,2147483647>::`RTTI Base Class Descriptor at (2,-1,0,64)'
PUBLIC	??_R0?AV?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@@8 ; CryptoPP::VariableRounds<16,1,2147483647> `RTTI Type Descriptor'
PUBLIC	??_R3?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8 ; CryptoPP::VariableRounds<16,1,2147483647>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8 ; CryptoPP::VariableRounds<16,1,2147483647>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8 ; CryptoPP::VariableRounds<16,1,2147483647>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1O@?0A@EA@?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8 ; CryptoPP::VariableRounds<16,1,2147483647>::`RTTI Base Class Descriptor at (14,-1,0,64)'
PUBLIC	??_R0?AVEnc@RC5@CryptoPP@@@8			; CryptoPP::RC5::Enc `RTTI Type Descriptor'
PUBLIC	??_R3Enc@RC5@CryptoPP@@8			; CryptoPP::RC5::Enc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Enc@RC5@CryptoPP@@8			; CryptoPP::RC5::Enc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Enc@RC5@CryptoPP@@8		; CryptoPP::RC5::Enc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::RC5::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::RC5::Enc> `RTTI Type Descriptor'
PUBLIC	??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::RC5::Enc>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::RC5::Enc>::`RTTI Base Class Array'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBase@SEED@CryptoPP@@@8			; CryptoPP::SEED::Base `RTTI Type Descriptor'
PUBLIC	??_R3Base@SEED@CryptoPP@@8			; CryptoPP::SEED::Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Base@SEED@CryptoPP@@8			; CryptoPP::SEED::Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Base@SEED@CryptoPP@@8		; CryptoPP::SEED::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::SEED_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::SEED_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::SEED_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::SEED_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> > `RTTI Type Descriptor'
PUBLIC	??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> `RTTI Type Descriptor'
PUBLIC	??_R3?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>::`RTTI Base Class Array'
PUBLIC	??_R1M@?0A@EA@SEED_Info@CryptoPP@@8		; CryptoPP::SEED_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUSEED_Info@CryptoPP@@@8			; CryptoPP::SEED_Info `RTTI Type Descriptor'
PUBLIC	??_R3SEED_Info@CryptoPP@@8			; CryptoPP::SEED_Info::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SEED_Info@CryptoPP@@8			; CryptoPP::SEED_Info::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SEED_Info@CryptoPP@@8		; CryptoPP::SEED_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::SEED::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::SEED::Base> `RTTI Type Descriptor'
PUBLIC	??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::SEED::Base>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::SEED::Base>::`RTTI Base Class Array'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBase@SHACAL2@CryptoPP@@@8		; CryptoPP::SHACAL2::Base `RTTI Type Descriptor'
PUBLIC	??_R3Base@SHACAL2@CryptoPP@@8			; CryptoPP::SHACAL2::Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Base@SHACAL2@CryptoPP@@8			; CryptoPP::SHACAL2::Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Base@SHACAL2@CryptoPP@@8		; CryptoPP::SHACAL2::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::SHACAL2_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::SHACAL2_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::SHACAL2_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::SHACAL2_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> > `RTTI Type Descriptor'
PUBLIC	??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> `RTTI Type Descriptor'
PUBLIC	??_R3?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>::`RTTI Base Class Array'
PUBLIC	??_R1M@?0A@EA@SHACAL2_Info@CryptoPP@@8		; CryptoPP::SHACAL2_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUSHACAL2_Info@CryptoPP@@@8		; CryptoPP::SHACAL2_Info `RTTI Type Descriptor'
PUBLIC	??_R3SHACAL2_Info@CryptoPP@@8			; CryptoPP::SHACAL2_Info::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SHACAL2_Info@CryptoPP@@8			; CryptoPP::SHACAL2_Info::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SHACAL2_Info@CryptoPP@@8		; CryptoPP::SHACAL2_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$FixedBlockSize@$0CA@@CryptoPP@@8 ; CryptoPP::FixedBlockSize<32>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$FixedBlockSize@$0CA@@CryptoPP@@@8	; CryptoPP::FixedBlockSize<32> `RTTI Type Descriptor'
PUBLIC	??_R3?$FixedBlockSize@$0CA@@CryptoPP@@8		; CryptoPP::FixedBlockSize<32>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$FixedBlockSize@$0CA@@CryptoPP@@8		; CryptoPP::FixedBlockSize<32>::`RTTI Base Class Array'
PUBLIC	??_R10?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,64,1,4,0>::`RTTI Base Class Descriptor at (1,-1,0,64)'
PUBLIC	??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,16,64,1,4,0> `RTTI Type Descriptor'
PUBLIC	??_R3?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,64,1,4,0>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,64,1,4,0>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,64,1,4,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@?$FixedBlockSize@$0CA@@CryptoPP@@8 ; CryptoPP::FixedBlockSize<32>::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,64,1,4,0>::`RTTI Base Class Descriptor at (13,-1,0,64)'
PUBLIC	??_R0?AVEnc@SHACAL2@CryptoPP@@@8		; CryptoPP::SHACAL2::Enc `RTTI Type Descriptor'
PUBLIC	??_R3Enc@SHACAL2@CryptoPP@@8			; CryptoPP::SHACAL2::Enc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Enc@SHACAL2@CryptoPP@@8			; CryptoPP::SHACAL2::Enc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Enc@SHACAL2@CryptoPP@@8		; CryptoPP::SHACAL2::Enc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::SHACAL2::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::SHACAL2::Enc> `RTTI Type Descriptor'
PUBLIC	??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::SHACAL2::Enc>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::SHACAL2::Enc>::`RTTI Base Class Array'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBase@TEA@CryptoPP@@@8			; CryptoPP::TEA::Base `RTTI Type Descriptor'
PUBLIC	??_R3Base@TEA@CryptoPP@@8			; CryptoPP::TEA::Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Base@TEA@CryptoPP@@8			; CryptoPP::TEA::Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Base@TEA@CryptoPP@@8		; CryptoPP::TEA::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::TEA_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::TEA_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::TEA_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::TEA_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> > >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> > `RTTI Type Descriptor'
PUBLIC	??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> `RTTI Type Descriptor'
PUBLIC	??_R3?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>::`RTTI Base Class Array'
PUBLIC	??_R1M@?0A@EA@TEA_Info@CryptoPP@@8		; CryptoPP::TEA_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	??_R0?AUTEA_Info@CryptoPP@@@8			; CryptoPP::TEA_Info `RTTI Type Descriptor'
PUBLIC	??_R3TEA_Info@CryptoPP@@8			; CryptoPP::TEA_Info::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TEA_Info@CryptoPP@@8			; CryptoPP::TEA_Info::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TEA_Info@CryptoPP@@8		; CryptoPP::TEA_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R11?0A@EA@?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8 ; CryptoPP::VariableRounds<32,1,2147483647>::`RTTI Base Class Descriptor at (2,-1,0,64)'
PUBLIC	??_R0?AV?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@@8 ; CryptoPP::VariableRounds<32,1,2147483647> `RTTI Type Descriptor'
PUBLIC	??_R3?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8 ; CryptoPP::VariableRounds<32,1,2147483647>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8 ; CryptoPP::VariableRounds<32,1,2147483647>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8 ; CryptoPP::VariableRounds<32,1,2147483647>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1O@?0A@EA@?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8 ; CryptoPP::VariableRounds<32,1,2147483647>::`RTTI Base Class Descriptor at (14,-1,0,64)'
PUBLIC	??_R0?AVEnc@TEA@CryptoPP@@@8			; CryptoPP::TEA::Enc `RTTI Type Descriptor'
PUBLIC	??_R3Enc@TEA@CryptoPP@@8			; CryptoPP::TEA::Enc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Enc@TEA@CryptoPP@@8			; CryptoPP::TEA::Enc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Enc@TEA@CryptoPP@@8		; CryptoPP::TEA::Enc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::TEA::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::TEA::Enc> `RTTI Type Descriptor'
PUBLIC	??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::TEA::Enc>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::TEA::Enc>::`RTTI Base Class Array'
PUBLIC	??_R4?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`RTTI Complete Object Locator'
PUBLIC	??_R4BlockCipherAlgorithm@@6B@			; BlockCipherAlgorithm::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUBlockCipherAlgorithm@@@8		; BlockCipherAlgorithm `RTTI Type Descriptor'
PUBLIC	??_R3BlockCipherAlgorithm@@8			; BlockCipherAlgorithm::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BlockCipherAlgorithm@@8			; BlockCipherAlgorithm::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BlockCipherAlgorithm@@8		; BlockCipherAlgorithm::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4DH2KeyAgreement@@6B@			; DH2KeyAgreement::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDH2KeyAgreement@@@8			; DH2KeyAgreement `RTTI Type Descriptor'
PUBLIC	??_R3DH2KeyAgreement@@8				; DH2KeyAgreement::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DH2KeyAgreement@@8				; DH2KeyAgreement::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DH2KeyAgreement@@8		; DH2KeyAgreement::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherDetail@VRC6@CryptoPP@@@@6B@	; BlockCipherDetail<CryptoPP::RC6>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$BlockCipherDetail@VRC6@CryptoPP@@@@@8	; BlockCipherDetail<CryptoPP::RC6> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherDetail@VRC6@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::RC6>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherDetail@VRC6@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::RC6>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherDetail@VRC6@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::RC6>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherDetail@VMARS@CryptoPP@@@@6B@	; BlockCipherDetail<CryptoPP::MARS>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$BlockCipherDetail@VMARS@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::MARS> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherDetail@VMARS@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::MARS>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherDetail@VMARS@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::MARS>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherDetail@VMARS@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::MARS>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherDetail@VTwofish@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::Twofish>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$BlockCipherDetail@VTwofish@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::Twofish> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherDetail@VTwofish@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::Twofish>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherDetail@VTwofish@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::Twofish>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherDetail@VTwofish@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::Twofish>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherDetail@VSerpent@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::Serpent>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$BlockCipherDetail@VSerpent@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::Serpent> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherDetail@VSerpent@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::Serpent>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherDetail@VSerpent@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::Serpent>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherDetail@VSerpent@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::Serpent>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherDetail@VCAST256@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::CAST256>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$BlockCipherDetail@VCAST256@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::CAST256> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherDetail@VCAST256@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::CAST256>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherDetail@VCAST256@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::CAST256>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherDetail@VCAST256@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::CAST256>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherDetail@VIDEA@CryptoPP@@@@6B@	; BlockCipherDetail<CryptoPP::IDEA>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$BlockCipherDetail@VIDEA@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::IDEA> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherDetail@VIDEA@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::IDEA>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherDetail@VIDEA@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::IDEA>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherDetail@VIDEA@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::IDEA>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::DES_EDE2>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::DES_EDE2> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::DES_EDE2>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::DES_EDE2>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::DES_EDE2>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherDetail@VCamellia@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::Camellia>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$BlockCipherDetail@VCamellia@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::Camellia> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherDetail@VCamellia@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::Camellia>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherDetail@VCamellia@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::Camellia>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherDetail@VCamellia@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::Camellia>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherDetail@VSEED@CryptoPP@@@@6B@	; BlockCipherDetail<CryptoPP::SEED>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$BlockCipherDetail@VSEED@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::SEED> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherDetail@VSEED@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::SEED>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherDetail@VSEED@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::SEED>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherDetail@VSEED@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::SEED>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherDetail@VRC5@CryptoPP@@@@6B@	; BlockCipherDetail<CryptoPP::RC5>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$BlockCipherDetail@VRC5@CryptoPP@@@@@8	; BlockCipherDetail<CryptoPP::RC5> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherDetail@VRC5@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::RC5>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherDetail@VRC5@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::RC5>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherDetail@VRC5@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::RC5>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherDetail@VBlowfish@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::Blowfish>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$BlockCipherDetail@VBlowfish@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::Blowfish> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherDetail@VBlowfish@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::Blowfish>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherDetail@VBlowfish@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::Blowfish>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::Blowfish>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherDetail@VTEA@CryptoPP@@@@6B@	; BlockCipherDetail<CryptoPP::TEA>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$BlockCipherDetail@VTEA@CryptoPP@@@@@8	; BlockCipherDetail<CryptoPP::TEA> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherDetail@VTEA@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::TEA>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherDetail@VTEA@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::TEA>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherDetail@VTEA@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::TEA>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::SHACAL2>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AU?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::SHACAL2> `RTTI Type Descriptor'
PUBLIC	??_R3?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::SHACAL2>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@8	; BlockCipherDetail<CryptoPP::SHACAL2>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::SHACAL2>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
PUBLIC	??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc> > `RTTI Type Descriptor'
PUBLIC	??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
PUBLIC	??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc> > `RTTI Type Descriptor'
PUBLIC	??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
PUBLIC	??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base> > `RTTI Type Descriptor'
PUBLIC	??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
PUBLIC	??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc> > `RTTI Type Descriptor'
PUBLIC	??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
PUBLIC	??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base> > `RTTI Type Descriptor'
PUBLIC	??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
PUBLIC	??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base> > `RTTI Type Descriptor'
PUBLIC	??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
PUBLIC	??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base> > `RTTI Type Descriptor'
PUBLIC	??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
PUBLIC	??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base> > `RTTI Type Descriptor'
PUBLIC	??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
PUBLIC	??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base> > `RTTI Type Descriptor'
PUBLIC	??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
PUBLIC	??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc> > `RTTI Type Descriptor'
PUBLIC	??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
PUBLIC	??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc> > `RTTI Type Descriptor'
PUBLIC	??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
PUBLIC	??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc> > `RTTI Type Descriptor'
PUBLIC	??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
PUBLIC	??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
PUBLIC	??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc> > `RTTI Type Descriptor'
PUBLIC	??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
PUBLIC	??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
PUBLIC	??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
EXTRN	??_L@YGXPAXIIP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	___std_terminate:PROC
EXTRN	__invalid_parameter_noinfo:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	__errno:PROC
EXTRN	_strncmp:PROC
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	___std_type_info_compare:PROC
EXTRN	___std_type_info_name:PROC
EXTRN	??_EException@CryptoPP@@UAEPAXI@Z:PROC		; CryptoPP::Exception::`vector deleting destructor'
EXTRN	??_EInvalidArgument@CryptoPP@@UAEPAXI@Z:PROC	; CryptoPP::InvalidArgument::`vector deleting destructor'
EXTRN	??_EInvalidDataFormat@CryptoPP@@UAEPAXI@Z:PROC	; CryptoPP::InvalidDataFormat::`vector deleting destructor'
EXTRN	??_ENotImplemented@CryptoPP@@UAEPAXI@Z:PROC	; CryptoPP::NotImplemented::`vector deleting destructor'
EXTRN	??_EValueTypeMismatch@NameValuePairs@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::NameValuePairs::ValueTypeMismatch::`vector deleting destructor'
EXTRN	??0Algorithm@CryptoPP@@QAE@_N@Z:PROC		; CryptoPP::Algorithm::Algorithm
EXTRN	?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z:PROC ; CryptoPP::SimpleKeyingInterface::SetKey
EXTRN	?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z:PROC ; CryptoPP::SimpleKeyingInterface::GetNextIV
EXTRN	?OptimalDataAlignment@BlockTransformation@CryptoPP@@UBEIXZ:PROC ; CryptoPP::BlockTransformation::OptimalDataAlignment
EXTRN	?AdvancedProcessBlocks@BlockTransformation@CryptoPP@@UBEIPBE0PAEII@Z:PROC ; CryptoPP::BlockTransformation::AdvancedProcessBlocks
EXTRN	?ProcessLastBlock@StreamTransformation@CryptoPP@@UAEXPAEPBEI@Z:PROC ; CryptoPP::StreamTransformation::ProcessLastBlock
EXTRN	?GenerateByte@RandomNumberGenerator@CryptoPP@@UAEEXZ:PROC ; CryptoPP::RandomNumberGenerator::GenerateByte
EXTRN	?GenerateBit@RandomNumberGenerator@CryptoPP@@UAEIXZ:PROC ; CryptoPP::RandomNumberGenerator::GenerateBit
EXTRN	?GenerateWord32@RandomNumberGenerator@CryptoPP@@UAEIII@Z:PROC ; CryptoPP::RandomNumberGenerator::GenerateWord32
EXTRN	?GenerateBlock@RandomNumberGenerator@CryptoPP@@UAEXPAEI@Z:PROC ; CryptoPP::RandomNumberGenerator::GenerateBlock
EXTRN	?DiscardBytes@RandomNumberGenerator@CryptoPP@@UAEXI@Z:PROC ; CryptoPP::RandomNumberGenerator::DiscardBytes
EXTRN	?GenerateIntoBufferedTransformation@RandomNumberGenerator@CryptoPP@@UAEXAAVBufferedTransformation@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z:PROC ; CryptoPP::RandomNumberGenerator::GenerateIntoBufferedTransformation
EXTRN	??_EInvalidMaterial@CryptoMaterial@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::CryptoMaterial::InvalidMaterial::`vector deleting destructor'
EXTRN	?GenerateKeyPair@SimpleKeyAgreementDomain@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE1@Z:PROC ; CryptoPP::SimpleKeyAgreementDomain::GenerateKeyPair
EXTRN	?VerifyBufsEqual@CryptoPP@@YA_NPBE0I@Z:PROC	; CryptoPP::VerifyBufsEqual
EXTRN	?AlignedAllocate@CryptoPP@@YAPAXI@Z:PROC	; CryptoPP::AlignedAllocate
EXTRN	?AlignedDeallocate@CryptoPP@@YAXPAX@Z:PROC	; CryptoPP::AlignedDeallocate
EXTRN	?UnalignedAllocate@CryptoPP@@YAPAXI@Z:PROC	; CryptoPP::UnalignedAllocate
EXTRN	?UnalignedDeallocate@CryptoPP@@YAXPAX@Z:PROC	; CryptoPP::UnalignedDeallocate
EXTRN	??_EParameterNotUsed@AlgorithmParametersBase@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::`vector deleting destructor'
EXTRN	??_EAlgorithmParametersBase@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::AlgorithmParametersBase::`vector deleting destructor'
EXTRN	??_E?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::`vector deleting destructor'
EXTRN	??0AlgorithmParameters@CryptoPP@@QAE@XZ:PROC	; CryptoPP::AlgorithmParameters::AlgorithmParameters
EXTRN	??0AlgorithmParameters@CryptoPP@@QAE@ABV01@@Z:PROC ; CryptoPP::AlgorithmParameters::AlgorithmParameters
EXTRN	?IncrementCounterBy256@CTR_ModePolicy@CryptoPP@@MAEXXZ:PROC ; CryptoPP::CTR_ModePolicy::IncrementCounterBy256
EXTRN	?OperateKeystream@CTR_ModePolicy@CryptoPP@@MAEXW4KeystreamOperation@2@PAEPBEI@Z:PROC ; CryptoPP::CTR_ModePolicy::OperateKeystream
EXTRN	?CipherResynchronize@CTR_ModePolicy@CryptoPP@@MAEXPAEPBEI@Z:PROC ; CryptoPP::CTR_ModePolicy::CipherResynchronize
EXTRN	?SeekToIteration@CTR_ModePolicy@CryptoPP@@MAEX_K@Z:PROC ; CryptoPP::CTR_ModePolicy::SeekToIteration
EXTRN	?GenerateBlock@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEI@Z:PROC ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::GenerateBlock
EXTRN	?ProcessData@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEPBEI@Z:PROC ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::ProcessData
EXTRN	?Resynchronize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPBEH@Z:PROC ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::Resynchronize
EXTRN	?Seek@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEX_K@Z:PROC ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::Seek
EXTRN	?UncheckedSetKey@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@MAEXPBEIABVNameValuePairs@2@@Z:PROC ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::UncheckedSetKey
EXTRN	??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`vector deleting destructor'
EXTRN	??0Integer@CryptoPP@@QAE@XZ:PROC		; CryptoPP::Integer::Integer
EXTRN	??0Integer@CryptoPP@@QAE@ABV01@@Z:PROC		; CryptoPP::Integer::Integer
EXTRN	??0Integer@CryptoPP@@QAE@J@Z:PROC		; CryptoPP::Integer::Integer
EXTRN	??0Integer@CryptoPP@@QAE@PBD@Z:PROC		; CryptoPP::Integer::Integer
EXTRN	??0Integer@CryptoPP@@QAE@PBEIW4Signedness@01@@Z:PROC ; CryptoPP::Integer::Integer
EXTRN	??0Integer@CryptoPP@@QAE@AAVBufferedTransformation@1@@Z:PROC ; CryptoPP::Integer::Integer
EXTRN	?Zero@Integer@CryptoPP@@SAABV12@XZ:PROC		; CryptoPP::Integer::Zero
EXTRN	?One@Integer@CryptoPP@@SAABV12@XZ:PROC		; CryptoPP::Integer::One
EXTRN	??0Integer@CryptoPP@@QAE@AAVRandomNumberGenerator@1@ABV01@1W4RandomNumberType@01@11@Z:PROC ; CryptoPP::Integer::Integer
EXTRN	?Power2@Integer@CryptoPP@@SA?AV12@I@Z:PROC	; CryptoPP::Integer::Power2
EXTRN	?Encode@Integer@CryptoPP@@QBEXPAEIW4Signedness@12@@Z:PROC ; CryptoPP::Integer::Encode
EXTRN	?BitCount@Integer@CryptoPP@@QBEIXZ:PROC		; CryptoPP::Integer::BitCount
EXTRN	?ByteCount@Integer@CryptoPP@@QBEIXZ:PROC	; CryptoPP::Integer::ByteCount
EXTRN	??4Integer@CryptoPP@@QAEAAV01@ABV01@@Z:PROC	; CryptoPP::Integer::operator=
EXTRN	??_3Integer@CryptoPP@@QAEAAV01@I@Z:PROC		; CryptoPP::Integer::operator<<=
EXTRN	?Compare@Integer@CryptoPP@@QBEHABV12@@Z:PROC	; CryptoPP::Integer::Compare
EXTRN	?Plus@Integer@CryptoPP@@QBE?AV12@ABV12@@Z:PROC	; CryptoPP::Integer::Plus
EXTRN	?Minus@Integer@CryptoPP@@QBE?AV12@ABV12@@Z:PROC	; CryptoPP::Integer::Minus
EXTRN	?Times@Integer@CryptoPP@@QBE?AV12@ABV12@@Z:PROC	; CryptoPP::Integer::Times
EXTRN	?DividedBy@Integer@CryptoPP@@QBE?AV12@ABV12@@Z:PROC ; CryptoPP::Integer::DividedBy
EXTRN	?Modulo@Integer@CryptoPP@@QBE?AV12@ABV12@@Z:PROC ; CryptoPP::Integer::Modulo
EXTRN	?IsUnit@Integer@CryptoPP@@QBE_NXZ:PROC		; CryptoPP::Integer::IsUnit
EXTRN	?a_exp_b_mod_c@CryptoPP@@YA?AVInteger@1@ABV21@00@Z:PROC ; CryptoPP::a_exp_b_mod_c
EXTRN	?Gcd@Integer@CryptoPP@@SA?AV12@ABV12@0@Z:PROC	; CryptoPP::Integer::Gcd
EXTRN	?InverseMod@Integer@CryptoPP@@QBE?AV12@ABV12@@Z:PROC ; CryptoPP::Integer::InverseMod
EXTRN	??0Integer@CryptoPP@@AAE@II@Z:PROC		; CryptoPP::Integer::Integer
EXTRN	??0RandomPool@CryptoPP@@QAE@XZ:PROC		; CryptoPP::RandomPool::RandomPool
EXTRN	?IncorporateEntropy@RandomPool@CryptoPP@@UAEXPBEI@Z:PROC ; CryptoPP::RandomPool::IncorporateEntropy
EXTRN	?GenerateIntoBufferedTransformation@RandomPool@CryptoPP@@UAEXAAVBufferedTransformation@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z:PROC ; CryptoPP::RandomPool::GenerateIntoBufferedTransformation
EXTRN	??_ESelfTestFailure@CryptoPP@@UAEPAXI@Z:PROC	; CryptoPP::SelfTestFailure::`vector deleting destructor'
EXTRN	?FIPS_140_2_ComplianceEnabled@CryptoPP@@YA_NXZ:PROC ; CryptoPP::FIPS_140_2_ComplianceEnabled
EXTRN	?Reseed@AutoSeededRandomPool@CryptoPP@@QAEX_NI@Z:PROC ; CryptoPP::AutoSeededRandomPool::Reseed
EXTRN	??_EAutoSeededRandomPool@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::AutoSeededRandomPool::`vector deleting destructor'
EXTRN	?ScalarMultiply@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z:PROC ; CryptoPP::AbstractGroup<CryptoPP::Integer>::ScalarMultiply
EXTRN	?CascadeScalarMultiply@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@000@Z:PROC ; CryptoPP::AbstractGroup<CryptoPP::Integer>::CascadeScalarMultiply
EXTRN	?SimultaneousMultiply@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UBEXPAVInteger@2@ABV32@PBV32@I@Z:PROC ; CryptoPP::AbstractGroup<CryptoPP::Integer>::SimultaneousMultiply
EXTRN	?Exponentiate@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z:PROC ; CryptoPP::AbstractRing<CryptoPP::Integer>::Exponentiate
EXTRN	?CascadeExponentiate@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@000@Z:PROC ; CryptoPP::AbstractRing<CryptoPP::Integer>::CascadeExponentiate
EXTRN	?SimultaneousExponentiate@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEXPAVInteger@2@ABV32@PBV32@I@Z:PROC ; CryptoPP::AbstractRing<CryptoPP::Integer>::SimultaneousExponentiate
EXTRN	??_EMultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::`vector deleting destructor'
EXTRN	?Add@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z:PROC ; CryptoPP::ModularArithmetic::Add
EXTRN	?Accumulate@ModularArithmetic@CryptoPP@@UBEAAVInteger@2@AAV32@ABV32@@Z:PROC ; CryptoPP::ModularArithmetic::Accumulate
EXTRN	?Inverse@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z:PROC ; CryptoPP::ModularArithmetic::Inverse
EXTRN	?Subtract@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z:PROC ; CryptoPP::ModularArithmetic::Subtract
EXTRN	?Reduce@ModularArithmetic@CryptoPP@@UBEAAVInteger@2@AAV32@ABV32@@Z:PROC ; CryptoPP::ModularArithmetic::Reduce
EXTRN	?CascadeExponentiate@ModularArithmetic@CryptoPP@@UBE?AVInteger@2@ABV32@000@Z:PROC ; CryptoPP::ModularArithmetic::CascadeExponentiate
EXTRN	?SimultaneousExponentiate@ModularArithmetic@CryptoPP@@UBEXPAVInteger@2@ABV32@PBV32@I@Z:PROC ; CryptoPP::ModularArithmetic::SimultaneousExponentiate
EXTRN	??_EModularArithmetic@CryptoPP@@UAEPAXI@Z:PROC	; CryptoPP::ModularArithmetic::`vector deleting destructor'
EXTRN	??0MontgomeryRepresentation@CryptoPP@@QAE@ABVInteger@1@@Z:PROC ; CryptoPP::MontgomeryRepresentation::MontgomeryRepresentation
EXTRN	?ConvertOut@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z:PROC ; CryptoPP::MontgomeryRepresentation::ConvertOut
EXTRN	?Multiply@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@ABV32@0@Z:PROC ; CryptoPP::MontgomeryRepresentation::Multiply
EXTRN	?Square@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@ABV32@@Z:PROC ; CryptoPP::MontgomeryRepresentation::Square
EXTRN	?MultiplicativeInverse@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@ABV32@@Z:PROC ; CryptoPP::MontgomeryRepresentation::MultiplicativeInverse
EXTRN	??_EMontgomeryRepresentation@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::MontgomeryRepresentation::`vector deleting destructor'
EXTRN	??_EDL_BadElement@CryptoPP@@UAEPAXI@Z:PROC	; CryptoPP::DL_BadElement::`vector deleting destructor'
EXTRN	?SetBase@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UAEXABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@ABVInteger@2@@Z:PROC ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::SetBase
EXTRN	?Precompute@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UAEXABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@II@Z:PROC ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::Precompute
EXTRN	?Load@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UAEXABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@AAVBufferedTransformation@2@@Z:PROC ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::Load
EXTRN	?Save@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UBEXABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@AAVBufferedTransformation@2@@Z:PROC ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::Save
EXTRN	?Exponentiate@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@ABV32@@Z:PROC ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::Exponentiate
EXTRN	?CascadeExponentiate@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@ABV32@ABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@1@Z:PROC ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::CascadeExponentiate
EXTRN	?BERDecode@DL_GroupParameters_IntegerBased@CryptoPP@@UAEXAAVBufferedTransformation@2@@Z:PROC ; CryptoPP::DL_GroupParameters_IntegerBased::BERDecode
EXTRN	?DEREncode@DL_GroupParameters_IntegerBased@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z:PROC ; CryptoPP::DL_GroupParameters_IntegerBased::DEREncode
EXTRN	?GenerateRandom@DL_GroupParameters_IntegerBased@CryptoPP@@UAEXAAVRandomNumberGenerator@2@ABVNameValuePairs@2@@Z:PROC ; CryptoPP::DL_GroupParameters_IntegerBased::GenerateRandom
EXTRN	?GetVoidValue@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NPBDABVtype_info@@PAX@Z:PROC ; CryptoPP::DL_GroupParameters_IntegerBased::GetVoidValue
EXTRN	?AssignFrom@DL_GroupParameters_IntegerBased@CryptoPP@@UAEXABVNameValuePairs@2@@Z:PROC ; CryptoPP::DL_GroupParameters_IntegerBased::AssignFrom
EXTRN	?ValidateGroup@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NAAVRandomNumberGenerator@2@I@Z:PROC ; CryptoPP::DL_GroupParameters_IntegerBased::ValidateGroup
EXTRN	?ValidateElement@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NIABVInteger@2@PBV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@@Z:PROC ; CryptoPP::DL_GroupParameters_IntegerBased::ValidateElement
EXTRN	?DecodeElement@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@PBE_N@Z:PROC ; CryptoPP::DL_GroupParameters_IntegerBased::DecodeElement
EXTRN	?GetMaxExponent@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ:PROC ; CryptoPP::DL_GroupParameters_IntegerBased::GetMaxExponent
EXTRN	?GetDefaultSubgroupOrderSize@DL_GroupParameters_IntegerBased@CryptoPP@@MBEII@Z:PROC ; CryptoPP::DL_GroupParameters_IntegerBased::GetDefaultSubgroupOrderSize
EXTRN	??_E?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`vector deleting destructor'
EXTRN	?SimultaneousExponentiate@DL_GroupParameters_GFP@CryptoPP@@UBEXPAVInteger@2@ABV32@PBV32@I@Z:PROC ; CryptoPP::DL_GroupParameters_GFP::SimultaneousExponentiate
EXTRN	??_EDL_GroupParameters_GFP@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::DL_GroupParameters_GFP::`vector deleting destructor'
EXTRN	??_EDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`vector deleting destructor'
EXTRN	??_E?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`vector deleting destructor'
EXTRN	?Agree@DH2@CryptoPP@@UBE_NPAEPBE111_N@Z:PROC	; CryptoPP::DH2::Agree
EXTRN	??_EDH2@CryptoPP@@UAEPAXI@Z:PROC		; CryptoPP::DH2::`vector deleting destructor'
EXTRN	?UncheckedSetKey@Base@CAST256@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z:PROC ; CryptoPP::CAST256::Base::UncheckedSetKey
EXTRN	?ProcessAndXorBlock@Base@CAST256@CryptoPP@@UBEXPBE0PAE@Z:PROC ; CryptoPP::CAST256::Base::ProcessAndXorBlock
EXTRN	?UncheckedSetKey@Base@RC6@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z:PROC ; CryptoPP::RC6::Base::UncheckedSetKey
EXTRN	?ProcessAndXorBlock@Enc@RC6@CryptoPP@@UBEXPBE0PAE@Z:PROC ; CryptoPP::RC6::Enc::ProcessAndXorBlock
EXTRN	?UncheckedSetKey@Base@MARS@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z:PROC ; CryptoPP::MARS::Base::UncheckedSetKey
EXTRN	?ProcessAndXorBlock@Enc@MARS@CryptoPP@@UBEXPBE0PAE@Z:PROC ; CryptoPP::MARS::Enc::ProcessAndXorBlock
EXTRN	?UncheckedSetKey@Base@Serpent@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z:PROC ; CryptoPP::Serpent::Base::UncheckedSetKey
EXTRN	?ProcessAndXorBlock@Enc@Serpent@CryptoPP@@UBEXPBE0PAE@Z:PROC ; CryptoPP::Serpent::Enc::ProcessAndXorBlock
EXTRN	?UncheckedSetKey@Base@Twofish@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z:PROC ; CryptoPP::Twofish::Base::UncheckedSetKey
EXTRN	?ProcessAndXorBlock@Enc@Twofish@CryptoPP@@UBEXPBE0PAE@Z:PROC ; CryptoPP::Twofish::Enc::ProcessAndXorBlock
EXTRN	?ProcessAndXorBlock@Base@Blowfish@CryptoPP@@UBEXPBE0PAE@Z:PROC ; CryptoPP::Blowfish::Base::ProcessAndXorBlock
EXTRN	?UncheckedSetKey@Base@Blowfish@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z:PROC ; CryptoPP::Blowfish::Base::UncheckedSetKey
EXTRN	?UncheckedSetKey@Base@Camellia@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z:PROC ; CryptoPP::Camellia::Base::UncheckedSetKey
EXTRN	?ProcessAndXorBlock@Base@Camellia@CryptoPP@@UBEXPBE0PAE@Z:PROC ; CryptoPP::Camellia::Base::ProcessAndXorBlock
EXTRN	?UncheckedSetKey@Base@DES_EDE2@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z:PROC ; CryptoPP::DES_EDE2::Base::UncheckedSetKey
EXTRN	?ProcessAndXorBlock@Base@DES_EDE2@CryptoPP@@UBEXPBE0PAE@Z:PROC ; CryptoPP::DES_EDE2::Base::ProcessAndXorBlock
EXTRN	?ProcessAndXorBlock@Base@IDEA@CryptoPP@@UBEXPBE0PAE@Z:PROC ; CryptoPP::IDEA::Base::ProcessAndXorBlock
EXTRN	?UncheckedSetKey@Base@IDEA@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z:PROC ; CryptoPP::IDEA::Base::UncheckedSetKey
EXTRN	?UncheckedSetKey@Base@RC5@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z:PROC ; CryptoPP::RC5::Base::UncheckedSetKey
EXTRN	?ProcessAndXorBlock@Enc@RC5@CryptoPP@@UBEXPBE0PAE@Z:PROC ; CryptoPP::RC5::Enc::ProcessAndXorBlock
EXTRN	?UncheckedSetKey@Base@SEED@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z:PROC ; CryptoPP::SEED::Base::UncheckedSetKey
EXTRN	?ProcessAndXorBlock@Base@SEED@CryptoPP@@UBEXPBE0PAE@Z:PROC ; CryptoPP::SEED::Base::ProcessAndXorBlock
EXTRN	?UncheckedSetKey@Base@SHACAL2@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z:PROC ; CryptoPP::SHACAL2::Base::UncheckedSetKey
EXTRN	?ProcessAndXorBlock@Enc@SHACAL2@CryptoPP@@UBEXPBE0PAE@Z:PROC ; CryptoPP::SHACAL2::Enc::ProcessAndXorBlock
EXTRN	?UncheckedSetKey@Base@TEA@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z:PROC ; CryptoPP::TEA::Base::UncheckedSetKey
EXTRN	?ProcessAndXorBlock@Enc@TEA@CryptoPP@@UBEXPBE0PAE@Z:PROC ; CryptoPP::TEA::Enc::ProcessAndXorBlock
EXTRN	??_EBlockCipherAlgorithm@@UAEPAXI@Z:PROC	; BlockCipherAlgorithm::`vector deleting destructor'
EXTRN	??_EKeyAgreement@@UAEPAXI@Z:PROC		; KeyAgreement::`vector deleting destructor'
EXTRN	??_EDH2KeyAgreement@@UAEPAXI@Z:PROC		; DH2KeyAgreement::`vector deleting destructor'
EXTRN	??_E?$BlockCipherDetail@VRC6@CryptoPP@@@@UAEPAXI@Z:PROC ; BlockCipherDetail<CryptoPP::RC6>::`vector deleting destructor'
EXTRN	??_E?$BlockCipherDetail@VMARS@CryptoPP@@@@UAEPAXI@Z:PROC ; BlockCipherDetail<CryptoPP::MARS>::`vector deleting destructor'
EXTRN	??_E?$BlockCipherDetail@VTwofish@CryptoPP@@@@UAEPAXI@Z:PROC ; BlockCipherDetail<CryptoPP::Twofish>::`vector deleting destructor'
EXTRN	??_E?$BlockCipherDetail@VSerpent@CryptoPP@@@@UAEPAXI@Z:PROC ; BlockCipherDetail<CryptoPP::Serpent>::`vector deleting destructor'
EXTRN	??_E?$BlockCipherDetail@VCAST256@CryptoPP@@@@UAEPAXI@Z:PROC ; BlockCipherDetail<CryptoPP::CAST256>::`vector deleting destructor'
EXTRN	??_E?$BlockCipherDetail@VIDEA@CryptoPP@@@@UAEPAXI@Z:PROC ; BlockCipherDetail<CryptoPP::IDEA>::`vector deleting destructor'
EXTRN	??_E?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UAEPAXI@Z:PROC ; BlockCipherDetail<CryptoPP::DES_EDE2>::`vector deleting destructor'
EXTRN	??_E?$BlockCipherDetail@VCamellia@CryptoPP@@@@UAEPAXI@Z:PROC ; BlockCipherDetail<CryptoPP::Camellia>::`vector deleting destructor'
EXTRN	??_E?$BlockCipherDetail@VSEED@CryptoPP@@@@UAEPAXI@Z:PROC ; BlockCipherDetail<CryptoPP::SEED>::`vector deleting destructor'
EXTRN	??_E?$BlockCipherDetail@VRC5@CryptoPP@@@@UAEPAXI@Z:PROC ; BlockCipherDetail<CryptoPP::RC5>::`vector deleting destructor'
EXTRN	??_E?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UAEPAXI@Z:PROC ; BlockCipherDetail<CryptoPP::Blowfish>::`vector deleting destructor'
EXTRN	??_E?$BlockCipherDetail@VTEA@CryptoPP@@@@UAEPAXI@Z:PROC ; BlockCipherDetail<CryptoPP::TEA>::`vector deleting destructor'
EXTRN	??_E?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UAEPAXI@Z:PROC ; BlockCipherDetail<CryptoPP::SHACAL2>::`vector deleting destructor'
EXTRN	??_E?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`vector deleting destructor'
EXTRN	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
EXTRN	??_E?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`vector deleting destructor'
EXTRN	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
EXTRN	??_E?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`vector deleting destructor'
EXTRN	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
EXTRN	??_E?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`vector deleting destructor'
EXTRN	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
EXTRN	??_E?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`vector deleting destructor'
EXTRN	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
EXTRN	??_E?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`vector deleting destructor'
EXTRN	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
EXTRN	??_E?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`vector deleting destructor'
EXTRN	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
EXTRN	??_E?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`vector deleting destructor'
EXTRN	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
EXTRN	??_E?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`vector deleting destructor'
EXTRN	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
EXTRN	??_E?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`vector deleting destructor'
EXTRN	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
EXTRN	??_E?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`vector deleting destructor'
EXTRN	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
EXTRN	??_E?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`vector deleting destructor'
EXTRN	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
EXTRN	??_E?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`vector deleting destructor'
EXTRN	??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?__type_info_root_node@@3U__type_info_node@@A:BYTE ; __type_info_root_node
EXTRN	?g_pAssignIntToInteger@CryptoPP@@3P6A_NABVtype_info@@PAXPBX@ZA:DWORD ; CryptoPP::g_pAssignIntToInteger
EXTRN	___security_cookie:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?s_pObject@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@3@XZ@4V?$simple_ptr@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@3@C
_BSS	SEGMENT
?s_pObject@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@3@XZ@4V?$simple_ptr@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@3@C DD 01H DUP (?) ; `CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref'::`2'::s_pObject
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@3@XZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@3@XZ@4HA DD 01H DUP (?) ; `CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	028H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	018H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	011H
	DD	FLAT:??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@Crypt'
	DB	'oPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAddit'
	DB	'iveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP'
	DB	'@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherMode'
	DB	'FinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@C'
	DB	'ryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@'
	DB	'V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCi'
	DB	'pherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@'
	DB	'UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	010H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@Cryp'
	DB	'toPP@@@CryptoPP@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
	DD	00H
	DD	040H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	012H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
	DD	FLAT:??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	013H
	DD	FLAT:??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCiphe'
	DB	'rFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHol'
	DB	'der@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPol'
	DB	'icyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePo'
	DB	'licy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@Cryp'
	DB	'toPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	028H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	018H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	011H
	DD	FLAT:??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@Crypt'
	DB	'oPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAddit'
	DB	'iveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP'
	DB	'@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherMode'
	DB	'FinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@'
	DB	'CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@'
	DB	'@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveC'
	DB	'ipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2'
	DB	'@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	010H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@Cry'
	DB	'ptoPP@@@CryptoPP@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
	DD	00H
	DD	040H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	012H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
	DD	FLAT:??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	013H
	DD	FLAT:??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCiphe'
	DB	'rFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHo'
	DB	'lder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPo'
	DB	'licyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModeP'
	DB	'olicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@Cry'
	DB	'ptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	028H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	018H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	011H
	DD	FLAT:??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@Crypt'
	DB	'oPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAddit'
	DB	'iveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP'
	DB	'@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherMode'
	DB	'FinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofi'
	DB	'sh@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@Crypto'
	DB	'PP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditi'
	DB	'veCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@'
	DB	'@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	010H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@'
	DB	'CryptoPP@@@CryptoPP@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
	DD	00H
	DD	040H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	012H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
	DD	FLAT:??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	013H
	DD	FLAT:??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCiphe'
	DB	'rFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolic'
	DB	'yHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$Abstrac'
	DB	'tPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_Mo'
	DB	'dePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@'
	DB	'CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	028H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	018H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	011H
	DD	FLAT:??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@Crypt'
	DB	'oPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAddit'
	DB	'iveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP'
	DB	'@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherMode'
	DB	'FinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpe'
	DB	'nt@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@Crypto'
	DB	'PP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditi'
	DB	'veCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@'
	DB	'@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	010H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@'
	DB	'CryptoPP@@@CryptoPP@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
	DD	00H
	DD	040H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	012H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
	DD	FLAT:??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	013H
	DD	FLAT:??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCiphe'
	DB	'rFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolic'
	DB	'yHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$Abstrac'
	DB	'tPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_Mo'
	DB	'dePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@'
	DB	'CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	028H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	018H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	011H
	DD	FLAT:??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@Crypt'
	DB	'oPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAddit'
	DB	'iveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP'
	DB	'@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherMode'
	DB	'FinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST'
	DB	'256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@Crypt'
	DB	'oPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAddit'
	DB	'iveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP'
	DB	'@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	010H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256'
	DB	'@CryptoPP@@@CryptoPP@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
	DD	00H
	DD	040H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	012H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
	DD	FLAT:??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	013H
	DD	FLAT:??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCiphe'
	DB	'rFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePoli'
	DB	'cyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$Abstra'
	DB	'ctPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_M'
	DB	'odePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@'
	DB	'@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	028H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	018H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	011H
	DD	FLAT:??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@Crypt'
	DB	'oPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAddit'
	DB	'iveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP'
	DB	'@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherMode'
	DB	'FinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA'
	DB	'@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP'
	DB	'@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditive'
	DB	'CipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@'
	DB	'2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	010H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@Cr'
	DB	'yptoPP@@@CryptoPP@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
	DD	00H
	DD	040H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	012H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
	DD	FLAT:??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	013H
	DD	FLAT:??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCiphe'
	DB	'rFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyH'
	DB	'older@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractP'
	DB	'olicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_Mode'
	DB	'Policy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@Cr'
	DB	'yptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	028H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	018H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	011H
	DD	FLAT:??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@Crypt'
	DB	'oPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAddit'
	DB	'iveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP'
	DB	'@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherMode'
	DB	'FinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_'
	DB	'EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@Cryp'
	DB	'toPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAddi'
	DB	'tiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoP'
	DB	'P@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	010H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE'
	DB	'2@CryptoPP@@@CryptoPP@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
	DD	00H
	DD	040H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	012H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
	DD	FLAT:??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	013H
	DD	FLAT:??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCiphe'
	DB	'rFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePol'
	DB	'icyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$Abstr'
	DB	'actPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_'
	DB	'ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2'
	DB	'@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	028H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	018H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	011H
	DD	FLAT:??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@Crypt'
	DB	'oPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAddit'
	DB	'iveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP'
	DB	'@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherMode'
	DB	'FinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Came'
	DB	'llia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@Cryp'
	DB	'toPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAddi'
	DB	'tiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoP'
	DB	'P@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	010H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camelli'
	DB	'a@CryptoPP@@@CryptoPP@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
	DD	00H
	DD	040H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	012H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
	DD	FLAT:??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	013H
	DD	FLAT:??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCiphe'
	DB	'rFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePol'
	DB	'icyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$Abstr'
	DB	'actPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_'
	DB	'ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2'
	DB	'@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	028H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	018H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	011H
	DD	FLAT:??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@Crypt'
	DB	'oPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAddit'
	DB	'iveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP'
	DB	'@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherMode'
	DB	'FinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED'
	DB	'@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP'
	DB	'@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditive'
	DB	'CipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@'
	DB	'2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	010H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@Cr'
	DB	'yptoPP@@@CryptoPP@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
	DD	00H
	DD	040H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	012H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
	DD	FLAT:??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	013H
	DD	FLAT:??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCiphe'
	DB	'rFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyH'
	DB	'older@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractP'
	DB	'olicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_Mode'
	DB	'Policy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@Cr'
	DB	'yptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	028H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	018H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	011H
	DD	FLAT:??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@Crypt'
	DB	'oPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAddit'
	DB	'iveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP'
	DB	'@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherMode'
	DB	'FinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@C'
	DB	'ryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@'
	DB	'V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCi'
	DB	'pherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@'
	DB	'UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	010H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@Cryp'
	DB	'toPP@@@CryptoPP@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
	DD	00H
	DD	040H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	012H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
	DD	FLAT:??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	013H
	DD	FLAT:??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCiphe'
	DB	'rFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHol'
	DB	'der@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPol'
	DB	'icyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePo'
	DB	'licy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@Cryp'
	DB	'toPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	028H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	018H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	011H
	DD	FLAT:??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@Crypt'
	DB	'oPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAddit'
	DB	'iveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP'
	DB	'@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherMode'
	DB	'FinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blow'
	DB	'fish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@Cryp'
	DB	'toPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAddi'
	DB	'tiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoP'
	DB	'P@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	010H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfis'
	DB	'h@CryptoPP@@@CryptoPP@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
	DD	00H
	DD	040H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	012H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
	DD	FLAT:??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	013H
	DD	FLAT:??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCiphe'
	DB	'rFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePol'
	DB	'icyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$Abstr'
	DB	'actPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_'
	DB	'ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2'
	DB	'@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	028H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	018H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	011H
	DD	FLAT:??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@Crypt'
	DB	'oPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAddit'
	DB	'iveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP'
	DB	'@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherMode'
	DB	'FinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@C'
	DB	'ryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@'
	DB	'V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCi'
	DB	'pherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@'
	DB	'UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	010H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@Cryp'
	DB	'toPP@@@CryptoPP@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
	DD	00H
	DD	040H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	012H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
	DD	FLAT:??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	013H
	DD	FLAT:??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCiphe'
	DB	'rFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHol'
	DB	'der@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPol'
	DB	'icyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePo'
	DB	'licy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@Cryp'
	DB	'toPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	028H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	018H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	011H
	DD	FLAT:??_R2?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@Crypt'
	DB	'oPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAddit'
	DB	'iveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP'
	DB	'@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherMode'
	DB	'FinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACA'
	DB	'L2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@Crypto'
	DB	'PP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditi'
	DB	'veCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@'
	DB	'@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	010H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@'
	DB	'CryptoPP@@@CryptoPP@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc> >::`RTTI Base Class Descriptor at (64,-1,0,77)'
	DD	00H
	DD	040H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	012H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Base Class Array'
	DD	FLAT:??_R1EA@?0A@EN@?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8 DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	013H
	DD	FLAT:??_R2?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCiphe'
	DB	'rFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolic'
	DB	'yHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$Abstrac'
	DB	'tPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_Mo'
	DB	'dePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@'
	DB	'CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@8 DD FLAT:??_R0?AU?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::SHACAL2>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@8
rdata$r	SEGMENT
??_R2?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::SHACAL2>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipherAlgorithm@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@8
rdata$r	SEGMENT
??_R3?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@8 DD 00H	; BlockCipherDetail<CryptoPP::SHACAL2>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@@8
data$rs	SEGMENT
??_R0?AU?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@@8 DD FLAT:??_7type_info@@6B@ ; BlockCipherDetail<CryptoPP::SHACAL2> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@6B@
rdata$r	SEGMENT
??_R4?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@6B@ DD 00H ; BlockCipherDetail<CryptoPP::SHACAL2>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@@8
	DD	FLAT:??_R3?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherDetail@VTEA@CryptoPP@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherDetail@VTEA@CryptoPP@@@@8 DD FLAT:??_R0?AU?$BlockCipherDetail@VTEA@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::TEA>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherDetail@VTEA@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherDetail@VTEA@CryptoPP@@@@8
rdata$r	SEGMENT
??_R2?$BlockCipherDetail@VTEA@CryptoPP@@@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherDetail@VTEA@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::TEA>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipherAlgorithm@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherDetail@VTEA@CryptoPP@@@@8
rdata$r	SEGMENT
??_R3?$BlockCipherDetail@VTEA@CryptoPP@@@@8 DD 00H	; BlockCipherDetail<CryptoPP::TEA>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$BlockCipherDetail@VTEA@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$BlockCipherDetail@VTEA@CryptoPP@@@@@8
data$rs	SEGMENT
??_R0?AU?$BlockCipherDetail@VTEA@CryptoPP@@@@@8 DD FLAT:??_7type_info@@6B@ ; BlockCipherDetail<CryptoPP::TEA> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$BlockCipherDetail@VTEA@CryptoPP@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherDetail@VTEA@CryptoPP@@@@6B@
rdata$r	SEGMENT
??_R4?$BlockCipherDetail@VTEA@CryptoPP@@@@6B@ DD 00H	; BlockCipherDetail<CryptoPP::TEA>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$BlockCipherDetail@VTEA@CryptoPP@@@@@8
	DD	FLAT:??_R3?$BlockCipherDetail@VTEA@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@8 DD FLAT:??_R0?AU?$BlockCipherDetail@VBlowfish@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::Blowfish>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherDetail@VBlowfish@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherDetail@VBlowfish@CryptoPP@@@@8
rdata$r	SEGMENT
??_R2?$BlockCipherDetail@VBlowfish@CryptoPP@@@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::Blowfish>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipherAlgorithm@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherDetail@VBlowfish@CryptoPP@@@@8
rdata$r	SEGMENT
??_R3?$BlockCipherDetail@VBlowfish@CryptoPP@@@@8 DD 00H	; BlockCipherDetail<CryptoPP::Blowfish>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$BlockCipherDetail@VBlowfish@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$BlockCipherDetail@VBlowfish@CryptoPP@@@@@8
data$rs	SEGMENT
??_R0?AU?$BlockCipherDetail@VBlowfish@CryptoPP@@@@@8 DD FLAT:??_7type_info@@6B@ ; BlockCipherDetail<CryptoPP::Blowfish> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$BlockCipherDetail@VBlowfish@CryptoPP@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherDetail@VBlowfish@CryptoPP@@@@6B@
rdata$r	SEGMENT
??_R4?$BlockCipherDetail@VBlowfish@CryptoPP@@@@6B@ DD 00H ; BlockCipherDetail<CryptoPP::Blowfish>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$BlockCipherDetail@VBlowfish@CryptoPP@@@@@8
	DD	FLAT:??_R3?$BlockCipherDetail@VBlowfish@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherDetail@VRC5@CryptoPP@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherDetail@VRC5@CryptoPP@@@@8 DD FLAT:??_R0?AU?$BlockCipherDetail@VRC5@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::RC5>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherDetail@VRC5@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherDetail@VRC5@CryptoPP@@@@8
rdata$r	SEGMENT
??_R2?$BlockCipherDetail@VRC5@CryptoPP@@@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherDetail@VRC5@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::RC5>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipherAlgorithm@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherDetail@VRC5@CryptoPP@@@@8
rdata$r	SEGMENT
??_R3?$BlockCipherDetail@VRC5@CryptoPP@@@@8 DD 00H	; BlockCipherDetail<CryptoPP::RC5>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$BlockCipherDetail@VRC5@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$BlockCipherDetail@VRC5@CryptoPP@@@@@8
data$rs	SEGMENT
??_R0?AU?$BlockCipherDetail@VRC5@CryptoPP@@@@@8 DD FLAT:??_7type_info@@6B@ ; BlockCipherDetail<CryptoPP::RC5> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$BlockCipherDetail@VRC5@CryptoPP@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherDetail@VRC5@CryptoPP@@@@6B@
rdata$r	SEGMENT
??_R4?$BlockCipherDetail@VRC5@CryptoPP@@@@6B@ DD 00H	; BlockCipherDetail<CryptoPP::RC5>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$BlockCipherDetail@VRC5@CryptoPP@@@@@8
	DD	FLAT:??_R3?$BlockCipherDetail@VRC5@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherDetail@VSEED@CryptoPP@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherDetail@VSEED@CryptoPP@@@@8 DD FLAT:??_R0?AU?$BlockCipherDetail@VSEED@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::SEED>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherDetail@VSEED@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherDetail@VSEED@CryptoPP@@@@8
rdata$r	SEGMENT
??_R2?$BlockCipherDetail@VSEED@CryptoPP@@@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherDetail@VSEED@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::SEED>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipherAlgorithm@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherDetail@VSEED@CryptoPP@@@@8
rdata$r	SEGMENT
??_R3?$BlockCipherDetail@VSEED@CryptoPP@@@@8 DD 00H	; BlockCipherDetail<CryptoPP::SEED>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$BlockCipherDetail@VSEED@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$BlockCipherDetail@VSEED@CryptoPP@@@@@8
data$rs	SEGMENT
??_R0?AU?$BlockCipherDetail@VSEED@CryptoPP@@@@@8 DD FLAT:??_7type_info@@6B@ ; BlockCipherDetail<CryptoPP::SEED> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$BlockCipherDetail@VSEED@CryptoPP@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherDetail@VSEED@CryptoPP@@@@6B@
rdata$r	SEGMENT
??_R4?$BlockCipherDetail@VSEED@CryptoPP@@@@6B@ DD 00H	; BlockCipherDetail<CryptoPP::SEED>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$BlockCipherDetail@VSEED@CryptoPP@@@@@8
	DD	FLAT:??_R3?$BlockCipherDetail@VSEED@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherDetail@VCamellia@CryptoPP@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherDetail@VCamellia@CryptoPP@@@@8 DD FLAT:??_R0?AU?$BlockCipherDetail@VCamellia@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::Camellia>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherDetail@VCamellia@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherDetail@VCamellia@CryptoPP@@@@8
rdata$r	SEGMENT
??_R2?$BlockCipherDetail@VCamellia@CryptoPP@@@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherDetail@VCamellia@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::Camellia>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipherAlgorithm@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherDetail@VCamellia@CryptoPP@@@@8
rdata$r	SEGMENT
??_R3?$BlockCipherDetail@VCamellia@CryptoPP@@@@8 DD 00H	; BlockCipherDetail<CryptoPP::Camellia>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$BlockCipherDetail@VCamellia@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$BlockCipherDetail@VCamellia@CryptoPP@@@@@8
data$rs	SEGMENT
??_R0?AU?$BlockCipherDetail@VCamellia@CryptoPP@@@@@8 DD FLAT:??_7type_info@@6B@ ; BlockCipherDetail<CryptoPP::Camellia> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$BlockCipherDetail@VCamellia@CryptoPP@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherDetail@VCamellia@CryptoPP@@@@6B@
rdata$r	SEGMENT
??_R4?$BlockCipherDetail@VCamellia@CryptoPP@@@@6B@ DD 00H ; BlockCipherDetail<CryptoPP::Camellia>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$BlockCipherDetail@VCamellia@CryptoPP@@@@@8
	DD	FLAT:??_R3?$BlockCipherDetail@VCamellia@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@8 DD FLAT:??_R0?AU?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::DES_EDE2>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@8
rdata$r	SEGMENT
??_R2?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::DES_EDE2>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipherAlgorithm@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@8
rdata$r	SEGMENT
??_R3?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@8 DD 00H	; BlockCipherDetail<CryptoPP::DES_EDE2>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@@8
data$rs	SEGMENT
??_R0?AU?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@@8 DD FLAT:??_7type_info@@6B@ ; BlockCipherDetail<CryptoPP::DES_EDE2> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@6B@
rdata$r	SEGMENT
??_R4?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@6B@ DD 00H ; BlockCipherDetail<CryptoPP::DES_EDE2>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@@8
	DD	FLAT:??_R3?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherDetail@VIDEA@CryptoPP@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherDetail@VIDEA@CryptoPP@@@@8 DD FLAT:??_R0?AU?$BlockCipherDetail@VIDEA@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::IDEA>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherDetail@VIDEA@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherDetail@VIDEA@CryptoPP@@@@8
rdata$r	SEGMENT
??_R2?$BlockCipherDetail@VIDEA@CryptoPP@@@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherDetail@VIDEA@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::IDEA>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipherAlgorithm@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherDetail@VIDEA@CryptoPP@@@@8
rdata$r	SEGMENT
??_R3?$BlockCipherDetail@VIDEA@CryptoPP@@@@8 DD 00H	; BlockCipherDetail<CryptoPP::IDEA>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$BlockCipherDetail@VIDEA@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$BlockCipherDetail@VIDEA@CryptoPP@@@@@8
data$rs	SEGMENT
??_R0?AU?$BlockCipherDetail@VIDEA@CryptoPP@@@@@8 DD FLAT:??_7type_info@@6B@ ; BlockCipherDetail<CryptoPP::IDEA> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$BlockCipherDetail@VIDEA@CryptoPP@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherDetail@VIDEA@CryptoPP@@@@6B@
rdata$r	SEGMENT
??_R4?$BlockCipherDetail@VIDEA@CryptoPP@@@@6B@ DD 00H	; BlockCipherDetail<CryptoPP::IDEA>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$BlockCipherDetail@VIDEA@CryptoPP@@@@@8
	DD	FLAT:??_R3?$BlockCipherDetail@VIDEA@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherDetail@VCAST256@CryptoPP@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherDetail@VCAST256@CryptoPP@@@@8 DD FLAT:??_R0?AU?$BlockCipherDetail@VCAST256@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::CAST256>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherDetail@VCAST256@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherDetail@VCAST256@CryptoPP@@@@8
rdata$r	SEGMENT
??_R2?$BlockCipherDetail@VCAST256@CryptoPP@@@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherDetail@VCAST256@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::CAST256>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipherAlgorithm@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherDetail@VCAST256@CryptoPP@@@@8
rdata$r	SEGMENT
??_R3?$BlockCipherDetail@VCAST256@CryptoPP@@@@8 DD 00H	; BlockCipherDetail<CryptoPP::CAST256>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$BlockCipherDetail@VCAST256@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$BlockCipherDetail@VCAST256@CryptoPP@@@@@8
data$rs	SEGMENT
??_R0?AU?$BlockCipherDetail@VCAST256@CryptoPP@@@@@8 DD FLAT:??_7type_info@@6B@ ; BlockCipherDetail<CryptoPP::CAST256> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$BlockCipherDetail@VCAST256@CryptoPP@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherDetail@VCAST256@CryptoPP@@@@6B@
rdata$r	SEGMENT
??_R4?$BlockCipherDetail@VCAST256@CryptoPP@@@@6B@ DD 00H ; BlockCipherDetail<CryptoPP::CAST256>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$BlockCipherDetail@VCAST256@CryptoPP@@@@@8
	DD	FLAT:??_R3?$BlockCipherDetail@VCAST256@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherDetail@VSerpent@CryptoPP@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherDetail@VSerpent@CryptoPP@@@@8 DD FLAT:??_R0?AU?$BlockCipherDetail@VSerpent@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::Serpent>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherDetail@VSerpent@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherDetail@VSerpent@CryptoPP@@@@8
rdata$r	SEGMENT
??_R2?$BlockCipherDetail@VSerpent@CryptoPP@@@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherDetail@VSerpent@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::Serpent>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipherAlgorithm@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherDetail@VSerpent@CryptoPP@@@@8
rdata$r	SEGMENT
??_R3?$BlockCipherDetail@VSerpent@CryptoPP@@@@8 DD 00H	; BlockCipherDetail<CryptoPP::Serpent>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$BlockCipherDetail@VSerpent@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$BlockCipherDetail@VSerpent@CryptoPP@@@@@8
data$rs	SEGMENT
??_R0?AU?$BlockCipherDetail@VSerpent@CryptoPP@@@@@8 DD FLAT:??_7type_info@@6B@ ; BlockCipherDetail<CryptoPP::Serpent> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$BlockCipherDetail@VSerpent@CryptoPP@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherDetail@VSerpent@CryptoPP@@@@6B@
rdata$r	SEGMENT
??_R4?$BlockCipherDetail@VSerpent@CryptoPP@@@@6B@ DD 00H ; BlockCipherDetail<CryptoPP::Serpent>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$BlockCipherDetail@VSerpent@CryptoPP@@@@@8
	DD	FLAT:??_R3?$BlockCipherDetail@VSerpent@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherDetail@VTwofish@CryptoPP@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherDetail@VTwofish@CryptoPP@@@@8 DD FLAT:??_R0?AU?$BlockCipherDetail@VTwofish@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::Twofish>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherDetail@VTwofish@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherDetail@VTwofish@CryptoPP@@@@8
rdata$r	SEGMENT
??_R2?$BlockCipherDetail@VTwofish@CryptoPP@@@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherDetail@VTwofish@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::Twofish>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipherAlgorithm@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherDetail@VTwofish@CryptoPP@@@@8
rdata$r	SEGMENT
??_R3?$BlockCipherDetail@VTwofish@CryptoPP@@@@8 DD 00H	; BlockCipherDetail<CryptoPP::Twofish>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$BlockCipherDetail@VTwofish@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$BlockCipherDetail@VTwofish@CryptoPP@@@@@8
data$rs	SEGMENT
??_R0?AU?$BlockCipherDetail@VTwofish@CryptoPP@@@@@8 DD FLAT:??_7type_info@@6B@ ; BlockCipherDetail<CryptoPP::Twofish> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$BlockCipherDetail@VTwofish@CryptoPP@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherDetail@VTwofish@CryptoPP@@@@6B@
rdata$r	SEGMENT
??_R4?$BlockCipherDetail@VTwofish@CryptoPP@@@@6B@ DD 00H ; BlockCipherDetail<CryptoPP::Twofish>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$BlockCipherDetail@VTwofish@CryptoPP@@@@@8
	DD	FLAT:??_R3?$BlockCipherDetail@VTwofish@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherDetail@VMARS@CryptoPP@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherDetail@VMARS@CryptoPP@@@@8 DD FLAT:??_R0?AU?$BlockCipherDetail@VMARS@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::MARS>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherDetail@VMARS@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherDetail@VMARS@CryptoPP@@@@8
rdata$r	SEGMENT
??_R2?$BlockCipherDetail@VMARS@CryptoPP@@@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherDetail@VMARS@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::MARS>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipherAlgorithm@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherDetail@VMARS@CryptoPP@@@@8
rdata$r	SEGMENT
??_R3?$BlockCipherDetail@VMARS@CryptoPP@@@@8 DD 00H	; BlockCipherDetail<CryptoPP::MARS>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$BlockCipherDetail@VMARS@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$BlockCipherDetail@VMARS@CryptoPP@@@@@8
data$rs	SEGMENT
??_R0?AU?$BlockCipherDetail@VMARS@CryptoPP@@@@@8 DD FLAT:??_7type_info@@6B@ ; BlockCipherDetail<CryptoPP::MARS> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$BlockCipherDetail@VMARS@CryptoPP@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherDetail@VMARS@CryptoPP@@@@6B@
rdata$r	SEGMENT
??_R4?$BlockCipherDetail@VMARS@CryptoPP@@@@6B@ DD 00H	; BlockCipherDetail<CryptoPP::MARS>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$BlockCipherDetail@VMARS@CryptoPP@@@@@8
	DD	FLAT:??_R3?$BlockCipherDetail@VMARS@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherDetail@VRC6@CryptoPP@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherDetail@VRC6@CryptoPP@@@@8 DD FLAT:??_R0?AU?$BlockCipherDetail@VRC6@CryptoPP@@@@@8 ; BlockCipherDetail<CryptoPP::RC6>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherDetail@VRC6@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherDetail@VRC6@CryptoPP@@@@8
rdata$r	SEGMENT
??_R2?$BlockCipherDetail@VRC6@CryptoPP@@@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherDetail@VRC6@CryptoPP@@@@8 ; BlockCipherDetail<CryptoPP::RC6>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipherAlgorithm@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherDetail@VRC6@CryptoPP@@@@8
rdata$r	SEGMENT
??_R3?$BlockCipherDetail@VRC6@CryptoPP@@@@8 DD 00H	; BlockCipherDetail<CryptoPP::RC6>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$BlockCipherDetail@VRC6@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AU?$BlockCipherDetail@VRC6@CryptoPP@@@@@8
data$rs	SEGMENT
??_R0?AU?$BlockCipherDetail@VRC6@CryptoPP@@@@@8 DD FLAT:??_7type_info@@6B@ ; BlockCipherDetail<CryptoPP::RC6> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AU?$BlockCipherDetail@VRC6@CryptoPP@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherDetail@VRC6@CryptoPP@@@@6B@
rdata$r	SEGMENT
??_R4?$BlockCipherDetail@VRC6@CryptoPP@@@@6B@ DD 00H	; BlockCipherDetail<CryptoPP::RC6>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AU?$BlockCipherDetail@VRC6@CryptoPP@@@@@8
	DD	FLAT:??_R3?$BlockCipherDetail@VRC6@CryptoPP@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DH2KeyAgreement@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DH2KeyAgreement@@8 DD FLAT:??_R0?AVDH2KeyAgreement@@@8 ; DH2KeyAgreement::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DH2KeyAgreement@@8
rdata$r	ENDS
;	COMDAT ??_R2DH2KeyAgreement@@8
rdata$r	SEGMENT
??_R2DH2KeyAgreement@@8 DD FLAT:??_R1A@?0A@EA@DH2KeyAgreement@@8 ; DH2KeyAgreement::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@KeyAgreement@@8
rdata$r	ENDS
;	COMDAT ??_R3DH2KeyAgreement@@8
rdata$r	SEGMENT
??_R3DH2KeyAgreement@@8 DD 00H				; DH2KeyAgreement::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2DH2KeyAgreement@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDH2KeyAgreement@@@8
data$rs	SEGMENT
??_R0?AVDH2KeyAgreement@@@8 DD FLAT:??_7type_info@@6B@	; DH2KeyAgreement `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDH2KeyAgreement@@', 00H
data$rs	ENDS
;	COMDAT ??_R4DH2KeyAgreement@@6B@
rdata$r	SEGMENT
??_R4DH2KeyAgreement@@6B@ DD 00H			; DH2KeyAgreement::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDH2KeyAgreement@@@8
	DD	FLAT:??_R3DH2KeyAgreement@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BlockCipherAlgorithm@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BlockCipherAlgorithm@@8 DD FLAT:??_R0?AUBlockCipherAlgorithm@@@8 ; BlockCipherAlgorithm::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3BlockCipherAlgorithm@@8
rdata$r	ENDS
;	COMDAT ??_R2BlockCipherAlgorithm@@8
rdata$r	SEGMENT
??_R2BlockCipherAlgorithm@@8 DD FLAT:??_R1A@?0A@EA@BlockCipherAlgorithm@@8 ; BlockCipherAlgorithm::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3BlockCipherAlgorithm@@8
rdata$r	SEGMENT
??_R3BlockCipherAlgorithm@@8 DD 00H			; BlockCipherAlgorithm::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2BlockCipherAlgorithm@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUBlockCipherAlgorithm@@@8
data$rs	SEGMENT
??_R0?AUBlockCipherAlgorithm@@@8 DD FLAT:??_7type_info@@6B@ ; BlockCipherAlgorithm `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUBlockCipherAlgorithm@@', 00H
data$rs	ENDS
;	COMDAT ??_R4BlockCipherAlgorithm@@6B@
rdata$r	SEGMENT
??_R4BlockCipherAlgorithm@@6B@ DD 00H			; BlockCipherAlgorithm::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUBlockCipherAlgorithm@@@8
	DD	FLAT:??_R3BlockCipherAlgorithm@@8
rdata$r	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::TEA::Enc>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Enc@TEA@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@TEA@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@TEA_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@8 DD 00H ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::TEA::Enc>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	010H
	DD	FLAT:??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::TEA::Enc> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@Cryp'
	DB	'toPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::TEA::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0fH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	010H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Enc@TEA@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@TEA@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@TEA_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	011H
	DD	FLAT:??_R2?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@'
	DB	'@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Enc@TEA@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Enc@TEA@CryptoPP@@8 DD FLAT:??_R0?AVEnc@TEA@CryptoPP@@@8 ; CryptoPP::TEA::Enc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0eH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Enc@TEA@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Enc@TEA@CryptoPP@@8
rdata$r	SEGMENT
??_R2Enc@TEA@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Enc@TEA@CryptoPP@@8 ; CryptoPP::TEA::Enc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Base@TEA@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@TEA_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Enc@TEA@CryptoPP@@8
rdata$r	SEGMENT
??_R3Enc@TEA@CryptoPP@@8 DD 00H				; CryptoPP::TEA::Enc::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0fH
	DD	FLAT:??_R2Enc@TEA@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVEnc@TEA@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVEnc@TEA@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@	; CryptoPP::TEA::Enc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVEnc@TEA@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1O@?0A@EA@?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	SEGMENT
??_R1O@?0A@EA@?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@@8 ; CryptoPP::VariableRounds<32,1,2147483647>::`RTTI Base Class Descriptor at (14,-1,0,64)'
	DD	00H
	DD	0eH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@@8 ; CryptoPP::VariableRounds<32,1,2147483647>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8 ; CryptoPP::VariableRounds<32,1,2147483647>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8 DD 00H ; CryptoPP::VariableRounds<32,1,2147483647>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::VariableRounds<32,1,2147483647> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R11?0A@EA@?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	SEGMENT
??_R11?0A@EA@?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@@8 ; CryptoPP::VariableRounds<32,1,2147483647>::`RTTI Base Class Descriptor at (2,-1,0,64)'
	DD	00H
	DD	02H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@TEA_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TEA_Info@CryptoPP@@8 DD FLAT:??_R0?AUTEA_Info@CryptoPP@@@8 ; CryptoPP::TEA_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TEA_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2TEA_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R2TEA_Info@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@TEA_Info@CryptoPP@@8 ; CryptoPP::TEA_Info::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R10?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R11?0A@EA@?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3TEA_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R3TEA_Info@CryptoPP@@8 DD 00H			; CryptoPP::TEA_Info::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2TEA_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUTEA_Info@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AUTEA_Info@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::TEA_Info `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUTEA_Info@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@TEA_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@TEA_Info@CryptoPP@@8 DD FLAT:??_R0?AUTEA_Info@CryptoPP@@@8 ; CryptoPP::TEA_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	03H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TEA_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@TEA_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@8 DD 00H ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	FLAT:??_R2?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@Crypt'
	DB	'oPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@TEA_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0bH
	DD	FLAT:??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher'
	DB	'@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@TEA_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0cH
	DD	FLAT:??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoB'
	DB	'ases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@Crypt'
	DB	'oPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::TEA_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@TEA_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherImpl<CryptoPP::TEA_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0dH
	DD	FLAT:??_R2?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherImpl<CryptoPP::TEA_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2'
	DB	'@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::TEA_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0cH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Base@TEA@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Base@TEA@CryptoPP@@8 DD FLAT:??_R0?AVBase@TEA@CryptoPP@@@8 ; CryptoPP::TEA::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0dH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Base@TEA@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Base@TEA@CryptoPP@@8
rdata$r	SEGMENT
??_R2Base@TEA@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Base@TEA@CryptoPP@@8 ; CryptoPP::TEA::Base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@TEA_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0CA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Base@TEA@CryptoPP@@8
rdata$r	SEGMENT
??_R3Base@TEA@CryptoPP@@8 DD 00H			; CryptoPP::TEA::Base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0eH
	DD	FLAT:??_R2Base@TEA@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBase@TEA@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVBase@TEA@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::TEA::Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBase@TEA@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::SHACAL2::Enc>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Enc@SHACAL2@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@SHACAL2@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@SHACAL2_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0CA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@8 DD 00H ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::SHACAL2::Enc>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0fH
	DD	FLAT:??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::SHACAL2::Enc> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@'
	DB	'CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::SHACAL2::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0eH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0fH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Enc@SHACAL2@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@SHACAL2@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@SHACAL2_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0CA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	010H
	DD	FLAT:??_R2?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@Crypt'
	DB	'oPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Enc@SHACAL2@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Enc@SHACAL2@CryptoPP@@8 DD FLAT:??_R0?AVEnc@SHACAL2@CryptoPP@@@8 ; CryptoPP::SHACAL2::Enc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0dH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Enc@SHACAL2@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Enc@SHACAL2@CryptoPP@@8
rdata$r	SEGMENT
??_R2Enc@SHACAL2@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Enc@SHACAL2@CryptoPP@@8 ; CryptoPP::SHACAL2::Enc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Base@SHACAL2@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@SHACAL2_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0CA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Enc@SHACAL2@CryptoPP@@8
rdata$r	SEGMENT
??_R3Enc@SHACAL2@CryptoPP@@8 DD 00H			; CryptoPP::SHACAL2::Enc::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0eH
	DD	FLAT:??_R2Enc@SHACAL2@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVEnc@SHACAL2@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVEnc@SHACAL2@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SHACAL2::Enc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVEnc@SHACAL2@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,16,64,1,4,0>::`RTTI Base Class Descriptor at (13,-1,0,64)'
	DD	00H
	DD	0dH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1M@?0A@EA@?$FixedBlockSize@$0CA@@CryptoPP@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$FixedBlockSize@$0CA@@CryptoPP@@8 DD FLAT:??_R0?AV?$FixedBlockSize@$0CA@@CryptoPP@@@8 ; CryptoPP::FixedBlockSize<32>::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$FixedBlockSize@$0CA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,16,64,1,4,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,64,1,4,0>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8 DD 00H ; CryptoPP::VariableKeyLength<16,16,64,1,4,0>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::VariableKeyLength<16,16,64,1,4,0> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@Crypto'
	DB	'PP@@', 00H
data$rs	ENDS
;	COMDAT ??_R10?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R10?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,16,64,1,4,0>::`RTTI Base Class Descriptor at (1,-1,0,64)'
	DD	00H
	DD	01H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$FixedBlockSize@$0CA@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$FixedBlockSize@$0CA@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$FixedBlockSize@$0CA@@CryptoPP@@8 ; CryptoPP::FixedBlockSize<32>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$FixedBlockSize@$0CA@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$FixedBlockSize@$0CA@@CryptoPP@@8 DD 00H		; CryptoPP::FixedBlockSize<32>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$FixedBlockSize@$0CA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$FixedBlockSize@$0CA@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$FixedBlockSize@$0CA@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::FixedBlockSize<32> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$FixedBlockSize@$0CA@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$FixedBlockSize@$0CA@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$FixedBlockSize@$0CA@@CryptoPP@@8 DD FLAT:??_R0?AV?$FixedBlockSize@$0CA@@CryptoPP@@@8 ; CryptoPP::FixedBlockSize<32>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$FixedBlockSize@$0CA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SHACAL2_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SHACAL2_Info@CryptoPP@@8 DD FLAT:??_R0?AUSHACAL2_Info@CryptoPP@@@8 ; CryptoPP::SHACAL2_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SHACAL2_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2SHACAL2_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R2SHACAL2_Info@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@SHACAL2_Info@CryptoPP@@8 ; CryptoPP::SHACAL2_Info::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$FixedBlockSize@$0CA@@CryptoPP@@8
	DD	FLAT:??_R10?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3SHACAL2_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R3SHACAL2_Info@CryptoPP@@8 DD 00H			; CryptoPP::SHACAL2_Info::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2SHACAL2_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSHACAL2_Info@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AUSHACAL2_Info@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SHACAL2_Info `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSHACAL2_Info@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@SHACAL2_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@SHACAL2_Info@CryptoPP@@8 DD FLAT:??_R0?AUSHACAL2_Info@CryptoPP@@@8 ; CryptoPP::SHACAL2_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	02H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SHACAL2_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@SHACAL2_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0CA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@8 DD 00H ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	09H
	DD	FLAT:??_R2?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@C'
	DB	'ryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@SHACAL2_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0CA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	FLAT:??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher'
	DB	'@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@SHACAL2_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0CA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0bH
	DD	FLAT:??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoB'
	DB	'ases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@C'
	DB	'ryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::SHACAL2_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@SHACAL2_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0CA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherImpl<CryptoPP::SHACAL2_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0cH
	DD	FLAT:??_R2?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherImpl<CryptoPP::SHACAL2_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCiph'
	DB	'er@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::SHACAL2_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Base@SHACAL2@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Base@SHACAL2@CryptoPP@@8 DD FLAT:??_R0?AVBase@SHACAL2@CryptoPP@@@8 ; CryptoPP::SHACAL2::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0cH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Base@SHACAL2@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Base@SHACAL2@CryptoPP@@8
rdata$r	SEGMENT
??_R2Base@SHACAL2@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Base@SHACAL2@CryptoPP@@8 ; CryptoPP::SHACAL2::Base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@SHACAL2_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0CA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0EA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Base@SHACAL2@CryptoPP@@8
rdata$r	SEGMENT
??_R3Base@SHACAL2@CryptoPP@@8 DD 00H			; CryptoPP::SHACAL2::Base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0dH
	DD	FLAT:??_R2Base@SHACAL2@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBase@SHACAL2@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVBase@SHACAL2@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SHACAL2::Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBase@SHACAL2@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::SEED::Base>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Base@SEED@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@SEED_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@8 DD 00H ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::SEED::Base>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0fH
	DD	FLAT:??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::SEED::Base> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@Cr'
	DB	'yptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::SEED::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0eH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0fH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@SEED@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@SEED_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	010H
	DD	FLAT:??_R2?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoP'
	DB	'P@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SEED_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SEED_Info@CryptoPP@@8 DD FLAT:??_R0?AUSEED_Info@CryptoPP@@@8 ; CryptoPP::SEED_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SEED_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2SEED_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R2SEED_Info@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@SEED_Info@CryptoPP@@8 ; CryptoPP::SEED_Info::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R10?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R11?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3SEED_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R3SEED_Info@CryptoPP@@8 DD 00H			; CryptoPP::SEED_Info::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2SEED_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSEED_Info@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AUSEED_Info@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SEED_Info `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSEED_Info@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@SEED_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@SEED_Info@CryptoPP@@8 DD FLAT:??_R0?AUSEED_Info@CryptoPP@@@8 ; CryptoPP::SEED_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	03H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SEED_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@SEED_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@8 DD 00H ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	FLAT:??_R2?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@Cryp'
	DB	'toPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@SEED_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0bH
	DD	FLAT:??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher'
	DB	'@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@SEED_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0cH
	DD	FLAT:??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoB'
	DB	'ases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@Cryp'
	DB	'toPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::SEED_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@SEED_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherImpl<CryptoPP::SEED_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0dH
	DD	FLAT:??_R2?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherImpl<CryptoPP::SEED_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@'
	DB	'2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::SEED_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0cH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Base@SEED@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Base@SEED@CryptoPP@@8 DD FLAT:??_R0?AVBase@SEED@CryptoPP@@@8 ; CryptoPP::SEED::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0dH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Base@SEED@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Base@SEED@CryptoPP@@8
rdata$r	SEGMENT
??_R2Base@SEED@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Base@SEED@CryptoPP@@8 ; CryptoPP::SEED::Base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@SEED_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Base@SEED@CryptoPP@@8
rdata$r	SEGMENT
??_R3Base@SEED@CryptoPP@@8 DD 00H			; CryptoPP::SEED::Base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0eH
	DD	FLAT:??_R2Base@SEED@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBase@SEED@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVBase@SEED@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SEED::Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBase@SEED@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::RC5::Enc>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Enc@RC5@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@RC5@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@RC5_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@8 DD 00H ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::RC5::Enc>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	010H
	DD	FLAT:??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::RC5::Enc> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@Cryp'
	DB	'toPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::RC5::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0fH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	010H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Enc@RC5@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@RC5@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@RC5_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	011H
	DD	FLAT:??_R2?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@'
	DB	'@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Enc@RC5@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Enc@RC5@CryptoPP@@8 DD FLAT:??_R0?AVEnc@RC5@CryptoPP@@@8 ; CryptoPP::RC5::Enc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0eH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Enc@RC5@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Enc@RC5@CryptoPP@@8
rdata$r	SEGMENT
??_R2Enc@RC5@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Enc@RC5@CryptoPP@@8 ; CryptoPP::RC5::Enc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Base@RC5@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@RC5_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Enc@RC5@CryptoPP@@8
rdata$r	SEGMENT
??_R3Enc@RC5@CryptoPP@@8 DD 00H				; CryptoPP::RC5::Enc::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0fH
	DD	FLAT:??_R2Enc@RC5@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVEnc@RC5@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVEnc@RC5@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@	; CryptoPP::RC5::Enc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVEnc@RC5@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1O@?0A@EA@?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	SEGMENT
??_R1O@?0A@EA@?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@@8 ; CryptoPP::VariableRounds<16,1,2147483647>::`RTTI Base Class Descriptor at (14,-1,0,64)'
	DD	00H
	DD	0eH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@@8 ; CryptoPP::VariableRounds<16,1,2147483647>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8 ; CryptoPP::VariableRounds<16,1,2147483647>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8 DD 00H ; CryptoPP::VariableRounds<16,1,2147483647>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::VariableRounds<16,1,2147483647> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R11?0A@EA@?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	SEGMENT
??_R11?0A@EA@?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@@8 ; CryptoPP::VariableRounds<16,1,2147483647>::`RTTI Base Class Descriptor at (2,-1,0,64)'
	DD	00H
	DD	02H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RC5_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RC5_Info@CryptoPP@@8 DD FLAT:??_R0?AURC5_Info@CryptoPP@@@8 ; CryptoPP::RC5_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RC5_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2RC5_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R2RC5_Info@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@RC5_Info@CryptoPP@@8 ; CryptoPP::RC5_Info::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R10?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R11?0A@EA@?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3RC5_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R3RC5_Info@CryptoPP@@8 DD 00H			; CryptoPP::RC5_Info::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2RC5_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AURC5_Info@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AURC5_Info@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::RC5_Info `RTTI Type Descriptor'
	DD	00H
	DB	'.?AURC5_Info@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@RC5_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@RC5_Info@CryptoPP@@8 DD FLAT:??_R0?AURC5_Info@CryptoPP@@@8 ; CryptoPP::RC5_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	03H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RC5_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@RC5_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@8 DD 00H ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	FLAT:??_R2?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@Crypt'
	DB	'oPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@RC5_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0bH
	DD	FLAT:??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher'
	DB	'@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@RC5_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0cH
	DD	FLAT:??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoB'
	DB	'ases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@Crypt'
	DB	'oPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::RC5_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@RC5_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherImpl<CryptoPP::RC5_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0dH
	DD	FLAT:??_R2?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherImpl<CryptoPP::RC5_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2'
	DB	'@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::RC5_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0cH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Base@RC5@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Base@RC5@CryptoPP@@8 DD FLAT:??_R0?AVBase@RC5@CryptoPP@@@8 ; CryptoPP::RC5::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0dH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Base@RC5@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Base@RC5@CryptoPP@@8
rdata$r	SEGMENT
??_R2Base@RC5@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Base@RC5@CryptoPP@@8 ; CryptoPP::RC5::Base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@RC5_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0BA@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Base@RC5@CryptoPP@@8
rdata$r	SEGMENT
??_R3Base@RC5@CryptoPP@@8 DD 00H			; CryptoPP::RC5::Base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0eH
	DD	FLAT:??_R2Base@RC5@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBase@RC5@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVBase@RC5@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::RC5::Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBase@RC5@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::IDEA::Base>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Base@IDEA@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@IDEA_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$07@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@8 DD 00H ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::IDEA::Base>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0fH
	DD	FLAT:??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::IDEA::Base> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@Cr'
	DB	'yptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::IDEA::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0eH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0fH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@IDEA@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@IDEA_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$07@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	010H
	DD	FLAT:??_R2?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoP'
	DB	'P@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1O@?0A@EA@?$FixedRounds@$07@CryptoPP@@8
rdata$r	SEGMENT
??_R1O@?0A@EA@?$FixedRounds@$07@CryptoPP@@8 DD FLAT:??_R0?AV?$FixedRounds@$07@CryptoPP@@@8 ; CryptoPP::FixedRounds<8>::`RTTI Base Class Descriptor at (14,-1,0,64)'
	DD	00H
	DD	0eH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$FixedRounds@$07@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$FixedRounds@$07@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$FixedRounds@$07@CryptoPP@@8 DD FLAT:??_R0?AV?$FixedRounds@$07@CryptoPP@@@8 ; CryptoPP::FixedRounds<8>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$FixedRounds@$07@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$FixedRounds@$07@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$FixedRounds@$07@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$FixedRounds@$07@CryptoPP@@8 ; CryptoPP::FixedRounds<8>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$FixedRounds@$07@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$FixedRounds@$07@CryptoPP@@8 DD 00H		; CryptoPP::FixedRounds<8>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$FixedRounds@$07@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$FixedRounds@$07@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$FixedRounds@$07@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::FixedRounds<8> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$FixedRounds@$07@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R11?0A@EA@?$FixedRounds@$07@CryptoPP@@8
rdata$r	SEGMENT
??_R11?0A@EA@?$FixedRounds@$07@CryptoPP@@8 DD FLAT:??_R0?AV?$FixedRounds@$07@CryptoPP@@@8 ; CryptoPP::FixedRounds<8>::`RTTI Base Class Descriptor at (2,-1,0,64)'
	DD	00H
	DD	02H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$FixedRounds@$07@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IDEA_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IDEA_Info@CryptoPP@@8 DD FLAT:??_R0?AUIDEA_Info@CryptoPP@@@8 ; CryptoPP::IDEA_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDEA_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2IDEA_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R2IDEA_Info@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@IDEA_Info@CryptoPP@@8 ; CryptoPP::IDEA_Info::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R10?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R11?0A@EA@?$FixedRounds@$07@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3IDEA_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R3IDEA_Info@CryptoPP@@8 DD 00H			; CryptoPP::IDEA_Info::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2IDEA_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIDEA_Info@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AUIDEA_Info@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::IDEA_Info `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIDEA_Info@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@IDEA_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@IDEA_Info@CryptoPP@@8 DD FLAT:??_R0?AUIDEA_Info@CryptoPP@@@8 ; CryptoPP::IDEA_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	03H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDEA_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@IDEA_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$07@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@8 DD 00H ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	FLAT:??_R2?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@Cryp'
	DB	'toPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@IDEA_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$07@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0bH
	DD	FLAT:??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher'
	DB	'@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@IDEA_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$07@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0cH
	DD	FLAT:??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoB'
	DB	'ases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@Cryp'
	DB	'toPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::IDEA_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@IDEA_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$07@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherImpl<CryptoPP::IDEA_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0dH
	DD	FLAT:??_R2?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherImpl<CryptoPP::IDEA_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@'
	DB	'2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::IDEA_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0cH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Base@IDEA@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Base@IDEA@CryptoPP@@8 DD FLAT:??_R0?AVBase@IDEA@CryptoPP@@@8 ; CryptoPP::IDEA::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0dH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Base@IDEA@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Base@IDEA@CryptoPP@@8
rdata$r	SEGMENT
??_R2Base@IDEA@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Base@IDEA@CryptoPP@@8 ; CryptoPP::IDEA::Base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@IDEA_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$07@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Base@IDEA@CryptoPP@@8
rdata$r	SEGMENT
??_R3Base@IDEA@CryptoPP@@8 DD 00H			; CryptoPP::IDEA::Base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0eH
	DD	FLAT:??_R2Base@IDEA@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBase@IDEA@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVBase@IDEA@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::IDEA::Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBase@IDEA@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::DES_EDE2::Base>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Base@DES_EDE2@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@DES_EDE2_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@8 DD 00H ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::DES_EDE2::Base>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0eH
	DD	FLAT:??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::DES_EDE2::Base> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE'
	DB	'2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::DES_EDE2::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0dH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0eH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@DES_EDE2@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@DES_EDE2_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0fH
	DD	FLAT:??_R2?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@Cry'
	DB	'ptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@@8 ; CryptoPP::FixedKeyLength<16,4,0>::`RTTI Base Class Descriptor at (13,-1,0,64)'
	DD	00H
	DD	0dH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@@8 ; CryptoPP::FixedKeyLength<16,4,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8 ; CryptoPP::FixedKeyLength<16,4,0>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8 DD 00H	; CryptoPP::FixedKeyLength<16,4,0>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::FixedKeyLength<16,4,0> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R10?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R10?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@@8 ; CryptoPP::FixedKeyLength<16,4,0>::`RTTI Base Class Descriptor at (1,-1,0,64)'
	DD	00H
	DD	01H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DES_EDE2_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DES_EDE2_Info@CryptoPP@@8 DD FLAT:??_R0?AUDES_EDE2_Info@CryptoPP@@@8 ; CryptoPP::DES_EDE2_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DES_EDE2_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2DES_EDE2_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R2DES_EDE2_Info@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@DES_EDE2_Info@CryptoPP@@8 ; CryptoPP::DES_EDE2_Info::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R10?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3DES_EDE2_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R3DES_EDE2_Info@CryptoPP@@8 DD 00H			; CryptoPP::DES_EDE2_Info::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2DES_EDE2_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUDES_EDE2_Info@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AUDES_EDE2_Info@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::DES_EDE2_Info `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUDES_EDE2_Info@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@DES_EDE2_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@DES_EDE2_Info@CryptoPP@@8 DD FLAT:??_R0?AUDES_EDE2_Info@CryptoPP@@@8 ; CryptoPP::DES_EDE2_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	02H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DES_EDE2_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@DES_EDE2_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@8 DD 00H ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	09H
	DD	FLAT:??_R2?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@'
	DB	'CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@DES_EDE2_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	FLAT:??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher'
	DB	'@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@DES_EDE2_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0bH
	DD	FLAT:??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoB'
	DB	'ases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@'
	DB	'CryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::DES_EDE2_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@DES_EDE2_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherImpl<CryptoPP::DES_EDE2_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0cH
	DD	FLAT:??_R2?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherImpl<CryptoPP::DES_EDE2_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCip'
	DB	'her@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::DES_EDE2_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Base@DES_EDE2@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Base@DES_EDE2@CryptoPP@@8 DD FLAT:??_R0?AVBase@DES_EDE2@CryptoPP@@@8 ; CryptoPP::DES_EDE2::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0cH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Base@DES_EDE2@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Base@DES_EDE2@CryptoPP@@8
rdata$r	SEGMENT
??_R2Base@DES_EDE2@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Base@DES_EDE2@CryptoPP@@8 ; CryptoPP::DES_EDE2::Base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@DES_EDE2_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$FixedKeyLength@$0BA@$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Base@DES_EDE2@CryptoPP@@8
rdata$r	SEGMENT
??_R3Base@DES_EDE2@CryptoPP@@8 DD 00H			; CryptoPP::DES_EDE2::Base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0dH
	DD	FLAT:??_R2Base@DES_EDE2@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBase@DES_EDE2@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVBase@DES_EDE2@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::DES_EDE2::Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBase@DES_EDE2@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::Camellia::Base>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Base@Camellia@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Camellia_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@8 DD 00H ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::Camellia::Base>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0eH
	DD	FLAT:??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::Camellia::Base> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camelli'
	DB	'a@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::Camellia::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0dH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0eH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@Camellia@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Camellia_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0fH
	DD	FLAT:??_R2?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@Cry'
	DB	'ptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,16,32,8,4,0>::`RTTI Base Class Descriptor at (13,-1,0,64)'
	DD	00H
	DD	0dH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,16,32,8,4,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,32,8,4,0>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8 DD 00H ; CryptoPP::VariableKeyLength<16,16,32,8,4,0>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::VariableKeyLength<16,16,32,8,4,0> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@Crypto'
	DB	'PP@@', 00H
data$rs	ENDS
;	COMDAT ??_R10?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R10?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,16,32,8,4,0>::`RTTI Base Class Descriptor at (1,-1,0,64)'
	DD	00H
	DD	01H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Camellia_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Camellia_Info@CryptoPP@@8 DD FLAT:??_R0?AUCamellia_Info@CryptoPP@@@8 ; CryptoPP::Camellia_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Camellia_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Camellia_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R2Camellia_Info@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Camellia_Info@CryptoPP@@8 ; CryptoPP::Camellia_Info::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R10?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Camellia_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R3Camellia_Info@CryptoPP@@8 DD 00H			; CryptoPP::Camellia_Info::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2Camellia_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUCamellia_Info@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AUCamellia_Info@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::Camellia_Info `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCamellia_Info@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@Camellia_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@Camellia_Info@CryptoPP@@8 DD FLAT:??_R0?AUCamellia_Info@CryptoPP@@@8 ; CryptoPP::Camellia_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	02H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Camellia_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Camellia_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@8 DD 00H ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	09H
	DD	FLAT:??_R2?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@'
	DB	'CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Camellia_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	FLAT:??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher'
	DB	'@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Camellia_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0bH
	DD	FLAT:??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoB'
	DB	'ases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@'
	DB	'CryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Camellia_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Camellia_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherImpl<CryptoPP::Camellia_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0cH
	DD	FLAT:??_R2?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherImpl<CryptoPP::Camellia_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCip'
	DB	'her@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Camellia_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Base@Camellia@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Base@Camellia@CryptoPP@@8 DD FLAT:??_R0?AVBase@Camellia@CryptoPP@@@8 ; CryptoPP::Camellia::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0cH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Base@Camellia@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Base@Camellia@CryptoPP@@8
rdata$r	SEGMENT
??_R2Base@Camellia@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Base@Camellia@CryptoPP@@8 ; CryptoPP::Camellia::Base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Camellia_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$07$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Base@Camellia@CryptoPP@@8
rdata$r	SEGMENT
??_R3Base@Camellia@CryptoPP@@8 DD 00H			; CryptoPP::Camellia::Base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0dH
	DD	FLAT:??_R2Base@Camellia@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBase@Camellia@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVBase@Camellia@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::Camellia::Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBase@Camellia@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::Blowfish::Base>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Base@Blowfish@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Blowfish_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@8 DD 00H ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::Blowfish::Base>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0fH
	DD	FLAT:??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::Blowfish::Base> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfis'
	DB	'h@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::Blowfish::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0eH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0fH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@Blowfish@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Blowfish_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	010H
	DD	FLAT:??_R2?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@Cry'
	DB	'ptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,1,56,1,4,0>::`RTTI Base Class Descriptor at (13,-1,0,64)'
	DD	00H
	DD	0dH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8 DD FLAT:??_R0?AV?$FixedBlockSize@$07@CryptoPP@@@8 ; CryptoPP::FixedBlockSize<8>::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$FixedBlockSize@$07@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,1,56,1,4,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,1,56,1,4,0>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8 DD 00H ; CryptoPP::VariableKeyLength<16,1,56,1,4,0>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::VariableKeyLength<16,1,56,1,4,0> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP'
	DB	'@@', 00H
data$rs	ENDS
;	COMDAT ??_R10?0A@EA@?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R10?0A@EA@?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,1,56,1,4,0>::`RTTI Base Class Descriptor at (1,-1,0,64)'
	DD	00H
	DD	01H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$FixedBlockSize@$07@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$FixedBlockSize@$07@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8 ; CryptoPP::FixedBlockSize<8>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$FixedBlockSize@$07@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$FixedBlockSize@$07@CryptoPP@@8 DD 00H		; CryptoPP::FixedBlockSize<8>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$FixedBlockSize@$07@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$FixedBlockSize@$07@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$FixedBlockSize@$07@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::FixedBlockSize<8> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$FixedBlockSize@$07@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8 DD FLAT:??_R0?AV?$FixedBlockSize@$07@CryptoPP@@@8 ; CryptoPP::FixedBlockSize<8>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$FixedBlockSize@$07@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Blowfish_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Blowfish_Info@CryptoPP@@8 DD FLAT:??_R0?AUBlowfish_Info@CryptoPP@@@8 ; CryptoPP::Blowfish_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Blowfish_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Blowfish_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R2Blowfish_Info@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Blowfish_Info@CryptoPP@@8 ; CryptoPP::Blowfish_Info::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R10?0A@EA@?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R11?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Blowfish_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R3Blowfish_Info@CryptoPP@@8 DD 00H			; CryptoPP::Blowfish_Info::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2Blowfish_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUBlowfish_Info@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AUBlowfish_Info@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::Blowfish_Info `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUBlowfish_Info@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@Blowfish_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@Blowfish_Info@CryptoPP@@8 DD FLAT:??_R0?AUBlowfish_Info@CryptoPP@@@8 ; CryptoPP::Blowfish_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	03H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Blowfish_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Blowfish_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@8 DD 00H ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	FLAT:??_R2?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@'
	DB	'CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Blowfish_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0bH
	DD	FLAT:??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher'
	DB	'@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Blowfish_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0cH
	DD	FLAT:??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoB'
	DB	'ases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@'
	DB	'CryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Blowfish_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Blowfish_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherImpl<CryptoPP::Blowfish_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0dH
	DD	FLAT:??_R2?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherImpl<CryptoPP::Blowfish_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCip'
	DB	'her@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Blowfish_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0cH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Base@Blowfish@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Base@Blowfish@CryptoPP@@8 DD FLAT:??_R0?AVBase@Blowfish@CryptoPP@@@8 ; CryptoPP::Blowfish::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0dH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Base@Blowfish@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Base@Blowfish@CryptoPP@@8
rdata$r	SEGMENT
??_R2Base@Blowfish@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Base@Blowfish@CryptoPP@@8 ; CryptoPP::Blowfish::Base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Blowfish_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$07@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$00$0DI@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Base@Blowfish@CryptoPP@@8
rdata$r	SEGMENT
??_R3Base@Blowfish@CryptoPP@@8 DD 00H			; CryptoPP::Blowfish::Base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0eH
	DD	FLAT:??_R2Base@Blowfish@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBase@Blowfish@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVBase@Blowfish@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::Blowfish::Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBase@Blowfish@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::Twofish::Enc>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Enc@Twofish@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@Twofish@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Twofish_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@8 DD 00H ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::Twofish::Enc>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	010H
	DD	FLAT:??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::Twofish::Enc> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@'
	DB	'CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::Twofish::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0fH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	010H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Enc@Twofish@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@Twofish@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Twofish_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	011H
	DD	FLAT:??_R2?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@Crypt'
	DB	'oPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Enc@Twofish@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Enc@Twofish@CryptoPP@@8 DD FLAT:??_R0?AVEnc@Twofish@CryptoPP@@@8 ; CryptoPP::Twofish::Enc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0eH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Enc@Twofish@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Enc@Twofish@CryptoPP@@8
rdata$r	SEGMENT
??_R2Enc@Twofish@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Enc@Twofish@CryptoPP@@8 ; CryptoPP::Twofish::Enc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Base@Twofish@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Twofish_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Enc@Twofish@CryptoPP@@8
rdata$r	SEGMENT
??_R3Enc@Twofish@CryptoPP@@8 DD 00H			; CryptoPP::Twofish::Enc::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0fH
	DD	FLAT:??_R2Enc@Twofish@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVEnc@Twofish@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVEnc@Twofish@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::Twofish::Enc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVEnc@Twofish@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	SEGMENT
??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8 DD FLAT:??_R0?AV?$FixedRounds@$0BA@@CryptoPP@@@8 ; CryptoPP::FixedRounds<16>::`RTTI Base Class Descriptor at (14,-1,0,64)'
	DD	00H
	DD	0eH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8 DD FLAT:??_R0?AV?$FixedRounds@$0BA@@CryptoPP@@@8 ; CryptoPP::FixedRounds<16>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$FixedRounds@$0BA@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8 ; CryptoPP::FixedRounds<16>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$FixedRounds@$0BA@@CryptoPP@@8 DD 00H		; CryptoPP::FixedRounds<16>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$FixedRounds@$0BA@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$FixedRounds@$0BA@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::FixedRounds<16> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$FixedRounds@$0BA@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R11?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	SEGMENT
??_R11?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8 DD FLAT:??_R0?AV?$FixedRounds@$0BA@@CryptoPP@@@8 ; CryptoPP::FixedRounds<16>::`RTTI Base Class Descriptor at (2,-1,0,64)'
	DD	00H
	DD	02H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Twofish_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Twofish_Info@CryptoPP@@8 DD FLAT:??_R0?AUTwofish_Info@CryptoPP@@@8 ; CryptoPP::Twofish_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Twofish_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Twofish_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R2Twofish_Info@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Twofish_Info@CryptoPP@@8 ; CryptoPP::Twofish_Info::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R10?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R11?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Twofish_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R3Twofish_Info@CryptoPP@@8 DD 00H			; CryptoPP::Twofish_Info::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2Twofish_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUTwofish_Info@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AUTwofish_Info@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::Twofish_Info `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUTwofish_Info@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@Twofish_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@Twofish_Info@CryptoPP@@8 DD FLAT:??_R0?AUTwofish_Info@CryptoPP@@@8 ; CryptoPP::Twofish_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	03H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Twofish_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Twofish_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@8 DD 00H ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	FLAT:??_R2?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@C'
	DB	'ryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Twofish_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0bH
	DD	FLAT:??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher'
	DB	'@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Twofish_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0cH
	DD	FLAT:??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoB'
	DB	'ases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@C'
	DB	'ryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Twofish_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Twofish_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherImpl<CryptoPP::Twofish_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0dH
	DD	FLAT:??_R2?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherImpl<CryptoPP::Twofish_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCiph'
	DB	'er@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Twofish_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0cH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Base@Twofish@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Base@Twofish@CryptoPP@@8 DD FLAT:??_R0?AVBase@Twofish@CryptoPP@@@8 ; CryptoPP::Twofish::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0dH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Base@Twofish@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Base@Twofish@CryptoPP@@8
rdata$r	SEGMENT
??_R2Base@Twofish@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Base@Twofish@CryptoPP@@8 ; CryptoPP::Twofish::Base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Twofish_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Base@Twofish@CryptoPP@@8
rdata$r	SEGMENT
??_R3Base@Twofish@CryptoPP@@8 DD 00H			; CryptoPP::Twofish::Base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0eH
	DD	FLAT:??_R2Base@Twofish@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBase@Twofish@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVBase@Twofish@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::Twofish::Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBase@Twofish@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::Serpent::Enc>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Enc@Serpent@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@Serpent@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Serpent_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0CA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@8 DD 00H ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::Serpent::Enc>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	010H
	DD	FLAT:??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::Serpent::Enc> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@'
	DB	'CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::Serpent::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0fH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	010H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Enc@Serpent@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@Serpent@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Serpent_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0CA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	011H
	DD	FLAT:??_R2?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@Crypt'
	DB	'oPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Enc@Serpent@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Enc@Serpent@CryptoPP@@8 DD FLAT:??_R0?AVEnc@Serpent@CryptoPP@@@8 ; CryptoPP::Serpent::Enc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0eH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Enc@Serpent@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Enc@Serpent@CryptoPP@@8
rdata$r	SEGMENT
??_R2Enc@Serpent@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Enc@Serpent@CryptoPP@@8 ; CryptoPP::Serpent::Enc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Base@Serpent@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Serpent_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0CA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Enc@Serpent@CryptoPP@@8
rdata$r	SEGMENT
??_R3Enc@Serpent@CryptoPP@@8 DD 00H			; CryptoPP::Serpent::Enc::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0fH
	DD	FLAT:??_R2Enc@Serpent@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVEnc@Serpent@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVEnc@Serpent@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::Serpent::Enc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVEnc@Serpent@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1O@?0A@EA@?$FixedRounds@$0CA@@CryptoPP@@8
rdata$r	SEGMENT
??_R1O@?0A@EA@?$FixedRounds@$0CA@@CryptoPP@@8 DD FLAT:??_R0?AV?$FixedRounds@$0CA@@CryptoPP@@@8 ; CryptoPP::FixedRounds<32>::`RTTI Base Class Descriptor at (14,-1,0,64)'
	DD	00H
	DD	0eH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$FixedRounds@$0CA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,0,32,1,4,0>::`RTTI Base Class Descriptor at (13,-1,0,64)'
	DD	00H
	DD	0dH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$FixedRounds@$0CA@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$FixedRounds@$0CA@@CryptoPP@@8 DD FLAT:??_R0?AV?$FixedRounds@$0CA@@CryptoPP@@@8 ; CryptoPP::FixedRounds<32>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$FixedRounds@$0CA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$FixedRounds@$0CA@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$FixedRounds@$0CA@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$FixedRounds@$0CA@@CryptoPP@@8 ; CryptoPP::FixedRounds<32>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$FixedRounds@$0CA@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$FixedRounds@$0CA@@CryptoPP@@8 DD 00H		; CryptoPP::FixedRounds<32>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$FixedRounds@$0CA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$FixedRounds@$0CA@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$FixedRounds@$0CA@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::FixedRounds<32> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$FixedRounds@$0CA@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R11?0A@EA@?$FixedRounds@$0CA@@CryptoPP@@8
rdata$r	SEGMENT
??_R11?0A@EA@?$FixedRounds@$0CA@@CryptoPP@@8 DD FLAT:??_R0?AV?$FixedRounds@$0CA@@CryptoPP@@@8 ; CryptoPP::FixedRounds<32>::`RTTI Base Class Descriptor at (2,-1,0,64)'
	DD	00H
	DD	02H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$FixedRounds@$0CA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,0,32,1,4,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,0,32,1,4,0>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8 DD 00H ; CryptoPP::VariableKeyLength<16,0,32,1,4,0>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::VariableKeyLength<16,0,32,1,4,0> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoP'
	DB	'P@@', 00H
data$rs	ENDS
;	COMDAT ??_R10?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R10?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,0,32,1,4,0>::`RTTI Base Class Descriptor at (1,-1,0,64)'
	DD	00H
	DD	01H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Serpent_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Serpent_Info@CryptoPP@@8 DD FLAT:??_R0?AUSerpent_Info@CryptoPP@@@8 ; CryptoPP::Serpent_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Serpent_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Serpent_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R2Serpent_Info@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Serpent_Info@CryptoPP@@8 ; CryptoPP::Serpent_Info::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R10?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R11?0A@EA@?$FixedRounds@$0CA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Serpent_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R3Serpent_Info@CryptoPP@@8 DD 00H			; CryptoPP::Serpent_Info::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2Serpent_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSerpent_Info@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AUSerpent_Info@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::Serpent_Info `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSerpent_Info@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@Serpent_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@Serpent_Info@CryptoPP@@8 DD FLAT:??_R0?AUSerpent_Info@CryptoPP@@@8 ; CryptoPP::Serpent_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	03H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Serpent_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Serpent_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0CA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@8 DD 00H ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	FLAT:??_R2?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@C'
	DB	'ryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Serpent_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0CA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0bH
	DD	FLAT:??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher'
	DB	'@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Serpent_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0CA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0cH
	DD	FLAT:??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoB'
	DB	'ases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@C'
	DB	'ryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Serpent_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Serpent_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0CA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherImpl<CryptoPP::Serpent_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0dH
	DD	FLAT:??_R2?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherImpl<CryptoPP::Serpent_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCiph'
	DB	'er@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::Serpent_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0cH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Base@Serpent@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Base@Serpent@CryptoPP@@8 DD FLAT:??_R0?AVBase@Serpent@CryptoPP@@@8 ; CryptoPP::Serpent::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0dH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Base@Serpent@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Base@Serpent@CryptoPP@@8
rdata$r	SEGMENT
??_R2Base@Serpent@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Base@Serpent@CryptoPP@@8 ; CryptoPP::Serpent::Base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@Serpent_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0CA@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$FixedRounds@$0CA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Base@Serpent@CryptoPP@@8
rdata$r	SEGMENT
??_R3Base@Serpent@CryptoPP@@8 DD 00H			; CryptoPP::Serpent::Base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0eH
	DD	FLAT:??_R2Base@Serpent@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBase@Serpent@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVBase@Serpent@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::Serpent::Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBase@Serpent@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::MARS::Enc>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Enc@MARS@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@MARS@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@MARS_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@8 DD 00H ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::MARS::Enc>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0fH
	DD	FLAT:??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::MARS::Enc> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@Cry'
	DB	'ptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::MARS::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0eH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0fH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Enc@MARS@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@MARS@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@MARS_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	010H
	DD	FLAT:??_R2?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP'
	DB	'@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Enc@MARS@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Enc@MARS@CryptoPP@@8 DD FLAT:??_R0?AVEnc@MARS@CryptoPP@@@8 ; CryptoPP::MARS::Enc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0dH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Enc@MARS@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Enc@MARS@CryptoPP@@8
rdata$r	SEGMENT
??_R2Enc@MARS@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Enc@MARS@CryptoPP@@8 ; CryptoPP::MARS::Enc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Base@MARS@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@MARS_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Enc@MARS@CryptoPP@@8
rdata$r	SEGMENT
??_R3Enc@MARS@CryptoPP@@8 DD 00H			; CryptoPP::MARS::Enc::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0eH
	DD	FLAT:??_R2Enc@MARS@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVEnc@MARS@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVEnc@MARS@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::MARS::Enc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVEnc@MARS@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,16,56,4,4,0>::`RTTI Base Class Descriptor at (13,-1,0,64)'
	DD	00H
	DD	0dH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,16,56,4,4,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,56,4,4,0>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8 DD 00H ; CryptoPP::VariableKeyLength<16,16,56,4,4,0>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::VariableKeyLength<16,16,56,4,4,0> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@Crypto'
	DB	'PP@@', 00H
data$rs	ENDS
;	COMDAT ??_R10?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R10?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,16,56,4,4,0>::`RTTI Base Class Descriptor at (1,-1,0,64)'
	DD	00H
	DD	01H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@MARS_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MARS_Info@CryptoPP@@8 DD FLAT:??_R0?AUMARS_Info@CryptoPP@@@8 ; CryptoPP::MARS_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MARS_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2MARS_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R2MARS_Info@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@MARS_Info@CryptoPP@@8 ; CryptoPP::MARS_Info::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R10?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3MARS_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R3MARS_Info@CryptoPP@@8 DD 00H			; CryptoPP::MARS_Info::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2MARS_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUMARS_Info@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AUMARS_Info@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::MARS_Info `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUMARS_Info@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@MARS_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@MARS_Info@CryptoPP@@8 DD FLAT:??_R0?AUMARS_Info@CryptoPP@@@8 ; CryptoPP::MARS_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	02H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MARS_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@MARS_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@8 DD 00H ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	09H
	DD	FLAT:??_R2?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@Cryp'
	DB	'toPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@MARS_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	FLAT:??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher'
	DB	'@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@MARS_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0bH
	DD	FLAT:??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoB'
	DB	'ases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@Cryp'
	DB	'toPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::MARS_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@MARS_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherImpl<CryptoPP::MARS_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0cH
	DD	FLAT:??_R2?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherImpl<CryptoPP::MARS_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@'
	DB	'2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::MARS_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Base@MARS@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Base@MARS@CryptoPP@@8 DD FLAT:??_R0?AVBase@MARS@CryptoPP@@@8 ; CryptoPP::MARS::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0cH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Base@MARS@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Base@MARS@CryptoPP@@8
rdata$r	SEGMENT
??_R2Base@MARS@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Base@MARS@CryptoPP@@8 ; CryptoPP::MARS::Base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@MARS_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0DI@$03$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Base@MARS@CryptoPP@@8
rdata$r	SEGMENT
??_R3Base@MARS@CryptoPP@@8 DD 00H			; CryptoPP::MARS::Base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0dH
	DD	FLAT:??_R2Base@MARS@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBase@MARS@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVBase@MARS@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::MARS::Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBase@MARS@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::RC6::Enc>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Enc@RC6@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@RC6@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@RC6_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@8 DD 00H ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::RC6::Enc>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	010H
	DD	FLAT:??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::RC6::Enc> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@Cryp'
	DB	'toPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::RC6::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0fH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	010H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Enc@RC6@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@RC6@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@RC6_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	011H
	DD	FLAT:??_R2?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@'
	DB	'@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Enc@RC6@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Enc@RC6@CryptoPP@@8 DD FLAT:??_R0?AVEnc@RC6@CryptoPP@@@8 ; CryptoPP::RC6::Enc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0eH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Enc@RC6@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Enc@RC6@CryptoPP@@8
rdata$r	SEGMENT
??_R2Enc@RC6@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Enc@RC6@CryptoPP@@8 ; CryptoPP::RC6::Enc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Base@RC6@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@RC6_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Enc@RC6@CryptoPP@@8
rdata$r	SEGMENT
??_R3Enc@RC6@CryptoPP@@8 DD 00H				; CryptoPP::RC6::Enc::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0fH
	DD	FLAT:??_R2Enc@RC6@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVEnc@RC6@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVEnc@RC6@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@	; CryptoPP::RC6::Enc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVEnc@RC6@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1O@?0A@EA@?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	SEGMENT
??_R1O@?0A@EA@?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@@8 ; CryptoPP::VariableRounds<20,1,2147483647>::`RTTI Base Class Descriptor at (14,-1,0,64)'
	DD	00H
	DD	0eH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,0,255,1,4,0>::`RTTI Base Class Descriptor at (13,-1,0,64)'
	DD	00H
	DD	0dH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@@8 ; CryptoPP::VariableRounds<20,1,2147483647>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8 ; CryptoPP::VariableRounds<20,1,2147483647>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8 DD 00H ; CryptoPP::VariableRounds<20,1,2147483647>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::VariableRounds<20,1,2147483647> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R11?0A@EA@?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	SEGMENT
??_R11?0A@EA@?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@@8 ; CryptoPP::VariableRounds<20,1,2147483647>::`RTTI Base Class Descriptor at (2,-1,0,64)'
	DD	00H
	DD	02H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,0,255,1,4,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,0,255,1,4,0>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8 DD 00H ; CryptoPP::VariableKeyLength<16,0,255,1,4,0>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::VariableKeyLength<16,0,255,1,4,0> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoP'
	DB	'P@@', 00H
data$rs	ENDS
;	COMDAT ??_R10?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R10?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,0,255,1,4,0>::`RTTI Base Class Descriptor at (1,-1,0,64)'
	DD	00H
	DD	01H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RC6_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RC6_Info@CryptoPP@@8 DD FLAT:??_R0?AURC6_Info@CryptoPP@@@8 ; CryptoPP::RC6_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RC6_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2RC6_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R2RC6_Info@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@RC6_Info@CryptoPP@@8 ; CryptoPP::RC6_Info::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R10?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R11?0A@EA@?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3RC6_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R3RC6_Info@CryptoPP@@8 DD 00H			; CryptoPP::RC6_Info::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	04H
	DD	FLAT:??_R2RC6_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AURC6_Info@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AURC6_Info@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::RC6_Info `RTTI Type Descriptor'
	DD	00H
	DB	'.?AURC6_Info@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@RC6_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@RC6_Info@CryptoPP@@8 DD FLAT:??_R0?AURC6_Info@CryptoPP@@@8 ; CryptoPP::RC6_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	03H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RC6_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@RC6_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@8 DD 00H ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	FLAT:??_R2?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@Crypt'
	DB	'oPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@RC6_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0bH
	DD	FLAT:??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher'
	DB	'@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@RC6_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0cH
	DD	FLAT:??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoB'
	DB	'ases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@Crypt'
	DB	'oPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::RC6_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@RC6_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherImpl<CryptoPP::RC6_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0dH
	DD	FLAT:??_R2?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherImpl<CryptoPP::RC6_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2'
	DB	'@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::RC6_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0cH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Base@RC6@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Base@RC6@CryptoPP@@8 DD FLAT:??_R0?AVBase@RC6@CryptoPP@@@8 ; CryptoPP::RC6::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0dH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Base@RC6@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Base@RC6@CryptoPP@@8
rdata$r	SEGMENT
??_R2Base@RC6@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Base@RC6@CryptoPP@@8 ; CryptoPP::RC6::Base::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@RC6_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0A@$0PP@$00$03$0A@@CryptoPP@@8
	DD	FLAT:??_R1O@?0A@EA@?$VariableRounds@$0BE@$00$0HPPPPPPP@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Base@RC6@CryptoPP@@8
rdata$r	SEGMENT
??_R3Base@RC6@CryptoPP@@8 DD 00H			; CryptoPP::RC6::Base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0eH
	DD	FLAT:??_R2Base@RC6@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBase@RC6@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVBase@RC6@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::RC6::Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBase@RC6@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::CAST256::Base>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Base@CAST256@CryptoPP@@8
	DD	FLAT:??_R1BB@?0A@EA@CAST@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@CAST256_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@8 DD 00H ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::CAST256::Base>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0fH
	DD	FLAT:??_R2?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::CAST256::Base> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256'
	DB	'@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@@8 ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::CAST256::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0eH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0fH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@8 ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Base@CAST256@CryptoPP@@8
	DD	FLAT:??_R1BB@?0A@EA@CAST@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@CAST256_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	010H
	DD	FLAT:??_R2?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@Cryp'
	DB	'toPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,16,32,1,4,0>::`RTTI Base Class Descriptor at (13,-1,0,64)'
	DD	00H
	DD	0dH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8 DD FLAT:??_R0?AV?$FixedBlockSize@$0BA@@CryptoPP@@@8 ; CryptoPP::FixedBlockSize<16>::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$FixedBlockSize@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,16,32,1,4,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8 ; CryptoPP::VariableKeyLength<16,16,32,1,4,0>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8 DD 00H ; CryptoPP::VariableKeyLength<16,16,32,1,4,0>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::VariableKeyLength<16,16,32,1,4,0> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@Crypto'
	DB	'PP@@', 00H
data$rs	ENDS
;	COMDAT ??_R10?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	SEGMENT
??_R10?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8 DD FLAT:??_R0?AV?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@@8 ; CryptoPP::VariableKeyLength<16,16,32,1,4,0>::`RTTI Base Class Descriptor at (1,-1,0,64)'
	DD	00H
	DD	01H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$FixedBlockSize@$0BA@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$FixedBlockSize@$0BA@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8 ; CryptoPP::FixedBlockSize<16>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$FixedBlockSize@$0BA@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$FixedBlockSize@$0BA@@CryptoPP@@8 DD 00H		; CryptoPP::FixedBlockSize<16>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$FixedBlockSize@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$FixedBlockSize@$0BA@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$FixedBlockSize@$0BA@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::FixedBlockSize<16> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$FixedBlockSize@$0BA@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8 DD FLAT:??_R0?AV?$FixedBlockSize@$0BA@@CryptoPP@@@8 ; CryptoPP::FixedBlockSize<16>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$FixedBlockSize@$0BA@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CAST256_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAST256_Info@CryptoPP@@8 DD FLAT:??_R0?AUCAST256_Info@CryptoPP@@@8 ; CryptoPP::CAST256_Info::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAST256_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2CAST256_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R2CAST256_Info@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@CAST256_Info@CryptoPP@@8 ; CryptoPP::CAST256_Info::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R10?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3CAST256_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R3CAST256_Info@CryptoPP@@8 DD 00H			; CryptoPP::CAST256_Info::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CAST256_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUCAST256_Info@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AUCAST256_Info@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CAST256_Info `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUCAST256_Info@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1M@?0A@EA@CAST256_Info@CryptoPP@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@CAST256_Info@CryptoPP@@8 DD FLAT:??_R0?AUCAST256_Info@CryptoPP@@@8 ; CryptoPP::CAST256_Info::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	02H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAST256_Info@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@CAST256_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@8 DD 00H ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	09H
	DD	FLAT:??_R2?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@C'
	DB	'ryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@@8 ; CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@CAST256_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	FLAT:??_R2?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher'
	DB	'@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> > >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@CAST256_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> > >::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0bH
	DD	FLAT:??_R2?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> > > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoB'
	DB	'ases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@C'
	DB	'ryptoPP@@V12@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@@8 ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> > >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::CAST256_Info,CryptoPP::BlockCipher>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@CAST256_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD 00H ; CryptoPP::BlockCipherImpl<CryptoPP::CAST256_Info,CryptoPP::BlockCipher>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0cH
	DD	FLAT:??_R2?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipherImpl<CryptoPP::CAST256_Info,CryptoPP::BlockCipher> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCiph'
	DB	'er@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@@8 ; CryptoPP::BlockCipherImpl<CryptoPP::CAST256_Info,CryptoPP::BlockCipher>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CAST@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAST@CryptoPP@@8 DD FLAT:??_R0?AVCAST@CryptoPP@@@8 ; CryptoPP::CAST::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAST@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2CAST@CryptoPP@@8
rdata$r	SEGMENT
??_R2CAST@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@CAST@CryptoPP@@8 ; CryptoPP::CAST::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CAST@CryptoPP@@8
rdata$r	SEGMENT
??_R3CAST@CryptoPP@@8 DD 00H				; CryptoPP::CAST::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CAST@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAST@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVCAST@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@	; CryptoPP::CAST `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAST@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1BB@?0A@EA@CAST@CryptoPP@@8
rdata$r	SEGMENT
??_R1BB@?0A@EA@CAST@CryptoPP@@8 DD FLAT:??_R0?AVCAST@CryptoPP@@@8 ; CryptoPP::CAST::`RTTI Base Class Descriptor at (17,-1,0,64)'
	DD	00H
	DD	011H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAST@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Base@CAST256@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Base@CAST256@CryptoPP@@8 DD FLAT:??_R0?AVBase@CAST256@CryptoPP@@@8 ; CryptoPP::CAST256::Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0dH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Base@CAST256@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Base@CAST256@CryptoPP@@8
rdata$r	SEGMENT
??_R2Base@CAST256@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Base@CAST256@CryptoPP@@8 ; CryptoPP::CAST256::Base::`RTTI Base Class Array'
	DD	FLAT:??_R1BB@?0A@EA@CAST@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@CAST256_Info@CryptoPP@@8
	DD	FLAT:??_R1M@?0A@EA@?$FixedBlockSize@$0BA@@CryptoPP@@8
	DD	FLAT:??_R1N@?0A@EA@?$VariableKeyLength@$0BA@$0BA@$0CA@$00$03$0A@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Base@CAST256@CryptoPP@@8
rdata$r	SEGMENT
??_R3Base@CAST256@CryptoPP@@8 DD 00H			; CryptoPP::CAST256::Base::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0eH
	DD	FLAT:??_R2Base@CAST256@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBase@CAST256@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVBase@CAST256@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CAST256::Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBase@CAST256@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@DH2@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DH2@CryptoPP@@8 DD FLAT:??_R0?AVDH2@CryptoPP@@@8 ; CryptoPP::DH2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DH2@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2DH2@CryptoPP@@8
rdata$r	SEGMENT
??_R2DH2@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@DH2@CryptoPP@@8 ; CryptoPP::DH2::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@AuthenticatedKeyAgreementDomain@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@KeyAgreementAlgorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@AsymmetricAlgorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3DH2@CryptoPP@@8
rdata$r	SEGMENT
??_R3DH2@CryptoPP@@8 DD 00H				; CryptoPP::DH2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2DH2@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDH2@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVDH2@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@	; CryptoPP::DH2 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDH2@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4DH2@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4DH2@CryptoPP@@6B@ DD 00H				; CryptoPP::DH2::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDH2@CryptoPP@@@8
	DD	FLAT:??_R3DH2@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@8 ; CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8 ; CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8 DD 00H ; CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$'
	DB	'EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@C'
	DB	'ryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@6B@ DD 00H ; CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::DL_KeyAgreementAlgorithm<CryptoPP::Integer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_KeyAgreementAlgorithm<CryptoPP::Integer>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::DL_KeyAgreementAlgorithm<CryptoPP::Integer>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::DL_KeyAgreementAlgorithm<CryptoPP::Integer> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@Crypt'
	DB	'oPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R2?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyAgreementDomain@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@KeyAgreementAlgorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@AsymmetricAlgorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	06H
	DD	FLAT:??_R2?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@'
	DB	'@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@8 ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	06H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8 ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyAgreementDomain@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@KeyAgreementAlgorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@AsymmetricAlgorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8 DD 00H ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	07H
	DD	FLAT:??_R2?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime'
	DB	'@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@Crypt'
	DB	'oPP@@$0A@@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@6B@ DD 00H ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6BCryptoMaterial@1@@
rdata$r	SEGMENT
??_R4DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6BCryptoMaterial@1@@ DD 00H ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`RTTI Complete Object Locator'
	DD	06cH
	DD	04H
	DD	FLAT:??_R0?AVDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@@8
	DD	FLAT:??_R3DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6BGeneratableCryptoMaterial@1@@
rdata$r	SEGMENT
??_R4DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6BGeneratableCryptoMaterial@1@@ DD 00H ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@@8
	DD	FLAT:??_R3DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@8 DD FLAT:??_R0?AVDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@@8 ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@8
rdata$r	SEGMENT
??_R2DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@8 ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DL_GroupParameters_GFP@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@DL_GroupParameters_IntegerBased@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@ASN1Object@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@CryptoParameters@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@GeneratableCryptoMaterial@CryptoPP@@8
	DD	FLAT:??_R1A@73FA@CryptoMaterial@CryptoPP@@8
	DD	FLAT:??_R1A@73EA@NameValuePairs@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@8
rdata$r	SEGMENT
??_R3DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@8 DD 00H ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	0cH
	DD	FLAT:??_R2DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6B@ DD 00H ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@@8
	DD	FLAT:??_R3DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4DL_GroupParameters_GFP@CryptoPP@@6BCryptoMaterial@1@@
rdata$r	SEGMENT
??_R4DL_GroupParameters_GFP@CryptoPP@@6BCryptoMaterial@1@@ DD 00H ; CryptoPP::DL_GroupParameters_GFP::`RTTI Complete Object Locator'
	DD	06cH
	DD	04H
	DD	FLAT:??_R0?AVDL_GroupParameters_GFP@CryptoPP@@@8
	DD	FLAT:??_R3DL_GroupParameters_GFP@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4DL_GroupParameters_GFP@CryptoPP@@6BGeneratableCryptoMaterial@1@@
rdata$r	SEGMENT
??_R4DL_GroupParameters_GFP@CryptoPP@@6BGeneratableCryptoMaterial@1@@ DD 00H ; CryptoPP::DL_GroupParameters_GFP::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVDL_GroupParameters_GFP@CryptoPP@@@8
	DD	FLAT:??_R3DL_GroupParameters_GFP@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DL_GroupParameters_GFP@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DL_GroupParameters_GFP@CryptoPP@@8 DD FLAT:??_R0?AVDL_GroupParameters_GFP@CryptoPP@@@8 ; CryptoPP::DL_GroupParameters_GFP::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DL_GroupParameters_GFP@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2DL_GroupParameters_GFP@CryptoPP@@8
rdata$r	SEGMENT
??_R2DL_GroupParameters_GFP@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@DL_GroupParameters_GFP@CryptoPP@@8 ; CryptoPP::DL_GroupParameters_GFP::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@DL_GroupParameters_IntegerBased@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@ASN1Object@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@CryptoParameters@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@GeneratableCryptoMaterial@CryptoPP@@8
	DD	FLAT:??_R1A@73FA@CryptoMaterial@CryptoPP@@8
	DD	FLAT:??_R1A@73EA@NameValuePairs@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3DL_GroupParameters_GFP@CryptoPP@@8
rdata$r	SEGMENT
??_R3DL_GroupParameters_GFP@CryptoPP@@8 DD 00H		; CryptoPP::DL_GroupParameters_GFP::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	0bH
	DD	FLAT:??_R2DL_GroupParameters_GFP@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4DL_GroupParameters_GFP@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4DL_GroupParameters_GFP@CryptoPP@@6B@ DD 00H	; CryptoPP::DL_GroupParameters_GFP::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDL_GroupParameters_GFP@CryptoPP@@@8
	DD	FLAT:??_R3DL_GroupParameters_GFP@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6BCryptoMaterial@1@@
rdata$r	SEGMENT
??_R4?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6BCryptoMaterial@1@@ DD 00H ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`RTTI Complete Object Locator'
	DD	06cH
	DD	04H
	DD	FLAT:??_R0?AV?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6BGeneratableCryptoMaterial@1@@
rdata$r	SEGMENT
??_R4?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6BGeneratableCryptoMaterial@1@@ DD 00H ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6B@ DD 00H ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@8 ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DL_GroupParameters_IntegerBased@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@ASN1Object@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@CryptoParameters@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@GeneratableCryptoMaterial@CryptoPP@@8
	DD	FLAT:??_R1A@73FA@CryptoMaterial@CryptoPP@@8
	DD	FLAT:??_R1A@73EA@NameValuePairs@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@8 DD 00H ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	09H
	DD	FLAT:??_R2?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$DL_GroupParametersImpl@VModExpPrecomputation@Crypt'
	DB	'oPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@'
	DB	'VDL_GroupParameters_IntegerBased@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@@8 ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@@8 ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@8 ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@DL_GroupParameters_IntegerBased@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@ASN1Object@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@CryptoParameters@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@GeneratableCryptoMaterial@CryptoPP@@8
	DD	FLAT:??_R1A@73FA@CryptoMaterial@CryptoPP@@8
	DD	FLAT:??_R1A@73EA@NameValuePairs@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@8 DD 00H ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	0aH
	DD	FLAT:??_R2?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@CryptoParameters@CryptoPP@@8
rdata$r	SEGMENT
??_R13?0A@EA@CryptoParameters@CryptoPP@@8 DD FLAT:??_R0?AVCryptoParameters@CryptoPP@@@8 ; CryptoPP::CryptoParameters::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	03H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CryptoParameters@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	04H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ASN1Object@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@CryptoParameters@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@GeneratableCryptoMaterial@CryptoPP@@8
	DD	FLAT:??_R1A@73FA@CryptoMaterial@CryptoPP@@8
	DD	FLAT:??_R1A@73EA@NameValuePairs@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	07H
	DD	FLAT:??_R2?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@'
	DB	'CryptoPP@@@CryptoPP@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	06H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DL_GroupParameters_IntegerBased@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DL_GroupParameters_IntegerBased@CryptoPP@@8 DD FLAT:??_R0?AVDL_GroupParameters_IntegerBased@CryptoPP@@@8 ; CryptoPP::DL_GroupParameters_IntegerBased::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	07H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DL_GroupParameters_IntegerBased@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2DL_GroupParameters_IntegerBased@CryptoPP@@8
rdata$r	SEGMENT
??_R2DL_GroupParameters_IntegerBased@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@DL_GroupParameters_IntegerBased@CryptoPP@@8 ; CryptoPP::DL_GroupParameters_IntegerBased::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@ASN1Object@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@CryptoParameters@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@GeneratableCryptoMaterial@CryptoPP@@8
	DD	FLAT:??_R1A@73FA@CryptoMaterial@CryptoPP@@8
	DD	FLAT:??_R1A@73EA@NameValuePairs@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3DL_GroupParameters_IntegerBased@CryptoPP@@8
rdata$r	SEGMENT
??_R3DL_GroupParameters_IntegerBased@CryptoPP@@8 DD 00H	; CryptoPP::DL_GroupParameters_IntegerBased::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	08H
	DD	FLAT:??_R2DL_GroupParameters_IntegerBased@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CryptoParameters@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@GeneratableCryptoMaterial@CryptoPP@@8
	DD	FLAT:??_R1A@33FA@CryptoMaterial@CryptoPP@@8
	DD	FLAT:??_R1A@33EA@NameValuePairs@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ModExpPrecomputation@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ModExpPrecomputation@CryptoPP@@8 DD FLAT:??_R0?AVModExpPrecomputation@CryptoPP@@@8 ; CryptoPP::ModExpPrecomputation::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ModExpPrecomputation@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2ModExpPrecomputation@CryptoPP@@8
rdata$r	SEGMENT
??_R2ModExpPrecomputation@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@ModExpPrecomputation@CryptoPP@@8 ; CryptoPP::ModExpPrecomputation::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3ModExpPrecomputation@CryptoPP@@8
rdata$r	SEGMENT
??_R3ModExpPrecomputation@CryptoPP@@8 DD 00H		; CryptoPP::ModExpPrecomputation::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ModExpPrecomputation@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVModExpPrecomputation@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVModExpPrecomputation@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ModExpPrecomputation `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVModExpPrecomputation@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4ModExpPrecomputation@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4ModExpPrecomputation@CryptoPP@@6B@ DD 00H		; CryptoPP::ModExpPrecomputation::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVModExpPrecomputation@CryptoPP@@@8
	DD	FLAT:??_R3ModExpPrecomputation@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoP'
	DB	'P@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@6B@ DD 00H ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@6B@ DD 00H ; CryptoPP::DL_FixedBasePrecomputation<CryptoPP::Integer>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_FixedBasePrecomputation<CryptoPP::Integer>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::DL_FixedBasePrecomputation<CryptoPP::Integer>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::DL_FixedBasePrecomputation<CryptoPP::Integer> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@Cry'
	DB	'ptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::DL_FixedBasePrecomputation<CryptoPP::Integer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@'
	DB	'@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@6B@ DD 00H ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@73EA@NameValuePairs@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@73EA@NameValuePairs@CryptoPP@@8 DD FLAT:??_R0?AVNameValuePairs@CryptoPP@@@8 ; CryptoPP::NameValuePairs::`RTTI Base Class Descriptor at (0,8,4,64)'
	DD	00H
	DD	00H
	DD	08H
	DD	04H
	DD	040H
	DD	FLAT:??_R3NameValuePairs@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@73FA@CryptoMaterial@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@73FA@CryptoMaterial@CryptoPP@@8 DD FLAT:??_R0?AVCryptoMaterial@CryptoPP@@@8 ; CryptoPP::CryptoMaterial::`RTTI Base Class Descriptor at (0,8,4,80)'
	DD	01H
	DD	00H
	DD	08H
	DD	04H
	DD	050H
	DD	FLAT:??_R3CryptoMaterial@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@GeneratableCryptoMaterial@CryptoPP@@8
rdata$r	SEGMENT
??_R13?0A@EA@GeneratableCryptoMaterial@CryptoPP@@8 DD FLAT:??_R0?AVGeneratableCryptoMaterial@CryptoPP@@@8 ; CryptoPP::GeneratableCryptoMaterial::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	02H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GeneratableCryptoMaterial@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DL_BadElement@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DL_BadElement@CryptoPP@@8 DD FLAT:??_R0?AVDL_BadElement@CryptoPP@@@8 ; CryptoPP::DL_BadElement::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DL_BadElement@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2DL_BadElement@CryptoPP@@8
rdata$r	SEGMENT
??_R2DL_BadElement@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@DL_BadElement@CryptoPP@@8 ; CryptoPP::DL_BadElement::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@InvalidDataFormat@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Exception@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3DL_BadElement@CryptoPP@@8
rdata$r	SEGMENT
??_R3DL_BadElement@CryptoPP@@8 DD 00H			; CryptoPP::DL_BadElement::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2DL_BadElement@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4DL_BadElement@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4DL_BadElement@CryptoPP@@6B@ DD 00H			; CryptoPP::DL_BadElement::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDL_BadElement@CryptoPP@@@8
	DD	FLAT:??_R3DL_BadElement@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AVMultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVMultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMultiplicativeGroupT@?$AbstractRing@VInteger@CryptoP'
	DB	'P@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@6B@ DD 00H ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@NotCopyable@CryptoPP@@8
rdata$r	SEGMENT
??_R13?0A@EA@NotCopyable@CryptoPP@@8 DD FLAT:??_R0?AVNotCopyable@CryptoPP@@@8 ; CryptoPP::NotCopyable::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NotCopyable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2RandomPool@CryptoPP@@8
rdata$r	SEGMENT
??_R2RandomPool@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@RandomPool@CryptoPP@@8 ; CryptoPP::RandomPool::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@NotCopyable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3RandomPool@CryptoPP@@8
rdata$r	SEGMENT
??_R3RandomPool@CryptoPP@@8 DD 00H			; CryptoPP::RandomPool::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2RandomPool@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRandomPool@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVRandomPool@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::RandomPool `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRandomPool@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@RandomPool@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RandomPool@CryptoPP@@8 DD FLAT:??_R0?AVRandomPool@CryptoPP@@@8 ; CryptoPP::RandomPool::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RandomPool@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@AutoSeededRandomPool@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AutoSeededRandomPool@CryptoPP@@8 DD FLAT:??_R0?AVAutoSeededRandomPool@CryptoPP@@@8 ; CryptoPP::AutoSeededRandomPool::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AutoSeededRandomPool@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2AutoSeededRandomPool@CryptoPP@@8
rdata$r	SEGMENT
??_R2AutoSeededRandomPool@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@AutoSeededRandomPool@CryptoPP@@8 ; CryptoPP::AutoSeededRandomPool::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@RandomPool@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@NotCopyable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3AutoSeededRandomPool@CryptoPP@@8
rdata$r	SEGMENT
??_R3AutoSeededRandomPool@CryptoPP@@8 DD 00H		; CryptoPP::AutoSeededRandomPool::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2AutoSeededRandomPool@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAutoSeededRandomPool@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVAutoSeededRandomPool@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AutoSeededRandomPool `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAutoSeededRandomPool@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4AutoSeededRandomPool@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4AutoSeededRandomPool@CryptoPP@@6B@ DD 00H		; CryptoPP::AutoSeededRandomPool::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVAutoSeededRandomPool@CryptoPP@@@8
	DD	FLAT:??_R3AutoSeededRandomPool@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SelfTestFailure@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SelfTestFailure@CryptoPP@@8 DD FLAT:??_R0?AVSelfTestFailure@CryptoPP@@@8 ; CryptoPP::SelfTestFailure::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SelfTestFailure@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2SelfTestFailure@CryptoPP@@8
rdata$r	SEGMENT
??_R2SelfTestFailure@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@SelfTestFailure@CryptoPP@@8 ; CryptoPP::SelfTestFailure::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3SelfTestFailure@CryptoPP@@8
rdata$r	SEGMENT
??_R3SelfTestFailure@CryptoPP@@8 DD 00H			; CryptoPP::SelfTestFailure::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2SelfTestFailure@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4SelfTestFailure@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4SelfTestFailure@CryptoPP@@6B@ DD 00H		; CryptoPP::SelfTestFailure::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSelfTestFailure@CryptoPP@@@8
	DD	FLAT:??_R3SelfTestFailure@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@NotCopyable@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NotCopyable@CryptoPP@@8 DD FLAT:??_R0?AVNotCopyable@CryptoPP@@@8 ; CryptoPP::NotCopyable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NotCopyable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2NotCopyable@CryptoPP@@8
rdata$r	SEGMENT
??_R2NotCopyable@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@NotCopyable@CryptoPP@@8 ; CryptoPP::NotCopyable::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3NotCopyable@CryptoPP@@8
rdata$r	SEGMENT
??_R3NotCopyable@CryptoPP@@8 DD 00H			; CryptoPP::NotCopyable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2NotCopyable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNotCopyable@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVNotCopyable@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::NotCopyable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNotCopyable@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@MontgomeryRepresentation@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MontgomeryRepresentation@CryptoPP@@8 DD FLAT:??_R0?AVMontgomeryRepresentation@CryptoPP@@@8 ; CryptoPP::MontgomeryRepresentation::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3MontgomeryRepresentation@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2MontgomeryRepresentation@CryptoPP@@8
rdata$r	SEGMENT
??_R2MontgomeryRepresentation@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@MontgomeryRepresentation@CryptoPP@@8 ; CryptoPP::MontgomeryRepresentation::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ModularArithmetic@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3MontgomeryRepresentation@CryptoPP@@8
rdata$r	SEGMENT
??_R3MontgomeryRepresentation@CryptoPP@@8 DD 00H	; CryptoPP::MontgomeryRepresentation::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2MontgomeryRepresentation@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMontgomeryRepresentation@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVMontgomeryRepresentation@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::MontgomeryRepresentation `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVMontgomeryRepresentation@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4MontgomeryRepresentation@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4MontgomeryRepresentation@CryptoPP@@6B@ DD 00H	; CryptoPP::MontgomeryRepresentation::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVMontgomeryRepresentation@CryptoPP@@@8
	DD	FLAT:??_R3MontgomeryRepresentation@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AbstractGroup<CryptoPP::Integer>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::AbstractGroup<CryptoPP::Integer>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AbstractGroup<CryptoPP::Integer> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::AbstractGroup<CryptoPP::Integer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AbstractRing<CryptoPP::Integer>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::AbstractRing<CryptoPP::Integer>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AbstractRing<CryptoPP::Integer> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::AbstractRing<CryptoPP::Integer>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ModularArithmetic@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ModularArithmetic@CryptoPP@@8 DD FLAT:??_R0?AVModularArithmetic@CryptoPP@@@8 ; CryptoPP::ModularArithmetic::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ModularArithmetic@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2ModularArithmetic@CryptoPP@@8
rdata$r	SEGMENT
??_R2ModularArithmetic@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@ModularArithmetic@CryptoPP@@8 ; CryptoPP::ModularArithmetic::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3ModularArithmetic@CryptoPP@@8
rdata$r	SEGMENT
??_R3ModularArithmetic@CryptoPP@@8 DD 00H		; CryptoPP::ModularArithmetic::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ModularArithmetic@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVModularArithmetic@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVModularArithmetic@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ModularArithmetic `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVModularArithmetic@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4ModularArithmetic@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4ModularArithmetic@CryptoPP@@6B@ DD 00H		; CryptoPP::ModularArithmetic::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVModularArithmetic@CryptoPP@@@8
	DD	FLAT:??_R3ModularArithmetic@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BRandomNumberGenerator@1@@
rdata$r	SEGMENT
??_R4?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD 00H ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Complete Object Locator'
	DD	028H
	DD	00H
	DD	FLAT:??_R0?AV?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
rdata$r	SEGMENT
??_R4?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD 00H ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Complete Object Locator'
	DD	018H
	DD	00H
	DD	FLAT:??_R0?AV?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BStreamTransformation@1@@
rdata$r	SEGMENT
??_R4?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BStreamTransformation@1@@ DD 00H ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AV?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Empty@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Empty@CryptoPP@@8 DD FLAT:??_R0?AVEmpty@CryptoPP@@@8 ; CryptoPP::Empty::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Empty@CryptoPP@@8
rdata$r	SEGMENT
??_R2Empty@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Empty@CryptoPP@@8 ; CryptoPP::Empty::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Empty@CryptoPP@@8
rdata$r	SEGMENT
??_R3Empty@CryptoPP@@8 DD 00H				; CryptoPP::Empty::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVEmpty@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVEmpty@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@	; CryptoPP::Empty `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVEmpty@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	SEGMENT
??_R1DN@?0A@EN@Empty@CryptoPP@@8 DD FLAT:??_R0?AVEmpty@CryptoPP@@@8 ; CryptoPP::Empty::`RTTI Base Class Descriptor at (61,-1,0,77)'
	DD	00H
	DD	03dH
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@@8 ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0fH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8 ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1DN@?0A@EN@Empty@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8 DD 00H ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	010H
	DD	FLAT:??_R2?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveC'
	DB	'ipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstract'
	DB	'Policy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCip'
	DB	'herAbstractPolicy@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
rdata$r	SEGMENT
??_R4?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD 00H ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@@8
	DD	FLAT:??_R3?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1CI@?0A@EC@Clonable@CryptoPP@@8
rdata$r	SEGMENT
??_R1CI@?0A@EC@Clonable@CryptoPP@@8 DD FLAT:??_R0?AVClonable@CryptoPP@@@8 ; CryptoPP::Clonable::`RTTI Base Class Descriptor at (40,-1,0,66)'
	DD	00H
	DD	028H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
rdata$r	SEGMENT
??_R1CI@?0A@EC@Algorithm@CryptoPP@@8 DD FLAT:??_R0?AVAlgorithm@CryptoPP@@@8 ; CryptoPP::Algorithm::`RTTI Base Class Descriptor at (40,-1,0,66)'
	DD	01H
	DD	028H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3Algorithm@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
rdata$r	SEGMENT
??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8 DD FLAT:??_R0?AVRandomNumberGenerator@CryptoPP@@@8 ; CryptoPP::RandomNumberGenerator::`RTTI Base Class Descriptor at (40,-1,0,64)'
	DD	02H
	DD	028H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RandomNumberGenerator@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@Clonable@CryptoPP@@8
rdata$r	SEGMENT
??_R13?0A@EC@Clonable@CryptoPP@@8 DD FLAT:??_R0?AVClonable@CryptoPP@@@8 ; CryptoPP::Clonable::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@Algorithm@CryptoPP@@8
rdata$r	SEGMENT
??_R13?0A@EC@Algorithm@CryptoPP@@8 DD FLAT:??_R0?AVAlgorithm@CryptoPP@@@8 ; CryptoPP::Algorithm::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3Algorithm@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0dH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EC@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EA@RandomNumberGenerator@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1CI@?0A@EC@Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	0eH
	DD	FLAT:??_R2?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAd'
	DB	'ditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@Crypt'
	DB	'oPP@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8 DD FLAT:??_R0?AV?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@8 ; CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8 ; CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8 DD 00H ; CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	FLAT:??_R2?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy'
	DB	'@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8 DD FLAT:??_R0?AVCTR_ModePolicy@CryptoPP@@@8 ; CryptoPP::CTR_ModePolicy::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTR_ModePolicy@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2CTR_ModePolicy@CryptoPP@@8
rdata$r	SEGMENT
??_R2CTR_ModePolicy@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@CTR_ModePolicy@CryptoPP@@8 ; CryptoPP::CTR_ModePolicy::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3CTR_ModePolicy@CryptoPP@@8
rdata$r	SEGMENT
??_R3CTR_ModePolicy@CryptoPP@@8 DD 00H			; CryptoPP::CTR_ModePolicy::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	09H
	DD	FLAT:??_R2CTR_ModePolicy@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTR_ModePolicy@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVCTR_ModePolicy@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CTR_ModePolicy `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTR_ModePolicy@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
rdata$r	SEGMENT
??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8 DD FLAT:??_R0?AUAdditiveCipherAbstractPolicy@CryptoPP@@@8 ; CryptoPP::AdditiveCipherAbstractPolicy::`RTTI Base Class Descriptor at (24,-1,0,64)'
	DD	00H
	DD	018H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AdditiveCipherAbstractPolicy@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::ModePolicyCommonTemplate<CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	07H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8 ; CryptoPP::ModePolicyCommonTemplate<CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
	DD	FLAT:??_R1BI@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::ModePolicyCommonTemplate<CryptoPP::AdditiveCipherAbstractPolicy>::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	08H
	DD	FLAT:??_R2?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ModePolicyCommonTemplate<CryptoPP::AdditiveCipherAbstractPolicy> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPo'
	DB	'licy@CryptoPP@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8 DD FLAT:??_R0?AVCipherModeBase@CryptoPP@@@8 ; CryptoPP::CipherModeBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CipherModeBase@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2CipherModeBase@CryptoPP@@8
rdata$r	SEGMENT
??_R2CipherModeBase@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@CipherModeBase@CryptoPP@@8 ; CryptoPP::CipherModeBase::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3CipherModeBase@CryptoPP@@8
rdata$r	SEGMENT
??_R3CipherModeBase@CryptoPP@@8 DD 00H			; CryptoPP::CipherModeBase::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2CipherModeBase@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCipherModeBase@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVCipherModeBase@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CipherModeBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCipherModeBase@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R0?AV?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@@8 ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R2?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@8 ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@AlgorithmParametersBase@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@8
rdata$r	SEGMENT
??_R3?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AV?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AlgorithmParametersTemplate@VConstByteArrayParamet'
	DB	'er@CryptoPP@@@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@6B@ DD 00H ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@@8
	DD	FLAT:??_R3?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@8 DD FLAT:??_R0?AVParameterNotUsed@AlgorithmParametersBase@CryptoPP@@@8 ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@8
rdata$r	SEGMENT
??_R2ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@8 ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@8
rdata$r	SEGMENT
??_R3ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@8 DD 00H ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@6B@ DD 00H ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVParameterNotUsed@AlgorithmParametersBase@CryptoPP@@@8
	DD	FLAT:??_R3ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@AlgorithmParametersBase@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AlgorithmParametersBase@CryptoPP@@8 DD FLAT:??_R0?AVAlgorithmParametersBase@CryptoPP@@@8 ; CryptoPP::AlgorithmParametersBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AlgorithmParametersBase@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2AlgorithmParametersBase@CryptoPP@@8
rdata$r	SEGMENT
??_R2AlgorithmParametersBase@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@AlgorithmParametersBase@CryptoPP@@8 ; CryptoPP::AlgorithmParametersBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3AlgorithmParametersBase@CryptoPP@@8
rdata$r	SEGMENT
??_R3AlgorithmParametersBase@CryptoPP@@8 DD 00H		; CryptoPP::AlgorithmParametersBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2AlgorithmParametersBase@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAlgorithmParametersBase@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVAlgorithmParametersBase@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmParametersBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAlgorithmParametersBase@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R4AlgorithmParametersBase@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4AlgorithmParametersBase@CryptoPP@@6B@ DD 00H	; CryptoPP::AlgorithmParametersBase::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVAlgorithmParametersBase@CryptoPP@@@8
	DD	FLAT:??_R3AlgorithmParametersBase@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8 DD FLAT:??_R0?AUAdditiveCipherAbstractPolicy@CryptoPP@@@8 ; CryptoPP::AdditiveCipherAbstractPolicy::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AdditiveCipherAbstractPolicy@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2AdditiveCipherAbstractPolicy@CryptoPP@@8
rdata$r	SEGMENT
??_R2AdditiveCipherAbstractPolicy@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@AdditiveCipherAbstractPolicy@CryptoPP@@8 ; CryptoPP::AdditiveCipherAbstractPolicy::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3AdditiveCipherAbstractPolicy@CryptoPP@@8
rdata$r	SEGMENT
??_R3AdditiveCipherAbstractPolicy@CryptoPP@@8 DD 00H	; CryptoPP::AdditiveCipherAbstractPolicy::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2AdditiveCipherAbstractPolicy@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUAdditiveCipherAbstractPolicy@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AUAdditiveCipherAbstractPolicy@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AdditiveCipherAbstractPolicy `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUAdditiveCipherAbstractPolicy@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@KeyAgreement@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@KeyAgreement@@8 DD FLAT:??_R0?AVKeyAgreement@@@8 ; KeyAgreement::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3KeyAgreement@@8
rdata$r	ENDS
;	COMDAT ??_R2KeyAgreement@@8
rdata$r	SEGMENT
??_R2KeyAgreement@@8 DD FLAT:??_R1A@?0A@EA@KeyAgreement@@8 ; KeyAgreement::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3KeyAgreement@@8
rdata$r	SEGMENT
??_R3KeyAgreement@@8 DD 00H				; KeyAgreement::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2KeyAgreement@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVKeyAgreement@@@8
data$rs	SEGMENT
??_R0?AVKeyAgreement@@@8 DD FLAT:??_7type_info@@6B@	; KeyAgreement `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVKeyAgreement@@', 00H
data$rs	ENDS
;	COMDAT ??_R4KeyAgreement@@6B@
rdata$r	SEGMENT
??_R4KeyAgreement@@6B@ DD 00H				; KeyAgreement::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVKeyAgreement@@@8
	DD	FLAT:??_R3KeyAgreement@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ASN1Object@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ASN1Object@CryptoPP@@8 DD FLAT:??_R0?AVASN1Object@CryptoPP@@@8 ; CryptoPP::ASN1Object::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ASN1Object@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2ASN1Object@CryptoPP@@8
rdata$r	SEGMENT
??_R2ASN1Object@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@ASN1Object@CryptoPP@@8 ; CryptoPP::ASN1Object::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ASN1Object@CryptoPP@@8
rdata$r	SEGMENT
??_R3ASN1Object@CryptoPP@@8 DD 00H			; CryptoPP::ASN1Object::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ASN1Object@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVASN1Object@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVASN1Object@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ASN1Object `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVASN1Object@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@AuthenticatedKeyAgreementDomain@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AuthenticatedKeyAgreementDomain@CryptoPP@@8 DD FLAT:??_R0?AVAuthenticatedKeyAgreementDomain@CryptoPP@@@8 ; CryptoPP::AuthenticatedKeyAgreementDomain::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AuthenticatedKeyAgreementDomain@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2AuthenticatedKeyAgreementDomain@CryptoPP@@8
rdata$r	SEGMENT
??_R2AuthenticatedKeyAgreementDomain@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@AuthenticatedKeyAgreementDomain@CryptoPP@@8 ; CryptoPP::AuthenticatedKeyAgreementDomain::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@KeyAgreementAlgorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@AsymmetricAlgorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3AuthenticatedKeyAgreementDomain@CryptoPP@@8
rdata$r	SEGMENT
??_R3AuthenticatedKeyAgreementDomain@CryptoPP@@8 DD 00H	; CryptoPP::AuthenticatedKeyAgreementDomain::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2AuthenticatedKeyAgreementDomain@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAuthenticatedKeyAgreementDomain@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVAuthenticatedKeyAgreementDomain@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AuthenticatedKeyAgreementDomain `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAuthenticatedKeyAgreementDomain@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@SimpleKeyAgreementDomain@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SimpleKeyAgreementDomain@CryptoPP@@8 DD FLAT:??_R0?AVSimpleKeyAgreementDomain@CryptoPP@@@8 ; CryptoPP::SimpleKeyAgreementDomain::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SimpleKeyAgreementDomain@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2SimpleKeyAgreementDomain@CryptoPP@@8
rdata$r	SEGMENT
??_R2SimpleKeyAgreementDomain@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@SimpleKeyAgreementDomain@CryptoPP@@8 ; CryptoPP::SimpleKeyAgreementDomain::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@KeyAgreementAlgorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@AsymmetricAlgorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3SimpleKeyAgreementDomain@CryptoPP@@8
rdata$r	SEGMENT
??_R3SimpleKeyAgreementDomain@CryptoPP@@8 DD 00H	; CryptoPP::SimpleKeyAgreementDomain::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2SimpleKeyAgreementDomain@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSimpleKeyAgreementDomain@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVSimpleKeyAgreementDomain@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SimpleKeyAgreementDomain `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSimpleKeyAgreementDomain@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@KeyAgreementAlgorithm@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@KeyAgreementAlgorithm@CryptoPP@@8 DD FLAT:??_R0?AVKeyAgreementAlgorithm@CryptoPP@@@8 ; CryptoPP::KeyAgreementAlgorithm::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3KeyAgreementAlgorithm@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2KeyAgreementAlgorithm@CryptoPP@@8
rdata$r	SEGMENT
??_R2KeyAgreementAlgorithm@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@KeyAgreementAlgorithm@CryptoPP@@8 ; CryptoPP::KeyAgreementAlgorithm::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@AsymmetricAlgorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3KeyAgreementAlgorithm@CryptoPP@@8
rdata$r	SEGMENT
??_R3KeyAgreementAlgorithm@CryptoPP@@8 DD 00H		; CryptoPP::KeyAgreementAlgorithm::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2KeyAgreementAlgorithm@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVKeyAgreementAlgorithm@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVKeyAgreementAlgorithm@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::KeyAgreementAlgorithm `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVKeyAgreementAlgorithm@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@AsymmetricAlgorithm@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AsymmetricAlgorithm@CryptoPP@@8 DD FLAT:??_R0?AVAsymmetricAlgorithm@CryptoPP@@@8 ; CryptoPP::AsymmetricAlgorithm::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AsymmetricAlgorithm@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2AsymmetricAlgorithm@CryptoPP@@8
rdata$r	SEGMENT
??_R2AsymmetricAlgorithm@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@AsymmetricAlgorithm@CryptoPP@@8 ; CryptoPP::AsymmetricAlgorithm::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3AsymmetricAlgorithm@CryptoPP@@8
rdata$r	SEGMENT
??_R3AsymmetricAlgorithm@CryptoPP@@8 DD 00H		; CryptoPP::AsymmetricAlgorithm::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2AsymmetricAlgorithm@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAsymmetricAlgorithm@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVAsymmetricAlgorithm@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AsymmetricAlgorithm `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAsymmetricAlgorithm@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CryptoParameters@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CryptoParameters@CryptoPP@@8 DD FLAT:??_R0?AVCryptoParameters@CryptoPP@@@8 ; CryptoPP::CryptoParameters::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CryptoParameters@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2CryptoParameters@CryptoPP@@8
rdata$r	SEGMENT
??_R2CryptoParameters@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@CryptoParameters@CryptoPP@@8 ; CryptoPP::CryptoParameters::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@GeneratableCryptoMaterial@CryptoPP@@8
	DD	FLAT:??_R1A@33FA@CryptoMaterial@CryptoPP@@8
	DD	FLAT:??_R1A@33EA@NameValuePairs@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3CryptoParameters@CryptoPP@@8
rdata$r	SEGMENT
??_R3CryptoParameters@CryptoPP@@8 DD 00H		; CryptoPP::CryptoParameters::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CryptoParameters@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCryptoParameters@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVCryptoParameters@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CryptoParameters `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCryptoParameters@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@33EA@NameValuePairs@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@33EA@NameValuePairs@CryptoPP@@8 DD FLAT:??_R0?AVNameValuePairs@CryptoPP@@@8 ; CryptoPP::NameValuePairs::`RTTI Base Class Descriptor at (0,4,4,64)'
	DD	00H
	DD	00H
	DD	04H
	DD	04H
	DD	040H
	DD	FLAT:??_R3NameValuePairs@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@33FA@CryptoMaterial@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@33FA@CryptoMaterial@CryptoPP@@8 DD FLAT:??_R0?AVCryptoMaterial@CryptoPP@@@8 ; CryptoPP::CryptoMaterial::`RTTI Base Class Descriptor at (0,4,4,80)'
	DD	01H
	DD	00H
	DD	04H
	DD	04H
	DD	050H
	DD	FLAT:??_R3CryptoMaterial@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@GeneratableCryptoMaterial@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GeneratableCryptoMaterial@CryptoPP@@8 DD FLAT:??_R0?AVGeneratableCryptoMaterial@CryptoPP@@@8 ; CryptoPP::GeneratableCryptoMaterial::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GeneratableCryptoMaterial@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2GeneratableCryptoMaterial@CryptoPP@@8
rdata$r	SEGMENT
??_R2GeneratableCryptoMaterial@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@GeneratableCryptoMaterial@CryptoPP@@8 ; CryptoPP::GeneratableCryptoMaterial::`RTTI Base Class Array'
	DD	FLAT:??_R1A@33FA@CryptoMaterial@CryptoPP@@8
	DD	FLAT:??_R1A@33EA@NameValuePairs@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3GeneratableCryptoMaterial@CryptoPP@@8
rdata$r	SEGMENT
??_R3GeneratableCryptoMaterial@CryptoPP@@8 DD 00H	; CryptoPP::GeneratableCryptoMaterial::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2GeneratableCryptoMaterial@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGeneratableCryptoMaterial@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVGeneratableCryptoMaterial@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::GeneratableCryptoMaterial `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGeneratableCryptoMaterial@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@InvalidMaterial@CryptoMaterial@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InvalidMaterial@CryptoMaterial@CryptoPP@@8 DD FLAT:??_R0?AVInvalidMaterial@CryptoMaterial@CryptoPP@@@8 ; CryptoPP::CryptoMaterial::InvalidMaterial::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3InvalidMaterial@CryptoMaterial@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2InvalidMaterial@CryptoMaterial@CryptoPP@@8
rdata$r	SEGMENT
??_R2InvalidMaterial@CryptoMaterial@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@InvalidMaterial@CryptoMaterial@CryptoPP@@8 ; CryptoPP::CryptoMaterial::InvalidMaterial::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@InvalidDataFormat@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Exception@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3InvalidMaterial@CryptoMaterial@CryptoPP@@8
rdata$r	SEGMENT
??_R3InvalidMaterial@CryptoMaterial@CryptoPP@@8 DD 00H	; CryptoPP::CryptoMaterial::InvalidMaterial::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2InvalidMaterial@CryptoMaterial@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4InvalidMaterial@CryptoMaterial@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4InvalidMaterial@CryptoMaterial@CryptoPP@@6B@ DD 00H ; CryptoPP::CryptoMaterial::InvalidMaterial::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVInvalidMaterial@CryptoMaterial@CryptoPP@@@8
	DD	FLAT:??_R3InvalidMaterial@CryptoMaterial@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CryptoMaterial@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CryptoMaterial@CryptoPP@@8 DD FLAT:??_R0?AVCryptoMaterial@CryptoPP@@@8 ; CryptoPP::CryptoMaterial::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CryptoMaterial@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2CryptoMaterial@CryptoPP@@8
rdata$r	SEGMENT
??_R2CryptoMaterial@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@CryptoMaterial@CryptoPP@@8 ; CryptoPP::CryptoMaterial::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@NameValuePairs@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3CryptoMaterial@CryptoPP@@8
rdata$r	SEGMENT
??_R3CryptoMaterial@CryptoPP@@8 DD 00H			; CryptoPP::CryptoMaterial::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CryptoMaterial@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCryptoMaterial@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVCryptoMaterial@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CryptoMaterial `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCryptoMaterial@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R13?0A@EA@StreamTransformation@CryptoPP@@8
rdata$r	SEGMENT
??_R13?0A@EA@StreamTransformation@CryptoPP@@8 DD FLAT:??_R0?AVStreamTransformation@CryptoPP@@@8 ; CryptoPP::StreamTransformation::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	02H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3StreamTransformation@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8 DD FLAT:??_R0?AVSymmetricCipher@CryptoPP@@@8 ; CryptoPP::SymmetricCipher::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SymmetricCipher@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2SymmetricCipher@CryptoPP@@8
rdata$r	SEGMENT
??_R2SymmetricCipher@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@SymmetricCipher@CryptoPP@@8 ; CryptoPP::SymmetricCipher::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@StreamTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3SymmetricCipher@CryptoPP@@8
rdata$r	SEGMENT
??_R3SymmetricCipher@CryptoPP@@8 DD 00H			; CryptoPP::SymmetricCipher::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2SymmetricCipher@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSymmetricCipher@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVSymmetricCipher@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SymmetricCipher `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSymmetricCipher@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R13?0A@EA@Clonable@CryptoPP@@8
rdata$r	SEGMENT
??_R13?0A@EA@Clonable@CryptoPP@@8 DD FLAT:??_R0?AVClonable@CryptoPP@@@8 ; CryptoPP::Clonable::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@Algorithm@CryptoPP@@8
rdata$r	SEGMENT
??_R13?0A@EA@Algorithm@CryptoPP@@8 DD FLAT:??_R0?AVAlgorithm@CryptoPP@@@8 ; CryptoPP::Algorithm::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Algorithm@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@BlockTransformation@CryptoPP@@8
rdata$r	SEGMENT
??_R13?0A@EA@BlockTransformation@CryptoPP@@8 DD FLAT:??_R0?AVBlockTransformation@CryptoPP@@@8 ; CryptoPP::BlockTransformation::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	02H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3BlockTransformation@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BlockCipher@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BlockCipher@CryptoPP@@8 DD FLAT:??_R0?AVBlockCipher@CryptoPP@@@8 ; CryptoPP::BlockCipher::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3BlockCipher@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2BlockCipher@CryptoPP@@8
rdata$r	SEGMENT
??_R2BlockCipher@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@BlockCipher@CryptoPP@@8 ; CryptoPP::BlockCipher::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@BlockTransformation@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R13?0A@EA@Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3BlockCipher@CryptoPP@@8
rdata$r	SEGMENT
??_R3BlockCipher@CryptoPP@@8 DD 00H			; CryptoPP::BlockCipher::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	05H
	DD	FLAT:??_R2BlockCipher@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBlockCipher@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVBlockCipher@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockCipher `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBlockCipher@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@StreamTransformation@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StreamTransformation@CryptoPP@@8 DD FLAT:??_R0?AVStreamTransformation@CryptoPP@@@8 ; CryptoPP::StreamTransformation::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3StreamTransformation@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2StreamTransformation@CryptoPP@@8
rdata$r	SEGMENT
??_R2StreamTransformation@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@StreamTransformation@CryptoPP@@8 ; CryptoPP::StreamTransformation::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3StreamTransformation@CryptoPP@@8
rdata$r	SEGMENT
??_R3StreamTransformation@CryptoPP@@8 DD 00H		; CryptoPP::StreamTransformation::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2StreamTransformation@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStreamTransformation@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVStreamTransformation@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::StreamTransformation `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVStreamTransformation@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@BlockTransformation@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BlockTransformation@CryptoPP@@8 DD FLAT:??_R0?AVBlockTransformation@CryptoPP@@@8 ; CryptoPP::BlockTransformation::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3BlockTransformation@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2BlockTransformation@CryptoPP@@8
rdata$r	SEGMENT
??_R2BlockTransformation@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@BlockTransformation@CryptoPP@@8 ; CryptoPP::BlockTransformation::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3BlockTransformation@CryptoPP@@8
rdata$r	SEGMENT
??_R3BlockTransformation@CryptoPP@@8 DD 00H		; CryptoPP::BlockTransformation::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2BlockTransformation@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBlockTransformation@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVBlockTransformation@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::BlockTransformation `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBlockTransformation@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8 DD FLAT:??_R0?AVSimpleKeyingInterface@CryptoPP@@@8 ; CryptoPP::SimpleKeyingInterface::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SimpleKeyingInterface@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2SimpleKeyingInterface@CryptoPP@@8
rdata$r	SEGMENT
??_R2SimpleKeyingInterface@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@SimpleKeyingInterface@CryptoPP@@8 ; CryptoPP::SimpleKeyingInterface::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SimpleKeyingInterface@CryptoPP@@8
rdata$r	SEGMENT
??_R3SimpleKeyingInterface@CryptoPP@@8 DD 00H		; CryptoPP::SimpleKeyingInterface::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SimpleKeyingInterface@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSimpleKeyingInterface@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVSimpleKeyingInterface@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SimpleKeyingInterface `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSimpleKeyingInterface@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@ValueTypeMismatch@NameValuePairs@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ValueTypeMismatch@NameValuePairs@CryptoPP@@8 DD FLAT:??_R0?AVValueTypeMismatch@NameValuePairs@CryptoPP@@@8 ; CryptoPP::NameValuePairs::ValueTypeMismatch::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ValueTypeMismatch@NameValuePairs@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2ValueTypeMismatch@NameValuePairs@CryptoPP@@8
rdata$r	SEGMENT
??_R2ValueTypeMismatch@NameValuePairs@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@ValueTypeMismatch@NameValuePairs@CryptoPP@@8 ; CryptoPP::NameValuePairs::ValueTypeMismatch::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@InvalidArgument@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Exception@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ValueTypeMismatch@NameValuePairs@CryptoPP@@8
rdata$r	SEGMENT
??_R3ValueTypeMismatch@NameValuePairs@CryptoPP@@8 DD 00H ; CryptoPP::NameValuePairs::ValueTypeMismatch::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2ValueTypeMismatch@NameValuePairs@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4ValueTypeMismatch@NameValuePairs@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4ValueTypeMismatch@NameValuePairs@CryptoPP@@6B@ DD 00H ; CryptoPP::NameValuePairs::ValueTypeMismatch::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVValueTypeMismatch@NameValuePairs@CryptoPP@@@8
	DD	FLAT:??_R3ValueTypeMismatch@NameValuePairs@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@NameValuePairs@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NameValuePairs@CryptoPP@@8 DD FLAT:??_R0?AVNameValuePairs@CryptoPP@@@8 ; CryptoPP::NameValuePairs::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NameValuePairs@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2NameValuePairs@CryptoPP@@8
rdata$r	SEGMENT
??_R2NameValuePairs@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@NameValuePairs@CryptoPP@@8 ; CryptoPP::NameValuePairs::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3NameValuePairs@CryptoPP@@8
rdata$r	SEGMENT
??_R3NameValuePairs@CryptoPP@@8 DD 00H			; CryptoPP::NameValuePairs::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2NameValuePairs@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNameValuePairs@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVNameValuePairs@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::NameValuePairs `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNameValuePairs@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@NotImplemented@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@NotImplemented@CryptoPP@@8 DD FLAT:??_R0?AVNotImplemented@CryptoPP@@@8 ; CryptoPP::NotImplemented::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3NotImplemented@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2NotImplemented@CryptoPP@@8
rdata$r	SEGMENT
??_R2NotImplemented@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@NotImplemented@CryptoPP@@8 ; CryptoPP::NotImplemented::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3NotImplemented@CryptoPP@@8
rdata$r	SEGMENT
??_R3NotImplemented@CryptoPP@@8 DD 00H			; CryptoPP::NotImplemented::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2NotImplemented@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4NotImplemented@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4NotImplemented@CryptoPP@@6B@ DD 00H		; CryptoPP::NotImplemented::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVNotImplemented@CryptoPP@@@8
	DD	FLAT:??_R3NotImplemented@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@InvalidDataFormat@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InvalidDataFormat@CryptoPP@@8 DD FLAT:??_R0?AVInvalidDataFormat@CryptoPP@@@8 ; CryptoPP::InvalidDataFormat::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3InvalidDataFormat@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2InvalidDataFormat@CryptoPP@@8
rdata$r	SEGMENT
??_R2InvalidDataFormat@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@InvalidDataFormat@CryptoPP@@8 ; CryptoPP::InvalidDataFormat::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3InvalidDataFormat@CryptoPP@@8
rdata$r	SEGMENT
??_R3InvalidDataFormat@CryptoPP@@8 DD 00H		; CryptoPP::InvalidDataFormat::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2InvalidDataFormat@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4InvalidDataFormat@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4InvalidDataFormat@CryptoPP@@6B@ DD 00H		; CryptoPP::InvalidDataFormat::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVInvalidDataFormat@CryptoPP@@@8
	DD	FLAT:??_R3InvalidDataFormat@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@InvalidArgument@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InvalidArgument@CryptoPP@@8 DD FLAT:??_R0?AVInvalidArgument@CryptoPP@@@8 ; CryptoPP::InvalidArgument::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3InvalidArgument@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2InvalidArgument@CryptoPP@@8
rdata$r	SEGMENT
??_R2InvalidArgument@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@InvalidArgument@CryptoPP@@8 ; CryptoPP::InvalidArgument::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3InvalidArgument@CryptoPP@@8
rdata$r	SEGMENT
??_R3InvalidArgument@CryptoPP@@8 DD 00H			; CryptoPP::InvalidArgument::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2InvalidArgument@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4InvalidArgument@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4InvalidArgument@CryptoPP@@6B@ DD 00H		; CryptoPP::InvalidArgument::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVInvalidArgument@CryptoPP@@@8
	DD	FLAT:??_R3InvalidArgument@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@CryptoPP@@8 DD FLAT:??_R0?AVException@CryptoPP@@@8 ; CryptoPP::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Exception@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@CryptoPP@@8
rdata$r	SEGMENT
??_R2Exception@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Exception@CryptoPP@@8 ; CryptoPP::Exception::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3Exception@CryptoPP@@8
rdata$r	SEGMENT
??_R3Exception@CryptoPP@@8 DD 00H			; CryptoPP::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Exception@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R4Exception@CryptoPP@@6B@
rdata$r	SEGMENT
??_R4Exception@CryptoPP@@6B@ DD 00H			; CryptoPP::Exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVException@CryptoPP@@@8
	DD	FLAT:??_R3Exception@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Clonable@CryptoPP@@8
rdata$r	SEGMENT
??_R2Clonable@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Clonable@CryptoPP@@8 ; CryptoPP::Clonable::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Clonable@CryptoPP@@8
rdata$r	SEGMENT
??_R3Clonable@CryptoPP@@8 DD 00H			; CryptoPP::Clonable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVClonable@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVClonable@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::Clonable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVClonable@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@Clonable@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Clonable@CryptoPP@@8 DD FLAT:??_R0?AVClonable@CryptoPP@@@8 ; CryptoPP::Clonable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2Algorithm@CryptoPP@@8
rdata$r	SEGMENT
??_R2Algorithm@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@Algorithm@CryptoPP@@8 ; CryptoPP::Algorithm::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3Algorithm@CryptoPP@@8
rdata$r	SEGMENT
??_R3Algorithm@CryptoPP@@8 DD 00H			; CryptoPP::Algorithm::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Algorithm@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAlgorithm@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVAlgorithm@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::Algorithm `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAlgorithm@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@Algorithm@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Algorithm@CryptoPP@@8 DD FLAT:??_R0?AVAlgorithm@CryptoPP@@@8 ; CryptoPP::Algorithm::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Algorithm@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RandomNumberGenerator@CryptoPP@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RandomNumberGenerator@CryptoPP@@8 DD FLAT:??_R0?AVRandomNumberGenerator@CryptoPP@@@8 ; CryptoPP::RandomNumberGenerator::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RandomNumberGenerator@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R2RandomNumberGenerator@CryptoPP@@8
rdata$r	SEGMENT
??_R2RandomNumberGenerator@CryptoPP@@8 DD FLAT:??_R1A@?0A@EA@RandomNumberGenerator@CryptoPP@@8 ; CryptoPP::RandomNumberGenerator::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Algorithm@CryptoPP@@8
	DD	FLAT:??_R1A@?0A@EA@Clonable@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R3RandomNumberGenerator@CryptoPP@@8
rdata$r	SEGMENT
??_R3RandomNumberGenerator@CryptoPP@@8 DD 00H		; CryptoPP::RandomNumberGenerator::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2RandomNumberGenerator@CryptoPP@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRandomNumberGenerator@CryptoPP@@@8
data$rs	SEGMENT
??_R0?AVRandomNumberGenerator@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::RandomNumberGenerator `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRandomNumberGenerator@CryptoPP@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R0PAVDL_GroupParameters_GFP@CryptoPP@@@8
data$r	SEGMENT
??_R0PAVDL_GroupParameters_GFP@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::DL_GroupParameters_GFP * `RTTI Type Descriptor'
	DD	00H
	DB	'.PAVDL_GroupParameters_GFP@CryptoPP@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVDL_GroupParameters_IntegerBased@CryptoPP@@@8
data$r	SEGMENT
??_R0?AVDL_GroupParameters_IntegerBased@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::DL_GroupParameters_IntegerBased `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDL_GroupParameters_IntegerBased@CryptoPP@@', 00H
data$r	ENDS
;	COMDAT ??_C@_0N@EDONPEO@ThisPointer?3@
CONST	SEGMENT
??_C@_0N@EDONPEO@ThisPointer?3@ DB 'ThisPointer:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_R0?AV?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@8
data$r	SEGMENT
??_R0?AV?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::DL_GroupParameters<CryptoPP::Integer> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D'
	DB	'@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_C@_0DL@LFCPKOMM@AllocatorBase?3?5requested?5size?5w@
CONST	SEGMENT
??_C@_0DL@LFCPKOMM@AllocatorBase?3?5requested?5size?5w@ DB 'AllocatorBase'
	DB	': requested size would cause integer overflow', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02EPINMGPM@DH@
CONST	SEGMENT
??_C@_02EPINMGPM@DH@ DB 'DH', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GPBACPDH@DHC@
CONST	SEGMENT
??_C@_03GPBACPDH@DHC@ DB 'DHC', 00H			; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVDL_BadElement@CryptoPP@@@8??0DL_BadElement@CryptoPP@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVDL_BadElement@CryptoPP@@@8??0DL_BadElement@CryptoPP@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVDL_BadElement@CryptoPP@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0DL_BadElement@CryptoPP@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA4?AVDL_BadElement@CryptoPP@@
xdata$x	SEGMENT
__CTA4?AVDL_BadElement@CryptoPP@@ DD 04H
	DD	FLAT:__CT??_R0?AVDL_BadElement@CryptoPP@@@8??0DL_BadElement@CryptoPP@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVInvalidDataFormat@CryptoPP@@@8??0InvalidDataFormat@CryptoPP@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVException@CryptoPP@@@8??0Exception@CryptoPP@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI4?AVDL_BadElement@CryptoPP@@
xdata$x	SEGMENT
__TI4?AVDL_BadElement@CryptoPP@@ DD 00H
	DD	FLAT:??1DL_BadElement@CryptoPP@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA4?AVDL_BadElement@CryptoPP@@
xdata$x	ENDS
;	COMDAT ??_R0?AV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@@8
data$r	SEGMENT
??_R0?AV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomp'
	DB	'utation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@'
	DB	'CryptoPP@@@2@@CryptoPP@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVConstByteArrayParameter@CryptoPP@@@8
data$r	SEGMENT
??_R0?AVConstByteArrayParameter@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::ConstByteArrayParameter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVConstByteArrayParameter@CryptoPP@@', 00H
data$r	ENDS
;	COMDAT ??_C@_01KMDKNFGN@?1@
CONST	SEGMENT
??_C@_01KMDKNFGN@?1@ DB '/', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@POHHOAKA@ThisObject?3@
CONST	SEGMENT
??_C@_0M@POHHOAKA@ThisObject?3@ DB 'ThisObject:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_R0?AVDL_GroupParameters_GFP@CryptoPP@@@8
data$r	SEGMENT
??_R0?AVDL_GroupParameters_GFP@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::DL_GroupParameters_GFP `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDL_GroupParameters_GFP@CryptoPP@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVDL_BadElement@CryptoPP@@@8
data$r	SEGMENT
??_R0?AVDL_BadElement@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::DL_BadElement `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDL_BadElement@CryptoPP@@', 00H
data$r	ENDS
;	COMDAT ??_C@_0CD@OKCDBBIP@?3?5pairwise?5consistency?5test?5fai@
CONST	SEGMENT
??_C@_0CD@OKCDBBIP@?3?5pairwise?5consistency?5test?5fai@ DB ': pairwise c'
	DB	'onsistency test failed', 00H		; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVSelfTestFailure@CryptoPP@@@8??0SelfTestFailure@CryptoPP@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVSelfTestFailure@CryptoPP@@@8??0SelfTestFailure@CryptoPP@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVSelfTestFailure@CryptoPP@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0SelfTestFailure@CryptoPP@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVSelfTestFailure@CryptoPP@@@8
data$r	SEGMENT
??_R0?AVSelfTestFailure@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::SelfTestFailure `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSelfTestFailure@CryptoPP@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVSelfTestFailure@CryptoPP@@
xdata$x	SEGMENT
__CTA3?AVSelfTestFailure@CryptoPP@@ DD 03H
	DD	FLAT:__CT??_R0?AVSelfTestFailure@CryptoPP@@@8??0SelfTestFailure@CryptoPP@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVException@CryptoPP@@@8??0Exception@CryptoPP@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVSelfTestFailure@CryptoPP@@
xdata$x	SEGMENT
__TI3?AVSelfTestFailure@CryptoPP@@ DD 00H
	DD	FLAT:??1SelfTestFailure@CryptoPP@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVSelfTestFailure@CryptoPP@@
xdata$x	ENDS
;	COMDAT ??_7?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@6B@
CONST	SEGMENT
??_7?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@6B@ DD FLAT:??_R4?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@6B@ ; CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`vftable'
	DD	FLAT:?AgreeWithEphemeralPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@ABV32@@Z
	DD	FLAT:?AgreeWithStaticPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV32@_N1@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z
	DD	FLAT:?CanIncorporateEntropy@RandomNumberGenerator@CryptoPP@@UBE_NXZ
	DD	FLAT:?GenerateByte@RandomNumberGenerator@CryptoPP@@UAEEXZ
	DD	FLAT:?GenerateBit@RandomNumberGenerator@CryptoPP@@UAEIXZ
	DD	FLAT:?GenerateWord32@RandomNumberGenerator@CryptoPP@@UAEIII@Z
	DD	FLAT:?GenerateBlock@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEI@Z
	DD	FLAT:?DiscardBytes@RandomNumberGenerator@CryptoPP@@UAEXI@Z
	DD	FLAT:?GenerateIntoBufferedTransformation@RandomNumberGenerator@CryptoPP@@UAEXAAVBufferedTransformation@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
	DD	FLAT:?GetAlignment@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetBytesPerIteration@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetOptimalBlockSize@AdditiveCipherAbstractPolicy@CryptoPP@@UBEIXZ
	DD	FLAT:?GetIterationsToBuffer@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?WriteKeystream@CTR_ModePolicy@CryptoPP@@MAEXPAEI@Z
	DD	FLAT:?CanOperateKeystream@CTR_ModePolicy@CryptoPP@@MBE_NXZ
	DD	FLAT:?OperateKeystream@CTR_ModePolicy@CryptoPP@@MAEXW4KeystreamOperation@2@PAEPBEI@Z
	DD	FLAT:?CipherSetKey@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@EAEXABVNameValuePairs@2@PBEI@Z
	DD	FLAT:?CipherResynchronize@CTR_ModePolicy@CryptoPP@@MAEXPAEPBEI@Z
	DD	FLAT:?CipherIsRandomAccess@CTR_ModePolicy@CryptoPP@@UBE_NXZ
	DD	FLAT:?SeekToIteration@CTR_ModePolicy@CryptoPP@@MAEX_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?MandatoryBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalBlockSize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetOptimalBlockSizeUsed@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?ProcessData@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?ProcessLastBlock@StreamTransformation@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?MinLastBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsRandomAccess@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?Seek@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEX_K@Z
	DD	FLAT:?IsSelfInverting@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@CipherModeBase@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@CipherModeBase@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@CTR_ModePolicy@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@SymmetricCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@MAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z
	DD	FLAT:?ResizeBuffers@CipherModeBase@CryptoPP@@MAEXXZ
	DD	FLAT:?IncrementCounterBy256@CTR_ModePolicy@CryptoPP@@MAEXXZ
	DD	FLAT:?GetPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MBEABUAdditiveCipherAbstractPolicy@2@XZ
	DD	FLAT:?AccessPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MAEAAUAdditiveCipherAbstractPolicy@2@XZ
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@UBEPAVClonable@2@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?ProcessAndXorBlock@Enc@RC6@CryptoPP@@UBEXPBE0PAE@Z
	DD	FLAT:?BlockSize@?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsPermutation@BlockTransformation@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?OptimalNumberOfParallelBlocks@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?AdvancedProcessBlocks@BlockTransformation@CryptoPP@@UBEIPBE0PAEII@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@SimpleKeyingInterface@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@BlockCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@Base@RC6@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z
	DD	FLAT:?CanIncorporateEntropy@RandomNumberGenerator@CryptoPP@@UBE_NXZ
	DD	FLAT:?GenerateByte@RandomNumberGenerator@CryptoPP@@UAEEXZ
	DD	FLAT:?GenerateBit@RandomNumberGenerator@CryptoPP@@UAEIXZ
	DD	FLAT:?GenerateWord32@RandomNumberGenerator@CryptoPP@@UAEIII@Z
	DD	FLAT:?GenerateBlock@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEI@Z
	DD	FLAT:?DiscardBytes@RandomNumberGenerator@CryptoPP@@UAEXI@Z
	DD	FLAT:?GenerateIntoBufferedTransformation@RandomNumberGenerator@CryptoPP@@UAEXAAVBufferedTransformation@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
	DD	FLAT:?GetAlignment@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetBytesPerIteration@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetOptimalBlockSize@AdditiveCipherAbstractPolicy@CryptoPP@@UBEIXZ
	DD	FLAT:?GetIterationsToBuffer@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?WriteKeystream@CTR_ModePolicy@CryptoPP@@MAEXPAEI@Z
	DD	FLAT:?CanOperateKeystream@CTR_ModePolicy@CryptoPP@@MBE_NXZ
	DD	FLAT:?OperateKeystream@CTR_ModePolicy@CryptoPP@@MAEXW4KeystreamOperation@2@PAEPBEI@Z
	DD	FLAT:?CipherSetKey@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@EAEXABVNameValuePairs@2@PBEI@Z
	DD	FLAT:?CipherResynchronize@CTR_ModePolicy@CryptoPP@@MAEXPAEPBEI@Z
	DD	FLAT:?CipherIsRandomAccess@CTR_ModePolicy@CryptoPP@@UBE_NXZ
	DD	FLAT:?SeekToIteration@CTR_ModePolicy@CryptoPP@@MAEX_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?MandatoryBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalBlockSize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetOptimalBlockSizeUsed@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?ProcessData@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?ProcessLastBlock@StreamTransformation@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?MinLastBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsRandomAccess@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?Seek@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEX_K@Z
	DD	FLAT:?IsSelfInverting@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@CipherModeBase@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@CipherModeBase@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@CTR_ModePolicy@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@SymmetricCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@MAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z
	DD	FLAT:?ResizeBuffers@CipherModeBase@CryptoPP@@MAEXXZ
	DD	FLAT:?IncrementCounterBy256@CTR_ModePolicy@CryptoPP@@MAEXXZ
	DD	FLAT:?GetPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MBEABUAdditiveCipherAbstractPolicy@2@XZ
	DD	FLAT:?AccessPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MAEAAUAdditiveCipherAbstractPolicy@2@XZ
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@UBEPAVClonable@2@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?ProcessAndXorBlock@Enc@MARS@CryptoPP@@UBEXPBE0PAE@Z
	DD	FLAT:?BlockSize@?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsPermutation@BlockTransformation@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?OptimalNumberOfParallelBlocks@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?AdvancedProcessBlocks@BlockTransformation@CryptoPP@@UBEIPBE0PAEII@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@SimpleKeyingInterface@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@BlockCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@Base@MARS@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z
	DD	FLAT:?CanIncorporateEntropy@RandomNumberGenerator@CryptoPP@@UBE_NXZ
	DD	FLAT:?GenerateByte@RandomNumberGenerator@CryptoPP@@UAEEXZ
	DD	FLAT:?GenerateBit@RandomNumberGenerator@CryptoPP@@UAEIXZ
	DD	FLAT:?GenerateWord32@RandomNumberGenerator@CryptoPP@@UAEIII@Z
	DD	FLAT:?GenerateBlock@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEI@Z
	DD	FLAT:?DiscardBytes@RandomNumberGenerator@CryptoPP@@UAEXI@Z
	DD	FLAT:?GenerateIntoBufferedTransformation@RandomNumberGenerator@CryptoPP@@UAEXAAVBufferedTransformation@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
	DD	FLAT:?GetAlignment@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetBytesPerIteration@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetOptimalBlockSize@AdditiveCipherAbstractPolicy@CryptoPP@@UBEIXZ
	DD	FLAT:?GetIterationsToBuffer@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?WriteKeystream@CTR_ModePolicy@CryptoPP@@MAEXPAEI@Z
	DD	FLAT:?CanOperateKeystream@CTR_ModePolicy@CryptoPP@@MBE_NXZ
	DD	FLAT:?OperateKeystream@CTR_ModePolicy@CryptoPP@@MAEXW4KeystreamOperation@2@PAEPBEI@Z
	DD	FLAT:?CipherSetKey@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@EAEXABVNameValuePairs@2@PBEI@Z
	DD	FLAT:?CipherResynchronize@CTR_ModePolicy@CryptoPP@@MAEXPAEPBEI@Z
	DD	FLAT:?CipherIsRandomAccess@CTR_ModePolicy@CryptoPP@@UBE_NXZ
	DD	FLAT:?SeekToIteration@CTR_ModePolicy@CryptoPP@@MAEX_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?MandatoryBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalBlockSize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetOptimalBlockSizeUsed@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?ProcessData@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?ProcessLastBlock@StreamTransformation@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?MinLastBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsRandomAccess@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?Seek@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEX_K@Z
	DD	FLAT:?IsSelfInverting@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@CipherModeBase@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@CipherModeBase@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@CTR_ModePolicy@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@SymmetricCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@MAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z
	DD	FLAT:?ResizeBuffers@CipherModeBase@CryptoPP@@MAEXXZ
	DD	FLAT:?IncrementCounterBy256@CTR_ModePolicy@CryptoPP@@MAEXXZ
	DD	FLAT:?GetPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MBEABUAdditiveCipherAbstractPolicy@2@XZ
	DD	FLAT:?AccessPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MAEAAUAdditiveCipherAbstractPolicy@2@XZ
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@UBEPAVClonable@2@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?ProcessAndXorBlock@Enc@Twofish@CryptoPP@@UBEXPBE0PAE@Z
	DD	FLAT:?BlockSize@?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsPermutation@BlockTransformation@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?OptimalNumberOfParallelBlocks@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?AdvancedProcessBlocks@BlockTransformation@CryptoPP@@UBEIPBE0PAEII@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@SimpleKeyingInterface@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@BlockCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@Base@Twofish@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z
	DD	FLAT:?CanIncorporateEntropy@RandomNumberGenerator@CryptoPP@@UBE_NXZ
	DD	FLAT:?GenerateByte@RandomNumberGenerator@CryptoPP@@UAEEXZ
	DD	FLAT:?GenerateBit@RandomNumberGenerator@CryptoPP@@UAEIXZ
	DD	FLAT:?GenerateWord32@RandomNumberGenerator@CryptoPP@@UAEIII@Z
	DD	FLAT:?GenerateBlock@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEI@Z
	DD	FLAT:?DiscardBytes@RandomNumberGenerator@CryptoPP@@UAEXI@Z
	DD	FLAT:?GenerateIntoBufferedTransformation@RandomNumberGenerator@CryptoPP@@UAEXAAVBufferedTransformation@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
	DD	FLAT:?GetAlignment@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetBytesPerIteration@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetOptimalBlockSize@AdditiveCipherAbstractPolicy@CryptoPP@@UBEIXZ
	DD	FLAT:?GetIterationsToBuffer@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?WriteKeystream@CTR_ModePolicy@CryptoPP@@MAEXPAEI@Z
	DD	FLAT:?CanOperateKeystream@CTR_ModePolicy@CryptoPP@@MBE_NXZ
	DD	FLAT:?OperateKeystream@CTR_ModePolicy@CryptoPP@@MAEXW4KeystreamOperation@2@PAEPBEI@Z
	DD	FLAT:?CipherSetKey@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@EAEXABVNameValuePairs@2@PBEI@Z
	DD	FLAT:?CipherResynchronize@CTR_ModePolicy@CryptoPP@@MAEXPAEPBEI@Z
	DD	FLAT:?CipherIsRandomAccess@CTR_ModePolicy@CryptoPP@@UBE_NXZ
	DD	FLAT:?SeekToIteration@CTR_ModePolicy@CryptoPP@@MAEX_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?MandatoryBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalBlockSize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetOptimalBlockSizeUsed@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?ProcessData@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?ProcessLastBlock@StreamTransformation@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?MinLastBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsRandomAccess@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?Seek@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEX_K@Z
	DD	FLAT:?IsSelfInverting@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@CipherModeBase@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@CipherModeBase@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@CTR_ModePolicy@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@SymmetricCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@MAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z
	DD	FLAT:?ResizeBuffers@CipherModeBase@CryptoPP@@MAEXXZ
	DD	FLAT:?IncrementCounterBy256@CTR_ModePolicy@CryptoPP@@MAEXXZ
	DD	FLAT:?GetPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MBEABUAdditiveCipherAbstractPolicy@2@XZ
	DD	FLAT:?AccessPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MAEAAUAdditiveCipherAbstractPolicy@2@XZ
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@UBEPAVClonable@2@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?ProcessAndXorBlock@Enc@Serpent@CryptoPP@@UBEXPBE0PAE@Z
	DD	FLAT:?BlockSize@?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsPermutation@BlockTransformation@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?OptimalNumberOfParallelBlocks@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?AdvancedProcessBlocks@BlockTransformation@CryptoPP@@UBEIPBE0PAEII@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@SimpleKeyingInterface@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@BlockCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@Base@Serpent@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z
	DD	FLAT:?CanIncorporateEntropy@RandomNumberGenerator@CryptoPP@@UBE_NXZ
	DD	FLAT:?GenerateByte@RandomNumberGenerator@CryptoPP@@UAEEXZ
	DD	FLAT:?GenerateBit@RandomNumberGenerator@CryptoPP@@UAEIXZ
	DD	FLAT:?GenerateWord32@RandomNumberGenerator@CryptoPP@@UAEIII@Z
	DD	FLAT:?GenerateBlock@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEI@Z
	DD	FLAT:?DiscardBytes@RandomNumberGenerator@CryptoPP@@UAEXI@Z
	DD	FLAT:?GenerateIntoBufferedTransformation@RandomNumberGenerator@CryptoPP@@UAEXAAVBufferedTransformation@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
	DD	FLAT:?GetAlignment@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetBytesPerIteration@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetOptimalBlockSize@AdditiveCipherAbstractPolicy@CryptoPP@@UBEIXZ
	DD	FLAT:?GetIterationsToBuffer@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?WriteKeystream@CTR_ModePolicy@CryptoPP@@MAEXPAEI@Z
	DD	FLAT:?CanOperateKeystream@CTR_ModePolicy@CryptoPP@@MBE_NXZ
	DD	FLAT:?OperateKeystream@CTR_ModePolicy@CryptoPP@@MAEXW4KeystreamOperation@2@PAEPBEI@Z
	DD	FLAT:?CipherSetKey@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@EAEXABVNameValuePairs@2@PBEI@Z
	DD	FLAT:?CipherResynchronize@CTR_ModePolicy@CryptoPP@@MAEXPAEPBEI@Z
	DD	FLAT:?CipherIsRandomAccess@CTR_ModePolicy@CryptoPP@@UBE_NXZ
	DD	FLAT:?SeekToIteration@CTR_ModePolicy@CryptoPP@@MAEX_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?MandatoryBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalBlockSize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetOptimalBlockSizeUsed@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?ProcessData@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?ProcessLastBlock@StreamTransformation@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?MinLastBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsRandomAccess@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?Seek@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEX_K@Z
	DD	FLAT:?IsSelfInverting@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@CipherModeBase@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@CipherModeBase@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@CTR_ModePolicy@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@SymmetricCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@MAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z
	DD	FLAT:?ResizeBuffers@CipherModeBase@CryptoPP@@MAEXXZ
	DD	FLAT:?IncrementCounterBy256@CTR_ModePolicy@CryptoPP@@MAEXXZ
	DD	FLAT:?GetPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MBEABUAdditiveCipherAbstractPolicy@2@XZ
	DD	FLAT:?AccessPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MAEAAUAdditiveCipherAbstractPolicy@2@XZ
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@UBEPAVClonable@2@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?ProcessAndXorBlock@Base@CAST256@CryptoPP@@UBEXPBE0PAE@Z
	DD	FLAT:?BlockSize@?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsPermutation@BlockTransformation@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?OptimalNumberOfParallelBlocks@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?AdvancedProcessBlocks@BlockTransformation@CryptoPP@@UBEIPBE0PAEII@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@SimpleKeyingInterface@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@BlockCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@Base@CAST256@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z
	DD	FLAT:?CanIncorporateEntropy@RandomNumberGenerator@CryptoPP@@UBE_NXZ
	DD	FLAT:?GenerateByte@RandomNumberGenerator@CryptoPP@@UAEEXZ
	DD	FLAT:?GenerateBit@RandomNumberGenerator@CryptoPP@@UAEIXZ
	DD	FLAT:?GenerateWord32@RandomNumberGenerator@CryptoPP@@UAEIII@Z
	DD	FLAT:?GenerateBlock@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEI@Z
	DD	FLAT:?DiscardBytes@RandomNumberGenerator@CryptoPP@@UAEXI@Z
	DD	FLAT:?GenerateIntoBufferedTransformation@RandomNumberGenerator@CryptoPP@@UAEXAAVBufferedTransformation@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
	DD	FLAT:?GetAlignment@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetBytesPerIteration@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetOptimalBlockSize@AdditiveCipherAbstractPolicy@CryptoPP@@UBEIXZ
	DD	FLAT:?GetIterationsToBuffer@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?WriteKeystream@CTR_ModePolicy@CryptoPP@@MAEXPAEI@Z
	DD	FLAT:?CanOperateKeystream@CTR_ModePolicy@CryptoPP@@MBE_NXZ
	DD	FLAT:?OperateKeystream@CTR_ModePolicy@CryptoPP@@MAEXW4KeystreamOperation@2@PAEPBEI@Z
	DD	FLAT:?CipherSetKey@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@EAEXABVNameValuePairs@2@PBEI@Z
	DD	FLAT:?CipherResynchronize@CTR_ModePolicy@CryptoPP@@MAEXPAEPBEI@Z
	DD	FLAT:?CipherIsRandomAccess@CTR_ModePolicy@CryptoPP@@UBE_NXZ
	DD	FLAT:?SeekToIteration@CTR_ModePolicy@CryptoPP@@MAEX_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?MandatoryBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalBlockSize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetOptimalBlockSizeUsed@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?ProcessData@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?ProcessLastBlock@StreamTransformation@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?MinLastBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsRandomAccess@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?Seek@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEX_K@Z
	DD	FLAT:?IsSelfInverting@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@CipherModeBase@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@CipherModeBase@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@CTR_ModePolicy@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@SymmetricCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@MAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z
	DD	FLAT:?ResizeBuffers@CipherModeBase@CryptoPP@@MAEXXZ
	DD	FLAT:?IncrementCounterBy256@CTR_ModePolicy@CryptoPP@@MAEXXZ
	DD	FLAT:?GetPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MBEABUAdditiveCipherAbstractPolicy@2@XZ
	DD	FLAT:?AccessPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MAEAAUAdditiveCipherAbstractPolicy@2@XZ
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@UBEPAVClonable@2@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?ProcessAndXorBlock@Base@IDEA@CryptoPP@@UBEXPBE0PAE@Z
	DD	FLAT:?BlockSize@?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@Base@IDEA@CryptoPP@@UBEIXZ
	DD	FLAT:?IsPermutation@BlockTransformation@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?OptimalNumberOfParallelBlocks@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?AdvancedProcessBlocks@BlockTransformation@CryptoPP@@UBEIPBE0PAEII@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@SimpleKeyingInterface@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@BlockCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@Base@IDEA@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z
	DD	FLAT:?CanIncorporateEntropy@RandomNumberGenerator@CryptoPP@@UBE_NXZ
	DD	FLAT:?GenerateByte@RandomNumberGenerator@CryptoPP@@UAEEXZ
	DD	FLAT:?GenerateBit@RandomNumberGenerator@CryptoPP@@UAEIXZ
	DD	FLAT:?GenerateWord32@RandomNumberGenerator@CryptoPP@@UAEIII@Z
	DD	FLAT:?GenerateBlock@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEI@Z
	DD	FLAT:?DiscardBytes@RandomNumberGenerator@CryptoPP@@UAEXI@Z
	DD	FLAT:?GenerateIntoBufferedTransformation@RandomNumberGenerator@CryptoPP@@UAEXAAVBufferedTransformation@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
	DD	FLAT:?GetAlignment@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetBytesPerIteration@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetOptimalBlockSize@AdditiveCipherAbstractPolicy@CryptoPP@@UBEIXZ
	DD	FLAT:?GetIterationsToBuffer@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?WriteKeystream@CTR_ModePolicy@CryptoPP@@MAEXPAEI@Z
	DD	FLAT:?CanOperateKeystream@CTR_ModePolicy@CryptoPP@@MBE_NXZ
	DD	FLAT:?OperateKeystream@CTR_ModePolicy@CryptoPP@@MAEXW4KeystreamOperation@2@PAEPBEI@Z
	DD	FLAT:?CipherSetKey@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@EAEXABVNameValuePairs@2@PBEI@Z
	DD	FLAT:?CipherResynchronize@CTR_ModePolicy@CryptoPP@@MAEXPAEPBEI@Z
	DD	FLAT:?CipherIsRandomAccess@CTR_ModePolicy@CryptoPP@@UBE_NXZ
	DD	FLAT:?SeekToIteration@CTR_ModePolicy@CryptoPP@@MAEX_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?MandatoryBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalBlockSize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetOptimalBlockSizeUsed@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?ProcessData@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?ProcessLastBlock@StreamTransformation@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?MinLastBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsRandomAccess@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?Seek@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEX_K@Z
	DD	FLAT:?IsSelfInverting@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@CipherModeBase@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@CipherModeBase@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@CTR_ModePolicy@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@SymmetricCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@MAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z
	DD	FLAT:?ResizeBuffers@CipherModeBase@CryptoPP@@MAEXXZ
	DD	FLAT:?IncrementCounterBy256@CTR_ModePolicy@CryptoPP@@MAEXXZ
	DD	FLAT:?GetPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MBEABUAdditiveCipherAbstractPolicy@2@XZ
	DD	FLAT:?AccessPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MAEAAUAdditiveCipherAbstractPolicy@2@XZ
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@UBEPAVClonable@2@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?ProcessAndXorBlock@Base@DES_EDE2@CryptoPP@@UBEXPBE0PAE@Z
	DD	FLAT:?BlockSize@?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsPermutation@BlockTransformation@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?OptimalNumberOfParallelBlocks@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?AdvancedProcessBlocks@BlockTransformation@CryptoPP@@UBEIPBE0PAEII@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@SimpleKeyingInterface@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@BlockCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@Base@DES_EDE2@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z
	DD	FLAT:?CanIncorporateEntropy@RandomNumberGenerator@CryptoPP@@UBE_NXZ
	DD	FLAT:?GenerateByte@RandomNumberGenerator@CryptoPP@@UAEEXZ
	DD	FLAT:?GenerateBit@RandomNumberGenerator@CryptoPP@@UAEIXZ
	DD	FLAT:?GenerateWord32@RandomNumberGenerator@CryptoPP@@UAEIII@Z
	DD	FLAT:?GenerateBlock@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEI@Z
	DD	FLAT:?DiscardBytes@RandomNumberGenerator@CryptoPP@@UAEXI@Z
	DD	FLAT:?GenerateIntoBufferedTransformation@RandomNumberGenerator@CryptoPP@@UAEXAAVBufferedTransformation@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
	DD	FLAT:?GetAlignment@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetBytesPerIteration@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetOptimalBlockSize@AdditiveCipherAbstractPolicy@CryptoPP@@UBEIXZ
	DD	FLAT:?GetIterationsToBuffer@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?WriteKeystream@CTR_ModePolicy@CryptoPP@@MAEXPAEI@Z
	DD	FLAT:?CanOperateKeystream@CTR_ModePolicy@CryptoPP@@MBE_NXZ
	DD	FLAT:?OperateKeystream@CTR_ModePolicy@CryptoPP@@MAEXW4KeystreamOperation@2@PAEPBEI@Z
	DD	FLAT:?CipherSetKey@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@EAEXABVNameValuePairs@2@PBEI@Z
	DD	FLAT:?CipherResynchronize@CTR_ModePolicy@CryptoPP@@MAEXPAEPBEI@Z
	DD	FLAT:?CipherIsRandomAccess@CTR_ModePolicy@CryptoPP@@UBE_NXZ
	DD	FLAT:?SeekToIteration@CTR_ModePolicy@CryptoPP@@MAEX_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?MandatoryBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalBlockSize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetOptimalBlockSizeUsed@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?ProcessData@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?ProcessLastBlock@StreamTransformation@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?MinLastBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsRandomAccess@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?Seek@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEX_K@Z
	DD	FLAT:?IsSelfInverting@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@CipherModeBase@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@CipherModeBase@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@CTR_ModePolicy@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@SymmetricCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@MAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z
	DD	FLAT:?ResizeBuffers@CipherModeBase@CryptoPP@@MAEXXZ
	DD	FLAT:?IncrementCounterBy256@CTR_ModePolicy@CryptoPP@@MAEXXZ
	DD	FLAT:?GetPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MBEABUAdditiveCipherAbstractPolicy@2@XZ
	DD	FLAT:?AccessPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MAEAAUAdditiveCipherAbstractPolicy@2@XZ
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@UBEPAVClonable@2@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?ProcessAndXorBlock@Base@Camellia@CryptoPP@@UBEXPBE0PAE@Z
	DD	FLAT:?BlockSize@?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsPermutation@BlockTransformation@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?OptimalNumberOfParallelBlocks@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?AdvancedProcessBlocks@BlockTransformation@CryptoPP@@UBEIPBE0PAEII@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@SimpleKeyingInterface@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@BlockCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@Base@Camellia@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z
	DD	FLAT:?CanIncorporateEntropy@RandomNumberGenerator@CryptoPP@@UBE_NXZ
	DD	FLAT:?GenerateByte@RandomNumberGenerator@CryptoPP@@UAEEXZ
	DD	FLAT:?GenerateBit@RandomNumberGenerator@CryptoPP@@UAEIXZ
	DD	FLAT:?GenerateWord32@RandomNumberGenerator@CryptoPP@@UAEIII@Z
	DD	FLAT:?GenerateBlock@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEI@Z
	DD	FLAT:?DiscardBytes@RandomNumberGenerator@CryptoPP@@UAEXI@Z
	DD	FLAT:?GenerateIntoBufferedTransformation@RandomNumberGenerator@CryptoPP@@UAEXAAVBufferedTransformation@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
	DD	FLAT:?GetAlignment@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetBytesPerIteration@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetOptimalBlockSize@AdditiveCipherAbstractPolicy@CryptoPP@@UBEIXZ
	DD	FLAT:?GetIterationsToBuffer@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?WriteKeystream@CTR_ModePolicy@CryptoPP@@MAEXPAEI@Z
	DD	FLAT:?CanOperateKeystream@CTR_ModePolicy@CryptoPP@@MBE_NXZ
	DD	FLAT:?OperateKeystream@CTR_ModePolicy@CryptoPP@@MAEXW4KeystreamOperation@2@PAEPBEI@Z
	DD	FLAT:?CipherSetKey@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@EAEXABVNameValuePairs@2@PBEI@Z
	DD	FLAT:?CipherResynchronize@CTR_ModePolicy@CryptoPP@@MAEXPAEPBEI@Z
	DD	FLAT:?CipherIsRandomAccess@CTR_ModePolicy@CryptoPP@@UBE_NXZ
	DD	FLAT:?SeekToIteration@CTR_ModePolicy@CryptoPP@@MAEX_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?MandatoryBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalBlockSize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetOptimalBlockSizeUsed@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?ProcessData@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?ProcessLastBlock@StreamTransformation@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?MinLastBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsRandomAccess@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?Seek@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEX_K@Z
	DD	FLAT:?IsSelfInverting@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@CipherModeBase@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@CipherModeBase@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@CTR_ModePolicy@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@SymmetricCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@MAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z
	DD	FLAT:?ResizeBuffers@CipherModeBase@CryptoPP@@MAEXXZ
	DD	FLAT:?IncrementCounterBy256@CTR_ModePolicy@CryptoPP@@MAEXXZ
	DD	FLAT:?GetPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MBEABUAdditiveCipherAbstractPolicy@2@XZ
	DD	FLAT:?AccessPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MAEAAUAdditiveCipherAbstractPolicy@2@XZ
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@UBEPAVClonable@2@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?ProcessAndXorBlock@Base@SEED@CryptoPP@@UBEXPBE0PAE@Z
	DD	FLAT:?BlockSize@?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsPermutation@BlockTransformation@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?OptimalNumberOfParallelBlocks@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?AdvancedProcessBlocks@BlockTransformation@CryptoPP@@UBEIPBE0PAEII@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@SimpleKeyingInterface@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@BlockCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@Base@SEED@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z
	DD	FLAT:?CanIncorporateEntropy@RandomNumberGenerator@CryptoPP@@UBE_NXZ
	DD	FLAT:?GenerateByte@RandomNumberGenerator@CryptoPP@@UAEEXZ
	DD	FLAT:?GenerateBit@RandomNumberGenerator@CryptoPP@@UAEIXZ
	DD	FLAT:?GenerateWord32@RandomNumberGenerator@CryptoPP@@UAEIII@Z
	DD	FLAT:?GenerateBlock@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEI@Z
	DD	FLAT:?DiscardBytes@RandomNumberGenerator@CryptoPP@@UAEXI@Z
	DD	FLAT:?GenerateIntoBufferedTransformation@RandomNumberGenerator@CryptoPP@@UAEXAAVBufferedTransformation@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
	DD	FLAT:?GetAlignment@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetBytesPerIteration@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetOptimalBlockSize@AdditiveCipherAbstractPolicy@CryptoPP@@UBEIXZ
	DD	FLAT:?GetIterationsToBuffer@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?WriteKeystream@CTR_ModePolicy@CryptoPP@@MAEXPAEI@Z
	DD	FLAT:?CanOperateKeystream@CTR_ModePolicy@CryptoPP@@MBE_NXZ
	DD	FLAT:?OperateKeystream@CTR_ModePolicy@CryptoPP@@MAEXW4KeystreamOperation@2@PAEPBEI@Z
	DD	FLAT:?CipherSetKey@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@EAEXABVNameValuePairs@2@PBEI@Z
	DD	FLAT:?CipherResynchronize@CTR_ModePolicy@CryptoPP@@MAEXPAEPBEI@Z
	DD	FLAT:?CipherIsRandomAccess@CTR_ModePolicy@CryptoPP@@UBE_NXZ
	DD	FLAT:?SeekToIteration@CTR_ModePolicy@CryptoPP@@MAEX_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?MandatoryBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalBlockSize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetOptimalBlockSizeUsed@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?ProcessData@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?ProcessLastBlock@StreamTransformation@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?MinLastBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsRandomAccess@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?Seek@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEX_K@Z
	DD	FLAT:?IsSelfInverting@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@CipherModeBase@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@CipherModeBase@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@CTR_ModePolicy@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@SymmetricCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@MAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z
	DD	FLAT:?ResizeBuffers@CipherModeBase@CryptoPP@@MAEXXZ
	DD	FLAT:?IncrementCounterBy256@CTR_ModePolicy@CryptoPP@@MAEXXZ
	DD	FLAT:?GetPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MBEABUAdditiveCipherAbstractPolicy@2@XZ
	DD	FLAT:?AccessPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MAEAAUAdditiveCipherAbstractPolicy@2@XZ
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@UBEPAVClonable@2@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?ProcessAndXorBlock@Enc@RC5@CryptoPP@@UBEXPBE0PAE@Z
	DD	FLAT:?BlockSize@?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsPermutation@BlockTransformation@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?OptimalNumberOfParallelBlocks@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?AdvancedProcessBlocks@BlockTransformation@CryptoPP@@UBEIPBE0PAEII@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@SimpleKeyingInterface@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@BlockCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@Base@RC5@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z
	DD	FLAT:?CanIncorporateEntropy@RandomNumberGenerator@CryptoPP@@UBE_NXZ
	DD	FLAT:?GenerateByte@RandomNumberGenerator@CryptoPP@@UAEEXZ
	DD	FLAT:?GenerateBit@RandomNumberGenerator@CryptoPP@@UAEIXZ
	DD	FLAT:?GenerateWord32@RandomNumberGenerator@CryptoPP@@UAEIII@Z
	DD	FLAT:?GenerateBlock@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEI@Z
	DD	FLAT:?DiscardBytes@RandomNumberGenerator@CryptoPP@@UAEXI@Z
	DD	FLAT:?GenerateIntoBufferedTransformation@RandomNumberGenerator@CryptoPP@@UAEXAAVBufferedTransformation@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
	DD	FLAT:?GetAlignment@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetBytesPerIteration@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetOptimalBlockSize@AdditiveCipherAbstractPolicy@CryptoPP@@UBEIXZ
	DD	FLAT:?GetIterationsToBuffer@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?WriteKeystream@CTR_ModePolicy@CryptoPP@@MAEXPAEI@Z
	DD	FLAT:?CanOperateKeystream@CTR_ModePolicy@CryptoPP@@MBE_NXZ
	DD	FLAT:?OperateKeystream@CTR_ModePolicy@CryptoPP@@MAEXW4KeystreamOperation@2@PAEPBEI@Z
	DD	FLAT:?CipherSetKey@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@EAEXABVNameValuePairs@2@PBEI@Z
	DD	FLAT:?CipherResynchronize@CTR_ModePolicy@CryptoPP@@MAEXPAEPBEI@Z
	DD	FLAT:?CipherIsRandomAccess@CTR_ModePolicy@CryptoPP@@UBE_NXZ
	DD	FLAT:?SeekToIteration@CTR_ModePolicy@CryptoPP@@MAEX_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?MandatoryBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalBlockSize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetOptimalBlockSizeUsed@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?ProcessData@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?ProcessLastBlock@StreamTransformation@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?MinLastBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsRandomAccess@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?Seek@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEX_K@Z
	DD	FLAT:?IsSelfInverting@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@CipherModeBase@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@CipherModeBase@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@CTR_ModePolicy@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@SymmetricCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@MAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z
	DD	FLAT:?ResizeBuffers@CipherModeBase@CryptoPP@@MAEXXZ
	DD	FLAT:?IncrementCounterBy256@CTR_ModePolicy@CryptoPP@@MAEXXZ
	DD	FLAT:?GetPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MBEABUAdditiveCipherAbstractPolicy@2@XZ
	DD	FLAT:?AccessPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MAEAAUAdditiveCipherAbstractPolicy@2@XZ
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@UBEPAVClonable@2@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?ProcessAndXorBlock@Base@Blowfish@CryptoPP@@UBEXPBE0PAE@Z
	DD	FLAT:?BlockSize@?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsPermutation@BlockTransformation@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?OptimalNumberOfParallelBlocks@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?AdvancedProcessBlocks@BlockTransformation@CryptoPP@@UBEIPBE0PAEII@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@SimpleKeyingInterface@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@BlockCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@Base@Blowfish@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z
	DD	FLAT:?CanIncorporateEntropy@RandomNumberGenerator@CryptoPP@@UBE_NXZ
	DD	FLAT:?GenerateByte@RandomNumberGenerator@CryptoPP@@UAEEXZ
	DD	FLAT:?GenerateBit@RandomNumberGenerator@CryptoPP@@UAEIXZ
	DD	FLAT:?GenerateWord32@RandomNumberGenerator@CryptoPP@@UAEIII@Z
	DD	FLAT:?GenerateBlock@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEI@Z
	DD	FLAT:?DiscardBytes@RandomNumberGenerator@CryptoPP@@UAEXI@Z
	DD	FLAT:?GenerateIntoBufferedTransformation@RandomNumberGenerator@CryptoPP@@UAEXAAVBufferedTransformation@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
	DD	FLAT:?GetAlignment@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetBytesPerIteration@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetOptimalBlockSize@AdditiveCipherAbstractPolicy@CryptoPP@@UBEIXZ
	DD	FLAT:?GetIterationsToBuffer@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?WriteKeystream@CTR_ModePolicy@CryptoPP@@MAEXPAEI@Z
	DD	FLAT:?CanOperateKeystream@CTR_ModePolicy@CryptoPP@@MBE_NXZ
	DD	FLAT:?OperateKeystream@CTR_ModePolicy@CryptoPP@@MAEXW4KeystreamOperation@2@PAEPBEI@Z
	DD	FLAT:?CipherSetKey@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@EAEXABVNameValuePairs@2@PBEI@Z
	DD	FLAT:?CipherResynchronize@CTR_ModePolicy@CryptoPP@@MAEXPAEPBEI@Z
	DD	FLAT:?CipherIsRandomAccess@CTR_ModePolicy@CryptoPP@@UBE_NXZ
	DD	FLAT:?SeekToIteration@CTR_ModePolicy@CryptoPP@@MAEX_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?MandatoryBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalBlockSize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetOptimalBlockSizeUsed@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?ProcessData@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?ProcessLastBlock@StreamTransformation@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?MinLastBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsRandomAccess@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?Seek@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEX_K@Z
	DD	FLAT:?IsSelfInverting@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@CipherModeBase@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@CipherModeBase@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@CTR_ModePolicy@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@SymmetricCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@MAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z
	DD	FLAT:?ResizeBuffers@CipherModeBase@CryptoPP@@MAEXXZ
	DD	FLAT:?IncrementCounterBy256@CTR_ModePolicy@CryptoPP@@MAEXXZ
	DD	FLAT:?GetPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MBEABUAdditiveCipherAbstractPolicy@2@XZ
	DD	FLAT:?AccessPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MAEAAUAdditiveCipherAbstractPolicy@2@XZ
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@UBEPAVClonable@2@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?ProcessAndXorBlock@Enc@TEA@CryptoPP@@UBEXPBE0PAE@Z
	DD	FLAT:?BlockSize@?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsPermutation@BlockTransformation@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?OptimalNumberOfParallelBlocks@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?AdvancedProcessBlocks@BlockTransformation@CryptoPP@@UBEIPBE0PAEII@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@SimpleKeyingInterface@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@BlockCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@Base@TEA@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z
	DD	FLAT:?CanIncorporateEntropy@RandomNumberGenerator@CryptoPP@@UBE_NXZ
	DD	FLAT:?GenerateByte@RandomNumberGenerator@CryptoPP@@UAEEXZ
	DD	FLAT:?GenerateBit@RandomNumberGenerator@CryptoPP@@UAEIXZ
	DD	FLAT:?GenerateWord32@RandomNumberGenerator@CryptoPP@@UAEIII@Z
	DD	FLAT:?GenerateBlock@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEI@Z
	DD	FLAT:?DiscardBytes@RandomNumberGenerator@CryptoPP@@UAEXI@Z
	DD	FLAT:?GenerateIntoBufferedTransformation@RandomNumberGenerator@CryptoPP@@UAEXAAVBufferedTransformation@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
	DD	FLAT:?GetAlignment@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetBytesPerIteration@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetOptimalBlockSize@AdditiveCipherAbstractPolicy@CryptoPP@@UBEIXZ
	DD	FLAT:?GetIterationsToBuffer@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?WriteKeystream@CTR_ModePolicy@CryptoPP@@MAEXPAEI@Z
	DD	FLAT:?CanOperateKeystream@CTR_ModePolicy@CryptoPP@@MBE_NXZ
	DD	FLAT:?OperateKeystream@CTR_ModePolicy@CryptoPP@@MAEXW4KeystreamOperation@2@PAEPBEI@Z
	DD	FLAT:?CipherSetKey@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@EAEXABVNameValuePairs@2@PBEI@Z
	DD	FLAT:?CipherResynchronize@CTR_ModePolicy@CryptoPP@@MAEXPAEPBEI@Z
	DD	FLAT:?CipherIsRandomAccess@CTR_ModePolicy@CryptoPP@@UBE_NXZ
	DD	FLAT:?SeekToIteration@CTR_ModePolicy@CryptoPP@@MAEX_K@Z
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?MandatoryBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalBlockSize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetOptimalBlockSizeUsed@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?ProcessData@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?ProcessLastBlock@StreamTransformation@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?MinLastBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsRandomAccess@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?Seek@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEX_K@Z
	DD	FLAT:?IsSelfInverting@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vftable'
	DD	FLAT:??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@CipherModeBase@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@CipherModeBase@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@CTR_ModePolicy@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@SymmetricCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@MAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z
	DD	FLAT:?ResizeBuffers@CipherModeBase@CryptoPP@@MAEXXZ
	DD	FLAT:?IncrementCounterBy256@CTR_ModePolicy@CryptoPP@@MAEXXZ
	DD	FLAT:?GetPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MBEABUAdditiveCipherAbstractPolicy@2@XZ
	DD	FLAT:?AccessPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MAEAAUAdditiveCipherAbstractPolicy@2@XZ
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@UBEPAVClonable@2@XZ
	DD	FLAT:?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?ProcessAndXorBlock@Enc@SHACAL2@CryptoPP@@UBEXPBE0PAE@Z
	DD	FLAT:?BlockSize@?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsPermutation@BlockTransformation@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?OptimalNumberOfParallelBlocks@BlockTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?AdvancedProcessBlocks@BlockTransformation@CryptoPP@@UBEIPBE0PAEII@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`vftable'
	DD	FLAT:??_E?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@SimpleKeyingInterface@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@BlockCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@Base@SHACAL2@CryptoPP@@UAEXPBEIABVNameValuePairs@3@@Z
CONST	ENDS
;	COMDAT ??_C@_0CL@PHIFDFBK@0xF518AA8781A8DF278ABA4E7D64B7C@
CONST	SEGMENT
??_C@_0CL@PHIFDFBK@0xF518AA8781A8DF278ABA4E7D64B7C@ DB '0xF518AA8781A8DF2'
	DB	'78ABA4E7D64B7CB9D49462353', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BAD@DPJDDMGO@0xA4D1CBD5C3FD34126765A442EFB99@
CONST	SEGMENT
??_C@_0BAD@DPJDDMGO@0xA4D1CBD5C3FD34126765A442EFB99@ DB '0xA4D1CBD5C3FD34'
	DB	'126765A442EFB99905F8104DD258AC507FD6406CFF14266D31266FEA1E5C4'
	DB	'1564B777E690F5504F213160217B4B01B886A5E91547F9E2749F4D7FBD7D3'
	DB	'B9A92EE1909D0D2263F80A76A6A24C087A091F531DBF0A0169B6A28AD662A'
	DB	'4D18E73AFA32D779D5918D08BC8858F4DCEF97C2A24855E6EEB22B3B2E5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BAD@CBGKIGNF@0xB10B8F96A080E01DDE92DE5EAE5D5@
CONST	SEGMENT
??_C@_0BAD@CBGKIGNF@0xB10B8F96A080E01DDE92DE5EAE5D5@ DB '0xB10B8F96A080E0'
	DB	'1DDE92DE5EAE5D54EC52C99FBCFB06A3C69A6A9DCA52D23B616073E28675A'
	DB	'23D189838EF1E2EE652C013ECB4AEA906112324975C3CD49B83BFACCBDD7D'
	DB	'90C4BD7098488E9C219A73724EFFD6FAE5644738FAA31A4FF55BCCC0A151A'
	DB	'F5F0DC8B4BD45BF37DF365C1A65E68CFDA76D4DA708DF1FB2BC2E4A4371', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@6B@
CONST	SEGMENT
??_7?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@6B@ DD FLAT:??_R4?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::SHACAL2>::`vftable'
	DD	FLAT:??_E?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UAEPAXI@Z
	DD	FLAT:?GetBlockSize@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetDefaultKeyLength@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetIVLength@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEHXZ
	DD	FLAT:?CreateEncoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	FLAT:?CreateDecoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherDetail@VTEA@CryptoPP@@@@6B@
CONST	SEGMENT
??_7?$BlockCipherDetail@VTEA@CryptoPP@@@@6B@ DD FLAT:??_R4?$BlockCipherDetail@VTEA@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::TEA>::`vftable'
	DD	FLAT:??_E?$BlockCipherDetail@VTEA@CryptoPP@@@@UAEPAXI@Z
	DD	FLAT:?GetBlockSize@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetDefaultKeyLength@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetIVLength@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEHXZ
	DD	FLAT:?CreateEncoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	FLAT:?CreateDecoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherDetail@VBlowfish@CryptoPP@@@@6B@
CONST	SEGMENT
??_7?$BlockCipherDetail@VBlowfish@CryptoPP@@@@6B@ DD FLAT:??_R4?$BlockCipherDetail@VBlowfish@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::Blowfish>::`vftable'
	DD	FLAT:??_E?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UAEPAXI@Z
	DD	FLAT:?GetBlockSize@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetDefaultKeyLength@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetIVLength@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEHXZ
	DD	FLAT:?CreateEncoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	FLAT:?CreateDecoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherDetail@VRC5@CryptoPP@@@@6B@
CONST	SEGMENT
??_7?$BlockCipherDetail@VRC5@CryptoPP@@@@6B@ DD FLAT:??_R4?$BlockCipherDetail@VRC5@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::RC5>::`vftable'
	DD	FLAT:??_E?$BlockCipherDetail@VRC5@CryptoPP@@@@UAEPAXI@Z
	DD	FLAT:?GetBlockSize@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetDefaultKeyLength@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetIVLength@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEHXZ
	DD	FLAT:?CreateEncoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	FLAT:?CreateDecoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherDetail@VSEED@CryptoPP@@@@6B@
CONST	SEGMENT
??_7?$BlockCipherDetail@VSEED@CryptoPP@@@@6B@ DD FLAT:??_R4?$BlockCipherDetail@VSEED@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::SEED>::`vftable'
	DD	FLAT:??_E?$BlockCipherDetail@VSEED@CryptoPP@@@@UAEPAXI@Z
	DD	FLAT:?GetBlockSize@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetDefaultKeyLength@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetIVLength@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEHXZ
	DD	FLAT:?CreateEncoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	FLAT:?CreateDecoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherDetail@VCamellia@CryptoPP@@@@6B@
CONST	SEGMENT
??_7?$BlockCipherDetail@VCamellia@CryptoPP@@@@6B@ DD FLAT:??_R4?$BlockCipherDetail@VCamellia@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::Camellia>::`vftable'
	DD	FLAT:??_E?$BlockCipherDetail@VCamellia@CryptoPP@@@@UAEPAXI@Z
	DD	FLAT:?GetBlockSize@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetDefaultKeyLength@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetIVLength@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEHXZ
	DD	FLAT:?CreateEncoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	FLAT:?CreateDecoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@6B@
CONST	SEGMENT
??_7?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@6B@ DD FLAT:??_R4?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::DES_EDE2>::`vftable'
	DD	FLAT:??_E?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UAEPAXI@Z
	DD	FLAT:?GetBlockSize@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetDefaultKeyLength@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetIVLength@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEHXZ
	DD	FLAT:?CreateEncoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	FLAT:?CreateDecoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherDetail@VIDEA@CryptoPP@@@@6B@
CONST	SEGMENT
??_7?$BlockCipherDetail@VIDEA@CryptoPP@@@@6B@ DD FLAT:??_R4?$BlockCipherDetail@VIDEA@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::IDEA>::`vftable'
	DD	FLAT:??_E?$BlockCipherDetail@VIDEA@CryptoPP@@@@UAEPAXI@Z
	DD	FLAT:?GetBlockSize@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetDefaultKeyLength@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetIVLength@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEHXZ
	DD	FLAT:?CreateEncoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	FLAT:?CreateDecoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherDetail@VCAST256@CryptoPP@@@@6B@
CONST	SEGMENT
??_7?$BlockCipherDetail@VCAST256@CryptoPP@@@@6B@ DD FLAT:??_R4?$BlockCipherDetail@VCAST256@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::CAST256>::`vftable'
	DD	FLAT:??_E?$BlockCipherDetail@VCAST256@CryptoPP@@@@UAEPAXI@Z
	DD	FLAT:?GetBlockSize@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetDefaultKeyLength@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetIVLength@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEHXZ
	DD	FLAT:?CreateEncoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	FLAT:?CreateDecoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherDetail@VSerpent@CryptoPP@@@@6B@
CONST	SEGMENT
??_7?$BlockCipherDetail@VSerpent@CryptoPP@@@@6B@ DD FLAT:??_R4?$BlockCipherDetail@VSerpent@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::Serpent>::`vftable'
	DD	FLAT:??_E?$BlockCipherDetail@VSerpent@CryptoPP@@@@UAEPAXI@Z
	DD	FLAT:?GetBlockSize@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetDefaultKeyLength@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetIVLength@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEHXZ
	DD	FLAT:?CreateEncoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	FLAT:?CreateDecoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherDetail@VTwofish@CryptoPP@@@@6B@
CONST	SEGMENT
??_7?$BlockCipherDetail@VTwofish@CryptoPP@@@@6B@ DD FLAT:??_R4?$BlockCipherDetail@VTwofish@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::Twofish>::`vftable'
	DD	FLAT:??_E?$BlockCipherDetail@VTwofish@CryptoPP@@@@UAEPAXI@Z
	DD	FLAT:?GetBlockSize@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetDefaultKeyLength@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetIVLength@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEHXZ
	DD	FLAT:?CreateEncoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	FLAT:?CreateDecoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherDetail@VMARS@CryptoPP@@@@6B@
CONST	SEGMENT
??_7?$BlockCipherDetail@VMARS@CryptoPP@@@@6B@ DD FLAT:??_R4?$BlockCipherDetail@VMARS@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::MARS>::`vftable'
	DD	FLAT:??_E?$BlockCipherDetail@VMARS@CryptoPP@@@@UAEPAXI@Z
	DD	FLAT:?GetBlockSize@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetDefaultKeyLength@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetIVLength@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEHXZ
	DD	FLAT:?CreateEncoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	FLAT:?CreateDecoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
CONST	ENDS
;	COMDAT ??_7?$BlockCipherDetail@VRC6@CryptoPP@@@@6B@
CONST	SEGMENT
??_7?$BlockCipherDetail@VRC6@CryptoPP@@@@6B@ DD FLAT:??_R4?$BlockCipherDetail@VRC6@CryptoPP@@@@6B@ ; BlockCipherDetail<CryptoPP::RC6>::`vftable'
	DD	FLAT:??_E?$BlockCipherDetail@VRC6@CryptoPP@@@@UAEPAXI@Z
	DD	FLAT:?GetBlockSize@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetDefaultKeyLength@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEHXZ
	DD	FLAT:?GetIVLength@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEHXZ
	DD	FLAT:?CreateEncoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	FLAT:?CreateDecoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
CONST	ENDS
;	COMDAT ??_7DH2KeyAgreement@@6B@
CONST	SEGMENT
??_7DH2KeyAgreement@@6B@ DD FLAT:??_R4DH2KeyAgreement@@6B@ ; DH2KeyAgreement::`vftable'
	DD	FLAT:??_EDH2KeyAgreement@@UAEPAXI@Z
	DD	FLAT:?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z
	DD	FLAT:?Agree@DH2KeyAgreement@@UAE_NIPBXI@Z
CONST	ENDS
;	COMDAT ??_7KeyAgreement@@6B@
CONST	SEGMENT
??_7KeyAgreement@@6B@ DD FLAT:??_R4KeyAgreement@@6B@	; KeyAgreement::`vftable'
	DD	FLAT:??_EKeyAgreement@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7BlockCipherAlgorithm@@6B@
CONST	SEGMENT
??_7BlockCipherAlgorithm@@6B@ DD FLAT:??_R4BlockCipherAlgorithm@@6B@ ; BlockCipherAlgorithm::`vftable'
	DD	FLAT:??_EBlockCipherAlgorithm@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_03FOHIJHJ@TEA@
CONST	SEGMENT
??_C@_03FOHIJHJ@TEA@ DB 'TEA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08KKFFFOAL@SHACAL?92@
CONST	SEGMENT
??_C@_08KKFFFOAL@SHACAL?92@ DB 'SHACAL-2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04IOANANM@SEED@
CONST	SEGMENT
??_C@_04IOANANM@SEED@ DB 'SEED', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GPFCBGOF@RC5@
CONST	SEGMENT
??_C@_03GPFCBGOF@RC5@ DB 'RC5', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04OHHLMMNP@IDEA@
CONST	SEGMENT
??_C@_04OHHLMMNP@IDEA@ DB 'IDEA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08ENLOJDBI@DES?9EDE2@
CONST	SEGMENT
??_C@_08ENLOJDBI@DES?9EDE2@ DB 'DES-EDE2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EGCCLPME@Camellia@
CONST	SEGMENT
??_C@_08EGCCLPME@Camellia@ DB 'Camellia', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KOMAHJJD@Blowfish@
CONST	SEGMENT
??_C@_08KOMAHJJD@Blowfish@ DB 'Blowfish', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DABDIDEC@Twofish@
CONST	SEGMENT
??_C@_07DABDIDEC@Twofish@ DB 'Twofish', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CCCAKGBN@Serpent@
CONST	SEGMENT
??_C@_07CCCAKGBN@Serpent@ DB 'Serpent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04EELIFPAL@MARS@
CONST	SEGMENT
??_C@_04EELIFPAL@MARS@ DB 'MARS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EEHPEFCG@RC6@
CONST	SEGMENT
??_C@_03EEHPEFCG@RC6@ DB 'RC6', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08FGDDMCLK@CAST?9256@
CONST	SEGMENT
??_C@_08FGDDMCLK@CAST?9256@ DB 'CAST-256', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7DH2@CryptoPP@@6B@
CONST	SEGMENT
??_7DH2@CryptoPP@@6B@ DD FLAT:??_R4DH2@CryptoPP@@6B@	; CryptoPP::DH2::`vftable'
	DD	FLAT:??_EDH2@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@Algorithm@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?AccessMaterial@KeyAgreementAlgorithm@CryptoPP@@UAEAAVCryptoMaterial@2@XZ
	DD	FLAT:?GetMaterial@KeyAgreementAlgorithm@CryptoPP@@UBEABVCryptoMaterial@2@XZ
	DD	FLAT:?AccessCryptoParameters@DH2@CryptoPP@@UAEAAVCryptoParameters@2@XZ
	DD	FLAT:?GetCryptoParameters@KeyAgreementAlgorithm@CryptoPP@@UBEABVCryptoParameters@2@XZ
	DD	FLAT:?AgreedValueLength@DH2@CryptoPP@@UBEIXZ
	DD	FLAT:?StaticPrivateKeyLength@DH2@CryptoPP@@UBEIXZ
	DD	FLAT:?StaticPublicKeyLength@DH2@CryptoPP@@UBEIXZ
	DD	FLAT:?GenerateStaticPrivateKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GenerateStaticPublicKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z
	DD	FLAT:?GenerateStaticKeyPair@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE1@Z
	DD	FLAT:?EphemeralPrivateKeyLength@DH2@CryptoPP@@UBEIXZ
	DD	FLAT:?EphemeralPublicKeyLength@DH2@CryptoPP@@UBEIXZ
	DD	FLAT:?GenerateEphemeralPrivateKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GenerateEphemeralPublicKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z
	DD	FLAT:?GenerateEphemeralKeyPair@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE1@Z
	DD	FLAT:?Agree@DH2@CryptoPP@@UBE_NPAEPBE111_N@Z
CONST	ENDS
;	COMDAT ??_7?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@6B@
CONST	SEGMENT
??_7?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@6B@ DD FLAT:??_R4?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@6B@ ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`vftable'
	DD	FLAT:??_E?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?AccessMaterial@KeyAgreementAlgorithm@CryptoPP@@UAEAAVCryptoMaterial@2@XZ
	DD	FLAT:?GetMaterial@KeyAgreementAlgorithm@CryptoPP@@UBEABVCryptoMaterial@2@XZ
	DD	FLAT:?AccessCryptoParameters@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UAEAAVCryptoParameters@2@XZ
	DD	FLAT:?GetCryptoParameters@KeyAgreementAlgorithm@CryptoPP@@UBEABVCryptoParameters@2@XZ
	DD	FLAT:?AgreedValueLength@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?PrivateKeyLength@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?PublicKeyLength@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?GeneratePrivateKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z
	DD	FLAT:?GenerateKeyPair@SimpleKeyAgreementDomain@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE1@Z
	DD	FLAT:?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z
	DD	FLAT:?GetKeyAgreementAlgorithm@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@EBEABV?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@2@XZ
	DD	FLAT:?AccessAbstractGroupParameters@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@EAEAAV?$DL_GroupParameters@VInteger@CryptoPP@@@2@XZ
CONST	ENDS
;	COMDAT ??_8DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@7B@
CONST	SEGMENT
??_8DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@7B@ DD 0fffffffcH ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`vbtable'
	DD	064H
CONST	ENDS
;	COMDAT ??_7DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6BCryptoMaterial@1@@
CONST	SEGMENT
??_7DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6BCryptoMaterial@1@@ DD FLAT:??_R4DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6BCryptoMaterial@1@@ ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`vftable'
	DD	FLAT:??_EDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@$4PPPPPPPM@GM@AEPAXI@Z
	DD	FLAT:?GetVoidValue@DL_GroupParameters_GFP@CryptoPP@@$4PPPPPPPM@A@BE_NPBDABVtype_info@@PAX@Z
	DD	FLAT:?AssignFrom@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@$4PPPPPPPM@A@AEXABVNameValuePairs@2@@Z
	DD	FLAT:?Validate@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BE_NAAVRandomNumberGenerator@2@I@Z
	DD	FLAT:?ThrowIfInvalid@CryptoMaterial@CryptoPP@@UBEXAAVRandomNumberGenerator@2@I@Z
	DD	FLAT:?Save@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BEXAAVBufferedTransformation@2@@Z
	DD	FLAT:?Load@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXAAVBufferedTransformation@2@@Z
	DD	FLAT:?SupportsPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BE_NXZ
	DD	FLAT:?Precompute@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXI@Z
	DD	FLAT:?LoadPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXAAVBufferedTransformation@2@@Z
	DD	FLAT:?SavePrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BEXAAVBufferedTransformation@2@@Z
CONST	ENDS
;	COMDAT ??_7DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6BGeneratableCryptoMaterial@1@@
CONST	SEGMENT
??_7DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6BGeneratableCryptoMaterial@1@@ DD FLAT:??_R4DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6BGeneratableCryptoMaterial@1@@ ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`vftable'
	DD	FLAT:?GenerateRandom@DL_GroupParameters_IntegerBased@CryptoPP@@UAEXAAVRandomNumberGenerator@2@ABVNameValuePairs@2@@Z
	DD	FLAT:?GetSubgroupGenerator@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@2@XZ
	DD	FLAT:?SetSubgroupGenerator@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UAEXABVInteger@2@@Z
	DD	FLAT:?ExponentiateBase@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
	DD	FLAT:?ExponentiateElement@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z
	DD	FLAT:?GetGroupPrecomputation@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UBEABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@XZ
	DD	FLAT:?GetBasePrecomputation@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UBEABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ
	DD	FLAT:?AccessBasePrecomputation@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEAAV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ
	DD	FLAT:?GetSubgroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBEABVInteger@2@XZ
	DD	FLAT:?GetMaxExponent@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ
	DD	FLAT:?GetGroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ
	DD	FLAT:?GetCofactor@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@XZ
	DD	FLAT:?GetEncodedElementSize@DL_GroupParameters_IntegerBased@CryptoPP@@UBEI_N@Z
	DD	FLAT:?EncodeElement@DL_GroupParameters_IntegerBased@CryptoPP@@UBEX_NABVInteger@2@PAE@Z
	DD	FLAT:?DecodeElement@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@PBE_N@Z
	DD	FLAT:?ConvertElementToInteger@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
	DD	FLAT:?ValidateGroup@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NAAVRandomNumberGenerator@2@I@Z
	DD	FLAT:?ValidateElement@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NIABVInteger@2@PBV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@@Z
	DD	FLAT:?FastSubgroupCheckAvailable@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsIdentity@DL_GroupParameters_GFP@CryptoPP@@UBE_NABVInteger@2@@Z
	DD	FLAT:?SimultaneousExponentiate@DL_GroupParameters_GFP@CryptoPP@@UBEXPAVInteger@2@ABV32@PBV32@I@Z
CONST	ENDS
;	COMDAT ??_7DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6B@
CONST	SEGMENT
??_7DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6B@ DD FLAT:??_R4DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6B@ ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`vftable'
	DD	FLAT:??_EDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?BERDecode@DL_GroupParameters_IntegerBased@CryptoPP@@UAEXAAVBufferedTransformation@2@@Z
	DD	FLAT:?DEREncode@DL_GroupParameters_IntegerBased@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z
	DD	FLAT:?BEREncode@ASN1Object@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z
	DD	FLAT:?GetModulus@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UBEABVInteger@2@XZ
	DD	FLAT:?SetModulusAndSubgroupGenerator@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEXABVInteger@2@0@Z
	DD	FLAT:?GetFieldType@DL_GroupParameters_GFP@CryptoPP@@MBEHXZ
	DD	FLAT:?GetDefaultSubgroupOrderSize@DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@MBEII@Z
CONST	ENDS
;	COMDAT ??_8DL_GroupParameters_GFP@CryptoPP@@7B@
CONST	SEGMENT
??_8DL_GroupParameters_GFP@CryptoPP@@7B@ DD 0fffffffcH	; CryptoPP::DL_GroupParameters_GFP::`vbtable'
	DD	064H
CONST	ENDS
;	COMDAT ??_7DL_GroupParameters_GFP@CryptoPP@@6BCryptoMaterial@1@@
CONST	SEGMENT
??_7DL_GroupParameters_GFP@CryptoPP@@6BCryptoMaterial@1@@ DD FLAT:??_R4DL_GroupParameters_GFP@CryptoPP@@6BCryptoMaterial@1@@ ; CryptoPP::DL_GroupParameters_GFP::`vftable'
	DD	FLAT:??_EDL_GroupParameters_GFP@CryptoPP@@$4PPPPPPPM@GM@AEPAXI@Z
	DD	FLAT:?GetVoidValue@DL_GroupParameters_GFP@CryptoPP@@$4PPPPPPPM@A@BE_NPBDABVtype_info@@PAX@Z
	DD	FLAT:?AssignFrom@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@$4PPPPPPPM@A@AEXABVNameValuePairs@2@@Z
	DD	FLAT:?Validate@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BE_NAAVRandomNumberGenerator@2@I@Z
	DD	FLAT:?ThrowIfInvalid@CryptoMaterial@CryptoPP@@UBEXAAVRandomNumberGenerator@2@I@Z
	DD	FLAT:?Save@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BEXAAVBufferedTransformation@2@@Z
	DD	FLAT:?Load@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXAAVBufferedTransformation@2@@Z
	DD	FLAT:?SupportsPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BE_NXZ
	DD	FLAT:?Precompute@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXI@Z
	DD	FLAT:?LoadPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXAAVBufferedTransformation@2@@Z
	DD	FLAT:?SavePrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BEXAAVBufferedTransformation@2@@Z
CONST	ENDS
;	COMDAT ??_7DL_GroupParameters_GFP@CryptoPP@@6BGeneratableCryptoMaterial@1@@
CONST	SEGMENT
??_7DL_GroupParameters_GFP@CryptoPP@@6BGeneratableCryptoMaterial@1@@ DD FLAT:??_R4DL_GroupParameters_GFP@CryptoPP@@6BGeneratableCryptoMaterial@1@@ ; CryptoPP::DL_GroupParameters_GFP::`vftable'
	DD	FLAT:?GenerateRandom@DL_GroupParameters_IntegerBased@CryptoPP@@UAEXAAVRandomNumberGenerator@2@ABVNameValuePairs@2@@Z
	DD	FLAT:?GetSubgroupGenerator@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@2@XZ
	DD	FLAT:?SetSubgroupGenerator@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UAEXABVInteger@2@@Z
	DD	FLAT:?ExponentiateBase@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
	DD	FLAT:?ExponentiateElement@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z
	DD	FLAT:?GetGroupPrecomputation@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UBEABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@XZ
	DD	FLAT:?GetBasePrecomputation@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UBEABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ
	DD	FLAT:?AccessBasePrecomputation@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEAAV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ
	DD	FLAT:?GetSubgroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBEABVInteger@2@XZ
	DD	FLAT:?GetMaxExponent@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ
	DD	FLAT:?GetGroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ
	DD	FLAT:?GetCofactor@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@XZ
	DD	FLAT:?GetEncodedElementSize@DL_GroupParameters_IntegerBased@CryptoPP@@UBEI_N@Z
	DD	FLAT:?EncodeElement@DL_GroupParameters_IntegerBased@CryptoPP@@UBEX_NABVInteger@2@PAE@Z
	DD	FLAT:?DecodeElement@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@PBE_N@Z
	DD	FLAT:?ConvertElementToInteger@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
	DD	FLAT:?ValidateGroup@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NAAVRandomNumberGenerator@2@I@Z
	DD	FLAT:?ValidateElement@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NIABVInteger@2@PBV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@@Z
	DD	FLAT:?FastSubgroupCheckAvailable@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsIdentity@DL_GroupParameters_GFP@CryptoPP@@UBE_NABVInteger@2@@Z
	DD	FLAT:?SimultaneousExponentiate@DL_GroupParameters_GFP@CryptoPP@@UBEXPAVInteger@2@ABV32@PBV32@I@Z
CONST	ENDS
;	COMDAT ??_7DL_GroupParameters_GFP@CryptoPP@@6B@
CONST	SEGMENT
??_7DL_GroupParameters_GFP@CryptoPP@@6B@ DD FLAT:??_R4DL_GroupParameters_GFP@CryptoPP@@6B@ ; CryptoPP::DL_GroupParameters_GFP::`vftable'
	DD	FLAT:??_EDL_GroupParameters_GFP@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?BERDecode@DL_GroupParameters_IntegerBased@CryptoPP@@UAEXAAVBufferedTransformation@2@@Z
	DD	FLAT:?DEREncode@DL_GroupParameters_IntegerBased@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z
	DD	FLAT:?BEREncode@ASN1Object@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z
	DD	FLAT:?GetModulus@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UBEABVInteger@2@XZ
	DD	FLAT:?SetModulusAndSubgroupGenerator@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEXABVInteger@2@0@Z
	DD	FLAT:?GetFieldType@DL_GroupParameters_GFP@CryptoPP@@MBEHXZ
	DD	FLAT:?GetDefaultSubgroupOrderSize@DL_GroupParameters_IntegerBased@CryptoPP@@MBEII@Z
CONST	ENDS
;	COMDAT ??_7?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6BCryptoMaterial@1@@
CONST	SEGMENT
??_7?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6BCryptoMaterial@1@@ DD FLAT:??_R4?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6BCryptoMaterial@1@@ ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`vftable'
	DD	FLAT:??_E?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@$4PPPPPPPM@GM@AEPAXI@Z
	DD	FLAT:?GetVoidValue@DL_GroupParameters_IntegerBased@CryptoPP@@$4PPPPPPPM@EE@BE_NPBDABVtype_info@@PAX@Z
	DD	FLAT:?AssignFrom@DL_GroupParameters_IntegerBased@CryptoPP@@$4PPPPPPPM@EE@AEXABVNameValuePairs@2@@Z
	DD	FLAT:?Validate@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BE_NAAVRandomNumberGenerator@2@I@Z
	DD	FLAT:?ThrowIfInvalid@CryptoMaterial@CryptoPP@@UBEXAAVRandomNumberGenerator@2@I@Z
	DD	FLAT:?Save@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BEXAAVBufferedTransformation@2@@Z
	DD	FLAT:?Load@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXAAVBufferedTransformation@2@@Z
	DD	FLAT:?SupportsPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BE_NXZ
	DD	FLAT:?Precompute@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXI@Z
	DD	FLAT:?LoadPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXAAVBufferedTransformation@2@@Z
	DD	FLAT:?SavePrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BEXAAVBufferedTransformation@2@@Z
CONST	ENDS
;	COMDAT ??_7?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6BGeneratableCryptoMaterial@1@@
CONST	SEGMENT
??_7?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6BGeneratableCryptoMaterial@1@@ DD FLAT:??_R4?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6BGeneratableCryptoMaterial@1@@ ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`vftable'
	DD	FLAT:?GenerateRandom@DL_GroupParameters_IntegerBased@CryptoPP@@UAEXAAVRandomNumberGenerator@2@ABVNameValuePairs@2@@Z
	DD	FLAT:?GetSubgroupGenerator@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@2@XZ
	DD	FLAT:?SetSubgroupGenerator@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UAEXABVInteger@2@@Z
	DD	FLAT:?ExponentiateBase@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
	DD	FLAT:?ExponentiateElement@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z
	DD	FLAT:?GetGroupPrecomputation@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UBEABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@XZ
	DD	FLAT:?GetBasePrecomputation@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UBEABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ
	DD	FLAT:?AccessBasePrecomputation@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAEAAV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ
	DD	FLAT:?GetSubgroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBEABVInteger@2@XZ
	DD	FLAT:?GetMaxExponent@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ
	DD	FLAT:?GetGroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ
	DD	FLAT:?GetCofactor@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@XZ
	DD	FLAT:?GetEncodedElementSize@DL_GroupParameters_IntegerBased@CryptoPP@@UBEI_N@Z
	DD	FLAT:?EncodeElement@DL_GroupParameters_IntegerBased@CryptoPP@@UBEX_NABVInteger@2@PAE@Z
	DD	FLAT:?DecodeElement@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@PBE_N@Z
	DD	FLAT:?ConvertElementToInteger@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
	DD	FLAT:?ValidateGroup@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NAAVRandomNumberGenerator@2@I@Z
	DD	FLAT:?ValidateElement@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NIABVInteger@2@PBV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@@Z
	DD	FLAT:?FastSubgroupCheckAvailable@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6B@
CONST	SEGMENT
??_7?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6B@ DD FLAT:??_R4?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6B@ ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`vftable'
	DD	FLAT:??_E?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?BERDecode@DL_GroupParameters_IntegerBased@CryptoPP@@UAEXAAVBufferedTransformation@2@@Z
	DD	FLAT:?DEREncode@DL_GroupParameters_IntegerBased@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z
	DD	FLAT:?BEREncode@ASN1Object@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?GetDefaultSubgroupOrderSize@DL_GroupParameters_IntegerBased@CryptoPP@@MBEII@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_7ModExpPrecomputation@CryptoPP@@6B@
CONST	SEGMENT
??_7ModExpPrecomputation@CryptoPP@@6B@ DD FLAT:??_R4ModExpPrecomputation@CryptoPP@@6B@ ; CryptoPP::ModExpPrecomputation::`vftable'
	DD	FLAT:?NeedConversions@ModExpPrecomputation@CryptoPP@@UBE_NXZ
	DD	FLAT:?ConvertIn@ModExpPrecomputation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
	DD	FLAT:?ConvertOut@ModExpPrecomputation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
	DD	FLAT:?GetGroup@ModExpPrecomputation@CryptoPP@@UBEABV?$AbstractGroup@VInteger@CryptoPP@@@2@XZ
	DD	FLAT:?BERDecodeElement@ModExpPrecomputation@CryptoPP@@UBE?AVInteger@2@AAVBufferedTransformation@2@@Z
	DD	FLAT:?DEREncodeElement@ModExpPrecomputation@CryptoPP@@UBEXAAVBufferedTransformation@2@ABVInteger@2@@Z
CONST	ENDS
;	COMDAT ??_7?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@6B@
CONST	SEGMENT
??_7?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@6B@ DD FLAT:??_R4?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@6B@ ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer>::`vftable'
	DD	FLAT:?NeedConversions@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?ConvertIn@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
	DD	FLAT:?ConvertOut@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@6B@
CONST	SEGMENT
??_7?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@6B@ DD FLAT:??_R4?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@6B@ ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::`vftable'
	DD	FLAT:?IsInitialized@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?SetBase@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UAEXABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@ABVInteger@2@@Z
	DD	FLAT:?GetBase@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@2@ABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@@Z
	DD	FLAT:?Precompute@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UAEXABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@II@Z
	DD	FLAT:?Load@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UAEXABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@AAVBufferedTransformation@2@@Z
	DD	FLAT:?Save@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UBEXABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@AAVBufferedTransformation@2@@Z
	DD	FLAT:?Exponentiate@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@ABV32@@Z
	DD	FLAT:?CascadeExponentiate@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@ABV32@ABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@1@Z
CONST	ENDS
;	COMDAT ??_7?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@6B@
CONST	SEGMENT
??_7?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@6B@ DD FLAT:??_R4?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@CryptoPP@@6B@ ; CryptoPP::DL_FixedBasePrecomputation<CryptoPP::Integer>::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_0CA@BKIJBIHG@CryptoPP?3?5invalid?5group?5element@
CONST	SEGMENT
??_C@_0CA@BKIJBIHG@CryptoPP?3?5invalid?5group?5element@ DB 'CryptoPP: inv'
	DB	'alid group element', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7DL_BadElement@CryptoPP@@6B@
CONST	SEGMENT
??_7DL_BadElement@CryptoPP@@6B@ DD FLAT:??_R4DL_BadElement@CryptoPP@@6B@ ; CryptoPP::DL_BadElement::`vftable'
	DD	FLAT:??_EDL_BadElement@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?what@Exception@CryptoPP@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7MontgomeryRepresentation@CryptoPP@@6B@
CONST	SEGMENT
??_7MontgomeryRepresentation@CryptoPP@@6B@ DD FLAT:??_R4MontgomeryRepresentation@CryptoPP@@6B@ ; CryptoPP::MontgomeryRepresentation::`vftable'
	DD	FLAT:??_EMontgomeryRepresentation@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?Equal@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@0@Z
	DD	FLAT:?Identity@ModularArithmetic@CryptoPP@@UBEABVInteger@2@XZ
	DD	FLAT:?Add@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z
	DD	FLAT:?Inverse@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z
	DD	FLAT:?InversionIsFast@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?Double@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z
	DD	FLAT:?Subtract@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z
	DD	FLAT:?Accumulate@ModularArithmetic@CryptoPP@@UBEAAVInteger@2@AAV32@ABV32@@Z
	DD	FLAT:?Reduce@ModularArithmetic@CryptoPP@@UBEAAVInteger@2@AAV32@ABV32@@Z
	DD	FLAT:?ScalarMultiply@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z
	DD	FLAT:?CascadeScalarMultiply@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@000@Z
	DD	FLAT:?SimultaneousMultiply@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UBEXPAVInteger@2@ABV32@PBV32@I@Z
	DD	FLAT:?IsUnit@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@@Z
	DD	FLAT:?MultiplicativeIdentity@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@XZ
	DD	FLAT:?Multiply@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@ABV32@0@Z
	DD	FLAT:?MultiplicativeInverse@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@ABV32@@Z
	DD	FLAT:?Square@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@ABV32@@Z
	DD	FLAT:?Divide@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z
	DD	FLAT:?Exponentiate@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z
	DD	FLAT:?CascadeExponentiate@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@000@Z
	DD	FLAT:?SimultaneousExponentiate@MontgomeryRepresentation@CryptoPP@@UBEXPAVInteger@2@ABV32@PBV32@I@Z
	DD	FLAT:?MultiplicativeGroup@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABV?$AbstractGroup@VInteger@CryptoPP@@@2@XZ
	DD	FLAT:?Clone@MontgomeryRepresentation@CryptoPP@@UBEPAVModularArithmetic@2@XZ
	DD	FLAT:?IsMontgomeryRepresentation@MontgomeryRepresentation@CryptoPP@@UBE_NXZ
	DD	FLAT:?ConvertIn@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
	DD	FLAT:?ConvertOut@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
CONST	ENDS
;	COMDAT ??_7ModularArithmetic@CryptoPP@@6B@
CONST	SEGMENT
??_7ModularArithmetic@CryptoPP@@6B@ DD FLAT:??_R4ModularArithmetic@CryptoPP@@6B@ ; CryptoPP::ModularArithmetic::`vftable'
	DD	FLAT:??_EModularArithmetic@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?Equal@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@0@Z
	DD	FLAT:?Identity@ModularArithmetic@CryptoPP@@UBEABVInteger@2@XZ
	DD	FLAT:?Add@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z
	DD	FLAT:?Inverse@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z
	DD	FLAT:?InversionIsFast@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?Double@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z
	DD	FLAT:?Subtract@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z
	DD	FLAT:?Accumulate@ModularArithmetic@CryptoPP@@UBEAAVInteger@2@AAV32@ABV32@@Z
	DD	FLAT:?Reduce@ModularArithmetic@CryptoPP@@UBEAAVInteger@2@AAV32@ABV32@@Z
	DD	FLAT:?ScalarMultiply@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z
	DD	FLAT:?CascadeScalarMultiply@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@000@Z
	DD	FLAT:?SimultaneousMultiply@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UBEXPAVInteger@2@ABV32@PBV32@I@Z
	DD	FLAT:?IsUnit@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@@Z
	DD	FLAT:?MultiplicativeIdentity@ModularArithmetic@CryptoPP@@UBEABVInteger@2@XZ
	DD	FLAT:?Multiply@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z
	DD	FLAT:?MultiplicativeInverse@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z
	DD	FLAT:?Square@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z
	DD	FLAT:?Divide@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z
	DD	FLAT:?Exponentiate@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z
	DD	FLAT:?CascadeExponentiate@ModularArithmetic@CryptoPP@@UBE?AVInteger@2@ABV32@000@Z
	DD	FLAT:?SimultaneousExponentiate@ModularArithmetic@CryptoPP@@UBEXPAVInteger@2@ABV32@PBV32@I@Z
	DD	FLAT:?MultiplicativeGroup@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABV?$AbstractGroup@VInteger@CryptoPP@@@2@XZ
	DD	FLAT:?Clone@ModularArithmetic@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?IsMontgomeryRepresentation@ModularArithmetic@CryptoPP@@UBE_NXZ
	DD	FLAT:?ConvertIn@ModularArithmetic@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
	DD	FLAT:?ConvertOut@ModularArithmetic@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
CONST	ENDS
;	COMDAT ??_7MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@6B@
CONST	SEGMENT
??_7MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@6B@ DD FLAT:??_R4MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@6B@ ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::`vftable'
	DD	FLAT:??_EMultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?Equal@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE_NABVInteger@3@0@Z
	DD	FLAT:?Identity@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@XZ
	DD	FLAT:?Add@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@0@Z
	DD	FLAT:?Inverse@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@@Z
	DD	FLAT:?InversionIsFast@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?Double@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@@Z
	DD	FLAT:?Subtract@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@0@Z
	DD	FLAT:?Accumulate@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEAAVInteger@3@AAV43@ABV43@@Z
	DD	FLAT:?Reduce@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEAAVInteger@3@AAV43@ABV43@@Z
	DD	FLAT:?ScalarMultiply@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@3@ABV43@0@Z
	DD	FLAT:?CascadeScalarMultiply@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@3@ABV43@000@Z
	DD	FLAT:?SimultaneousMultiply@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEXPAVInteger@3@ABV43@PBV43@I@Z
CONST	ENDS
;	COMDAT ??_7AutoSeededRandomPool@CryptoPP@@6B@
CONST	SEGMENT
??_7AutoSeededRandomPool@CryptoPP@@6B@ DD FLAT:??_R4AutoSeededRandomPool@CryptoPP@@6B@ ; CryptoPP::AutoSeededRandomPool::`vftable'
	DD	FLAT:??_EAutoSeededRandomPool@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@Algorithm@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?IncorporateEntropy@RandomPool@CryptoPP@@UAEXPBEI@Z
	DD	FLAT:?CanIncorporateEntropy@RandomPool@CryptoPP@@UBE_NXZ
	DD	FLAT:?GenerateByte@RandomNumberGenerator@CryptoPP@@UAEEXZ
	DD	FLAT:?GenerateBit@RandomNumberGenerator@CryptoPP@@UAEIXZ
	DD	FLAT:?GenerateWord32@RandomNumberGenerator@CryptoPP@@UAEIII@Z
	DD	FLAT:?GenerateBlock@RandomNumberGenerator@CryptoPP@@UAEXPAEI@Z
	DD	FLAT:?DiscardBytes@RandomNumberGenerator@CryptoPP@@UAEXI@Z
	DD	FLAT:?GenerateIntoBufferedTransformation@RandomPool@CryptoPP@@UAEXAAVBufferedTransformation@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z
CONST	ENDS
;	COMDAT ??_7SelfTestFailure@CryptoPP@@6B@
CONST	SEGMENT
??_7SelfTestFailure@CryptoPP@@6B@ DD FLAT:??_R4SelfTestFailure@CryptoPP@@6B@ ; CryptoPP::SelfTestFailure::`vftable'
	DD	FLAT:??_ESelfTestFailure@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?what@Exception@CryptoPP@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BRandomNumberGenerator@1@@
CONST	SEGMENT
??_7?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BRandomNumberGenerator@1@@ DD FLAT:??_R4?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BRandomNumberGenerator@1@@ ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`vftable'
	DD	FLAT:??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@WCI@AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@Algorithm@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z
	DD	FLAT:?CanIncorporateEntropy@RandomNumberGenerator@CryptoPP@@UBE_NXZ
	DD	FLAT:?GenerateByte@RandomNumberGenerator@CryptoPP@@UAEEXZ
	DD	FLAT:?GenerateBit@RandomNumberGenerator@CryptoPP@@UAEIXZ
	DD	FLAT:?GenerateWord32@RandomNumberGenerator@CryptoPP@@UAEIII@Z
	DD	FLAT:?GenerateBlock@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEI@Z
	DD	FLAT:?DiscardBytes@RandomNumberGenerator@CryptoPP@@UAEXI@Z
	DD	FLAT:?GenerateIntoBufferedTransformation@RandomNumberGenerator@CryptoPP@@UAEXAAVBufferedTransformation@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_K@Z
CONST	ENDS
;	COMDAT ??_7?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
CONST	SEGMENT
??_7?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ DD FLAT:??_R4?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@ ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`vftable'
	DD	FLAT:??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@WBI@AEPAXI@Z
	DD	FLAT:?GetAlignment@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetBytesPerIteration@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?GetOptimalBlockSize@AdditiveCipherAbstractPolicy@CryptoPP@@UBEIXZ
	DD	FLAT:?GetIterationsToBuffer@CTR_ModePolicy@CryptoPP@@MBEIXZ
	DD	FLAT:?WriteKeystream@CTR_ModePolicy@CryptoPP@@MAEXPAEI@Z
	DD	FLAT:?CanOperateKeystream@CTR_ModePolicy@CryptoPP@@MBE_NXZ
	DD	FLAT:?OperateKeystream@CTR_ModePolicy@CryptoPP@@MAEXW4KeystreamOperation@2@PAEPBEI@Z
	DD	FLAT:?CipherSetKey@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@EAEXABVNameValuePairs@2@PBEI@Z
	DD	FLAT:?CipherResynchronize@CTR_ModePolicy@CryptoPP@@MAEXPAEPBEI@Z
	DD	FLAT:?CipherIsRandomAccess@CTR_ModePolicy@CryptoPP@@UBE_NXZ
	DD	FLAT:?SeekToIteration@CTR_ModePolicy@CryptoPP@@MAEX_K@Z
CONST	ENDS
;	COMDAT ??_7?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BStreamTransformation@1@@
CONST	SEGMENT
??_7?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BStreamTransformation@1@@ DD FLAT:??_R4?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BStreamTransformation@1@@ ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`vftable'
	DD	FLAT:??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@W3AEPAXI@Z
	DD	FLAT:?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	FLAT:?AlgorithmName@Algorithm@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?MandatoryBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalBlockSize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?GetOptimalBlockSizeUsed@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?OptimalDataAlignment@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
	DD	FLAT:?ProcessData@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?ProcessLastBlock@StreamTransformation@CryptoPP@@UAEXPAEPBEI@Z
	DD	FLAT:?MinLastBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
	DD	FLAT:?IsRandomAccess@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?Seek@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEX_K@Z
	DD	FLAT:?IsSelfInverting@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
	DD	FLAT:?IsForwardTransformation@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
CONST	ENDS
;	COMDAT ??_7?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
CONST	SEGMENT
??_7?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ DD FLAT:??_R4?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BSimpleKeyingInterface@1@@ ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`vftable'
	DD	FLAT:??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?MinKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?DefaultKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?GetValidKeyLength@CipherModeBase@CryptoPP@@UBEII@Z
	DD	FLAT:?IsValidKeyLength@CipherModeBase@CryptoPP@@UBE_NI@Z
	DD	FLAT:?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?IVRequirement@CTR_ModePolicy@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
	DD	FLAT:?IVSize@CipherModeBase@CryptoPP@@UBEIXZ
	DD	FLAT:?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
	DD	FLAT:?Resynchronize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAEXPBEH@Z
	DD	FLAT:?GetNextIV@SimpleKeyingInterface@CryptoPP@@UAEXAAVRandomNumberGenerator@2@PAE@Z
	DD	FLAT:?GetAlgorithm@SymmetricCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
	DD	FLAT:?UncheckedSetKey@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@MAEXPBEIABVNameValuePairs@2@@Z
	DD	FLAT:?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z
	DD	FLAT:?ResizeBuffers@CipherModeBase@CryptoPP@@MAEXXZ
	DD	FLAT:?IncrementCounterBy256@CTR_ModePolicy@CryptoPP@@MAEXXZ
	DD	FLAT:?GetPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MBEABUAdditiveCipherAbstractPolicy@2@XZ
	DD	FLAT:?AccessPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MAEAAUAdditiveCipherAbstractPolicy@2@XZ
CONST	ENDS
;	COMDAT ??_C@_03LECCGOIK@CTR@
CONST	SEGMENT
??_C@_03LECCGOIK@CTR@ DB 'CTR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@FMNEDLJE@CipherModeBase?3?5feedback?5size?5c@
CONST	SEGMENT
??_C@_0EH@FMNEDLJE@CipherModeBase?3?5feedback?5size?5c@ DB 'CipherModeBas'
	DB	'e: feedback size cannot be specified for this cipher mode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@6B@
CONST	SEGMENT
??_7?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@6B@ DD FLAT:??_R4?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@6B@ ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::`vftable'
	DD	FLAT:??_E?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?AssignValue@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UBEXPBDABVtype_info@@PAX@Z
	DD	FLAT:?MoveInto@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UBEXPAX@Z
CONST	ENDS
;	COMDAT __CT??_R0?AVParameterNotUsed@AlgorithmParametersBase@CryptoPP@@@8??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@ABV012@@Z40
xdata$x	SEGMENT
__CT??_R0?AVParameterNotUsed@AlgorithmParametersBase@CryptoPP@@@8??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@ABV012@@Z40 DD 00H
	DD	FLAT:??_R0?AVParameterNotUsed@AlgorithmParametersBase@CryptoPP@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@ABV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVParameterNotUsed@AlgorithmParametersBase@CryptoPP@@@8
data$r	SEGMENT
??_R0?AVParameterNotUsed@AlgorithmParametersBase@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVParameterNotUsed@AlgorithmParametersBase@CryptoPP@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVParameterNotUsed@AlgorithmParametersBase@CryptoPP@@
xdata$x	SEGMENT
__CTA3?AVParameterNotUsed@AlgorithmParametersBase@CryptoPP@@ DD 03H
	DD	FLAT:__CT??_R0?AVParameterNotUsed@AlgorithmParametersBase@CryptoPP@@@8??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@ABV012@@Z40
	DD	FLAT:__CT??_R0?AVException@CryptoPP@@@8??0Exception@CryptoPP@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVParameterNotUsed@AlgorithmParametersBase@CryptoPP@@
xdata$x	SEGMENT
__TI3?AVParameterNotUsed@AlgorithmParametersBase@CryptoPP@@ DD 00H
	DD	FLAT:??1ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVParameterNotUsed@AlgorithmParametersBase@CryptoPP@@
xdata$x	ENDS
;	COMDAT ??_C@_0CF@BLINCPFB@AlgorithmParametersBase?3?5parame@
CONST	SEGMENT
??_C@_0CF@BLINCPFB@AlgorithmParametersBase?3?5parame@ DB 'AlgorithmParame'
	DB	'tersBase: parameter "', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IAABKFFP@?$CC?5not?5used@
CONST	SEGMENT
??_C@_0L@IAABKFFP@?$CC?5not?5used@ DB '" not used', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7AlgorithmParametersBase@CryptoPP@@6B@
CONST	SEGMENT
??_7AlgorithmParametersBase@CryptoPP@@6B@ DD FLAT:??_R4AlgorithmParametersBase@CryptoPP@@6B@ ; CryptoPP::AlgorithmParametersBase::`vftable'
	DD	FLAT:??_EAlgorithmParametersBase@CryptoPP@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@6B@
CONST	SEGMENT
??_7ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@6B@ DD FLAT:??_R4ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@6B@ ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::`vftable'
	DD	FLAT:??_EParameterNotUsed@AlgorithmParametersBase@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?what@Exception@CryptoPP@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_R0H@8
data$r	SEGMENT
??_R0H@8 DD	FLAT:??_7type_info@@6B@			; int `RTTI Type Descriptor'
	DD	00H
	DB	'.H', 00H
data$r	ENDS
;	COMDAT ??_C@_0N@GKFFKNHD@FeedbackSize@
CONST	SEGMENT
??_C@_0N@GKFFKNHD@FeedbackSize@ DB 'FeedbackSize', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDBEGKHA@IV@
CONST	SEGMENT
??_C@_02JDBEGKHA@IV@ DB 'IV', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@KNKMJKBA@CryptoMaterial?3?5this?5object?5con@
CONST	SEGMENT
??_C@_0DE@KNKMJKBA@CryptoMaterial?3?5this?5object?5con@ DB 'CryptoMateria'
	DB	'l: this object contains invalid values', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVInvalidDataFormat@CryptoPP@@@8??0InvalidDataFormat@CryptoPP@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVInvalidDataFormat@CryptoPP@@@8??0InvalidDataFormat@CryptoPP@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVInvalidDataFormat@CryptoPP@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0InvalidDataFormat@CryptoPP@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInvalidDataFormat@CryptoPP@@@8
data$r	SEGMENT
??_R0?AVInvalidDataFormat@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::InvalidDataFormat `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVInvalidDataFormat@CryptoPP@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVInvalidMaterial@CryptoMaterial@CryptoPP@@@8??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV012@@Z40
xdata$x	SEGMENT
__CT??_R0?AVInvalidMaterial@CryptoMaterial@CryptoPP@@@8??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV012@@Z40 DD 00H
	DD	FLAT:??_R0?AVInvalidMaterial@CryptoMaterial@CryptoPP@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInvalidMaterial@CryptoMaterial@CryptoPP@@@8
data$r	SEGMENT
??_R0?AVInvalidMaterial@CryptoMaterial@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::CryptoMaterial::InvalidMaterial `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVInvalidMaterial@CryptoMaterial@CryptoPP@@', 00H
data$r	ENDS
;	COMDAT __CTA4?AVInvalidMaterial@CryptoMaterial@CryptoPP@@
xdata$x	SEGMENT
__CTA4?AVInvalidMaterial@CryptoMaterial@CryptoPP@@ DD 04H
	DD	FLAT:__CT??_R0?AVInvalidMaterial@CryptoMaterial@CryptoPP@@@8??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV012@@Z40
	DD	FLAT:__CT??_R0?AVInvalidDataFormat@CryptoPP@@@8??0InvalidDataFormat@CryptoPP@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVException@CryptoPP@@@8??0Exception@CryptoPP@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI4?AVInvalidMaterial@CryptoMaterial@CryptoPP@@
xdata$x	SEGMENT
__TI4?AVInvalidMaterial@CryptoMaterial@CryptoPP@@ DD 00H
	DD	FLAT:??1InvalidMaterial@CryptoMaterial@CryptoPP@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA4?AVInvalidMaterial@CryptoMaterial@CryptoPP@@
xdata$x	ENDS
;	COMDAT ??_7InvalidMaterial@CryptoMaterial@CryptoPP@@6B@
CONST	SEGMENT
??_7InvalidMaterial@CryptoMaterial@CryptoPP@@6B@ DD FLAT:??_R4InvalidMaterial@CryptoMaterial@CryptoPP@@6B@ ; CryptoPP::CryptoMaterial::InvalidMaterial::`vftable'
	DD	FLAT:??_EInvalidMaterial@CryptoMaterial@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?what@Exception@CryptoPP@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0DK@CFJCNMFC@RandomNumberGenerator?3?5Incorpor@
CONST	SEGMENT
??_C@_0DK@CFJCNMFC@RandomNumberGenerator?3?5Incorpor@ DB 'RandomNumberGen'
	DB	'erator: IncorporateEntropy not implemented', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@CJIHPKKH@?3?5this?5object?5doesn?8t?5support?5r@
CONST	SEGMENT
??_C@_0DA@CJIHPKKH@?3?5this?5object?5doesn?8t?5support?5r@ DB ': this obj'
	DB	'ect doesn''t support resynchronization', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07CIFAGBMG@unknown@
CONST	SEGMENT
??_C@_07CIFAGBMG@unknown@ DB 'unknown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@CCPAJEEJ@Clone?$CI?$CJ?5is?5not?5implemented?5yet?4@
CONST	SEGMENT
??_C@_0CA@CCPAJEEJ@Clone?$CI?$CJ?5is?5not?5implemented?5yet?4@ DB 'Clone('
	DB	') is not implemented yet.', 00H		; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVNotImplemented@CryptoPP@@@8??0NotImplemented@CryptoPP@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVNotImplemented@CryptoPP@@@8??0NotImplemented@CryptoPP@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVNotImplemented@CryptoPP@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0NotImplemented@CryptoPP@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVNotImplemented@CryptoPP@@@8
data$r	SEGMENT
??_R0?AVNotImplemented@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::NotImplemented `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVNotImplemented@CryptoPP@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVNotImplemented@CryptoPP@@
xdata$x	SEGMENT
__CTA3?AVNotImplemented@CryptoPP@@ DD 03H
	DD	FLAT:__CT??_R0?AVNotImplemented@CryptoPP@@@8??0NotImplemented@CryptoPP@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVException@CryptoPP@@@8??0Exception@CryptoPP@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVNotImplemented@CryptoPP@@
xdata$x	SEGMENT
__TI3?AVNotImplemented@CryptoPP@@ DD 00H
	DD	FLAT:??1NotImplemented@CryptoPP@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVNotImplemented@CryptoPP@@
xdata$x	ENDS
;	COMDAT __CTA3?AVInvalidArgument@CryptoPP@@
xdata$x	SEGMENT
__CTA3?AVInvalidArgument@CryptoPP@@ DD 03H
	DD	FLAT:__CT??_R0?AVInvalidArgument@CryptoPP@@@8??0InvalidArgument@CryptoPP@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVException@CryptoPP@@@8??0Exception@CryptoPP@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVInvalidArgument@CryptoPP@@
xdata$x	SEGMENT
__TI3?AVInvalidArgument@CryptoPP@@ DD 00H
	DD	FLAT:??1InvalidArgument@CryptoPP@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVInvalidArgument@CryptoPP@@
xdata$x	ENDS
;	COMDAT __CT??_R0?AVException@CryptoPP@@@8??0Exception@CryptoPP@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVException@CryptoPP@@@8??0Exception@CryptoPP@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVException@CryptoPP@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0Exception@CryptoPP@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@CryptoPP@@@8
data$r	SEGMENT
??_R0?AVException@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::Exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVException@CryptoPP@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVInvalidArgument@CryptoPP@@@8??0InvalidArgument@CryptoPP@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVInvalidArgument@CryptoPP@@@8??0InvalidArgument@CryptoPP@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVInvalidArgument@CryptoPP@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0InvalidArgument@CryptoPP@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVInvalidArgument@CryptoPP@@@8
data$r	SEGMENT
??_R0?AVInvalidArgument@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::InvalidArgument `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVInvalidArgument@CryptoPP@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVValueTypeMismatch@NameValuePairs@CryptoPP@@@8??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV012@@Z48
xdata$x	SEGMENT
__CT??_R0?AVValueTypeMismatch@NameValuePairs@CryptoPP@@@8??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV012@@Z48 DD 00H
	DD	FLAT:??_R0?AVValueTypeMismatch@NameValuePairs@CryptoPP@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	030H
	DD	FLAT:??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVValueTypeMismatch@NameValuePairs@CryptoPP@@@8
data$r	SEGMENT
??_R0?AVValueTypeMismatch@NameValuePairs@CryptoPP@@@8 DD FLAT:??_7type_info@@6B@ ; CryptoPP::NameValuePairs::ValueTypeMismatch `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVValueTypeMismatch@NameValuePairs@CryptoPP@@', 00H
data$r	ENDS
;	COMDAT __CTA4?AVValueTypeMismatch@NameValuePairs@CryptoPP@@
xdata$x	SEGMENT
__CTA4?AVValueTypeMismatch@NameValuePairs@CryptoPP@@ DD 04H
	DD	FLAT:__CT??_R0?AVValueTypeMismatch@NameValuePairs@CryptoPP@@@8??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV012@@Z48
	DD	FLAT:__CT??_R0?AVInvalidArgument@CryptoPP@@@8??0InvalidArgument@CryptoPP@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVException@CryptoPP@@@8??0Exception@CryptoPP@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI4?AVValueTypeMismatch@NameValuePairs@CryptoPP@@
xdata$x	SEGMENT
__TI4?AVValueTypeMismatch@NameValuePairs@CryptoPP@@ DD 00H
	DD	FLAT:??1ValueTypeMismatch@NameValuePairs@CryptoPP@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA4?AVValueTypeMismatch@NameValuePairs@CryptoPP@@
xdata$x	ENDS
;	COMDAT ??_C@_0L@KPHNIBPN@ValueNames@
CONST	SEGMENT
??_C@_0L@KPHNIBPN@ValueNames@ DB 'ValueNames', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@LNMKHLKF@NameValuePairs?3?5type?5mismatch?5f@
CONST	SEGMENT
??_C@_0CE@LNMKHLKF@NameValuePairs?3?5type?5mismatch?5f@ DB 'NameValuePair'
	DB	's: type mismatch for ''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PGGGIJHH@?8?0?5stored?5?8@
CONST	SEGMENT
??_C@_0M@PGGGIJHH@?8?0?5stored?5?8@ DB ''', stored ''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CPJAGCKP@?8?0?5trying?5to?5retrieve?5?8@
CONST	SEGMENT
??_C@_0BI@CPJAGCKP@?8?0?5trying?5to?5retrieve?5?8@ DB ''', trying to retr'
	DB	'ieve ''', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01GEODFPGF@?8@
CONST	SEGMENT
??_C@_01GEODFPGF@?8@ DB '''', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7ValueTypeMismatch@NameValuePairs@CryptoPP@@6B@
CONST	SEGMENT
??_7ValueTypeMismatch@NameValuePairs@CryptoPP@@6B@ DD FLAT:??_R4ValueTypeMismatch@NameValuePairs@CryptoPP@@6B@ ; CryptoPP::NameValuePairs::ValueTypeMismatch::`vftable'
	DD	FLAT:??_EValueTypeMismatch@NameValuePairs@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?what@Exception@CryptoPP@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7NotImplemented@CryptoPP@@6B@
CONST	SEGMENT
??_7NotImplemented@CryptoPP@@6B@ DD FLAT:??_R4NotImplemented@CryptoPP@@6B@ ; CryptoPP::NotImplemented::`vftable'
	DD	FLAT:??_ENotImplemented@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?what@Exception@CryptoPP@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7InvalidDataFormat@CryptoPP@@6B@
CONST	SEGMENT
??_7InvalidDataFormat@CryptoPP@@6B@ DD FLAT:??_R4InvalidDataFormat@CryptoPP@@6B@ ; CryptoPP::InvalidDataFormat::`vftable'
	DD	FLAT:??_EInvalidDataFormat@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?what@Exception@CryptoPP@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7InvalidArgument@CryptoPP@@6B@
CONST	SEGMENT
??_7InvalidArgument@CryptoPP@@6B@ DD FLAT:??_R4InvalidArgument@CryptoPP@@6B@ ; CryptoPP::InvalidArgument::`vftable'
	DD	FLAT:??_EInvalidArgument@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?what@Exception@CryptoPP@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7Exception@CryptoPP@@6B@
CONST	SEGMENT
??_7Exception@CryptoPP@@6B@ DD FLAT:??_R4Exception@CryptoPP@@6B@ ; CryptoPP::Exception::`vftable'
	DD	FLAT:??_EException@CryptoPP@@UAEPAXI@Z
	DD	FLAT:?what@Exception@CryptoPP@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_copy@PAVInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAPAVInteger@CryptoPP@@QAV12@0PAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@PAVInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAPAVInteger@CryptoPP@@QAV12@0PAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z$0
__ehfuncinfo$??$_Uninitialized_copy@PAVInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAPAVInteger@CryptoPP@@QAV12@0PAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_copy@PAVInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAPAVInteger@CryptoPP@@QAV12@0PAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$GetThisObject@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@@NameValuePairs@CryptoPP@@QBE_NAAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$GetThisObject@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@@NameValuePairs@CryptoPP@@QBE_NAAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$GetThisObject@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@@NameValuePairs@CryptoPP@@QBE_NAAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@1@@Z$1
__ehfuncinfo$??$GetThisObject@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@@NameValuePairs@CryptoPP@@QBE_NAAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$GetThisObject@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@@NameValuePairs@CryptoPP@@QBE_NAAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?RVConstByteArrayParameter@CryptoPP@@@AlgorithmParameters@CryptoPP@@QAEAAV01@PBDABVConstByteArrayParameter@1@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?RVConstByteArrayParameter@CryptoPP@@@AlgorithmParameters@CryptoPP@@QAEAAV01@PBDABVConstByteArrayParameter@1@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?RVConstByteArrayParameter@CryptoPP@@@AlgorithmParameters@CryptoPP@@QAEAAV01@PBDABVConstByteArrayParameter@1@_N@Z$2
__ehfuncinfo$??$?RVConstByteArrayParameter@CryptoPP@@@AlgorithmParameters@CryptoPP@@QAEAAV01@PBDABVConstByteArrayParameter@1@_N@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?RVConstByteArrayParameter@CryptoPP@@@AlgorithmParameters@CryptoPP@@QAEAAV01@PBDABVConstByteArrayParameter@1@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@QAE@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@1@ABVNameValuePairs@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@QAE@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@1@ABVNameValuePairs@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@QAE@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@1@ABVNameValuePairs@1@@Z$1
__ehfuncinfo$??0?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@QAE@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@1@ABVNameValuePairs@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@QAE@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@1@ABVNameValuePairs@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$AssignFromHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@2@@CryptoPP@@YA?AV?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@0@ABVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$AssignFromHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@2@@CryptoPP@@YA?AV?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@0@ABVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$AssignFromHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@2@@CryptoPP@@YA?AV?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@0@ABVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z$1
__ehfuncinfo$??$AssignFromHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@2@@CryptoPP@@YA?AV?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@0@ABVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$AssignFromHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@2@@CryptoPP@@YA?AV?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@0@ABVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?AgreeWithStaticPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV32@_N1@Z DD 019930522H
	DD	0dH
	DD	FLAT:__unwindtable$?AgreeWithStaticPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV32@_N1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?AgreeWithStaticPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV32@_N1@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	00H
	DD	02H
	DD	00H
	DD	01H
	DD	00H
	DD	04H
	DD	00H
	DD	04H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	08H
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?AgreeWithStaticPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV32@_N1@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$?AgreeWithStaticPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV32@_N1@Z$8
	DD	0bH
	DD	FLAT:__unwindfunclet$?AgreeWithStaticPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV32@_N1@Z$9
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?AgreeWithEphemeralPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@ABV32@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?AgreeWithEphemeralPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@ABV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?AgreeWithEphemeralPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@ABV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AgreeWithEphemeralPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@ABV32@@Z$3
	DD	00H
	DD	00H
	DD	01H
	DD	00H
	DD	02H
	DD	FLAT:__unwindfunclet$?AgreeWithEphemeralPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@ABV32@@Z$2
	DD	02H
	DD	FLAT:___std_terminate
	DD	01H
	DD	00H
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
__ehfuncinfo$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$11
	DD	02H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2
	DD	04H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3
	DD	02H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2
__ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	00H
__ehfuncinfo$??0?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	00H
__ehfuncinfo$??0?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	00H
__ehfuncinfo$??0?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@UBEPAVClonable@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@UBEPAVClonable@2@XZ$0
__ehfuncinfo$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@UBEPAVClonable@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@UBEPAVClonable@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
__ehfuncinfo$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$10
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3
	DD	01H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2
__ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
__ehfuncinfo$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$11
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3
	DD	01H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2
__ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
__ehfuncinfo$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$10
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3
	DD	01H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2
__ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
__ehfuncinfo$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$9
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3
	DD	01H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2
__ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
__ehfuncinfo$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$9
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3
	DD	01H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2
__ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
__ehfuncinfo$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$10
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3
	DD	01H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2
__ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
__ehfuncinfo$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$10
	DD	02H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2
	DD	04H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3
	DD	02H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2
__ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	00H
__ehfuncinfo$??0?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	00H
__ehfuncinfo$??0?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	00H
__ehfuncinfo$??0?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@UBEPAVClonable@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@UBEPAVClonable@2@XZ$0
__ehfuncinfo$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@UBEPAVClonable@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@UBEPAVClonable@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
__ehfuncinfo$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$9
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3
	DD	01H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2
__ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
__ehfuncinfo$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$11
	DD	02H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2
	DD	04H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3
	DD	02H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2
__ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	00H
__ehfuncinfo$??0?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	00H
__ehfuncinfo$??0?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	00H
__ehfuncinfo$??0?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@UBEPAVClonable@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@UBEPAVClonable@2@XZ$0
__ehfuncinfo$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@UBEPAVClonable@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@UBEPAVClonable@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
__ehfuncinfo$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$10
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3
	DD	01H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2
__ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
__ehfuncinfo$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$10
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3
	DD	01H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2
__ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
__ehfuncinfo$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?StaticAlgorithmName@?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$10
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3
	DD	01H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2
__ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateDecoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateDecoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateEncoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateEncoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateDecoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateDecoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateEncoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateEncoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateDecoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateDecoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateEncoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateEncoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateDecoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateDecoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateEncoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateEncoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateDecoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateDecoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateEncoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateEncoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateDecoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateDecoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateEncoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateEncoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateDecoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateDecoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateEncoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateEncoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateDecoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateDecoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateEncoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateEncoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateDecoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateDecoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateEncoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateEncoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateDecoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateDecoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateEncoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateEncoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateDecoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateDecoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateEncoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateEncoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateDecoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateDecoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateEncoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateEncoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateDecoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateDecoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateEncoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0
__ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateEncoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z DD 019930522H
	DD	0eH
	DD	FLAT:__unwindtable$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z$7
	DD	02H
	DD	FLAT:__unwindfunclet$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z$3
	DD	04H
	DD	FLAT:__unwindfunclet$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z$4
	DD	05H
	DD	FLAT:__unwindfunclet$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z$5
	DD	06H
	DD	FLAT:__unwindfunclet$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z$6
	DD	06H
	DD	FLAT:___std_terminate
	DD	05H
	DD	FLAT:___std_terminate
	DD	04H
	DD	FLAT:___std_terminate
	DD	01H
	DD	FLAT:___std_terminate
	DD	00H
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1DH2KeyAgreement@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1DH2KeyAgreement@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1DH2KeyAgreement@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DH2KeyAgreement@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DH2KeyAgreement@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DH2KeyAgreement@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0DH2KeyAgreement@@QAE@XZ$2
__ehfuncinfo$??0DH2KeyAgreement@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0DH2KeyAgreement@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GKeyAgreement@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_GKeyAgreement@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_GKeyAgreement@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1KeyAgreement@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1KeyAgreement@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1KeyAgreement@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1Enc@RC5@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1Enc@RC5@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1Enc@RC5@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Enc@RC5@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	00H
__ehfuncinfo$??0Enc@RC5@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Enc@RC5@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1Base@RC5@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1Base@RC5@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1Base@RC5@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Base@RC5@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	00H
__ehfuncinfo$??0Base@RC5@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Base@RC5@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1Base@Camellia@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1Base@Camellia@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1Base@Camellia@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Base@Camellia@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	00H
__ehfuncinfo$??0Base@Camellia@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Base@Camellia@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1Enc@RC6@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1Enc@RC6@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1Enc@RC6@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Enc@RC6@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	00H
__ehfuncinfo$??0Enc@RC6@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Enc@RC6@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1Base@RC6@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1Base@RC6@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1Base@RC6@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Base@RC6@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	00H
__ehfuncinfo$??0Base@RC6@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Base@RC6@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$SecBlock@IV?$AllocatorWithCleanup@I$0A@@CryptoPP@@@CryptoPP@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AlgorithmName@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AlgorithmName@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1
__ehfuncinfo$?AlgorithmName@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AlgorithmName@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?StaticAlgorithmName@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StaticAlgorithmName@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0
__ehfuncinfo$?StaticAlgorithmName@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?StaticAlgorithmName@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z$5
	DD	02H
	DD	FLAT:___std_terminate
	DD	01H
	DD	FLAT:___std_terminate
	DD	00H
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z$11 DD 08H
	DD	FLAT:??_R0?AVDL_BadElement@CryptoPP@@@8
	DD	00H
	DD	FLAT:__catch$?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z$0
__tryblocktable$?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z DD 00H
	DD	06H
	DD	07H
	DD	01H
	DD	FLAT:__catchsym$?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z$11
__ehfuncinfo$?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z$4
	DD	02H
	DD	FLAT:___std_terminate
	DD	01H
	DD	FLAT:___std_terminate
	DD	00H
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GeneratePublicKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GeneratePublicKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GeneratePublicKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z$1
	DD	00H
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?GeneratePublicKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?GeneratePublicKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GeneratePrivateKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?GeneratePrivateKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GeneratePrivateKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GeneratePrivateKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GeneratePrivateKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GeneratePrivateKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z$1
	DD	02H
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DL_GroupParameters_GFP@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DL_GroupParameters_GFP@CryptoPP@@QAE@XZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$??0DL_GroupParameters_GFP@CryptoPP@@QAE@XZ$3
	DD	01H
	DD	FLAT:__unwindfunclet$??0DL_GroupParameters_GFP@CryptoPP@@QAE@XZ$6
__ehfuncinfo$??0DL_GroupParameters_GFP@CryptoPP@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0DL_GroupParameters_GFP@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@QAE@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@QAE@XZ$2
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@QAE@XZ$5
__ehfuncinfo$??0?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetModulusAndSubgroupGenerator@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEXABVInteger@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetModulusAndSubgroupGenerator@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEXABVInteger@2@0@Z$0
__ehfuncinfo$?SetModulusAndSubgroupGenerator@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEXABVInteger@2@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetModulusAndSubgroupGenerator@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEXABVInteger@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@QAE@XZ$4
__ehfuncinfo$??0?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1DL_GroupParameters_IntegerBased@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1DL_GroupParameters_IntegerBased@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1DL_GroupParameters_IntegerBased@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?FastSubgroupCheckAvailable@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FastSubgroupCheckAvailable@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?FastSubgroupCheckAvailable@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NXZ$1
	DD	00H
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?FastSubgroupCheckAvailable@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NXZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?FastSubgroupCheckAvailable@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GetGroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?GetGroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?GetGroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetGroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ$2
	DD	00H
	DD	FLAT:__unwindfunclet$?GetGroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ$0
	DD	01H
	DD	FLAT:__unwindfunclet$?GetGroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ$1
	DD	01H
	DD	FLAT:___std_terminate
	DD	00H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCofactor@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCofactor@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetCofactor@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@XZ$0
	DD	00H
	DD	FLAT:___std_terminate
__ehfuncinfo$?GetCofactor@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetCofactor@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ExponentiateElement@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ExponentiateElement@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z$0
__ehfuncinfo$?ExponentiateElement@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ExponentiateElement@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4?$value_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAEAAV01@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4?$value_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAEAAV01@ABV01@@Z$0
__ehfuncinfo$??4?$value_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAEAAV01@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4?$value_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAEAAV01@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetModulus@ModExpPrecomputation@CryptoPP@@QAEXABVInteger@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetModulus@ModExpPrecomputation@CryptoPP@@QAEXABVInteger@2@@Z$0
__ehfuncinfo$?SetModulus@ModExpPrecomputation@CryptoPP@@QAEXABVInteger@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetModulus@ModExpPrecomputation@CryptoPP@@QAEXABVInteger@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@QAE@XZ$0
__ehfuncinfo$??0?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DL_BadElement@CryptoPP@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DL_BadElement@CryptoPP@@QAE@ABV01@@Z$2
__ehfuncinfo$??0DL_BadElement@CryptoPP@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0DL_BadElement@CryptoPP@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DL_BadElement@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DL_BadElement@CryptoPP@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DL_BadElement@CryptoPP@@QAE@XZ$5
__ehfuncinfo$??0DL_BadElement@CryptoPP@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0DL_BadElement@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_GMontgomeryRepresentation@CryptoPP@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_GMontgomeryRepresentation@CryptoPP@@UAEPAXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??_GMontgomeryRepresentation@CryptoPP@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z$0
	DD	02H
	DD	FLAT:__unwindfunclet$??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z$1
__ehfuncinfo$??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1MontgomeryRepresentation@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1MontgomeryRepresentation@CryptoPP@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1MontgomeryRepresentation@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?MultiplicativeIdentity@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MultiplicativeIdentity@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?MultiplicativeIdentity@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@XZ$1
	DD	00H
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?MultiplicativeIdentity@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?MultiplicativeIdentity@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ConvertIn@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?ConvertIn@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?ConvertIn@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ConvertIn@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?ConvertIn@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?ConvertIn@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z$2
	DD	01H
	DD	FLAT:___std_terminate
	DD	00H
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clone@MontgomeryRepresentation@CryptoPP@@UBEPAVModularArithmetic@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Clone@MontgomeryRepresentation@CryptoPP@@UBEPAVModularArithmetic@2@XZ$0
__ehfuncinfo$?Clone@MontgomeryRepresentation@CryptoPP@@UBEPAVModularArithmetic@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Clone@MontgomeryRepresentation@CryptoPP@@UBEPAVModularArithmetic@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ModularArithmetic@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1ModularArithmetic@CryptoPP@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1ModularArithmetic@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?MultiplicativeInverse@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MultiplicativeInverse@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z$0
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?MultiplicativeInverse@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?MultiplicativeInverse@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?IsUnit@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?IsUnit@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?IsUnit@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?IsUnit@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Square@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Square@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Square@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z$1
	DD	00H
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?Square@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?Square@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Multiply@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Multiply@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Multiply@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z$1
	DD	00H
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$?Multiply@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?Multiply@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clone@ModularArithmetic@CryptoPP@@UBEPAV12@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Clone@ModularArithmetic@CryptoPP@@UBEPAV12@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Clone@ModularArithmetic@CryptoPP@@UBEPAV12@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$?Clone@ModularArithmetic@CryptoPP@@UBEPAV12@XZ$2
__ehfuncinfo$?Clone@ModularArithmetic@CryptoPP@@UBEPAV12@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Clone@ModularArithmetic@CryptoPP@@UBEPAV12@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ModularArithmetic@CryptoPP@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ModularArithmetic@CryptoPP@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ModularArithmetic@CryptoPP@@QAE@ABV01@@Z$1
__ehfuncinfo$??0ModularArithmetic@CryptoPP@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0ModularArithmetic@CryptoPP@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ModularArithmetic@CryptoPP@@QAE@ABVInteger@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ModularArithmetic@CryptoPP@@QAE@ABVInteger@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ModularArithmetic@CryptoPP@@QAE@ABVInteger@1@@Z$1
__ehfuncinfo$??0ModularArithmetic@CryptoPP@@QAE@ABVInteger@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0ModularArithmetic@CryptoPP@@QAE@ABVInteger@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0AutoSeededRandomPool@CryptoPP@@QAE@_NI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0AutoSeededRandomPool@CryptoPP@@QAE@_NI@Z$0
__ehfuncinfo$??0AutoSeededRandomPool@CryptoPP@@QAE@_NI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0AutoSeededRandomPool@CryptoPP@@QAE@_NI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SelfTestFailure@CryptoPP@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SelfTestFailure@CryptoPP@@QAE@ABV01@@Z$1
__ehfuncinfo$??0SelfTestFailure@CryptoPP@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SelfTestFailure@CryptoPP@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SelfTestFailure@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SelfTestFailure@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__ehfuncinfo$??0SelfTestFailure@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SelfTestFailure@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z$4
__ehfuncinfo$??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1Integer@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1Integer@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1Integer@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$SecBlock@IV?$AllocatorWithCleanup@I$00@CryptoPP@@@CryptoPP@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??6Integer@CryptoPP@@QBE?AV01@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??6Integer@CryptoPP@@QBE?AV01@I@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??6Integer@CryptoPP@@QBE?AV01@I@Z$0
	DD	00H
	DD	FLAT:___std_terminate
__ehfuncinfo$??6Integer@CryptoPP@@QBE?AV01@I@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??6Integer@CryptoPP@@QBE?AV01@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ$1
__ehfuncinfo$??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@QAE@XZ$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@QAE@XZ$0
__ehfuncinfo$??0?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@QAE@XZ$1
__ehfuncinfo$??0?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CTR_ModePolicy@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
	DD	0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CTR_ModePolicy@CryptoPP@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CTR_ModePolicy@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CTR_ModePolicy@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CTR_ModePolicy@CryptoPP@@QAE@XZ$0
__ehfuncinfo$??0CTR_ModePolicy@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CTR_ModePolicy@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CipherModeBase@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1CipherModeBase@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CipherModeBase@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$SecBlock@EV?$AllocatorWithCleanup@E$00@CryptoPP@@@CryptoPP@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z$0
__ehfuncinfo$?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??_G?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UAEPAXI@Z DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??_G?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UAEPAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??_G?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UAEPAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z$0
__ehfuncinfo$??0?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?MoveInto@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UBEXPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MoveInto@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UBEXPAX@Z$0
__ehfuncinfo$?MoveInto@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UBEXPAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?MoveInto@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UBEXPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@QAE@PBDABVConstByteArrayParameter@1@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@QAE@PBDABVConstByteArrayParameter@1@_N@Z$0
__ehfuncinfo$??0?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@QAE@PBDABVConstByteArrayParameter@1@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@QAE@PBDABVConstByteArrayParameter@1@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1AlgorithmParametersBase@CryptoPP@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@ABV012@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@ABV012@@Z$1
__ehfuncinfo$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@ABV012@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@ABV012@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@PBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@PBD@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@PBD@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@PBD@Z$6
__ehfuncinfo$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@PBD@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ConstByteArrayParameter@CryptoPP@@QAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
__ehfuncinfo$??1ConstByteArrayParameter@CryptoPP@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ConstByteArrayParameter@CryptoPP@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ConstByteArrayParameter@CryptoPP@@QAE@PBEI_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ConstByteArrayParameter@CryptoPP@@QAE@PBEI_N@Z$0
__ehfuncinfo$??0ConstByteArrayParameter@CryptoPP@@QAE@PBEI_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ConstByteArrayParameter@CryptoPP@@QAE@PBEI_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CheckSize@?$AllocatorBase@I@CryptoPP@@KAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CheckSize@?$AllocatorBase@I@CryptoPP@@KAXI@Z$0
__ehfuncinfo$?CheckSize@?$AllocatorBase@I@CryptoPP@@KAXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CheckSize@?$AllocatorBase@I@CryptoPP@@KAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?SetUp@Cipher@@AAE_N_N@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?SetUp@Cipher@@AAE_N_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?SetUp@Cipher@@AAE_N_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetUp@Cipher@@AAE_N_N@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SetUp@Cipher@@AAE_N_N@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SetUp@Cipher@@AAE_N_N@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?SetUp@Cipher@@AAE_N_N@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?SetUp@Cipher@@AAE_N_N@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?SetUp@Cipher@@AAE_N_N@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Prepare@Cipher@@QAEIPAXPAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Prepare@Cipher@@QAEIPAXPAI@Z$0
__ehfuncinfo$?Prepare@Cipher@@QAEIPAXPAI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Prepare@Cipher@@QAEIPAXPAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ThrowIfInvalid@CryptoMaterial@CryptoPP@@UBEXAAVRandomNumberGenerator@2@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ThrowIfInvalid@CryptoMaterial@CryptoPP@@UBEXAAVRandomNumberGenerator@2@I@Z$0
__ehfuncinfo$?ThrowIfInvalid@CryptoMaterial@CryptoPP@@UBEXAAVRandomNumberGenerator@2@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ThrowIfInvalid@CryptoMaterial@CryptoPP@@UBEXAAVRandomNumberGenerator@2@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV012@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV012@@Z$2
__ehfuncinfo$??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV012@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV012@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
__ehfuncinfo$??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z$0
__ehfuncinfo$?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z$1
__ehfuncinfo$?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clone@Clonable@CryptoPP@@UBEPAV12@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Clone@Clonable@CryptoPP@@UBEPAV12@XZ$0
__ehfuncinfo$?Clone@Clonable@CryptoPP@@UBEPAV12@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ThrowIfTypeMismatch@NameValuePairs@CryptoPP@@SAXPBDABVtype_info@@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ThrowIfTypeMismatch@NameValuePairs@CryptoPP@@SAXPBDABVtype_info@@1@Z$0
__ehfuncinfo$?ThrowIfTypeMismatch@NameValuePairs@CryptoPP@@SAXPBDABVtype_info@@1@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ThrowIfTypeMismatch@NameValuePairs@CryptoPP@@SAXPBDABVtype_info@@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV012@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV012@@Z$2
__ehfuncinfo$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV012@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV012@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z$8
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0NotImplemented@CryptoPP@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0NotImplemented@CryptoPP@@QAE@ABV01@@Z$1
__ehfuncinfo$??0NotImplemented@CryptoPP@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0NotImplemented@CryptoPP@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0NotImplemented@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0NotImplemented@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__ehfuncinfo$??0NotImplemented@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0NotImplemented@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0InvalidDataFormat@CryptoPP@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InvalidDataFormat@CryptoPP@@QAE@ABV01@@Z$1
__ehfuncinfo$??0InvalidDataFormat@CryptoPP@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0InvalidDataFormat@CryptoPP@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0InvalidDataFormat@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InvalidDataFormat@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__ehfuncinfo$??0InvalidDataFormat@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0InvalidDataFormat@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0InvalidArgument@CryptoPP@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InvalidArgument@CryptoPP@@QAE@ABV01@@Z$1
__ehfuncinfo$??0InvalidArgument@CryptoPP@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0InvalidArgument@CryptoPP@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0InvalidArgument@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0InvalidArgument@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
__ehfuncinfo$??0InvalidArgument@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0InvalidArgument@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@CryptoPP@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@CryptoPP@@QAE@ABV01@@Z$0
__ehfuncinfo$??0Exception@CryptoPP@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@CryptoPP@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@CryptoPP@@QAE@W4ErrorType@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@CryptoPP@@QAE@W4ErrorType@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
__ehfuncinfo$??0Exception@CryptoPP@@QAE@W4ErrorType@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Exception@CryptoPP@@QAE@W4ErrorType@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odsp
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}', COMDAT
  00000	83 e9 24	 sub	 ecx, 36			; 00000024H
  00003	e9 00 00 00 00	 jmp	 ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 28	 sub	 ecx, 40			; 00000028H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 18	 sub	 ecx, 24			; 00000018H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}', COMDAT
  00000	83 e9 24	 sub	 ecx, 36			; 00000024H
  00003	e9 00 00 00 00	 jmp	 ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 28	 sub	 ecx, 40			; 00000028H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 18	 sub	 ecx, 24			; 00000018H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}', COMDAT
  00000	83 e9 24	 sub	 ecx, 36			; 00000024H
  00003	e9 00 00 00 00	 jmp	 ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 28	 sub	 ecx, 40			; 00000028H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 18	 sub	 ecx, 24			; 00000018H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}', COMDAT
  00000	83 e9 24	 sub	 ecx, 36			; 00000024H
  00003	e9 00 00 00 00	 jmp	 ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 28	 sub	 ecx, 40			; 00000028H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 18	 sub	 ecx, 24			; 00000018H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}', COMDAT
  00000	83 e9 24	 sub	 ecx, 36			; 00000024H
  00003	e9 00 00 00 00	 jmp	 ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 28	 sub	 ecx, 40			; 00000028H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 18	 sub	 ecx, 24			; 00000018H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}', COMDAT
  00000	83 e9 24	 sub	 ecx, 36			; 00000024H
  00003	e9 00 00 00 00	 jmp	 ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 28	 sub	 ecx, 40			; 00000028H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 18	 sub	 ecx, 24			; 00000018H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}', COMDAT
  00000	83 e9 24	 sub	 ecx, 36			; 00000024H
  00003	e9 00 00 00 00	 jmp	 ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 28	 sub	 ecx, 40			; 00000028H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 18	 sub	 ecx, 24			; 00000018H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}', COMDAT
  00000	83 e9 24	 sub	 ecx, 36			; 00000024H
  00003	e9 00 00 00 00	 jmp	 ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 28	 sub	 ecx, 40			; 00000028H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 18	 sub	 ecx, 24			; 00000018H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}', COMDAT
  00000	83 e9 24	 sub	 ecx, 36			; 00000024H
  00003	e9 00 00 00 00	 jmp	 ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 28	 sub	 ecx, 40			; 00000028H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 18	 sub	 ecx, 24			; 00000018H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}', COMDAT
  00000	83 e9 24	 sub	 ecx, 36			; 00000024H
  00003	e9 00 00 00 00	 jmp	 ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 28	 sub	 ecx, 40			; 00000028H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 18	 sub	 ecx, 24			; 00000018H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}', COMDAT
  00000	83 e9 24	 sub	 ecx, 36			; 00000024H
  00003	e9 00 00 00 00	 jmp	 ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 28	 sub	 ecx, 40			; 00000028H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 18	 sub	 ecx, 24			; 00000018H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}', COMDAT
  00000	83 e9 24	 sub	 ecx, 36			; 00000024H
  00003	e9 00 00 00 00	 jmp	 ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 28	 sub	 ecx, 40			; 00000028H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 18	 sub	 ecx, 24			; 00000018H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}', COMDAT
  00000	83 e9 24	 sub	 ecx, 36			; 00000024H
  00003	e9 00 00 00 00	 jmp	 ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@WCE@BE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; [thunk]:CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName`adjustor{36}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 28	 sub	 ecx, 40			; 00000028H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WCI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 18	 sub	 ecx, 24			; 00000018H
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@WBI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
??_E?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@UAEPAXI@Z
??_E?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@UAEPAXI@Z
??_E?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@UAEPAXI@Z
??_E?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UAEPAXI@Z
??_E?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@UAEPAXI@Z
??_E?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@UAEPAXI@Z
??_E?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UAEPAXI@Z
??_E?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@UAEPAXI@Z
??_E?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@UAEPAXI@Z
??_E?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@UAEPAXI@Z
??_E?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@UAEPAXI@Z
??_E?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UAEPAXI@Z
??_E?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@UAEPAXI@Z
??_E?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_EDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@$4PPPPPPPM@GM@AEPAXI@Z
_TEXT	SEGMENT
??_EDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@$4PPPPPPPM@GM@AEPAXI@Z PROC ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`vector deleting destructor', COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	83 e9 6c	 sub	 ecx, 108		; 0000006cH
  00006	e9 00 00 00 00	 jmp	 ??_EDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@UAEPAXI@Z
??_EDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@$4PPPPPPPM@GM@AEPAXI@Z ENDP ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?GetVoidValue@DL_GroupParameters_GFP@CryptoPP@@$4PPPPPPPM@A@BE_NPBDABVtype_info@@PAX@Z
_TEXT	SEGMENT
?GetVoidValue@DL_GroupParameters_GFP@CryptoPP@@$4PPPPPPPM@A@BE_NPBDABVtype_info@@PAX@Z PROC ; CryptoPP::DL_GroupParameters_GFP::GetVoidValue, COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	e9 00 00 00 00	 jmp	 ?GetVoidValue@DL_GroupParameters_GFP@CryptoPP@@UBE_NPBDABVtype_info@@PAX@Z ; CryptoPP::DL_GroupParameters_GFP::GetVoidValue
?GetVoidValue@DL_GroupParameters_GFP@CryptoPP@@$4PPPPPPPM@A@BE_NPBDABVtype_info@@PAX@Z ENDP ; CryptoPP::DL_GroupParameters_GFP::GetVoidValue
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_EDL_GroupParameters_GFP@CryptoPP@@$4PPPPPPPM@GM@AEPAXI@Z
_TEXT	SEGMENT
??_EDL_GroupParameters_GFP@CryptoPP@@$4PPPPPPPM@GM@AEPAXI@Z PROC ; CryptoPP::DL_GroupParameters_GFP::`vector deleting destructor', COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	83 e9 6c	 sub	 ecx, 108		; 0000006cH
  00006	e9 00 00 00 00	 jmp	 ??_EDL_GroupParameters_GFP@CryptoPP@@UAEPAXI@Z
??_EDL_GroupParameters_GFP@CryptoPP@@$4PPPPPPPM@GM@AEPAXI@Z ENDP ; CryptoPP::DL_GroupParameters_GFP::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?AssignFrom@DL_GroupParameters_IntegerBased@CryptoPP@@$4PPPPPPPM@EE@AEXABVNameValuePairs@2@@Z
_TEXT	SEGMENT
?AssignFrom@DL_GroupParameters_IntegerBased@CryptoPP@@$4PPPPPPPM@EE@AEXABVNameValuePairs@2@@Z PROC ; CryptoPP::DL_GroupParameters_IntegerBased::AssignFrom, COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	83 e9 44	 sub	 ecx, 68			; 00000044H
  00006	e9 00 00 00 00	 jmp	 ?AssignFrom@DL_GroupParameters_IntegerBased@CryptoPP@@UAEXABVNameValuePairs@2@@Z ; CryptoPP::DL_GroupParameters_IntegerBased::AssignFrom
?AssignFrom@DL_GroupParameters_IntegerBased@CryptoPP@@$4PPPPPPPM@EE@AEXABVNameValuePairs@2@@Z ENDP ; CryptoPP::DL_GroupParameters_IntegerBased::AssignFrom
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?GetVoidValue@DL_GroupParameters_IntegerBased@CryptoPP@@$4PPPPPPPM@EE@BE_NPBDABVtype_info@@PAX@Z
_TEXT	SEGMENT
?GetVoidValue@DL_GroupParameters_IntegerBased@CryptoPP@@$4PPPPPPPM@EE@BE_NPBDABVtype_info@@PAX@Z PROC ; CryptoPP::DL_GroupParameters_IntegerBased::GetVoidValue, COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	83 e9 44	 sub	 ecx, 68			; 00000044H
  00006	e9 00 00 00 00	 jmp	 ?GetVoidValue@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NPBDABVtype_info@@PAX@Z ; CryptoPP::DL_GroupParameters_IntegerBased::GetVoidValue
?GetVoidValue@DL_GroupParameters_IntegerBased@CryptoPP@@$4PPPPPPPM@EE@BE_NPBDABVtype_info@@PAX@Z ENDP ; CryptoPP::DL_GroupParameters_IntegerBased::GetVoidValue
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@$4PPPPPPPM@GM@AEPAXI@Z
_TEXT	SEGMENT
??_E?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@$4PPPPPPPM@GM@AEPAXI@Z PROC ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`vector deleting destructor', COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	83 e9 6c	 sub	 ecx, 108		; 0000006cH
  00006	e9 00 00 00 00	 jmp	 ??_E?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAEPAXI@Z
??_E?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@$4PPPPPPPM@GM@AEPAXI@Z ENDP ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?SavePrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BEXAAVBufferedTransformation@2@@Z
_TEXT	SEGMENT
?SavePrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BEXAAVBufferedTransformation@2@@Z PROC ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::SavePrecomputation, COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	83 e9 58	 sub	 ecx, 88			; 00000058H
  00006	e9 00 00 00 00	 jmp	 ?SavePrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::SavePrecomputation
?SavePrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BEXAAVBufferedTransformation@2@@Z ENDP ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::SavePrecomputation
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?LoadPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXAAVBufferedTransformation@2@@Z
_TEXT	SEGMENT
?LoadPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXAAVBufferedTransformation@2@@Z PROC ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::LoadPrecomputation, COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	83 e9 58	 sub	 ecx, 88			; 00000058H
  00006	e9 00 00 00 00	 jmp	 ?LoadPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UAEXAAVBufferedTransformation@2@@Z ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::LoadPrecomputation
?LoadPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXAAVBufferedTransformation@2@@Z ENDP ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::LoadPrecomputation
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?Precompute@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXI@Z
_TEXT	SEGMENT
?Precompute@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXI@Z PROC ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::Precompute, COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	83 e9 58	 sub	 ecx, 88			; 00000058H
  00006	e9 00 00 00 00	 jmp	 ?Precompute@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UAEXI@Z ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::Precompute
?Precompute@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXI@Z ENDP ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::Precompute
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?SupportsPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BE_NXZ
_TEXT	SEGMENT
?SupportsPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BE_NXZ PROC ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::SupportsPrecomputation, COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	83 e9 58	 sub	 ecx, 88			; 00000058H
  00006	e9 00 00 00 00	 jmp	 ?SupportsPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::SupportsPrecomputation
?SupportsPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BE_NXZ ENDP ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::SupportsPrecomputation
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?Load@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXAAVBufferedTransformation@2@@Z
_TEXT	SEGMENT
?Load@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXAAVBufferedTransformation@2@@Z PROC ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::Load, COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	83 e9 58	 sub	 ecx, 88			; 00000058H
  00006	e9 00 00 00 00	 jmp	 ?Load@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@UAEXAAVBufferedTransformation@2@@Z ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::Load
?Load@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@AEXAAVBufferedTransformation@2@@Z ENDP ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::Load
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?Save@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BEXAAVBufferedTransformation@2@@Z
_TEXT	SEGMENT
?Save@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BEXAAVBufferedTransformation@2@@Z PROC ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::Save, COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	83 e9 58	 sub	 ecx, 88			; 00000058H
  00006	e9 00 00 00 00	 jmp	 ?Save@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::Save
?Save@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BEXAAVBufferedTransformation@2@@Z ENDP ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::Save
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?Validate@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BE_NAAVRandomNumberGenerator@2@I@Z
_TEXT	SEGMENT
?Validate@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BE_NAAVRandomNumberGenerator@2@I@Z PROC ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::Validate, COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	83 e9 58	 sub	 ecx, 88			; 00000058H
  00006	e9 00 00 00 00	 jmp	 ?Validate@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE_NAAVRandomNumberGenerator@2@I@Z ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::Validate
?Validate@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@$4PPPPPPPM@FI@BE_NAAVRandomNumberGenerator@2@I@Z ENDP ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::Validate
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ?AssignFrom@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@$4PPPPPPPM@A@AEXABVNameValuePairs@2@@Z
_TEXT	SEGMENT
?AssignFrom@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@$4PPPPPPPM@A@AEXABVNameValuePairs@2@@Z PROC ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::AssignFrom, COMDAT
  00000	2b 49 fc	 sub	 ecx, DWORD PTR [ecx-4]
  00003	e9 00 00 00 00	 jmp	 ?AssignFrom@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEXABVNameValuePairs@2@@Z ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::AssignFrom
?AssignFrom@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@$4PPPPPPPM@A@AEXABVNameValuePairs@2@@Z ENDP ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::AssignFrom
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@WCI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@WCI@AEPAXI@Z PROC ; [thunk]:CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`vector deleting destructor', COMDAT
  00000	83 e9 28	 sub	 ecx, 40			; 00000028H
  00003	e9 00 00 00 00	 jmp	 ??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@UAEPAXI@Z
??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@WCI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@WBI@AEPAXI@Z
_TEXT	SEGMENT
??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@WBI@AEPAXI@Z PROC ; [thunk]:CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`vector deleting destructor', COMDAT
  00000	83 e9 18	 sub	 ecx, 24			; 00000018H
  00003	e9 00 00 00 00	 jmp	 ??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@UAEPAXI@Z
??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@WBI@AEPAXI@Z ENDP ; [thunk]:CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@W3AEPAXI@Z
_TEXT	SEGMENT
??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@W3AEPAXI@Z PROC ; [thunk]:CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`vector deleting destructor', COMDAT
  00000	83 e9 04	 sub	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@UAEPAXI@Z
??_E?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@W3AEPAXI@Z ENDP ; [thunk]:CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@VInteger@CryptoPP@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_Uninitialized_backout_al@V?$allocator@VInteger@CryptoPP@@@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<CryptoPP::Integer> >::~_Uninitialized_backout_al<std::allocator<CryptoPP::Integer> >, COMDAT
; _this$ = ecx

; 1541 :         _Destroy_range(_First, _Last, _Al);

  00000	ff 71 08	 push	 DWORD PTR [ecx+8]
  00003	ff 71 04	 push	 DWORD PTR [ecx+4]
  00006	ff 31		 push	 DWORD PTR [ecx]
  00008	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAXPAVInteger@CryptoPP@@QAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z ; std::_Destroy_range<std::allocator<CryptoPP::Integer> >
  0000d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1542 :     }

  00010	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@VInteger@CryptoPP@@@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<CryptoPP::Integer> >::~_Uninitialized_backout_al<std::allocator<CryptoPP::Integer> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PAVInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAPAVInteger@CryptoPP@@QAV12@0PAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z
_TEXT	SEGMENT
__Backout$2 = -24					; size = 12
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAVInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAPAVInteger@CryptoPP@@QAV12@0PAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z PROC ; std::_Uninitialized_copy<CryptoPP::Integer *,std::allocator<CryptoPP::Integer> >, COMDAT

; 1565 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninitialized_copy@PAVInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAPAVInteger@CryptoPP@@QAV12@0PAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1535 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00028	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  0002b	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]

; 1566 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1567 :     // note: only called internally from elsewhere in the STL
; 1568 :     using _Ptrval = typename _Alloc::value_type*;
; 1569 : 
; 1570 :     auto _UFirst      = _Get_unwrapped(_First);

  0002e	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]

; 1535 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

  00031	89 7d e8	 mov	 DWORD PTR __Backout$2[ebp], edi
  00034	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi
  00037	89 45 f0	 mov	 DWORD PTR __Backout$2[ebp+8], eax

; 1571 :     const auto _ULast = _Get_unwrapped(_Last);
; 1572 : 
; 1573 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1574 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1575 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1576 :         _Dest += _ULast - _UFirst;
; 1577 :     } else {
; 1578 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1579 :         for (; _UFirst != _ULast; ++_UFirst) {

  0003a	8b 5d 0c	 mov	 ebx, DWORD PTR __Last$[ebp]
  0003d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00044	3b f3		 cmp	 esi, ebx
  00046	74 18		 je	 SHORT $LN3@Uninitiali
$LL4@Uninitiali:

; 701  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00048	56		 push	 esi
  00049	8b cf		 mov	 ecx, edi
  0004b	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::Integer::Integer

; 1547 :         ++_Last;

  00050	83 c7 14	 add	 edi, 20			; 00000014H

; 1571 :     const auto _ULast = _Get_unwrapped(_Last);
; 1572 : 
; 1573 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1574 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1575 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1576 :         _Dest += _ULast - _UFirst;
; 1577 :     } else {
; 1578 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1579 :         for (; _UFirst != _ULast; ++_UFirst) {

  00053	83 c6 14	 add	 esi, 20			; 00000014H

; 1547 :         ++_Last;

  00056	89 7d ec	 mov	 DWORD PTR __Backout$2[ebp+4], edi

; 1571 :     const auto _ULast = _Get_unwrapped(_Last);
; 1572 : 
; 1573 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1574 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1575 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1576 :         _Dest += _ULast - _UFirst;
; 1577 :     } else {
; 1578 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1579 :         for (; _UFirst != _ULast; ++_UFirst) {

  00059	3b f3		 cmp	 esi, ebx
  0005b	75 eb		 jne	 SHORT $LL4@Uninitiali
  0005d	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
$LN3@Uninitiali:

; 1541 :         _Destroy_range(_First, _Last, _Al);

  00060	50		 push	 eax
  00061	57		 push	 edi
  00062	57		 push	 edi
  00063	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAXPAVInteger@CryptoPP@@QAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z ; std::_Destroy_range<std::allocator<CryptoPP::Integer> >
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1580 :             _Backout._Emplace_back(*_UFirst);
; 1581 :         }
; 1582 : 
; 1583 :         _Dest = _Backout._Release();
; 1584 :     }
; 1585 : 
; 1586 :     return _Dest;

  0006b	8b c7		 mov	 eax, edi

; 1587 : }

  0006d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00070	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00077	59		 pop	 ecx
  00078	5f		 pop	 edi
  00079	5e		 pop	 esi
  0007a	5b		 pop	 ebx
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_copy@PAVInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAPAVInteger@CryptoPP@@QAV12@0PAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR __Backout$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@V?$allocator@VInteger@CryptoPP@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<CryptoPP::Integer> >::~_Uninitialized_backout_al<std::allocator<CryptoPP::Integer> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$_Uninitialized_copy@PAVInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAPAVInteger@CryptoPP@@QAV12@0PAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a e4	 mov	 ecx, DWORD PTR [edx-28]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninitialized_copy@PAVInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAPAVInteger@CryptoPP@@QAV12@0PAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_copy@PAVInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAPAVInteger@CryptoPP@@QAV12@0PAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z ENDP ; std::_Uninitialized_copy<CryptoPP::Integer *,std::allocator<CryptoPP::Integer> >
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??$_Assign_range@PAVInteger@CryptoPP@@@?$vector@VInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@AAEXPAVInteger@CryptoPP@@0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
__Oldsize$1$ = -12					; size = 4
__Oldcapacity$1$ = -8					; size = 4
_this$1$ = -4						; size = 4
tv460 = 8						; size = 4
__Newcapacity$1$ = 8					; size = 4
__Newlast$1$ = 8					; size = 4
__Mid$1$ = 8						; size = 4
__Newsize$1$ = 8					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Assign_range@PAVInteger@CryptoPP@@@?$vector@VInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@AAEXPAVInteger@CryptoPP@@0Uforward_iterator_tag@1@@Z PROC ; std::vector<CryptoPP::Integer,std::allocator<CryptoPP::Integer> >::_Assign_range<CryptoPP::Integer *>, COMDAT
; _this$ = ecx

; 1094 :     void _Assign_range(_Iter _First, _Iter _Last, forward_iterator_tag) { // assign forward range [_First, _Last)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1794 :         return _Last - _First; // assume the iterator will do debug checking

  00006	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  00009	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1094 :     void _Assign_range(_Iter _First, _Iter _Last, forward_iterator_tag) { // assign forward range [_First, _Last)

  0000e	53		 push	 ebx
  0000f	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1794 :         return _Last - _First; // assume the iterator will do debug checking

  00010	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00013	2b d6		 sub	 edx, esi
  00015	f7 ea		 imul	 edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1094 :     void _Assign_range(_Iter _First, _Iter _Last, forward_iterator_tag) { // assign forward range [_First, _Last)

  00017	57		 push	 edi
  00018	8b f9		 mov	 edi, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1794 :         return _Last - _First; // assume the iterator will do debug checking

  0001a	c1 fa 03	 sar	 edx, 3
  0001d	8b c2		 mov	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1094 :     void _Assign_range(_Iter _First, _Iter _Last, forward_iterator_tag) { // assign forward range [_First, _Last)

  0001f	89 7d fc	 mov	 DWORD PTR _this$1$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1794 :         return _Last - _First; // assume the iterator will do debug checking

  00022	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00025	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1116 :             auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00027	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0002a	8b 1f		 mov	 ebx, DWORD PTR [edi]
  0002c	2b cb		 sub	 ecx, ebx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1794 :         return _Last - _First; // assume the iterator will do debug checking

  0002e	89 45 08	 mov	 DWORD PTR __Newsize$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1116 :             auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00031	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00036	f7 e9		 imul	 ecx

; 1117 : 
; 1118 :             if (_Newsize > _Oldsize) {

  00038	8b 45 08	 mov	 eax, DWORD PTR __Newsize$1$[ebp]
  0003b	c1 fa 03	 sar	 edx, 3
  0003e	8b ca		 mov	 ecx, edx
  00040	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00043	03 ca		 add	 ecx, edx
  00045	89 4d f4	 mov	 DWORD PTR __Oldsize$1$[ebp], ecx
  00048	3b c1		 cmp	 eax, ecx
  0004a	0f 86 29 01 00
	00		 jbe	 $LN2@Assign_ran

; 1119 :                 const auto _Oldcapacity = static_cast<size_type>(_Myend - _Myfirst);

  00050	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00053	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00058	2b cb		 sub	 ecx, ebx
  0005a	f7 e9		 imul	 ecx

; 1120 :                 if (_Newsize > _Oldcapacity) { // reallocate

  0005c	8b 4d 08	 mov	 ecx, DWORD PTR __Newsize$1$[ebp]
  0005f	c1 fa 03	 sar	 edx, 3
  00062	8b c2		 mov	 eax, edx
  00064	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00067	03 c2		 add	 eax, edx
  00069	89 45 f8	 mov	 DWORD PTR __Oldcapacity$1$[ebp], eax
  0006c	3b c8		 cmp	 ecx, eax
  0006e	0f 86 ba 00 00
	00		 jbe	 $LN60@Assign_ran

; 1285 :         if (_Newsize > max_size()) {

  00074	81 f9 cc cc cc
	0c		 cmp	 ecx, 214748364		; 0cccccccH
  0007a	0f 87 3a 01 00
	00		 ja	 $LN64@Assign_ran

; 1620 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

  00080	8b d0		 mov	 edx, eax
  00082	b8 cc cc cc 0c	 mov	 eax, 214748364		; 0cccccccH
  00087	d1 ea		 shr	 edx, 1
  00089	2b c2		 sub	 eax, edx
  0008b	89 55 08	 mov	 DWORD PTR tv460[ebp], edx
  0008e	8b 55 f8	 mov	 edx, DWORD PTR __Oldcapacity$1$[ebp]
  00091	3b d0		 cmp	 edx, eax
  00093	76 09		 jbe	 SHORT $LN13@Assign_ran

; 1621 :             return _Max; // geometric growth would overflow

  00095	c7 45 08 cc cc
	cc 0c		 mov	 DWORD PTR __Newcapacity$1$[ebp], 214748364 ; 0cccccccH
  0009c	eb 0d		 jmp	 SHORT $LN14@Assign_ran
$LN13@Assign_ran:

; 1622 :         }
; 1623 : 
; 1624 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0009e	8b 45 08	 mov	 eax, DWORD PTR tv460[ebp]
  000a1	03 c2		 add	 eax, edx

; 1625 : 
; 1626 :         if (_Geometric < _Newsize) {

  000a3	3b c1		 cmp	 eax, ecx
  000a5	0f 42 c1	 cmovb	 eax, ecx
  000a8	89 45 08	 mov	 DWORD PTR __Newcapacity$1$[ebp], eax
$LN14@Assign_ran:

; 1291 :         if (_Myfirst) { // destroy and deallocate old array

  000ab	85 db		 test	 ebx, ebx
  000ad	74 4a		 je	 SHORT $LN10@Assign_ran

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  000af	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000b2	57		 push	 edi
  000b3	51		 push	 ecx
  000b4	53		 push	 ebx
  000b5	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAXPAVInteger@CryptoPP@@QAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z ; std::_Destroy_range<std::allocator<CryptoPP::Integer> >

; 1293 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000ba	8b 5d fc	 mov	 ebx, DWORD PTR _this$1$[ebp]
  000bd	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  000c2	8b 3f		 mov	 edi, DWORD PTR [edi]
  000c4	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000c7	2b cf		 sub	 ecx, edi
  000c9	f7 e9		 imul	 ecx
  000cb	c1 fa 03	 sar	 edx, 3
  000ce	8b c2		 mov	 eax, edx
  000d0	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000d3	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000d5	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  000d8	c1 e0 02	 shl	 eax, 2
  000db	50		 push	 eax
  000dc	57		 push	 edi
  000dd	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1295 :             _Myfirst = pointer();

  000e2	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1296 :             _Mylast  = pointer();

  000eb	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0

; 1297 :             _Myend   = pointer();

  000f2	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
$LN10@Assign_ran:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 60   :         if (_Count > _Max_possible) {

  000f9	8b 45 08	 mov	 eax, DWORD PTR __Newcapacity$1$[ebp]
  000fc	3d cc cc cc 0c	 cmp	 eax, 214748364		; 0cccccccH
  00101	0f 87 b8 00 00
	00		 ja	 $LN65@Assign_ran

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

  00107	8d 3c 80	 lea	 edi, DWORD PTR [eax+eax*4]
  0010a	c1 e7 02	 shl	 edi, 2

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0010d	57		 push	 edi
  0010e	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  00113	8b d8		 mov	 ebx, eax
  00115	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1644 :         _Myfirst           = _Newvec;

  00118	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]

; 1645 :         _Mylast            = _Newvec;
; 1646 :         _Myend             = _Newvec + _Newcapacity;

  0011b	8d 0c 1f	 lea	 ecx, DWORD PTR [edi+ebx]
  0011e	8b f8		 mov	 edi, eax
  00120	89 18		 mov	 DWORD PTR [eax], ebx
  00122	89 58 04	 mov	 DWORD PTR [eax+4], ebx

; 1121 :                     _Clear_and_reserve_geometric(_Newsize);
; 1122 :                     _Oldsize = 0;

  00125	33 c0		 xor	 eax, eax

; 1646 :         _Myend             = _Newvec + _Newcapacity;

  00127	89 4f 08	 mov	 DWORD PTR [edi+8], ecx

; 1121 :                     _Clear_and_reserve_geometric(_Newsize);
; 1122 :                     _Oldsize = 0;

  0012a	8b cb		 mov	 ecx, ebx
  0012c	eb 06		 jmp	 SHORT $LN4@Assign_ran
$LN60@Assign_ran:

; 1120 :                 if (_Newsize > _Oldcapacity) { // reallocate

  0012e	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00131	8b 45 f4	 mov	 eax, DWORD PTR __Oldsize$1$[ebp]
$LN4@Assign_ran:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1714 :         _Where += _Off;

  00134	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00137	8d 04 86	 lea	 eax, DWORD PTR [esi+eax*4]
  0013a	89 45 08	 mov	 DWORD PTR __Mid$1$[ebp], eax

; 4392 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

  0013d	3b f0		 cmp	 esi, eax
  0013f	74 1d		 je	 SHORT $LN39@Assign_ran

; 1714 :         _Where += _Off;

  00141	2b de		 sub	 ebx, esi
  00143	8b f8		 mov	 edi, eax
$LL40@Assign_ran:

; 4393 :         *_Dest = *_First;

  00145	56		 push	 esi
  00146	8d 0c 33	 lea	 ecx, DWORD PTR [ebx+esi]
  00149	e8 00 00 00 00	 call	 ??4Integer@CryptoPP@@QAEAAV01@ABV01@@Z ; CryptoPP::Integer::operator=
  0014e	83 c6 14	 add	 esi, 20			; 00000014H
  00151	3b f7		 cmp	 esi, edi
  00153	75 f0		 jne	 SHORT $LL40@Assign_ran
  00155	8b 7d fc	 mov	 edi, DWORD PTR _this$1$[ebp]
  00158	8b 45 08	 mov	 eax, DWORD PTR __Mid$1$[ebp]
  0015b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
$LN39@Assign_ran:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1588 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  0015e	57		 push	 edi
  0015f	51		 push	 ecx
  00160	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00163	51		 push	 ecx
  00164	50		 push	 eax
  00165	e8 00 00 00 00	 call	 ??$_Uninitialized_copy@PAVInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAPAVInteger@CryptoPP@@QAV12@0PAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z ; std::_Uninitialized_copy<CryptoPP::Integer *,std::allocator<CryptoPP::Integer> >
  0016a	83 c4 10	 add	 esp, 16			; 00000010H

; 1136 :     }

  0016d	89 47 04	 mov	 DWORD PTR [edi+4], eax
  00170	5f		 pop	 edi
  00171	5e		 pop	 esi
  00172	5b		 pop	 ebx
  00173	8b e5		 mov	 esp, ebp
  00175	5d		 pop	 ebp
  00176	c2 0c 00	 ret	 12			; 0000000cH
$LN2@Assign_ran:

; 1123 :                 }
; 1124 : 
; 1125 :                 // performance note: traversing [_First, _Mid) twice
; 1126 :                 const _Iter _Mid = _STD next(_First, static_cast<difference_type>(_Oldsize));
; 1127 :                 _Copy_unchecked(_First, _Mid, _Myfirst);
; 1128 :                 _Mylast = _Ucopy(_Mid, _Last, _Mylast);
; 1129 :             } else {
; 1130 :                 const pointer _Newlast = _Myfirst + _Newsize;

  00179	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0017c	8d 04 83	 lea	 eax, DWORD PTR [ebx+eax*4]
  0017f	89 45 08	 mov	 DWORD PTR __Newlast$1$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 4392 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

  00182	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00185	74 16		 je	 SHORT $LN59@Assign_ran
$LL47@Assign_ran:

; 4393 :         *_Dest = *_First;

  00187	56		 push	 esi
  00188	8b cb		 mov	 ecx, ebx
  0018a	e8 00 00 00 00	 call	 ??4Integer@CryptoPP@@QAEAAV01@ABV01@@Z ; CryptoPP::Integer::operator=
  0018f	83 c6 14	 add	 esi, 20			; 00000014H
  00192	83 c3 14	 add	 ebx, 20			; 00000014H
  00195	3b 75 0c	 cmp	 esi, DWORD PTR __Last$[ebp]
  00198	75 ed		 jne	 SHORT $LL47@Assign_ran

; 4392 :     for (; _First != _Last; ++_Dest, (void) ++_First) {

  0019a	8b 45 08	 mov	 eax, DWORD PTR __Newlast$1$[ebp]
$LN59@Assign_ran:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0019d	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  001a0	57		 push	 edi
  001a1	51		 push	 ecx
  001a2	50		 push	 eax
  001a3	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAXPAVInteger@CryptoPP@@QAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z ; std::_Destroy_range<std::allocator<CryptoPP::Integer> >

; 1131 :                 _Copy_unchecked(_First, _Last, _Myfirst);
; 1132 :                 _Destroy(_Newlast, _Mylast);
; 1133 :                 _Mylast = _Newlast;

  001a8	8b 45 08	 mov	 eax, DWORD PTR __Newlast$1$[ebp]

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  001ab	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1136 :     }

  001ae	89 47 04	 mov	 DWORD PTR [edi+4], eax
  001b1	5f		 pop	 edi
  001b2	5e		 pop	 esi
  001b3	5b		 pop	 ebx
  001b4	8b e5		 mov	 esp, ebp
  001b6	5d		 pop	 ebp
  001b7	c2 0c 00	 ret	 12			; 0000000cH
$LN64@Assign_ran:

; 1286 :             _Xlength();

  001ba	e8 00 00 00 00	 call	 ?_Xlength@?$vector@VInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@CAXXZ ; std::vector<CryptoPP::Integer,std::allocator<CryptoPP::Integer> >::_Xlength
$LN65@Assign_ran:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

  001bf	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN61@Assign_ran:
  001c4	cc		 int	 3
??$_Assign_range@PAVInteger@CryptoPP@@@?$vector@VInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@AAEXPAVInteger@CryptoPP@@0Uforward_iterator_tag@1@@Z ENDP ; std::vector<CryptoPP::Integer,std::allocator<CryptoPP::Integer> >::_Assign_range<CryptoPP::Integer *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 113  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 114  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 115  :     const size_t _Block_size = _Non_user_size + _Bytes;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	8d 48 23	 lea	 ecx, DWORD PTR [eax+35]

; 116  :     if (_Block_size <= _Bytes) {

  00009	3b c8		 cmp	 ecx, eax
  0000b	0f 86 00 00 00
	00		 jbe	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length

; 77   :         return ::operator new(_Bytes);

  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 117  :         _Throw_bad_array_new_length(); // add overflow
; 118  :     }
; 119  : 
; 120  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00017	8b c8		 mov	 ecx, eax

; 77   :         return ::operator new(_Bytes);

  00019	83 c4 04	 add	 esp, 4

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0b		 je	 SHORT $LN7@Allocate_m

; 122  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  00020	8d 41 23	 lea	 eax, DWORD PTR [ecx+35]
  00023	83 e0 e0	 and	 eax, -32		; ffffffe0H

; 123  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  00026	89 48 fc	 mov	 DWORD PTR [eax-4], ecx

; 124  : 
; 125  : #ifdef _DEBUG
; 126  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;
; 127  : #endif // _DEBUG
; 128  :     return _Ptr;
; 129  : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN7@Allocate_m:

; 121  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0002b	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h
;	COMDAT ??__Fs_pObject@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@2@XZ@YAXXZ
text$yd	SEGMENT
??__Fs_pObject@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@2@XZ@YAXXZ PROC ; `CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref'::`2'::`dynamic atexit destructor for 's_pObject'', COMDAT

; 13   : 	~simple_ptr() {delete m_p; m_p = NULL;}		// set m_p to NULL so double destruction (which might occur in Singleton) will be harmless

  00000	6a 04		 push	 4
  00002	ff 35 00 00 00
	00		 push	 DWORD PTR ?s_pObject@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@3@XZ@4V?$simple_ptr@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@3@C ; `CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref'::`2'::s_pObject
  00008	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_pObject@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@3@XZ@4V?$simple_ptr@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@3@C, 0 ; `CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref'::`2'::s_pObject
  0001a	c3		 ret	 0
??__Fs_pObject@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@2@XZ@YAXXZ ENDP ; `CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref'::`2'::`dynamic atexit destructor for 's_pObject''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Pocca@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAXAAV?$allocator@VInteger@CryptoPP@@@0@ABV10@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocca@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAXAAV?$allocator@VInteger@CryptoPP@@@0@ABV10@@Z PROC ; std::_Pocca<std::allocator<CryptoPP::Integer> >, COMDAT

; 886  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_copy_assignment::value) {
; 887  :         _Left = _Right;
; 888  :     }
; 889  : }

  00000	c2 00 00	 ret	 0
??$_Pocca@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAXAAV?$allocator@VInteger@CryptoPP@@@0@ABV10@@Z ENDP ; std::_Pocca<std::allocator<CryptoPP::Integer> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAXPAVInteger@CryptoPP@@QAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAXPAVInteger@CryptoPP@@QAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CryptoPP::Integer> >, COMDAT

; 962  :     _Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {

  00004	8b 75 08	 mov	 esi, DWORD PTR __First$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR __Last$[ebp]
  0000b	3b f7		 cmp	 esi, edi
  0000d	74 10		 je	 SHORT $LN3@Destroy_ra
  0000f	90		 npad	 1
$LL4@Destroy_ra:

; 706  :         _Ptr->~_Uty();

  00010	8b 06		 mov	 eax, DWORD PTR [esi]
  00012	8b ce		 mov	 ecx, esi
  00014	6a 00		 push	 0
  00016	ff 10		 call	 DWORD PTR [eax]

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {

  00018	83 c6 14	 add	 esi, 20			; 00000014H
  0001b	3b f7		 cmp	 esi, edi
  0001d	75 f1		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  0001f	5f		 pop	 edi

; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  00020	5e		 pop	 esi
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??$_Destroy_range@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAXPAVInteger@CryptoPP@@QAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CryptoPP::Integer> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00006	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0000c	72 18		 jb	 SHORT $LN15@Deallocate

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0000e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00011	83 c1 23	 add	 ecx, 35			; 00000023H
  00014	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00017	2b c2		 sub	 eax, edx

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00019	83 c0 fc	 add	 eax, -4			; fffffffcH
  0001c	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0001f	76 08		 jbe	 SHORT $LN13@Deallocate
  00021	e9 00 00 00 00	 jmp	 __invalid_parameter_noinfo_noreturn
$LN15@Deallocate:

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00026	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$LN13@Deallocate:

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00029	89 4d 0c	 mov	 DWORD PTR __Bytes$[ebp], ecx
  0002c	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx

; 222  : }

  0002f	5d		 pop	 ebp

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);
; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  00030	e9 00 00 00 00	 jmp	 ??3@YAXPAXI@Z		; operator delete
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 197  : __declspec(allocator) void* _Allocate(const size_t _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 198  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 199  : #if defined(_M_IX86) || defined(_M_X64)
; 200  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	3d 00 10 00 00	 cmp	 eax, 4096		; 00001000H
  0000b	72 09		 jb	 SHORT $LN2@Allocate

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  0000d	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  00010	5d		 pop	 ebp

; 201  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00011	e9 00 00 00 00	 jmp	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
$LN2@Allocate:

; 202  :     }
; 203  : #endif // defined(_M_IX86) || defined(_M_X64)
; 204  : 
; 205  :     if (_Bytes != 0) {

  00016	85 c0		 test	 eax, eax
  00018	74 09		 je	 SHORT $LN3@Allocate

; 77   :         return ::operator new(_Bytes);

  0001a	89 45 08	 mov	 DWORD PTR __Bytes$[ebp], eax

; 210  : }

  0001d	5d		 pop	 ebp

; 77   :         return ::operator new(_Bytes);

  0001e	e9 00 00 00 00	 jmp	 ??2@YAPAXI@Z		; operator new
$LN3@Allocate:

; 206  :         return _Traits::_Allocate(_Bytes);
; 207  :     }
; 208  : 
; 209  :     return nullptr;

  00023	33 c0		 xor	 eax, eax

; 210  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 228  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) noexcept(is_nothrow_constructible_v<_Ty, _Types...>) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 229  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00003	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 45 08	 mov	 eax, DWORD PTR __Obj$[ebp]
  0000b	89 08		 mov	 DWORD PTR [eax], ecx

; 230  :         _Ty(_STD forward<_Types>(_Args)...);
; 231  : }

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 271  : #if _HAS_IF_CONSTEXPR
; 272  :     if constexpr (is_array_v<_Ty>) {
; 273  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 274  :     } else
; 275  : #endif // _HAS_IF_CONSTEXPR
; 276  :     {
; 277  :         _Obj.~_Ty();
; 278  :     }
; 279  : }

  00000	c2 00 00	 ret	 0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??$StandardReallocate@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@YAPAEAAV?$AllocatorWithCleanup@E$0A@@0@PAEII_N@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_p$ = 12						; size = 4
_oldSize$ = 16						; size = 4
_newSize$ = 20						; size = 4
_preserve$ = 24						; size = 1
??$StandardReallocate@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@YAPAEAAV?$AllocatorWithCleanup@E$0A@@0@PAEII_N@Z PROC ; CryptoPP::StandardReallocate<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >, COMDAT

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 62   : 	if (oldSize == newSize)

  00003	8b 45 10	 mov	 eax, DWORD PTR _oldSize$[ebp]
  00006	56		 push	 esi
  00007	8b 75 14	 mov	 esi, DWORD PTR _newSize$[ebp]
  0000a	3b c6		 cmp	 eax, esi
  0000c	75 06		 jne	 SHORT $LN2@StandardRe

; 63   : 		return p;

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _p$[ebp]
  00011	5e		 pop	 esi

; 71   : 	}
; 72   : 	else
; 73   : 	{
; 74   : 		a.deallocate(p, oldSize);
; 75   : 		return a.allocate(newSize, NULL);
; 76   : 	}
; 77   : }

  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
$LN2@StandardRe:

; 64   : 
; 65   : 	if (preserve)

  00014	80 7d 18 00	 cmp	 BYTE PTR _preserve$[ebp], 0
  00018	57		 push	 edi
  00019	0f 84 90 00 00
	00		 je	 $LN3@StandardRe

; 92   : 		if (n == 0)

  0001f	53		 push	 ebx
  00020	85 f6		 test	 esi, esi
  00022	75 04		 jne	 SHORT $LN7@StandardRe

; 93   : 			return NULL;

  00024	33 db		 xor	 ebx, ebx
  00026	eb 0e		 jmp	 SHORT $LN6@StandardRe
$LN7@StandardRe:

; 94   : 
; 95   : #if CRYPTOPP_BOOL_ALIGN16_ENABLED
; 96   : 		if (T_Align16 && n*sizeof(T) >= 16)
; 97   : 			return (pointer)AlignedAllocate(n*sizeof(T));
; 98   : #endif
; 99   : 
; 100  : 		return (pointer)UnalignedAllocate(n*sizeof(T));

  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 ?UnalignedAllocate@CryptoPP@@YAPAXI@Z ; CryptoPP::UnalignedAllocate
  0002e	8b d8		 mov	 ebx, eax
  00030	83 c4 04	 add	 esp, 4
  00033	8b 45 10	 mov	 eax, DWORD PTR _oldSize$[ebp]
$LN6@StandardRe:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 179  : 	return b < a ? b : a;

  00036	3b f0		 cmp	 esi, eax
  00038	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 42   :         if (_SourceSize == 0)

  0003a	8b 45 0c	 mov	 eax, DWORD PTR _p$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 179  : 	return b < a ? b : a;

  0003d	0f 42 fe	 cmovb	 edi, esi
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 42   :         if (_SourceSize == 0)

  00040	85 ff		 test	 edi, edi
  00042	74 50		 je	 SHORT $LN18@StandardRe

; 43   :         {
; 44   :             return 0;
; 45   :         }
; 46   : 
; 47   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  00044	85 db		 test	 ebx, ebx
  00046	75 0d		 jne	 SHORT $LN14@StandardRe
$LN69@StandardRe:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00048	e8 00 00 00 00	 call	 __errno
  0004d	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  00053	eb 37		 jmp	 SHORT $LN67@StandardRe
$LN14@StandardRe:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 48   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  00055	85 c0		 test	 eax, eax
  00057	74 11		 je	 SHORT $LN16@StandardRe
  00059	3b f7		 cmp	 esi, edi
  0005b	72 0d		 jb	 SHORT $LN16@StandardRe

; 54   : 
; 55   :             // Unreachable, but required to suppress /analyze warnings:
; 56   :             return EINVAL;
; 57   :         }
; 58   : #pragma warning(suppress:4996) // Deprecation
; 59   :         memcpy(_Destination, _Source, _SourceSize);

  0005d	57		 push	 edi
  0005e	50		 push	 eax
  0005f	53		 push	 ebx
  00060	e8 00 00 00 00	 call	 _memcpy
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH
  00068	eb 27		 jmp	 SHORT $LN68@StandardRe
$LN16@StandardRe:

; 49   :         {
; 50   :             memset(_Destination, 0, _DestinationSize);

  0006a	56		 push	 esi
  0006b	6a 00		 push	 0
  0006d	53		 push	 ebx
  0006e	e8 00 00 00 00	 call	 _memset

; 51   : 
; 52   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);

  00073	8b 45 0c	 mov	 eax, DWORD PTR _p$[ebp]
  00076	83 c4 0c	 add	 esp, 12			; 0000000cH
  00079	85 c0		 test	 eax, eax
  0007b	74 cb		 je	 SHORT $LN69@StandardRe

; 53   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);

  0007d	3b f7		 cmp	 esi, edi
  0007f	73 13		 jae	 SHORT $LN18@StandardRe
  00081	e8 00 00 00 00	 call	 __errno
  00086	c7 00 22 00 00
	00		 mov	 DWORD PTR [eax], 34	; 00000022H
$LN67@StandardRe:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  0008c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN68@StandardRe:
  00091	8b 45 0c	 mov	 eax, DWORD PTR _p$[ebp]
$LN18@StandardRe:
  00094	8b 4d 10	 mov	 ecx, DWORD PTR _oldSize$[ebp]
  00097	8b f8		 mov	 edi, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00099	ff 75 0c	 push	 DWORD PTR _p$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  0009c	32 c0		 xor	 al, al
  0009e	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  000a0	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  000a5	83 c4 04	 add	 esp, 4

; 66   : 	{
; 67   : 		typename A::pointer newPointer = a.allocate(newSize, NULL);
; 68   : 		memcpy_s(newPointer, sizeof(T)*newSize, p, sizeof(T)*STDMIN(oldSize, newSize));
; 69   : 		a.deallocate(p, oldSize);
; 70   : 		return newPointer;

  000a8	8b c3		 mov	 eax, ebx
  000aa	5b		 pop	 ebx
  000ab	5f		 pop	 edi
  000ac	5e		 pop	 esi

; 71   : 	}
; 72   : 	else
; 73   : 	{
; 74   : 		a.deallocate(p, oldSize);
; 75   : 		return a.allocate(newSize, NULL);
; 76   : 	}
; 77   : }

  000ad	5d		 pop	 ebp
  000ae	c3		 ret	 0
$LN3@StandardRe:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  000af	8b 55 0c	 mov	 edx, DWORD PTR _p$[ebp]
  000b2	32 c0		 xor	 al, al
  000b4	8b 4d 10	 mov	 ecx, DWORD PTR _oldSize$[ebp]
  000b7	8b fa		 mov	 edi, edx
  000b9	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  000bb	52		 push	 edx
  000bc	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  000c1	83 c4 04	 add	 esp, 4

; 92   : 		if (n == 0)

  000c4	85 f6		 test	 esi, esi
  000c6	75 06		 jne	 SHORT $LN63@StandardRe
  000c8	5f		 pop	 edi

; 93   : 			return NULL;

  000c9	33 c0		 xor	 eax, eax
  000cb	5e		 pop	 esi

; 71   : 	}
; 72   : 	else
; 73   : 	{
; 74   : 		a.deallocate(p, oldSize);
; 75   : 		return a.allocate(newSize, NULL);
; 76   : 	}
; 77   : }

  000cc	5d		 pop	 ebp
  000cd	c3		 ret	 0
$LN63@StandardRe:

; 100  : 		return (pointer)UnalignedAllocate(n*sizeof(T));

  000ce	56		 push	 esi
  000cf	e8 00 00 00 00	 call	 ?UnalignedAllocate@CryptoPP@@YAPAXI@Z ; CryptoPP::UnalignedAllocate
  000d4	83 c4 04	 add	 esp, 4
  000d7	5f		 pop	 edi
  000d8	5e		 pop	 esi

; 71   : 	}
; 72   : 	else
; 73   : 	{
; 74   : 		a.deallocate(p, oldSize);
; 75   : 		return a.allocate(newSize, NULL);
; 76   : 	}
; 77   : }

  000d9	5d		 pop	 ebp
  000da	c3		 ret	 0
??$StandardReallocate@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@YAPAEAAV?$AllocatorWithCleanup@E$0A@@0@PAEII_N@Z ENDP ; CryptoPP::StandardReallocate<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??$StandardReallocate@EV?$AllocatorWithCleanup@E$00@CryptoPP@@@CryptoPP@@YAPAEAAV?$AllocatorWithCleanup@E$00@0@PAEII_N@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_p$ = 12						; size = 4
_oldSize$ = 16						; size = 4
__SourceSize$1$ = 20					; size = 4
_newSize$ = 20						; size = 4
_preserve$ = 24						; size = 1
??$StandardReallocate@EV?$AllocatorWithCleanup@E$00@CryptoPP@@@CryptoPP@@YAPAEAAV?$AllocatorWithCleanup@E$00@0@PAEII_N@Z PROC ; CryptoPP::StandardReallocate<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,1> >, COMDAT

; 61   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 62   : 	if (oldSize == newSize)

  00004	8b 5d 10	 mov	 ebx, DWORD PTR _oldSize$[ebp]
  00007	56		 push	 esi
  00008	8b 75 14	 mov	 esi, DWORD PTR _newSize$[ebp]
  0000b	3b de		 cmp	 ebx, esi
  0000d	75 07		 jne	 SHORT $LN2@StandardRe

; 63   : 		return p;

  0000f	8b 45 0c	 mov	 eax, DWORD PTR _p$[ebp]
  00012	5e		 pop	 esi

; 71   : 	}
; 72   : 	else
; 73   : 	{
; 74   : 		a.deallocate(p, oldSize);
; 75   : 		return a.allocate(newSize, NULL);
; 76   : 	}
; 77   : }

  00013	5b		 pop	 ebx
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
$LN2@StandardRe:

; 64   : 
; 65   : 	if (preserve)

  00016	80 7d 18 00	 cmp	 BYTE PTR _preserve$[ebp], 0
  0001a	57		 push	 edi
  0001b	0f 84 ba 00 00
	00		 je	 $LN3@StandardRe

; 92   : 		if (n == 0)

  00021	85 f6		 test	 esi, esi
  00023	75 04		 jne	 SHORT $LN7@StandardRe

; 93   : 			return NULL;

  00025	33 db		 xor	 ebx, ebx
  00027	eb 17		 jmp	 SHORT $LN6@StandardRe
$LN7@StandardRe:

; 94   : 
; 95   : #if CRYPTOPP_BOOL_ALIGN16_ENABLED
; 96   : 		if (T_Align16 && n*sizeof(T) >= 16)

  00029	56		 push	 esi
  0002a	83 fe 10	 cmp	 esi, 16			; 00000010H
  0002d	72 07		 jb	 SHORT $LN8@StandardRe

; 97   : 			return (pointer)AlignedAllocate(n*sizeof(T));

  0002f	e8 00 00 00 00	 call	 ?AlignedAllocate@CryptoPP@@YAPAXI@Z ; CryptoPP::AlignedAllocate
  00034	eb 05		 jmp	 SHORT $LN67@StandardRe
$LN8@StandardRe:

; 98   : #endif
; 99   : 
; 100  : 		return (pointer)UnalignedAllocate(n*sizeof(T));

  00036	e8 00 00 00 00	 call	 ?UnalignedAllocate@CryptoPP@@YAPAXI@Z ; CryptoPP::UnalignedAllocate
$LN67@StandardRe:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 179  : 	return b < a ? b : a;

  0003b	8b d8		 mov	 ebx, eax
  0003d	83 c4 04	 add	 esp, 4
$LN6@StandardRe:
  00040	8b 45 10	 mov	 eax, DWORD PTR _oldSize$[ebp]
  00043	8b c8		 mov	 ecx, eax
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 42   :         if (_SourceSize == 0)

  00045	8b 7d 0c	 mov	 edi, DWORD PTR _p$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 179  : 	return b < a ? b : a;

  00048	3b f0		 cmp	 esi, eax
  0004a	0f 42 ce	 cmovb	 ecx, esi
  0004d	89 4d 14	 mov	 DWORD PTR __SourceSize$1$[ebp], ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 42   :         if (_SourceSize == 0)

  00050	85 c9		 test	 ecx, ecx
  00052	74 58		 je	 SHORT $LN18@StandardRe

; 43   :         {
; 44   :             return 0;
; 45   :         }
; 46   : 
; 47   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  00054	85 db		 test	 ebx, ebx
  00056	75 0d		 jne	 SHORT $LN14@StandardRe
  00058	e8 00 00 00 00	 call	 __errno
  0005d	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  00063	eb 42		 jmp	 SHORT $LN68@StandardRe
$LN14@StandardRe:

; 48   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  00065	85 ff		 test	 edi, edi
  00067	74 11		 je	 SHORT $LN16@StandardRe
  00069	3b f1		 cmp	 esi, ecx
  0006b	72 0d		 jb	 SHORT $LN16@StandardRe

; 54   : 
; 55   :             // Unreachable, but required to suppress /analyze warnings:
; 56   :             return EINVAL;
; 57   :         }
; 58   : #pragma warning(suppress:4996) // Deprecation
; 59   :         memcpy(_Destination, _Source, _SourceSize);

  0006d	51		 push	 ecx
  0006e	57		 push	 edi
  0006f	53		 push	 ebx
  00070	e8 00 00 00 00	 call	 _memcpy
  00075	83 c4 0c	 add	 esp, 12			; 0000000cH
  00078	eb 32		 jmp	 SHORT $LN18@StandardRe
$LN16@StandardRe:

; 49   :         {
; 50   :             memset(_Destination, 0, _DestinationSize);

  0007a	56		 push	 esi
  0007b	6a 00		 push	 0
  0007d	53		 push	 ebx
  0007e	e8 00 00 00 00	 call	 _memset
  00083	83 c4 0c	 add	 esp, 12			; 0000000cH

; 51   : 
; 52   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);

  00086	85 ff		 test	 edi, edi
  00088	75 0d		 jne	 SHORT $LN17@StandardRe
  0008a	e8 00 00 00 00	 call	 __errno
  0008f	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  00095	eb 10		 jmp	 SHORT $LN68@StandardRe
$LN17@StandardRe:

; 53   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);

  00097	3b 75 14	 cmp	 esi, DWORD PTR __SourceSize$1$[ebp]
  0009a	73 10		 jae	 SHORT $LN18@StandardRe
  0009c	e8 00 00 00 00	 call	 __errno
  000a1	c7 00 22 00 00
	00		 mov	 DWORD PTR [eax], 34	; 00000022H
$LN68@StandardRe:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  000a7	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN18@StandardRe:
  000ac	8b 4d 10	 mov	 ecx, DWORD PTR _oldSize$[ebp]
  000af	32 c0		 xor	 al, al
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  000b1	83 7d 10 10	 cmp	 DWORD PTR _oldSize$[ebp], 16 ; 00000010H
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  000b5	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  000b7	8b 45 0c	 mov	 eax, DWORD PTR _p$[ebp]
  000ba	50		 push	 eax
  000bb	72 0f		 jb	 SHORT $LN21@StandardRe

; 109  : 			return AlignedDeallocate(p);

  000bd	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate

; 100  : 		return (pointer)UnalignedAllocate(n*sizeof(T));

  000c2	83 c4 04	 add	 esp, 4

; 66   : 	{
; 67   : 		typename A::pointer newPointer = a.allocate(newSize, NULL);
; 68   : 		memcpy_s(newPointer, sizeof(T)*newSize, p, sizeof(T)*STDMIN(oldSize, newSize));
; 69   : 		a.deallocate(p, oldSize);
; 70   : 		return newPointer;

  000c5	8b c3		 mov	 eax, ebx
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi

; 71   : 	}
; 72   : 	else
; 73   : 	{
; 74   : 		a.deallocate(p, oldSize);
; 75   : 		return a.allocate(newSize, NULL);
; 76   : 	}
; 77   : }

  000c9	5b		 pop	 ebx
  000ca	5d		 pop	 ebp
  000cb	c3		 ret	 0
$LN21@StandardRe:

; 112  : 		UnalignedDeallocate(p);

  000cc	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate

; 100  : 		return (pointer)UnalignedAllocate(n*sizeof(T));

  000d1	83 c4 04	 add	 esp, 4

; 66   : 	{
; 67   : 		typename A::pointer newPointer = a.allocate(newSize, NULL);
; 68   : 		memcpy_s(newPointer, sizeof(T)*newSize, p, sizeof(T)*STDMIN(oldSize, newSize));
; 69   : 		a.deallocate(p, oldSize);
; 70   : 		return newPointer;

  000d4	8b c3		 mov	 eax, ebx
  000d6	5f		 pop	 edi
  000d7	5e		 pop	 esi

; 71   : 	}
; 72   : 	else
; 73   : 	{
; 74   : 		a.deallocate(p, oldSize);
; 75   : 		return a.allocate(newSize, NULL);
; 76   : 	}
; 77   : }

  000d8	5b		 pop	 ebx
  000d9	5d		 pop	 ebp
  000da	c3		 ret	 0
$LN3@StandardRe:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  000db	8b 55 0c	 mov	 edx, DWORD PTR _p$[ebp]
  000de	32 c0		 xor	 al, al
  000e0	8b fa		 mov	 edi, edx
  000e2	8b cb		 mov	 ecx, ebx
  000e4	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  000e6	52		 push	 edx
  000e7	83 fb 10	 cmp	 ebx, 16			; 00000010H
  000ea	72 07		 jb	 SHORT $LN42@StandardRe

; 109  : 			return AlignedDeallocate(p);

  000ec	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  000f1	eb 05		 jmp	 SHORT $LN71@StandardRe
$LN42@StandardRe:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  000f3	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN71@StandardRe:

; 92   : 		if (n == 0)

  000f8	83 c4 04	 add	 esp, 4
  000fb	85 f6		 test	 esi, esi
  000fd	75 07		 jne	 SHORT $LN63@StandardRe
  000ff	5f		 pop	 edi
  00100	5e		 pop	 esi

; 93   : 			return NULL;

  00101	33 c0		 xor	 eax, eax

; 71   : 	}
; 72   : 	else
; 73   : 	{
; 74   : 		a.deallocate(p, oldSize);
; 75   : 		return a.allocate(newSize, NULL);
; 76   : 	}
; 77   : }

  00103	5b		 pop	 ebx
  00104	5d		 pop	 ebp
  00105	c3		 ret	 0
$LN63@StandardRe:

; 96   : 		if (T_Align16 && n*sizeof(T) >= 16)

  00106	56		 push	 esi
  00107	83 fe 10	 cmp	 esi, 16			; 00000010H
  0010a	72 0d		 jb	 SHORT $LN64@StandardRe

; 97   : 			return (pointer)AlignedAllocate(n*sizeof(T));

  0010c	e8 00 00 00 00	 call	 ?AlignedAllocate@CryptoPP@@YAPAXI@Z ; CryptoPP::AlignedAllocate

; 98   : #endif
; 99   : 
; 100  : 		return (pointer)UnalignedAllocate(n*sizeof(T));

  00111	83 c4 04	 add	 esp, 4
  00114	5f		 pop	 edi
  00115	5e		 pop	 esi

; 71   : 	}
; 72   : 	else
; 73   : 	{
; 74   : 		a.deallocate(p, oldSize);
; 75   : 		return a.allocate(newSize, NULL);
; 76   : 	}
; 77   : }

  00116	5b		 pop	 ebx
  00117	5d		 pop	 ebp
  00118	c3		 ret	 0
$LN64@StandardRe:

; 100  : 		return (pointer)UnalignedAllocate(n*sizeof(T));

  00119	e8 00 00 00 00	 call	 ?UnalignedAllocate@CryptoPP@@YAPAXI@Z ; CryptoPP::UnalignedAllocate
  0011e	83 c4 04	 add	 esp, 4
  00121	5f		 pop	 edi
  00122	5e		 pop	 esi

; 71   : 	}
; 72   : 	else
; 73   : 	{
; 74   : 		a.deallocate(p, oldSize);
; 75   : 		return a.allocate(newSize, NULL);
; 76   : 	}
; 77   : }

  00123	5b		 pop	 ebx
  00124	5d		 pop	 ebp
  00125	c3		 ret	 0
??$StandardReallocate@EV?$AllocatorWithCleanup@E$00@CryptoPP@@@CryptoPP@@YAPAEAAV?$AllocatorWithCleanup@E$00@0@PAEII_N@Z ENDP ; CryptoPP::StandardReallocate<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,1> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
;	COMDAT ??$AssignFromHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@2@@CryptoPP@@YA?AV?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@0@ABVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z
_TEXT	SEGMENT
$T2 = -65						; size = 1
$T3 = -64						; size = 24
$T4 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_pObject$ = 12						; size = 4
_source$ = 16						; size = 4
_dummy$ = 20						; size = 4
??$AssignFromHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@2@@CryptoPP@@YA?AV?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@0@ABVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z PROC ; CryptoPP::AssignFromHelper<CryptoPP::DL_GroupParameters_IntegerBased,CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> > >, COMDAT

; 230  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$AssignFromHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@2@@CryptoPP@@YA?AV?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@0@ABVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  0002e	8b 5d 0c	 mov	 ebx, DWORD PTR _pObject$[ebp]
  00031	8b 7d 10	 mov	 edi, DWORD PTR _source$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00034	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 185  : 		: m_pObject(pObject), m_source(source), m_done(false)

  0003b	89 1e		 mov	 DWORD PTR [esi], ebx
  0003d	89 7e 04	 mov	 DWORD PTR [esi+4], edi
  00040	c6 46 08 00	 mov	 BYTE PTR [esi+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00044	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0M@POHHOAKA@ThisObject?3@+8
  0004a	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0M@POHHOAKA@ThisObject?3@
  00052	66 89 45 e0	 mov	 WORD PTR $T4[ebp+8], ax
  00056	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0M@POHHOAKA@ThisObject?3@+10

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  0005b	c7 45 e8 0b 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 11 ; 0000000bH

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00062	66 0f d6 45 d8	 movq	 QWORD PTR $T4[ebp], xmm0
  00067	88 45 e2	 mov	 BYTE PTR $T4[ebp+10], al

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0006a	c6 45 e3 00	 mov	 BYTE PTR $T4[ebp+11], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h

; 101  :         return __std_type_info_name(&_Data, &__type_info_root_node);

  0006e	68 00 00 00 00	 push	 OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
  00073	68 04 00 00 00	 push	 OFFSET ??_R0?AV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@@8+4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 250  : 		return GetValue((std::string("ThisObject:")+typeid(T).name()).c_str(), object);

  00078	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h

; 101  :         return __std_type_info_name(&_Data, &__type_info_root_node);

  0007f	e8 00 00 00 00	 call	 ___std_type_info_name
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 250  : 		return GetValue((std::string("ThisObject:")+typeid(T).name()).c_str(), object);

  00084	50		 push	 eax
  00085	8d 45 d8	 lea	 eax, DWORD PTR $T4[ebp]
  00088	50		 push	 eax
  00089	8d 45 c0	 lea	 eax, DWORD PTR $T3[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00092	83 c4 14	 add	 esp, 20			; 00000014H
  00095	8b c8		 mov	 ecx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2219 :         if (_Large_string_engaged()) {

  00097	83 79 14 10	 cmp	 DWORD PTR [ecx+20], 16	; 00000010H
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 250  : 		return GetValue((std::string("ThisObject:")+typeid(T).name()).c_str(), object);

  0009b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2219 :         if (_Large_string_engaged()) {

  0009f	72 02		 jb	 SHORT $LN66@AssignFrom

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  000a1	8b 09		 mov	 ecx, DWORD PTR [ecx]
$LN66@AssignFrom:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 264  : 		return GetVoidValue(name, typeid(T), &value);

  000a3	8b 07		 mov	 eax, DWORD PTR [edi]
  000a5	53		 push	 ebx
  000a6	68 00 00 00 00	 push	 OFFSET ??_R0?AV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@@8
  000ab	51		 push	 ecx
  000ac	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000af	8b cf		 mov	 ecx, edi
  000b1	ff d0		 call	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000b3	8b 4d d4	 mov	 ecx, DWORD PTR $T3[ebp+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 250  : 		return GetValue((std::string("ThisObject:")+typeid(T).name()).c_str(), object);

  000b6	88 45 bf	 mov	 BYTE PTR $T2[ebp], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000b9	83 f9 10	 cmp	 ecx, 16			; 00000010H
  000bc	72 0d		 jb	 SHORT $LN76@AssignFrom

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000be	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000bf	51		 push	 ecx
  000c0	ff 75 c0	 push	 DWORD PTR $T3[ebp]
  000c3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c8	83 c4 08	 add	 esp, 8
$LN76@AssignFrom:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  000cb	8b 45 ec	 mov	 eax, DWORD PTR $T4[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  000ce	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000d5	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000dc	c6 45 c0 00	 mov	 BYTE PTR $T3[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 250  : 		return GetValue((std::string("ThisObject:")+typeid(T).name()).c_str(), object);

  000e0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  000e7	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000ea	72 0d		 jb	 SHORT $LN86@AssignFrom

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000ec	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ed	50		 push	 eax
  000ee	ff 75 d8	 push	 DWORD PTR $T4[ebp]
  000f1	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000f6	83 c4 08	 add	 esp, 8
$LN86@AssignFrom:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 187  : 		if (source.GetThisObject(*pObject))

  000f9	80 7d bf 00	 cmp	 BYTE PTR $T2[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  000fd	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00104	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0010b	c6 45 d8 00	 mov	 BYTE PTR $T4[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 187  : 		if (source.GetThisObject(*pObject))

  0010f	74 06		 je	 SHORT $LN4@AssignFrom

; 188  : 			m_done = true;

  00111	c6 46 08 01	 mov	 BYTE PTR [esi+8], 1
  00115	eb 1f		 jmp	 SHORT $LN96@AssignFrom
$LN4@AssignFrom:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h

; 88   :         return __std_type_info_compare(&_Data, &_Other._Data) != 0;

  00117	68 04 00 00 00	 push	 OFFSET ??_R0?AV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@@8+4
  0011c	68 04 00 00 00	 push	 OFFSET ??_R0?AVDL_GroupParameters_IntegerBased@CryptoPP@@@8+4
  00121	e8 00 00 00 00	 call	 ___std_type_info_compare
  00126	83 c4 08	 add	 esp, 8
  00129	85 c0		 test	 eax, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 189  : 		else if (typeid(BASE) != typeid(T))

  0012b	74 09		 je	 SHORT $LN96@AssignFrom

; 190  : 			pObject->BASE::AssignFrom(source);

  0012d	57		 push	 edi
  0012e	8d 4b 28	 lea	 ecx, DWORD PTR [ebx+40]
  00131	e8 00 00 00 00	 call	 ?AssignFrom@DL_GroupParameters_IntegerBased@CryptoPP@@UAEXABVNameValuePairs@2@@Z ; CryptoPP::DL_GroupParameters_IntegerBased::AssignFrom
$LN96@AssignFrom:

; 231  : 	return AssignFromHelperClass<T, BASE>(pObject, source);
; 232  : }

  00136	8b c6		 mov	 eax, esi
  00138	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0013b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00142	59		 pop	 ecx
  00143	5f		 pop	 edi
  00144	5e		 pop	 esi
  00145	5b		 pop	 ebx
  00146	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00149	33 cd		 xor	 ecx, ebp
  0014b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00150	8b e5		 mov	 esp, ebp
  00152	5d		 pop	 ebp
  00153	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$AssignFromHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@2@@CryptoPP@@YA?AV?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@0@ABVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??$AssignFromHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@2@@CryptoPP@@YA?AV?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@0@ABVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z$1:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR $T3[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$??$AssignFromHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@2@@CryptoPP@@YA?AV?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@0@ABVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$AssignFromHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@2@@CryptoPP@@YA?AV?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@0@ABVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$AssignFromHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@2@@CryptoPP@@YA?AV?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@0@ABVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z ENDP ; CryptoPP::AssignFromHelper<CryptoPP::DL_GroupParameters_IntegerBased,CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> > >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?AgreeWithStaticPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV32@_N1@Z
_TEXT	SEGMENT
_r$2 = -148						; size = 40
___$ReturnUdt$GSCopy$ = -104				; size = 4
_privateExponent$GSCopy$1$ = -100			; size = 4
$T3 = -96						; size = 40
_e$4 = -56						; size = 40
$T5 = -56						; size = 40
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_params$ = 12						; size = 4
_publicElement$ = 16					; size = 4
_validateOtherPublicKey$ = 20				; size = 1
_privateExponent$ = 24					; size = 4
?AgreeWithStaticPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV32@_N1@Z PROC ; CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::AgreeWithStaticPrivateKey, COMDAT
; _this$ = ecx

; 1449 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AgreeWithStaticPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV32@_N1@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1450 : 		if (COFACTOR_OPTION::ToEnum() == COMPATIBLE_COFACTOR_MULTIPLICTION)
; 1451 : 		{
; 1452 : 			const Integer &k = params.GetCofactor();
; 1453 : 			return params.ExponentiateElement(publicElement, 
; 1454 : 				ModularArithmetic(params.GetSubgroupOrder()).Divide(privateExponent, k)*k);
; 1455 : 		}
; 1456 : 		else if (COFACTOR_OPTION::ToEnum() == INCOMPATIBLE_COFACTOR_MULTIPLICTION)
; 1457 : 			return params.ExponentiateElement(publicElement, privateExponent*params.GetCofactor());
; 1458 : 		else
; 1459 : 		{
; 1460 : 			assert(COFACTOR_OPTION::ToEnum() == NO_COFACTOR_MULTIPLICTION);
; 1461 : 
; 1462 : 			if (!validateOtherPublicKey)

  0002e	80 7d 14 00	 cmp	 BYTE PTR _validateOtherPublicKey$[ebp], 0
  00032	8b 75 0c	 mov	 esi, DWORD PTR _params$[ebp]
  00035	8b ce		 mov	 ecx, esi
  00037	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0003a	8b 45 18	 mov	 eax, DWORD PTR _privateExponent$[ebp]
  0003d	8b 5d 10	 mov	 ebx, DWORD PTR _publicElement$[ebp]
  00040	8b 16		 mov	 edx, DWORD PTR [esi]
  00042	89 7d 98	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], edi
  00045	89 45 9c	 mov	 DWORD PTR _privateExponent$GSCopy$1$[ebp], eax
  00048	75 0b		 jne	 SHORT $LN6@AgreeWithS

; 1463 : 				return params.ExponentiateElement(publicElement, privateExponent);

  0004a	50		 push	 eax
  0004b	53		 push	 ebx
  0004c	57		 push	 edi
  0004d	ff 52 10	 call	 DWORD PTR [edx+16]
  00050	e9 d6 00 00 00	 jmp	 $LN97@AgreeWithS
$LN6@AgreeWithS:

; 1464 : 
; 1465 : 			if (params.FastSubgroupCheckAvailable())

  00055	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  00058	ff d0		 call	 eax
  0005a	8b 16		 mov	 edx, DWORD PTR [esi]
  0005c	8b ce		 mov	 ecx, esi
  0005e	84 c0		 test	 al, al
  00060	74 23		 je	 SHORT $LN7@AgreeWithS

; 1466 : 			{
; 1467 : 				if (!params.ValidateElement(2, publicElement, NULL))

  00062	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00065	6a 00		 push	 0
  00067	53		 push	 ebx
  00068	6a 02		 push	 2
  0006a	ff d0		 call	 eax
  0006c	84 c0		 test	 al, al
  0006e	0f 84 d7 00 00
	00		 je	 $LN99@AgreeWithS

; 1469 : 				return params.ExponentiateElement(publicElement, privateExponent);

  00074	ff 75 9c	 push	 DWORD PTR _privateExponent$GSCopy$1$[ebp]
  00077	8b 06		 mov	 eax, DWORD PTR [esi]
  00079	8b ce		 mov	 ecx, esi
  0007b	53		 push	 ebx
  0007c	57		 push	 edi
  0007d	ff 50 10	 call	 DWORD PTR [eax+16]
  00080	e9 a6 00 00 00	 jmp	 $LN97@AgreeWithS
$LN7@AgreeWithS:

; 1470 : 			}
; 1471 : 			else
; 1472 : 			{
; 1473 : 				const Integer e[2] = {params.GetSubgroupOrder(), privateExponent};

  00085	ff 52 20	 call	 DWORD PTR [edx+32]
  00088	50		 push	 eax
  00089	8d 4d c8	 lea	 ecx, DWORD PTR _e$4[ebp]
  0008c	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::Integer::Integer
  00091	ff 75 9c	 push	 DWORD PTR _privateExponent$GSCopy$1$[ebp]
  00094	8d 4d dc	 lea	 ecx, DWORD PTR _e$4[ebp+20]
  00097	c7 45 fc 0a 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 10 ; 0000000aH
  0009e	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::Integer::Integer

; 1474 : 				Element r[2];

  000a3	68 00 00 00 00	 push	 OFFSET ??1Integer@CryptoPP@@UAE@XZ
  000a8	68 00 00 00 00	 push	 OFFSET ??0Integer@CryptoPP@@QAE@XZ ; CryptoPP::Integer::Integer
  000ad	6a 02		 push	 2
  000af	6a 14		 push	 20			; 00000014H
  000b1	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _r$2[ebp]
  000b7	c7 45 fc 0b 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  000be	50		 push	 eax
  000bf	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z

; 1475 : 				params.SimultaneousExponentiate(r, publicElement, e, 2);

  000c4	8b 06		 mov	 eax, DWORD PTR [esi]
  000c6	8d 4d c8	 lea	 ecx, DWORD PTR _e$4[ebp]
  000c9	6a 02		 push	 2
  000cb	51		 push	 ecx
  000cc	53		 push	 ebx
  000cd	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _r$2[ebp]
  000d3	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH
  000d7	51		 push	 ecx
  000d8	8b ce		 mov	 ecx, esi
  000da	ff 50 50	 call	 DWORD PTR [eax+80]

; 1476 : 				if (!params.IsIdentity(r[0]))

  000dd	8b 06		 mov	 eax, DWORD PTR [esi]
  000df	8d 8d 6c ff ff
	ff		 lea	 ecx, DWORD PTR _r$2[ebp]
  000e5	51		 push	 ecx
  000e6	8b ce		 mov	 ecx, esi
  000e8	8b 40 4c	 mov	 eax, DWORD PTR [eax+76]
  000eb	ff d0		 call	 eax
  000ed	84 c0		 test	 al, al
  000ef	74 70		 je	 SHORT $LN100@AgreeWithS

; 1478 : 				return r[1];

  000f1	8d 45 80	 lea	 eax, DWORD PTR _r$2[ebp+20]
  000f4	8b cf		 mov	 ecx, edi
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::Integer::Integer
  000fc	68 00 00 00 00	 push	 OFFSET ??1Integer@CryptoPP@@UAE@XZ
  00101	6a 02		 push	 2
  00103	6a 14		 push	 20			; 00000014H
  00105	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _r$2[ebp]
  0010b	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH
  0010f	50		 push	 eax
  00110	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00115	68 00 00 00 00	 push	 OFFSET ??1Integer@CryptoPP@@UAE@XZ
  0011a	6a 02		 push	 2
  0011c	6a 14		 push	 20			; 00000014H
  0011e	8d 45 c8	 lea	 eax, DWORD PTR _e$4[ebp]
  00121	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00125	50		 push	 eax
  00126	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
$LN97@AgreeWithS:

; 1479 : 			}
; 1480 : 		}
; 1481 : 	}

  0012b	8b c7		 mov	 eax, edi
  0012d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00130	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00137	59		 pop	 ecx
  00138	5f		 pop	 edi
  00139	5e		 pop	 esi
  0013a	5b		 pop	 ebx
  0013b	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0013e	33 cd		 xor	 ecx, ebp
  00140	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00145	8b e5		 mov	 esp, ebp
  00147	5d		 pop	 ebp
  00148	c2 14 00	 ret	 20			; 00000014H
$LN99@AgreeWithS:

; 1468 : 					throw DL_BadElement();

  0014b	8d 4d c8	 lea	 ecx, DWORD PTR $T5[ebp]
  0014e	e8 00 00 00 00	 call	 ??0DL_BadElement@CryptoPP@@QAE@XZ ; CryptoPP::DL_BadElement::DL_BadElement
  00153	68 00 00 00 00	 push	 OFFSET __TI4?AVDL_BadElement@CryptoPP@@
  00158	8d 45 c8	 lea	 eax, DWORD PTR $T5[ebp]
  0015b	50		 push	 eax
  0015c	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN100@AgreeWithS:

; 1477 : 					throw DL_BadElement();

  00161	8d 4d a0	 lea	 ecx, DWORD PTR $T3[ebp]
  00164	e8 00 00 00 00	 call	 ??0DL_BadElement@CryptoPP@@QAE@XZ ; CryptoPP::DL_BadElement::DL_BadElement
  00169	68 00 00 00 00	 push	 OFFSET __TI4?AVDL_BadElement@CryptoPP@@
  0016e	8d 45 a0	 lea	 eax, DWORD PTR $T3[ebp]
  00171	50		 push	 eax
  00172	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN96@AgreeWithS:
  00177	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AgreeWithStaticPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV32@_N1@Z$6:
  00000	8d 4d c8	 lea	 ecx, DWORD PTR _e$4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
__unwindfunclet$?AgreeWithStaticPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV32@_N1@Z$8:
  00008	68 00 00 00 00	 push	 OFFSET ??1Integer@CryptoPP@@UAE@XZ
  0000d	6a 02		 push	 2
  0000f	6a 14		 push	 20			; 00000014H
  00011	8d 45 c8	 lea	 eax, DWORD PTR _e$4[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  0001a	c3		 ret	 0
__unwindfunclet$?AgreeWithStaticPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV32@_N1@Z$9:
  0001b	68 00 00 00 00	 push	 OFFSET ??1Integer@CryptoPP@@UAE@XZ
  00020	6a 02		 push	 2
  00022	6a 14		 push	 20			; 00000014H
  00024	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _r$2[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00030	c3		 ret	 0
  00031	cc		 int	 3
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
  00035	cc		 int	 3
__ehhandler$?AgreeWithStaticPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV32@_N1@Z:
  00036	90		 npad	 1
  00037	90		 npad	 1
  00038	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003f	8b 8a 68 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-152]
  00045	33 c8		 xor	 ecx, eax
  00047	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004c	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0004f	33 c8		 xor	 ecx, eax
  00051	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00056	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AgreeWithStaticPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV32@_N1@Z
  0005b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AgreeWithStaticPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV32@_N1@Z ENDP ; CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::AgreeWithStaticPrivateKey
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?AgreeWithEphemeralPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@ABV32@@Z
_TEXT	SEGMENT
$T4 = -36						; size = 20
$T5 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_params$ = 12						; size = 4
_publicPrecomputation$ = 16				; size = 4
_privateExponent$ = 20					; size = 4
?AgreeWithEphemeralPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@ABV32@@Z PROC ; CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::AgreeWithEphemeralPrivateKey, COMDAT
; _this$ = ecx

; 1443 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AgreeWithEphemeralPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@ABV32@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 1444 : 		return publicPrecomputation.Exponentiate(params.GetGroupPrecomputation(), 

  00028	ff 75 14	 push	 DWORD PTR _privateExponent$[ebp]
  0002b	8d 4d dc	 lea	 ecx, DWORD PTR $T4[ebp]
  0002e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T5[ebp], 0
  00035	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::Integer::Integer
  0003a	8b 4d 0c	 mov	 ecx, DWORD PTR _params$[ebp]
  0003d	8b 75 10	 mov	 esi, DWORD PTR _publicPrecomputation$[ebp]
  00040	50		 push	 eax
  00041	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  00048	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004a	8b 3e		 mov	 edi, DWORD PTR [esi]
  0004c	c7 45 f0 04 00
	00 00		 mov	 DWORD PTR $T5[ebp], 4
  00053	ff 50 14	 call	 DWORD PTR [eax+20]
  00056	8b 5d 08	 mov	 ebx, DWORD PTR ___$ReturnUdt$[ebp]
  00059	8b ce		 mov	 ecx, esi
  0005b	50		 push	 eax
  0005c	53		 push	 ebx
  0005d	ff 57 18	 call	 DWORD PTR [edi+24]
  00060	c7 45 f0 08 00
	00 00		 mov	 DWORD PTR $T5[ebp], 8
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00067	8b 55 e4	 mov	 edx, DWORD PTR $T4[ebp+8]
  0006a	33 c0		 xor	 eax, eax
  0006c	8b 75 e8	 mov	 esi, DWORD PTR $T4[ebp+12]
  0006f	8b ca		 mov	 ecx, edx
  00071	8b fe		 mov	 edi, esi
  00073	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  0007a	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  0007c	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
  00083	56		 push	 esi
  00084	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00087	72 07		 jb	 SHORT $LN27@AgreeWithE

; 109  : 			return AlignedDeallocate(p);

  00089	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  0008e	eb 05		 jmp	 SHORT $LN102@AgreeWithE
$LN27@AgreeWithE:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  00090	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN102@AgreeWithE:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h

; 1446 : 	}

  00095	8b c3		 mov	 eax, ebx
  00097	83 c4 04	 add	 esp, 4
  0009a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a4	59		 pop	 ecx
  000a5	5f		 pop	 edi
  000a6	5e		 pop	 esi
  000a7	5b		 pop	 ebx
  000a8	8b e5		 mov	 esp, ebp
  000aa	5d		 pop	 ebp
  000ab	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AgreeWithEphemeralPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@ABV32@@Z$2:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T5[ebp]
  00003	83 e0 04	 and	 eax, 4
  00006	0f 84 0c 00 00
	00		 je	 $LN10@AgreeWithE
  0000c	83 65 f0 fb	 and	 DWORD PTR $T5[ebp], -5	; fffffffbH
  00010	8d 4d dc	 lea	 ecx, DWORD PTR $T4[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
$LN10@AgreeWithE:
  00018	c3		 ret	 0
__unwindfunclet$?AgreeWithEphemeralPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@ABV32@@Z$3:
  00019	8b 45 f0	 mov	 eax, DWORD PTR $T5[ebp]
  0001c	83 e0 08	 and	 eax, 8
  0001f	0f 84 0c 00 00
	00		 je	 $LN12@AgreeWithE
  00025	83 65 f0 f7	 and	 DWORD PTR $T5[ebp], -9	; fffffff7H
  00029	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0002c	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
$LN12@AgreeWithE:
  00031	c3		 ret	 0
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
  00035	cc		 int	 3
  00036	cc		 int	 3
__ehhandler$?AgreeWithEphemeralPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@ABV32@@Z:
  00037	90		 npad	 1
  00038	90		 npad	 1
  00039	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00040	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00043	33 c8		 xor	 ecx, eax
  00045	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AgreeWithEphemeralPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@ABV32@@Z
  0004f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AgreeWithEphemeralPrivateKey@?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AVInteger@2@ABV?$DL_GroupParameters@VInteger@CryptoPP@@@2@ABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@ABV32@@Z ENDP ; CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::AgreeWithEphemeralPrivateKey
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ?Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@2@XZ
_TEXT	SEGMENT
?Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@2@XZ PROC ; CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref, COMDAT
; _this$ = ecx

; 123  : 	static volatile simple_ptr<T> s_pObject;

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__tls_array
  00006	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR __tls_index
  0000c	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?$TSS0@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@3@XZ@4HA ; `CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref'::`2'::$TSS0
  00014	3b 81 00 00 00
	00		 cmp	 eax, DWORD PTR __Init_thread_epoch[ecx]
  0001a	7f 42		 jg	 SHORT $LN17@Ref
$LN2@Ref:

; 124  : 	T *p = s_pObject.m_p;

  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_pObject@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@3@XZ@4V?$simple_ptr@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@3@C ; `CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref'::`2'::s_pObject

; 125  : 
; 126  : 	if (p)

  00021	85 c0		 test	 eax, eax
  00023	75 38		 jne	 SHORT $LN1@Ref

; 100  : 	T* operator()() const {return new T;}

  00025	6a 04		 push	 4
  00027	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002c	83 c4 04	 add	 esp, 4
  0002f	85 c0		 test	 eax, eax
  00031	74 08		 je	 SHORT $LN11@Ref
  00033	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@6B@
  00039	eb 02		 jmp	 SHORT $LN12@Ref
$LN11@Ref:
  0003b	33 c0		 xor	 eax, eax
$LN12@Ref:
  0003d	56		 push	 esi

; 127  : 		return *p;
; 128  : 
; 129  : 	T *newObject = m_objectFactory();
; 130  : 	p = s_pObject.m_p;

  0003e	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?s_pObject@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@3@XZ@4V?$simple_ptr@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@3@C ; `CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref'::`2'::s_pObject

; 131  : 
; 132  : 	if (p)

  00044	85 f6		 test	 esi, esi
  00046	74 0f		 je	 SHORT $LN4@Ref

; 133  : 	{
; 134  : 		delete newObject;

  00048	6a 04		 push	 4
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00050	83 c4 08	 add	 esp, 8

; 135  : 		return *p;

  00053	8b c6		 mov	 eax, esi
  00055	5e		 pop	 esi

; 139  : 	return *newObject;
; 140  : }

  00056	c3		 ret	 0
$LN4@Ref:

; 136  : 	}
; 137  : 
; 138  : 	s_pObject.m_p = newObject;

  00057	a3 00 00 00 00	 mov	 DWORD PTR ?s_pObject@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@3@XZ@4V?$simple_ptr@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@3@C, eax ; `CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref'::`2'::s_pObject
  0005c	5e		 pop	 esi
$LN1@Ref:

; 139  : 	return *newObject;
; 140  : }

  0005d	c3		 ret	 0
$LN17@Ref:

; 123  : 	static volatile simple_ptr<T> s_pObject;

  0005e	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@3@XZ@4HA ; `CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref'::`2'::$TSS0
  00063	e8 00 00 00 00	 call	 __Init_thread_header
  00068	83 c4 04	 add	 esp, 4
  0006b	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@3@XZ@4HA, -1 ; `CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref'::`2'::$TSS0
  00072	75 a8		 jne	 SHORT $LN2@Ref
  00074	68 00 00 00 00	 push	 OFFSET ??__Fs_pObject@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@2@XZ@YAXXZ ; `CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref'::`2'::`dynamic atexit destructor for 's_pObject''
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h

; 12   : 	simple_ptr(T *p = NULL) : m_p(p) {}

  00079	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?s_pObject@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@3@XZ@4V?$simple_ptr@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@3@C, 0 ; `CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref'::`2'::s_pObject
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 123  : 	static volatile simple_ptr<T> s_pObject;

  00083	e8 00 00 00 00	 call	 _atexit
  00088	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@3@XZ@4HA ; `CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref'::`2'::$TSS0
  0008d	e8 00 00 00 00	 call	 __Init_thread_footer
  00092	83 c4 08	 add	 esp, 8
  00095	eb 85		 jmp	 SHORT $LN2@Ref
?Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@2@XZ ENDP ; CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00049	8b 56 5c	 mov	 edx, DWORD PTR [esi+92]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0004c	33 c0		 xor	 eax, eax
  0004e	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  00051	8b fa		 mov	 edi, edx
  00053	f3 ab		 rep stosd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00055	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00056	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 112  : 		UnalignedDeallocate(p);

  0005d	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00062	83 c4 04	 add	 esp, 4
  00065	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00069	74 0b		 je	 SHORT $LN82@scalar
  0006b	6a 60		 push	 96			; 00000060H
  0006d	56		 push	 esi
  0006e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00073	83 c4 08	 add	 esp, 8
$LN82@scalar:
  00076	8b c6		 mov	 eax, esi
  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00082	59		 pop	 ecx
  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 04 00	 ret	 4
  0008b	cc		 int	 3
  0008c	cc		 int	 3
  0008d	cc		 int	 3
  0008e	cc		 int	 3
  0008f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
_TEXT	SEGMENT
$T2 = -64						; size = 12
_this$GSCopy$ = -52					; size = 4
$T3 = -48						; size = 24
_key$GSCopy$1$ = -24					; size = 4
_this$GSCopy$1$ = -20					; size = 4
_this$ = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_length$ = 12						; size = 4
_iv$ = 16						; size = 4
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >, COMDAT
; _this$ = ecx

; 261  : 	CipherModeFinalTemplate_CipherHolder(const byte *key, size_t length, const byte *iv)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d ec	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  0002b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002e	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]

; 262  : 	{

  00031	8d 79 40	 lea	 edi, DWORD PTR [ecx+64]
  00034	8b 5d 10	 mov	 ebx, DWORD PTR _iv$[ebp]
  00037	89 4d cc	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  0003a	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0003d	6a 01		 push	 1
  0003f	89 45 e8	 mov	 DWORD PTR _key$GSCopy$1$[ebp], eax
  00042	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  00045	e8 00 00 00 00	 call	 ??0Algorithm@CryptoPP@@QAE@_N@Z ; CryptoPP::Algorithm::Algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  0004a	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
  00051	c7 47 1c 00 00
	00 00		 mov	 DWORD PTR [edi+28], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h

; 154  :  	BlockCipherFinal() {}

  00058	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0005e	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 262  : 	{

  00065	8b 75 ec	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00068	8b ce		 mov	 ecx, esi
  0006a	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00071	e8 00 00 00 00	 call	 ??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  00076	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00079	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0007f	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
  00086	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
  0008d	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
  00094	89 7e 08	 mov	 DWORD PTR [esi+8], edi
  00097	8b 01		 mov	 eax, DWORD PTR [ecx]
  00099	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0009d	ff 50 10	 call	 DWORD PTR [eax+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  000a0	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0
  000a7	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 36   : 			m_data = data;

  000ae	89 5d d4	 mov	 DWORD PTR $T3[ebp+4], ebx

; 37   : 			m_size = size;

  000b1	89 45 d8	 mov	 DWORD PTR $T3[ebp+8], eax

; 38   : 		}
; 39   : 		m_deepCopy = deepCopy;

  000b4	c6 45 d0 00	 mov	 BYTE PTR $T3[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  000b8	6a 01		 push	 1
  000ba	8d 45 d0	 lea	 eax, DWORD PTR $T3[ebp]
  000bd	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000c1	50		 push	 eax
  000c2	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  000c5	68 00 00 00 00	 push	 OFFSET ??_C@_02JDBEGKHA@IV@
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 ??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z ; CryptoPP::MakeParameters<CryptoPP::ConstByteArrayParameter>
  000d0	83 c4 10	 add	 esp, 16			; 00000010H
  000d3	50		 push	 eax
  000d4	ff 75 0c	 push	 DWORD PTR _length$[ebp]
  000d7	8b ce		 mov	 ecx, esi
  000d9	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  000dd	ff 75 e8	 push	 DWORD PTR _key$GSCopy$1$[ebp]
  000e0	e8 00 00 00 00	 call	 ?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z ; CryptoPP::SimpleKeyingInterface::SetKey
  000e5	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp+4]
  000e8	e8 00 00 00 00	 call	 ??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  000ed	8b 55 e4	 mov	 edx, DWORD PTR $T3[ebp+20]
  000f0	32 c0		 xor	 al, al
  000f2	8b 4d e0	 mov	 ecx, DWORD PTR $T3[ebp+16]
  000f5	8b fa		 mov	 edi, edx
  000f7	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  000f9	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000fa	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6

; 112  : 		UnalignedDeallocate(p);

  000fe	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00103	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 265  : 	}

  00106	8b c6		 mov	 eax, esi
  00108	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0010b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00112	59		 pop	 ecx
  00113	5f		 pop	 edi
  00114	5e		 pop	 esi
  00115	5b		 pop	 ebx
  00116	8b e5		 mov	 esp, ebp
  00118	5d		 pop	 ebp
  00119	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0:
  00000	8b 4d cc	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00003	83 c1 40	 add	 ecx, 64			; 00000040H
  00006	e9 00 00 00 00	 jmp	 ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1:
  0000b	8b 4d cc	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$11:
  00013	8d 4d dc	 lea	 ecx, DWORD PTR $T3[ebp+12]
  00016	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2:
  0001b	8d 4d d0	 lea	 ecx, DWORD PTR $T3[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1ConstByteArrayParameter@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3:
  00023	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1AlgorithmParameters@CryptoPP@@UAE@XZ
  0002b	cc		 int	 3
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
__ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z:
  00030	90		 npad	 1
  00031	90		 npad	 1
  00032	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00036	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00039	8b 4a bc	 mov	 ecx, DWORD PTR [edx-68]
  0003c	33 c8		 xor	 ecx, eax
  0003e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00043	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  00048	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
  00049	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00053	59		 pop	 ecx
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
  0005b	cc		 int	 3
  0005c	cc		 int	 3
  0005d	cc		 int	 3
  0005e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$GSCopy$ = -68				; size = 4
$T2 = -64						; size = 24
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00029	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ??_C@_03EEHPEFCG@RC6@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  0002f	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00032	66 89 45 d8	 mov	 WORD PTR $T3[ebp], ax
  00036	a0 02 00 00 00	 mov	 al, BYTE PTR ??_C@_03EEHPEFCG@RC6@+2
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  0003b	89 75 bc	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0003e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00045	c7 45 e8 03 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 3

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0004c	88 45 da	 mov	 BYTE PTR $T3[ebp+2], al

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0004f	c6 45 db 00	 mov	 BYTE PTR $T3[ebp+3], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  00053	68 00 00 00 00	 push	 OFFSET ??_C@_01KMDKNFGN@?1@
  00058	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00062	50		 push	 eax
  00063	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_03LECCGOIK@CTR@
  00071	50		 push	 eax
  00072	56		 push	 esi
  00073	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00077	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0007c	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  0007f	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00082	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00085	72 0d		 jb	 SHORT $LN69@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00087	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00088	50		 push	 eax
  00089	ff 75 c0	 push	 DWORD PTR $T2[ebp]
  0008c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00091	83 c4 08	 add	 esp, 8
$LN69@AlgorithmN:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00094	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00097	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009e	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000a5	c6 45 c0 00	 mov	 BYTE PTR $T2[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  000a9	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000ac	72 0d		 jb	 SHORT $LN86@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000ae	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	51		 push	 ecx
  000b0	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000b3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000b8	83 c4 08	 add	 esp, 8
$LN86@AlgorithmN:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  000bb	8b c6		 mov	 eax, esi
  000bd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c7	59		 pop	 ecx
  000c8	5e		 pop	 esi
  000c9	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cc	33 cd		 xor	 ecx, ebp
  000ce	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ PROC ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	57		 push	 edi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00023	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00026	33 c0		 xor	 eax, eax
  00028	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  0002b	8b fa		 mov	 edi, edx
  0002d	f3 ab		 rep stosd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  0002f	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  00037	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003c	83 c4 04	 add	 esp, 4
  0003f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00042	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00049	59		 pop	 ecx
  0004a	5f		 pop	 edi
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
  0004f	cc		 int	 3
  00050	cc		 int	 3
  00051	cc		 int	 3
  00052	cc		 int	 3
  00053	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ENDP ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc> >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??_G?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 1c	 mov	 edx, DWORD PTR [esi+28]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00029	33 c0		 xor	 eax, eax
  0002b	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 ab		 rep stosd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
  00042	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00046	74 0b		 je	 SHORT $LN40@scalar
  00048	6a 20		 push	 32			; 00000020H
  0004a	56		 push	 esi
  0004b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00050	83 c4 08	 add	 esp, 8
$LN40@scalar:
  00053	8b c6		 mov	 eax, esi
  00055	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00058	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005f	59		 pop	 ecx
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
  00068	cc		 int	 3
  00069	cc		 int	 3
  0006a	cc		 int	 3
  0006b	cc		 int	 3
  0006c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::IsForwardTransformation, COMDAT
; _this$ = ecx

; 162  : 	bool IsForwardTransformation() const {return DIR == ENCRYPTION;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>::IsForwardTransformation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@UBEPAVClonable@2@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@UBEPAVClonable@2@XZ PROC ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::RC6::Enc>::Clone, COMDAT
; _this$ = ecx

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@UBEPAVClonable@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	6a 20		 push	 32			; 00000020H
  00029	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002e	8b f0		 mov	 esi, eax
  00030	83 c4 04	 add	 esp, 4
  00033	89 75 f0	 mov	 DWORD PTR $T2[ebp], esi
  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003d	85 f6		 test	 esi, esi
  0003f	74 2f		 je	 SHORT $LN3@Clone
  00041	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00044	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00047	66 8b 4f 08	 mov	 cx, WORD PTR [edi+8]
  0004b	66 89 4e 0c	 mov	 WORD PTR [esi+12], cx
  0004f	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00052	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00055	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00058	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??0?$SecBlock@IV?$AllocatorWithCleanup@I$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::SecBlock<unsigned int,CryptoPP::AllocatorWithCleanup<unsigned int,0> >::SecBlock<unsigned int,CryptoPP::AllocatorWithCleanup<unsigned int,0> >
  00061	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  00067	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
  0006e	eb 02		 jmp	 SHORT $LN4@Clone
$LN3@Clone:
  00070	33 f6		 xor	 esi, esi
$LN4@Clone:
  00072	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00075	f7 de		 neg	 esi
  00077	1b f6		 sbb	 esi, esi
  00079	23 c6		 and	 eax, esi
  0007b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00085	59		 pop	 ecx
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@UBEPAVClonable@2@XZ$0:
  00000	6a 20		 push	 32			; 00000020H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@UBEPAVClonable@2@XZ:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@UBEPAVClonable@2@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@VEnc@RC6@2@@CryptoPP@@UBEPAVClonable@2@XZ ENDP ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::RC6::Enc>::Clone
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00049	8b be fc 00 00
	00		 mov	 edi, DWORD PTR [esi+252]
  0004f	8d 46 50	 lea	 eax, DWORD PTR [esi+80]
  00052	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [eax+168]

; 194  : 		if (p == GetAlignedArray())

  00058	3b f8		 cmp	 edi, eax
  0005a	75 0b		 jne	 SHORT $LN73@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0005c	c6 80 a1 00 00
	00 00		 mov	 BYTE PTR [eax+161], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00063	33 c0		 xor	 eax, eax
  00065	f3 ab		 rep stosd
$LN73@scalar:
  00067	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0006b	74 0e		 je	 SHORT $LN85@scalar
  0006d	68 00 01 00 00	 push	 256			; 00000100H
  00072	56		 push	 esi
  00073	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00078	83 c4 08	 add	 esp, 8
$LN85@scalar:
  0007b	8b c6		 mov	 eax, esi
  0007d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00087	59		 pop	 ecx
  00088	5f		 pop	 edi
  00089	5e		 pop	 esi
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 04 00	 ret	 4
  00090	cc		 int	 3
  00091	cc		 int	 3
  00092	cc		 int	 3
  00093	cc		 int	 3
  00094	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
_TEXT	SEGMENT
$T2 = -56						; size = 24
$T3 = -32						; size = 12
_this$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_length$ = 12						; size = 4
_iv$ = 16						; size = 4
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >, COMDAT
; _this$ = ecx

; 261  : 	CipherModeFinalTemplate_CipherHolder(const byte *key, size_t length, const byte *iv)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx

; 262  : 	{

  0002d	8d 7b 40	 lea	 edi, DWORD PTR [ebx+64]
  00030	6a 01		 push	 1
  00032	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00035	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi
  00038	e8 00 00 00 00	 call	 ??0Algorithm@CryptoPP@@QAE@_N@Z ; CryptoPP::Algorithm::Algorithm
  0003d	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 185  : 			m_allocated = true;

  00040	c6 80 a1 00 00
	00 01		 mov	 BYTE PTR [eax+161], 1

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00047	c7 80 a8 00 00
	00 28 00 00 00	 mov	 DWORD PTR [eax+168], 40	; 00000028H
  00051	89 80 ac 00 00
	00		 mov	 DWORD PTR [eax+172], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h

; 154  :  	BlockCipherFinal() {}

  00057	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0005d	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 262  : 	{

  00064	8b cb		 mov	 ecx, ebx
  00066	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006d	e8 00 00 00 00	 call	 ??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  00072	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00075	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0007b	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
  00082	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
  00089	c7 43 28 00 00
	00 00		 mov	 DWORD PTR [ebx+40], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
  00090	89 7b 08	 mov	 DWORD PTR [ebx+8], edi
  00093	8b 01		 mov	 eax, DWORD PTR [ecx]
  00095	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00099	ff 50 10	 call	 DWORD PTR [eax+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  0009c	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0
  000a3	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 36   : 			m_data = data;

  000aa	8b 4d 10	 mov	 ecx, DWORD PTR _iv$[ebp]
  000ad	89 4d cc	 mov	 DWORD PTR $T2[ebp+4], ecx

; 37   : 			m_size = size;

  000b0	89 45 d0	 mov	 DWORD PTR $T2[ebp+8], eax

; 38   : 		}
; 39   : 		m_deepCopy = deepCopy;

  000b3	c6 45 c8 00	 mov	 BYTE PTR $T2[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  000b7	6a 01		 push	 1
  000b9	8d 45 c8	 lea	 eax, DWORD PTR $T2[ebp]
  000bc	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000c0	50		 push	 eax
  000c1	8d 45 e0	 lea	 eax, DWORD PTR $T3[ebp]
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_02JDBEGKHA@IV@
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z ; CryptoPP::MakeParameters<CryptoPP::ConstByteArrayParameter>
  000cf	83 c4 10	 add	 esp, 16			; 00000010H
  000d2	50		 push	 eax
  000d3	ff 75 0c	 push	 DWORD PTR _length$[ebp]
  000d6	8b cb		 mov	 ecx, ebx
  000d8	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000dc	ff 75 08	 push	 DWORD PTR _key$[ebp]
  000df	e8 00 00 00 00	 call	 ?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z ; CryptoPP::SimpleKeyingInterface::SetKey
  000e4	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp+4]
  000e7	e8 00 00 00 00	 call	 ??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  000ec	8b 55 dc	 mov	 edx, DWORD PTR $T2[ebp+20]
  000ef	32 c0		 xor	 al, al
  000f1	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp+16]
  000f4	8b fa		 mov	 edi, edx
  000f6	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  000f8	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000f9	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 112  : 		UnalignedDeallocate(p);

  000fd	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00102	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 265  : 	}

  00105	8b c3		 mov	 eax, ebx
  00107	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0010a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00111	59		 pop	 ecx
  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 40	 add	 ecx, 64			; 00000040H
  00006	e9 00 00 00 00	 jmp	 ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$10:
  00013	8d 4d d4	 lea	 ecx, DWORD PTR $T2[ebp+12]
  00016	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2:
  0001b	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1ConstByteArrayParameter@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3:
  00023	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1AlgorithmParameters@CryptoPP@@UAE@XZ
  0002b	cc		 int	 3
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
__ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z:
  00030	90		 npad	 1
  00031	90		 npad	 1
  00032	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00036	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00039	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0003c	33 c8		 xor	 ecx, eax
  0003e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00043	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  00048	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
  00049	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00053	59		 pop	 ecx
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
  0005b	cc		 int	 3
  0005c	cc		 int	 3
  0005d	cc		 int	 3
  0005e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$GSCopy$ = -68				; size = 4
$T2 = -64						; size = 24
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  0002c	89 75 bc	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002f	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00036	c7 45 e8 04 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 4

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0003d	c7 45 d8 4d 41
	52 53		 mov	 DWORD PTR $T3[ebp], 1397899597 ; 5352414dH

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00044	c6 45 dc 00	 mov	 BYTE PTR $T3[ebp+4], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  00048	68 00 00 00 00	 push	 OFFSET ??_C@_01KMDKNFGN@?1@
  0004d	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00050	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00057	50		 push	 eax
  00058	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_03LECCGOIK@CTR@
  00066	50		 push	 eax
  00067	56		 push	 esi
  00068	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0006c	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00071	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  00074	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00077	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0007a	72 0d		 jb	 SHORT $LN69@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0007c	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007d	50		 push	 eax
  0007e	ff 75 c0	 push	 DWORD PTR $T2[ebp]
  00081	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00086	83 c4 08	 add	 esp, 8
$LN69@AlgorithmN:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00089	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  0008c	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00093	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0009a	c6 45 c0 00	 mov	 BYTE PTR $T2[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  0009e	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a1	72 0d		 jb	 SHORT $LN86@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a3	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a4	51		 push	 ecx
  000a5	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a8	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ad	83 c4 08	 add	 esp, 8
$LN86@AlgorithmN:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  000b0	8b c6		 mov	 eax, esi
  000b2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bc	59		 pop	 ecx
  000bd	5e		 pop	 esi
  000be	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c1	33 cd		 xor	 ecx, ebp
  000c3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ PROC ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc> >, COMDAT
; _this$ = ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00000	8b 91 b8 00 00
	00		 mov	 edx, DWORD PTR [ecx+184]
  00006	83 c1 10	 add	 ecx, 16			; 00000010H
  00009	57		 push	 edi
  0000a	8b b9 ac 00 00
	00		 mov	 edi, DWORD PTR [ecx+172]

; 194  : 		if (p == GetAlignedArray())

  00010	3b f9		 cmp	 edi, ecx
  00012	75 0d		 jne	 SHORT $LN30@ObjectHold

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  00014	c6 81 a1 00 00
	00 00		 mov	 BYTE PTR [ecx+161], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0001b	33 c0		 xor	 eax, eax
  0001d	8b ca		 mov	 ecx, edx
  0001f	f3 ab		 rep stosd
$LN30@ObjectHold:
  00021	5f		 pop	 edi
  00022	c3		 ret	 0
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ENDP ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8b 8e b8 00 00
	00		 mov	 ecx, DWORD PTR [esi+184]
  0000c	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0000f	57		 push	 edi
  00010	8b b8 ac 00 00
	00		 mov	 edi, DWORD PTR [eax+172]

; 194  : 		if (p == GetAlignedArray())

  00016	3b f8		 cmp	 edi, eax
  00018	75 0b		 jne	 SHORT $LN31@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0001a	c6 80 a1 00 00
	00 00		 mov	 BYTE PTR [eax+161], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00021	33 c0		 xor	 eax, eax
  00023	f3 ab		 rep stosd
$LN31@scalar:
  00025	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00029	74 0e		 je	 SHORT $LN43@scalar
  0002b	68 c0 00 00 00	 push	 192			; 000000c0H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00036	83 c4 08	 add	 esp, 8
$LN43@scalar:
  00039	5f		 pop	 edi
  0003a	8b c6		 mov	 eax, esi
  0003c	5e		 pop	 esi
  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
??_G?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::IsForwardTransformation, COMDAT
; _this$ = ecx

; 162  : 	bool IsForwardTransformation() const {return DIR == ENCRYPTION;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>::IsForwardTransformation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@UBEPAVClonable@2@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@UBEPAVClonable@2@XZ PROC ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::MARS::Enc>::Clone, COMDAT
; _this$ = ecx

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	68 c0 00 00 00	 push	 192			; 000000c0H
  0000b	8b f9		 mov	 edi, ecx
  0000d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00012	8b f0		 mov	 esi, eax
  00014	83 c4 04	 add	 esp, 4
  00017	89 75 fc	 mov	 DWORD PTR $T1[ebp], esi
  0001a	85 f6		 test	 esi, esi
  0001c	74 34		 je	 SHORT $LN3@Clone
  0001e	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00021	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00024	8a 4f 08	 mov	 cl, BYTE PTR [edi+8]
  00027	88 4e 0c	 mov	 BYTE PTR [esi+12], cl
  0002a	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  0002d	51		 push	 ecx
  0002e	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00031	e8 00 00 00 00	 call	 ??0?$FixedSizeSecBlock@I$0CI@V?$FixedSizeAllocatorWithCleanup@I$0CI@V?$NullAllocator@I@CryptoPP@@$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z
  00036	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00039	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0003f	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
  00046	f7 de		 neg	 esi
  00048	5f		 pop	 edi
  00049	1b f6		 sbb	 esi, esi
  0004b	23 c6		 and	 eax, esi
  0004d	5e		 pop	 esi
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN3@Clone:
  00052	33 f6		 xor	 esi, esi
  00054	5f		 pop	 edi
  00055	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00058	f7 de		 neg	 esi
  0005a	1b f6		 sbb	 esi, esi
  0005c	23 c6		 and	 eax, esi
  0005e	5e		 pop	 esi
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@VEnc@MARS@2@@CryptoPP@@UBEPAVClonable@2@XZ ENDP ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::MARS::Enc>::Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00049	8b be 0c 11 00
	00		 mov	 edi, DWORD PTR [esi+4364]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  0004f	8d 86 00 01 00
	00		 lea	 eax, DWORD PTR [esi+256]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00055	8b 88 08 10 00
	00		 mov	 ecx, DWORD PTR [eax+4104]

; 194  : 		if (p == GetAlignedArray())

  0005b	3b f8		 cmp	 edi, eax
  0005d	75 0b		 jne	 SHORT $LN73@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0005f	c6 80 01 10 00
	00 00		 mov	 BYTE PTR [eax+4097], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00066	33 c0		 xor	 eax, eax
  00068	f3 ab		 rep stosd
$LN73@scalar:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0006a	8b be fc 00 00
	00		 mov	 edi, DWORD PTR [esi+252]
  00070	8d 46 50	 lea	 eax, DWORD PTR [esi+80]
  00073	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [eax+168]

; 194  : 		if (p == GetAlignedArray())

  00079	3b f8		 cmp	 edi, eax
  0007b	75 0b		 jne	 SHORT $LN100@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0007d	c6 80 a1 00 00
	00 00		 mov	 BYTE PTR [eax+161], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00084	33 c0		 xor	 eax, eax
  00086	f3 ab		 rep stosd
$LN100@scalar:
  00088	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0008c	74 0e		 je	 SHORT $LN112@scalar
  0008e	68 10 11 00 00	 push	 4368			; 00001110H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN112@scalar:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c2 04 00	 ret	 4
  000b1	cc		 int	 3
  000b2	cc		 int	 3
  000b3	cc		 int	 3
  000b4	cc		 int	 3
  000b5	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
_TEXT	SEGMENT
$T2 = -56						; size = 24
$T3 = -32						; size = 12
_this$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_length$ = 12						; size = 4
_iv$ = 16						; size = 4
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >, COMDAT
; _this$ = ecx

; 261  : 	CipherModeFinalTemplate_CipherHolder(const byte *key, size_t length, const byte *iv)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx

; 262  : 	{

  0002d	8d 7b 40	 lea	 edi, DWORD PTR [ebx+64]
  00030	6a 01		 push	 1
  00032	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00035	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi
  00038	e8 00 00 00 00	 call	 ??0Algorithm@CryptoPP@@QAE@_N@Z ; CryptoPP::Algorithm::Algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 185  : 			m_allocated = true;

  0003d	c6 87 b1 00 00
	00 01		 mov	 BYTE PTR [edi+177], 1
  00044	8d 47 10	 lea	 eax, DWORD PTR [edi+16]

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00047	c7 80 a8 00 00
	00 28 00 00 00	 mov	 DWORD PTR [eax+168], 40	; 00000028H
  00051	89 80 ac 00 00
	00		 mov	 DWORD PTR [eax+172], eax
  00057	8d 87 c0 00 00
	00		 lea	 eax, DWORD PTR [edi+192]

; 185  : 			m_allocated = true;

  0005d	c6 80 01 10 00
	00 01		 mov	 BYTE PTR [eax+4097], 1

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00064	c7 80 08 10 00
	00 00 04 00 00	 mov	 DWORD PTR [eax+4104], 1024 ; 00000400H
  0006e	89 80 0c 10 00
	00		 mov	 DWORD PTR [eax+4108], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h

; 154  :  	BlockCipherFinal() {}

  00074	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0007a	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 262  : 	{

  00081	8b cb		 mov	 ecx, ebx
  00083	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0008a	e8 00 00 00 00	 call	 ??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  0008f	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00092	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
  00098	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
  0009f	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
  000a6	c7 43 28 00 00
	00 00		 mov	 DWORD PTR [ebx+40], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
  000ad	89 7b 08	 mov	 DWORD PTR [ebx+8], edi
  000b0	8b 01		 mov	 eax, DWORD PTR [ecx]
  000b2	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000b6	ff 50 10	 call	 DWORD PTR [eax+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  000b9	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0
  000c0	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 36   : 			m_data = data;

  000c7	8b 4d 10	 mov	 ecx, DWORD PTR _iv$[ebp]
  000ca	89 4d cc	 mov	 DWORD PTR $T2[ebp+4], ecx

; 37   : 			m_size = size;

  000cd	89 45 d0	 mov	 DWORD PTR $T2[ebp+8], eax

; 38   : 		}
; 39   : 		m_deepCopy = deepCopy;

  000d0	c6 45 c8 00	 mov	 BYTE PTR $T2[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  000d4	6a 01		 push	 1
  000d6	8d 45 c8	 lea	 eax, DWORD PTR $T2[ebp]
  000d9	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000dd	50		 push	 eax
  000de	8d 45 e0	 lea	 eax, DWORD PTR $T3[ebp]
  000e1	68 00 00 00 00	 push	 OFFSET ??_C@_02JDBEGKHA@IV@
  000e6	50		 push	 eax
  000e7	e8 00 00 00 00	 call	 ??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z ; CryptoPP::MakeParameters<CryptoPP::ConstByteArrayParameter>
  000ec	83 c4 10	 add	 esp, 16			; 00000010H
  000ef	50		 push	 eax
  000f0	ff 75 0c	 push	 DWORD PTR _length$[ebp]
  000f3	8b cb		 mov	 ecx, ebx
  000f5	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000f9	ff 75 08	 push	 DWORD PTR _key$[ebp]
  000fc	e8 00 00 00 00	 call	 ?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z ; CryptoPP::SimpleKeyingInterface::SetKey
  00101	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp+4]
  00104	e8 00 00 00 00	 call	 ??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00109	8b 55 dc	 mov	 edx, DWORD PTR $T2[ebp+20]
  0010c	32 c0		 xor	 al, al
  0010e	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp+16]
  00111	8b fa		 mov	 edi, edx
  00113	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00115	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00116	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 112  : 		UnalignedDeallocate(p);

  0011a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0011f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 265  : 	}

  00122	8b c3		 mov	 eax, ebx
  00124	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00127	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012e	59		 pop	 ecx
  0012f	5f		 pop	 edi
  00130	5e		 pop	 esi
  00131	5b		 pop	 ebx
  00132	8b e5		 mov	 esp, ebp
  00134	5d		 pop	 ebp
  00135	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 40	 add	 ecx, 64			; 00000040H
  00006	e9 00 00 00 00	 jmp	 ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$11:
  00013	8d 4d d4	 lea	 ecx, DWORD PTR $T2[ebp+12]
  00016	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2:
  0001b	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1ConstByteArrayParameter@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3:
  00023	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1AlgorithmParameters@CryptoPP@@UAE@XZ
  0002b	cc		 int	 3
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
__ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z:
  00030	90		 npad	 1
  00031	90		 npad	 1
  00032	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00036	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00039	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0003c	33 c8		 xor	 ecx, eax
  0003e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00043	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  00048	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
  00049	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00053	59		 pop	 ecx
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
  0005b	cc		 int	 3
  0005c	cc		 int	 3
  0005d	cc		 int	 3
  0005e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$GSCopy$ = -68				; size = 4
$T2 = -64						; size = 24
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_07DABDIDEC@Twofish@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  0002e	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00031	89 45 d8	 mov	 DWORD PTR $T3[ebp], eax
  00034	66 a1 04 00 00
	00		 mov	 ax, WORD PTR ??_C@_07DABDIDEC@Twofish@+4
  0003a	66 89 45 dc	 mov	 WORD PTR $T3[ebp+4], ax
  0003e	a0 06 00 00 00	 mov	 al, BYTE PTR ??_C@_07DABDIDEC@Twofish@+6
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00043	89 75 bc	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00046	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  0004d	c7 45 e8 07 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 7

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00054	88 45 de	 mov	 BYTE PTR $T3[ebp+6], al

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00057	c6 45 df 00	 mov	 BYTE PTR $T3[ebp+7], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_01KMDKNFGN@?1@
  00060	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00063	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006a	50		 push	 eax
  0006b	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_03LECCGOIK@CTR@
  00079	50		 push	 eax
  0007a	56		 push	 esi
  0007b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007f	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00084	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  00087	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0008a	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0008d	72 0d		 jb	 SHORT $LN69@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0008f	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00090	50		 push	 eax
  00091	ff 75 c0	 push	 DWORD PTR $T2[ebp]
  00094	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00099	83 c4 08	 add	 esp, 8
$LN69@AlgorithmN:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0009c	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  0009f	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000a6	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000ad	c6 45 c0 00	 mov	 BYTE PTR $T2[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  000b1	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000b4	72 0d		 jb	 SHORT $LN86@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000b6	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000b7	51		 push	 ecx
  000b8	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000bb	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c0	83 c4 08	 add	 esp, 8
$LN86@AlgorithmN:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  000c3	8b c6		 mov	 eax, esi
  000c5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000cf	59		 pop	 ecx
  000d0	5e		 pop	 esi
  000d1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d4	33 cd		 xor	 ecx, ebp
  000d6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ PROC ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc> >, COMDAT
; _this$ = ecx
  00000	8b d1		 mov	 edx, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00002	8b 8a c8 10 00
	00		 mov	 ecx, DWORD PTR [edx+4296]
  00008	8d 82 c0 00 00
	00		 lea	 eax, DWORD PTR [edx+192]
  0000e	57		 push	 edi
  0000f	8b b8 0c 10 00
	00		 mov	 edi, DWORD PTR [eax+4108]

; 194  : 		if (p == GetAlignedArray())

  00015	3b f8		 cmp	 edi, eax
  00017	75 0b		 jne	 SHORT $LN30@ObjectHold

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  00019	c6 80 01 10 00
	00 00		 mov	 BYTE PTR [eax+4097], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00020	33 c0		 xor	 eax, eax
  00022	f3 ab		 rep stosd
$LN30@ObjectHold:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00024	8b ba bc 00 00
	00		 mov	 edi, DWORD PTR [edx+188]
  0002a	8d 42 10	 lea	 eax, DWORD PTR [edx+16]
  0002d	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [eax+168]

; 194  : 		if (p == GetAlignedArray())

  00033	3b f8		 cmp	 edi, eax
  00035	75 0b		 jne	 SHORT $LN57@ObjectHold

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  00037	c6 80 a1 00 00
	00 00		 mov	 BYTE PTR [eax+161], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0003e	33 c0		 xor	 eax, eax
  00040	f3 ab		 rep stosd
$LN57@ObjectHold:
  00042	5f		 pop	 edi
  00043	c3		 ret	 0
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ENDP ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8b 8e c8 10 00
	00		 mov	 ecx, DWORD PTR [esi+4296]
  0000c	8d 86 c0 00 00
	00		 lea	 eax, DWORD PTR [esi+192]
  00012	57		 push	 edi
  00013	8b b8 0c 10 00
	00		 mov	 edi, DWORD PTR [eax+4108]

; 194  : 		if (p == GetAlignedArray())

  00019	3b f8		 cmp	 edi, eax
  0001b	75 0b		 jne	 SHORT $LN31@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0001d	c6 80 01 10 00
	00 00		 mov	 BYTE PTR [eax+4097], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00024	33 c0		 xor	 eax, eax
  00026	f3 ab		 rep stosd
$LN31@scalar:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00028	8b be bc 00 00
	00		 mov	 edi, DWORD PTR [esi+188]
  0002e	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00031	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [eax+168]

; 194  : 		if (p == GetAlignedArray())

  00037	3b f8		 cmp	 edi, eax
  00039	75 0b		 jne	 SHORT $LN58@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0003b	c6 80 a1 00 00
	00 00		 mov	 BYTE PTR [eax+161], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00042	33 c0		 xor	 eax, eax
  00044	f3 ab		 rep stosd
$LN58@scalar:
  00046	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0004a	74 0e		 je	 SHORT $LN70@scalar
  0004c	68 d0 10 00 00	 push	 4304			; 000010d0H
  00051	56		 push	 esi
  00052	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00057	83 c4 08	 add	 esp, 8
$LN70@scalar:
  0005a	5f		 pop	 edi
  0005b	8b c6		 mov	 eax, esi
  0005d	5e		 pop	 esi
  0005e	5d		 pop	 ebp
  0005f	c2 04 00	 ret	 4
??_G?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::IsForwardTransformation, COMDAT
; _this$ = ecx

; 162  : 	bool IsForwardTransformation() const {return DIR == ENCRYPTION;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>::IsForwardTransformation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@UBEPAVClonable@2@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@UBEPAVClonable@2@XZ PROC ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::Twofish::Enc>::Clone, COMDAT
; _this$ = ecx

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	68 d0 10 00 00	 push	 4304			; 000010d0H
  0000b	8b f9		 mov	 edi, ecx
  0000d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00012	8b f0		 mov	 esi, eax
  00014	83 c4 04	 add	 esp, 4
  00017	89 75 fc	 mov	 DWORD PTR $T1[ebp], esi
  0001a	85 f6		 test	 esi, esi
  0001c	74 48		 je	 SHORT $LN3@Clone
  0001e	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00021	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00024	66 8b 4f 08	 mov	 cx, WORD PTR [edi+8]
  00028	66 89 4e 0c	 mov	 WORD PTR [esi+12], cx
  0002c	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  0002f	51		 push	 ecx
  00030	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00033	e8 00 00 00 00	 call	 ??0?$FixedSizeSecBlock@I$0CI@V?$FixedSizeAllocatorWithCleanup@I$0CI@V?$NullAllocator@I@CryptoPP@@$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z
  00038	8d 87 bc 00 00
	00		 lea	 eax, DWORD PTR [edi+188]
  0003e	50		 push	 eax
  0003f	8d 8e c0 00 00
	00		 lea	 ecx, DWORD PTR [esi+192]
  00045	e8 00 00 00 00	 call	 ??0?$FixedSizeSecBlock@I$0EAA@V?$FixedSizeAllocatorWithCleanup@I$0EAA@V?$NullAllocator@I@CryptoPP@@$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z
  0004a	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0004d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  00053	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
  0005a	f7 de		 neg	 esi
  0005c	5f		 pop	 edi
  0005d	1b f6		 sbb	 esi, esi
  0005f	23 c6		 and	 eax, esi
  00061	5e		 pop	 esi
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
$LN3@Clone:
  00066	33 f6		 xor	 esi, esi
  00068	5f		 pop	 edi
  00069	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0006c	f7 de		 neg	 esi
  0006e	1b f6		 sbb	 esi, esi
  00070	23 c6		 and	 eax, esi
  00072	5e		 pop	 esi
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@VEnc@Twofish@2@@CryptoPP@@UBEPAVClonable@2@XZ ENDP ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::Twofish::Enc>::Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00049	8b be 6c 02 00
	00		 mov	 edi, DWORD PTR [esi+620]
  0004f	8d 46 50	 lea	 eax, DWORD PTR [esi+80]
  00052	8b 88 18 02 00
	00		 mov	 ecx, DWORD PTR [eax+536]

; 194  : 		if (p == GetAlignedArray())

  00058	3b f8		 cmp	 edi, eax
  0005a	75 0b		 jne	 SHORT $LN73@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0005c	c6 80 11 02 00
	00 00		 mov	 BYTE PTR [eax+529], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00063	33 c0		 xor	 eax, eax
  00065	f3 ab		 rep stosd
$LN73@scalar:
  00067	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0006b	74 0e		 je	 SHORT $LN85@scalar
  0006d	68 70 02 00 00	 push	 624			; 00000270H
  00072	56		 push	 esi
  00073	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00078	83 c4 08	 add	 esp, 8
$LN85@scalar:
  0007b	8b c6		 mov	 eax, esi
  0007d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00087	59		 pop	 ecx
  00088	5f		 pop	 edi
  00089	5e		 pop	 esi
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 04 00	 ret	 4
  00090	cc		 int	 3
  00091	cc		 int	 3
  00092	cc		 int	 3
  00093	cc		 int	 3
  00094	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
_TEXT	SEGMENT
$T2 = -56						; size = 24
$T3 = -32						; size = 12
_this$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_length$ = 12						; size = 4
_iv$ = 16						; size = 4
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >, COMDAT
; _this$ = ecx

; 261  : 	CipherModeFinalTemplate_CipherHolder(const byte *key, size_t length, const byte *iv)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx

; 262  : 	{

  0002d	8d 7b 40	 lea	 edi, DWORD PTR [ebx+64]
  00030	6a 01		 push	 1
  00032	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00035	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi
  00038	e8 00 00 00 00	 call	 ??0Algorithm@CryptoPP@@QAE@_N@Z ; CryptoPP::Algorithm::Algorithm
  0003d	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 185  : 			m_allocated = true;

  00040	c6 80 11 02 00
	00 01		 mov	 BYTE PTR [eax+529], 1

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00047	c7 80 18 02 00
	00 84 00 00 00	 mov	 DWORD PTR [eax+536], 132 ; 00000084H
  00051	89 80 1c 02 00
	00		 mov	 DWORD PTR [eax+540], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h

; 154  :  	BlockCipherFinal() {}

  00057	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0005d	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 262  : 	{

  00064	8b cb		 mov	 ecx, ebx
  00066	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006d	e8 00 00 00 00	 call	 ??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  00072	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00075	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0007b	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
  00082	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
  00089	c7 43 28 00 00
	00 00		 mov	 DWORD PTR [ebx+40], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
  00090	89 7b 08	 mov	 DWORD PTR [ebx+8], edi
  00093	8b 01		 mov	 eax, DWORD PTR [ecx]
  00095	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00099	ff 50 10	 call	 DWORD PTR [eax+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  0009c	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0
  000a3	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 36   : 			m_data = data;

  000aa	8b 4d 10	 mov	 ecx, DWORD PTR _iv$[ebp]
  000ad	89 4d cc	 mov	 DWORD PTR $T2[ebp+4], ecx

; 37   : 			m_size = size;

  000b0	89 45 d0	 mov	 DWORD PTR $T2[ebp+8], eax

; 38   : 		}
; 39   : 		m_deepCopy = deepCopy;

  000b3	c6 45 c8 00	 mov	 BYTE PTR $T2[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  000b7	6a 01		 push	 1
  000b9	8d 45 c8	 lea	 eax, DWORD PTR $T2[ebp]
  000bc	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000c0	50		 push	 eax
  000c1	8d 45 e0	 lea	 eax, DWORD PTR $T3[ebp]
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_02JDBEGKHA@IV@
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z ; CryptoPP::MakeParameters<CryptoPP::ConstByteArrayParameter>
  000cf	83 c4 10	 add	 esp, 16			; 00000010H
  000d2	50		 push	 eax
  000d3	ff 75 0c	 push	 DWORD PTR _length$[ebp]
  000d6	8b cb		 mov	 ecx, ebx
  000d8	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000dc	ff 75 08	 push	 DWORD PTR _key$[ebp]
  000df	e8 00 00 00 00	 call	 ?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z ; CryptoPP::SimpleKeyingInterface::SetKey
  000e4	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp+4]
  000e7	e8 00 00 00 00	 call	 ??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  000ec	8b 55 dc	 mov	 edx, DWORD PTR $T2[ebp+20]
  000ef	32 c0		 xor	 al, al
  000f1	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp+16]
  000f4	8b fa		 mov	 edi, edx
  000f6	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  000f8	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000f9	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 112  : 		UnalignedDeallocate(p);

  000fd	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00102	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 265  : 	}

  00105	8b c3		 mov	 eax, ebx
  00107	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0010a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00111	59		 pop	 ecx
  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 40	 add	 ecx, 64			; 00000040H
  00006	e9 00 00 00 00	 jmp	 ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$10:
  00013	8d 4d d4	 lea	 ecx, DWORD PTR $T2[ebp+12]
  00016	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2:
  0001b	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1ConstByteArrayParameter@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3:
  00023	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1AlgorithmParameters@CryptoPP@@UAE@XZ
  0002b	cc		 int	 3
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
__ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z:
  00030	90		 npad	 1
  00031	90		 npad	 1
  00032	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00036	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00039	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0003c	33 c8		 xor	 ecx, eax
  0003e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00043	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  00048	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
  00049	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00053	59		 pop	 ecx
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
  0005b	cc		 int	 3
  0005c	cc		 int	 3
  0005d	cc		 int	 3
  0005e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$GSCopy$ = -68				; size = 4
$T2 = -64						; size = 24
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_07CCCAKGBN@Serpent@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  0002e	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00031	89 45 d8	 mov	 DWORD PTR $T3[ebp], eax
  00034	66 a1 04 00 00
	00		 mov	 ax, WORD PTR ??_C@_07CCCAKGBN@Serpent@+4
  0003a	66 89 45 dc	 mov	 WORD PTR $T3[ebp+4], ax
  0003e	a0 06 00 00 00	 mov	 al, BYTE PTR ??_C@_07CCCAKGBN@Serpent@+6
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00043	89 75 bc	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00046	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  0004d	c7 45 e8 07 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 7

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00054	88 45 de	 mov	 BYTE PTR $T3[ebp+6], al

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00057	c6 45 df 00	 mov	 BYTE PTR $T3[ebp+7], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_01KMDKNFGN@?1@
  00060	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00063	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006a	50		 push	 eax
  0006b	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_03LECCGOIK@CTR@
  00079	50		 push	 eax
  0007a	56		 push	 esi
  0007b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0007f	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00084	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  00087	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0008a	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0008d	72 0d		 jb	 SHORT $LN69@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0008f	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00090	50		 push	 eax
  00091	ff 75 c0	 push	 DWORD PTR $T2[ebp]
  00094	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00099	83 c4 08	 add	 esp, 8
$LN69@AlgorithmN:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0009c	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  0009f	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000a6	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000ad	c6 45 c0 00	 mov	 BYTE PTR $T2[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  000b1	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000b4	72 0d		 jb	 SHORT $LN86@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000b6	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000b7	51		 push	 ecx
  000b8	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000bb	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000c0	83 c4 08	 add	 esp, 8
$LN86@AlgorithmN:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  000c3	8b c6		 mov	 eax, esi
  000c5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000cf	59		 pop	 ecx
  000d0	5e		 pop	 esi
  000d1	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d4	33 cd		 xor	 ecx, ebp
  000d6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ PROC ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc> >, COMDAT
; _this$ = ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00000	8b 91 28 02 00
	00		 mov	 edx, DWORD PTR [ecx+552]
  00006	83 c1 10	 add	 ecx, 16			; 00000010H
  00009	57		 push	 edi
  0000a	8b b9 1c 02 00
	00		 mov	 edi, DWORD PTR [ecx+540]

; 194  : 		if (p == GetAlignedArray())

  00010	3b f9		 cmp	 edi, ecx
  00012	75 0d		 jne	 SHORT $LN30@ObjectHold

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  00014	c6 81 11 02 00
	00 00		 mov	 BYTE PTR [ecx+529], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0001b	33 c0		 xor	 eax, eax
  0001d	8b ca		 mov	 ecx, edx
  0001f	f3 ab		 rep stosd
$LN30@ObjectHold:
  00021	5f		 pop	 edi
  00022	c3		 ret	 0
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ENDP ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8b 8e 28 02 00
	00		 mov	 ecx, DWORD PTR [esi+552]
  0000c	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0000f	57		 push	 edi
  00010	8b b8 1c 02 00
	00		 mov	 edi, DWORD PTR [eax+540]

; 194  : 		if (p == GetAlignedArray())

  00016	3b f8		 cmp	 edi, eax
  00018	75 0b		 jne	 SHORT $LN31@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0001a	c6 80 11 02 00
	00 00		 mov	 BYTE PTR [eax+529], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00021	33 c0		 xor	 eax, eax
  00023	f3 ab		 rep stosd
$LN31@scalar:
  00025	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00029	74 0e		 je	 SHORT $LN43@scalar
  0002b	68 30 02 00 00	 push	 560			; 00000230H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00036	83 c4 08	 add	 esp, 8
$LN43@scalar:
  00039	5f		 pop	 edi
  0003a	8b c6		 mov	 eax, esi
  0003c	5e		 pop	 esi
  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
??_G?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::IsForwardTransformation, COMDAT
; _this$ = ecx

; 162  : 	bool IsForwardTransformation() const {return DIR == ENCRYPTION;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>::IsForwardTransformation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@UBEPAVClonable@2@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@UBEPAVClonable@2@XZ PROC ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::Serpent::Enc>::Clone, COMDAT
; _this$ = ecx

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	68 30 02 00 00	 push	 560			; 00000230H
  0000b	8b f9		 mov	 edi, ecx
  0000d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00012	8b f0		 mov	 esi, eax
  00014	83 c4 04	 add	 esp, 4
  00017	89 75 fc	 mov	 DWORD PTR $T1[ebp], esi
  0001a	85 f6		 test	 esi, esi
  0001c	0f 84 b4 00 00
	00		 je	 $LN3@Clone
  00022	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00025	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00028	66 8b 47 08	 mov	 ax, WORD PTR [edi+8]
  0002c	66 89 46 0c	 mov	 WORD PTR [esi+12], ax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 166  : 	FixedSizeAllocatorWithCleanup() : m_allocated(false) {}

  00030	c6 86 21 02 00
	00 00		 mov	 BYTE PTR [esi+545], 0

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00037	8b 97 24 02 00
	00		 mov	 edx, DWORD PTR [edi+548]
  0003d	89 96 28 02 00
	00		 mov	 DWORD PTR [esi+552], edx

; 183  : 		if (n <= S && !m_allocated)

  00043	81 fa 84 00 00
	00		 cmp	 edx, 132		; 00000084H
  00049	77 0c		 ja	 SHORT $LN41@Clone

; 184  : 		{
; 185  : 			m_allocated = true;

  0004b	c6 86 21 02 00
	00 01		 mov	 BYTE PTR [esi+545], 1

; 186  : 			return GetAlignedArray();

  00052	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00055	eb 02		 jmp	 SHORT $LN42@Clone
$LN41@Clone:

; 187  : 		}
; 188  : 		else
; 189  : 			return m_fallbackAllocator.allocate(n, hint);

  00057	33 c0		 xor	 eax, eax
$LN42@Clone:

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00059	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
  00060	89 86 2c 02 00
	00		 mov	 DWORD PTR [esi+556], eax
  00066	8b 97 28 02 00
	00		 mov	 edx, DWORD PTR [edi+552]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 42   :         if (_SourceSize == 0)

  0006c	85 c9		 test	 ecx, ecx
  0006e	74 4a		 je	 SHORT $LN49@Clone

; 43   :         {
; 44   :             return 0;
; 45   :         }
; 46   : 
; 47   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  00070	85 c0		 test	 eax, eax
  00072	74 36		 je	 SHORT $LN52@Clone

; 48   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  00074	51		 push	 ecx
  00075	85 d2		 test	 edx, edx
  00077	74 26		 je	 SHORT $LN48@Clone

; 51   : 
; 52   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);
; 53   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);
; 54   : 
; 55   :             // Unreachable, but required to suppress /analyze warnings:
; 56   :             return EINVAL;
; 57   :         }
; 58   : #pragma warning(suppress:4996) // Deprecation
; 59   :         memcpy(_Destination, _Source, _SourceSize);

  00079	52		 push	 edx
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 _memcpy
  00080	83 c4 0c	 add	 esp, 12			; 0000000cH
  00083	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  00089	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0008c	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
  00093	f7 de		 neg	 esi
  00095	1b f6		 sbb	 esi, esi
  00097	5f		 pop	 edi
  00098	23 c6		 and	 eax, esi
  0009a	5e		 pop	 esi
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c3		 ret	 0
$LN48@Clone:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 50   :             memset(_Destination, 0, _DestinationSize);

  0009f	6a 00		 push	 0
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 _memset
  000a7	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN52@Clone:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  000aa	e8 00 00 00 00	 call	 __errno
  000af	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  000b5	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN49@Clone:
  000ba	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000bd	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  000c3	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
  000ca	f7 de		 neg	 esi
  000cc	5f		 pop	 edi
  000cd	1b f6		 sbb	 esi, esi
  000cf	23 c6		 and	 eax, esi
  000d1	5e		 pop	 esi
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c3		 ret	 0
$LN3@Clone:
  000d6	33 f6		 xor	 esi, esi
  000d8	5f		 pop	 edi
  000d9	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000dc	f7 de		 neg	 esi
  000de	1b f6		 sbb	 esi, esi
  000e0	23 c6		 and	 eax, esi
  000e2	5e		 pop	 esi
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c3		 ret	 0
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@VEnc@Serpent@2@@CryptoPP@@UBEPAVClonable@2@XZ ENDP ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::Serpent::Enc>::Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00049	8b be e4 01 00
	00		 mov	 edi, DWORD PTR [esi+484]
  0004f	8d 46 58	 lea	 eax, DWORD PTR [esi+88]
  00052	8b 88 88 01 00
	00		 mov	 ecx, DWORD PTR [eax+392]

; 194  : 		if (p == GetAlignedArray())

  00058	3b f8		 cmp	 edi, eax
  0005a	75 0b		 jne	 SHORT $LN70@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0005c	c6 80 81 01 00
	00 00		 mov	 BYTE PTR [eax+385], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00063	33 c0		 xor	 eax, eax
  00065	f3 ab		 rep stosd
$LN70@scalar:
  00067	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0006b	74 0e		 je	 SHORT $LN82@scalar
  0006d	68 e8 01 00 00	 push	 488			; 000001e8H
  00072	56		 push	 esi
  00073	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00078	83 c4 08	 add	 esp, 8
$LN82@scalar:
  0007b	8b c6		 mov	 eax, esi
  0007d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00087	59		 pop	 ecx
  00088	5f		 pop	 edi
  00089	5e		 pop	 esi
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 04 00	 ret	 4
  00090	cc		 int	 3
  00091	cc		 int	 3
  00092	cc		 int	 3
  00093	cc		 int	 3
  00094	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
_TEXT	SEGMENT
$T2 = -56						; size = 24
$T3 = -32						; size = 12
_this$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_length$ = 12						; size = 4
_iv$ = 16						; size = 4
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >, COMDAT
; _this$ = ecx

; 261  : 	CipherModeFinalTemplate_CipherHolder(const byte *key, size_t length, const byte *iv)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx

; 262  : 	{

  0002d	8d 7b 40	 lea	 edi, DWORD PTR [ebx+64]
  00030	6a 01		 push	 1
  00032	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00035	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi
  00038	e8 00 00 00 00	 call	 ??0Algorithm@CryptoPP@@QAE@_N@Z ; CryptoPP::Algorithm::Algorithm
  0003d	8d 47 18	 lea	 eax, DWORD PTR [edi+24]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 185  : 			m_allocated = true;

  00040	c6 80 81 01 00
	00 01		 mov	 BYTE PTR [eax+385], 1

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00047	c7 80 88 01 00
	00 60 00 00 00	 mov	 DWORD PTR [eax+392], 96	; 00000060H
  00051	89 80 8c 01 00
	00		 mov	 DWORD PTR [eax+396], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h

; 154  :  	BlockCipherFinal() {}

  00057	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0005d	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 262  : 	{

  00064	8b cb		 mov	 ecx, ebx
  00066	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006d	e8 00 00 00 00	 call	 ??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  00072	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00075	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0007b	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
  00082	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
  00089	c7 43 28 00 00
	00 00		 mov	 DWORD PTR [ebx+40], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
  00090	89 7b 08	 mov	 DWORD PTR [ebx+8], edi
  00093	8b 01		 mov	 eax, DWORD PTR [ecx]
  00095	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00099	ff 50 10	 call	 DWORD PTR [eax+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  0009c	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0
  000a3	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 36   : 			m_data = data;

  000aa	8b 4d 10	 mov	 ecx, DWORD PTR _iv$[ebp]
  000ad	89 4d cc	 mov	 DWORD PTR $T2[ebp+4], ecx

; 37   : 			m_size = size;

  000b0	89 45 d0	 mov	 DWORD PTR $T2[ebp+8], eax

; 38   : 		}
; 39   : 		m_deepCopy = deepCopy;

  000b3	c6 45 c8 00	 mov	 BYTE PTR $T2[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  000b7	6a 01		 push	 1
  000b9	8d 45 c8	 lea	 eax, DWORD PTR $T2[ebp]
  000bc	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000c0	50		 push	 eax
  000c1	8d 45 e0	 lea	 eax, DWORD PTR $T3[ebp]
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_02JDBEGKHA@IV@
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z ; CryptoPP::MakeParameters<CryptoPP::ConstByteArrayParameter>
  000cf	83 c4 10	 add	 esp, 16			; 00000010H
  000d2	50		 push	 eax
  000d3	ff 75 0c	 push	 DWORD PTR _length$[ebp]
  000d6	8b cb		 mov	 ecx, ebx
  000d8	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000dc	ff 75 08	 push	 DWORD PTR _key$[ebp]
  000df	e8 00 00 00 00	 call	 ?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z ; CryptoPP::SimpleKeyingInterface::SetKey
  000e4	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp+4]
  000e7	e8 00 00 00 00	 call	 ??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  000ec	8b 55 dc	 mov	 edx, DWORD PTR $T2[ebp+20]
  000ef	32 c0		 xor	 al, al
  000f1	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp+16]
  000f4	8b fa		 mov	 edi, edx
  000f6	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  000f8	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000f9	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 112  : 		UnalignedDeallocate(p);

  000fd	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00102	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 265  : 	}

  00105	8b c3		 mov	 eax, ebx
  00107	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0010a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00111	59		 pop	 ecx
  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 40	 add	 ecx, 64			; 00000040H
  00006	e9 00 00 00 00	 jmp	 ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$9:
  00013	8d 4d d4	 lea	 ecx, DWORD PTR $T2[ebp+12]
  00016	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2:
  0001b	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1ConstByteArrayParameter@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3:
  00023	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1AlgorithmParameters@CryptoPP@@UAE@XZ
  0002b	cc		 int	 3
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
__ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z:
  00030	90		 npad	 1
  00031	90		 npad	 1
  00032	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00036	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00039	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0003c	33 c8		 xor	 ecx, eax
  0003e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00043	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  00048	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
  00049	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00053	59		 pop	 ecx
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
  0005b	cc		 int	 3
  0005c	cc		 int	 3
  0005d	cc		 int	 3
  0005e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$GSCopy$ = -68				; size = 4
$T2 = -64						; size = 24
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_08FGDDMCLK@CAST?9256@
  00031	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_08FGDDMCLK@CAST?9256@+4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00037	89 75 bc	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0003a	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00041	c7 45 e8 08 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 8

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00048	89 45 d8	 mov	 DWORD PTR $T3[ebp], eax
  0004b	89 4d dc	 mov	 DWORD PTR $T3[ebp+4], ecx

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0004e	c6 45 e0 00	 mov	 BYTE PTR $T3[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  00052	68 00 00 00 00	 push	 OFFSET ??_C@_01KMDKNFGN@?1@
  00057	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00061	50		 push	 eax
  00062	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_03LECCGOIK@CTR@
  00070	50		 push	 eax
  00071	56		 push	 esi
  00072	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00076	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0007b	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  0007e	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00081	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00084	72 0d		 jb	 SHORT $LN69@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00086	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00087	50		 push	 eax
  00088	ff 75 c0	 push	 DWORD PTR $T2[ebp]
  0008b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00090	83 c4 08	 add	 esp, 8
$LN69@AlgorithmN:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00093	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00096	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009d	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000a4	c6 45 c0 00	 mov	 BYTE PTR $T2[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  000a8	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000ab	72 0d		 jb	 SHORT $LN86@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000ad	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ae	51		 push	 ecx
  000af	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000b2	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000b7	83 c4 08	 add	 esp, 8
$LN86@AlgorithmN:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  000ba	8b c6		 mov	 eax, esi
  000bc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c6	59		 pop	 ecx
  000c7	5e		 pop	 esi
  000c8	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cb	33 cd		 xor	 ecx, ebp
  000cd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ PROC ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base> >, COMDAT
; _this$ = ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00000	8b 91 a0 01 00
	00		 mov	 edx, DWORD PTR [ecx+416]
  00006	83 c1 18	 add	 ecx, 24			; 00000018H
  00009	57		 push	 edi
  0000a	8b b9 8c 01 00
	00		 mov	 edi, DWORD PTR [ecx+396]

; 194  : 		if (p == GetAlignedArray())

  00010	3b f9		 cmp	 edi, ecx
  00012	75 0d		 jne	 SHORT $LN27@ObjectHold

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  00014	c6 81 81 01 00
	00 00		 mov	 BYTE PTR [ecx+385], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0001b	33 c0		 xor	 eax, eax
  0001d	8b ca		 mov	 ecx, edx
  0001f	f3 ab		 rep stosd
$LN27@ObjectHold:
  00021	5f		 pop	 edi
  00022	c3		 ret	 0
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ENDP ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8b 8e a0 01 00
	00		 mov	 ecx, DWORD PTR [esi+416]
  0000c	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
  0000f	57		 push	 edi
  00010	8b b8 8c 01 00
	00		 mov	 edi, DWORD PTR [eax+396]

; 194  : 		if (p == GetAlignedArray())

  00016	3b f8		 cmp	 edi, eax
  00018	75 0b		 jne	 SHORT $LN28@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0001a	c6 80 81 01 00
	00 00		 mov	 BYTE PTR [eax+385], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00021	33 c0		 xor	 eax, eax
  00023	f3 ab		 rep stosd
$LN28@scalar:
  00025	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00029	74 0e		 je	 SHORT $LN40@scalar
  0002b	68 a8 01 00 00	 push	 424			; 000001a8H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00036	83 c4 08	 add	 esp, 8
$LN40@scalar:
  00039	5f		 pop	 edi
  0003a	8b c6		 mov	 eax, esi
  0003c	5e		 pop	 esi
  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
??_G?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::IsForwardTransformation, COMDAT
; _this$ = ecx

; 162  : 	bool IsForwardTransformation() const {return DIR == ENCRYPTION;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>::IsForwardTransformation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@UBEPAVClonable@2@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@UBEPAVClonable@2@XZ PROC ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::CAST256::Base>::Clone, COMDAT
; _this$ = ecx

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	68 a8 01 00 00	 push	 424			; 000001a8H
  0000b	8b f9		 mov	 edi, ecx
  0000d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00012	8b f0		 mov	 esi, eax
  00014	83 c4 04	 add	 esp, 4
  00017	89 75 fc	 mov	 DWORD PTR $T1[ebp], esi
  0001a	85 f6		 test	 esi, esi
  0001c	0f 84 af 00 00
	00		 je	 $LN3@Clone
  00022	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00025	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00028	8a 47 08	 mov	 al, BYTE PTR [edi+8]
  0002b	88 46 0c	 mov	 BYTE PTR [esi+12], al
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 166  : 	FixedSizeAllocatorWithCleanup() : m_allocated(false) {}

  0002e	c6 86 99 01 00
	00 00		 mov	 BYTE PTR [esi+409], 0

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00035	8b 97 9c 01 00
	00		 mov	 edx, DWORD PTR [edi+412]
  0003b	89 96 a0 01 00
	00		 mov	 DWORD PTR [esi+416], edx

; 183  : 		if (n <= S && !m_allocated)

  00041	83 fa 60	 cmp	 edx, 96			; 00000060H
  00044	77 0c		 ja	 SHORT $LN39@Clone

; 184  : 		{
; 185  : 			m_allocated = true;

  00046	c6 86 99 01 00
	00 01		 mov	 BYTE PTR [esi+409], 1

; 186  : 			return GetAlignedArray();

  0004d	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
  00050	eb 02		 jmp	 SHORT $LN40@Clone
$LN39@Clone:

; 187  : 		}
; 188  : 		else
; 189  : 			return m_fallbackAllocator.allocate(n, hint);

  00052	33 c0		 xor	 eax, eax
$LN40@Clone:

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00054	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
  0005b	89 86 a4 01 00
	00		 mov	 DWORD PTR [esi+420], eax
  00061	8b 97 a0 01 00
	00		 mov	 edx, DWORD PTR [edi+416]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 42   :         if (_SourceSize == 0)

  00067	85 c9		 test	 ecx, ecx
  00069	74 4a		 je	 SHORT $LN47@Clone

; 43   :         {
; 44   :             return 0;
; 45   :         }
; 46   : 
; 47   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  0006b	85 c0		 test	 eax, eax
  0006d	74 36		 je	 SHORT $LN50@Clone

; 48   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  0006f	51		 push	 ecx
  00070	85 d2		 test	 edx, edx
  00072	74 26		 je	 SHORT $LN46@Clone

; 51   : 
; 52   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);
; 53   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);
; 54   : 
; 55   :             // Unreachable, but required to suppress /analyze warnings:
; 56   :             return EINVAL;
; 57   :         }
; 58   : #pragma warning(suppress:4996) // Deprecation
; 59   :         memcpy(_Destination, _Source, _SourceSize);

  00074	52		 push	 edx
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 _memcpy
  0007b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  00084	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00087	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
  0008e	f7 de		 neg	 esi
  00090	1b f6		 sbb	 esi, esi
  00092	5f		 pop	 edi
  00093	23 c6		 and	 eax, esi
  00095	5e		 pop	 esi
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
$LN46@Clone:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 50   :             memset(_Destination, 0, _DestinationSize);

  0009a	6a 00		 push	 0
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 _memset
  000a2	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN50@Clone:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  000a5	e8 00 00 00 00	 call	 __errno
  000aa	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  000b0	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN47@Clone:
  000b5	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000b8	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  000be	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
  000c5	f7 de		 neg	 esi
  000c7	5f		 pop	 edi
  000c8	1b f6		 sbb	 esi, esi
  000ca	23 c6		 and	 eax, esi
  000cc	5e		 pop	 esi
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c3		 ret	 0
$LN3@Clone:
  000d1	33 f6		 xor	 esi, esi
  000d3	5f		 pop	 edi
  000d4	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000d7	f7 de		 neg	 esi
  000d9	1b f6		 sbb	 esi, esi
  000db	23 c6		 and	 eax, esi
  000dd	5e		 pop	 esi
  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c3		 ret	 0
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@VBase@CAST256@2@@CryptoPP@@UBEPAVClonable@2@XZ ENDP ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::CAST256::Base>::Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00049	8b be 2c 01 00
	00		 mov	 edi, DWORD PTR [esi+300]
  0004f	8d 46 50	 lea	 eax, DWORD PTR [esi+80]
  00052	8b 88 d8 00 00
	00		 mov	 ecx, DWORD PTR [eax+216]

; 194  : 		if (p == GetAlignedArray())

  00058	3b f8		 cmp	 edi, eax
  0005a	75 0b		 jne	 SHORT $LN70@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0005c	c6 80 d1 00 00
	00 00		 mov	 BYTE PTR [eax+209], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00063	33 c0		 xor	 eax, eax
  00065	f3 ab		 rep stosd
$LN70@scalar:
  00067	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0006b	74 0e		 je	 SHORT $LN82@scalar
  0006d	68 30 01 00 00	 push	 304			; 00000130H
  00072	56		 push	 esi
  00073	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00078	83 c4 08	 add	 esp, 8
$LN82@scalar:
  0007b	8b c6		 mov	 eax, esi
  0007d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00087	59		 pop	 ecx
  00088	5f		 pop	 edi
  00089	5e		 pop	 esi
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 04 00	 ret	 4
  00090	cc		 int	 3
  00091	cc		 int	 3
  00092	cc		 int	 3
  00093	cc		 int	 3
  00094	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
_TEXT	SEGMENT
$T2 = -56						; size = 24
$T3 = -32						; size = 12
_this$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_length$ = 12						; size = 4
_iv$ = 16						; size = 4
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >, COMDAT
; _this$ = ecx

; 261  : 	CipherModeFinalTemplate_CipherHolder(const byte *key, size_t length, const byte *iv)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx

; 262  : 	{

  0002d	8d 7b 40	 lea	 edi, DWORD PTR [ebx+64]
  00030	6a 01		 push	 1
  00032	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00035	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi
  00038	e8 00 00 00 00	 call	 ??0Algorithm@CryptoPP@@QAE@_N@Z ; CryptoPP::Algorithm::Algorithm
  0003d	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 185  : 			m_allocated = true;

  00040	c6 80 d1 00 00
	00 01		 mov	 BYTE PTR [eax+209], 1

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00047	c7 80 d8 00 00
	00 34 00 00 00	 mov	 DWORD PTR [eax+216], 52	; 00000034H
  00051	89 80 dc 00 00
	00		 mov	 DWORD PTR [eax+220], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h

; 154  :  	BlockCipherFinal() {}

  00057	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0005d	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 262  : 	{

  00064	8b cb		 mov	 ecx, ebx
  00066	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006d	e8 00 00 00 00	 call	 ??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  00072	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00075	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0007b	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
  00082	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
  00089	c7 43 28 00 00
	00 00		 mov	 DWORD PTR [ebx+40], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
  00090	89 7b 08	 mov	 DWORD PTR [ebx+8], edi
  00093	8b 01		 mov	 eax, DWORD PTR [ecx]
  00095	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00099	ff 50 10	 call	 DWORD PTR [eax+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  0009c	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0
  000a3	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 36   : 			m_data = data;

  000aa	8b 4d 10	 mov	 ecx, DWORD PTR _iv$[ebp]
  000ad	89 4d cc	 mov	 DWORD PTR $T2[ebp+4], ecx

; 37   : 			m_size = size;

  000b0	89 45 d0	 mov	 DWORD PTR $T2[ebp+8], eax

; 38   : 		}
; 39   : 		m_deepCopy = deepCopy;

  000b3	c6 45 c8 00	 mov	 BYTE PTR $T2[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  000b7	6a 01		 push	 1
  000b9	8d 45 c8	 lea	 eax, DWORD PTR $T2[ebp]
  000bc	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000c0	50		 push	 eax
  000c1	8d 45 e0	 lea	 eax, DWORD PTR $T3[ebp]
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_02JDBEGKHA@IV@
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z ; CryptoPP::MakeParameters<CryptoPP::ConstByteArrayParameter>
  000cf	83 c4 10	 add	 esp, 16			; 00000010H
  000d2	50		 push	 eax
  000d3	ff 75 0c	 push	 DWORD PTR _length$[ebp]
  000d6	8b cb		 mov	 ecx, ebx
  000d8	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000dc	ff 75 08	 push	 DWORD PTR _key$[ebp]
  000df	e8 00 00 00 00	 call	 ?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z ; CryptoPP::SimpleKeyingInterface::SetKey
  000e4	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp+4]
  000e7	e8 00 00 00 00	 call	 ??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  000ec	8b 55 dc	 mov	 edx, DWORD PTR $T2[ebp+20]
  000ef	32 c0		 xor	 al, al
  000f1	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp+16]
  000f4	8b fa		 mov	 edi, edx
  000f6	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  000f8	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000f9	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 112  : 		UnalignedDeallocate(p);

  000fd	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00102	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 265  : 	}

  00105	8b c3		 mov	 eax, ebx
  00107	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0010a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00111	59		 pop	 ecx
  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 40	 add	 ecx, 64			; 00000040H
  00006	e9 00 00 00 00	 jmp	 ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$9:
  00013	8d 4d d4	 lea	 ecx, DWORD PTR $T2[ebp+12]
  00016	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2:
  0001b	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1ConstByteArrayParameter@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3:
  00023	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1AlgorithmParameters@CryptoPP@@UAE@XZ
  0002b	cc		 int	 3
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
__ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z:
  00030	90		 npad	 1
  00031	90		 npad	 1
  00032	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00036	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00039	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0003c	33 c8		 xor	 ecx, eax
  0003e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00043	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  00048	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
  00049	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00053	59		 pop	 ecx
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
  0005b	cc		 int	 3
  0005c	cc		 int	 3
  0005d	cc		 int	 3
  0005e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$GSCopy$ = -68				; size = 4
$T2 = -64						; size = 24
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  0002c	89 75 bc	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002f	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00036	c7 45 e8 04 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 4

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0003d	c7 45 d8 49 44
	45 41		 mov	 DWORD PTR $T3[ebp], 1095058505 ; 41454449H

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00044	c6 45 dc 00	 mov	 BYTE PTR $T3[ebp+4], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  00048	68 00 00 00 00	 push	 OFFSET ??_C@_01KMDKNFGN@?1@
  0004d	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00050	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00057	50		 push	 eax
  00058	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_03LECCGOIK@CTR@
  00066	50		 push	 eax
  00067	56		 push	 esi
  00068	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0006c	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00071	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  00074	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00077	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0007a	72 0d		 jb	 SHORT $LN69@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0007c	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007d	50		 push	 eax
  0007e	ff 75 c0	 push	 DWORD PTR $T2[ebp]
  00081	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00086	83 c4 08	 add	 esp, 8
$LN69@AlgorithmN:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00089	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  0008c	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00093	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0009a	c6 45 c0 00	 mov	 BYTE PTR $T2[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  0009e	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a1	72 0d		 jb	 SHORT $LN86@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a3	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a4	51		 push	 ecx
  000a5	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a8	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ad	83 c4 08	 add	 esp, 8
$LN86@AlgorithmN:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  000b0	8b c6		 mov	 eax, esi
  000b2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bc	59		 pop	 ecx
  000bd	5e		 pop	 esi
  000be	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c1	33 cd		 xor	 ecx, ebp
  000c3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ PROC ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base> >, COMDAT
; _this$ = ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00000	8b 91 e8 00 00
	00		 mov	 edx, DWORD PTR [ecx+232]
  00006	83 c1 10	 add	 ecx, 16			; 00000010H
  00009	57		 push	 edi
  0000a	8b b9 dc 00 00
	00		 mov	 edi, DWORD PTR [ecx+220]

; 194  : 		if (p == GetAlignedArray())

  00010	3b f9		 cmp	 edi, ecx
  00012	75 0d		 jne	 SHORT $LN27@ObjectHold

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  00014	c6 81 d1 00 00
	00 00		 mov	 BYTE PTR [ecx+209], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0001b	33 c0		 xor	 eax, eax
  0001d	8b ca		 mov	 ecx, edx
  0001f	f3 ab		 rep stosd
$LN27@ObjectHold:
  00021	5f		 pop	 edi
  00022	c3		 ret	 0
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ENDP ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8b 8e e8 00 00
	00		 mov	 ecx, DWORD PTR [esi+232]
  0000c	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0000f	57		 push	 edi
  00010	8b b8 dc 00 00
	00		 mov	 edi, DWORD PTR [eax+220]

; 194  : 		if (p == GetAlignedArray())

  00016	3b f8		 cmp	 edi, eax
  00018	75 0b		 jne	 SHORT $LN28@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0001a	c6 80 d1 00 00
	00 00		 mov	 BYTE PTR [eax+209], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00021	33 c0		 xor	 eax, eax
  00023	f3 ab		 rep stosd
$LN28@scalar:
  00025	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00029	74 0e		 je	 SHORT $LN40@scalar
  0002b	68 f0 00 00 00	 push	 240			; 000000f0H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00036	83 c4 08	 add	 esp, 8
$LN40@scalar:
  00039	5f		 pop	 edi
  0003a	8b c6		 mov	 eax, esi
  0003c	5e		 pop	 esi
  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
??_G?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::IsForwardTransformation, COMDAT
; _this$ = ecx

; 162  : 	bool IsForwardTransformation() const {return DIR == ENCRYPTION;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>::IsForwardTransformation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@UBEPAVClonable@2@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@UBEPAVClonable@2@XZ PROC ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::IDEA::Base>::Clone, COMDAT
; _this$ = ecx

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	68 f0 00 00 00	 push	 240			; 000000f0H
  0000b	8b f9		 mov	 edi, ecx
  0000d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00012	8b f0		 mov	 esi, eax
  00014	83 c4 04	 add	 esp, 4
  00017	89 75 fc	 mov	 DWORD PTR $T1[ebp], esi
  0001a	85 f6		 test	 esi, esi
  0001c	0f 84 b1 00 00
	00		 je	 $LN3@Clone
  00022	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00025	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00028	66 8b 47 08	 mov	 ax, WORD PTR [edi+8]
  0002c	66 89 46 0c	 mov	 WORD PTR [esi+12], ax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 166  : 	FixedSizeAllocatorWithCleanup() : m_allocated(false) {}

  00030	c6 86 e1 00 00
	00 00		 mov	 BYTE PTR [esi+225], 0

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00037	8b 97 e4 00 00
	00		 mov	 edx, DWORD PTR [edi+228]
  0003d	89 96 e8 00 00
	00		 mov	 DWORD PTR [esi+232], edx

; 183  : 		if (n <= S && !m_allocated)

  00043	83 fa 34	 cmp	 edx, 52			; 00000034H
  00046	77 0c		 ja	 SHORT $LN39@Clone

; 184  : 		{
; 185  : 			m_allocated = true;

  00048	c6 86 e1 00 00
	00 01		 mov	 BYTE PTR [esi+225], 1

; 186  : 			return GetAlignedArray();

  0004f	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00052	eb 02		 jmp	 SHORT $LN40@Clone
$LN39@Clone:

; 187  : 		}
; 188  : 		else
; 189  : 			return m_fallbackAllocator.allocate(n, hint);

  00054	33 c0		 xor	 eax, eax
$LN40@Clone:

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00056	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
  0005d	89 86 ec 00 00
	00		 mov	 DWORD PTR [esi+236], eax
  00063	8b 97 e8 00 00
	00		 mov	 edx, DWORD PTR [edi+232]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 42   :         if (_SourceSize == 0)

  00069	85 c9		 test	 ecx, ecx
  0006b	74 4a		 je	 SHORT $LN47@Clone

; 43   :         {
; 44   :             return 0;
; 45   :         }
; 46   : 
; 47   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  0006d	85 c0		 test	 eax, eax
  0006f	74 36		 je	 SHORT $LN50@Clone

; 48   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  00071	51		 push	 ecx
  00072	85 d2		 test	 edx, edx
  00074	74 26		 je	 SHORT $LN46@Clone

; 51   : 
; 52   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);
; 53   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);
; 54   : 
; 55   :             // Unreachable, but required to suppress /analyze warnings:
; 56   :             return EINVAL;
; 57   :         }
; 58   : #pragma warning(suppress:4996) // Deprecation
; 59   :         memcpy(_Destination, _Source, _SourceSize);

  00076	52		 push	 edx
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 _memcpy
  0007d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00080	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  00086	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00089	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
  00090	f7 de		 neg	 esi
  00092	1b f6		 sbb	 esi, esi
  00094	5f		 pop	 edi
  00095	23 c6		 and	 eax, esi
  00097	5e		 pop	 esi
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c3		 ret	 0
$LN46@Clone:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 50   :             memset(_Destination, 0, _DestinationSize);

  0009c	6a 00		 push	 0
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 _memset
  000a4	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN50@Clone:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  000a7	e8 00 00 00 00	 call	 __errno
  000ac	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  000b2	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN47@Clone:
  000b7	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000ba	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  000c0	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
  000c7	f7 de		 neg	 esi
  000c9	5f		 pop	 edi
  000ca	1b f6		 sbb	 esi, esi
  000cc	23 c6		 and	 eax, esi
  000ce	5e		 pop	 esi
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
$LN3@Clone:
  000d3	33 f6		 xor	 esi, esi
  000d5	5f		 pop	 edi
  000d6	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000d9	f7 de		 neg	 esi
  000db	1b f6		 sbb	 esi, esi
  000dd	23 c6		 and	 eax, esi
  000df	5e		 pop	 esi
  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c3		 ret	 0
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@VBase@IDEA@2@@CryptoPP@@UBEPAVClonable@2@XZ ENDP ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::IDEA::Base>::Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00049	8b be 6c 01 00
	00		 mov	 edi, DWORD PTR [esi+364]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  0004f	8d 86 e0 00 00
	00		 lea	 eax, DWORD PTR [esi+224]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00055	8b 88 88 00 00
	00		 mov	 ecx, DWORD PTR [eax+136]

; 194  : 		if (p == GetAlignedArray())

  0005b	3b f8		 cmp	 edi, eax
  0005d	75 0b		 jne	 SHORT $LN73@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0005f	c6 80 81 00 00
	00 00		 mov	 BYTE PTR [eax+129], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00066	33 c0		 xor	 eax, eax
  00068	f3 ab		 rep stosd
$LN73@scalar:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0006a	8b be dc 00 00
	00		 mov	 edi, DWORD PTR [esi+220]
  00070	8d 46 50	 lea	 eax, DWORD PTR [esi+80]
  00073	8b 88 88 00 00
	00		 mov	 ecx, DWORD PTR [eax+136]

; 194  : 		if (p == GetAlignedArray())

  00079	3b f8		 cmp	 edi, eax
  0007b	75 0b		 jne	 SHORT $LN103@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0007d	c6 80 81 00 00
	00 00		 mov	 BYTE PTR [eax+129], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00084	33 c0		 xor	 eax, eax
  00086	f3 ab		 rep stosd
$LN103@scalar:
  00088	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0008c	74 0e		 je	 SHORT $LN115@scalar
  0008e	68 70 01 00 00	 push	 368			; 00000170H
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00099	83 c4 08	 add	 esp, 8
$LN115@scalar:
  0009c	8b c6		 mov	 eax, esi
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a8	59		 pop	 ecx
  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c2 04 00	 ret	 4
  000b1	cc		 int	 3
  000b2	cc		 int	 3
  000b3	cc		 int	 3
  000b4	cc		 int	 3
  000b5	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
_TEXT	SEGMENT
$T2 = -56						; size = 24
$T3 = -32						; size = 12
_this$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_length$ = 12						; size = 4
_iv$ = 16						; size = 4
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >, COMDAT
; _this$ = ecx

; 261  : 	CipherModeFinalTemplate_CipherHolder(const byte *key, size_t length, const byte *iv)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx

; 262  : 	{

  0002d	8d 7b 40	 lea	 edi, DWORD PTR [ebx+64]
  00030	6a 01		 push	 1
  00032	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00035	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi
  00038	e8 00 00 00 00	 call	 ??0Algorithm@CryptoPP@@QAE@_N@Z ; CryptoPP::Algorithm::Algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 185  : 			m_allocated = true;

  0003d	c6 87 91 00 00
	00 01		 mov	 BYTE PTR [edi+145], 1
  00044	8d 47 10	 lea	 eax, DWORD PTR [edi+16]

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00047	c7 80 88 00 00
	00 20 00 00 00	 mov	 DWORD PTR [eax+136], 32	; 00000020H
  00051	89 80 8c 00 00
	00		 mov	 DWORD PTR [eax+140], eax
  00057	8d 87 a0 00 00
	00		 lea	 eax, DWORD PTR [edi+160]

; 185  : 			m_allocated = true;

  0005d	c6 80 81 00 00
	00 01		 mov	 BYTE PTR [eax+129], 1

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00064	c7 80 88 00 00
	00 20 00 00 00	 mov	 DWORD PTR [eax+136], 32	; 00000020H
  0006e	89 80 8c 00 00
	00		 mov	 DWORD PTR [eax+140], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h

; 154  :  	BlockCipherFinal() {}

  00074	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0007a	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 262  : 	{

  00081	8b cb		 mov	 ecx, ebx
  00083	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0008a	e8 00 00 00 00	 call	 ??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  0008f	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00092	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
  00098	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
  0009f	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
  000a6	c7 43 28 00 00
	00 00		 mov	 DWORD PTR [ebx+40], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
  000ad	89 7b 08	 mov	 DWORD PTR [ebx+8], edi
  000b0	8b 01		 mov	 eax, DWORD PTR [ecx]
  000b2	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000b6	ff 50 10	 call	 DWORD PTR [eax+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  000b9	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0
  000c0	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 36   : 			m_data = data;

  000c7	8b 4d 10	 mov	 ecx, DWORD PTR _iv$[ebp]
  000ca	89 4d cc	 mov	 DWORD PTR $T2[ebp+4], ecx

; 37   : 			m_size = size;

  000cd	89 45 d0	 mov	 DWORD PTR $T2[ebp+8], eax

; 38   : 		}
; 39   : 		m_deepCopy = deepCopy;

  000d0	c6 45 c8 00	 mov	 BYTE PTR $T2[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  000d4	6a 01		 push	 1
  000d6	8d 45 c8	 lea	 eax, DWORD PTR $T2[ebp]
  000d9	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000dd	50		 push	 eax
  000de	8d 45 e0	 lea	 eax, DWORD PTR $T3[ebp]
  000e1	68 00 00 00 00	 push	 OFFSET ??_C@_02JDBEGKHA@IV@
  000e6	50		 push	 eax
  000e7	e8 00 00 00 00	 call	 ??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z ; CryptoPP::MakeParameters<CryptoPP::ConstByteArrayParameter>
  000ec	83 c4 10	 add	 esp, 16			; 00000010H
  000ef	50		 push	 eax
  000f0	ff 75 0c	 push	 DWORD PTR _length$[ebp]
  000f3	8b cb		 mov	 ecx, ebx
  000f5	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000f9	ff 75 08	 push	 DWORD PTR _key$[ebp]
  000fc	e8 00 00 00 00	 call	 ?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z ; CryptoPP::SimpleKeyingInterface::SetKey
  00101	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp+4]
  00104	e8 00 00 00 00	 call	 ??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00109	8b 55 dc	 mov	 edx, DWORD PTR $T2[ebp+20]
  0010c	32 c0		 xor	 al, al
  0010e	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp+16]
  00111	8b fa		 mov	 edi, edx
  00113	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00115	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00116	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 112  : 		UnalignedDeallocate(p);

  0011a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0011f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 265  : 	}

  00122	8b c3		 mov	 eax, ebx
  00124	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00127	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0012e	59		 pop	 ecx
  0012f	5f		 pop	 edi
  00130	5e		 pop	 esi
  00131	5b		 pop	 ebx
  00132	8b e5		 mov	 esp, ebp
  00134	5d		 pop	 ebp
  00135	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 40	 add	 ecx, 64			; 00000040H
  00006	e9 00 00 00 00	 jmp	 ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$10:
  00013	8d 4d d4	 lea	 ecx, DWORD PTR $T2[ebp+12]
  00016	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2:
  0001b	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1ConstByteArrayParameter@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3:
  00023	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1AlgorithmParameters@CryptoPP@@UAE@XZ
  0002b	cc		 int	 3
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
__ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z:
  00030	90		 npad	 1
  00031	90		 npad	 1
  00032	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00036	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00039	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0003c	33 c8		 xor	 ecx, eax
  0003e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00043	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  00048	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
  00049	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00053	59		 pop	 ecx
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
  0005b	cc		 int	 3
  0005c	cc		 int	 3
  0005d	cc		 int	 3
  0005e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$GSCopy$ = -68				; size = 4
$T2 = -64						; size = 24
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_08ENLOJDBI@DES?9EDE2@
  00031	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_08ENLOJDBI@DES?9EDE2@+4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00037	89 75 bc	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0003a	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00041	c7 45 e8 08 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 8

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00048	89 45 d8	 mov	 DWORD PTR $T3[ebp], eax
  0004b	89 4d dc	 mov	 DWORD PTR $T3[ebp+4], ecx

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0004e	c6 45 e0 00	 mov	 BYTE PTR $T3[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  00052	68 00 00 00 00	 push	 OFFSET ??_C@_01KMDKNFGN@?1@
  00057	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00061	50		 push	 eax
  00062	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_03LECCGOIK@CTR@
  00070	50		 push	 eax
  00071	56		 push	 esi
  00072	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00076	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0007b	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  0007e	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00081	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00084	72 0d		 jb	 SHORT $LN69@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00086	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00087	50		 push	 eax
  00088	ff 75 c0	 push	 DWORD PTR $T2[ebp]
  0008b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00090	83 c4 08	 add	 esp, 8
$LN69@AlgorithmN:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00093	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00096	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009d	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000a4	c6 45 c0 00	 mov	 BYTE PTR $T2[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  000a8	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000ab	72 0d		 jb	 SHORT $LN86@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000ad	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ae	51		 push	 ecx
  000af	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000b2	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000b7	83 c4 08	 add	 esp, 8
$LN86@AlgorithmN:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  000ba	8b c6		 mov	 eax, esi
  000bc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c6	59		 pop	 ecx
  000c7	5e		 pop	 esi
  000c8	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cb	33 cd		 xor	 ecx, ebp
  000cd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ PROC ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base> >, COMDAT
; _this$ = ecx
  00000	8b d1		 mov	 edx, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00002	8b 8a 28 01 00
	00		 mov	 ecx, DWORD PTR [edx+296]
  00008	8d 82 a0 00 00
	00		 lea	 eax, DWORD PTR [edx+160]
  0000e	57		 push	 edi
  0000f	8b b8 8c 00 00
	00		 mov	 edi, DWORD PTR [eax+140]

; 194  : 		if (p == GetAlignedArray())

  00015	3b f8		 cmp	 edi, eax
  00017	75 0b		 jne	 SHORT $LN30@ObjectHold

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  00019	c6 80 81 00 00
	00 00		 mov	 BYTE PTR [eax+129], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00020	33 c0		 xor	 eax, eax
  00022	f3 ab		 rep stosd
$LN30@ObjectHold:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00024	8b ba 9c 00 00
	00		 mov	 edi, DWORD PTR [edx+156]
  0002a	8d 42 10	 lea	 eax, DWORD PTR [edx+16]
  0002d	8b 88 88 00 00
	00		 mov	 ecx, DWORD PTR [eax+136]

; 194  : 		if (p == GetAlignedArray())

  00033	3b f8		 cmp	 edi, eax
  00035	75 0b		 jne	 SHORT $LN60@ObjectHold

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  00037	c6 80 81 00 00
	00 00		 mov	 BYTE PTR [eax+129], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0003e	33 c0		 xor	 eax, eax
  00040	f3 ab		 rep stosd
$LN60@ObjectHold:
  00042	5f		 pop	 edi
  00043	c3		 ret	 0
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ENDP ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8b 8e 28 01 00
	00		 mov	 ecx, DWORD PTR [esi+296]
  0000c	8d 86 a0 00 00
	00		 lea	 eax, DWORD PTR [esi+160]
  00012	57		 push	 edi
  00013	8b b8 8c 00 00
	00		 mov	 edi, DWORD PTR [eax+140]

; 194  : 		if (p == GetAlignedArray())

  00019	3b f8		 cmp	 edi, eax
  0001b	75 0b		 jne	 SHORT $LN31@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0001d	c6 80 81 00 00
	00 00		 mov	 BYTE PTR [eax+129], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00024	33 c0		 xor	 eax, eax
  00026	f3 ab		 rep stosd
$LN31@scalar:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00028	8b be 9c 00 00
	00		 mov	 edi, DWORD PTR [esi+156]
  0002e	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00031	8b 88 88 00 00
	00		 mov	 ecx, DWORD PTR [eax+136]

; 194  : 		if (p == GetAlignedArray())

  00037	3b f8		 cmp	 edi, eax
  00039	75 0b		 jne	 SHORT $LN61@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0003b	c6 80 81 00 00
	00 00		 mov	 BYTE PTR [eax+129], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00042	33 c0		 xor	 eax, eax
  00044	f3 ab		 rep stosd
$LN61@scalar:
  00046	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0004a	74 0e		 je	 SHORT $LN73@scalar
  0004c	68 30 01 00 00	 push	 304			; 00000130H
  00051	56		 push	 esi
  00052	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00057	83 c4 08	 add	 esp, 8
$LN73@scalar:
  0005a	5f		 pop	 edi
  0005b	8b c6		 mov	 eax, esi
  0005d	5e		 pop	 esi
  0005e	5d		 pop	 ebp
  0005f	c2 04 00	 ret	 4
??_G?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::IsForwardTransformation, COMDAT
; _this$ = ecx

; 162  : 	bool IsForwardTransformation() const {return DIR == ENCRYPTION;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>::IsForwardTransformation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@UBEPAVClonable@2@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@UBEPAVClonable@2@XZ PROC ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::DES_EDE2::Base>::Clone, COMDAT
; _this$ = ecx

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	68 30 01 00 00	 push	 304			; 00000130H
  0000b	8b f9		 mov	 edi, ecx
  0000d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00012	8b f0		 mov	 esi, eax
  00014	83 c4 04	 add	 esp, 4
  00017	89 75 fc	 mov	 DWORD PTR $T1[ebp], esi
  0001a	85 f6		 test	 esi, esi
  0001c	74 46		 je	 SHORT $LN3@Clone
  0001e	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00021	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00024	8a 4f 08	 mov	 cl, BYTE PTR [edi+8]
  00027	88 4e 0c	 mov	 BYTE PTR [esi+12], cl
  0002a	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  0002d	51		 push	 ecx
  0002e	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00031	e8 00 00 00 00	 call	 ??0?$FixedSizeSecBlock@I$0CA@V?$FixedSizeAllocatorWithCleanup@I$0CA@V?$NullAllocator@I@CryptoPP@@$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z
  00036	8d 87 9c 00 00
	00		 lea	 eax, DWORD PTR [edi+156]
  0003c	50		 push	 eax
  0003d	8d 8e a0 00 00
	00		 lea	 ecx, DWORD PTR [esi+160]
  00043	e8 00 00 00 00	 call	 ??0?$FixedSizeSecBlock@I$0CA@V?$FixedSizeAllocatorWithCleanup@I$0CA@V?$NullAllocator@I@CryptoPP@@$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z
  00048	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0004b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  00051	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
  00058	f7 de		 neg	 esi
  0005a	5f		 pop	 edi
  0005b	1b f6		 sbb	 esi, esi
  0005d	23 c6		 and	 eax, esi
  0005f	5e		 pop	 esi
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
$LN3@Clone:
  00064	33 f6		 xor	 esi, esi
  00066	5f		 pop	 edi
  00067	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0006a	f7 de		 neg	 esi
  0006c	1b f6		 sbb	 esi, esi
  0006e	23 c6		 and	 eax, esi
  00070	5e		 pop	 esi
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@VBase@DES_EDE2@2@@CryptoPP@@UBEPAVClonable@2@XZ ENDP ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::DES_EDE2::Base>::Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00049	8b 56 5c	 mov	 edx, DWORD PTR [esi+92]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0004c	33 c0		 xor	 eax, eax
  0004e	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  00051	8b fa		 mov	 edi, edx
  00053	f3 ab		 rep stosd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00055	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00056	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 112  : 		UnalignedDeallocate(p);

  0005d	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00062	83 c4 04	 add	 esp, 4
  00065	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00069	74 0b		 je	 SHORT $LN79@scalar
  0006b	6a 60		 push	 96			; 00000060H
  0006d	56		 push	 esi
  0006e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00073	83 c4 08	 add	 esp, 8
$LN79@scalar:
  00076	8b c6		 mov	 eax, esi
  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00082	59		 pop	 ecx
  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 04 00	 ret	 4
  0008b	cc		 int	 3
  0008c	cc		 int	 3
  0008d	cc		 int	 3
  0008e	cc		 int	 3
  0008f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
_TEXT	SEGMENT
$T2 = -64						; size = 12
_this$GSCopy$ = -52					; size = 4
$T3 = -48						; size = 24
_key$GSCopy$1$ = -24					; size = 4
_this$GSCopy$1$ = -20					; size = 4
_this$ = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_length$ = 12						; size = 4
_iv$ = 16						; size = 4
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >, COMDAT
; _this$ = ecx

; 261  : 	CipherModeFinalTemplate_CipherHolder(const byte *key, size_t length, const byte *iv)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d ec	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  0002b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002e	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]

; 262  : 	{

  00031	8d 79 40	 lea	 edi, DWORD PTR [ecx+64]
  00034	8b 5d 10	 mov	 ebx, DWORD PTR _iv$[ebp]
  00037	89 4d cc	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  0003a	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0003d	6a 01		 push	 1
  0003f	89 45 e8	 mov	 DWORD PTR _key$GSCopy$1$[ebp], eax
  00042	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  00045	e8 00 00 00 00	 call	 ??0Algorithm@CryptoPP@@QAE@_N@Z ; CryptoPP::Algorithm::Algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  0004a	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
  00051	c7 47 1c 00 00
	00 00		 mov	 DWORD PTR [edi+28], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h

; 154  :  	BlockCipherFinal() {}

  00058	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0005e	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 262  : 	{

  00065	8b 75 ec	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00068	8b ce		 mov	 ecx, esi
  0006a	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00071	e8 00 00 00 00	 call	 ??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  00076	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00079	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0007f	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
  00086	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
  0008d	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
  00094	89 7e 08	 mov	 DWORD PTR [esi+8], edi
  00097	8b 01		 mov	 eax, DWORD PTR [ecx]
  00099	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0009d	ff 50 10	 call	 DWORD PTR [eax+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  000a0	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0
  000a7	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 36   : 			m_data = data;

  000ae	89 5d d4	 mov	 DWORD PTR $T3[ebp+4], ebx

; 37   : 			m_size = size;

  000b1	89 45 d8	 mov	 DWORD PTR $T3[ebp+8], eax

; 38   : 		}
; 39   : 		m_deepCopy = deepCopy;

  000b4	c6 45 d0 00	 mov	 BYTE PTR $T3[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  000b8	6a 01		 push	 1
  000ba	8d 45 d0	 lea	 eax, DWORD PTR $T3[ebp]
  000bd	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000c1	50		 push	 eax
  000c2	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  000c5	68 00 00 00 00	 push	 OFFSET ??_C@_02JDBEGKHA@IV@
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 ??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z ; CryptoPP::MakeParameters<CryptoPP::ConstByteArrayParameter>
  000d0	83 c4 10	 add	 esp, 16			; 00000010H
  000d3	50		 push	 eax
  000d4	ff 75 0c	 push	 DWORD PTR _length$[ebp]
  000d7	8b ce		 mov	 ecx, esi
  000d9	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  000dd	ff 75 e8	 push	 DWORD PTR _key$GSCopy$1$[ebp]
  000e0	e8 00 00 00 00	 call	 ?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z ; CryptoPP::SimpleKeyingInterface::SetKey
  000e5	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp+4]
  000e8	e8 00 00 00 00	 call	 ??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  000ed	8b 55 e4	 mov	 edx, DWORD PTR $T3[ebp+20]
  000f0	32 c0		 xor	 al, al
  000f2	8b 4d e0	 mov	 ecx, DWORD PTR $T3[ebp+16]
  000f5	8b fa		 mov	 edi, edx
  000f7	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  000f9	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000fa	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6

; 112  : 		UnalignedDeallocate(p);

  000fe	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00103	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 265  : 	}

  00106	8b c6		 mov	 eax, esi
  00108	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0010b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00112	59		 pop	 ecx
  00113	5f		 pop	 edi
  00114	5e		 pop	 esi
  00115	5b		 pop	 ebx
  00116	8b e5		 mov	 esp, ebp
  00118	5d		 pop	 ebp
  00119	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0:
  00000	8b 4d cc	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00003	83 c1 40	 add	 ecx, 64			; 00000040H
  00006	e9 00 00 00 00	 jmp	 ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1:
  0000b	8b 4d cc	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$10:
  00013	8d 4d dc	 lea	 ecx, DWORD PTR $T3[ebp+12]
  00016	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2:
  0001b	8d 4d d0	 lea	 ecx, DWORD PTR $T3[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1ConstByteArrayParameter@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3:
  00023	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1AlgorithmParameters@CryptoPP@@UAE@XZ
  0002b	cc		 int	 3
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
__ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z:
  00030	90		 npad	 1
  00031	90		 npad	 1
  00032	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00036	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00039	8b 4a bc	 mov	 ecx, DWORD PTR [edx-68]
  0003c	33 c8		 xor	 ecx, eax
  0003e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00043	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  00048	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
  00049	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00053	59		 pop	 ecx
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
  0005b	cc		 int	 3
  0005c	cc		 int	 3
  0005d	cc		 int	 3
  0005e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$GSCopy$ = -68				; size = 4
$T2 = -64						; size = 24
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_08EGCCLPME@Camellia@
  00031	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_08EGCCLPME@Camellia@+4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00037	89 75 bc	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0003a	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00041	c7 45 e8 08 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 8

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00048	89 45 d8	 mov	 DWORD PTR $T3[ebp], eax
  0004b	89 4d dc	 mov	 DWORD PTR $T3[ebp+4], ecx

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0004e	c6 45 e0 00	 mov	 BYTE PTR $T3[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  00052	68 00 00 00 00	 push	 OFFSET ??_C@_01KMDKNFGN@?1@
  00057	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00061	50		 push	 eax
  00062	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_03LECCGOIK@CTR@
  00070	50		 push	 eax
  00071	56		 push	 esi
  00072	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00076	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0007b	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  0007e	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00081	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00084	72 0d		 jb	 SHORT $LN69@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00086	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00087	50		 push	 eax
  00088	ff 75 c0	 push	 DWORD PTR $T2[ebp]
  0008b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00090	83 c4 08	 add	 esp, 8
$LN69@AlgorithmN:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00093	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00096	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009d	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000a4	c6 45 c0 00	 mov	 BYTE PTR $T2[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  000a8	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000ab	72 0d		 jb	 SHORT $LN86@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000ad	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ae	51		 push	 ecx
  000af	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000b2	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000b7	83 c4 08	 add	 esp, 8
$LN86@AlgorithmN:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  000ba	8b c6		 mov	 eax, esi
  000bc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c6	59		 pop	 ecx
  000c7	5e		 pop	 esi
  000c8	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cb	33 cd		 xor	 ecx, ebp
  000cd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ PROC ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	57		 push	 edi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00023	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00026	33 c0		 xor	 eax, eax
  00028	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  0002b	8b fa		 mov	 edi, edx
  0002d	f3 ab		 rep stosd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  0002f	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  00037	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003c	83 c4 04	 add	 esp, 4
  0003f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00042	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00049	59		 pop	 ecx
  0004a	5f		 pop	 edi
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
  0004f	cc		 int	 3
  00050	cc		 int	 3
  00051	cc		 int	 3
  00052	cc		 int	 3
  00053	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ENDP ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base> >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??_G?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 1c	 mov	 edx, DWORD PTR [esi+28]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00029	33 c0		 xor	 eax, eax
  0002b	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 ab		 rep stosd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
  00042	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00046	74 0b		 je	 SHORT $LN37@scalar
  00048	6a 20		 push	 32			; 00000020H
  0004a	56		 push	 esi
  0004b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00050	83 c4 08	 add	 esp, 8
$LN37@scalar:
  00053	8b c6		 mov	 eax, esi
  00055	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00058	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005f	59		 pop	 ecx
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
  00068	cc		 int	 3
  00069	cc		 int	 3
  0006a	cc		 int	 3
  0006b	cc		 int	 3
  0006c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::IsForwardTransformation, COMDAT
; _this$ = ecx

; 162  : 	bool IsForwardTransformation() const {return DIR == ENCRYPTION;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>::IsForwardTransformation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@UBEPAVClonable@2@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@UBEPAVClonable@2@XZ PROC ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::Camellia::Base>::Clone, COMDAT
; _this$ = ecx

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@UBEPAVClonable@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	6a 20		 push	 32			; 00000020H
  00029	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002e	8b f0		 mov	 esi, eax
  00030	83 c4 04	 add	 esp, 4
  00033	89 75 f0	 mov	 DWORD PTR $T2[ebp], esi
  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003d	85 f6		 test	 esi, esi
  0003f	74 2d		 je	 SHORT $LN3@Clone
  00041	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00044	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00047	8a 4f 08	 mov	 cl, BYTE PTR [edi+8]
  0004a	88 4e 0c	 mov	 BYTE PTR [esi+12], cl
  0004d	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00050	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00053	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00056	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ??0?$SecBlock@IV?$AllocatorWithCleanup@I$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::SecBlock<unsigned int,CryptoPP::AllocatorWithCleanup<unsigned int,0> >::SecBlock<unsigned int,CryptoPP::AllocatorWithCleanup<unsigned int,0> >
  0005f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  00065	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
  0006c	eb 02		 jmp	 SHORT $LN4@Clone
$LN3@Clone:
  0006e	33 f6		 xor	 esi, esi
$LN4@Clone:
  00070	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00073	f7 de		 neg	 esi
  00075	1b f6		 sbb	 esi, esi
  00077	23 c6		 and	 eax, esi
  00079	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00083	59		 pop	 ecx
  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@UBEPAVClonable@2@XZ$0:
  00000	6a 20		 push	 32			; 00000020H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@UBEPAVClonable@2@XZ:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@UBEPAVClonable@2@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@VBase@Camellia@2@@CryptoPP@@UBEPAVClonable@2@XZ ENDP ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::Camellia::Base>::Clone
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00049	8b be dc 00 00
	00		 mov	 edi, DWORD PTR [esi+220]
  0004f	8d 46 50	 lea	 eax, DWORD PTR [esi+80]
  00052	8b 88 88 00 00
	00		 mov	 ecx, DWORD PTR [eax+136]

; 194  : 		if (p == GetAlignedArray())

  00058	3b f8		 cmp	 edi, eax
  0005a	75 0b		 jne	 SHORT $LN70@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0005c	c6 80 81 00 00
	00 00		 mov	 BYTE PTR [eax+129], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00063	33 c0		 xor	 eax, eax
  00065	f3 ab		 rep stosd
$LN70@scalar:
  00067	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0006b	74 0e		 je	 SHORT $LN82@scalar
  0006d	68 e0 00 00 00	 push	 224			; 000000e0H
  00072	56		 push	 esi
  00073	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00078	83 c4 08	 add	 esp, 8
$LN82@scalar:
  0007b	8b c6		 mov	 eax, esi
  0007d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00087	59		 pop	 ecx
  00088	5f		 pop	 edi
  00089	5e		 pop	 esi
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 04 00	 ret	 4
  00090	cc		 int	 3
  00091	cc		 int	 3
  00092	cc		 int	 3
  00093	cc		 int	 3
  00094	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
_TEXT	SEGMENT
$T2 = -56						; size = 24
$T3 = -32						; size = 12
_this$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_length$ = 12						; size = 4
_iv$ = 16						; size = 4
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >, COMDAT
; _this$ = ecx

; 261  : 	CipherModeFinalTemplate_CipherHolder(const byte *key, size_t length, const byte *iv)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx

; 262  : 	{

  0002d	8d 7b 40	 lea	 edi, DWORD PTR [ebx+64]
  00030	6a 01		 push	 1
  00032	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00035	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi
  00038	e8 00 00 00 00	 call	 ??0Algorithm@CryptoPP@@QAE@_N@Z ; CryptoPP::Algorithm::Algorithm
  0003d	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 185  : 			m_allocated = true;

  00040	c6 80 81 00 00
	00 01		 mov	 BYTE PTR [eax+129], 1

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00047	c7 80 88 00 00
	00 20 00 00 00	 mov	 DWORD PTR [eax+136], 32	; 00000020H
  00051	89 80 8c 00 00
	00		 mov	 DWORD PTR [eax+140], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h

; 154  :  	BlockCipherFinal() {}

  00057	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0005d	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 262  : 	{

  00064	8b cb		 mov	 ecx, ebx
  00066	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006d	e8 00 00 00 00	 call	 ??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  00072	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00075	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0007b	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
  00082	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
  00089	c7 43 28 00 00
	00 00		 mov	 DWORD PTR [ebx+40], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
  00090	89 7b 08	 mov	 DWORD PTR [ebx+8], edi
  00093	8b 01		 mov	 eax, DWORD PTR [ecx]
  00095	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00099	ff 50 10	 call	 DWORD PTR [eax+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  0009c	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0
  000a3	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 36   : 			m_data = data;

  000aa	8b 4d 10	 mov	 ecx, DWORD PTR _iv$[ebp]
  000ad	89 4d cc	 mov	 DWORD PTR $T2[ebp+4], ecx

; 37   : 			m_size = size;

  000b0	89 45 d0	 mov	 DWORD PTR $T2[ebp+8], eax

; 38   : 		}
; 39   : 		m_deepCopy = deepCopy;

  000b3	c6 45 c8 00	 mov	 BYTE PTR $T2[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  000b7	6a 01		 push	 1
  000b9	8d 45 c8	 lea	 eax, DWORD PTR $T2[ebp]
  000bc	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000c0	50		 push	 eax
  000c1	8d 45 e0	 lea	 eax, DWORD PTR $T3[ebp]
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_02JDBEGKHA@IV@
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z ; CryptoPP::MakeParameters<CryptoPP::ConstByteArrayParameter>
  000cf	83 c4 10	 add	 esp, 16			; 00000010H
  000d2	50		 push	 eax
  000d3	ff 75 0c	 push	 DWORD PTR _length$[ebp]
  000d6	8b cb		 mov	 ecx, ebx
  000d8	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000dc	ff 75 08	 push	 DWORD PTR _key$[ebp]
  000df	e8 00 00 00 00	 call	 ?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z ; CryptoPP::SimpleKeyingInterface::SetKey
  000e4	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp+4]
  000e7	e8 00 00 00 00	 call	 ??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  000ec	8b 55 dc	 mov	 edx, DWORD PTR $T2[ebp+20]
  000ef	32 c0		 xor	 al, al
  000f1	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp+16]
  000f4	8b fa		 mov	 edi, edx
  000f6	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  000f8	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000f9	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 112  : 		UnalignedDeallocate(p);

  000fd	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00102	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 265  : 	}

  00105	8b c3		 mov	 eax, ebx
  00107	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0010a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00111	59		 pop	 ecx
  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 40	 add	 ecx, 64			; 00000040H
  00006	e9 00 00 00 00	 jmp	 ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$9:
  00013	8d 4d d4	 lea	 ecx, DWORD PTR $T2[ebp+12]
  00016	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2:
  0001b	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1ConstByteArrayParameter@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3:
  00023	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1AlgorithmParameters@CryptoPP@@UAE@XZ
  0002b	cc		 int	 3
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
__ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z:
  00030	90		 npad	 1
  00031	90		 npad	 1
  00032	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00036	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00039	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0003c	33 c8		 xor	 ecx, eax
  0003e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00043	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  00048	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
  00049	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00053	59		 pop	 ecx
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
  0005b	cc		 int	 3
  0005c	cc		 int	 3
  0005d	cc		 int	 3
  0005e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$GSCopy$ = -68				; size = 4
$T2 = -64						; size = 24
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  0002c	89 75 bc	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002f	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00036	c7 45 e8 04 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 4

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0003d	c7 45 d8 53 45
	45 44		 mov	 DWORD PTR $T3[ebp], 1145390419 ; 44454553H

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00044	c6 45 dc 00	 mov	 BYTE PTR $T3[ebp+4], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  00048	68 00 00 00 00	 push	 OFFSET ??_C@_01KMDKNFGN@?1@
  0004d	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00050	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00057	50		 push	 eax
  00058	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_03LECCGOIK@CTR@
  00066	50		 push	 eax
  00067	56		 push	 esi
  00068	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0006c	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00071	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  00074	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00077	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0007a	72 0d		 jb	 SHORT $LN69@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0007c	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0007d	50		 push	 eax
  0007e	ff 75 c0	 push	 DWORD PTR $T2[ebp]
  00081	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00086	83 c4 08	 add	 esp, 8
$LN69@AlgorithmN:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00089	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  0008c	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00093	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0009a	c6 45 c0 00	 mov	 BYTE PTR $T2[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  0009e	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000a1	72 0d		 jb	 SHORT $LN86@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000a3	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000a4	51		 push	 ecx
  000a5	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000a8	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ad	83 c4 08	 add	 esp, 8
$LN86@AlgorithmN:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  000b0	8b c6		 mov	 eax, esi
  000b2	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000bc	59		 pop	 ecx
  000bd	5e		 pop	 esi
  000be	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c1	33 cd		 xor	 ecx, ebp
  000c3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ PROC ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base> >, COMDAT
; _this$ = ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00000	8b 91 98 00 00
	00		 mov	 edx, DWORD PTR [ecx+152]
  00006	83 c1 10	 add	 ecx, 16			; 00000010H
  00009	57		 push	 edi
  0000a	8b b9 8c 00 00
	00		 mov	 edi, DWORD PTR [ecx+140]

; 194  : 		if (p == GetAlignedArray())

  00010	3b f9		 cmp	 edi, ecx
  00012	75 0d		 jne	 SHORT $LN27@ObjectHold

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  00014	c6 81 81 00 00
	00 00		 mov	 BYTE PTR [ecx+129], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0001b	33 c0		 xor	 eax, eax
  0001d	8b ca		 mov	 ecx, edx
  0001f	f3 ab		 rep stosd
$LN27@ObjectHold:
  00021	5f		 pop	 edi
  00022	c3		 ret	 0
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ENDP ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8b 8e 98 00 00
	00		 mov	 ecx, DWORD PTR [esi+152]
  0000c	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0000f	57		 push	 edi
  00010	8b b8 8c 00 00
	00		 mov	 edi, DWORD PTR [eax+140]

; 194  : 		if (p == GetAlignedArray())

  00016	3b f8		 cmp	 edi, eax
  00018	75 0b		 jne	 SHORT $LN28@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0001a	c6 80 81 00 00
	00 00		 mov	 BYTE PTR [eax+129], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00021	33 c0		 xor	 eax, eax
  00023	f3 ab		 rep stosd
$LN28@scalar:
  00025	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00029	74 0e		 je	 SHORT $LN40@scalar
  0002b	68 a0 00 00 00	 push	 160			; 000000a0H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00036	83 c4 08	 add	 esp, 8
$LN40@scalar:
  00039	5f		 pop	 edi
  0003a	8b c6		 mov	 eax, esi
  0003c	5e		 pop	 esi
  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
??_G?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::IsForwardTransformation, COMDAT
; _this$ = ecx

; 162  : 	bool IsForwardTransformation() const {return DIR == ENCRYPTION;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>::IsForwardTransformation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@UBEPAVClonable@2@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@UBEPAVClonable@2@XZ PROC ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::SEED::Base>::Clone, COMDAT
; _this$ = ecx

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	68 a0 00 00 00	 push	 160			; 000000a0H
  0000b	8b f9		 mov	 edi, ecx
  0000d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00012	8b f0		 mov	 esi, eax
  00014	83 c4 04	 add	 esp, 4
  00017	89 75 fc	 mov	 DWORD PTR $T1[ebp], esi
  0001a	85 f6		 test	 esi, esi
  0001c	74 36		 je	 SHORT $LN3@Clone
  0001e	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00021	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00024	66 8b 4f 08	 mov	 cx, WORD PTR [edi+8]
  00028	66 89 4e 0c	 mov	 WORD PTR [esi+12], cx
  0002c	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  0002f	51		 push	 ecx
  00030	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00033	e8 00 00 00 00	 call	 ??0?$FixedSizeSecBlock@I$0CA@V?$FixedSizeAllocatorWithCleanup@I$0CA@V?$NullAllocator@I@CryptoPP@@$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z
  00038	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0003b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  00041	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
  00048	f7 de		 neg	 esi
  0004a	5f		 pop	 edi
  0004b	1b f6		 sbb	 esi, esi
  0004d	23 c6		 and	 eax, esi
  0004f	5e		 pop	 esi
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
$LN3@Clone:
  00054	33 f6		 xor	 esi, esi
  00056	5f		 pop	 edi
  00057	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0005a	f7 de		 neg	 esi
  0005c	1b f6		 sbb	 esi, esi
  0005e	23 c6		 and	 eax, esi
  00060	5e		 pop	 esi
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@VBase@SEED@2@@CryptoPP@@UBEPAVClonable@2@XZ ENDP ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::SEED::Base>::Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00049	8b 56 5c	 mov	 edx, DWORD PTR [esi+92]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0004c	33 c0		 xor	 eax, eax
  0004e	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  00051	8b fa		 mov	 edi, edx
  00053	f3 ab		 rep stosd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00055	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00056	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 112  : 		UnalignedDeallocate(p);

  0005d	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00062	83 c4 04	 add	 esp, 4
  00065	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00069	74 0b		 je	 SHORT $LN82@scalar
  0006b	6a 60		 push	 96			; 00000060H
  0006d	56		 push	 esi
  0006e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00073	83 c4 08	 add	 esp, 8
$LN82@scalar:
  00076	8b c6		 mov	 eax, esi
  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00082	59		 pop	 ecx
  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c2 04 00	 ret	 4
  0008b	cc		 int	 3
  0008c	cc		 int	 3
  0008d	cc		 int	 3
  0008e	cc		 int	 3
  0008f	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
_TEXT	SEGMENT
$T2 = -64						; size = 12
_this$GSCopy$ = -52					; size = 4
$T3 = -48						; size = 24
_key$GSCopy$1$ = -24					; size = 4
_this$GSCopy$1$ = -20					; size = 4
_this$ = -16						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_length$ = 12						; size = 4
_iv$ = 16						; size = 4
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >, COMDAT
; _this$ = ecx

; 261  : 	CipherModeFinalTemplate_CipherHolder(const byte *key, size_t length, const byte *iv)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 34	 sub	 esp, 52			; 00000034H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d ec	 mov	 DWORD PTR _this$GSCopy$1$[ebp], ecx
  0002b	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  0002e	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]

; 262  : 	{

  00031	8d 79 40	 lea	 edi, DWORD PTR [ecx+64]
  00034	8b 5d 10	 mov	 ebx, DWORD PTR _iv$[ebp]
  00037	89 4d cc	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  0003a	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0003d	6a 01		 push	 1
  0003f	89 45 e8	 mov	 DWORD PTR _key$GSCopy$1$[ebp], eax
  00042	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  00045	e8 00 00 00 00	 call	 ??0Algorithm@CryptoPP@@QAE@_N@Z ; CryptoPP::Algorithm::Algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  0004a	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
  00051	c7 47 1c 00 00
	00 00		 mov	 DWORD PTR [edi+28], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h

; 154  :  	BlockCipherFinal() {}

  00058	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0005e	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 262  : 	{

  00065	8b 75 ec	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00068	8b ce		 mov	 ecx, esi
  0006a	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00071	e8 00 00 00 00	 call	 ??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  00076	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00079	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0007f	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
  00086	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
  0008d	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
  00094	89 7e 08	 mov	 DWORD PTR [esi+8], edi
  00097	8b 01		 mov	 eax, DWORD PTR [ecx]
  00099	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0009d	ff 50 10	 call	 DWORD PTR [eax+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  000a0	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0
  000a7	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 36   : 			m_data = data;

  000ae	89 5d d4	 mov	 DWORD PTR $T3[ebp+4], ebx

; 37   : 			m_size = size;

  000b1	89 45 d8	 mov	 DWORD PTR $T3[ebp+8], eax

; 38   : 		}
; 39   : 		m_deepCopy = deepCopy;

  000b4	c6 45 d0 00	 mov	 BYTE PTR $T3[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  000b8	6a 01		 push	 1
  000ba	8d 45 d0	 lea	 eax, DWORD PTR $T3[ebp]
  000bd	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000c1	50		 push	 eax
  000c2	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  000c5	68 00 00 00 00	 push	 OFFSET ??_C@_02JDBEGKHA@IV@
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 ??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z ; CryptoPP::MakeParameters<CryptoPP::ConstByteArrayParameter>
  000d0	83 c4 10	 add	 esp, 16			; 00000010H
  000d3	50		 push	 eax
  000d4	ff 75 0c	 push	 DWORD PTR _length$[ebp]
  000d7	8b ce		 mov	 ecx, esi
  000d9	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  000dd	ff 75 e8	 push	 DWORD PTR _key$GSCopy$1$[ebp]
  000e0	e8 00 00 00 00	 call	 ?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z ; CryptoPP::SimpleKeyingInterface::SetKey
  000e5	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp+4]
  000e8	e8 00 00 00 00	 call	 ??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  000ed	8b 55 e4	 mov	 edx, DWORD PTR $T3[ebp+20]
  000f0	32 c0		 xor	 al, al
  000f2	8b 4d e0	 mov	 ecx, DWORD PTR $T3[ebp+16]
  000f5	8b fa		 mov	 edi, edx
  000f7	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  000f9	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000fa	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6

; 112  : 		UnalignedDeallocate(p);

  000fe	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00103	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 265  : 	}

  00106	8b c6		 mov	 eax, esi
  00108	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0010b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00112	59		 pop	 ecx
  00113	5f		 pop	 edi
  00114	5e		 pop	 esi
  00115	5b		 pop	 ebx
  00116	8b e5		 mov	 esp, ebp
  00118	5d		 pop	 ebp
  00119	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0:
  00000	8b 4d cc	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  00003	83 c1 40	 add	 ecx, 64			; 00000040H
  00006	e9 00 00 00 00	 jmp	 ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1:
  0000b	8b 4d cc	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$11:
  00013	8d 4d dc	 lea	 ecx, DWORD PTR $T3[ebp+12]
  00016	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2:
  0001b	8d 4d d0	 lea	 ecx, DWORD PTR $T3[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1ConstByteArrayParameter@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3:
  00023	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1AlgorithmParameters@CryptoPP@@UAE@XZ
  0002b	cc		 int	 3
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
__ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z:
  00030	90		 npad	 1
  00031	90		 npad	 1
  00032	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00036	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00039	8b 4a bc	 mov	 ecx, DWORD PTR [edx-68]
  0003c	33 c8		 xor	 ecx, eax
  0003e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00043	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  00048	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
  00049	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00053	59		 pop	 ecx
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
  0005b	cc		 int	 3
  0005c	cc		 int	 3
  0005d	cc		 int	 3
  0005e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$GSCopy$ = -68				; size = 4
$T2 = -64						; size = 24
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00029	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ??_C@_03GPFCBGOF@RC5@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  0002f	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00032	66 89 45 d8	 mov	 WORD PTR $T3[ebp], ax
  00036	a0 02 00 00 00	 mov	 al, BYTE PTR ??_C@_03GPFCBGOF@RC5@+2
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  0003b	89 75 bc	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0003e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00045	c7 45 e8 03 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 3

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0004c	88 45 da	 mov	 BYTE PTR $T3[ebp+2], al

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0004f	c6 45 db 00	 mov	 BYTE PTR $T3[ebp+3], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  00053	68 00 00 00 00	 push	 OFFSET ??_C@_01KMDKNFGN@?1@
  00058	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00062	50		 push	 eax
  00063	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_03LECCGOIK@CTR@
  00071	50		 push	 eax
  00072	56		 push	 esi
  00073	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00077	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0007c	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  0007f	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00082	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00085	72 0d		 jb	 SHORT $LN69@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00087	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00088	50		 push	 eax
  00089	ff 75 c0	 push	 DWORD PTR $T2[ebp]
  0008c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00091	83 c4 08	 add	 esp, 8
$LN69@AlgorithmN:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00094	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00097	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009e	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000a5	c6 45 c0 00	 mov	 BYTE PTR $T2[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  000a9	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000ac	72 0d		 jb	 SHORT $LN86@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000ae	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	51		 push	 ecx
  000b0	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000b3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000b8	83 c4 08	 add	 esp, 8
$LN86@AlgorithmN:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  000bb	8b c6		 mov	 eax, esi
  000bd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c7	59		 pop	 ecx
  000c8	5e		 pop	 esi
  000c9	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cc	33 cd		 xor	 ecx, ebp
  000ce	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ PROC ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	57		 push	 edi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00023	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00026	33 c0		 xor	 eax, eax
  00028	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  0002b	8b fa		 mov	 edi, edx
  0002d	f3 ab		 rep stosd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  0002f	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  00037	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003c	83 c4 04	 add	 esp, 4
  0003f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00042	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00049	59		 pop	 ecx
  0004a	5f		 pop	 edi
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
  0004f	cc		 int	 3
  00050	cc		 int	 3
  00051	cc		 int	 3
  00052	cc		 int	 3
  00053	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ENDP ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc> >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??_G?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 1c	 mov	 edx, DWORD PTR [esi+28]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00029	33 c0		 xor	 eax, eax
  0002b	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 ab		 rep stosd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
  00042	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00046	74 0b		 je	 SHORT $LN40@scalar
  00048	6a 20		 push	 32			; 00000020H
  0004a	56		 push	 esi
  0004b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00050	83 c4 08	 add	 esp, 8
$LN40@scalar:
  00053	8b c6		 mov	 eax, esi
  00055	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00058	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005f	59		 pop	 ecx
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
  00068	cc		 int	 3
  00069	cc		 int	 3
  0006a	cc		 int	 3
  0006b	cc		 int	 3
  0006c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::IsForwardTransformation, COMDAT
; _this$ = ecx

; 162  : 	bool IsForwardTransformation() const {return DIR == ENCRYPTION;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>::IsForwardTransformation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@UBEPAVClonable@2@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@UBEPAVClonable@2@XZ PROC ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::RC5::Enc>::Clone, COMDAT
; _this$ = ecx

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@UBEPAVClonable@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	6a 20		 push	 32			; 00000020H
  00029	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002e	8b f0		 mov	 esi, eax
  00030	83 c4 04	 add	 esp, 4
  00033	89 75 f0	 mov	 DWORD PTR $T2[ebp], esi
  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003d	85 f6		 test	 esi, esi
  0003f	74 2f		 je	 SHORT $LN3@Clone
  00041	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00044	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00047	66 8b 4f 08	 mov	 cx, WORD PTR [edi+8]
  0004b	66 89 4e 0c	 mov	 WORD PTR [esi+12], cx
  0004f	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00052	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00055	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00058	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??0?$SecBlock@IV?$AllocatorWithCleanup@I$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::SecBlock<unsigned int,CryptoPP::AllocatorWithCleanup<unsigned int,0> >::SecBlock<unsigned int,CryptoPP::AllocatorWithCleanup<unsigned int,0> >
  00061	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  00067	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
  0006e	eb 02		 jmp	 SHORT $LN4@Clone
$LN3@Clone:
  00070	33 f6		 xor	 esi, esi
$LN4@Clone:
  00072	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00075	f7 de		 neg	 esi
  00077	1b f6		 sbb	 esi, esi
  00079	23 c6		 and	 eax, esi
  0007b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00085	59		 pop	 ecx
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@UBEPAVClonable@2@XZ$0:
  00000	6a 20		 push	 32			; 00000020H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@UBEPAVClonable@2@XZ:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@UBEPAVClonable@2@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@VEnc@RC5@2@@CryptoPP@@UBEPAVClonable@2@XZ ENDP ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::RC5::Enc>::Clone
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00049	8b be b4 10 00
	00		 mov	 edi, DWORD PTR [esi+4276]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  0004f	8d 86 a8 00 00
	00		 lea	 eax, DWORD PTR [esi+168]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00055	8b 88 08 10 00
	00		 mov	 ecx, DWORD PTR [eax+4104]

; 194  : 		if (p == GetAlignedArray())

  0005b	3b f8		 cmp	 edi, eax
  0005d	75 0b		 jne	 SHORT $LN70@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0005f	c6 80 01 10 00
	00 00		 mov	 BYTE PTR [eax+4097], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00066	33 c0		 xor	 eax, eax
  00068	f3 ab		 rep stosd
$LN70@scalar:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0006a	8b be a4 00 00
	00		 mov	 edi, DWORD PTR [esi+164]
  00070	8d 46 50	 lea	 eax, DWORD PTR [esi+80]
  00073	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]

; 194  : 		if (p == GetAlignedArray())

  00076	3b f8		 cmp	 edi, eax
  00078	75 08		 jne	 SHORT $LN97@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0007a	c6 40 49 00	 mov	 BYTE PTR [eax+73], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0007e	33 c0		 xor	 eax, eax
  00080	f3 ab		 rep stosd
$LN97@scalar:
  00082	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00086	74 0e		 je	 SHORT $LN109@scalar
  00088	68 b8 10 00 00	 push	 4280			; 000010b8H
  0008d	56		 push	 esi
  0008e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00093	83 c4 08	 add	 esp, 8
$LN109@scalar:
  00096	8b c6		 mov	 eax, esi
  00098	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a2	59		 pop	 ecx
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	8b e5		 mov	 esp, ebp
  000a7	5d		 pop	 ebp
  000a8	c2 04 00	 ret	 4
  000ab	cc		 int	 3
  000ac	cc		 int	 3
  000ad	cc		 int	 3
  000ae	cc		 int	 3
  000af	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
_TEXT	SEGMENT
$T2 = -56						; size = 24
$T3 = -32						; size = 12
_this$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_length$ = 12						; size = 4
_iv$ = 16						; size = 4
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >, COMDAT
; _this$ = ecx

; 261  : 	CipherModeFinalTemplate_CipherHolder(const byte *key, size_t length, const byte *iv)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx

; 262  : 	{

  0002d	8d 7b 40	 lea	 edi, DWORD PTR [ebx+64]
  00030	6a 01		 push	 1
  00032	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00035	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi
  00038	e8 00 00 00 00	 call	 ??0Algorithm@CryptoPP@@QAE@_N@Z ; CryptoPP::Algorithm::Algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 185  : 			m_allocated = true;

  0003d	c6 47 59 01	 mov	 BYTE PTR [edi+89], 1
  00041	8d 47 10	 lea	 eax, DWORD PTR [edi+16]

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00044	c7 40 50 12 00
	00 00		 mov	 DWORD PTR [eax+80], 18	; 00000012H
  0004b	89 40 54	 mov	 DWORD PTR [eax+84], eax
  0004e	8d 47 68	 lea	 eax, DWORD PTR [edi+104]

; 185  : 			m_allocated = true;

  00051	c6 80 01 10 00
	00 01		 mov	 BYTE PTR [eax+4097], 1

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00058	c7 80 08 10 00
	00 00 04 00 00	 mov	 DWORD PTR [eax+4104], 1024 ; 00000400H
  00062	89 80 0c 10 00
	00		 mov	 DWORD PTR [eax+4108], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h

; 154  :  	BlockCipherFinal() {}

  00068	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0006e	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 262  : 	{

  00075	8b cb		 mov	 ecx, ebx
  00077	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0007e	e8 00 00 00 00	 call	 ??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  00083	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00086	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0008c	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
  00093	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
  0009a	c7 43 28 00 00
	00 00		 mov	 DWORD PTR [ebx+40], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
  000a1	89 7b 08	 mov	 DWORD PTR [ebx+8], edi
  000a4	8b 01		 mov	 eax, DWORD PTR [ecx]
  000a6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000aa	ff 50 10	 call	 DWORD PTR [eax+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  000ad	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0
  000b4	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 36   : 			m_data = data;

  000bb	8b 4d 10	 mov	 ecx, DWORD PTR _iv$[ebp]
  000be	89 4d cc	 mov	 DWORD PTR $T2[ebp+4], ecx

; 37   : 			m_size = size;

  000c1	89 45 d0	 mov	 DWORD PTR $T2[ebp+8], eax

; 38   : 		}
; 39   : 		m_deepCopy = deepCopy;

  000c4	c6 45 c8 00	 mov	 BYTE PTR $T2[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  000c8	6a 01		 push	 1
  000ca	8d 45 c8	 lea	 eax, DWORD PTR $T2[ebp]
  000cd	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000d1	50		 push	 eax
  000d2	8d 45 e0	 lea	 eax, DWORD PTR $T3[ebp]
  000d5	68 00 00 00 00	 push	 OFFSET ??_C@_02JDBEGKHA@IV@
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z ; CryptoPP::MakeParameters<CryptoPP::ConstByteArrayParameter>
  000e0	83 c4 10	 add	 esp, 16			; 00000010H
  000e3	50		 push	 eax
  000e4	ff 75 0c	 push	 DWORD PTR _length$[ebp]
  000e7	8b cb		 mov	 ecx, ebx
  000e9	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000ed	ff 75 08	 push	 DWORD PTR _key$[ebp]
  000f0	e8 00 00 00 00	 call	 ?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z ; CryptoPP::SimpleKeyingInterface::SetKey
  000f5	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp+4]
  000f8	e8 00 00 00 00	 call	 ??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  000fd	8b 55 dc	 mov	 edx, DWORD PTR $T2[ebp+20]
  00100	32 c0		 xor	 al, al
  00102	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp+16]
  00105	8b fa		 mov	 edi, edx
  00107	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00109	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0010a	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 112  : 		UnalignedDeallocate(p);

  0010e	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00113	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 265  : 	}

  00116	8b c3		 mov	 eax, ebx
  00118	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0011b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00122	59		 pop	 ecx
  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 40	 add	 ecx, 64			; 00000040H
  00006	e9 00 00 00 00	 jmp	 ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$10:
  00013	8d 4d d4	 lea	 ecx, DWORD PTR $T2[ebp+12]
  00016	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2:
  0001b	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1ConstByteArrayParameter@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3:
  00023	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1AlgorithmParameters@CryptoPP@@UAE@XZ
  0002b	cc		 int	 3
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
__ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z:
  00030	90		 npad	 1
  00031	90		 npad	 1
  00032	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00036	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00039	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0003c	33 c8		 xor	 ecx, eax
  0003e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00043	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  00048	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
  00049	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00053	59		 pop	 ecx
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
  0005b	cc		 int	 3
  0005c	cc		 int	 3
  0005d	cc		 int	 3
  0005e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$GSCopy$ = -68				; size = 4
$T2 = -64						; size = 24
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_08KOMAHJJD@Blowfish@
  00031	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_08KOMAHJJD@Blowfish@+4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00037	89 75 bc	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0003a	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00041	c7 45 e8 08 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 8

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00048	89 45 d8	 mov	 DWORD PTR $T3[ebp], eax
  0004b	89 4d dc	 mov	 DWORD PTR $T3[ebp+4], ecx

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0004e	c6 45 e0 00	 mov	 BYTE PTR $T3[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  00052	68 00 00 00 00	 push	 OFFSET ??_C@_01KMDKNFGN@?1@
  00057	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00061	50		 push	 eax
  00062	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_03LECCGOIK@CTR@
  00070	50		 push	 eax
  00071	56		 push	 esi
  00072	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00076	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0007b	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  0007e	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00081	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00084	72 0d		 jb	 SHORT $LN69@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00086	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00087	50		 push	 eax
  00088	ff 75 c0	 push	 DWORD PTR $T2[ebp]
  0008b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00090	83 c4 08	 add	 esp, 8
$LN69@AlgorithmN:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00093	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00096	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009d	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000a4	c6 45 c0 00	 mov	 BYTE PTR $T2[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  000a8	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000ab	72 0d		 jb	 SHORT $LN86@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000ad	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ae	51		 push	 ecx
  000af	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000b2	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000b7	83 c4 08	 add	 esp, 8
$LN86@AlgorithmN:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  000ba	8b c6		 mov	 eax, esi
  000bc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c6	59		 pop	 ecx
  000c7	5e		 pop	 esi
  000c8	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cb	33 cd		 xor	 ecx, ebp
  000cd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ PROC ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base> >, COMDAT
; _this$ = ecx
  00000	8b d1		 mov	 edx, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00002	8b 8a 70 10 00
	00		 mov	 ecx, DWORD PTR [edx+4208]
  00008	8d 42 68	 lea	 eax, DWORD PTR [edx+104]
  0000b	57		 push	 edi
  0000c	8b b8 0c 10 00
	00		 mov	 edi, DWORD PTR [eax+4108]

; 194  : 		if (p == GetAlignedArray())

  00012	3b f8		 cmp	 edi, eax
  00014	75 0b		 jne	 SHORT $LN27@ObjectHold

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  00016	c6 80 01 10 00
	00 00		 mov	 BYTE PTR [eax+4097], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0001d	33 c0		 xor	 eax, eax
  0001f	f3 ab		 rep stosd
$LN27@ObjectHold:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00021	8b 7a 64	 mov	 edi, DWORD PTR [edx+100]
  00024	8d 42 10	 lea	 eax, DWORD PTR [edx+16]
  00027	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]

; 194  : 		if (p == GetAlignedArray())

  0002a	3b f8		 cmp	 edi, eax
  0002c	75 08		 jne	 SHORT $LN54@ObjectHold

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0002e	c6 40 49 00	 mov	 BYTE PTR [eax+73], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00032	33 c0		 xor	 eax, eax
  00034	f3 ab		 rep stosd
$LN54@ObjectHold:
  00036	5f		 pop	 edi
  00037	c3		 ret	 0
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ENDP ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8b 8e 70 10 00
	00		 mov	 ecx, DWORD PTR [esi+4208]
  0000c	8d 46 68	 lea	 eax, DWORD PTR [esi+104]
  0000f	57		 push	 edi
  00010	8b b8 0c 10 00
	00		 mov	 edi, DWORD PTR [eax+4108]

; 194  : 		if (p == GetAlignedArray())

  00016	3b f8		 cmp	 edi, eax
  00018	75 0b		 jne	 SHORT $LN28@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0001a	c6 80 01 10 00
	00 00		 mov	 BYTE PTR [eax+4097], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00021	33 c0		 xor	 eax, eax
  00023	f3 ab		 rep stosd
$LN28@scalar:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00025	8b 7e 64	 mov	 edi, DWORD PTR [esi+100]
  00028	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0002b	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]

; 194  : 		if (p == GetAlignedArray())

  0002e	3b f8		 cmp	 edi, eax
  00030	75 08		 jne	 SHORT $LN55@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  00032	c6 40 49 00	 mov	 BYTE PTR [eax+73], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00036	33 c0		 xor	 eax, eax
  00038	f3 ab		 rep stosd
$LN55@scalar:
  0003a	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0003e	74 0e		 je	 SHORT $LN67@scalar
  00040	68 78 10 00 00	 push	 4216			; 00001078H
  00045	56		 push	 esi
  00046	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0004b	83 c4 08	 add	 esp, 8
$LN67@scalar:
  0004e	5f		 pop	 edi
  0004f	8b c6		 mov	 eax, esi
  00051	5e		 pop	 esi
  00052	5d		 pop	 ebp
  00053	c2 04 00	 ret	 4
??_G?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::IsForwardTransformation, COMDAT
; _this$ = ecx

; 162  : 	bool IsForwardTransformation() const {return DIR == ENCRYPTION;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsForwardTransformation@?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>::IsForwardTransformation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@UBEPAVClonable@2@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@UBEPAVClonable@2@XZ PROC ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::Blowfish::Base>::Clone, COMDAT
; _this$ = ecx

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	68 78 10 00 00	 push	 4216			; 00001078H
  0000b	8b f9		 mov	 edi, ecx
  0000d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00012	8b f0		 mov	 esi, eax
  00014	83 c4 04	 add	 esp, 4
  00017	89 75 fc	 mov	 DWORD PTR $T1[ebp], esi
  0001a	85 f6		 test	 esi, esi
  0001c	0f 84 91 00 00
	00		 je	 $LN3@Clone
  00022	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00025	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00028	66 8b 47 08	 mov	 ax, WORD PTR [edi+8]
  0002c	66 89 46 0c	 mov	 WORD PTR [esi+12], ax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 166  : 	FixedSizeAllocatorWithCleanup() : m_allocated(false) {}

  00030	c6 46 59 00	 mov	 BYTE PTR [esi+89], 0

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00034	8b 57 5c	 mov	 edx, DWORD PTR [edi+92]
  00037	89 56 60	 mov	 DWORD PTR [esi+96], edx

; 183  : 		if (n <= S && !m_allocated)

  0003a	83 fa 12	 cmp	 edx, 18			; 00000012H
  0003d	77 09		 ja	 SHORT $LN39@Clone

; 184  : 		{
; 185  : 			m_allocated = true;

  0003f	c6 46 59 01	 mov	 BYTE PTR [esi+89], 1

; 186  : 			return GetAlignedArray();

  00043	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00046	eb 02		 jmp	 SHORT $LN40@Clone
$LN39@Clone:

; 187  : 		}
; 188  : 		else
; 189  : 			return m_fallbackAllocator.allocate(n, hint);

  00048	33 c0		 xor	 eax, eax
$LN40@Clone:

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  0004a	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
  00051	89 46 64	 mov	 DWORD PTR [esi+100], eax
  00054	8b 57 60	 mov	 edx, DWORD PTR [edi+96]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 42   :         if (_SourceSize == 0)

  00057	85 c9		 test	 ecx, ecx
  00059	74 30		 je	 SHORT $LN47@Clone

; 43   :         {
; 44   :             return 0;
; 45   :         }
; 46   : 
; 47   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  0005b	85 c0		 test	 eax, eax
  0005d	74 1c		 je	 SHORT $LN50@Clone

; 48   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  0005f	51		 push	 ecx
  00060	85 d2		 test	 edx, edx
  00062	74 0c		 je	 SHORT $LN46@Clone

; 51   : 
; 52   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);
; 53   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);
; 54   : 
; 55   :             // Unreachable, but required to suppress /analyze warnings:
; 56   :             return EINVAL;
; 57   :         }
; 58   : #pragma warning(suppress:4996) // Deprecation
; 59   :         memcpy(_Destination, _Source, _SourceSize);

  00064	52		 push	 edx
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 _memcpy
  0006b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006e	eb 1b		 jmp	 SHORT $LN47@Clone
$LN46@Clone:

; 49   :         {
; 50   :             memset(_Destination, 0, _DestinationSize);

  00070	6a 00		 push	 0
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 _memset
  00078	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN50@Clone:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  0007b	e8 00 00 00 00	 call	 __errno
  00080	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  00086	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN47@Clone:
  0008b	8d 47 64	 lea	 eax, DWORD PTR [edi+100]
  0008e	50		 push	 eax
  0008f	8d 4e 68	 lea	 ecx, DWORD PTR [esi+104]
  00092	e8 00 00 00 00	 call	 ??0?$FixedSizeSecBlock@I$0EAA@V?$FixedSizeAllocatorWithCleanup@I$0EAA@V?$NullAllocator@I@CryptoPP@@$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z
  00097	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0009a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  000a0	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
  000a7	f7 de		 neg	 esi
  000a9	5f		 pop	 edi
  000aa	1b f6		 sbb	 esi, esi
  000ac	23 c6		 and	 eax, esi
  000ae	5e		 pop	 esi
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c3		 ret	 0
$LN3@Clone:
  000b3	33 f6		 xor	 esi, esi
  000b5	5f		 pop	 edi
  000b6	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000b9	f7 de		 neg	 esi
  000bb	1b f6		 sbb	 esi, esi
  000bd	23 c6		 and	 eax, esi
  000bf	5e		 pop	 esi
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c3		 ret	 0
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@VBase@Blowfish@2@@CryptoPP@@UBEPAVClonable@2@XZ ENDP ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::Blowfish::Base>::Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00049	8b 7e 6c	 mov	 edi, DWORD PTR [esi+108]
  0004c	8d 46 50	 lea	 eax, DWORD PTR [esi+80]
  0004f	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]

; 194  : 		if (p == GetAlignedArray())

  00052	3b f8		 cmp	 edi, eax
  00054	75 08		 jne	 SHORT $LN73@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  00056	c6 40 11 00	 mov	 BYTE PTR [eax+17], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0005a	33 c0		 xor	 eax, eax
  0005c	f3 ab		 rep stosd
$LN73@scalar:
  0005e	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00062	74 0b		 je	 SHORT $LN85@scalar
  00064	6a 78		 push	 120			; 00000078H
  00066	56		 push	 esi
  00067	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0006c	83 c4 08	 add	 esp, 8
$LN85@scalar:
  0006f	8b c6		 mov	 eax, esi
  00071	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007b	59		 pop	 ecx
  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
  00084	cc		 int	 3
  00085	cc		 int	 3
  00086	cc		 int	 3
  00087	cc		 int	 3
  00088	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
_TEXT	SEGMENT
$T2 = -56						; size = 24
$T3 = -32						; size = 12
_this$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_length$ = 12						; size = 4
_iv$ = 16						; size = 4
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >, COMDAT
; _this$ = ecx

; 261  : 	CipherModeFinalTemplate_CipherHolder(const byte *key, size_t length, const byte *iv)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx

; 262  : 	{

  0002d	8d 7b 40	 lea	 edi, DWORD PTR [ebx+64]
  00030	6a 01		 push	 1
  00032	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00035	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi
  00038	e8 00 00 00 00	 call	 ??0Algorithm@CryptoPP@@QAE@_N@Z ; CryptoPP::Algorithm::Algorithm
  0003d	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 185  : 			m_allocated = true;

  00040	c6 40 11 01	 mov	 BYTE PTR [eax+17], 1

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00044	c7 40 18 04 00
	00 00		 mov	 DWORD PTR [eax+24], 4
  0004b	89 40 1c	 mov	 DWORD PTR [eax+28], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h

; 154  :  	BlockCipherFinal() {}

  0004e	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  00054	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 262  : 	{

  0005b	8b cb		 mov	 ecx, ebx
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00064	e8 00 00 00 00	 call	 ??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  00069	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0006c	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
  00072	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
  00079	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
  00080	c7 43 28 00 00
	00 00		 mov	 DWORD PTR [ebx+40], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
  00087	89 7b 08	 mov	 DWORD PTR [ebx+8], edi
  0008a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0008c	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00090	ff 50 10	 call	 DWORD PTR [eax+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00093	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0
  0009a	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 36   : 			m_data = data;

  000a1	8b 4d 10	 mov	 ecx, DWORD PTR _iv$[ebp]
  000a4	89 4d cc	 mov	 DWORD PTR $T2[ebp+4], ecx

; 37   : 			m_size = size;

  000a7	89 45 d0	 mov	 DWORD PTR $T2[ebp+8], eax

; 38   : 		}
; 39   : 		m_deepCopy = deepCopy;

  000aa	c6 45 c8 00	 mov	 BYTE PTR $T2[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  000ae	6a 01		 push	 1
  000b0	8d 45 c8	 lea	 eax, DWORD PTR $T2[ebp]
  000b3	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000b7	50		 push	 eax
  000b8	8d 45 e0	 lea	 eax, DWORD PTR $T3[ebp]
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_02JDBEGKHA@IV@
  000c0	50		 push	 eax
  000c1	e8 00 00 00 00	 call	 ??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z ; CryptoPP::MakeParameters<CryptoPP::ConstByteArrayParameter>
  000c6	83 c4 10	 add	 esp, 16			; 00000010H
  000c9	50		 push	 eax
  000ca	ff 75 0c	 push	 DWORD PTR _length$[ebp]
  000cd	8b cb		 mov	 ecx, ebx
  000cf	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000d3	ff 75 08	 push	 DWORD PTR _key$[ebp]
  000d6	e8 00 00 00 00	 call	 ?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z ; CryptoPP::SimpleKeyingInterface::SetKey
  000db	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp+4]
  000de	e8 00 00 00 00	 call	 ??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  000e3	8b 55 dc	 mov	 edx, DWORD PTR $T2[ebp+20]
  000e6	32 c0		 xor	 al, al
  000e8	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp+16]
  000eb	8b fa		 mov	 edi, edx
  000ed	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  000ef	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000f0	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 112  : 		UnalignedDeallocate(p);

  000f4	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  000f9	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 265  : 	}

  000fc	8b c3		 mov	 eax, ebx
  000fe	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00101	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00108	59		 pop	 ecx
  00109	5f		 pop	 edi
  0010a	5e		 pop	 esi
  0010b	5b		 pop	 ebx
  0010c	8b e5		 mov	 esp, ebp
  0010e	5d		 pop	 ebp
  0010f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 40	 add	 ecx, 64			; 00000040H
  00006	e9 00 00 00 00	 jmp	 ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$10:
  00013	8d 4d d4	 lea	 ecx, DWORD PTR $T2[ebp+12]
  00016	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2:
  0001b	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1ConstByteArrayParameter@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3:
  00023	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1AlgorithmParameters@CryptoPP@@UAE@XZ
  0002b	cc		 int	 3
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
__ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z:
  00030	90		 npad	 1
  00031	90		 npad	 1
  00032	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00036	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00039	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0003c	33 c8		 xor	 ecx, eax
  0003e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00043	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  00048	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
  00049	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00053	59		 pop	 ecx
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
  0005b	cc		 int	 3
  0005c	cc		 int	 3
  0005d	cc		 int	 3
  0005e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$GSCopy$ = -68				; size = 4
$T2 = -64						; size = 24
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00029	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ??_C@_03FOHIJHJ@TEA@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  0002f	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00032	66 89 45 d8	 mov	 WORD PTR $T3[ebp], ax
  00036	a0 02 00 00 00	 mov	 al, BYTE PTR ??_C@_03FOHIJHJ@TEA@+2
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  0003b	89 75 bc	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0003e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00045	c7 45 e8 03 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 3

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0004c	88 45 da	 mov	 BYTE PTR $T3[ebp+2], al

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0004f	c6 45 db 00	 mov	 BYTE PTR $T3[ebp+3], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  00053	68 00 00 00 00	 push	 OFFSET ??_C@_01KMDKNFGN@?1@
  00058	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  0005b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00062	50		 push	 eax
  00063	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_03LECCGOIK@CTR@
  00071	50		 push	 eax
  00072	56		 push	 esi
  00073	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00077	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0007c	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  0007f	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00082	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00085	72 0d		 jb	 SHORT $LN69@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00087	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00088	50		 push	 eax
  00089	ff 75 c0	 push	 DWORD PTR $T2[ebp]
  0008c	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00091	83 c4 08	 add	 esp, 8
$LN69@AlgorithmN:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00094	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00097	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009e	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000a5	c6 45 c0 00	 mov	 BYTE PTR $T2[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  000a9	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000ac	72 0d		 jb	 SHORT $LN86@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000ae	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000af	51		 push	 ecx
  000b0	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000b3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000b8	83 c4 08	 add	 esp, 8
$LN86@AlgorithmN:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  000bb	8b c6		 mov	 eax, esi
  000bd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c7	59		 pop	 ecx
  000c8	5e		 pop	 esi
  000c9	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cc	33 cd		 xor	 ecx, ebp
  000ce	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ PROC ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc> >, COMDAT
; _this$ = ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00000	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  00003	83 c1 10	 add	 ecx, 16			; 00000010H
  00006	57		 push	 edi
  00007	8b 79 1c	 mov	 edi, DWORD PTR [ecx+28]

; 194  : 		if (p == GetAlignedArray())

  0000a	3b f9		 cmp	 edi, ecx
  0000c	75 0a		 jne	 SHORT $LN30@ObjectHold

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0000e	c6 41 11 00	 mov	 BYTE PTR [ecx+17], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00012	33 c0		 xor	 eax, eax
  00014	8b ca		 mov	 ecx, edx
  00016	f3 ab		 rep stosd
$LN30@ObjectHold:
  00018	5f		 pop	 edi
  00019	c3		 ret	 0
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ENDP ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  00009	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0000c	57		 push	 edi
  0000d	8b 78 1c	 mov	 edi, DWORD PTR [eax+28]

; 194  : 		if (p == GetAlignedArray())

  00010	3b f8		 cmp	 edi, eax
  00012	75 08		 jne	 SHORT $LN31@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  00014	c6 40 11 00	 mov	 BYTE PTR [eax+17], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00018	33 c0		 xor	 eax, eax
  0001a	f3 ab		 rep stosd
$LN31@scalar:
  0001c	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00020	74 0b		 je	 SHORT $LN43@scalar
  00022	6a 38		 push	 56			; 00000038H
  00024	56		 push	 esi
  00025	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002a	83 c4 08	 add	 esp, 8
$LN43@scalar:
  0002d	5f		 pop	 edi
  0002e	8b c6		 mov	 eax, esi
  00030	5e		 pop	 esi
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
??_G?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::IsForwardTransformation, COMDAT
; _this$ = ecx

; 162  : 	bool IsForwardTransformation() const {return DIR == ENCRYPTION;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>::IsForwardTransformation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@UBEPAVClonable@2@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@UBEPAVClonable@2@XZ PROC ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::TEA::Enc>::Clone, COMDAT
; _this$ = ecx

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	6a 38		 push	 56			; 00000038H
  00008	8b f9		 mov	 edi, ecx
  0000a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000f	8b f0		 mov	 esi, eax
  00011	83 c4 04	 add	 esp, 4
  00014	89 75 fc	 mov	 DWORD PTR $T1[ebp], esi
  00017	85 f6		 test	 esi, esi
  00019	0f 84 8b 00 00
	00		 je	 $LN3@Clone
  0001f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00022	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00025	66 8b 47 08	 mov	 ax, WORD PTR [edi+8]
  00029	66 89 46 0c	 mov	 WORD PTR [esi+12], ax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 166  : 	FixedSizeAllocatorWithCleanup() : m_allocated(false) {}

  0002d	c6 46 21 00	 mov	 BYTE PTR [esi+33], 0

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00031	8b 57 24	 mov	 edx, DWORD PTR [edi+36]
  00034	89 56 28	 mov	 DWORD PTR [esi+40], edx

; 183  : 		if (n <= S && !m_allocated)

  00037	83 fa 04	 cmp	 edx, 4
  0003a	77 09		 ja	 SHORT $LN41@Clone

; 184  : 		{
; 185  : 			m_allocated = true;

  0003c	c6 46 21 01	 mov	 BYTE PTR [esi+33], 1

; 186  : 			return GetAlignedArray();

  00040	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00043	eb 02		 jmp	 SHORT $LN42@Clone
$LN41@Clone:

; 187  : 		}
; 188  : 		else
; 189  : 			return m_fallbackAllocator.allocate(n, hint);

  00045	33 c0		 xor	 eax, eax
$LN42@Clone:

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00047	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
  0004e	89 46 2c	 mov	 DWORD PTR [esi+44], eax
  00051	8b 57 28	 mov	 edx, DWORD PTR [edi+40]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 42   :         if (_SourceSize == 0)

  00054	85 c9		 test	 ecx, ecx
  00056	74 30		 je	 SHORT $LN49@Clone

; 43   :         {
; 44   :             return 0;
; 45   :         }
; 46   : 
; 47   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  00058	85 c0		 test	 eax, eax
  0005a	74 1c		 je	 SHORT $LN52@Clone

; 48   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  0005c	51		 push	 ecx
  0005d	85 d2		 test	 edx, edx
  0005f	74 0c		 je	 SHORT $LN48@Clone

; 51   : 
; 52   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);
; 53   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);
; 54   : 
; 55   :             // Unreachable, but required to suppress /analyze warnings:
; 56   :             return EINVAL;
; 57   :         }
; 58   : #pragma warning(suppress:4996) // Deprecation
; 59   :         memcpy(_Destination, _Source, _SourceSize);

  00061	52		 push	 edx
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 _memcpy
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	eb 1b		 jmp	 SHORT $LN49@Clone
$LN48@Clone:

; 49   :         {
; 50   :             memset(_Destination, 0, _DestinationSize);

  0006d	6a 00		 push	 0
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 _memset
  00075	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN52@Clone:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  00078	e8 00 00 00 00	 call	 __errno
  0007d	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  00083	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN49@Clone:
  00088	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
  0008b	89 46 30	 mov	 DWORD PTR [esi+48], eax
  0008e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00091	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  00097	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
  0009e	f7 de		 neg	 esi
  000a0	5f		 pop	 edi
  000a1	1b f6		 sbb	 esi, esi
  000a3	23 c6		 and	 eax, esi
  000a5	5e		 pop	 esi
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
$LN3@Clone:
  000aa	33 f6		 xor	 esi, esi
  000ac	5f		 pop	 edi
  000ad	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000b0	f7 de		 neg	 esi
  000b2	1b f6		 sbb	 esi, esi
  000b4	23 c6		 and	 eax, esi
  000b6	5e		 pop	 esi
  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c3		 ret	 0
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@VEnc@TEA@2@@CryptoPP@@UBEPAVClonable@2@XZ ENDP ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::TEA::Enc>::Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00049	8b be 5c 01 00
	00		 mov	 edi, DWORD PTR [esi+348]
  0004f	8d 46 50	 lea	 eax, DWORD PTR [esi+80]
  00052	8b 88 08 01 00
	00		 mov	 ecx, DWORD PTR [eax+264]

; 194  : 		if (p == GetAlignedArray())

  00058	3b f8		 cmp	 edi, eax
  0005a	75 0b		 jne	 SHORT $LN73@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0005c	c6 80 01 01 00
	00 00		 mov	 BYTE PTR [eax+257], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00063	33 c0		 xor	 eax, eax
  00065	f3 ab		 rep stosd
$LN73@scalar:
  00067	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0006b	74 0e		 je	 SHORT $LN85@scalar
  0006d	68 60 01 00 00	 push	 352			; 00000160H
  00072	56		 push	 esi
  00073	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00078	83 c4 08	 add	 esp, 8
$LN85@scalar:
  0007b	8b c6		 mov	 eax, esi
  0007d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00087	59		 pop	 ecx
  00088	5f		 pop	 edi
  00089	5e		 pop	 esi
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 04 00	 ret	 4
  00090	cc		 int	 3
  00091	cc		 int	 3
  00092	cc		 int	 3
  00093	cc		 int	 3
  00094	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
_TEXT	SEGMENT
$T2 = -56						; size = 24
$T3 = -32						; size = 12
_this$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_length$ = 12						; size = 4
_iv$ = 16						; size = 4
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z PROC ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >, COMDAT
; _this$ = ecx

; 261  : 	CipherModeFinalTemplate_CipherHolder(const byte *key, size_t length, const byte *iv)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx

; 262  : 	{

  0002d	8d 7b 40	 lea	 edi, DWORD PTR [ebx+64]
  00030	6a 01		 push	 1
  00032	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00035	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi
  00038	e8 00 00 00 00	 call	 ??0Algorithm@CryptoPP@@QAE@_N@Z ; CryptoPP::Algorithm::Algorithm
  0003d	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 185  : 			m_allocated = true;

  00040	c6 80 01 01 00
	00 01		 mov	 BYTE PTR [eax+257], 1

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00047	c7 80 08 01 00
	00 40 00 00 00	 mov	 DWORD PTR [eax+264], 64	; 00000040H
  00051	89 80 0c 01 00
	00		 mov	 DWORD PTR [eax+268], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h

; 154  :  	BlockCipherFinal() {}

  00057	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0005d	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 262  : 	{

  00064	8b cb		 mov	 ecx, ebx
  00066	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006d	e8 00 00 00 00	 call	 ??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  00072	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  00075	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0007b	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BStreamTransformation@1@@
  00082	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
  00089	c7 43 28 00 00
	00 00		 mov	 DWORD PTR [ebx+40], OFFSET ??_7?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@6BRandomNumberGenerator@1@@
  00090	89 7b 08	 mov	 DWORD PTR [ebx+8], edi
  00093	8b 01		 mov	 eax, DWORD PTR [ecx]
  00095	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00099	ff 50 10	 call	 DWORD PTR [eax+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  0009c	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0
  000a3	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 36   : 			m_data = data;

  000aa	8b 4d 10	 mov	 ecx, DWORD PTR _iv$[ebp]
  000ad	89 4d cc	 mov	 DWORD PTR $T2[ebp+4], ecx

; 37   : 			m_size = size;

  000b0	89 45 d0	 mov	 DWORD PTR $T2[ebp+8], eax

; 38   : 		}
; 39   : 		m_deepCopy = deepCopy;

  000b3	c6 45 c8 00	 mov	 BYTE PTR $T2[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 264  : 		this->SetKey(key, length, MakeParameters(Name::IV(), ConstByteArrayParameter(iv, this->m_cipher->BlockSize())));

  000b7	6a 01		 push	 1
  000b9	8d 45 c8	 lea	 eax, DWORD PTR $T2[ebp]
  000bc	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000c0	50		 push	 eax
  000c1	8d 45 e0	 lea	 eax, DWORD PTR $T3[ebp]
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_02JDBEGKHA@IV@
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z ; CryptoPP::MakeParameters<CryptoPP::ConstByteArrayParameter>
  000cf	83 c4 10	 add	 esp, 16			; 00000010H
  000d2	50		 push	 eax
  000d3	ff 75 0c	 push	 DWORD PTR _length$[ebp]
  000d6	8b cb		 mov	 ecx, ebx
  000d8	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000dc	ff 75 08	 push	 DWORD PTR _key$[ebp]
  000df	e8 00 00 00 00	 call	 ?SetKey@SimpleKeyingInterface@CryptoPP@@UAEXPBEIABVNameValuePairs@2@@Z ; CryptoPP::SimpleKeyingInterface::SetKey
  000e4	8d 4d e4	 lea	 ecx, DWORD PTR $T3[ebp+4]
  000e7	e8 00 00 00 00	 call	 ??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  000ec	8b 55 dc	 mov	 edx, DWORD PTR $T2[ebp+20]
  000ef	32 c0		 xor	 al, al
  000f1	8b 4d d8	 mov	 ecx, DWORD PTR $T2[ebp+16]
  000f4	8b fa		 mov	 edi, edx
  000f6	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  000f8	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000f9	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 112  : 		UnalignedDeallocate(p);

  000fd	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00102	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 265  : 	}

  00105	8b c3		 mov	 eax, ebx
  00107	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0010a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00111	59		 pop	 ecx
  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 40	 add	 ecx, 64			; 00000040H
  00006	e9 00 00 00 00	 jmp	 ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$10:
  00013	8d 4d d4	 lea	 ecx, DWORD PTR $T2[ebp+12]
  00016	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$2:
  0001b	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  0001e	e9 00 00 00 00	 jmp	 ??1ConstByteArrayParameter@CryptoPP@@QAE@XZ
__unwindfunclet$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z$3:
  00023	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
  00026	e9 00 00 00 00	 jmp	 ??1AlgorithmParameters@CryptoPP@@UAE@XZ
  0002b	cc		 int	 3
  0002c	cc		 int	 3
  0002d	cc		 int	 3
  0002e	cc		 int	 3
  0002f	cc		 int	 3
__ehhandler$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z:
  00030	90		 npad	 1
  00031	90		 npad	 1
  00032	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00036	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00039	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0003c	33 c8		 xor	 ecx, eax
  0003e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00043	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z
  00048	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ENDP ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
  00049	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00053	59		 pop	 ecx
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
  0005b	cc		 int	 3
  0005c	cc		 int	 3
  0005d	cc		 int	 3
  0005e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UAE@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::~AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$GSCopy$ = -68				; size = 4
$T2 = -64						; size = 24
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 38	 sub	 esp, 56			; 00000038H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_08KKFFFOAL@SHACAL?92@
  00031	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ??_C@_08KKFFFOAL@SHACAL?92@+4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00037	89 75 bc	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0003a	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00041	c7 45 e8 08 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 8

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00048	89 45 d8	 mov	 DWORD PTR $T3[ebp], eax
  0004b	89 4d dc	 mov	 DWORD PTR $T3[ebp+4], ecx

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0004e	c6 45 e0 00	 mov	 BYTE PTR $T3[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  00052	68 00 00 00 00	 push	 OFFSET ??_C@_01KMDKNFGN@?1@
  00057	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00061	50		 push	 eax
  00062	8d 45 c0	 lea	 eax, DWORD PTR $T2[ebp]
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_03LECCGOIK@CTR@
  00070	50		 push	 eax
  00071	56		 push	 esi
  00072	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00076	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0007b	8b 45 d4	 mov	 eax, DWORD PTR $T2[ebp+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 273  : 		{return CIPHER::StaticAlgorithmName() + "/" + BASE::StaticAlgorithmName();}

  0007e	83 c4 18	 add	 esp, 24			; 00000018H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00081	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00084	72 0d		 jb	 SHORT $LN69@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00086	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00087	50		 push	 eax
  00088	ff 75 c0	 push	 DWORD PTR $T2[ebp]
  0008b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00090	83 c4 08	 add	 esp, 8
$LN69@AlgorithmN:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00093	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00096	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009d	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000a4	c6 45 c0 00	 mov	 BYTE PTR $T2[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  000a8	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000ab	72 0d		 jb	 SHORT $LN86@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000ad	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ae	51		 push	 ecx
  000af	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000b2	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000b7	83 c4 08	 add	 esp, 8
$LN86@AlgorithmN:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  000ba	8b c6		 mov	 eax, esi
  000bc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c6	59		 pop	 ecx
  000c7	5e		 pop	 esi
  000c8	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cb	33 cd		 xor	 ecx, ebp
  000cd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d2	8b e5		 mov	 esp, ebp
  000d4	5d		 pop	 ebp
  000d5	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$2:
  00008	8d 4d c0	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AlgorithmName@?$AlgorithmImpl@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@V?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>,CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> > >::AlgorithmName
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ PROC ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc> >, COMDAT
; _this$ = ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00000	8b 91 18 01 00
	00		 mov	 edx, DWORD PTR [ecx+280]
  00006	83 c1 10	 add	 ecx, 16			; 00000010H
  00009	57		 push	 edi
  0000a	8b b9 0c 01 00
	00		 mov	 edi, DWORD PTR [ecx+268]

; 194  : 		if (p == GetAlignedArray())

  00010	3b f9		 cmp	 edi, ecx
  00012	75 0d		 jne	 SHORT $LN30@ObjectHold

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  00014	c6 81 01 01 00
	00 00		 mov	 BYTE PTR [ecx+257], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0001b	33 c0		 xor	 eax, eax
  0001d	8b ca		 mov	 ecx, edx
  0001f	f3 ab		 rep stosd
$LN30@ObjectHold:
  00021	5f		 pop	 edi
  00022	c3		 ret	 0
??1?$ObjectHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@@CryptoPP@@QAE@XZ ENDP ; CryptoPP::ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc> >::~ObjectHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_G?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8b 8e 18 01 00
	00		 mov	 ecx, DWORD PTR [esi+280]
  0000c	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0000f	57		 push	 edi
  00010	8b b8 0c 01 00
	00		 mov	 edi, DWORD PTR [eax+268]

; 194  : 		if (p == GetAlignedArray())

  00016	3b f8		 cmp	 edi, eax
  00018	75 0b		 jne	 SHORT $LN31@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0001a	c6 80 01 01 00
	00 00		 mov	 BYTE PTR [eax+257], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00021	33 c0		 xor	 eax, eax
  00023	f3 ab		 rep stosd
$LN31@scalar:
  00025	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00029	74 0e		 je	 SHORT $LN43@scalar
  0002b	68 20 01 00 00	 push	 288			; 00000120H
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00036	83 c4 08	 add	 esp, 8
$LN43@scalar:
  00039	5f		 pop	 edi
  0003a	8b c6		 mov	 eax, esi
  0003c	5e		 pop	 esi
  0003d	5d		 pop	 ebp
  0003e	c2 04 00	 ret	 4
??_G?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::IsForwardTransformation, COMDAT
; _this$ = ecx

; 162  : 	bool IsForwardTransformation() const {return DIR == ENCRYPTION;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsForwardTransformation@?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>::IsForwardTransformation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@UBEPAVClonable@2@XZ
_TEXT	SEGMENT
$T1 = -4						; size = 4
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@UBEPAVClonable@2@XZ PROC ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::SHACAL2::Enc>::Clone, COMDAT
; _this$ = ecx

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	68 20 01 00 00	 push	 288			; 00000120H
  0000b	8b f9		 mov	 edi, ecx
  0000d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00012	8b f0		 mov	 esi, eax
  00014	83 c4 04	 add	 esp, 4
  00017	89 75 fc	 mov	 DWORD PTR $T1[ebp], esi
  0001a	85 f6		 test	 esi, esi
  0001c	0f 84 af 00 00
	00		 je	 $LN3@Clone
  00022	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00025	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00028	8a 47 08	 mov	 al, BYTE PTR [edi+8]
  0002b	88 46 0c	 mov	 BYTE PTR [esi+12], al
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 166  : 	FixedSizeAllocatorWithCleanup() : m_allocated(false) {}

  0002e	c6 86 11 01 00
	00 00		 mov	 BYTE PTR [esi+273], 0

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00035	8b 97 14 01 00
	00		 mov	 edx, DWORD PTR [edi+276]
  0003b	89 96 18 01 00
	00		 mov	 DWORD PTR [esi+280], edx

; 183  : 		if (n <= S && !m_allocated)

  00041	83 fa 40	 cmp	 edx, 64			; 00000040H
  00044	77 0c		 ja	 SHORT $LN41@Clone

; 184  : 		{
; 185  : 			m_allocated = true;

  00046	c6 86 11 01 00
	00 01		 mov	 BYTE PTR [esi+273], 1

; 186  : 			return GetAlignedArray();

  0004d	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00050	eb 02		 jmp	 SHORT $LN42@Clone
$LN41@Clone:

; 187  : 		}
; 188  : 		else
; 189  : 			return m_fallbackAllocator.allocate(n, hint);

  00052	33 c0		 xor	 eax, eax
$LN42@Clone:

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00054	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
  0005b	89 86 1c 01 00
	00		 mov	 DWORD PTR [esi+284], eax
  00061	8b 97 18 01 00
	00		 mov	 edx, DWORD PTR [edi+280]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 42   :         if (_SourceSize == 0)

  00067	85 c9		 test	 ecx, ecx
  00069	74 4a		 je	 SHORT $LN49@Clone

; 43   :         {
; 44   :             return 0;
; 45   :         }
; 46   : 
; 47   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  0006b	85 c0		 test	 eax, eax
  0006d	74 36		 je	 SHORT $LN52@Clone

; 48   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  0006f	51		 push	 ecx
  00070	85 d2		 test	 edx, edx
  00072	74 26		 je	 SHORT $LN48@Clone

; 51   : 
; 52   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);
; 53   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);
; 54   : 
; 55   :             // Unreachable, but required to suppress /analyze warnings:
; 56   :             return EINVAL;
; 57   :         }
; 58   : #pragma warning(suppress:4996) // Deprecation
; 59   :         memcpy(_Destination, _Source, _SourceSize);

  00074	52		 push	 edx
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 _memcpy
  0007b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  00084	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00087	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
  0008e	f7 de		 neg	 esi
  00090	1b f6		 sbb	 esi, esi
  00092	5f		 pop	 edi
  00093	23 c6		 and	 eax, esi
  00095	5e		 pop	 esi
  00096	8b e5		 mov	 esp, ebp
  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
$LN48@Clone:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 50   :             memset(_Destination, 0, _DestinationSize);

  0009a	6a 00		 push	 0
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 _memset
  000a2	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN52@Clone:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 19   : 	Clonable * Clone() const {return new DERIVED(*static_cast<const DERIVED *>(this));}

  000a5	e8 00 00 00 00	 call	 __errno
  000aa	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  000b0	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN49@Clone:
  000b5	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000b8	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BSimpleKeyingInterface@1@@
  000be	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@6BBlockTransformation@1@@
  000c5	f7 de		 neg	 esi
  000c7	5f		 pop	 edi
  000c8	1b f6		 sbb	 esi, esi
  000ca	23 c6		 and	 eax, esi
  000cc	5e		 pop	 esi
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c3		 ret	 0
$LN3@Clone:
  000d1	33 f6		 xor	 esi, esi
  000d3	5f		 pop	 edi
  000d4	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000d7	f7 de		 neg	 esi
  000d9	1b f6		 sbb	 esi, esi
  000db	23 c6		 and	 eax, esi
  000dd	5e		 pop	 esi
  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c3		 ret	 0
?Clone@?$ClonableImpl@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@VEnc@SHACAL2@2@@CryptoPP@@UBEPAVClonable@2@XZ ENDP ; CryptoPP::ClonableImpl<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::SHACAL2::Enc>::Clone
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UAEPAXI@Z PROC ; BlockCipherDetail<CryptoPP::SHACAL2>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UAEPAXI@Z ENDP ; BlockCipherDetail<CryptoPP::SHACAL2>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateDecoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateDecoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::SHACAL2>::CreateDecoder, COMDAT
; _this$ = ecx

; 100  : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateDecoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  00023	68 60 01 00 00	 push	 352			; 00000160H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 21		 je	 SHORT $LN3@CreateDeco
  0003e	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00046	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 102  : 	}

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateDeco:

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  0005f	33 c0		 xor	 eax, eax

; 102  : 	}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	68 60 01 00 00	 push	 352			; 00000160H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?CreateDecoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateDecoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::SHACAL2>::CreateDecoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateEncoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateEncoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::SHACAL2>::CreateEncoder, COMDAT
; _this$ = ecx

; 96   : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateEncoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  00023	68 60 01 00 00	 push	 352			; 00000160H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 21		 je	 SHORT $LN3@CreateEnco
  0003e	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00046	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@SHACAL2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SHACAL2::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 98   : 	}

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateEnco:

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  0005f	33 c0		 xor	 eax, eax

; 98   : 	}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	68 60 01 00 00	 push	 352			; 00000160H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?CreateEncoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateEncoder@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::SHACAL2>::CreateEncoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetIVLength@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetIVLength@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::SHACAL2>::GetIVLength, COMDAT
; _this$ = ecx

; 93   : 	virtual int GetIVLength() const { return T::IV_LENGTH; }

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?GetIVLength@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::SHACAL2>::GetIVLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetDefaultKeyLength@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetDefaultKeyLength@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::SHACAL2>::GetDefaultKeyLength, COMDAT
; _this$ = ecx

; 92   : 	virtual int GetDefaultKeyLength() const { return T::DEFAULT_KEYLENGTH; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetDefaultKeyLength@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::SHACAL2>::GetDefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetBlockSize@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetBlockSize@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::SHACAL2>::GetBlockSize, COMDAT
; _this$ = ecx

; 91   : 	virtual int GetBlockSize() const { return T::BLOCKSIZE; }

  00000	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00005	c3		 ret	 0
?GetBlockSize@?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::SHACAL2>::GetBlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ??1?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UAE@XZ
_TEXT	SEGMENT
??1?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UAE@XZ PROC	; BlockCipherDetail<CryptoPP::SHACAL2>::~BlockCipherDetail<CryptoPP::SHACAL2>, COMDAT
; _this$ = ecx

; 89   : 	virtual ~BlockCipherDetail() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00006	c3		 ret	 0
??1?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@UAE@XZ ENDP	; BlockCipherDetail<CryptoPP::SHACAL2>::~BlockCipherDetail<CryptoPP::SHACAL2>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$BlockCipherDetail@VTEA@CryptoPP@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherDetail@VTEA@CryptoPP@@@@UAEPAXI@Z PROC	; BlockCipherDetail<CryptoPP::TEA>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$BlockCipherDetail@VTEA@CryptoPP@@@@UAEPAXI@Z ENDP	; BlockCipherDetail<CryptoPP::TEA>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateDecoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateDecoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::TEA>::CreateDecoder, COMDAT
; _this$ = ecx

; 100  : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateDecoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  00023	6a 78		 push	 120			; 00000078H
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	85 c0		 test	 eax, eax
  00039	74 21		 je	 SHORT $LN3@CreateDeco
  0003b	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  0003e	8b c8		 mov	 ecx, eax
  00040	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00043	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00046	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 102  : 	}

  0004b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00055	59		 pop	 ecx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateDeco:

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  0005c	33 c0		 xor	 eax, eax

; 102  : 	}

  0005e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00061	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00068	59		 pop	 ecx
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	6a 78		 push	 120			; 00000078H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?CreateDecoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateDecoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::TEA>::CreateDecoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateEncoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateEncoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::TEA>::CreateEncoder, COMDAT
; _this$ = ecx

; 96   : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateEncoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  00023	6a 78		 push	 120			; 00000078H
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	85 c0		 test	 eax, eax
  00039	74 21		 je	 SHORT $LN3@CreateEnco
  0003b	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  0003e	8b c8		 mov	 ecx, eax
  00040	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00043	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00046	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@TEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::TEA::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 98   : 	}

  0004b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00055	59		 pop	 ecx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateEnco:

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  0005c	33 c0		 xor	 eax, eax

; 98   : 	}

  0005e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00061	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00068	59		 pop	 ecx
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	6a 78		 push	 120			; 00000078H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?CreateEncoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateEncoder@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::TEA>::CreateEncoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetIVLength@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetIVLength@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::TEA>::GetIVLength, COMDAT
; _this$ = ecx

; 93   : 	virtual int GetIVLength() const { return T::IV_LENGTH; }

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?GetIVLength@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::TEA>::GetIVLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetDefaultKeyLength@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetDefaultKeyLength@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::TEA>::GetDefaultKeyLength, COMDAT
; _this$ = ecx

; 92   : 	virtual int GetDefaultKeyLength() const { return T::DEFAULT_KEYLENGTH; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetDefaultKeyLength@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::TEA>::GetDefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetBlockSize@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetBlockSize@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::TEA>::GetBlockSize, COMDAT
; _this$ = ecx

; 91   : 	virtual int GetBlockSize() const { return T::BLOCKSIZE; }

  00000	b8 08 00 00 00	 mov	 eax, 8
  00005	c3		 ret	 0
?GetBlockSize@?$BlockCipherDetail@VTEA@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::TEA>::GetBlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ??1?$BlockCipherDetail@VTEA@CryptoPP@@@@UAE@XZ
_TEXT	SEGMENT
??1?$BlockCipherDetail@VTEA@CryptoPP@@@@UAE@XZ PROC	; BlockCipherDetail<CryptoPP::TEA>::~BlockCipherDetail<CryptoPP::TEA>, COMDAT
; _this$ = ecx

; 89   : 	virtual ~BlockCipherDetail() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00006	c3		 ret	 0
??1?$BlockCipherDetail@VTEA@CryptoPP@@@@UAE@XZ ENDP	; BlockCipherDetail<CryptoPP::TEA>::~BlockCipherDetail<CryptoPP::TEA>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UAEPAXI@Z PROC ; BlockCipherDetail<CryptoPP::Blowfish>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UAEPAXI@Z ENDP ; BlockCipherDetail<CryptoPP::Blowfish>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateDecoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateDecoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::Blowfish>::CreateDecoder, COMDAT
; _this$ = ecx

; 100  : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateDecoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  00023	68 b8 10 00 00	 push	 4280			; 000010b8H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 21		 je	 SHORT $LN3@CreateDeco
  0003e	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00046	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 102  : 	}

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateDeco:

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  0005f	33 c0		 xor	 eax, eax

; 102  : 	}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	68 b8 10 00 00	 push	 4280			; 000010b8H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?CreateDecoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateDecoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::Blowfish>::CreateDecoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateEncoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateEncoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::Blowfish>::CreateEncoder, COMDAT
; _this$ = ecx

; 96   : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateEncoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  00023	68 b8 10 00 00	 push	 4280			; 000010b8H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 21		 je	 SHORT $LN3@CreateEnco
  0003e	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00046	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Blowfish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Blowfish::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 98   : 	}

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateEnco:

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  0005f	33 c0		 xor	 eax, eax

; 98   : 	}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	68 b8 10 00 00	 push	 4280			; 000010b8H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?CreateEncoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateEncoder@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::Blowfish>::CreateEncoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetIVLength@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetIVLength@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::Blowfish>::GetIVLength, COMDAT
; _this$ = ecx

; 93   : 	virtual int GetIVLength() const { return T::IV_LENGTH; }

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?GetIVLength@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::Blowfish>::GetIVLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetDefaultKeyLength@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetDefaultKeyLength@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::Blowfish>::GetDefaultKeyLength, COMDAT
; _this$ = ecx

; 92   : 	virtual int GetDefaultKeyLength() const { return T::DEFAULT_KEYLENGTH; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetDefaultKeyLength@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::Blowfish>::GetDefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetBlockSize@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetBlockSize@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::Blowfish>::GetBlockSize, COMDAT
; _this$ = ecx

; 91   : 	virtual int GetBlockSize() const { return T::BLOCKSIZE; }

  00000	b8 08 00 00 00	 mov	 eax, 8
  00005	c3		 ret	 0
?GetBlockSize@?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::Blowfish>::GetBlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ??1?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UAE@XZ
_TEXT	SEGMENT
??1?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UAE@XZ PROC ; BlockCipherDetail<CryptoPP::Blowfish>::~BlockCipherDetail<CryptoPP::Blowfish>, COMDAT
; _this$ = ecx

; 89   : 	virtual ~BlockCipherDetail() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00006	c3		 ret	 0
??1?$BlockCipherDetail@VBlowfish@CryptoPP@@@@UAE@XZ ENDP ; BlockCipherDetail<CryptoPP::Blowfish>::~BlockCipherDetail<CryptoPP::Blowfish>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$BlockCipherDetail@VRC5@CryptoPP@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherDetail@VRC5@CryptoPP@@@@UAEPAXI@Z PROC	; BlockCipherDetail<CryptoPP::RC5>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$BlockCipherDetail@VRC5@CryptoPP@@@@UAEPAXI@Z ENDP	; BlockCipherDetail<CryptoPP::RC5>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateDecoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateDecoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::RC5>::CreateDecoder, COMDAT
; _this$ = ecx

; 100  : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateDecoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  00023	6a 60		 push	 96			; 00000060H
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	85 c0		 test	 eax, eax
  00039	74 21		 je	 SHORT $LN3@CreateDeco
  0003b	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  0003e	8b c8		 mov	 ecx, eax
  00040	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00043	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00046	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 102  : 	}

  0004b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00055	59		 pop	 ecx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateDeco:

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  0005c	33 c0		 xor	 eax, eax

; 102  : 	}

  0005e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00061	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00068	59		 pop	 ecx
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	6a 60		 push	 96			; 00000060H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?CreateDecoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateDecoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::RC5>::CreateDecoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateEncoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateEncoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::RC5>::CreateEncoder, COMDAT
; _this$ = ecx

; 96   : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateEncoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  00023	6a 60		 push	 96			; 00000060H
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	85 c0		 test	 eax, eax
  00039	74 21		 je	 SHORT $LN3@CreateEnco
  0003b	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  0003e	8b c8		 mov	 ecx, eax
  00040	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00043	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00046	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC5@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC5::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 98   : 	}

  0004b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00055	59		 pop	 ecx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateEnco:

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  0005c	33 c0		 xor	 eax, eax

; 98   : 	}

  0005e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00061	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00068	59		 pop	 ecx
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	6a 60		 push	 96			; 00000060H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?CreateEncoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateEncoder@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::RC5>::CreateEncoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetIVLength@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetIVLength@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::RC5>::GetIVLength, COMDAT
; _this$ = ecx

; 93   : 	virtual int GetIVLength() const { return T::IV_LENGTH; }

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?GetIVLength@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::RC5>::GetIVLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetDefaultKeyLength@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetDefaultKeyLength@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::RC5>::GetDefaultKeyLength, COMDAT
; _this$ = ecx

; 92   : 	virtual int GetDefaultKeyLength() const { return T::DEFAULT_KEYLENGTH; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetDefaultKeyLength@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::RC5>::GetDefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetBlockSize@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetBlockSize@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::RC5>::GetBlockSize, COMDAT
; _this$ = ecx

; 91   : 	virtual int GetBlockSize() const { return T::BLOCKSIZE; }

  00000	b8 08 00 00 00	 mov	 eax, 8
  00005	c3		 ret	 0
?GetBlockSize@?$BlockCipherDetail@VRC5@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::RC5>::GetBlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ??1?$BlockCipherDetail@VRC5@CryptoPP@@@@UAE@XZ
_TEXT	SEGMENT
??1?$BlockCipherDetail@VRC5@CryptoPP@@@@UAE@XZ PROC	; BlockCipherDetail<CryptoPP::RC5>::~BlockCipherDetail<CryptoPP::RC5>, COMDAT
; _this$ = ecx

; 89   : 	virtual ~BlockCipherDetail() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00006	c3		 ret	 0
??1?$BlockCipherDetail@VRC5@CryptoPP@@@@UAE@XZ ENDP	; BlockCipherDetail<CryptoPP::RC5>::~BlockCipherDetail<CryptoPP::RC5>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$BlockCipherDetail@VSEED@CryptoPP@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherDetail@VSEED@CryptoPP@@@@UAEPAXI@Z PROC ; BlockCipherDetail<CryptoPP::SEED>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$BlockCipherDetail@VSEED@CryptoPP@@@@UAEPAXI@Z ENDP ; BlockCipherDetail<CryptoPP::SEED>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateDecoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateDecoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::SEED>::CreateDecoder, COMDAT
; _this$ = ecx

; 100  : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateDecoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  00023	68 e0 00 00 00	 push	 224			; 000000e0H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 21		 je	 SHORT $LN3@CreateDeco
  0003e	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00046	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 102  : 	}

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateDeco:

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  0005f	33 c0		 xor	 eax, eax

; 102  : 	}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	68 e0 00 00 00	 push	 224			; 000000e0H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?CreateDecoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateDecoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::SEED>::CreateDecoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateEncoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateEncoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::SEED>::CreateEncoder, COMDAT
; _this$ = ecx

; 96   : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateEncoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  00023	68 e0 00 00 00	 push	 224			; 000000e0H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 21		 je	 SHORT $LN3@CreateEnco
  0003e	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00046	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@SEED@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::SEED::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 98   : 	}

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateEnco:

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  0005f	33 c0		 xor	 eax, eax

; 98   : 	}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	68 e0 00 00 00	 push	 224			; 000000e0H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?CreateEncoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateEncoder@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::SEED>::CreateEncoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetIVLength@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetIVLength@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::SEED>::GetIVLength, COMDAT
; _this$ = ecx

; 93   : 	virtual int GetIVLength() const { return T::IV_LENGTH; }

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?GetIVLength@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::SEED>::GetIVLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetDefaultKeyLength@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetDefaultKeyLength@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::SEED>::GetDefaultKeyLength, COMDAT
; _this$ = ecx

; 92   : 	virtual int GetDefaultKeyLength() const { return T::DEFAULT_KEYLENGTH; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetDefaultKeyLength@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::SEED>::GetDefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetBlockSize@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetBlockSize@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::SEED>::GetBlockSize, COMDAT
; _this$ = ecx

; 91   : 	virtual int GetBlockSize() const { return T::BLOCKSIZE; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetBlockSize@?$BlockCipherDetail@VSEED@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::SEED>::GetBlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ??1?$BlockCipherDetail@VSEED@CryptoPP@@@@UAE@XZ
_TEXT	SEGMENT
??1?$BlockCipherDetail@VSEED@CryptoPP@@@@UAE@XZ PROC	; BlockCipherDetail<CryptoPP::SEED>::~BlockCipherDetail<CryptoPP::SEED>, COMDAT
; _this$ = ecx

; 89   : 	virtual ~BlockCipherDetail() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00006	c3		 ret	 0
??1?$BlockCipherDetail@VSEED@CryptoPP@@@@UAE@XZ ENDP	; BlockCipherDetail<CryptoPP::SEED>::~BlockCipherDetail<CryptoPP::SEED>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$BlockCipherDetail@VCamellia@CryptoPP@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherDetail@VCamellia@CryptoPP@@@@UAEPAXI@Z PROC ; BlockCipherDetail<CryptoPP::Camellia>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$BlockCipherDetail@VCamellia@CryptoPP@@@@UAEPAXI@Z ENDP ; BlockCipherDetail<CryptoPP::Camellia>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateDecoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateDecoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::Camellia>::CreateDecoder, COMDAT
; _this$ = ecx

; 100  : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateDecoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  00023	6a 60		 push	 96			; 00000060H
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	85 c0		 test	 eax, eax
  00039	74 21		 je	 SHORT $LN3@CreateDeco
  0003b	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  0003e	8b c8		 mov	 ecx, eax
  00040	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00043	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00046	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 102  : 	}

  0004b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00055	59		 pop	 ecx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateDeco:

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  0005c	33 c0		 xor	 eax, eax

; 102  : 	}

  0005e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00061	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00068	59		 pop	 ecx
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	6a 60		 push	 96			; 00000060H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?CreateDecoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateDecoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::Camellia>::CreateDecoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateEncoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateEncoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::Camellia>::CreateEncoder, COMDAT
; _this$ = ecx

; 96   : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateEncoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  00023	6a 60		 push	 96			; 00000060H
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	85 c0		 test	 eax, eax
  00039	74 21		 je	 SHORT $LN3@CreateEnco
  0003b	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  0003e	8b c8		 mov	 ecx, eax
  00040	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00043	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00046	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@Camellia@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Camellia::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 98   : 	}

  0004b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00055	59		 pop	 ecx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateEnco:

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  0005c	33 c0		 xor	 eax, eax

; 98   : 	}

  0005e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00061	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00068	59		 pop	 ecx
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	6a 60		 push	 96			; 00000060H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?CreateEncoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateEncoder@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::Camellia>::CreateEncoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetIVLength@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetIVLength@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::Camellia>::GetIVLength, COMDAT
; _this$ = ecx

; 93   : 	virtual int GetIVLength() const { return T::IV_LENGTH; }

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?GetIVLength@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::Camellia>::GetIVLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetDefaultKeyLength@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetDefaultKeyLength@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::Camellia>::GetDefaultKeyLength, COMDAT
; _this$ = ecx

; 92   : 	virtual int GetDefaultKeyLength() const { return T::DEFAULT_KEYLENGTH; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetDefaultKeyLength@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::Camellia>::GetDefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetBlockSize@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetBlockSize@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::Camellia>::GetBlockSize, COMDAT
; _this$ = ecx

; 91   : 	virtual int GetBlockSize() const { return T::BLOCKSIZE; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetBlockSize@?$BlockCipherDetail@VCamellia@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::Camellia>::GetBlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ??1?$BlockCipherDetail@VCamellia@CryptoPP@@@@UAE@XZ
_TEXT	SEGMENT
??1?$BlockCipherDetail@VCamellia@CryptoPP@@@@UAE@XZ PROC ; BlockCipherDetail<CryptoPP::Camellia>::~BlockCipherDetail<CryptoPP::Camellia>, COMDAT
; _this$ = ecx

; 89   : 	virtual ~BlockCipherDetail() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00006	c3		 ret	 0
??1?$BlockCipherDetail@VCamellia@CryptoPP@@@@UAE@XZ ENDP ; BlockCipherDetail<CryptoPP::Camellia>::~BlockCipherDetail<CryptoPP::Camellia>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UAEPAXI@Z PROC ; BlockCipherDetail<CryptoPP::DES_EDE2>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UAEPAXI@Z ENDP ; BlockCipherDetail<CryptoPP::DES_EDE2>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateDecoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateDecoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::DES_EDE2>::CreateDecoder, COMDAT
; _this$ = ecx

; 100  : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateDecoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  00023	68 70 01 00 00	 push	 368			; 00000170H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 21		 je	 SHORT $LN3@CreateDeco
  0003e	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00046	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 102  : 	}

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateDeco:

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  0005f	33 c0		 xor	 eax, eax

; 102  : 	}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	68 70 01 00 00	 push	 368			; 00000170H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?CreateDecoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateDecoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::DES_EDE2>::CreateDecoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateEncoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateEncoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::DES_EDE2>::CreateEncoder, COMDAT
; _this$ = ecx

; 96   : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateEncoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  00023	68 70 01 00 00	 push	 368			; 00000170H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 21		 je	 SHORT $LN3@CreateEnco
  0003e	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00046	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@DES_EDE2@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::DES_EDE2::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 98   : 	}

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateEnco:

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  0005f	33 c0		 xor	 eax, eax

; 98   : 	}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	68 70 01 00 00	 push	 368			; 00000170H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?CreateEncoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateEncoder@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::DES_EDE2>::CreateEncoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetIVLength@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetIVLength@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::DES_EDE2>::GetIVLength, COMDAT
; _this$ = ecx

; 93   : 	virtual int GetIVLength() const { return T::IV_LENGTH; }

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?GetIVLength@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::DES_EDE2>::GetIVLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetDefaultKeyLength@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetDefaultKeyLength@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::DES_EDE2>::GetDefaultKeyLength, COMDAT
; _this$ = ecx

; 92   : 	virtual int GetDefaultKeyLength() const { return T::DEFAULT_KEYLENGTH; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetDefaultKeyLength@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::DES_EDE2>::GetDefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetBlockSize@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetBlockSize@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::DES_EDE2>::GetBlockSize, COMDAT
; _this$ = ecx

; 91   : 	virtual int GetBlockSize() const { return T::BLOCKSIZE; }

  00000	b8 08 00 00 00	 mov	 eax, 8
  00005	c3		 ret	 0
?GetBlockSize@?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::DES_EDE2>::GetBlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ??1?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UAE@XZ
_TEXT	SEGMENT
??1?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UAE@XZ PROC ; BlockCipherDetail<CryptoPP::DES_EDE2>::~BlockCipherDetail<CryptoPP::DES_EDE2>, COMDAT
; _this$ = ecx

; 89   : 	virtual ~BlockCipherDetail() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00006	c3		 ret	 0
??1?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@UAE@XZ ENDP ; BlockCipherDetail<CryptoPP::DES_EDE2>::~BlockCipherDetail<CryptoPP::DES_EDE2>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$BlockCipherDetail@VIDEA@CryptoPP@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherDetail@VIDEA@CryptoPP@@@@UAEPAXI@Z PROC ; BlockCipherDetail<CryptoPP::IDEA>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$BlockCipherDetail@VIDEA@CryptoPP@@@@UAEPAXI@Z ENDP ; BlockCipherDetail<CryptoPP::IDEA>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateDecoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateDecoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::IDEA>::CreateDecoder, COMDAT
; _this$ = ecx

; 100  : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateDecoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  00023	68 30 01 00 00	 push	 304			; 00000130H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 21		 je	 SHORT $LN3@CreateDeco
  0003e	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00046	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 102  : 	}

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateDeco:

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  0005f	33 c0		 xor	 eax, eax

; 102  : 	}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	68 30 01 00 00	 push	 304			; 00000130H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?CreateDecoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateDecoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::IDEA>::CreateDecoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateEncoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateEncoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::IDEA>::CreateEncoder, COMDAT
; _this$ = ecx

; 96   : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateEncoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  00023	68 30 01 00 00	 push	 304			; 00000130H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 21		 je	 SHORT $LN3@CreateEnco
  0003e	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00046	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@IDEA@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::IDEA::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 98   : 	}

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateEnco:

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  0005f	33 c0		 xor	 eax, eax

; 98   : 	}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	68 30 01 00 00	 push	 304			; 00000130H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?CreateEncoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateEncoder@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::IDEA>::CreateEncoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetIVLength@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetIVLength@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::IDEA>::GetIVLength, COMDAT
; _this$ = ecx

; 93   : 	virtual int GetIVLength() const { return T::IV_LENGTH; }

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?GetIVLength@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::IDEA>::GetIVLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetDefaultKeyLength@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetDefaultKeyLength@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::IDEA>::GetDefaultKeyLength, COMDAT
; _this$ = ecx

; 92   : 	virtual int GetDefaultKeyLength() const { return T::DEFAULT_KEYLENGTH; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetDefaultKeyLength@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::IDEA>::GetDefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetBlockSize@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetBlockSize@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::IDEA>::GetBlockSize, COMDAT
; _this$ = ecx

; 91   : 	virtual int GetBlockSize() const { return T::BLOCKSIZE; }

  00000	b8 08 00 00 00	 mov	 eax, 8
  00005	c3		 ret	 0
?GetBlockSize@?$BlockCipherDetail@VIDEA@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::IDEA>::GetBlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ??1?$BlockCipherDetail@VIDEA@CryptoPP@@@@UAE@XZ
_TEXT	SEGMENT
??1?$BlockCipherDetail@VIDEA@CryptoPP@@@@UAE@XZ PROC	; BlockCipherDetail<CryptoPP::IDEA>::~BlockCipherDetail<CryptoPP::IDEA>, COMDAT
; _this$ = ecx

; 89   : 	virtual ~BlockCipherDetail() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00006	c3		 ret	 0
??1?$BlockCipherDetail@VIDEA@CryptoPP@@@@UAE@XZ ENDP	; BlockCipherDetail<CryptoPP::IDEA>::~BlockCipherDetail<CryptoPP::IDEA>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$BlockCipherDetail@VCAST256@CryptoPP@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherDetail@VCAST256@CryptoPP@@@@UAEPAXI@Z PROC ; BlockCipherDetail<CryptoPP::CAST256>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$BlockCipherDetail@VCAST256@CryptoPP@@@@UAEPAXI@Z ENDP ; BlockCipherDetail<CryptoPP::CAST256>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateDecoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateDecoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::CAST256>::CreateDecoder, COMDAT
; _this$ = ecx

; 100  : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateDecoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  00023	68 e8 01 00 00	 push	 488			; 000001e8H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 21		 je	 SHORT $LN3@CreateDeco
  0003e	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00046	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 102  : 	}

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateDeco:

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  0005f	33 c0		 xor	 eax, eax

; 102  : 	}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	68 e8 01 00 00	 push	 488			; 000001e8H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?CreateDecoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateDecoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::CAST256>::CreateDecoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateEncoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateEncoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::CAST256>::CreateEncoder, COMDAT
; _this$ = ecx

; 96   : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateEncoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  00023	68 e8 01 00 00	 push	 488			; 000001e8H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 21		 je	 SHORT $LN3@CreateEnco
  0003e	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00046	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VBase@CAST256@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::CAST256::Base>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 98   : 	}

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateEnco:

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  0005f	33 c0		 xor	 eax, eax

; 98   : 	}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	68 e8 01 00 00	 push	 488			; 000001e8H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?CreateEncoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateEncoder@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::CAST256>::CreateEncoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetIVLength@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetIVLength@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::CAST256>::GetIVLength, COMDAT
; _this$ = ecx

; 93   : 	virtual int GetIVLength() const { return T::IV_LENGTH; }

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?GetIVLength@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::CAST256>::GetIVLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetDefaultKeyLength@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetDefaultKeyLength@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::CAST256>::GetDefaultKeyLength, COMDAT
; _this$ = ecx

; 92   : 	virtual int GetDefaultKeyLength() const { return T::DEFAULT_KEYLENGTH; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetDefaultKeyLength@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::CAST256>::GetDefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetBlockSize@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetBlockSize@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::CAST256>::GetBlockSize, COMDAT
; _this$ = ecx

; 91   : 	virtual int GetBlockSize() const { return T::BLOCKSIZE; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetBlockSize@?$BlockCipherDetail@VCAST256@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::CAST256>::GetBlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ??1?$BlockCipherDetail@VCAST256@CryptoPP@@@@UAE@XZ
_TEXT	SEGMENT
??1?$BlockCipherDetail@VCAST256@CryptoPP@@@@UAE@XZ PROC	; BlockCipherDetail<CryptoPP::CAST256>::~BlockCipherDetail<CryptoPP::CAST256>, COMDAT
; _this$ = ecx

; 89   : 	virtual ~BlockCipherDetail() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00006	c3		 ret	 0
??1?$BlockCipherDetail@VCAST256@CryptoPP@@@@UAE@XZ ENDP	; BlockCipherDetail<CryptoPP::CAST256>::~BlockCipherDetail<CryptoPP::CAST256>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$BlockCipherDetail@VSerpent@CryptoPP@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherDetail@VSerpent@CryptoPP@@@@UAEPAXI@Z PROC ; BlockCipherDetail<CryptoPP::Serpent>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$BlockCipherDetail@VSerpent@CryptoPP@@@@UAEPAXI@Z ENDP ; BlockCipherDetail<CryptoPP::Serpent>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateDecoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateDecoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::Serpent>::CreateDecoder, COMDAT
; _this$ = ecx

; 100  : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateDecoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  00023	68 70 02 00 00	 push	 624			; 00000270H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 21		 je	 SHORT $LN3@CreateDeco
  0003e	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00046	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 102  : 	}

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateDeco:

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  0005f	33 c0		 xor	 eax, eax

; 102  : 	}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	68 70 02 00 00	 push	 624			; 00000270H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?CreateDecoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateDecoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::Serpent>::CreateDecoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateEncoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateEncoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::Serpent>::CreateEncoder, COMDAT
; _this$ = ecx

; 96   : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateEncoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  00023	68 70 02 00 00	 push	 624			; 00000270H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 21		 je	 SHORT $LN3@CreateEnco
  0003e	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00046	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Serpent@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Serpent::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 98   : 	}

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateEnco:

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  0005f	33 c0		 xor	 eax, eax

; 98   : 	}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	68 70 02 00 00	 push	 624			; 00000270H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?CreateEncoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateEncoder@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::Serpent>::CreateEncoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetIVLength@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetIVLength@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::Serpent>::GetIVLength, COMDAT
; _this$ = ecx

; 93   : 	virtual int GetIVLength() const { return T::IV_LENGTH; }

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?GetIVLength@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::Serpent>::GetIVLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetDefaultKeyLength@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetDefaultKeyLength@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::Serpent>::GetDefaultKeyLength, COMDAT
; _this$ = ecx

; 92   : 	virtual int GetDefaultKeyLength() const { return T::DEFAULT_KEYLENGTH; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetDefaultKeyLength@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::Serpent>::GetDefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetBlockSize@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetBlockSize@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::Serpent>::GetBlockSize, COMDAT
; _this$ = ecx

; 91   : 	virtual int GetBlockSize() const { return T::BLOCKSIZE; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetBlockSize@?$BlockCipherDetail@VSerpent@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::Serpent>::GetBlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ??1?$BlockCipherDetail@VSerpent@CryptoPP@@@@UAE@XZ
_TEXT	SEGMENT
??1?$BlockCipherDetail@VSerpent@CryptoPP@@@@UAE@XZ PROC	; BlockCipherDetail<CryptoPP::Serpent>::~BlockCipherDetail<CryptoPP::Serpent>, COMDAT
; _this$ = ecx

; 89   : 	virtual ~BlockCipherDetail() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00006	c3		 ret	 0
??1?$BlockCipherDetail@VSerpent@CryptoPP@@@@UAE@XZ ENDP	; BlockCipherDetail<CryptoPP::Serpent>::~BlockCipherDetail<CryptoPP::Serpent>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$BlockCipherDetail@VTwofish@CryptoPP@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherDetail@VTwofish@CryptoPP@@@@UAEPAXI@Z PROC ; BlockCipherDetail<CryptoPP::Twofish>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$BlockCipherDetail@VTwofish@CryptoPP@@@@UAEPAXI@Z ENDP ; BlockCipherDetail<CryptoPP::Twofish>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateDecoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateDecoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::Twofish>::CreateDecoder, COMDAT
; _this$ = ecx

; 100  : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateDecoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  00023	68 10 11 00 00	 push	 4368			; 00001110H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 21		 je	 SHORT $LN3@CreateDeco
  0003e	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00046	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 102  : 	}

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateDeco:

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  0005f	33 c0		 xor	 eax, eax

; 102  : 	}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	68 10 11 00 00	 push	 4368			; 00001110H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?CreateDecoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateDecoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::Twofish>::CreateDecoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateEncoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateEncoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::Twofish>::CreateEncoder, COMDAT
; _this$ = ecx

; 96   : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateEncoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  00023	68 10 11 00 00	 push	 4368			; 00001110H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 21		 je	 SHORT $LN3@CreateEnco
  0003e	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00046	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@Twofish@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::Twofish::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 98   : 	}

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateEnco:

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  0005f	33 c0		 xor	 eax, eax

; 98   : 	}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	68 10 11 00 00	 push	 4368			; 00001110H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?CreateEncoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateEncoder@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::Twofish>::CreateEncoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetIVLength@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetIVLength@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::Twofish>::GetIVLength, COMDAT
; _this$ = ecx

; 93   : 	virtual int GetIVLength() const { return T::IV_LENGTH; }

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?GetIVLength@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::Twofish>::GetIVLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetDefaultKeyLength@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetDefaultKeyLength@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::Twofish>::GetDefaultKeyLength, COMDAT
; _this$ = ecx

; 92   : 	virtual int GetDefaultKeyLength() const { return T::DEFAULT_KEYLENGTH; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetDefaultKeyLength@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::Twofish>::GetDefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetBlockSize@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetBlockSize@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::Twofish>::GetBlockSize, COMDAT
; _this$ = ecx

; 91   : 	virtual int GetBlockSize() const { return T::BLOCKSIZE; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetBlockSize@?$BlockCipherDetail@VTwofish@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::Twofish>::GetBlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ??1?$BlockCipherDetail@VTwofish@CryptoPP@@@@UAE@XZ
_TEXT	SEGMENT
??1?$BlockCipherDetail@VTwofish@CryptoPP@@@@UAE@XZ PROC	; BlockCipherDetail<CryptoPP::Twofish>::~BlockCipherDetail<CryptoPP::Twofish>, COMDAT
; _this$ = ecx

; 89   : 	virtual ~BlockCipherDetail() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00006	c3		 ret	 0
??1?$BlockCipherDetail@VTwofish@CryptoPP@@@@UAE@XZ ENDP	; BlockCipherDetail<CryptoPP::Twofish>::~BlockCipherDetail<CryptoPP::Twofish>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$BlockCipherDetail@VMARS@CryptoPP@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherDetail@VMARS@CryptoPP@@@@UAEPAXI@Z PROC ; BlockCipherDetail<CryptoPP::MARS>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$BlockCipherDetail@VMARS@CryptoPP@@@@UAEPAXI@Z ENDP ; BlockCipherDetail<CryptoPP::MARS>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateDecoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateDecoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::MARS>::CreateDecoder, COMDAT
; _this$ = ecx

; 100  : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateDecoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  00023	68 00 01 00 00	 push	 256			; 00000100H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 21		 je	 SHORT $LN3@CreateDeco
  0003e	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00046	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 102  : 	}

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateDeco:

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  0005f	33 c0		 xor	 eax, eax

; 102  : 	}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	68 00 01 00 00	 push	 256			; 00000100H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?CreateDecoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateDecoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::MARS>::CreateDecoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateEncoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateEncoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::MARS>::CreateEncoder, COMDAT
; _this$ = ecx

; 96   : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateEncoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  00023	68 00 01 00 00	 push	 256			; 00000100H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 21		 je	 SHORT $LN3@CreateEnco
  0003e	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  00041	8b c8		 mov	 ecx, eax
  00043	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00046	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00049	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@MARS@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::MARS::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 98   : 	}

  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateEnco:

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  0005f	33 c0		 xor	 eax, eax

; 98   : 	}

  00061	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00064	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006b	59		 pop	 ecx
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	68 00 01 00 00	 push	 256			; 00000100H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?CreateEncoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateEncoder@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::MARS>::CreateEncoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetIVLength@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetIVLength@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::MARS>::GetIVLength, COMDAT
; _this$ = ecx

; 93   : 	virtual int GetIVLength() const { return T::IV_LENGTH; }

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?GetIVLength@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::MARS>::GetIVLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetDefaultKeyLength@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetDefaultKeyLength@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::MARS>::GetDefaultKeyLength, COMDAT
; _this$ = ecx

; 92   : 	virtual int GetDefaultKeyLength() const { return T::DEFAULT_KEYLENGTH; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetDefaultKeyLength@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::MARS>::GetDefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetBlockSize@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetBlockSize@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::MARS>::GetBlockSize, COMDAT
; _this$ = ecx

; 91   : 	virtual int GetBlockSize() const { return T::BLOCKSIZE; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetBlockSize@?$BlockCipherDetail@VMARS@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::MARS>::GetBlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ??1?$BlockCipherDetail@VMARS@CryptoPP@@@@UAE@XZ
_TEXT	SEGMENT
??1?$BlockCipherDetail@VMARS@CryptoPP@@@@UAE@XZ PROC	; BlockCipherDetail<CryptoPP::MARS>::~BlockCipherDetail<CryptoPP::MARS>, COMDAT
; _this$ = ecx

; 89   : 	virtual ~BlockCipherDetail() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00006	c3		 ret	 0
??1?$BlockCipherDetail@VMARS@CryptoPP@@@@UAE@XZ ENDP	; BlockCipherDetail<CryptoPP::MARS>::~BlockCipherDetail<CryptoPP::MARS>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$BlockCipherDetail@VRC6@CryptoPP@@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$BlockCipherDetail@VRC6@CryptoPP@@@@UAEPAXI@Z PROC	; BlockCipherDetail<CryptoPP::RC6>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_G?$BlockCipherDetail@VRC6@CryptoPP@@@@UAEPAXI@Z ENDP	; BlockCipherDetail<CryptoPP::RC6>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateDecoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateDecoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::RC6>::CreateDecoder, COMDAT
; _this$ = ecx

; 100  : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateDecoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  00023	6a 60		 push	 96			; 00000060H
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	85 c0		 test	 eax, eax
  00039	74 21		 je	 SHORT $LN3@CreateDeco
  0003b	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  0003e	8b c8		 mov	 ecx, eax
  00040	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00043	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00046	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 102  : 	}

  0004b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00055	59		 pop	 ecx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateDeco:

; 101  : 			return new CTR_Mode<T>::Decryption(key, keylen, iv);

  0005c	33 c0		 xor	 eax, eax

; 102  : 	}

  0005e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00061	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00068	59		 pop	 ecx
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateDecoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	6a 60		 push	 96			; 00000060H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?CreateDecoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateDecoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateDecoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::RC6>::CreateDecoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CreateEncoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_key$ = 8						; size = 4
_keylen$ = 12						; size = 4
_iv$ = 16						; size = 4
?CreateEncoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z PROC ; BlockCipherDetail<CryptoPP::RC6>::CreateEncoder, COMDAT
; _this$ = ecx

; 96   : 		const byte* iv) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CreateEncoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  00023	6a 60		 push	 96			; 00000060H
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	83 c4 04	 add	 esp, 4
  0002d	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00037	85 c0		 test	 eax, eax
  00039	74 21		 je	 SHORT $LN3@CreateEnco
  0003b	ff 75 10	 push	 DWORD PTR _iv$[ebp]
  0003e	8b c8		 mov	 ecx, eax
  00040	ff 75 0c	 push	 DWORD PTR _keylen$[ebp]
  00043	ff 75 08	 push	 DWORD PTR _key$[ebp]
  00046	e8 00 00 00 00	 call	 ??0?$CipherModeFinalTemplate_CipherHolder@V?$BlockCipherFinal@$0A@VEnc@RC6@CryptoPP@@@CryptoPP@@V?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@2@@CryptoPP@@QAE@PBEI0@Z ; CryptoPP::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >::CipherModeFinalTemplate_CipherHolder<CryptoPP::BlockCipherFinal<0,CryptoPP::RC6::Enc>,CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy> >

; 98   : 	}

  0004b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00055	59		 pop	 ecx
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c2 0c 00	 ret	 12			; 0000000cH
$LN3@CreateEnco:

; 97   : 			return new CTR_Mode<T>::Encryption(key, keylen, iv);

  0005c	33 c0		 xor	 eax, eax

; 98   : 	}

  0005e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00061	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00068	59		 pop	 ecx
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateEncoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z$0:
  00000	6a 60		 push	 96			; 00000060H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?CreateEncoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CreateEncoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CreateEncoder@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEPAVSymmetricCipher@CryptoPP@@PBEI0@Z ENDP ; BlockCipherDetail<CryptoPP::RC6>::CreateEncoder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetIVLength@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetIVLength@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::RC6>::GetIVLength, COMDAT
; _this$ = ecx

; 93   : 	virtual int GetIVLength() const { return T::IV_LENGTH; }

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?GetIVLength@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::RC6>::GetIVLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetDefaultKeyLength@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetDefaultKeyLength@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::RC6>::GetDefaultKeyLength, COMDAT
; _this$ = ecx

; 92   : 	virtual int GetDefaultKeyLength() const { return T::DEFAULT_KEYLENGTH; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetDefaultKeyLength@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::RC6>::GetDefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?GetBlockSize@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEHXZ
_TEXT	SEGMENT
?GetBlockSize@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEHXZ PROC ; BlockCipherDetail<CryptoPP::RC6>::GetBlockSize, COMDAT
; _this$ = ecx

; 91   : 	virtual int GetBlockSize() const { return T::BLOCKSIZE; }

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetBlockSize@?$BlockCipherDetail@VRC6@CryptoPP@@@@UBEHXZ ENDP ; BlockCipherDetail<CryptoPP::RC6>::GetBlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ??1?$BlockCipherDetail@VRC6@CryptoPP@@@@UAE@XZ
_TEXT	SEGMENT
??1?$BlockCipherDetail@VRC6@CryptoPP@@@@UAE@XZ PROC	; BlockCipherDetail<CryptoPP::RC6>::~BlockCipherDetail<CryptoPP::RC6>, COMDAT
; _this$ = ecx

; 89   : 	virtual ~BlockCipherDetail() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00006	c3		 ret	 0
??1?$BlockCipherDetail@VRC6@CryptoPP@@@@UAE@XZ ENDP	; BlockCipherDetail<CryptoPP::RC6>::~BlockCipherDetail<CryptoPP::RC6>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\memory
;	COMDAT ??1?$auto_ptr@UBlockCipherAlgorithm@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$auto_ptr@UBlockCipherAlgorithm@@@std@@QAE@XZ PROC	; std::auto_ptr<BlockCipherAlgorithm>::~auto_ptr<BlockCipherAlgorithm>, COMDAT
; _this$ = ecx

; 521  :         delete _Myptr;

  00000	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00002	85 c9		 test	 ecx, ecx
  00004	74 06		 je	 SHORT $LN3@auto_ptr
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	6a 01		 push	 1
  0000a	ff 10		 call	 DWORD PTR [eax]
$LN3@auto_ptr:

; 522  :     }

  0000c	c3		 ret	 0
??1?$auto_ptr@UBlockCipherAlgorithm@@@std@@QAE@XZ ENDP	; std::auto_ptr<BlockCipherAlgorithm>::~auto_ptr<BlockCipherAlgorithm>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GDH2KeyAgreement@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GDH2KeyAgreement@@UAEPAXI@Z PROC			; DH2KeyAgreement::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1DH2KeyAgreement@@UAE@XZ ; DH2KeyAgreement::~DH2KeyAgreement
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0e		 je	 SHORT $LN4@scalar
  00011	68 a8 00 00 00	 push	 168			; 000000a8H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_GDH2KeyAgreement@@UAEPAXI@Z ENDP			; DH2KeyAgreement::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?Agree@DH2KeyAgreement@@UAE_NIPBXI@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_spub_key_length$1$ = 8					; size = 4
_agreed_length$ = 8					; size = 4
_buffer$ = 12						; size = 4
_length$ = 16						; size = 4
?Agree@DH2KeyAgreement@@UAE_NIPBXI@Z PROC		; DH2KeyAgreement::Agree, COMDAT
; _this$ = ecx

; 426  : bool DH2KeyAgreement::Agree(size_t agreed_length, const void* buffer, size_t length) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 427  : 	if (agreed_length != dh2_.AgreedValueLength()) {

  00008	8b 86 84 00 00
	00		 mov	 eax, DWORD PTR [esi+132]
  0000e	8d 9e 84 00 00
	00		 lea	 ebx, DWORD PTR [esi+132]
  00014	57		 push	 edi
  00015	8b cb		 mov	 ecx, ebx
  00017	89 75 fc	 mov	 DWORD PTR _this$1$[ebp], esi
  0001a	ff 50 1c	 call	 DWORD PTR [eax+28]
  0001d	39 45 08	 cmp	 DWORD PTR _agreed_length$[ebp], eax
  00020	75 74		 jne	 SHORT $LN10@Agree

; 428  : 		// Shared secret size mismatch
; 429  : 		return false;
; 430  : 	}
; 431  : 	const size_t spub_key_length = dh2_.StaticPublicKeyLength();

  00022	8b 03		 mov	 eax, DWORD PTR [ebx]
  00024	8b cb		 mov	 ecx, ebx
  00026	ff 50 24	 call	 DWORD PTR [eax+36]

; 432  : 	const size_t epub_key_length = dh2_.EphemeralPublicKeyLength();

  00029	8b 13		 mov	 edx, DWORD PTR [ebx]
  0002b	8b f8		 mov	 edi, eax
  0002d	8b cb		 mov	 ecx, ebx
  0002f	89 7d 08	 mov	 DWORD PTR _spub_key_length$1$[ebp], edi
  00032	ff 52 38	 call	 DWORD PTR [edx+56]

; 433  : 	if (length != (spub_key_length + epub_key_length)) {

  00035	03 c7		 add	 eax, edi
  00037	39 45 10	 cmp	 DWORD PTR _length$[ebp], eax
  0003a	75 5a		 jne	 SHORT $LN10@Agree

; 434  : 		// Wrong data length
; 435  : 		return false;
; 436  : 	}
; 437  : 	shared_.New(dh2_.AgreedValueLength());

  0003c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0003e	8b cb		 mov	 ecx, ebx
  00040	ff 50 1c	 call	 DWORD PTR [eax+28]
  00043	83 c6 04	 add	 esi, 4
  00046	8b f8		 mov	 edi, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 117  : 		return StandardReallocate(*this, p, oldSize, newSize, preserve);

  00048	6a 00		 push	 0
  0004a	57		 push	 edi
  0004b	ff 76 04	 push	 DWORD PTR [esi+4]
  0004e	ff 76 08	 push	 DWORD PTR [esi+8]
  00051	56		 push	 esi
  00052	e8 00 00 00 00	 call	 ??$StandardReallocate@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@YAPAEAAV?$AllocatorWithCleanup@E$0A@@0@PAEII_N@Z ; CryptoPP::StandardReallocate<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 439  : 	if (!dh2_.Agree(shared_, spriv_key_, epriv_key_, buf, buf + spub_key_length)) {

  00057	8b 55 0c	 mov	 edx, DWORD PTR _buffer$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 117  : 		return StandardReallocate(*this, p, oldSize, newSize, preserve);

  0005a	83 c4 14	 add	 esp, 20			; 00000014H

; 363  : 		m_ptr = m_alloc.reallocate(m_ptr, m_size, newSize, false);

  0005d	89 46 08	 mov	 DWORD PTR [esi+8], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 439  : 	if (!dh2_.Agree(shared_, spriv_key_, epriv_key_, buf, buf + spub_key_length)) {

  00060	8b cb		 mov	 ecx, ebx
  00062	8b 45 08	 mov	 eax, DWORD PTR _spub_key_length$1$[ebp]
  00065	03 c2		 add	 eax, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 364  : 		m_size = newSize;

  00067	89 7e 04	 mov	 DWORD PTR [esi+4], edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 439  : 	if (!dh2_.Agree(shared_, spriv_key_, epriv_key_, buf, buf + spub_key_length)) {

  0006a	8b 33		 mov	 esi, DWORD PTR [ebx]
  0006c	6a 01		 push	 1
  0006e	50		 push	 eax
  0006f	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  00072	52		 push	 edx
  00073	ff b0 a4 00 00
	00		 push	 DWORD PTR [eax+164]
  00079	ff b0 98 00 00
	00		 push	 DWORD PTR [eax+152]
  0007f	ff 70 0c	 push	 DWORD PTR [eax+12]
  00082	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  00085	ff d0		 call	 eax
  00087	84 c0		 test	 al, al
  00089	74 0b		 je	 SHORT $LN10@Agree

; 440  : 		// Failed to reach shared secret
; 441  : 		return false;
; 442  : 	}
; 443  : 	return true;
; 444  : }

  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi
  0008d	b0 01		 mov	 al, 1
  0008f	5b		 pop	 ebx
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c2 0c 00	 ret	 12			; 0000000cH
$LN10@Agree:
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	32 c0		 xor	 al, al
  0009a	5b		 pop	 ebx
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 0c 00	 ret	 12			; 0000000cH
?Agree@DH2KeyAgreement@@UAE_NIPBXI@Z ENDP		; DH2KeyAgreement::Agree
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\osrng.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\osrng.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\nbtheory.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z
_TEXT	SEGMENT
_v$ = -244						; size = 20
_p$ = -224						; size = 20
_g$ = -204						; size = 20
_q$ = -184						; size = 20
_spub_key$ = -164					; size = 12
_epub_key$ = -152					; size = 12
_buffer$GSCopy$1$ = -140				; size = 4
$T2 = -136						; size = 4
$T3 = -132						; size = 4
_this$GSCopy$1$ = -128					; size = 4
_length$GSCopy$1$ = -124				; size = 4
_p$1$ = -124						; size = 4
_p$1$ = -124						; size = 4
_p$1$ = -124						; size = 4
_p$1$ = -124						; size = 4
_rnd$ = -120						; size = 96
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
_length$ = 12						; size = 4
?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z PROC		; DH2KeyAgreement::Prepare, COMDAT
; _this$ = ecx

; 340  : size_t DH2KeyAgreement::Prepare(void* buffer, size_t* length) {

  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f8	 and	 esp, -8			; fffffff8H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	6a ff		 push	 -1
  00018	68 00 00 00 00	 push	 __ehhandler$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z
  0001d	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00023	50		 push	 eax
  00024	53		 push	 ebx
  00025	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00030	33 c5		 xor	 eax, ebp
  00032	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00035	56		 push	 esi
  00036	57		 push	 edi
  00037	50		 push	 eax
  00038	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003b	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00041	8b f1		 mov	 esi, ecx
  00043	89 75 80	 mov	 DWORD PTR _this$GSCopy$1$[ebp], esi
  00046	8b 43 08	 mov	 eax, DWORD PTR _buffer$[ebx]

; 341  : #ifdef __THEMIDA__
; 342  : 	VM_START
; 343  : #endif
; 344  : 
; 345  : 	// RFC 5114, 1024-bit MODP Group with 160-bit Prime Order Subgroup
; 346  : 	// http://tools.ietf.org/html/rfc5114#section-2.1
; 347  : 	Integer p("0xB10B8F96A080E01DDE92DE5EAE5D54EC52C99FBCFB06A3C6"

  00049	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _p$[ebp]
  0004f	89 85 74 ff ff
	ff		 mov	 DWORD PTR _buffer$GSCopy$1$[ebp], eax
  00055	8b 43 0c	 mov	 eax, DWORD PTR _length$[ebx]
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0BAD@CBGKIGNF@0xB10B8F96A080E01DDE92DE5EAE5D5@
  0005d	89 45 84	 mov	 DWORD PTR _length$GSCopy$1$[ebp], eax
  00060	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@PBD@Z ; CryptoPP::Integer::Integer

; 348  : 		"9A6A9DCA52D23B616073E28675A23D189838EF1E2EE652C0"
; 349  : 		"13ECB4AEA906112324975C3CD49B83BFACCBDD7D90C4BD70"
; 350  : 		"98488E9C219A73724EFFD6FAE5644738FAA31A4FF55BCCC0"
; 351  : 		"A151AF5F0DC8B4BD45BF37DF365C1A65E68CFDA76D4DA708"
; 352  : 		"DF1FB2BC2E4A4371");
; 353  : 
; 354  : 	Integer g("0xA4D1CBD5C3FD34126765A442EFB99905F8104DD258AC507F"

  00065	68 00 00 00 00	 push	 OFFSET ??_C@_0BAD@DPJDDMGO@0xA4D1CBD5C3FD34126765A442EFB99@
  0006a	8d 8d 34 ff ff
	ff		 lea	 ecx, DWORD PTR _g$[ebp]
  00070	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00077	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@PBD@Z ; CryptoPP::Integer::Integer

; 361  : 	Integer q("0xF518AA8781A8DF278ABA4E7D64B7CB9D49462353");

  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@PHIFDFBK@0xF518AA8781A8DF278ABA4E7D64B7C@
  00081	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR _q$[ebp]
  00087	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0008b	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@PBD@Z ; CryptoPP::Integer::Integer
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\osrng.h

; 90   : 	explicit AutoSeededRandomPool(bool blocking = false, unsigned int seedSize = 32)

  00090	8d 4d 88	 lea	 ecx, DWORD PTR _rnd$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 361  : 	Integer q("0xF518AA8781A8DF278ABA4E7D64B7CB9D49462353");

  00093	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\osrng.h

; 90   : 	explicit AutoSeededRandomPool(bool blocking = false, unsigned int seedSize = 32)

  00097	e8 00 00 00 00	 call	 ??0RandomPool@CryptoPP@@QAE@XZ ; CryptoPP::RandomPool::RandomPool

; 91   : 		{Reseed(blocking, seedSize);}

  0009c	6a 20		 push	 32			; 00000020H
  0009e	6a 00		 push	 0
  000a0	8d 4d 88	 lea	 ecx, DWORD PTR _rnd$[ebp]
  000a3	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000a7	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _rnd$[ebp], OFFSET ??_7AutoSeededRandomPool@CryptoPP@@6B@
  000ae	e8 00 00 00 00	 call	 ?Reseed@AutoSeededRandomPool@CryptoPP@@QAEX_NI@Z ; CryptoPP::AutoSeededRandomPool::Reseed
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h

; 35   : 		{SetModulusAndSubgroupGenerator(p, g); SetSubgroupOrder(q);}

  000b3	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  000b6	8d 8d 34 ff ff
	ff		 lea	 ecx, DWORD PTR _g$[ebp]
  000bc	51		 push	 ecx
  000bd	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _p$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 371  : 	AutoSeededRandomPool rnd;

  000c3	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h

; 35   : 		{SetModulusAndSubgroupGenerator(p, g); SetSubgroupOrder(q);}

  000c7	51		 push	 ecx
  000c8	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  000cb	ff 50 14	 call	 DWORD PTR [eax+20]

; 68   : 		{m_q = q; ParametersChanged();}

  000ce	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _q$[ebp]
  000d4	50		 push	 eax
  000d5	8d 4e 24	 lea	 ecx, DWORD PTR [esi+36]
  000d8	e8 00 00 00 00	 call	 ??4Integer@CryptoPP@@QAEAAV01@ABV01@@Z ; CryptoPP::Integer::operator=
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 375  : 	if(!dh_.GetGroupParameters().ValidateGroup(rnd, 3)) {

  000dd	8d 4e 18	 lea	 ecx, DWORD PTR [esi+24]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h

; 68   : 		{m_q = q; ParametersChanged();}

  000e0	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 375  : 	if(!dh_.GetGroupParameters().ValidateGroup(rnd, 3)) {

  000e7	8b 01		 mov	 eax, DWORD PTR [ecx]
  000e9	8d 55 88	 lea	 edx, DWORD PTR _rnd$[ebp]
  000ec	6a 03		 push	 3
  000ee	52		 push	 edx
  000ef	8b 40 40	 mov	 eax, DWORD PTR [eax+64]
  000f2	ff d0		 call	 eax
  000f4	84 c0		 test	 al, al
  000f6	75 07		 jne	 SHORT $LN2@Prepare
  000f8	33 f6		 xor	 esi, esi
  000fa	e9 6a 02 00 00	 jmp	 $LN105@Prepare
$LN2@Prepare:

; 376  : 		// Failed to validate prime and generator
; 377  : 		return 0;
; 378  : 	}
; 379  : 
; 380  : 	size_t count = 0;
; 381  : 
; 382  : 	p = dh_.GetGroupParameters().GetModulus();

  000ff	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00102	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00105	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00108	ff d0		 call	 eax
  0010a	50		 push	 eax
  0010b	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _p$[ebp]
  00111	e8 00 00 00 00	 call	 ??4Integer@CryptoPP@@QAEAAV01@ABV01@@Z ; CryptoPP::Integer::operator=

; 383  : 	q = dh_.GetGroupParameters().GetSubgroupOrder();

  00116	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00119	8d 4e 18	 lea	 ecx, DWORD PTR [esi+24]
  0011c	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  0011f	ff d0		 call	 eax
  00121	50		 push	 eax
  00122	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR _q$[ebp]
  00128	e8 00 00 00 00	 call	 ??4Integer@CryptoPP@@QAEAAV01@ABV01@@Z ; CryptoPP::Integer::operator=
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h

; 104  :     const Integer & GetGenerator() const {return this->m_gpc.GetBase(this->GetGroupPrecomputation());}

  0012d	8b 4d 80	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00130	8b 7e 40	 mov	 edi, DWORD PTR [esi+64]
  00133	83 c1 18	 add	 ecx, 24			; 00000018H
  00136	8b 01		 mov	 eax, DWORD PTR [ecx]
  00138	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  0013b	ff d0		 call	 eax
  0013d	50		 push	 eax
  0013e	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00141	8d 4e 40	 lea	 ecx, DWORD PTR [esi+64]
  00144	ff d0		 call	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 384  : 	g = dh_.GetGroupParameters().GetGenerator();

  00146	50		 push	 eax
  00147	8d 8d 34 ff ff
	ff		 lea	 ecx, DWORD PTR _g$[ebp]
  0014d	e8 00 00 00 00	 call	 ??4Integer@CryptoPP@@QAEAAV01@ABV01@@Z ; CryptoPP::Integer::operator=
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\nbtheory.h

; 85   : 	{return a_exp_b_mod_c(a, e, m);}

  00152	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _p$[ebp]
  00158	50		 push	 eax
  00159	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _q$[ebp]
  0015f	50		 push	 eax
  00160	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _g$[ebp]
  00166	50		 push	 eax
  00167	8d 85 0c ff ff
	ff		 lea	 eax, DWORD PTR _v$[ebp]
  0016d	50		 push	 eax
  0016e	e8 00 00 00 00	 call	 ?a_exp_b_mod_c@CryptoPP@@YA?AVInteger@1@ABV21@00@Z ; CryptoPP::a_exp_b_mod_c
  00173	83 c4 10	 add	 esp, 16			; 00000010H
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 387  : 	Integer v = ModularExponentiation(g, q, p);

  00176	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 389  : 	if(v != Integer::One()) {

  0017a	e8 00 00 00 00	 call	 ?One@Integer@CryptoPP@@SAABV12@XZ ; CryptoPP::Integer::One
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 385  : inline bool operator!=(const CryptoPP::Integer& a, const CryptoPP::Integer& b) {return a.Compare(b)!=0;}

  0017f	50		 push	 eax
  00180	8d 8d 0c ff ff
	ff		 lea	 ecx, DWORD PTR _v$[ebp]
  00186	e8 00 00 00 00	 call	 ?Compare@Integer@CryptoPP@@QBEHABV12@@Z ; CryptoPP::Integer::Compare
  0018b	85 c0		 test	 eax, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 389  : 	if(v != Integer::One()) {

  0018d	74 07		 je	 SHORT $LN3@Prepare
  0018f	33 f6		 xor	 esi, esi
  00191	e9 9a 01 00 00	 jmp	 $LN76@Prepare
$LN3@Prepare:

; 390  : 		// Failed to verify order of the subgroup
; 391  : 		return 0;
; 392  : 	}
; 393  : 
; 394  : 	//////////////////////////////////////////////////////////////
; 395  : 
; 396  : 	spriv_key_.New(dh2_.StaticPrivateKeyLength());

  00196	8b 75 80	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00199	8b 86 84 00 00
	00		 mov	 eax, DWORD PTR [esi+132]
  0019f	8d 8e 84 00 00
	00		 lea	 ecx, DWORD PTR [esi+132]
  001a5	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  001a8	ff d0		 call	 eax
  001aa	81 c6 90 00 00
	00		 add	 esi, 144		; 00000090H
  001b0	8b f8		 mov	 edi, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 117  : 		return StandardReallocate(*this, p, oldSize, newSize, preserve);

  001b2	6a 00		 push	 0
  001b4	57		 push	 edi
  001b5	ff 76 04	 push	 DWORD PTR [esi+4]
  001b8	ff 76 08	 push	 DWORD PTR [esi+8]
  001bb	56		 push	 esi
  001bc	e8 00 00 00 00	 call	 ??$StandardReallocate@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@YAPAEAAV?$AllocatorWithCleanup@E$0A@@0@PAEII_N@Z ; CryptoPP::StandardReallocate<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >

; 363  : 		m_ptr = m_alloc.reallocate(m_ptr, m_size, newSize, false);

  001c1	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 117  : 		return StandardReallocate(*this, p, oldSize, newSize, preserve);

  001c4	83 c4 14	 add	 esp, 20			; 00000014H

; 364  : 		m_size = newSize;

  001c7	89 7e 04	 mov	 DWORD PTR [esi+4], edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 397  : 	epriv_key_.New(dh2_.EphemeralPrivateKeyLength());

  001ca	8b 75 80	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  001cd	8b 86 84 00 00
	00		 mov	 eax, DWORD PTR [esi+132]
  001d3	8d 8e 84 00 00
	00		 lea	 ecx, DWORD PTR [esi+132]
  001d9	8b 40 34	 mov	 eax, DWORD PTR [eax+52]
  001dc	ff d0		 call	 eax
  001de	81 c6 9c 00 00
	00		 add	 esi, 156		; 0000009cH
  001e4	8b f8		 mov	 edi, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 117  : 		return StandardReallocate(*this, p, oldSize, newSize, preserve);

  001e6	6a 00		 push	 0
  001e8	57		 push	 edi
  001e9	ff 76 04	 push	 DWORD PTR [esi+4]
  001ec	ff 76 08	 push	 DWORD PTR [esi+8]
  001ef	56		 push	 esi
  001f0	e8 00 00 00 00	 call	 ??$StandardReallocate@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@YAPAEAAV?$AllocatorWithCleanup@E$0A@@0@PAEII_N@Z ; CryptoPP::StandardReallocate<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >

; 363  : 		m_ptr = m_alloc.reallocate(m_ptr, m_size, newSize, false);

  001f5	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 117  : 		return StandardReallocate(*this, p, oldSize, newSize, preserve);

  001f8	83 c4 14	 add	 esp, 20			; 00000014H

; 364  : 		m_size = newSize;

  001fb	89 7e 04	 mov	 DWORD PTR [esi+4], edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 398  : 	SecByteBlock spub_key(dh2_.StaticPublicKeyLength());

  001fe	8b 75 80	 mov	 esi, DWORD PTR _this$GSCopy$1$[ebp]
  00201	81 c6 84 00 00
	00		 add	 esi, 132		; 00000084H
  00207	8b ce		 mov	 ecx, esi
  00209	8b 06		 mov	 eax, DWORD PTR [esi]
  0020b	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  0020e	ff d0		 call	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00210	89 85 60 ff ff
	ff		 mov	 DWORD PTR _spub_key$[ebp+4], eax

; 92   : 		if (n == 0)

  00216	85 c0		 test	 eax, eax
  00218	75 0a		 jne	 SHORT $LN42@Prepare

; 93   : 			return NULL;

  0021a	33 ff		 xor	 edi, edi
  0021c	89 bd 78 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], edi
  00222	eb 11		 jmp	 SHORT $LN41@Prepare
$LN42@Prepare:

; 94   : 
; 95   : #if CRYPTOPP_BOOL_ALIGN16_ENABLED
; 96   : 		if (T_Align16 && n*sizeof(T) >= 16)
; 97   : 			return (pointer)AlignedAllocate(n*sizeof(T));
; 98   : #endif
; 99   : 
; 100  : 		return (pointer)UnalignedAllocate(n*sizeof(T));

  00224	50		 push	 eax
  00225	e8 00 00 00 00	 call	 ?UnalignedAllocate@CryptoPP@@YAPAXI@Z ; CryptoPP::UnalignedAllocate
  0022a	83 c4 04	 add	 esp, 4
  0022d	89 85 78 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  00233	8b f8		 mov	 edi, eax
$LN41@Prepare:

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00235	89 bd 64 ff ff
	ff		 mov	 DWORD PTR _spub_key$[ebp+8], edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 399  : 	SecByteBlock epub_key(dh2_.EphemeralPublicKeyLength());

  0023b	8b 16		 mov	 edx, DWORD PTR [esi]
  0023d	8b ce		 mov	 ecx, esi
  0023f	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  00243	8b 52 38	 mov	 edx, DWORD PTR [edx+56]
  00246	ff d2		 call	 edx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00248	89 85 6c ff ff
	ff		 mov	 DWORD PTR _epub_key$[ebp+4], eax

; 92   : 		if (n == 0)

  0024e	85 c0		 test	 eax, eax
  00250	74 09		 je	 SHORT $LN268@Prepare
$LN48@Prepare:

; 94   : 
; 95   : #if CRYPTOPP_BOOL_ALIGN16_ENABLED
; 96   : 		if (T_Align16 && n*sizeof(T) >= 16)
; 97   : 			return (pointer)AlignedAllocate(n*sizeof(T));
; 98   : #endif
; 99   : 
; 100  : 		return (pointer)UnalignedAllocate(n*sizeof(T));

  00252	50		 push	 eax
  00253	e8 00 00 00 00	 call	 ?UnalignedAllocate@CryptoPP@@YAPAXI@Z ; CryptoPP::UnalignedAllocate
  00258	83 c4 04	 add	 esp, 4
$LN268@Prepare:

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  0025b	89 85 7c ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax
  00261	89 85 70 ff ff
	ff		 mov	 DWORD PTR _epub_key$[ebp+8], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 401  : 	dh2_.GenerateStaticKeyPair(rnd, spriv_key_, spub_key);

  00267	8b 45 80	 mov	 eax, DWORD PTR _this$GSCopy$1$[ebp]
  0026a	8b ce		 mov	 ecx, esi
  0026c	8b 16		 mov	 edx, DWORD PTR [esi]
  0026e	57		 push	 edi
  0026f	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  00273	ff b0 98 00 00
	00		 push	 DWORD PTR [eax+152]
  00279	8d 45 88	 lea	 eax, DWORD PTR _rnd$[ebp]
  0027c	50		 push	 eax
  0027d	ff 52 30	 call	 DWORD PTR [edx+48]

; 402  : 	dh2_.GenerateEphemeralKeyPair(rnd, epriv_key_, epub_key);

  00280	8b 4d 80	 mov	 ecx, DWORD PTR _this$GSCopy$1$[ebp]
  00283	ff b5 7c ff ff
	ff		 push	 DWORD PTR $T3[ebp]
  00289	8b 06		 mov	 eax, DWORD PTR [esi]
  0028b	ff b1 a4 00 00
	00		 push	 DWORD PTR [ecx+164]
  00291	8d 4d 88	 lea	 ecx, DWORD PTR _rnd$[ebp]
  00294	51		 push	 ecx
  00295	8b ce		 mov	 ecx, esi
  00297	ff 50 44	 call	 DWORD PTR [eax+68]

; 403  : 
; 404  : 	// Prepare key agreement data
; 405  : 	const size_t spub_key_length = spub_key.size();
; 406  : 	const size_t epub_key_length = epub_key.size();
; 407  : 	const size_t data_length = spub_key_length + epub_key_length;

  0029a	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _epub_key$[ebp+4]
  002a0	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _spub_key$[ebp+4]

; 408  : 
; 409  : 	if (*length < data_length) {

  002a6	8b 7d 84	 mov	 edi, DWORD PTR _length$GSCopy$1$[ebp]
  002a9	8d 14 01	 lea	 edx, DWORD PTR [ecx+eax]
  002ac	39 17		 cmp	 DWORD PTR [edi], edx
  002ae	8b bd 78 ff ff
	ff		 mov	 edi, DWORD PTR $T2[ebp]
  002b4	73 04		 jae	 SHORT $LN4@Prepare
  002b6	33 f6		 xor	 esi, esi
  002b8	eb 41		 jmp	 SHORT $LN15@Prepare
$LN4@Prepare:

; 410  : 		// Not enough data buffer length
; 411  : 		return 0;
; 412  : 	}
; 413  : 
; 414  : 	*length = data_length;

  002ba	8b 4d 84	 mov	 ecx, DWORD PTR _length$GSCopy$1$[ebp]

; 415  : 	byte* buf = (byte*)buffer;
; 416  : 	memcpy(buf, spub_key.BytePtr(), spub_key_length);

  002bd	50		 push	 eax
  002be	57		 push	 edi
  002bf	8b bd 74 ff ff
	ff		 mov	 edi, DWORD PTR _buffer$GSCopy$1$[ebp]
  002c5	57		 push	 edi
  002c6	89 11		 mov	 DWORD PTR [ecx], edx
  002c8	e8 00 00 00 00	 call	 _memcpy

; 417  : 	memcpy(buf + spub_key_length, epub_key.BytePtr(), epub_key_length);

  002cd	ff b5 6c ff ff
	ff		 push	 DWORD PTR _epub_key$[ebp+4]
  002d3	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _spub_key$[ebp+4]
  002d9	ff b5 7c ff ff
	ff		 push	 DWORD PTR $T3[ebp]
  002df	03 c7		 add	 eax, edi
  002e1	50		 push	 eax
  002e2	e8 00 00 00 00	 call	 _memcpy

; 418  : 
; 419  : #ifdef __THEMIDA__
; 420  : 	VM_END
; 421  : #endif
; 422  : 
; 423  : 	return dh2_.AgreedValueLength();

  002e7	8b 06		 mov	 eax, DWORD PTR [esi]
  002e9	83 c4 18	 add	 esp, 24			; 00000018H
  002ec	8b ce		 mov	 ecx, esi
  002ee	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  002f1	ff d0		 call	 eax
  002f3	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _epub_key$[ebp+4]
  002f9	8b f0		 mov	 esi, eax
$LN15@Prepare:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  002fb	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR $T3[ebp]
  00301	32 c0		 xor	 al, al
  00303	8b fa		 mov	 edi, edx
  00305	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  00309	f3 aa		 rep stosb

; 112  : 		UnalignedDeallocate(p);

  0030b	52		 push	 edx
  0030c	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00311	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  00317	32 c0		 xor	 al, al
  00319	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _spub_key$[ebp+4]
  0031f	8b fa		 mov	 edi, edx
  00321	f3 aa		 rep stosb

; 112  : 		UnalignedDeallocate(p);

  00323	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00324	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9

; 112  : 		UnalignedDeallocate(p);

  00328	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0032d	83 c4 08	 add	 esp, 8
$LN76@Prepare:

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00330	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR _v$[ebp+12]
  00336	8b f8		 mov	 edi, eax
  00338	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR _v$[ebp+8]
  0033e	8b ca		 mov	 ecx, edx
  00340	89 45 84	 mov	 DWORD PTR _p$1$[ebp], eax
  00343	33 c0		 xor	 eax, eax

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  00345	ff 75 84	 push	 DWORD PTR _p$1$[ebp]

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00348	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  0034a	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00351	c6 45 fc 0a	 mov	 BYTE PTR __$EHRec$[ebp+8], 10 ; 0000000aH

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  00355	83 f8 10	 cmp	 eax, 16			; 00000010H
  00358	72 07		 jb	 SHORT $LN106@Prepare

; 109  : 			return AlignedDeallocate(p);

  0035a	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  0035f	eb 05		 jmp	 SHORT $LN269@Prepare
$LN106@Prepare:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  00361	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN269@Prepare:

; 194  : 		if (p == GetAlignedArray())

  00366	83 c4 04	 add	 esp, 4
$LN105@Prepare:
  00369	8d 4d e0	 lea	 ecx, DWORD PTR _rnd$[ebp+88]
  0036c	e8 00 00 00 00	 call	 ??1?$member_ptr@VBlockCipher@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::BlockCipher>::~member_ptr<CryptoPP::BlockCipher>
  00371	8b 7d dc	 mov	 edi, DWORD PTR _rnd$[ebp+84]
  00374	8d 45 c0	 lea	 eax, DWORD PTR _rnd$[ebp+56]
  00377	3b f8		 cmp	 edi, eax
  00379	75 0b		 jne	 SHORT $LN147@Prepare
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  0037b	8b 4d d8	 mov	 ecx, DWORD PTR _rnd$[ebp+80]
  0037e	32 c0		 xor	 al, al
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 198  : 			m_allocated = false;

  00380	c6 45 d1 00	 mov	 BYTE PTR _rnd$[ebp+73], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00384	f3 aa		 rep stosb
$LN147@Prepare:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 194  : 		if (p == GetAlignedArray())

  00386	8b 7d bc	 mov	 edi, DWORD PTR _rnd$[ebp+52]
  00389	8d 45 90	 lea	 eax, DWORD PTR _rnd$[ebp+8]
  0038c	3b f8		 cmp	 edi, eax
  0038e	75 0b		 jne	 SHORT $LN174@Prepare
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00390	8b 4d b8	 mov	 ecx, DWORD PTR _rnd$[ebp+48]
  00393	32 c0		 xor	 al, al
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 198  : 			m_allocated = false;

  00395	c6 45 b1 00	 mov	 BYTE PTR _rnd$[ebp+41], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00399	f3 aa		 rep stosb
$LN174@Prepare:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0039b	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _q$[ebp+12]
  003a1	8b f8		 mov	 edi, eax
  003a3	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR _q$[ebp+8]
  003a9	8b ca		 mov	 ecx, edx
  003ab	89 45 84	 mov	 DWORD PTR _p$1$[ebp], eax
  003ae	33 c0		 xor	 eax, eax

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  003b0	ff 75 84	 push	 DWORD PTR _p$1$[ebp]

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  003b3	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  003b5	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  003bc	c6 45 fc 0b	 mov	 BYTE PTR __$EHRec$[ebp+8], 11 ; 0000000bH

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  003c0	83 f8 10	 cmp	 eax, 16			; 00000010H
  003c3	72 07		 jb	 SHORT $LN193@Prepare

; 109  : 			return AlignedDeallocate(p);

  003c5	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  003ca	eb 05		 jmp	 SHORT $LN270@Prepare
$LN193@Prepare:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  003cc	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN270@Prepare:

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  003d1	83 c4 04	 add	 esp, 4
  003d4	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _g$[ebp+12]
  003da	8b f8		 mov	 edi, eax
  003dc	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR _g$[ebp+8]
  003e2	8b ca		 mov	 ecx, edx
  003e4	89 45 84	 mov	 DWORD PTR _p$1$[ebp], eax
  003e7	33 c0		 xor	 eax, eax

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  003e9	ff 75 84	 push	 DWORD PTR _p$1$[ebp]

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  003ec	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  003ee	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  003f5	c6 45 fc 0c	 mov	 BYTE PTR __$EHRec$[ebp+8], 12 ; 0000000cH

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  003f9	83 f8 10	 cmp	 eax, 16			; 00000010H
  003fc	72 07		 jb	 SHORT $LN220@Prepare

; 109  : 			return AlignedDeallocate(p);

  003fe	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  00403	eb 05		 jmp	 SHORT $LN271@Prepare
$LN220@Prepare:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  00405	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN271@Prepare:

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0040a	83 c4 04	 add	 esp, 4
  0040d	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _p$[ebp+12]
  00413	8b f8		 mov	 edi, eax
  00415	8b 95 28 ff ff
	ff		 mov	 edx, DWORD PTR _p$[ebp+8]
  0041b	8b ca		 mov	 ecx, edx
  0041d	89 45 84	 mov	 DWORD PTR _p$1$[ebp], eax
  00420	33 c0		 xor	 eax, eax

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  00422	ff 75 84	 push	 DWORD PTR _p$1$[ebp]

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00425	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  00427	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0042e	c7 45 fc 0d 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 13 ; 0000000dH

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  00435	83 f8 10	 cmp	 eax, 16			; 00000010H
  00438	72 07		 jb	 SHORT $LN247@Prepare

; 109  : 			return AlignedDeallocate(p);

  0043a	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  0043f	eb 05		 jmp	 SHORT $LN272@Prepare
$LN247@Prepare:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  00441	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN272@Prepare:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 424  : }

  00446	8b c6		 mov	 eax, esi
  00448	83 c4 04	 add	 esp, 4
  0044b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0044e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00455	59		 pop	 ecx
  00456	5f		 pop	 edi
  00457	5e		 pop	 esi
  00458	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0045b	33 cd		 xor	 ecx, ebp
  0045d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00462	8b e5		 mov	 esp, ebp
  00464	5d		 pop	 ebp
  00465	8b e3		 mov	 esp, ebx
  00467	5b		 pop	 ebx
  00468	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z$0:
  00000	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR _p$[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
__unwindfunclet$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z$1:
  0000b	8d 8d 34 ff ff
	ff		 lea	 ecx, DWORD PTR _g$[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
__unwindfunclet$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z$2:
  00016	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR _q$[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
__unwindfunclet$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z$7:
  00021	8d 4d 88	 lea	 ecx, DWORD PTR _rnd$[ebp]
  00024	e9 00 00 00 00	 jmp	 ??1RandomPool@CryptoPP@@UAE@XZ
__unwindfunclet$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z$3:
  00029	8d 4d 88	 lea	 ecx, DWORD PTR _rnd$[ebp]
  0002c	e9 00 00 00 00	 jmp	 ??1AutoSeededRandomPool@CryptoPP@@UAE@XZ
__unwindfunclet$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z$4:
  00031	8d 8d 0c ff ff
	ff		 lea	 ecx, DWORD PTR _v$[ebp]
  00037	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
__unwindfunclet$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z$5:
  0003c	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR _spub_key$[ebp]
  00042	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z$6:
  00047	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _epub_key$[ebp]
  0004d	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
  00052	cc		 int	 3
  00053	cc		 int	 3
  00054	cc		 int	 3
  00055	cc		 int	 3
  00056	cc		 int	 3
__ehhandler$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z:
  00057	90		 npad	 1
  00058	90		 npad	 1
  00059	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0005d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00060	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  00066	33 c8		 xor	 ecx, eax
  00068	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006d	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00070	33 c8		 xor	 ecx, eax
  00072	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00077	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z
  0007c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Prepare@DH2KeyAgreement@@UAEIPAXPAI@Z ENDP		; DH2KeyAgreement::Prepare
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ??1DH2KeyAgreement@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1DH2KeyAgreement@@UAE@XZ PROC				; DH2KeyAgreement::~DH2KeyAgreement, COMDAT
; _this$ = ecx

; 337  : DH2KeyAgreement::~DH2KeyAgreement() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1DH2KeyAgreement@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7DH2KeyAgreement@@6B@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0002c	8b 96 a4 00 00
	00		 mov	 edx, DWORD PTR [esi+164]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00032	32 c0		 xor	 al, al
  00034	8b 8e a0 00 00
	00		 mov	 ecx, DWORD PTR [esi+160]
  0003a	8b fa		 mov	 edi, edx
  0003c	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  0003e	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0003f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  00046	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0004b	8b 96 98 00 00
	00		 mov	 edx, DWORD PTR [esi+152]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00051	32 c0		 xor	 al, al
  00053	8b 8e 94 00 00
	00		 mov	 ecx, DWORD PTR [esi+148]
  00059	8b fa		 mov	 edi, edx
  0005b	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  0005d	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0005e	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1

; 112  : 		UnalignedDeallocate(p);

  00065	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0006a	83 c4 08	 add	 esp, 8
  0006d	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00070	e8 00 00 00 00	 call	 ??1?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAE@XZ
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 109  : 	virtual ~KeyAgreement() {}

  00075	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7KeyAgreement@@6B@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0007b	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  0007e	32 c0		 xor	 al, al
  00080	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00083	8b fa		 mov	 edi, edx
  00085	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00087	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00088	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2

; 112  : 		UnalignedDeallocate(p);

  0008f	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00094	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 338  : }

  00097	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0009a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a1	59		 pop	 ecx
  000a2	5f		 pop	 edi
  000a3	5e		 pop	 esi
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c3		 ret	 0
  000a8	cc		 int	 3
  000a9	cc		 int	 3
  000aa	cc		 int	 3
  000ab	cc		 int	 3
  000ac	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1DH2KeyAgreement@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1DH2KeyAgreement@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1DH2KeyAgreement@@UAE@XZ ENDP				; DH2KeyAgreement::~DH2KeyAgreement
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh2.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ??0DH2KeyAgreement@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
_this$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0DH2KeyAgreement@@QAE@XZ PROC				; DH2KeyAgreement::DH2KeyAgreement, COMDAT
; _this$ = ecx

; 334  : DH2KeyAgreement::DH2KeyAgreement() : dh_(), dh2_(dh_) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0DH2KeyAgreement@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  0002d	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
  00034	c7 43 0c 00 00
	00 00		 mov	 DWORD PTR [ebx+12], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 334  : DH2KeyAgreement::DH2KeyAgreement() : dh_(), dh2_(dh_) {

  0003b	8d 7b 10	 lea	 edi, DWORD PTR [ebx+16]
  0003e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00045	6a 01		 push	 1
  00047	8b cf		 mov	 ecx, edi
  00049	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7DH2KeyAgreement@@6B@
  0004f	89 7d ec	 mov	 DWORD PTR _this$[ebp], edi
  00052	e8 00 00 00 00	 call	 ??0Algorithm@CryptoPP@@QAE@_N@Z ; CryptoPP::Algorithm::Algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h

; 23   : 	DH_Domain() {}

  00057	8d 77 04	 lea	 esi, DWORD PTR [edi+4]
  0005a	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@6B@
  00060	6a 00		 push	 0
  00062	8b ce		 mov	 ecx, esi
  00064	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00067	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], OFFSET ??_8DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@7B@
  0006e	e8 00 00 00 00	 call	 ??0DL_GroupParameters_GFP@CryptoPP@@QAE@XZ
  00073	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00076	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6B@
  0007c	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6BGeneratableCryptoMaterial@1@@
  00083	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00086	c7 44 30 08 00
	00 00 00	 mov	 DWORD PTR [eax+esi+8], OFFSET ??_7DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@6BCryptoMaterial@1@@
  0008e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00091	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00094	c7 44 30 04 00
	00 00 00	 mov	 DWORD PTR [eax+esi+4], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 334  : DH2KeyAgreement::DH2KeyAgreement() : dh_(), dh2_(dh_) {

  0009c	6a 01		 push	 1
  0009e	8d 8b 84 00 00
	00		 lea	 ecx, DWORD PTR [ebx+132]
  000a4	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000a8	e8 00 00 00 00	 call	 ??0Algorithm@CryptoPP@@QAE@_N@Z ; CryptoPP::Algorithm::Algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh2.h

; 16   : 		: d1(domain), d2(domain) {}

  000ad	c7 83 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+132], OFFSET ??_7DH2@CryptoPP@@6B@
  000b7	89 bb 88 00 00
	00		 mov	 DWORD PTR [ebx+136], edi
  000bd	89 bb 8c 00 00
	00		 mov	 DWORD PTR [ebx+140], edi
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  000c3	c7 83 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+148], 0
  000cd	c7 83 98 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+152], 0
  000d7	c7 83 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+160], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 335  : }

  000e1	8b c3		 mov	 eax, ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  000e3	c7 83 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ebx+164], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 335  : }

  000ed	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f7	59		 pop	 ecx
  000f8	5f		 pop	 edi
  000f9	5e		 pop	 esi
  000fa	5b		 pop	 ebx
  000fb	8b e5		 mov	 esp, ebp
  000fd	5d		 pop	 ebp
  000fe	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DH2KeyAgreement@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1KeyAgreement@@UAE@XZ	; KeyAgreement::~KeyAgreement
__unwindfunclet$??0DH2KeyAgreement@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 10	 add	 ecx, 16			; 00000010H
  0000e	e9 00 00 00 00	 jmp	 ??1?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UAE@XZ
__unwindfunclet$??0DH2KeyAgreement@@QAE@XZ$2:
  00013	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	81 c1 90 00 00
	00		 add	 ecx, 144		; 00000090H
  0001c	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
  00025	cc		 int	 3
__ehhandler$??0DH2KeyAgreement@@QAE@XZ:
  00026	90		 npad	 1
  00027	90		 npad	 1
  00028	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002f	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00032	33 c8		 xor	 ecx, eax
  00034	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00039	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0DH2KeyAgreement@@QAE@XZ
  0003e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0DH2KeyAgreement@@QAE@XZ ENDP				; DH2KeyAgreement::DH2KeyAgreement
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??_GKeyAgreement@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GKeyAgreement@@UAEPAXI@Z PROC			; KeyAgreement::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GKeyAgreement@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 109  : 	virtual ~KeyAgreement() {}

  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7KeyAgreement@@6B@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0002c	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  0002f	32 c0		 xor	 al, al
  00031	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00034	8b fa		 mov	 edi, edx
  00036	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00038	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00039	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  00040	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00045	83 c4 04	 add	 esp, 4
  00048	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0004c	74 0b		 je	 SHORT $LN31@scalar
  0004e	6a 10		 push	 16			; 00000010H
  00050	56		 push	 esi
  00051	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00056	83 c4 08	 add	 esp, 8
$LN31@scalar:
  00059	8b c6		 mov	 eax, esi
  0005b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00065	59		 pop	 ecx
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 04 00	 ret	 4
  0006e	cc		 int	 3
  0006f	cc		 int	 3
  00070	cc		 int	 3
  00071	cc		 int	 3
  00072	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_GKeyAgreement@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GKeyAgreement@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GKeyAgreement@@UAEPAXI@Z ENDP			; KeyAgreement::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ??1KeyAgreement@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1KeyAgreement@@UAE@XZ PROC				; KeyAgreement::~KeyAgreement, COMDAT
; _this$ = ecx

; 109  : 	virtual ~KeyAgreement() {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1KeyAgreement@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	57		 push	 edi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7KeyAgreement@@6B@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00029	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  0002c	32 c0		 xor	 al, al
  0002e	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00031	8b fa		 mov	 edi, edx
  00033	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00035	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003d	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00042	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 109  : 	virtual ~KeyAgreement() {}

  00045	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00048	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004f	59		 pop	 ecx
  00050	5f		 pop	 edi
  00051	8b e5		 mov	 esp, ebp
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
  00055	cc		 int	 3
  00056	cc		 int	 3
  00057	cc		 int	 3
  00058	cc		 int	 3
  00059	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1KeyAgreement@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1KeyAgreement@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1KeyAgreement@@UAE@XZ ENDP				; KeyAgreement::~KeyAgreement
; Function compile flags: /Ogtp
;	COMDAT ??_GBlockCipherAlgorithm@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GBlockCipherAlgorithm@@UAEPAXI@Z PROC		; BlockCipherAlgorithm::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00010	74 0b		 je	 SHORT $LN4@scalar
  00012	6a 04		 push	 4
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001a	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001d	8b c6		 mov	 eax, esi
  0001f	5e		 pop	 esi
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
??_GBlockCipherAlgorithm@@UAEPAXI@Z ENDP		; BlockCipherAlgorithm::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?Pick@BlockCipherAlgorithm@@SAPAU1@H@Z
_TEXT	SEGMENT
$T1 = 8							; size = 4
$T2 = 8							; size = 4
$T3 = 8							; size = 4
$T4 = 8							; size = 4
$T5 = 8							; size = 4
$T6 = 8							; size = 4
$T7 = 8							; size = 4
$T8 = 8							; size = 4
$T9 = 8							; size = 4
$T10 = 8						; size = 4
$T11 = 8						; size = 4
$T12 = 8						; size = 4
$T13 = 8						; size = 4
_hint$ = 8						; size = 4
?Pick@BlockCipherAlgorithm@@SAPAU1@H@Z PROC		; BlockCipherAlgorithm::Pick, COMDAT

; 276  : BlockCipherAlgorithm* BlockCipherAlgorithm::Pick(int hint) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 277  : 	BlockCipherAlgorithm* detail;
; 278  : 	int selector = hint % kMaxAlgorithms;

  00004	8b 75 08	 mov	 esi, DWORD PTR _hint$[ebp]
  00007	b8 93 24 49 92	 mov	 eax, -1840700269	; 92492493H
  0000c	f7 ee		 imul	 esi
  0000e	03 d6		 add	 edx, esi
  00010	c1 fa 03	 sar	 edx, 3
  00013	8b ca		 mov	 ecx, edx
  00015	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00018	03 ca		 add	 ecx, edx
  0001a	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  00021	2b c1		 sub	 eax, ecx
  00023	03 c0		 add	 eax, eax
  00025	2b f0		 sub	 esi, eax

; 279  : 	switch (selector) {

  00027	4e		 dec	 esi
  00028	83 fe 0c	 cmp	 esi, 12			; 0000000cH
  0002b	0f 87 5f 01 00
	00		 ja	 $LN17@Pick
  00031	ff 24 b5 00 00
	00 00		 jmp	 DWORD PTR $LN117@Pick[esi*4]
$LN4@Pick:

; 280  : 	//case kAES:
; 281  : 	//	detail = new BlockCipherDetail<AES>();
; 282  : 		break;
; 283  : 	case kRC6:
; 284  : 		detail = new BlockCipherDetail<RC6>();

  00038	6a 04		 push	 4
  0003a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003f	83 c4 04	 add	 esp, 4
  00042	89 45 08	 mov	 DWORD PTR $T13[ebp], eax
  00045	85 c0		 test	 eax, eax
  00047	0f 84 5d 01 00
	00		 je	 $LN45@Pick

; 88   : 	BlockCipherDetail() {}

  0004d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$BlockCipherDetail@VRC6@CryptoPP@@@@6B@

; 324  : 		break;
; 325  : 	case kDefault:
; 326  : 	default:
; 327  : 		detail = new BlockCipherDetail<Twofish>(); // default algorithm
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	return detail;

  00053	5e		 pop	 esi

; 332  : }

  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
$LN5@Pick:

; 285  : 		break;
; 286  : 	case kMARS:
; 287  : 		detail = new BlockCipherDetail<MARS>();

  00056	6a 04		 push	 4
  00058	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0005d	83 c4 04	 add	 esp, 4
  00060	89 45 08	 mov	 DWORD PTR $T12[ebp], eax
  00063	85 c0		 test	 eax, eax
  00065	0f 84 3f 01 00
	00		 je	 $LN45@Pick

; 88   : 	BlockCipherDetail() {}

  0006b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$BlockCipherDetail@VMARS@CryptoPP@@@@6B@

; 324  : 		break;
; 325  : 	case kDefault:
; 326  : 	default:
; 327  : 		detail = new BlockCipherDetail<Twofish>(); // default algorithm
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	return detail;

  00071	5e		 pop	 esi

; 332  : }

  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
$LN7@Pick:

; 288  : 		break;
; 289  : 	case kTwofish:
; 290  : 		detail = new BlockCipherDetail<Twofish>();
; 291  : 		break;
; 292  : 	case kSerpent:
; 293  : 		detail = new BlockCipherDetail<Serpent>();

  00074	6a 04		 push	 4
  00076	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0007b	83 c4 04	 add	 esp, 4
  0007e	89 45 08	 mov	 DWORD PTR $T11[ebp], eax
  00081	85 c0		 test	 eax, eax
  00083	0f 84 21 01 00
	00		 je	 $LN45@Pick

; 88   : 	BlockCipherDetail() {}

  00089	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$BlockCipherDetail@VSerpent@CryptoPP@@@@6B@

; 324  : 		break;
; 325  : 	case kDefault:
; 326  : 	default:
; 327  : 		detail = new BlockCipherDetail<Twofish>(); // default algorithm
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	return detail;

  0008f	5e		 pop	 esi

; 332  : }

  00090	5d		 pop	 ebp
  00091	c3		 ret	 0
$LN8@Pick:

; 294  : 		break;
; 295  : 	case kCAST256:
; 296  : 		detail = new BlockCipherDetail<CAST256>();

  00092	6a 04		 push	 4
  00094	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00099	83 c4 04	 add	 esp, 4
  0009c	89 45 08	 mov	 DWORD PTR $T10[ebp], eax
  0009f	85 c0		 test	 eax, eax
  000a1	0f 84 03 01 00
	00		 je	 $LN45@Pick

; 88   : 	BlockCipherDetail() {}

  000a7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$BlockCipherDetail@VCAST256@CryptoPP@@@@6B@

; 324  : 		break;
; 325  : 	case kDefault:
; 326  : 	default:
; 327  : 		detail = new BlockCipherDetail<Twofish>(); // default algorithm
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	return detail;

  000ad	5e		 pop	 esi

; 332  : }

  000ae	5d		 pop	 ebp
  000af	c3		 ret	 0
$LN9@Pick:

; 297  : 		break;
; 298  : 	case kIDEA:
; 299  : 		detail = new BlockCipherDetail<IDEA>();

  000b0	6a 04		 push	 4
  000b2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000b7	83 c4 04	 add	 esp, 4
  000ba	89 45 08	 mov	 DWORD PTR $T9[ebp], eax
  000bd	85 c0		 test	 eax, eax
  000bf	0f 84 e5 00 00
	00		 je	 $LN45@Pick

; 88   : 	BlockCipherDetail() {}

  000c5	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$BlockCipherDetail@VIDEA@CryptoPP@@@@6B@

; 324  : 		break;
; 325  : 	case kDefault:
; 326  : 	default:
; 327  : 		detail = new BlockCipherDetail<Twofish>(); // default algorithm
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	return detail;

  000cb	5e		 pop	 esi

; 332  : }

  000cc	5d		 pop	 ebp
  000cd	c3		 ret	 0
$LN10@Pick:

; 300  : 		break;
; 301  : 	case k3DES:
; 302  : 		detail = new BlockCipherDetail<DES_EDE2>();

  000ce	6a 04		 push	 4
  000d0	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000d5	83 c4 04	 add	 esp, 4
  000d8	89 45 08	 mov	 DWORD PTR $T8[ebp], eax
  000db	85 c0		 test	 eax, eax
  000dd	0f 84 c7 00 00
	00		 je	 $LN45@Pick

; 88   : 	BlockCipherDetail() {}

  000e3	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$BlockCipherDetail@VDES_EDE2@CryptoPP@@@@6B@

; 324  : 		break;
; 325  : 	case kDefault:
; 326  : 	default:
; 327  : 		detail = new BlockCipherDetail<Twofish>(); // default algorithm
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	return detail;

  000e9	5e		 pop	 esi

; 332  : }

  000ea	5d		 pop	 ebp
  000eb	c3		 ret	 0
$LN11@Pick:

; 303  : 		break;
; 304  : 	case kCamellia:
; 305  : 		detail = new BlockCipherDetail<Camellia>();

  000ec	6a 04		 push	 4
  000ee	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000f3	83 c4 04	 add	 esp, 4
  000f6	89 45 08	 mov	 DWORD PTR $T7[ebp], eax
  000f9	85 c0		 test	 eax, eax
  000fb	0f 84 a9 00 00
	00		 je	 $LN45@Pick

; 88   : 	BlockCipherDetail() {}

  00101	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$BlockCipherDetail@VCamellia@CryptoPP@@@@6B@

; 324  : 		break;
; 325  : 	case kDefault:
; 326  : 	default:
; 327  : 		detail = new BlockCipherDetail<Twofish>(); // default algorithm
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	return detail;

  00107	5e		 pop	 esi

; 332  : }

  00108	5d		 pop	 ebp
  00109	c3		 ret	 0
$LN12@Pick:

; 306  : 		break;
; 307  : 	case kSEED:
; 308  : 		detail = new BlockCipherDetail<SEED>();

  0010a	6a 04		 push	 4
  0010c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00111	83 c4 04	 add	 esp, 4
  00114	89 45 08	 mov	 DWORD PTR $T6[ebp], eax
  00117	85 c0		 test	 eax, eax
  00119	0f 84 8b 00 00
	00		 je	 $LN45@Pick

; 88   : 	BlockCipherDetail() {}

  0011f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$BlockCipherDetail@VSEED@CryptoPP@@@@6B@

; 324  : 		break;
; 325  : 	case kDefault:
; 326  : 	default:
; 327  : 		detail = new BlockCipherDetail<Twofish>(); // default algorithm
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	return detail;

  00125	5e		 pop	 esi

; 332  : }

  00126	5d		 pop	 ebp
  00127	c3		 ret	 0
$LN13@Pick:

; 309  : 		break;
; 310  : 	case kRC5:
; 311  : 		detail = new BlockCipherDetail<RC5>();

  00128	6a 04		 push	 4
  0012a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0012f	83 c4 04	 add	 esp, 4
  00132	89 45 08	 mov	 DWORD PTR $T5[ebp], eax
  00135	85 c0		 test	 eax, eax
  00137	74 71		 je	 SHORT $LN45@Pick

; 88   : 	BlockCipherDetail() {}

  00139	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$BlockCipherDetail@VRC5@CryptoPP@@@@6B@

; 324  : 		break;
; 325  : 	case kDefault:
; 326  : 	default:
; 327  : 		detail = new BlockCipherDetail<Twofish>(); // default algorithm
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	return detail;

  0013f	5e		 pop	 esi

; 332  : }

  00140	5d		 pop	 ebp
  00141	c3		 ret	 0
$LN14@Pick:

; 312  : 		break;
; 313  : 	case kBlowfish:
; 314  : 		detail = new BlockCipherDetail<Blowfish>();

  00142	6a 04		 push	 4
  00144	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00149	83 c4 04	 add	 esp, 4
  0014c	89 45 08	 mov	 DWORD PTR $T4[ebp], eax
  0014f	85 c0		 test	 eax, eax
  00151	74 57		 je	 SHORT $LN45@Pick

; 88   : 	BlockCipherDetail() {}

  00153	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$BlockCipherDetail@VBlowfish@CryptoPP@@@@6B@

; 324  : 		break;
; 325  : 	case kDefault:
; 326  : 	default:
; 327  : 		detail = new BlockCipherDetail<Twofish>(); // default algorithm
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	return detail;

  00159	5e		 pop	 esi

; 332  : }

  0015a	5d		 pop	 ebp
  0015b	c3		 ret	 0
$LN15@Pick:

; 315  : 		break;
; 316  : 	case kTEA:
; 317  : 		detail = new BlockCipherDetail<TEA>();

  0015c	6a 04		 push	 4
  0015e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00163	83 c4 04	 add	 esp, 4
  00166	89 45 08	 mov	 DWORD PTR $T3[ebp], eax
  00169	85 c0		 test	 eax, eax
  0016b	74 3d		 je	 SHORT $LN45@Pick

; 88   : 	BlockCipherDetail() {}

  0016d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$BlockCipherDetail@VTEA@CryptoPP@@@@6B@

; 324  : 		break;
; 325  : 	case kDefault:
; 326  : 	default:
; 327  : 		detail = new BlockCipherDetail<Twofish>(); // default algorithm
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	return detail;

  00173	5e		 pop	 esi

; 332  : }

  00174	5d		 pop	 ebp
  00175	c3		 ret	 0
$LN16@Pick:

; 318  : 		break;
; 319  : //	case kSKIPJACK:
; 320  : //		detail = new BlockCipherDetail<SKIPJACK>();
; 321  : //		break;
; 322  : 	case kSHACAL2:
; 323  : 		detail = new BlockCipherDetail<SHACAL2>();

  00176	6a 04		 push	 4
  00178	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0017d	83 c4 04	 add	 esp, 4
  00180	89 45 08	 mov	 DWORD PTR $T2[ebp], eax
  00183	85 c0		 test	 eax, eax
  00185	74 23		 je	 SHORT $LN45@Pick

; 88   : 	BlockCipherDetail() {}

  00187	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$BlockCipherDetail@VSHACAL2@CryptoPP@@@@6B@

; 324  : 		break;
; 325  : 	case kDefault:
; 326  : 	default:
; 327  : 		detail = new BlockCipherDetail<Twofish>(); // default algorithm
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	return detail;

  0018d	5e		 pop	 esi

; 332  : }

  0018e	5d		 pop	 ebp
  0018f	c3		 ret	 0
$LN17@Pick:

; 324  : 		break;
; 325  : 	case kDefault:
; 326  : 	default:
; 327  : 		detail = new BlockCipherDetail<Twofish>(); // default algorithm
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	return detail;

  00190	6a 04		 push	 4
  00192	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00197	83 c4 04	 add	 esp, 4
  0019a	89 45 08	 mov	 DWORD PTR $T1[ebp], eax
  0019d	85 c0		 test	 eax, eax
  0019f	74 09		 je	 SHORT $LN45@Pick
  001a1	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$BlockCipherDetail@VTwofish@CryptoPP@@@@6B@
  001a7	5e		 pop	 esi

; 332  : }

  001a8	5d		 pop	 ebp
  001a9	c3		 ret	 0
$LN45@Pick:

; 324  : 		break;
; 325  : 	case kDefault:
; 326  : 	default:
; 327  : 		detail = new BlockCipherDetail<Twofish>(); // default algorithm
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	return detail;

  001aa	33 c0		 xor	 eax, eax
  001ac	5e		 pop	 esi

; 332  : }

  001ad	5d		 pop	 ebp
  001ae	c3		 ret	 0
  001af	90		 npad	 1
$LN117@Pick:
  001b0	00 00 00 00	 DD	 $LN4@Pick
  001b4	00 00 00 00	 DD	 $LN5@Pick
  001b8	00 00 00 00	 DD	 $LN17@Pick
  001bc	00 00 00 00	 DD	 $LN7@Pick
  001c0	00 00 00 00	 DD	 $LN8@Pick
  001c4	00 00 00 00	 DD	 $LN9@Pick
  001c8	00 00 00 00	 DD	 $LN10@Pick
  001cc	00 00 00 00	 DD	 $LN11@Pick
  001d0	00 00 00 00	 DD	 $LN12@Pick
  001d4	00 00 00 00	 DD	 $LN13@Pick
  001d8	00 00 00 00	 DD	 $LN14@Pick
  001dc	00 00 00 00	 DD	 $LN15@Pick
  001e0	00 00 00 00	 DD	 $LN16@Pick
?Pick@BlockCipherAlgorithm@@SAPAU1@H@Z ENDP		; BlockCipherAlgorithm::Pick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ??1BlockCipherAlgorithm@@UAE@XZ
_TEXT	SEGMENT
??1BlockCipherAlgorithm@@UAE@XZ PROC			; BlockCipherAlgorithm::~BlockCipherAlgorithm, COMDAT
; _this$ = ecx

; 71   : 	virtual ~BlockCipherAlgorithm() {}

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7BlockCipherAlgorithm@@6B@
  00006	c3		 ret	 0
??1BlockCipherAlgorithm@@UAE@XZ ENDP			; BlockCipherAlgorithm::~BlockCipherAlgorithm
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?BlockSize@?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?BlockSize@?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ PROC ; CryptoPP::BlockCipherImpl<CryptoPP::TEA_Info,CryptoPP::BlockCipher>::BlockSize, COMDAT
; _this$ = ecx

; 146  : 	unsigned int BlockSize() const {return this->BLOCKSIZE;}

  00000	b8 08 00 00 00	 mov	 eax, 8
  00005	c3		 ret	 0
?BlockSize@?$BlockCipherImpl@UTEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::BlockCipherImpl<CryptoPP::TEA_Info,CryptoPP::BlockCipher>::BlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00004	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00007	6a 03		 push	 3
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_03FOHIJHJ@TEA@
  0000e	56		 push	 esi

; 4377 :         _Mypair._Myval2._Mysize = 0;

  0000f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00016	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0001d	c6 06 00	 mov	 BYTE PTR [esi], 0

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00020	c7 46 10 03 00
	00 00		 mov	 DWORD PTR [esi+16], 3

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 46 03 00	 mov	 BYTE PTR [esi+3], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> > >::AlgorithmName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::IVSize, COMDAT
; _this$ = ecx

; 139  : 	unsigned int IVSize() const {return INFO::IV_LENGTH;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::IVSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
_TEXT	SEGMENT
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::IVRequirement, COMDAT
; _this$ = ecx

; 138  : 	SimpleKeyingInterface::IV_Requirement IVRequirement() const {return (SimpleKeyingInterface::IV_Requirement)INFO::IV_REQUIREMENT;}

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::IVRequirement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::GetValidKeyLength, COMDAT
; _this$ = ecx

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c2 04 00	 ret	 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::GetValidKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::DefaultKeyLength, COMDAT
; _this$ = ecx

; 136  : 	size_t DefaultKeyLength() const {return INFO::DEFAULT_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::DefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::MaxKeyLength, COMDAT
; _this$ = ecx

; 135  : 	size_t MaxKeyLength() const {return (size_t)INFO::MAX_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::MaxKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::MinKeyLength, COMDAT
; _this$ = ecx

; 134  : 	size_t MinKeyLength() const {return INFO::MIN_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::TEA_Info> >::MinKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?BlockSize@?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?BlockSize@?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ PROC ; CryptoPP::BlockCipherImpl<CryptoPP::SHACAL2_Info,CryptoPP::BlockCipher>::BlockSize, COMDAT
; _this$ = ecx

; 146  : 	unsigned int BlockSize() const {return this->BLOCKSIZE;}

  00000	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00005	c3		 ret	 0
?BlockSize@?$BlockCipherImpl@USHACAL2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::BlockCipherImpl<CryptoPP::SHACAL2_Info,CryptoPP::BlockCipher>::BlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00004	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00007	6a 08		 push	 8
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_08KKFFFOAL@SHACAL?92@
  0000e	56		 push	 esi

; 4377 :         _Mypair._Myval2._Mysize = 0;

  0000f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00016	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0001d	c6 06 00	 mov	 BYTE PTR [esi], 0

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00020	c7 46 10 08 00
	00 00		 mov	 DWORD PTR [esi+16], 8

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 46 08 00	 mov	 BYTE PTR [esi+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> > >::AlgorithmName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::IVSize, COMDAT
; _this$ = ecx

; 139  : 	unsigned int IVSize() const {return INFO::IV_LENGTH;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::IVSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
_TEXT	SEGMENT
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::IVRequirement, COMDAT
; _this$ = ecx

; 138  : 	SimpleKeyingInterface::IV_Requirement IVRequirement() const {return (SimpleKeyingInterface::IV_Requirement)INFO::IV_REQUIREMENT;}

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::IVRequirement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::GetValidKeyLength, COMDAT
; _this$ = ecx

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 100  : 		if (n < (size_t)MIN_KEYLENGTH)

  00003	8b 45 08	 mov	 eax, DWORD PTR _n$[ebp]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H
  00009	73 09		 jae	 SHORT $LN4@GetValidKe

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  0000b	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
$LN4@GetValidKe:

; 102  : 		else if (n > (size_t)MAX_KEYLENGTH)

  00014	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00019	3b c1		 cmp	 eax, ecx
  0001b	0f 47 c1	 cmova	 eax, ecx

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::GetValidKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::DefaultKeyLength, COMDAT
; _this$ = ecx

; 136  : 	size_t DefaultKeyLength() const {return INFO::DEFAULT_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::DefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::MaxKeyLength, COMDAT
; _this$ = ecx

; 135  : 	size_t MaxKeyLength() const {return (size_t)INFO::MAX_KEYLENGTH;}

  00000	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00005	c3		 ret	 0
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::MaxKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::MinKeyLength, COMDAT
; _this$ = ecx

; 134  : 	size_t MinKeyLength() const {return INFO::MIN_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USHACAL2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SHACAL2_Info> >::MinKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?BlockSize@?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?BlockSize@?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ PROC ; CryptoPP::BlockCipherImpl<CryptoPP::SEED_Info,CryptoPP::BlockCipher>::BlockSize, COMDAT
; _this$ = ecx

; 146  : 	unsigned int BlockSize() const {return this->BLOCKSIZE;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?BlockSize@?$BlockCipherImpl@USEED_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::BlockCipherImpl<CryptoPP::SEED_Info,CryptoPP::BlockCipher>::BlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 4377 :         _Mypair._Myval2._Mysize = 0;

  00006	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0000d	c7 40 14 0f 00
	00 00		 mov	 DWORD PTR [eax+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00014	c6 00 00	 mov	 BYTE PTR [eax], 0

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00017	c7 40 10 04 00
	00 00		 mov	 DWORD PTR [eax+16], 4

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0001e	c7 00 53 45 45
	44		 mov	 DWORD PTR [eax], 1145390419 ; 44454553H

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00024	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> > >::AlgorithmName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::IVSize, COMDAT
; _this$ = ecx

; 139  : 	unsigned int IVSize() const {return INFO::IV_LENGTH;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::IVSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
_TEXT	SEGMENT
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::IVRequirement, COMDAT
; _this$ = ecx

; 138  : 	SimpleKeyingInterface::IV_Requirement IVRequirement() const {return (SimpleKeyingInterface::IV_Requirement)INFO::IV_REQUIREMENT;}

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::IVRequirement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::GetValidKeyLength, COMDAT
; _this$ = ecx

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c2 04 00	 ret	 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::GetValidKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::DefaultKeyLength, COMDAT
; _this$ = ecx

; 136  : 	size_t DefaultKeyLength() const {return INFO::DEFAULT_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::DefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::MaxKeyLength, COMDAT
; _this$ = ecx

; 135  : 	size_t MaxKeyLength() const {return (size_t)INFO::MAX_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::MaxKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::MinKeyLength, COMDAT
; _this$ = ecx

; 134  : 	size_t MinKeyLength() const {return INFO::MIN_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USEED_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::SEED_Info> >::MinKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?BlockSize@?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?BlockSize@?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ PROC ; CryptoPP::BlockCipherImpl<CryptoPP::RC5_Info,CryptoPP::BlockCipher>::BlockSize, COMDAT
; _this$ = ecx

; 146  : 	unsigned int BlockSize() const {return this->BLOCKSIZE;}

  00000	b8 08 00 00 00	 mov	 eax, 8
  00005	c3		 ret	 0
?BlockSize@?$BlockCipherImpl@URC5_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::BlockCipherImpl<CryptoPP::RC5_Info,CryptoPP::BlockCipher>::BlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00004	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00007	6a 03		 push	 3
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_03GPFCBGOF@RC5@
  0000e	56		 push	 esi

; 4377 :         _Mypair._Myval2._Mysize = 0;

  0000f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00016	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0001d	c6 06 00	 mov	 BYTE PTR [esi], 0

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00020	c7 46 10 03 00
	00 00		 mov	 DWORD PTR [esi+16], 3

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 46 03 00	 mov	 BYTE PTR [esi+3], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> > >::AlgorithmName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::IVSize, COMDAT
; _this$ = ecx

; 139  : 	unsigned int IVSize() const {return INFO::IV_LENGTH;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::IVSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
_TEXT	SEGMENT
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::IVRequirement, COMDAT
; _this$ = ecx

; 138  : 	SimpleKeyingInterface::IV_Requirement IVRequirement() const {return (SimpleKeyingInterface::IV_Requirement)INFO::IV_REQUIREMENT;}

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::IVRequirement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::GetValidKeyLength, COMDAT
; _this$ = ecx

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  00008	39 45 08	 cmp	 DWORD PTR _n$[ebp], eax
  0000b	0f 46 45 08	 cmovbe	 eax, DWORD PTR _n$[ebp]
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::GetValidKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::DefaultKeyLength, COMDAT
; _this$ = ecx

; 136  : 	size_t DefaultKeyLength() const {return INFO::DEFAULT_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::DefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::MaxKeyLength, COMDAT
; _this$ = ecx

; 135  : 	size_t MaxKeyLength() const {return (size_t)INFO::MAX_KEYLENGTH;}

  00000	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  00005	c3		 ret	 0
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::MaxKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::MinKeyLength, COMDAT
; _this$ = ecx

; 134  : 	size_t MinKeyLength() const {return INFO::MIN_KEYLENGTH;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC5_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC5_Info> >::MinKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\idea.h
;	COMDAT ?OptimalDataAlignment@Base@IDEA@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?OptimalDataAlignment@Base@IDEA@CryptoPP@@UBEIXZ PROC	; CryptoPP::IDEA::Base::OptimalDataAlignment, COMDAT
; _this$ = ecx

; 32   : 		unsigned int OptimalDataAlignment() const {return 2;}

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?OptimalDataAlignment@Base@IDEA@CryptoPP@@UBEIXZ ENDP	; CryptoPP::IDEA::Base::OptimalDataAlignment
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?BlockSize@?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?BlockSize@?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ PROC ; CryptoPP::BlockCipherImpl<CryptoPP::IDEA_Info,CryptoPP::BlockCipher>::BlockSize, COMDAT
; _this$ = ecx

; 146  : 	unsigned int BlockSize() const {return this->BLOCKSIZE;}

  00000	b8 08 00 00 00	 mov	 eax, 8
  00005	c3		 ret	 0
?BlockSize@?$BlockCipherImpl@UIDEA_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::BlockCipherImpl<CryptoPP::IDEA_Info,CryptoPP::BlockCipher>::BlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 4377 :         _Mypair._Myval2._Mysize = 0;

  00006	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0000d	c7 40 14 0f 00
	00 00		 mov	 DWORD PTR [eax+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00014	c6 00 00	 mov	 BYTE PTR [eax], 0

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00017	c7 40 10 04 00
	00 00		 mov	 DWORD PTR [eax+16], 4

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0001e	c7 00 49 44 45
	41		 mov	 DWORD PTR [eax], 1095058505 ; 41454449H

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00024	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> > >::AlgorithmName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::IVSize, COMDAT
; _this$ = ecx

; 139  : 	unsigned int IVSize() const {return INFO::IV_LENGTH;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::IVSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
_TEXT	SEGMENT
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::IVRequirement, COMDAT
; _this$ = ecx

; 138  : 	SimpleKeyingInterface::IV_Requirement IVRequirement() const {return (SimpleKeyingInterface::IV_Requirement)INFO::IV_REQUIREMENT;}

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::IVRequirement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::GetValidKeyLength, COMDAT
; _this$ = ecx

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c2 04 00	 ret	 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::GetValidKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::DefaultKeyLength, COMDAT
; _this$ = ecx

; 136  : 	size_t DefaultKeyLength() const {return INFO::DEFAULT_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::DefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::MaxKeyLength, COMDAT
; _this$ = ecx

; 135  : 	size_t MaxKeyLength() const {return (size_t)INFO::MAX_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::MaxKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::MinKeyLength, COMDAT
; _this$ = ecx

; 134  : 	size_t MinKeyLength() const {return INFO::MIN_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UIDEA_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::IDEA_Info> >::MinKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?BlockSize@?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?BlockSize@?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ PROC ; CryptoPP::BlockCipherImpl<CryptoPP::DES_EDE2_Info,CryptoPP::BlockCipher>::BlockSize, COMDAT
; _this$ = ecx

; 146  : 	unsigned int BlockSize() const {return this->BLOCKSIZE;}

  00000	b8 08 00 00 00	 mov	 eax, 8
  00005	c3		 ret	 0
?BlockSize@?$BlockCipherImpl@UDES_EDE2_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::BlockCipherImpl<CryptoPP::DES_EDE2_Info,CryptoPP::BlockCipher>::BlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00004	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00007	6a 08		 push	 8
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_08ENLOJDBI@DES?9EDE2@
  0000e	56		 push	 esi

; 4377 :         _Mypair._Myval2._Mysize = 0;

  0000f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00016	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0001d	c6 06 00	 mov	 BYTE PTR [esi], 0

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00020	c7 46 10 08 00
	00 00		 mov	 DWORD PTR [esi+16], 8

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 46 08 00	 mov	 BYTE PTR [esi+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> > >::AlgorithmName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::IVSize, COMDAT
; _this$ = ecx

; 139  : 	unsigned int IVSize() const {return INFO::IV_LENGTH;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::IVSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
_TEXT	SEGMENT
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::IVRequirement, COMDAT
; _this$ = ecx

; 138  : 	SimpleKeyingInterface::IV_Requirement IVRequirement() const {return (SimpleKeyingInterface::IV_Requirement)INFO::IV_REQUIREMENT;}

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::IVRequirement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::GetValidKeyLength, COMDAT
; _this$ = ecx

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c2 04 00	 ret	 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::GetValidKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::DefaultKeyLength, COMDAT
; _this$ = ecx

; 136  : 	size_t DefaultKeyLength() const {return INFO::DEFAULT_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::DefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::MaxKeyLength, COMDAT
; _this$ = ecx

; 135  : 	size_t MaxKeyLength() const {return (size_t)INFO::MAX_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::MaxKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::MinKeyLength, COMDAT
; _this$ = ecx

; 134  : 	size_t MinKeyLength() const {return INFO::MIN_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UDES_EDE2_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::DES_EDE2_Info> >::MinKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?BlockSize@?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?BlockSize@?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ PROC ; CryptoPP::BlockCipherImpl<CryptoPP::Camellia_Info,CryptoPP::BlockCipher>::BlockSize, COMDAT
; _this$ = ecx

; 146  : 	unsigned int BlockSize() const {return this->BLOCKSIZE;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?BlockSize@?$BlockCipherImpl@UCamellia_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::BlockCipherImpl<CryptoPP::Camellia_Info,CryptoPP::BlockCipher>::BlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00004	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00007	6a 08		 push	 8
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_08EGCCLPME@Camellia@
  0000e	56		 push	 esi

; 4377 :         _Mypair._Myval2._Mysize = 0;

  0000f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00016	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0001d	c6 06 00	 mov	 BYTE PTR [esi], 0

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00020	c7 46 10 08 00
	00 00		 mov	 DWORD PTR [esi+16], 8

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 46 08 00	 mov	 BYTE PTR [esi+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> > >::AlgorithmName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::IVSize, COMDAT
; _this$ = ecx

; 139  : 	unsigned int IVSize() const {return INFO::IV_LENGTH;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::IVSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
_TEXT	SEGMENT
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::IVRequirement, COMDAT
; _this$ = ecx

; 138  : 	SimpleKeyingInterface::IV_Requirement IVRequirement() const {return (SimpleKeyingInterface::IV_Requirement)INFO::IV_REQUIREMENT;}

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::IVRequirement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::GetValidKeyLength, COMDAT
; _this$ = ecx

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 100  : 		if (n < (size_t)MIN_KEYLENGTH)

  00003	8b 45 08	 mov	 eax, DWORD PTR _n$[ebp]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H
  00009	73 09		 jae	 SHORT $LN4@GetValidKe

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  0000b	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
$LN4@GetValidKe:

; 102  : 		else if (n > (size_t)MAX_KEYLENGTH)

  00014	83 f8 20	 cmp	 eax, 32			; 00000020H
  00017	76 09		 jbe	 SHORT $LN6@GetValidKe

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  00019	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
$LN6@GetValidKe:

; 106  : 			n += KEYLENGTH_MULTIPLE-1;

  00022	83 c0 07	 add	 eax, 7

; 107  : 			return n - n%KEYLENGTH_MULTIPLE;

  00025	83 e0 f8	 and	 eax, -8			; fffffff8H

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::GetValidKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::DefaultKeyLength, COMDAT
; _this$ = ecx

; 136  : 	size_t DefaultKeyLength() const {return INFO::DEFAULT_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::DefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::MaxKeyLength, COMDAT
; _this$ = ecx

; 135  : 	size_t MaxKeyLength() const {return (size_t)INFO::MAX_KEYLENGTH;}

  00000	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00005	c3		 ret	 0
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::MaxKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::MinKeyLength, COMDAT
; _this$ = ecx

; 134  : 	size_t MinKeyLength() const {return INFO::MIN_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCamellia_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Camellia_Info> >::MinKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?BlockSize@?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?BlockSize@?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ PROC ; CryptoPP::BlockCipherImpl<CryptoPP::Blowfish_Info,CryptoPP::BlockCipher>::BlockSize, COMDAT
; _this$ = ecx

; 146  : 	unsigned int BlockSize() const {return this->BLOCKSIZE;}

  00000	b8 08 00 00 00	 mov	 eax, 8
  00005	c3		 ret	 0
?BlockSize@?$BlockCipherImpl@UBlowfish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::BlockCipherImpl<CryptoPP::Blowfish_Info,CryptoPP::BlockCipher>::BlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00004	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00007	6a 08		 push	 8
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_08KOMAHJJD@Blowfish@
  0000e	56		 push	 esi

; 4377 :         _Mypair._Myval2._Mysize = 0;

  0000f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00016	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0001d	c6 06 00	 mov	 BYTE PTR [esi], 0

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00020	c7 46 10 08 00
	00 00		 mov	 DWORD PTR [esi+16], 8

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 46 08 00	 mov	 BYTE PTR [esi+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> > >::AlgorithmName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::IVSize, COMDAT
; _this$ = ecx

; 139  : 	unsigned int IVSize() const {return INFO::IV_LENGTH;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::IVSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
_TEXT	SEGMENT
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::IVRequirement, COMDAT
; _this$ = ecx

; 138  : 	SimpleKeyingInterface::IV_Requirement IVRequirement() const {return (SimpleKeyingInterface::IV_Requirement)INFO::IV_REQUIREMENT;}

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::IVRequirement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::GetValidKeyLength, COMDAT
; _this$ = ecx

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 100  : 		if (n < (size_t)MIN_KEYLENGTH)

  00003	8b 45 08	 mov	 eax, DWORD PTR _n$[ebp]
  00006	83 f8 01	 cmp	 eax, 1
  00009	73 09		 jae	 SHORT $LN4@GetValidKe

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  0000b	b8 01 00 00 00	 mov	 eax, 1
  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
$LN4@GetValidKe:

; 102  : 		else if (n > (size_t)MAX_KEYLENGTH)

  00014	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  00019	3b c1		 cmp	 eax, ecx
  0001b	0f 47 c1	 cmova	 eax, ecx

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::GetValidKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::DefaultKeyLength, COMDAT
; _this$ = ecx

; 136  : 	size_t DefaultKeyLength() const {return INFO::DEFAULT_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::DefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::MaxKeyLength, COMDAT
; _this$ = ecx

; 135  : 	size_t MaxKeyLength() const {return (size_t)INFO::MAX_KEYLENGTH;}

  00000	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  00005	c3		 ret	 0
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::MaxKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::MinKeyLength, COMDAT
; _this$ = ecx

; 134  : 	size_t MinKeyLength() const {return INFO::MIN_KEYLENGTH;}

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UBlowfish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Blowfish_Info> >::MinKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
;	COMDAT ??0?$FixedSizeSecBlock@I$0EAA@V?$FixedSizeAllocatorWithCleanup@I$0EAA@V?$NullAllocator@I@CryptoPP@@$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$FixedSizeSecBlock@I$0EAA@V?$FixedSizeAllocatorWithCleanup@I$0EAA@V?$NullAllocator@I@CryptoPP@@$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z PROC ; CryptoPP::FixedSizeSecBlock<unsigned int,1024,CryptoPP::FixedSizeAllocatorWithCleanup<unsigned int,1024,CryptoPP::NullAllocator<unsigned int>,0> >::FixedSizeSecBlock<unsigned int,1024,CryptoPP::FixedSizeAllocatorWithCleanup<unsigned int,1024,CryptoPP::NullAllocator<unsigned int>,0> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00004	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]

; 166  : 	FixedSizeAllocatorWithCleanup() : m_allocated(false) {}

  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	c6 86 01 10 00
	00 00		 mov	 BYTE PTR [esi+4097], 0

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00014	8b 8a 08 10 00
	00		 mov	 ecx, DWORD PTR [edx+4104]
  0001a	89 8e 08 10 00
	00		 mov	 DWORD PTR [esi+4104], ecx

; 183  : 		if (n <= S && !m_allocated)

  00020	81 f9 00 04 00
	00		 cmp	 ecx, 1024		; 00000400H
  00026	77 0b		 ja	 SHORT $LN9@FixedSizeS

; 184  : 		{
; 185  : 			m_allocated = true;

  00028	c6 86 01 10 00
	00 01		 mov	 BYTE PTR [esi+4097], 1

; 186  : 			return GetAlignedArray();

  0002f	8b c6		 mov	 eax, esi
  00031	eb 02		 jmp	 SHORT $LN10@FixedSizeS
$LN9@FixedSizeS:

; 187  : 		}
; 188  : 		else
; 189  : 			return m_fallbackAllocator.allocate(n, hint);

  00033	33 c0		 xor	 eax, eax
$LN10@FixedSizeS:

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00035	c1 e1 02	 shl	 ecx, 2
  00038	89 86 0c 10 00
	00		 mov	 DWORD PTR [esi+4108], eax
  0003e	8b 92 0c 10 00
	00		 mov	 edx, DWORD PTR [edx+4108]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 42   :         if (_SourceSize == 0)

  00044	85 c9		 test	 ecx, ecx
  00046	74 37		 je	 SHORT $LN20@FixedSizeS

; 43   :         {
; 44   :             return 0;
; 45   :         }
; 46   : 
; 47   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  00048	85 c0		 test	 eax, eax
  0004a	74 23		 je	 SHORT $LN21@FixedSizeS

; 48   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  0004c	51		 push	 ecx
  0004d	85 d2		 test	 edx, edx
  0004f	74 13		 je	 SHORT $LN16@FixedSizeS

; 53   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);
; 54   : 
; 55   :             // Unreachable, but required to suppress /analyze warnings:
; 56   :             return EINVAL;
; 57   :         }
; 58   : #pragma warning(suppress:4996) // Deprecation
; 59   :         memcpy(_Destination, _Source, _SourceSize);

  00051	52		 push	 edx
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 _memcpy
  00058	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005b	8b c6		 mov	 eax, esi
  0005d	5e		 pop	 esi
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c2 04 00	 ret	 4
$LN16@FixedSizeS:

; 49   :         {
; 50   :             memset(_Destination, 0, _DestinationSize);

  00064	6a 00		 push	 0
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 _memset
  0006c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN21@FixedSizeS:

; 51   : 
; 52   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);

  0006f	e8 00 00 00 00	 call	 __errno
  00074	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  0007a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN20@FixedSizeS:
  0007f	8b c6		 mov	 eax, esi
  00081	5e		 pop	 esi
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 04 00	 ret	 4
??0?$FixedSizeSecBlock@I$0EAA@V?$FixedSizeAllocatorWithCleanup@I$0EAA@V?$NullAllocator@I@CryptoPP@@$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z ENDP ; CryptoPP::FixedSizeSecBlock<unsigned int,1024,CryptoPP::FixedSizeAllocatorWithCleanup<unsigned int,1024,CryptoPP::NullAllocator<unsigned int>,0> >::FixedSizeSecBlock<unsigned int,1024,CryptoPP::FixedSizeAllocatorWithCleanup<unsigned int,1024,CryptoPP::NullAllocator<unsigned int>,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?BlockSize@?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?BlockSize@?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ PROC ; CryptoPP::BlockCipherImpl<CryptoPP::Twofish_Info,CryptoPP::BlockCipher>::BlockSize, COMDAT
; _this$ = ecx

; 146  : 	unsigned int BlockSize() const {return this->BLOCKSIZE;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?BlockSize@?$BlockCipherImpl@UTwofish_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::BlockCipherImpl<CryptoPP::Twofish_Info,CryptoPP::BlockCipher>::BlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00004	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00007	6a 07		 push	 7
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_07DABDIDEC@Twofish@
  0000e	56		 push	 esi

; 4377 :         _Mypair._Myval2._Mysize = 0;

  0000f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00016	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0001d	c6 06 00	 mov	 BYTE PTR [esi], 0

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00020	c7 46 10 07 00
	00 00		 mov	 DWORD PTR [esi+16], 7

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 46 07 00	 mov	 BYTE PTR [esi+7], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> > >::AlgorithmName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::IVSize, COMDAT
; _this$ = ecx

; 139  : 	unsigned int IVSize() const {return INFO::IV_LENGTH;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::IVSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
_TEXT	SEGMENT
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::IVRequirement, COMDAT
; _this$ = ecx

; 138  : 	SimpleKeyingInterface::IV_Requirement IVRequirement() const {return (SimpleKeyingInterface::IV_Requirement)INFO::IV_REQUIREMENT;}

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::IVRequirement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::GetValidKeyLength, COMDAT
; _this$ = ecx

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00008	39 45 08	 cmp	 DWORD PTR _n$[ebp], eax
  0000b	0f 46 45 08	 cmovbe	 eax, DWORD PTR _n$[ebp]
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::GetValidKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::DefaultKeyLength, COMDAT
; _this$ = ecx

; 136  : 	size_t DefaultKeyLength() const {return INFO::DEFAULT_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::DefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::MaxKeyLength, COMDAT
; _this$ = ecx

; 135  : 	size_t MaxKeyLength() const {return (size_t)INFO::MAX_KEYLENGTH;}

  00000	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00005	c3		 ret	 0
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::MaxKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::MinKeyLength, COMDAT
; _this$ = ecx

; 134  : 	size_t MinKeyLength() const {return INFO::MIN_KEYLENGTH;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UTwofish_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Twofish_Info> >::MinKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?BlockSize@?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?BlockSize@?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ PROC ; CryptoPP::BlockCipherImpl<CryptoPP::Serpent_Info,CryptoPP::BlockCipher>::BlockSize, COMDAT
; _this$ = ecx

; 146  : 	unsigned int BlockSize() const {return this->BLOCKSIZE;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?BlockSize@?$BlockCipherImpl@USerpent_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::BlockCipherImpl<CryptoPP::Serpent_Info,CryptoPP::BlockCipher>::BlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00004	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00007	6a 07		 push	 7
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_07CCCAKGBN@Serpent@
  0000e	56		 push	 esi

; 4377 :         _Mypair._Myval2._Mysize = 0;

  0000f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00016	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0001d	c6 06 00	 mov	 BYTE PTR [esi], 0

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00020	c7 46 10 07 00
	00 00		 mov	 DWORD PTR [esi+16], 7

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 46 07 00	 mov	 BYTE PTR [esi+7], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> > >::AlgorithmName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::IVSize, COMDAT
; _this$ = ecx

; 139  : 	unsigned int IVSize() const {return INFO::IV_LENGTH;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::IVSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
_TEXT	SEGMENT
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::IVRequirement, COMDAT
; _this$ = ecx

; 138  : 	SimpleKeyingInterface::IV_Requirement IVRequirement() const {return (SimpleKeyingInterface::IV_Requirement)INFO::IV_REQUIREMENT;}

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::IVRequirement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::GetValidKeyLength, COMDAT
; _this$ = ecx

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00008	39 45 08	 cmp	 DWORD PTR _n$[ebp], eax
  0000b	0f 46 45 08	 cmovbe	 eax, DWORD PTR _n$[ebp]
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::GetValidKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::DefaultKeyLength, COMDAT
; _this$ = ecx

; 136  : 	size_t DefaultKeyLength() const {return INFO::DEFAULT_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::DefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::MaxKeyLength, COMDAT
; _this$ = ecx

; 135  : 	size_t MaxKeyLength() const {return (size_t)INFO::MAX_KEYLENGTH;}

  00000	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00005	c3		 ret	 0
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::MaxKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::MinKeyLength, COMDAT
; _this$ = ecx

; 134  : 	size_t MinKeyLength() const {return INFO::MIN_KEYLENGTH;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@USerpent_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::Serpent_Info> >::MinKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
;	COMDAT ??0?$FixedSizeSecBlock@I$0CI@V?$FixedSizeAllocatorWithCleanup@I$0CI@V?$NullAllocator@I@CryptoPP@@$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$FixedSizeSecBlock@I$0CI@V?$FixedSizeAllocatorWithCleanup@I$0CI@V?$NullAllocator@I@CryptoPP@@$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z PROC ; CryptoPP::FixedSizeSecBlock<unsigned int,40,CryptoPP::FixedSizeAllocatorWithCleanup<unsigned int,40,CryptoPP::NullAllocator<unsigned int>,0> >::FixedSizeSecBlock<unsigned int,40,CryptoPP::FixedSizeAllocatorWithCleanup<unsigned int,40,CryptoPP::NullAllocator<unsigned int>,0> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00004	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]

; 166  : 	FixedSizeAllocatorWithCleanup() : m_allocated(false) {}

  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	c6 86 a1 00 00
	00 00		 mov	 BYTE PTR [esi+161], 0

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00014	8b 8a a8 00 00
	00		 mov	 ecx, DWORD PTR [edx+168]
  0001a	89 8e a8 00 00
	00		 mov	 DWORD PTR [esi+168], ecx

; 183  : 		if (n <= S && !m_allocated)

  00020	83 f9 28	 cmp	 ecx, 40			; 00000028H
  00023	77 0b		 ja	 SHORT $LN9@FixedSizeS

; 184  : 		{
; 185  : 			m_allocated = true;

  00025	c6 86 a1 00 00
	00 01		 mov	 BYTE PTR [esi+161], 1

; 186  : 			return GetAlignedArray();

  0002c	8b c6		 mov	 eax, esi
  0002e	eb 02		 jmp	 SHORT $LN10@FixedSizeS
$LN9@FixedSizeS:

; 187  : 		}
; 188  : 		else
; 189  : 			return m_fallbackAllocator.allocate(n, hint);

  00030	33 c0		 xor	 eax, eax
$LN10@FixedSizeS:

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00032	c1 e1 02	 shl	 ecx, 2
  00035	89 86 ac 00 00
	00		 mov	 DWORD PTR [esi+172], eax
  0003b	8b 92 ac 00 00
	00		 mov	 edx, DWORD PTR [edx+172]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 42   :         if (_SourceSize == 0)

  00041	85 c9		 test	 ecx, ecx
  00043	74 37		 je	 SHORT $LN20@FixedSizeS

; 43   :         {
; 44   :             return 0;
; 45   :         }
; 46   : 
; 47   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  00045	85 c0		 test	 eax, eax
  00047	74 23		 je	 SHORT $LN21@FixedSizeS

; 48   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  00049	51		 push	 ecx
  0004a	85 d2		 test	 edx, edx
  0004c	74 13		 je	 SHORT $LN16@FixedSizeS

; 53   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);
; 54   : 
; 55   :             // Unreachable, but required to suppress /analyze warnings:
; 56   :             return EINVAL;
; 57   :         }
; 58   : #pragma warning(suppress:4996) // Deprecation
; 59   :         memcpy(_Destination, _Source, _SourceSize);

  0004e	52		 push	 edx
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 _memcpy
  00055	83 c4 0c	 add	 esp, 12			; 0000000cH
  00058	8b c6		 mov	 eax, esi
  0005a	5e		 pop	 esi
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 04 00	 ret	 4
$LN16@FixedSizeS:

; 49   :         {
; 50   :             memset(_Destination, 0, _DestinationSize);

  00061	6a 00		 push	 0
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 _memset
  00069	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN21@FixedSizeS:

; 51   : 
; 52   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);

  0006c	e8 00 00 00 00	 call	 __errno
  00071	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  00077	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN20@FixedSizeS:
  0007c	8b c6		 mov	 eax, esi
  0007e	5e		 pop	 esi
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
??0?$FixedSizeSecBlock@I$0CI@V?$FixedSizeAllocatorWithCleanup@I$0CI@V?$NullAllocator@I@CryptoPP@@$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z ENDP ; CryptoPP::FixedSizeSecBlock<unsigned int,40,CryptoPP::FixedSizeAllocatorWithCleanup<unsigned int,40,CryptoPP::NullAllocator<unsigned int>,0> >::FixedSizeSecBlock<unsigned int,40,CryptoPP::FixedSizeAllocatorWithCleanup<unsigned int,40,CryptoPP::NullAllocator<unsigned int>,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?BlockSize@?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?BlockSize@?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ PROC ; CryptoPP::BlockCipherImpl<CryptoPP::MARS_Info,CryptoPP::BlockCipher>::BlockSize, COMDAT
; _this$ = ecx

; 146  : 	unsigned int BlockSize() const {return this->BLOCKSIZE;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?BlockSize@?$BlockCipherImpl@UMARS_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::BlockCipherImpl<CryptoPP::MARS_Info,CryptoPP::BlockCipher>::BlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00003	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 4377 :         _Mypair._Myval2._Mysize = 0;

  00006	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0000d	c7 40 14 0f 00
	00 00		 mov	 DWORD PTR [eax+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00014	c6 00 00	 mov	 BYTE PTR [eax], 0

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00017	c7 40 10 04 00
	00 00		 mov	 DWORD PTR [eax+16], 4

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0001e	c7 00 4d 41 52
	53		 mov	 DWORD PTR [eax], 1397899597 ; 5352414dH

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00024	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> > >::AlgorithmName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::IVSize, COMDAT
; _this$ = ecx

; 139  : 	unsigned int IVSize() const {return INFO::IV_LENGTH;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::IVSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
_TEXT	SEGMENT
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::IVRequirement, COMDAT
; _this$ = ecx

; 138  : 	SimpleKeyingInterface::IV_Requirement IVRequirement() const {return (SimpleKeyingInterface::IV_Requirement)INFO::IV_REQUIREMENT;}

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::IVRequirement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::GetValidKeyLength, COMDAT
; _this$ = ecx

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 100  : 		if (n < (size_t)MIN_KEYLENGTH)

  00003	8b 45 08	 mov	 eax, DWORD PTR _n$[ebp]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H
  00009	73 09		 jae	 SHORT $LN4@GetValidKe

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  0000b	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
$LN4@GetValidKe:

; 102  : 		else if (n > (size_t)MAX_KEYLENGTH)

  00014	83 f8 38	 cmp	 eax, 56			; 00000038H
  00017	76 09		 jbe	 SHORT $LN6@GetValidKe

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  00019	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
$LN6@GetValidKe:

; 106  : 			n += KEYLENGTH_MULTIPLE-1;

  00022	83 c0 03	 add	 eax, 3

; 107  : 			return n - n%KEYLENGTH_MULTIPLE;

  00025	83 e0 fc	 and	 eax, -4			; fffffffcH

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::GetValidKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::DefaultKeyLength, COMDAT
; _this$ = ecx

; 136  : 	size_t DefaultKeyLength() const {return INFO::DEFAULT_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::DefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::MaxKeyLength, COMDAT
; _this$ = ecx

; 135  : 	size_t MaxKeyLength() const {return (size_t)INFO::MAX_KEYLENGTH;}

  00000	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  00005	c3		 ret	 0
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::MaxKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::MinKeyLength, COMDAT
; _this$ = ecx

; 134  : 	size_t MinKeyLength() const {return INFO::MIN_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UMARS_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::MARS_Info> >::MinKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??0?$SecBlock@IV?$AllocatorWithCleanup@I$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z
_TEXT	SEGMENT
_t$ = 8							; size = 4
??0?$SecBlock@IV?$AllocatorWithCleanup@I$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z PROC ; CryptoPP::SecBlock<unsigned int,CryptoPP::AllocatorWithCleanup<unsigned int,0> >::SecBlock<unsigned int,CryptoPP::AllocatorWithCleanup<unsigned int,0> >, COMDAT
; _this$ = ecx

; 248  : 	SecBlock(const SecBlock<T, A> &t)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _t$[ebp]
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	57		 push	 edi
  0000b	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]

; 91   : 		CheckSize(n);

  0000e	57		 push	 edi

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  0000f	89 7e 04	 mov	 DWORD PTR [esi+4], edi

; 91   : 		CheckSize(n);

  00012	e8 00 00 00 00	 call	 ?CheckSize@?$AllocatorBase@I@CryptoPP@@KAXI@Z ; CryptoPP::AllocatorBase<unsigned int>::CheckSize
  00017	83 c4 04	 add	 esp, 4

; 92   : 		if (n == 0)

  0001a	85 ff		 test	 edi, edi
  0001c	75 04		 jne	 SHORT $LN4@SecBlock

; 93   : 			return NULL;

  0001e	33 c0		 xor	 eax, eax
  00020	eb 10		 jmp	 SHORT $LN3@SecBlock
$LN4@SecBlock:

; 94   : 
; 95   : #if CRYPTOPP_BOOL_ALIGN16_ENABLED
; 96   : 		if (T_Align16 && n*sizeof(T) >= 16)
; 97   : 			return (pointer)AlignedAllocate(n*sizeof(T));
; 98   : #endif
; 99   : 
; 100  : 		return (pointer)UnalignedAllocate(n*sizeof(T));

  00022	8d 04 bd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*4]
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ?UnalignedAllocate@CryptoPP@@YAPAXI@Z ; CryptoPP::UnalignedAllocate
  0002f	83 c4 04	 add	 esp, 4
$LN3@SecBlock:

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00032	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00035	c1 e1 02	 shl	 ecx, 2
  00038	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0003b	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 42   :         if (_SourceSize == 0)

  0003e	85 c9		 test	 ecx, ecx
  00040	74 37		 je	 SHORT $LN15@SecBlock

; 43   :         {
; 44   :             return 0;
; 45   :         }
; 46   : 
; 47   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  00042	85 c0		 test	 eax, eax
  00044	74 23		 je	 SHORT $LN16@SecBlock

; 48   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  00046	51		 push	 ecx
  00047	85 d2		 test	 edx, edx
  00049	74 13		 je	 SHORT $LN11@SecBlock

; 51   : 
; 52   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);
; 53   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);
; 54   : 
; 55   :             // Unreachable, but required to suppress /analyze warnings:
; 56   :             return EINVAL;
; 57   :         }
; 58   : #pragma warning(suppress:4996) // Deprecation
; 59   :         memcpy(_Destination, _Source, _SourceSize);

  0004b	52		 push	 edx
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 _memcpy
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00055	8b c6		 mov	 eax, esi
  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	5d		 pop	 ebp
  0005b	c2 04 00	 ret	 4
$LN11@SecBlock:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 50   :             memset(_Destination, 0, _DestinationSize);

  0005e	6a 00		 push	 0
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 _memset
  00066	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN16@SecBlock:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00069	e8 00 00 00 00	 call	 __errno
  0006e	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  00074	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN15@SecBlock:
  00079	5f		 pop	 edi
  0007a	8b c6		 mov	 eax, esi
  0007c	5e		 pop	 esi
  0007d	5b		 pop	 ebx
  0007e	5d		 pop	 ebp
  0007f	c2 04 00	 ret	 4
??0?$SecBlock@IV?$AllocatorWithCleanup@I$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z ENDP ; CryptoPP::SecBlock<unsigned int,CryptoPP::AllocatorWithCleanup<unsigned int,0> >::SecBlock<unsigned int,CryptoPP::AllocatorWithCleanup<unsigned int,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?BlockSize@?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?BlockSize@?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ PROC ; CryptoPP::BlockCipherImpl<CryptoPP::RC6_Info,CryptoPP::BlockCipher>::BlockSize, COMDAT
; _this$ = ecx

; 146  : 	unsigned int BlockSize() const {return this->BLOCKSIZE;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?BlockSize@?$BlockCipherImpl@URC6_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::BlockCipherImpl<CryptoPP::RC6_Info,CryptoPP::BlockCipher>::BlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00004	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00007	6a 03		 push	 3
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_03EEHPEFCG@RC6@
  0000e	56		 push	 esi

; 4377 :         _Mypair._Myval2._Mysize = 0;

  0000f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00016	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0001d	c6 06 00	 mov	 BYTE PTR [esi], 0

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00020	c7 46 10 03 00
	00 00		 mov	 DWORD PTR [esi+16], 3

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 46 03 00	 mov	 BYTE PTR [esi+3], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> > >::AlgorithmName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::IVSize, COMDAT
; _this$ = ecx

; 139  : 	unsigned int IVSize() const {return INFO::IV_LENGTH;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::IVSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
_TEXT	SEGMENT
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::IVRequirement, COMDAT
; _this$ = ecx

; 138  : 	SimpleKeyingInterface::IV_Requirement IVRequirement() const {return (SimpleKeyingInterface::IV_Requirement)INFO::IV_REQUIREMENT;}

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::IVRequirement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::GetValidKeyLength, COMDAT
; _this$ = ecx

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  00008	39 45 08	 cmp	 DWORD PTR _n$[ebp], eax
  0000b	0f 46 45 08	 cmovbe	 eax, DWORD PTR _n$[ebp]
  0000f	5d		 pop	 ebp
  00010	c2 04 00	 ret	 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::GetValidKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::DefaultKeyLength, COMDAT
; _this$ = ecx

; 136  : 	size_t DefaultKeyLength() const {return INFO::DEFAULT_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::DefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::MaxKeyLength, COMDAT
; _this$ = ecx

; 135  : 	size_t MaxKeyLength() const {return (size_t)INFO::MAX_KEYLENGTH;}

  00000	b8 ff 00 00 00	 mov	 eax, 255		; 000000ffH
  00005	c3		 ret	 0
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::MaxKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::MinKeyLength, COMDAT
; _this$ = ecx

; 134  : 	size_t MinKeyLength() const {return INFO::MIN_KEYLENGTH;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@URC6_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::RC6_Info> >::MinKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?BlockSize@?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?BlockSize@?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ PROC ; CryptoPP::BlockCipherImpl<CryptoPP::CAST256_Info,CryptoPP::BlockCipher>::BlockSize, COMDAT
; _this$ = ecx

; 146  : 	unsigned int BlockSize() const {return this->BLOCKSIZE;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?BlockSize@?$BlockCipherImpl@UCAST256_Info@CryptoPP@@VBlockCipher@2@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::BlockCipherImpl<CryptoPP::CAST256_Info,CryptoPP::BlockCipher>::BlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h
;	COMDAT ?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> > >::AlgorithmName, COMDAT
; _this$ = ecx

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00004	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00007	6a 08		 push	 8
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_08FGDDMCLK@CAST?9256@
  0000e	56		 push	 esi

; 4377 :         _Mypair._Myval2._Mysize = 0;

  0000f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00016	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0001d	c6 06 00	 mov	 BYTE PTR [esi], 0

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00020	c7 46 10 08 00
	00 00		 mov	 DWORD PTR [esi+16], 8

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 46 08 00	 mov	 BYTE PTR [esi+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\simple.h

; 28   : 	std::string AlgorithmName() const {return ALGORITHM_INFO::StaticAlgorithmName();}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?AlgorithmName@?$AlgorithmImpl@V?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@V12@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::AlgorithmImpl<CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >,CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> > >::AlgorithmName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::IVSize, COMDAT
; _this$ = ecx

; 139  : 	unsigned int IVSize() const {return INFO::IV_LENGTH;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?IVSize@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::IVSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
_TEXT	SEGMENT
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::IVRequirement, COMDAT
; _this$ = ecx

; 138  : 	SimpleKeyingInterface::IV_Requirement IVRequirement() const {return (SimpleKeyingInterface::IV_Requirement)INFO::IV_REQUIREMENT;}

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?IVRequirement@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::IVRequirement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::GetValidKeyLength, COMDAT
; _this$ = ecx

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 100  : 		if (n < (size_t)MIN_KEYLENGTH)

  00003	8b 45 08	 mov	 eax, DWORD PTR _n$[ebp]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H
  00009	73 09		 jae	 SHORT $LN4@GetValidKe

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  0000b	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00010	5d		 pop	 ebp
  00011	c2 04 00	 ret	 4
$LN4@GetValidKe:

; 102  : 		else if (n > (size_t)MAX_KEYLENGTH)

  00014	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00019	3b c1		 cmp	 eax, ecx
  0001b	0f 47 c1	 cmova	 eax, ecx

; 137  : 	size_t GetValidKeyLength(size_t n) const {return INFO::StaticGetValidKeyLength(n);}

  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
?GetValidKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEII@Z ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::GetValidKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::DefaultKeyLength, COMDAT
; _this$ = ecx

; 136  : 	size_t DefaultKeyLength() const {return INFO::DEFAULT_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?DefaultKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::DefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::MaxKeyLength, COMDAT
; _this$ = ecx

; 135  : 	size_t MaxKeyLength() const {return (size_t)INFO::MAX_KEYLENGTH;}

  00000	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00005	c3		 ret	 0
?MaxKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::MaxKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\seckey.h
;	COMDAT ?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::MinKeyLength, COMDAT
; _this$ = ecx

; 134  : 	size_t MinKeyLength() const {return INFO::MIN_KEYLENGTH;}

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?MinKeyLength@?$SimpleKeyingInterfaceImpl@V?$TwoBases@VBlockCipher@CryptoPP@@UCAST256_Info@2@@CryptoPP@@V12@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterfaceImpl<CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info>,CryptoPP::TwoBases<CryptoPP::BlockCipher,CryptoPP::CAST256_Info> >::MinKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
;	COMDAT ??0?$FixedSizeSecBlock@I$0CA@V?$FixedSizeAllocatorWithCleanup@I$0CA@V?$NullAllocator@I@CryptoPP@@$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$FixedSizeSecBlock@I$0CA@V?$FixedSizeAllocatorWithCleanup@I$0CA@V?$NullAllocator@I@CryptoPP@@$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z PROC ; CryptoPP::FixedSizeSecBlock<unsigned int,32,CryptoPP::FixedSizeAllocatorWithCleanup<unsigned int,32,CryptoPP::NullAllocator<unsigned int>,0> >::FixedSizeSecBlock<unsigned int,32,CryptoPP::FixedSizeAllocatorWithCleanup<unsigned int,32,CryptoPP::NullAllocator<unsigned int>,0> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00004	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]

; 166  : 	FixedSizeAllocatorWithCleanup() : m_allocated(false) {}

  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000d	c6 86 81 00 00
	00 00		 mov	 BYTE PTR [esi+129], 0

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00014	8b 8a 88 00 00
	00		 mov	 ecx, DWORD PTR [edx+136]
  0001a	89 8e 88 00 00
	00		 mov	 DWORD PTR [esi+136], ecx

; 183  : 		if (n <= S && !m_allocated)

  00020	83 f9 20	 cmp	 ecx, 32			; 00000020H
  00023	77 0b		 ja	 SHORT $LN9@FixedSizeS

; 184  : 		{
; 185  : 			m_allocated = true;

  00025	c6 86 81 00 00
	00 01		 mov	 BYTE PTR [esi+129], 1

; 186  : 			return GetAlignedArray();

  0002c	8b c6		 mov	 eax, esi
  0002e	eb 02		 jmp	 SHORT $LN10@FixedSizeS
$LN9@FixedSizeS:

; 187  : 		}
; 188  : 		else
; 189  : 			return m_fallbackAllocator.allocate(n, hint);

  00030	33 c0		 xor	 eax, eax
$LN10@FixedSizeS:

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00032	c1 e1 02	 shl	 ecx, 2
  00035	89 86 8c 00 00
	00		 mov	 DWORD PTR [esi+140], eax
  0003b	8b 92 8c 00 00
	00		 mov	 edx, DWORD PTR [edx+140]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 42   :         if (_SourceSize == 0)

  00041	85 c9		 test	 ecx, ecx
  00043	74 37		 je	 SHORT $LN20@FixedSizeS

; 43   :         {
; 44   :             return 0;
; 45   :         }
; 46   : 
; 47   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  00045	85 c0		 test	 eax, eax
  00047	74 23		 je	 SHORT $LN21@FixedSizeS

; 48   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  00049	51		 push	 ecx
  0004a	85 d2		 test	 edx, edx
  0004c	74 13		 je	 SHORT $LN16@FixedSizeS

; 53   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);
; 54   : 
; 55   :             // Unreachable, but required to suppress /analyze warnings:
; 56   :             return EINVAL;
; 57   :         }
; 58   : #pragma warning(suppress:4996) // Deprecation
; 59   :         memcpy(_Destination, _Source, _SourceSize);

  0004e	52		 push	 edx
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 _memcpy
  00055	83 c4 0c	 add	 esp, 12			; 0000000cH
  00058	8b c6		 mov	 eax, esi
  0005a	5e		 pop	 esi
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c2 04 00	 ret	 4
$LN16@FixedSizeS:

; 49   :         {
; 50   :             memset(_Destination, 0, _DestinationSize);

  00061	6a 00		 push	 0
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 _memset
  00069	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN21@FixedSizeS:

; 51   : 
; 52   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);

  0006c	e8 00 00 00 00	 call	 __errno
  00071	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  00077	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN20@FixedSizeS:
  0007c	8b c6		 mov	 eax, esi
  0007e	5e		 pop	 esi
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
??0?$FixedSizeSecBlock@I$0CA@V?$FixedSizeAllocatorWithCleanup@I$0CA@V?$NullAllocator@I@CryptoPP@@$0A@@CryptoPP@@@CryptoPP@@QAE@ABV01@@Z ENDP ; CryptoPP::FixedSizeSecBlock<unsigned int,32,CryptoPP::FixedSizeAllocatorWithCleanup<unsigned int,32,CryptoPP::NullAllocator<unsigned int>,0> >::FixedSizeSecBlock<unsigned int,32,CryptoPP::FixedSizeAllocatorWithCleanup<unsigned int,32,CryptoPP::NullAllocator<unsigned int>,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GDH2@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GDH2@CryptoPP@@UAEPAXI@Z PROC			; CryptoPP::DH2::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	74 0b		 je	 SHORT $LN4@scalar
  0000c	6a 0c		 push	 12			; 0000000cH
  0000e	56		 push	 esi
  0000f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00014	83 c4 08	 add	 esp, 8
$LN4@scalar:
  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
??_GDH2@CryptoPP@@UAEPAXI@Z ENDP			; CryptoPP::DH2::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh2.h
;	COMDAT ?GenerateEphemeralKeyPair@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE1@Z
_TEXT	SEGMENT
_rng$ = 8						; size = 4
_privateKey$ = 12					; size = 4
_publicKey$ = 16					; size = 4
?GenerateEphemeralKeyPair@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE1@Z PROC ; CryptoPP::DH2::GenerateEphemeralKeyPair, COMDAT
; _this$ = ecx

; 45   : 		{d2.GenerateKeyPair(rng, privateKey, publicKey);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	5d		 pop	 ebp
  00009	ff 60 30	 jmp	 DWORD PTR [eax+48]
?GenerateEphemeralKeyPair@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE1@Z ENDP ; CryptoPP::DH2::GenerateEphemeralKeyPair
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh2.h
;	COMDAT ?GenerateEphemeralPublicKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z
_TEXT	SEGMENT
_rng$ = 8						; size = 4
_privateKey$ = 12					; size = 4
_publicKey$ = 16					; size = 4
?GenerateEphemeralPublicKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z PROC ; CryptoPP::DH2::GenerateEphemeralPublicKey, COMDAT
; _this$ = ecx

; 43   : 		{d2.GeneratePublicKey(rng, privateKey, publicKey);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	5d		 pop	 ebp
  00009	ff 60 2c	 jmp	 DWORD PTR [eax+44]
?GenerateEphemeralPublicKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z ENDP ; CryptoPP::DH2::GenerateEphemeralPublicKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh2.h
;	COMDAT ?GenerateEphemeralPrivateKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z
_TEXT	SEGMENT
_rng$ = 8						; size = 4
_privateKey$ = 12					; size = 4
?GenerateEphemeralPrivateKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z PROC ; CryptoPP::DH2::GenerateEphemeralPrivateKey, COMDAT
; _this$ = ecx

; 41   : 		{d2.GeneratePrivateKey(rng, privateKey);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	5d		 pop	 ebp
  00009	ff 60 28	 jmp	 DWORD PTR [eax+40]
?GenerateEphemeralPrivateKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z ENDP ; CryptoPP::DH2::GenerateEphemeralPrivateKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh2.h
;	COMDAT ?EphemeralPublicKeyLength@DH2@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?EphemeralPublicKeyLength@DH2@CryptoPP@@UBEIXZ PROC	; CryptoPP::DH2::EphemeralPublicKeyLength, COMDAT
; _this$ = ecx

; 39   : 		{return d2.PublicKeyLength();}

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	ff 60 24	 jmp	 DWORD PTR [eax+36]
?EphemeralPublicKeyLength@DH2@CryptoPP@@UBEIXZ ENDP	; CryptoPP::DH2::EphemeralPublicKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh2.h
;	COMDAT ?EphemeralPrivateKeyLength@DH2@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?EphemeralPrivateKeyLength@DH2@CryptoPP@@UBEIXZ PROC	; CryptoPP::DH2::EphemeralPrivateKeyLength, COMDAT
; _this$ = ecx

; 37   : 		{return d2.PrivateKeyLength();}

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	ff 60 20	 jmp	 DWORD PTR [eax+32]
?EphemeralPrivateKeyLength@DH2@CryptoPP@@UBEIXZ ENDP	; CryptoPP::DH2::EphemeralPrivateKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh2.h
;	COMDAT ?GenerateStaticKeyPair@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE1@Z
_TEXT	SEGMENT
_rng$ = 8						; size = 4
_privateKey$ = 12					; size = 4
_publicKey$ = 16					; size = 4
?GenerateStaticKeyPair@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE1@Z PROC ; CryptoPP::DH2::GenerateStaticKeyPair, COMDAT
; _this$ = ecx

; 34   : 		{d1.GenerateKeyPair(rng, privateKey, publicKey);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	5d		 pop	 ebp
  00009	ff 60 30	 jmp	 DWORD PTR [eax+48]
?GenerateStaticKeyPair@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE1@Z ENDP ; CryptoPP::DH2::GenerateStaticKeyPair
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh2.h
;	COMDAT ?GenerateStaticPublicKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z
_TEXT	SEGMENT
_rng$ = 8						; size = 4
_privateKey$ = 12					; size = 4
_publicKey$ = 16					; size = 4
?GenerateStaticPublicKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z PROC ; CryptoPP::DH2::GenerateStaticPublicKey, COMDAT
; _this$ = ecx

; 32   : 		{d1.GeneratePublicKey(rng, privateKey, publicKey);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	5d		 pop	 ebp
  00009	ff 60 2c	 jmp	 DWORD PTR [eax+44]
?GenerateStaticPublicKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z ENDP ; CryptoPP::DH2::GenerateStaticPublicKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh2.h
;	COMDAT ?GenerateStaticPrivateKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z
_TEXT	SEGMENT
_rng$ = 8						; size = 4
_privateKey$ = 12					; size = 4
?GenerateStaticPrivateKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z PROC ; CryptoPP::DH2::GenerateStaticPrivateKey, COMDAT
; _this$ = ecx

; 30   : 		{d1.GeneratePrivateKey(rng, privateKey);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	5d		 pop	 ebp
  00009	ff 60 28	 jmp	 DWORD PTR [eax+40]
?GenerateStaticPrivateKey@DH2@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z ENDP ; CryptoPP::DH2::GenerateStaticPrivateKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh2.h
;	COMDAT ?StaticPublicKeyLength@DH2@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?StaticPublicKeyLength@DH2@CryptoPP@@UBEIXZ PROC	; CryptoPP::DH2::StaticPublicKeyLength, COMDAT
; _this$ = ecx

; 28   : 		{return d1.PublicKeyLength();}

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	ff 60 24	 jmp	 DWORD PTR [eax+36]
?StaticPublicKeyLength@DH2@CryptoPP@@UBEIXZ ENDP	; CryptoPP::DH2::StaticPublicKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh2.h
;	COMDAT ?StaticPrivateKeyLength@DH2@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?StaticPrivateKeyLength@DH2@CryptoPP@@UBEIXZ PROC	; CryptoPP::DH2::StaticPrivateKeyLength, COMDAT
; _this$ = ecx

; 26   : 		{return d1.PrivateKeyLength();}

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	ff 60 20	 jmp	 DWORD PTR [eax+32]
?StaticPrivateKeyLength@DH2@CryptoPP@@UBEIXZ ENDP	; CryptoPP::DH2::StaticPrivateKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh2.h
;	COMDAT ?AgreedValueLength@DH2@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?AgreedValueLength@DH2@CryptoPP@@UBEIXZ PROC		; CryptoPP::DH2::AgreedValueLength, COMDAT
; _this$ = ecx

; 23   : 		{return d1.AgreedValueLength() + d2.AgreedValueLength();}

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx
  00004	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00007	8b 01		 mov	 eax, DWORD PTR [ecx]
  00009	ff 50 1c	 call	 DWORD PTR [eax+28]
  0000c	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0000f	8b f0		 mov	 esi, eax
  00011	8b 11		 mov	 edx, DWORD PTR [ecx]
  00013	ff 52 1c	 call	 DWORD PTR [edx+28]
  00016	5f		 pop	 edi
  00017	03 c6		 add	 eax, esi
  00019	5e		 pop	 esi
  0001a	c3		 ret	 0
?AgreedValueLength@DH2@CryptoPP@@UBEIXZ ENDP		; CryptoPP::DH2::AgreedValueLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh2.h
;	COMDAT ?AccessCryptoParameters@DH2@CryptoPP@@UAEAAVCryptoParameters@2@XZ
_TEXT	SEGMENT
?AccessCryptoParameters@DH2@CryptoPP@@UAEAAVCryptoParameters@2@XZ PROC ; CryptoPP::DH2::AccessCryptoParameters, COMDAT
; _this$ = ecx

; 20   : 	CryptoParameters & AccessCryptoParameters() {return d1.AccessCryptoParameters();}

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	ff 60 14	 jmp	 DWORD PTR [eax+20]
?AccessCryptoParameters@DH2@CryptoPP@@UAEAAVCryptoParameters@2@XZ ENDP ; CryptoPP::DH2::AccessCryptoParameters
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00009	e8 00 00 00 00	 call	 ??1?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAE@XZ
  0000e	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00012	74 0b		 je	 SHORT $LN18@scalar
  00014	6a 74		 push	 116			; 00000074H
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0001c	83 c4 08	 add	 esp, 8
$LN18@scalar:
  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 04 00	 ret	 4
??_G?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
??1?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UAE@XZ PROC ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::~DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >, COMDAT
; _this$ = ecx
  00000	83 c1 04	 add	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??1?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAE@XZ
??1?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UAE@XZ ENDP ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::~DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h
;	COMDAT ?AccessAbstractGroupParameters@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@EAEAAV?$DL_GroupParameters@VInteger@CryptoPP@@@2@XZ
_TEXT	SEGMENT
?AccessAbstractGroupParameters@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@EAEAAV?$DL_GroupParameters@VInteger@CryptoPP@@@2@XZ PROC ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::AccessAbstractGroupParameters, COMDAT
; _this$ = ecx

; 87   : 		{return m_groupParameters;}

  00000	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  00003	c3		 ret	 0
?AccessAbstractGroupParameters@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@EAEAAV?$DL_GroupParameters@VInteger@CryptoPP@@@2@XZ ENDP ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::AccessAbstractGroupParameters
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h
;	COMDAT ?GetKeyAgreementAlgorithm@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@EBEABV?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@2@XZ
_TEXT	SEGMENT
$T1 = -1						; size = 1
?GetKeyAgreementAlgorithm@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@EBEABV?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@2@XZ PROC ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::GetKeyAgreementAlgorithm, COMDAT
; _this$ = ecx

; 85   : 		{return Singleton<DH_Algorithm>().Ref();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8d 4d ff	 lea	 ecx, DWORD PTR $T1[ebp]
  00007	e8 00 00 00 00	 call	 ?Ref@?$Singleton@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@U?$NewObject@V?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@@2@$0A@@CryptoPP@@QBEABV?$DL_KeyAgreementAlgorithm_DH@VInteger@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@2@XZ ; CryptoPP::Singleton<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >,CryptoPP::NewObject<CryptoPP::DL_KeyAgreementAlgorithm_DH<CryptoPP::Integer,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> > >,0>::Ref
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?GetKeyAgreementAlgorithm@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@EBEABV?$DL_KeyAgreementAlgorithm@VInteger@CryptoPP@@@2@XZ ENDP ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::GetKeyAgreementAlgorithm
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h
;	COMDAT ?AlgorithmName@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$GSCopy$ = -44				; size = 4
$T2 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::AlgorithmName, COMDAT
; _this$ = ecx

; 81   : 	std::string AlgorithmName() const {return StaticAlgorithmName();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AlgorithmName@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 20	 sub	 esp, 32			; 00000020H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  0002c	89 75 d4	 mov	 DWORD PTR ___$ReturnUdt$GSCopy$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002f	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T2[ebp+20], 15 ; 0000000fH

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00036	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T2[ebp+16], 0

; 3047 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0003d	c6 45 d8 00	 mov	 BYTE PTR $T2[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h

; 80   : 		{return GroupParameters::StaticAlgorithmNamePrefix() + DH_Algorithm::StaticAlgorithmName();}

  00041	68 00 00 00 00	 push	 OFFSET ??_C@_02EPINMGPM@DH@
  00046	8d 45 d8	 lea	 eax, DWORD PTR $T2[ebp]
  00049	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00050	50		 push	 eax
  00051	56		 push	 esi
  00052	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00057	8b 4d ec	 mov	 ecx, DWORD PTR $T2[ebp+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h

; 80   : 		{return GroupParameters::StaticAlgorithmNamePrefix() + DH_Algorithm::StaticAlgorithmName();}

  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0005d	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00060	72 0d		 jb	 SHORT $LN75@AlgorithmN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00062	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00063	51		 push	 ecx
  00064	ff 75 d8	 push	 DWORD PTR $T2[ebp]
  00067	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0006c	83 c4 08	 add	 esp, 8
$LN75@AlgorithmN:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h

; 81   : 	std::string AlgorithmName() const {return StaticAlgorithmName();}

  0006f	8b c6		 mov	 eax, esi
  00071	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007b	59		 pop	 ecx
  0007c	5e		 pop	 esi
  0007d	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00080	33 cd		 xor	 ecx, ebp
  00082	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AlgorithmName@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$1:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?AlgorithmName@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AlgorithmName@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AlgorithmName@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::AlgorithmName
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h
;	COMDAT ?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z
_TEXT	SEGMENT
_privateKey2$2 = -176					; size = 12
_publicKey2$3 = -164					; size = 12
_agreedValue$4 = -152					; size = 12
_agreedValue2$5 = -140					; size = 12
_publicKey$GSCopy$1$ = -128				; size = 4
_privateKey$GSCopy$1$ = -124				; size = 4
$T6 = -120						; size = 4
$T7 = -116						; size = 4
$T8 = -112						; size = 4
$T9 = -108						; size = 4
$T10 = -104						; size = 24
$T11 = -80						; size = 24
$T12 = -56						; size = 40
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rng$ = 8						; size = 4
_privateKey$ = 12					; size = 4
_publicKey$ = 16					; size = 4
?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z PROC ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::GeneratePublicKey, COMDAT
; _this$ = ecx

; 59   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b f1		 mov	 esi, ecx
  00030	8b 4d 10	 mov	 ecx, DWORD PTR _publicKey$[ebp]
  00033	8b 45 0c	 mov	 eax, DWORD PTR _privateKey$[ebp]
  00036	8b 7d 08	 mov	 edi, DWORD PTR _rng$[ebp]

; 60   : 		Base::GeneratePublicKey(rng, privateKey, publicKey);

  00039	51		 push	 ecx
  0003a	50		 push	 eax
  0003b	89 4d 80	 mov	 DWORD PTR _publicKey$GSCopy$1$[ebp], ecx
  0003e	8b ce		 mov	 ecx, esi
  00040	57		 push	 edi
  00041	89 45 84	 mov	 DWORD PTR _privateKey$GSCopy$1$[ebp], eax
  00044	e8 00 00 00 00	 call	 ?GeneratePublicKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::GeneratePublicKey

; 61   : 
; 62   : 		if (FIPS_140_2_ComplianceEnabled())

  00049	e8 00 00 00 00	 call	 ?FIPS_140_2_ComplianceEnabled@CryptoPP@@YA_NXZ ; CryptoPP::FIPS_140_2_ComplianceEnabled
  0004e	84 c0		 test	 al, al
  00050	0f 84 89 01 00
	00		 je	 $LN115@GeneratePu

; 63   : 		{
; 64   : 			SecByteBlock privateKey2(this->PrivateKeyLength());

  00056	8b 06		 mov	 eax, DWORD PTR [esi]
  00058	8b ce		 mov	 ecx, esi
  0005a	ff 50 20	 call	 DWORD PTR [eax+32]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  0005d	89 85 54 ff ff
	ff		 mov	 DWORD PTR _privateKey2$2[ebp+4], eax

; 92   : 		if (n == 0)

  00063	85 c0		 test	 eax, eax
  00065	75 07		 jne	 SHORT $LN15@GeneratePu

; 93   : 			return NULL;

  00067	33 db		 xor	 ebx, ebx
  00069	89 5d 8c	 mov	 DWORD PTR $T7[ebp], ebx
  0006c	eb 0e		 jmp	 SHORT $LN14@GeneratePu
$LN15@GeneratePu:

; 94   : 
; 95   : #if CRYPTOPP_BOOL_ALIGN16_ENABLED
; 96   : 		if (T_Align16 && n*sizeof(T) >= 16)
; 97   : 			return (pointer)AlignedAllocate(n*sizeof(T));
; 98   : #endif
; 99   : 
; 100  : 		return (pointer)UnalignedAllocate(n*sizeof(T));

  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 ?UnalignedAllocate@CryptoPP@@YAPAXI@Z ; CryptoPP::UnalignedAllocate
  00074	83 c4 04	 add	 esp, 4
  00077	89 45 8c	 mov	 DWORD PTR $T7[ebp], eax
  0007a	8b d8		 mov	 ebx, eax
$LN14@GeneratePu:

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  0007c	89 9d 58 ff ff
	ff		 mov	 DWORD PTR _privateKey2$2[ebp+8], ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h

; 65   : 			this->GeneratePrivateKey(rng, privateKey2);

  00082	8b 16		 mov	 edx, DWORD PTR [esi]
  00084	8b ce		 mov	 ecx, esi
  00086	53		 push	 ebx
  00087	57		 push	 edi
  00088	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0008f	ff 52 28	 call	 DWORD PTR [edx+40]

; 66   : 
; 67   : 			SecByteBlock publicKey2(this->PublicKeyLength());

  00092	8b 06		 mov	 eax, DWORD PTR [esi]
  00094	8b ce		 mov	 ecx, esi
  00096	ff 50 24	 call	 DWORD PTR [eax+36]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00099	89 85 60 ff ff
	ff		 mov	 DWORD PTR _publicKey2$3[ebp+4], eax

; 92   : 		if (n == 0)

  0009f	85 c0		 test	 eax, eax
  000a1	74 09		 je	 SHORT $LN141@GeneratePu
$LN21@GeneratePu:

; 94   : 
; 95   : #if CRYPTOPP_BOOL_ALIGN16_ENABLED
; 96   : 		if (T_Align16 && n*sizeof(T) >= 16)
; 97   : 			return (pointer)AlignedAllocate(n*sizeof(T));
; 98   : #endif
; 99   : 
; 100  : 		return (pointer)UnalignedAllocate(n*sizeof(T));

  000a3	50		 push	 eax
  000a4	e8 00 00 00 00	 call	 ?UnalignedAllocate@CryptoPP@@YAPAXI@Z ; CryptoPP::UnalignedAllocate
  000a9	83 c4 04	 add	 esp, 4
$LN141@GeneratePu:

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  000ac	89 45 90	 mov	 DWORD PTR $T8[ebp], eax
  000af	89 85 64 ff ff
	ff		 mov	 DWORD PTR _publicKey2$3[ebp+8], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h

; 68   : 			Base::GeneratePublicKey(rng, privateKey2, publicKey2);

  000b5	50		 push	 eax
  000b6	53		 push	 ebx
  000b7	57		 push	 edi
  000b8	8b ce		 mov	 ecx, esi
  000ba	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000be	e8 00 00 00 00	 call	 ?GeneratePublicKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::GeneratePublicKey

; 70   : 			SecByteBlock agreedValue(this->AgreedValueLength()), agreedValue2(this->AgreedValueLength());

  000c3	8b 06		 mov	 eax, DWORD PTR [esi]
  000c5	8b ce		 mov	 ecx, esi
  000c7	ff 50 1c	 call	 DWORD PTR [eax+28]
  000ca	8b f8		 mov	 edi, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  000cc	89 bd 6c ff ff
	ff		 mov	 DWORD PTR _agreedValue$4[ebp+4], edi

; 92   : 		if (n == 0)

  000d2	85 ff		 test	 edi, edi
  000d4	75 07		 jne	 SHORT $LN27@GeneratePu

; 93   : 			return NULL;

  000d6	33 db		 xor	 ebx, ebx
  000d8	89 5d 88	 mov	 DWORD PTR $T6[ebp], ebx
  000db	eb 0e		 jmp	 SHORT $LN26@GeneratePu
$LN27@GeneratePu:

; 94   : 
; 95   : #if CRYPTOPP_BOOL_ALIGN16_ENABLED
; 96   : 		if (T_Align16 && n*sizeof(T) >= 16)
; 97   : 			return (pointer)AlignedAllocate(n*sizeof(T));
; 98   : #endif
; 99   : 
; 100  : 		return (pointer)UnalignedAllocate(n*sizeof(T));

  000dd	57		 push	 edi
  000de	e8 00 00 00 00	 call	 ?UnalignedAllocate@CryptoPP@@YAPAXI@Z ; CryptoPP::UnalignedAllocate
  000e3	83 c4 04	 add	 esp, 4
  000e6	89 45 88	 mov	 DWORD PTR $T6[ebp], eax
  000e9	8b d8		 mov	 ebx, eax
$LN26@GeneratePu:

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  000eb	89 9d 70 ff ff
	ff		 mov	 DWORD PTR _agreedValue$4[ebp+8], ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h

; 70   : 			SecByteBlock agreedValue(this->AgreedValueLength()), agreedValue2(this->AgreedValueLength());

  000f1	8b 16		 mov	 edx, DWORD PTR [esi]
  000f3	8b ce		 mov	 ecx, esi
  000f5	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000f9	ff 52 1c	 call	 DWORD PTR [edx+28]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  000fc	89 85 78 ff ff
	ff		 mov	 DWORD PTR _agreedValue2$5[ebp+4], eax

; 92   : 		if (n == 0)

  00102	85 c0		 test	 eax, eax
  00104	74 09		 je	 SHORT $LN142@GeneratePu
$LN33@GeneratePu:

; 94   : 
; 95   : #if CRYPTOPP_BOOL_ALIGN16_ENABLED
; 96   : 		if (T_Align16 && n*sizeof(T) >= 16)
; 97   : 			return (pointer)AlignedAllocate(n*sizeof(T));
; 98   : #endif
; 99   : 
; 100  : 		return (pointer)UnalignedAllocate(n*sizeof(T));

  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ?UnalignedAllocate@CryptoPP@@YAPAXI@Z ; CryptoPP::UnalignedAllocate
  0010c	83 c4 04	 add	 esp, 4
$LN142@GeneratePu:

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  0010f	89 45 94	 mov	 DWORD PTR $T9[ebp], eax
  00112	89 85 7c ff ff
	ff		 mov	 DWORD PTR _agreedValue2$5[ebp+8], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h

; 71   : 			bool agreed1 = this->Agree(agreedValue, privateKey, publicKey2);

  00118	8b 06		 mov	 eax, DWORD PTR [esi]
  0011a	8b ce		 mov	 ecx, esi
  0011c	6a 01		 push	 1
  0011e	ff 75 90	 push	 DWORD PTR $T8[ebp]
  00121	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00125	ff 75 84	 push	 DWORD PTR _privateKey$GSCopy$1$[ebp]
  00128	8b 40 34	 mov	 eax, DWORD PTR [eax+52]
  0012b	53		 push	 ebx
  0012c	ff d0		 call	 eax

; 72   : 			bool agreed2 = this->Agree(agreedValue2, privateKey2, publicKey);

  0012e	8b 16		 mov	 edx, DWORD PTR [esi]
  00130	8b ce		 mov	 ecx, esi
  00132	6a 01		 push	 1
  00134	ff 75 80	 push	 DWORD PTR _publicKey$GSCopy$1$[ebp]
  00137	8a d8		 mov	 bl, al
  00139	ff 75 8c	 push	 DWORD PTR $T7[ebp]
  0013c	8b 52 34	 mov	 edx, DWORD PTR [edx+52]
  0013f	ff 75 94	 push	 DWORD PTR $T9[ebp]
  00142	ff d2		 call	 edx

; 73   : 
; 74   : 			if (!agreed1 || !agreed2 || agreedValue != agreedValue2)

  00144	84 db		 test	 bl, bl
  00146	0f 84 b1 00 00
	00		 je	 $LN4@GeneratePu
  0014c	84 c0		 test	 al, al
  0014e	0f 84 a9 00 00
	00		 je	 $LN4@GeneratePu
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 352  : 		return m_size == t.m_size && VerifyBufsEqual(m_ptr, t.m_ptr, m_size*sizeof(T));

  00154	3b bd 78 ff ff
	ff		 cmp	 edi, DWORD PTR _agreedValue2$5[ebp+4]
  0015a	0f 85 9d 00 00
	00		 jne	 $LN4@GeneratePu
  00160	8b 5d 88	 mov	 ebx, DWORD PTR $T6[ebp]
  00163	57		 push	 edi
  00164	ff 75 94	 push	 DWORD PTR $T9[ebp]
  00167	53		 push	 ebx
  00168	e8 00 00 00 00	 call	 ?VerifyBufsEqual@CryptoPP@@YA_NPBE0I@Z ; CryptoPP::VerifyBufsEqual
  0016d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00170	84 c0		 test	 al, al
  00172	0f 84 85 00 00
	00		 je	 $LN4@GeneratePu
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00178	8b 55 94	 mov	 edx, DWORD PTR $T9[ebp]
  0017b	32 c0		 xor	 al, al
  0017d	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _agreedValue2$5[ebp+4]
  00183	8b fa		 mov	 edi, edx
  00185	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00187	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00188	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6

; 112  : 		UnalignedDeallocate(p);

  0018c	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00191	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR _agreedValue$4[ebp+4]
  00197	32 c0		 xor	 al, al
  00199	8b fb		 mov	 edi, ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0019b	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  0019f	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  001a1	53		 push	 ebx
  001a2	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  001a7	8b 55 90	 mov	 edx, DWORD PTR $T8[ebp]
  001aa	32 c0		 xor	 al, al
  001ac	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _publicKey2$3[ebp+4]
  001b2	8b fa		 mov	 edi, edx
  001b4	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  001b6	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  001b7	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8

; 112  : 		UnalignedDeallocate(p);

  001bb	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  001c0	8b 55 8c	 mov	 edx, DWORD PTR $T7[ebp]
  001c3	32 c0		 xor	 al, al
  001c5	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR _privateKey2$2[ebp+4]
  001cb	8b fa		 mov	 edi, edx
  001cd	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  001cf	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  001d0	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 9

; 112  : 		UnalignedDeallocate(p);

  001d7	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  001dc	83 c4 10	 add	 esp, 16			; 00000010H
$LN115@GeneratePu:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\dh.h

; 77   : 	}

  001df	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001e2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001e9	59		 pop	 ecx
  001ea	5f		 pop	 edi
  001eb	5e		 pop	 esi
  001ec	5b		 pop	 ebx
  001ed	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001f0	33 cd		 xor	 ecx, ebp
  001f2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f7	8b e5		 mov	 esp, ebp
  001f9	5d		 pop	 ebp
  001fa	c2 0c 00	 ret	 12			; 0000000cH
$LN4@GeneratePu:

; 75   : 				throw SelfTestFailure(this->AlgorithmName() + ": pairwise consistency test failed");

  001fd	8b 06		 mov	 eax, DWORD PTR [esi]
  001ff	8d 4d b0	 lea	 ecx, DWORD PTR $T11[ebp]
  00202	51		 push	 ecx
  00203	8b ce		 mov	 ecx, esi
  00205	ff 50 08	 call	 DWORD PTR [eax+8]
  00208	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@OKCDBBIP@?3?5pairwise?5consistency?5test?5fai@
  0020d	50		 push	 eax
  0020e	8d 45 98	 lea	 eax, DWORD PTR $T10[ebp]
  00211	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00215	50		 push	 eax
  00216	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0021b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0021e	50		 push	 eax
  0021f	8d 4d c8	 lea	 ecx, DWORD PTR $T12[ebp]
  00222	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00226	e8 00 00 00 00	 call	 ??0SelfTestFailure@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CryptoPP::SelfTestFailure::SelfTestFailure
  0022b	68 00 00 00 00	 push	 OFFSET __TI3?AVSelfTestFailure@CryptoPP@@
  00230	8d 45 c8	 lea	 eax, DWORD PTR $T12[ebp]
  00233	50		 push	 eax
  00234	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN140@GeneratePu:
  00239	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z$0:
  00000	8d 8d 50 ff ff
	ff		 lea	 ecx, DWORD PTR _privateKey2$2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z$1:
  0000b	8d 8d 5c ff ff
	ff		 lea	 ecx, DWORD PTR _publicKey2$3[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z$2:
  00016	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _agreedValue$4[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z$3:
  00021	8d 8d 74 ff ff
	ff		 lea	 ecx, DWORD PTR _agreedValue2$5[ebp]
  00027	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z$4:
  0002c	8d 4d b0	 lea	 ecx, DWORD PTR $T11[ebp]
  0002f	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z$5:
  00034	8d 4d 98	 lea	 ecx, DWORD PTR $T10[ebp]
  00037	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003c	cc		 int	 3
  0003d	cc		 int	 3
  0003e	cc		 int	 3
  0003f	cc		 int	 3
  00040	cc		 int	 3
__ehhandler$?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z:
  00041	90		 npad	 1
  00042	90		 npad	 1
  00043	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00047	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0004a	8b 8a 4c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-180]
  00050	33 c8		 xor	 ecx, eax
  00052	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00057	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0005a	33 c8		 xor	 ecx, eax
  0005c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00061	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z
  00066	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GeneratePublicKey@?$DH_Domain@VDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@U?$EnumToType@W4CofactorMultiplicationOption@CryptoPP@@$0A@@2@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z ENDP ; CryptoPP::DH_Domain<CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime,CryptoPP::EnumToType<enum CryptoPP::CofactorMultiplicationOption,0> >::GeneratePublicKey
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z
_TEXT	SEGMENT
_x$2 = -76						; size = 20
_w$3 = -56						; size = 20
_z$4 = -36						; size = 20
__$EHRec$ = -16						; size = 16
_agreedValue$ = 8					; size = 4
tv390 = 12						; size = 4
_privateKey$ = 12					; size = 4
_otherPublicKey$ = 16					; size = 4
_validateOtherPublicKey$ = 20				; size = 1
?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z PROC ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::Agree, COMDAT
; _this$ = ecx

; 1401 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 40	 sub	 esp, 64			; 00000040H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002b	8b f1		 mov	 esi, ecx

; 1424 : 	const DL_GroupParameters<Element> & GetAbstractGroupParameters() const {return const_cast<DL_SimpleKeyAgreementDomainBase<Element> *>(this)->AccessAbstractGroupParameters();}

  0002d	8b 06		 mov	 eax, DWORD PTR [esi]

; 1402 : 		try

  0002f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 1424 : 	const DL_GroupParameters<Element> & GetAbstractGroupParameters() const {return const_cast<DL_SimpleKeyAgreementDomainBase<Element> *>(this)->AccessAbstractGroupParameters();}

  00036	ff 50 3c	 call	 DWORD PTR [eax+60]
  00039	8b f8		 mov	 edi, eax

; 1403 : 		{
; 1404 : 			const DL_GroupParameters<T> &params = GetAbstractGroupParameters();
; 1405 : 			Integer x(privateKey, PrivateKeyLength());

  0003b	8b ce		 mov	 ecx, esi
  0003d	8b 06		 mov	 eax, DWORD PTR [esi]
  0003f	ff 50 20	 call	 DWORD PTR [eax+32]
  00042	6a 00		 push	 0
  00044	50		 push	 eax
  00045	ff 75 0c	 push	 DWORD PTR _privateKey$[ebp]
  00048	8d 4d b4	 lea	 ecx, DWORD PTR _x$2[ebp]
  0004b	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@PBEIW4Signedness@01@@Z ; CryptoPP::Integer::Integer

; 1406 : 			Element w = params.DecodeElement(otherPublicKey, validateOtherPublicKey);

  00050	ff 75 14	 push	 DWORD PTR _validateOtherPublicKey$[ebp]
  00053	8b 07		 mov	 eax, DWORD PTR [edi]
  00055	8d 4d c8	 lea	 ecx, DWORD PTR _w$3[ebp]
  00058	ff 75 10	 push	 DWORD PTR _otherPublicKey$[ebp]
  0005b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  0005f	51		 push	 ecx
  00060	8b cf		 mov	 ecx, edi
  00062	ff 50 38	 call	 DWORD PTR [eax+56]

; 1407 : 
; 1408 : 			Element z = GetKeyAgreementAlgorithm().AgreeWithStaticPrivateKey(

  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8b ce		 mov	 ecx, esi
  00069	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  0006d	ff 50 38	 call	 DWORD PTR [eax+56]

; 1424 : 	const DL_GroupParameters<Element> & GetAbstractGroupParameters() const {return const_cast<DL_SimpleKeyAgreementDomainBase<Element> *>(this)->AccessAbstractGroupParameters();}

  00070	8b 16		 mov	 edx, DWORD PTR [esi]
  00072	8b ce		 mov	 ecx, esi

; 1407 : 
; 1408 : 			Element z = GetKeyAgreementAlgorithm().AgreeWithStaticPrivateKey(

  00074	89 45 0c	 mov	 DWORD PTR tv390[ebp], eax

; 1424 : 	const DL_GroupParameters<Element> & GetAbstractGroupParameters() const {return const_cast<DL_SimpleKeyAgreementDomainBase<Element> *>(this)->AccessAbstractGroupParameters();}

  00077	ff 52 3c	 call	 DWORD PTR [edx+60]

; 1407 : 
; 1408 : 			Element z = GetKeyAgreementAlgorithm().AgreeWithStaticPrivateKey(

  0007a	8d 75 b4	 lea	 esi, DWORD PTR _x$2[ebp]

; 1424 : 	const DL_GroupParameters<Element> & GetAbstractGroupParameters() const {return const_cast<DL_SimpleKeyAgreementDomainBase<Element> *>(this)->AccessAbstractGroupParameters();}

  0007d	8b c8		 mov	 ecx, eax

; 1407 : 
; 1408 : 			Element z = GetKeyAgreementAlgorithm().AgreeWithStaticPrivateKey(

  0007f	8b 45 0c	 mov	 eax, DWORD PTR tv390[ebp]
  00082	56		 push	 esi
  00083	ff 75 14	 push	 DWORD PTR _validateOtherPublicKey$[ebp]
  00086	8d 75 c8	 lea	 esi, DWORD PTR _w$3[ebp]
  00089	8b 10		 mov	 edx, DWORD PTR [eax]
  0008b	56		 push	 esi
  0008c	51		 push	 ecx
  0008d	8d 4d dc	 lea	 ecx, DWORD PTR _z$4[ebp]
  00090	51		 push	 ecx
  00091	8b c8		 mov	 ecx, eax
  00093	ff 52 04	 call	 DWORD PTR [edx+4]

; 1409 : 				GetAbstractGroupParameters(), w, validateOtherPublicKey, x);
; 1410 : 			params.EncodeElement(false, z, agreedValue);

  00096	ff 75 08	 push	 DWORD PTR _agreedValue$[ebp]
  00099	8b 07		 mov	 eax, DWORD PTR [edi]
  0009b	8d 4d dc	 lea	 ecx, DWORD PTR _z$4[ebp]
  0009e	51		 push	 ecx
  0009f	6a 00		 push	 0
  000a1	8b cf		 mov	 ecx, edi
  000a3	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+12], 3
  000a7	ff 50 34	 call	 DWORD PTR [eax+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000aa	8b 55 e4	 mov	 edx, DWORD PTR _z$4[ebp+8]
  000ad	33 c0		 xor	 eax, eax
  000af	8b 75 e8	 mov	 esi, DWORD PTR _z$4[ebp+12]
  000b2	8b ca		 mov	 ecx, edx
  000b4	8b fe		 mov	 edi, esi
  000b6	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+12], 4
  000ba	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  000bc	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  000c3	56		 push	 esi
  000c4	83 f8 10	 cmp	 eax, 16			; 00000010H
  000c7	72 07		 jb	 SHORT $LN22@Agree

; 109  : 			return AlignedDeallocate(p);

  000c9	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  000ce	eb 05		 jmp	 SHORT $LN97@Agree
$LN22@Agree:

; 112  : 		UnalignedDeallocate(p);

  000d0	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN97@Agree:

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000d5	83 c4 04	 add	 esp, 4
  000d8	8b 55 d0	 mov	 edx, DWORD PTR _w$3[ebp+8]
  000db	33 c0		 xor	 eax, eax
  000dd	8b 75 d4	 mov	 esi, DWORD PTR _w$3[ebp+12]
  000e0	8b ca		 mov	 ecx, edx
  000e2	8b fe		 mov	 edi, esi
  000e4	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+12], 5
  000e8	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  000ea	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  000f1	56		 push	 esi
  000f2	83 f8 10	 cmp	 eax, 16			; 00000010H
  000f5	72 07		 jb	 SHORT $LN49@Agree

; 109  : 			return AlignedDeallocate(p);

  000f7	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  000fc	eb 05		 jmp	 SHORT $LN98@Agree
$LN49@Agree:

; 112  : 		UnalignedDeallocate(p);

  000fe	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN98@Agree:

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00103	83 c4 04	 add	 esp, 4
  00106	8b 55 bc	 mov	 edx, DWORD PTR _x$2[ebp+8]
  00109	33 c0		 xor	 eax, eax
  0010b	8b 75 c0	 mov	 esi, DWORD PTR _x$2[ebp+12]
  0010e	8b ca		 mov	 ecx, edx
  00110	8b fe		 mov	 edi, esi
  00112	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+12], 6
  00116	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  00118	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  0011f	56		 push	 esi
  00120	83 f8 10	 cmp	 eax, 16			; 00000010H
  00123	72 1e		 jb	 SHORT $LN76@Agree

; 109  : 			return AlignedDeallocate(p);

  00125	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h

; 1416 : 		return true;

  0012a	83 c4 04	 add	 esp, 4
  0012d	b0 01		 mov	 al, 1

; 1417 : 	}

  0012f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00132	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00139	59		 pop	 ecx
  0013a	5f		 pop	 edi
  0013b	5e		 pop	 esi
  0013c	5b		 pop	 ebx
  0013d	8b e5		 mov	 esp, ebp
  0013f	5d		 pop	 ebp
  00140	c2 10 00	 ret	 16			; 00000010H
$LN76@Agree:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00143	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h

; 1416 : 		return true;

  00148	83 c4 04	 add	 esp, 4
  0014b	b0 01		 mov	 al, 1

; 1417 : 	}

  0014d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00150	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00157	59		 pop	 ecx
  00158	5f		 pop	 edi
  00159	5e		 pop	 esi
  0015a	5b		 pop	 ebx
  0015b	8b e5		 mov	 esp, ebp
  0015d	5d		 pop	 ebp
  0015e	c2 10 00	 ret	 16			; 00000010H
__catch$?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z$0:

; 1411 : 		}
; 1412 : 		catch (DL_BadElement &)
; 1413 : 		{
; 1414 : 			return false;

  00161	b8 00 00 00 00	 mov	 eax, $LN10@Agree
  00166	c3		 ret	 0
$LN10@Agree:
  00167	32 c0		 xor	 al, al

; 1417 : 	}

  00169	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0016c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00173	59		 pop	 ecx
  00174	5f		 pop	 edi
  00175	5e		 pop	 esi
  00176	5b		 pop	 ebx
  00177	8b e5		 mov	 esp, ebp
  00179	5d		 pop	 ebp
  0017a	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z$2:
  00000	8d 4d b4	 lea	 ecx, DWORD PTR _x$2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
__unwindfunclet$?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z$3:
  00008	8d 4d c8	 lea	 ecx, DWORD PTR _w$3[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
__unwindfunclet$?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z$4:
  00010	8d 4d dc	 lea	 ecx, DWORD PTR _z$4[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
__ehhandler$?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z:
  0001d	90		 npad	 1
  0001e	90		 npad	 1
  0001f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00023	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00026	8b 4a b0	 mov	 ecx, DWORD PTR [edx-80]
  00029	33 c8		 xor	 ecx, eax
  0002b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00030	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z
  00035	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Agree@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBE_NPAEPBE1_N@Z ENDP ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::Agree
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?GeneratePublicKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z
_TEXT	SEGMENT
_x$ = -52						; size = 20
_y$ = -32						; size = 20
__$EHRec$ = -12						; size = 12
_rng$ = 8						; size = 4
_privateKey$ = 12					; size = 4
_publicKey$ = 16					; size = 4
?GeneratePublicKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z PROC ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::GeneratePublicKey, COMDAT
; _this$ = ecx

; 1393 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GeneratePublicKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001b	33 c5		 xor	 eax, ebp
  0001d	50		 push	 eax
  0001e	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00021	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00027	8b f1		 mov	 esi, ecx

; 1424 : 	const DL_GroupParameters<Element> & GetAbstractGroupParameters() const {return const_cast<DL_SimpleKeyAgreementDomainBase<Element> *>(this)->AccessAbstractGroupParameters();}

  00029	8b 06		 mov	 eax, DWORD PTR [esi]
  0002b	ff 50 3c	 call	 DWORD PTR [eax+60]

; 1394 : 		const DL_GroupParameters<T> &params = GetAbstractGroupParameters();
; 1395 : 		Integer x(privateKey, PrivateKeyLength());

  0002e	8b 16		 mov	 edx, DWORD PTR [esi]
  00030	8b ce		 mov	 ecx, esi
  00032	6a 00		 push	 0
  00034	8b f8		 mov	 edi, eax
  00036	ff 52 20	 call	 DWORD PTR [edx+32]
  00039	50		 push	 eax
  0003a	ff 75 0c	 push	 DWORD PTR _privateKey$[ebp]
  0003d	8d 4d cc	 lea	 ecx, DWORD PTR _x$[ebp]
  00040	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@PBEIW4Signedness@01@@Z ; CryptoPP::Integer::Integer

; 1396 : 		Element y = params.ExponentiateBase(x);

  00045	8b 07		 mov	 eax, DWORD PTR [edi]
  00047	8d 4d cc	 lea	 ecx, DWORD PTR _x$[ebp]
  0004a	51		 push	 ecx
  0004b	8d 4d e0	 lea	 ecx, DWORD PTR _y$[ebp]
  0004e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00055	51		 push	 ecx
  00056	8b cf		 mov	 ecx, edi
  00058	ff 50 0c	 call	 DWORD PTR [eax+12]

; 1397 : 		params.EncodeElement(true, y, publicKey);

  0005b	ff 75 10	 push	 DWORD PTR _publicKey$[ebp]
  0005e	8b 07		 mov	 eax, DWORD PTR [edi]
  00060	8d 4d e0	 lea	 ecx, DWORD PTR _y$[ebp]
  00063	51		 push	 ecx
  00064	6a 01		 push	 1
  00066	8b cf		 mov	 ecx, edi
  00068	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0006c	ff 50 34	 call	 DWORD PTR [eax+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0006f	8b 55 e8	 mov	 edx, DWORD PTR _y$[ebp+8]
  00072	33 c0		 xor	 eax, eax
  00074	8b 75 ec	 mov	 esi, DWORD PTR _y$[ebp+12]
  00077	8b ca		 mov	 ecx, edx
  00079	8b fe		 mov	 edi, esi
  0007b	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0007f	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  00081	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  00088	56		 push	 esi
  00089	83 f8 10	 cmp	 eax, 16			; 00000010H
  0008c	72 07		 jb	 SHORT $LN14@GeneratePu

; 109  : 			return AlignedDeallocate(p);

  0008e	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  00093	eb 05		 jmp	 SHORT $LN62@GeneratePu
$LN14@GeneratePu:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  00095	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN62@GeneratePu:

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0009a	83 c4 04	 add	 esp, 4
  0009d	8b 55 d4	 mov	 edx, DWORD PTR _x$[ebp+8]
  000a0	33 c0		 xor	 eax, eax
  000a2	8b 75 d8	 mov	 esi, DWORD PTR _x$[ebp+12]
  000a5	8b ca		 mov	 ecx, edx
  000a7	8b fe		 mov	 edi, esi
  000a9	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  000b0	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  000b2	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  000b9	56		 push	 esi
  000ba	83 f8 10	 cmp	 eax, 16			; 00000010H
  000bd	72 07		 jb	 SHORT $LN41@GeneratePu

; 109  : 			return AlignedDeallocate(p);

  000bf	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  000c4	eb 05		 jmp	 SHORT $LN63@GeneratePu
$LN41@GeneratePu:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  000c6	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN63@GeneratePu:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h

; 1398 : 	}

  000cb	83 c4 04	 add	 esp, 4
  000ce	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000d1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d8	59		 pop	 ecx
  000d9	5f		 pop	 edi
  000da	5e		 pop	 esi
  000db	8b e5		 mov	 esp, ebp
  000dd	5d		 pop	 ebp
  000de	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GeneratePublicKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z$0:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR _x$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
__unwindfunclet$?GeneratePublicKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z$1:
  00008	8d 4d e0	 lea	 ecx, DWORD PTR _y$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?GeneratePublicKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a cc	 mov	 ecx, DWORD PTR [edx-52]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GeneratePublicKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GeneratePublicKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PBEPAE@Z ENDP ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::GeneratePublicKey
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?GeneratePrivateKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z
_TEXT	SEGMENT
$T2 = -52						; size = 20
_x$ = -32						; size = 20
__$EHRec$ = -12						; size = 12
_rng$ = 8						; size = 4
_privateKey$ = 12					; size = 4
?GeneratePrivateKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z PROC ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::GeneratePrivateKey, COMDAT
; _this$ = ecx

; 1387 : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GeneratePrivateKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx

; 1424 : 	const DL_GroupParameters<Element> & GetAbstractGroupParameters() const {return const_cast<DL_SimpleKeyAgreementDomainBase<Element> *>(this)->AccessAbstractGroupParameters();}

  0002a	8b 03		 mov	 eax, DWORD PTR [ebx]
  0002c	ff 50 3c	 call	 DWORD PTR [eax+60]

; 1388 : 		Integer x(rng, Integer::One(), GetAbstractGroupParameters().GetMaxExponent());

  0002f	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00032	51		 push	 ecx
  00033	8b c8		 mov	 ecx, eax
  00035	8b 10		 mov	 edx, DWORD PTR [eax]
  00037	ff 52 24	 call	 DWORD PTR [edx+36]
  0003a	8b f0		 mov	 esi, eax
  0003c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00043	e8 00 00 00 00	 call	 ?One@Integer@CryptoPP@@SAABV12@XZ ; CryptoPP::Integer::One
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ?Zero@Integer@CryptoPP@@SAABV12@XZ ; CryptoPP::Integer::Zero
  0004e	50		 push	 eax
  0004f	6a 00		 push	 0
  00051	56		 push	 esi
  00052	e8 00 00 00 00	 call	 ?One@Integer@CryptoPP@@SAABV12@XZ ; CryptoPP::Integer::One
  00057	50		 push	 eax
  00058	ff 75 08	 push	 DWORD PTR _rng$[ebp]
  0005b	8d 4d e0	 lea	 ecx, DWORD PTR _x$[ebp]
  0005e	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@AAVRandomNumberGenerator@1@ABV01@1W4RandomNumberType@01@11@Z ; CryptoPP::Integer::Integer
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00063	8b 55 d4	 mov	 edx, DWORD PTR $T2[ebp+8]
  00066	33 c0		 xor	 eax, eax
  00068	8b 75 d8	 mov	 esi, DWORD PTR $T2[ebp+12]
  0006b	8b ca		 mov	 ecx, edx
  0006d	8b fe		 mov	 edi, esi
  0006f	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00073	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  00075	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  0007c	56		 push	 esi
  0007d	83 f8 10	 cmp	 eax, 16			; 00000010H
  00080	72 07		 jb	 SHORT $LN14@GeneratePr

; 109  : 			return AlignedDeallocate(p);

  00082	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  00087	eb 05		 jmp	 SHORT $LN62@GeneratePr
$LN14@GeneratePr:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  00089	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN62@GeneratePr:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h

; 1389 : 		x.Encode(privateKey, PrivateKeyLength());

  0008e	8b 03		 mov	 eax, DWORD PTR [ebx]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00090	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h

; 1389 : 		x.Encode(privateKey, PrivateKeyLength());

  00093	8b cb		 mov	 ecx, ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00095	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h

; 1389 : 		x.Encode(privateKey, PrivateKeyLength());

  00099	6a 00		 push	 0
  0009b	ff 50 20	 call	 DWORD PTR [eax+32]
  0009e	50		 push	 eax
  0009f	ff 75 0c	 push	 DWORD PTR _privateKey$[ebp]
  000a2	8d 4d e0	 lea	 ecx, DWORD PTR _x$[ebp]
  000a5	e8 00 00 00 00	 call	 ?Encode@Integer@CryptoPP@@QBEXPAEIW4Signedness@12@@Z ; CryptoPP::Integer::Encode
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000aa	8b 55 e8	 mov	 edx, DWORD PTR _x$[ebp+8]
  000ad	33 c0		 xor	 eax, eax
  000af	8b 75 ec	 mov	 esi, DWORD PTR _x$[ebp+12]
  000b2	8b ca		 mov	 ecx, edx
  000b4	8b fe		 mov	 edi, esi
  000b6	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  000bd	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  000bf	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  000c6	56		 push	 esi
  000c7	83 f8 10	 cmp	 eax, 16			; 00000010H
  000ca	72 07		 jb	 SHORT $LN41@GeneratePr

; 109  : 			return AlignedDeallocate(p);

  000cc	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  000d1	eb 05		 jmp	 SHORT $LN63@GeneratePr
$LN41@GeneratePr:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  000d3	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN63@GeneratePr:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h

; 1390 : 	}

  000d8	83 c4 04	 add	 esp, 4
  000db	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000de	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e5	59		 pop	 ecx
  000e6	5f		 pop	 edi
  000e7	5e		 pop	 esi
  000e8	5b		 pop	 ebx
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GeneratePrivateKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z$0:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
__unwindfunclet$?GeneratePrivateKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z$1:
  00008	8d 4d e0	 lea	 ecx, DWORD PTR _x$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?GeneratePrivateKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GeneratePrivateKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GeneratePrivateKey@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVRandomNumberGenerator@2@PAE@Z ENDP ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::GeneratePrivateKey
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?PublicKeyLength@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?PublicKeyLength@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEIXZ PROC ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::PublicKeyLength, COMDAT
; _this$ = ecx

; 1424 : 	const DL_GroupParameters<Element> & GetAbstractGroupParameters() const {return const_cast<DL_SimpleKeyAgreementDomainBase<Element> *>(this)->AccessAbstractGroupParameters();}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	ff 50 3c	 call	 DWORD PTR [eax+60]

; 1384 : 	unsigned int PublicKeyLength() const {return GetAbstractGroupParameters().GetEncodedElementSize(true);}

  00005	6a 01		 push	 1
  00007	8b c8		 mov	 ecx, eax
  00009	8b 10		 mov	 edx, DWORD PTR [eax]
  0000b	ff 52 30	 call	 DWORD PTR [edx+48]
  0000e	c3		 ret	 0
?PublicKeyLength@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::PublicKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?PrivateKeyLength@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?PrivateKeyLength@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEIXZ PROC ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::PrivateKeyLength, COMDAT
; _this$ = ecx

; 1424 : 	const DL_GroupParameters<Element> & GetAbstractGroupParameters() const {return const_cast<DL_SimpleKeyAgreementDomainBase<Element> *>(this)->AccessAbstractGroupParameters();}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	ff 50 3c	 call	 DWORD PTR [eax+60]

; 1383 : 	unsigned int PrivateKeyLength() const {return GetAbstractGroupParameters().GetSubgroupOrder().ByteCount();}

  00005	8b c8		 mov	 ecx, eax
  00007	8b 10		 mov	 edx, DWORD PTR [eax]
  00009	ff 52 20	 call	 DWORD PTR [edx+32]
  0000c	8b c8		 mov	 ecx, eax
  0000e	e9 00 00 00 00	 jmp	 ?ByteCount@Integer@CryptoPP@@QBEIXZ ; CryptoPP::Integer::ByteCount
?PrivateKeyLength@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::PrivateKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?AgreedValueLength@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?AgreedValueLength@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEIXZ PROC ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::AgreedValueLength, COMDAT
; _this$ = ecx

; 1424 : 	const DL_GroupParameters<Element> & GetAbstractGroupParameters() const {return const_cast<DL_SimpleKeyAgreementDomainBase<Element> *>(this)->AccessAbstractGroupParameters();}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	ff 50 3c	 call	 DWORD PTR [eax+60]

; 1382 : 	unsigned int AgreedValueLength() const {return GetAbstractGroupParameters().GetEncodedElementSize(false);}

  00005	6a 00		 push	 0
  00007	8b c8		 mov	 ecx, eax
  00009	8b 10		 mov	 edx, DWORD PTR [eax]
  0000b	ff 52 30	 call	 DWORD PTR [edx+48]
  0000e	c3		 ret	 0
?AgreedValueLength@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::AgreedValueLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?AccessCryptoParameters@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UAEAAVCryptoParameters@2@XZ
_TEXT	SEGMENT
?AccessCryptoParameters@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UAEAAVCryptoParameters@2@XZ PROC ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::AccessCryptoParameters, COMDAT
; _this$ = ecx

; 1381 : 	CryptoParameters & AccessCryptoParameters() {return AccessAbstractGroupParameters();}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	ff 60 3c	 jmp	 DWORD PTR [eax+60]
?AccessCryptoParameters@?$DL_SimpleKeyAgreementDomainBase@VInteger@CryptoPP@@@CryptoPP@@UAEAAVCryptoParameters@2@XZ ENDP ; CryptoPP::DL_SimpleKeyAgreementDomainBase<CryptoPP::Integer>::AccessCryptoParameters
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAE@XZ
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN15@scalar
  00011	6a 70		 push	 112			; 00000070H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN15@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GDL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
;	COMDAT ?GetDefaultSubgroupOrderSize@DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@MBEII@Z
_TEXT	SEGMENT
_modulusSize$ = 8					; size = 4
?GetDefaultSubgroupOrderSize@DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@MBEII@Z PROC ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::GetDefaultSubgroupOrderSize, COMDAT
; _this$ = ecx

; 147  : 	unsigned int GetDefaultSubgroupOrderSize(unsigned int modulusSize) const {return modulusSize-1;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _modulusSize$[ebp]
  00006	48		 dec	 eax
  00007	5d		 pop	 ebp
  00008	c2 04 00	 ret	 4
?GetDefaultSubgroupOrderSize@DL_GroupParameters_GFP_DefaultSafePrime@CryptoPP@@MBEII@Z ENDP ; CryptoPP::DL_GroupParameters_GFP_DefaultSafePrime::GetDefaultSubgroupOrderSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
;	COMDAT ??0?$GetValueHelperClass@VDL_GroupParameters_GFP@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@QAE@PBVDL_GroupParameters_GFP@1@PBDABVtype_info@@PAXPBVNameValuePairs@1@@Z
_TEXT	SEGMENT
_pObject$ = 8						; size = 4
tv279 = 12						; size = 4
_name$ = 12						; size = 4
_valueType$ = 16					; size = 4
_pValue$ = 20						; size = 4
_searchFirst$ = 24					; size = 4
??0?$GetValueHelperClass@VDL_GroupParameters_GFP@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@QAE@PBVDL_GroupParameters_GFP@1@PBDABVtype_info@@PAXPBVNameValuePairs@1@@Z PROC ; CryptoPP::GetValueHelperClass<CryptoPP::DL_GroupParameters_GFP,CryptoPP::DL_GroupParameters_IntegerBased>::GetValueHelperClass<CryptoPP::DL_GroupParameters_GFP,CryptoPP::DL_GroupParameters_IntegerBased>, COMDAT
; _this$ = ecx

; 88   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 		: m_pObject(pObject), m_name(name), m_valueType(&valueType), m_pValue(pValue), m_found(false), m_getValueNames(false)

  00003	8b 45 08	 mov	 eax, DWORD PTR _pObject$[ebp]

; 88   : 	{

  00006	53		 push	 ebx
  00007	8b 5d 0c	 mov	 ebx, DWORD PTR _name$[ebp]
  0000a	56		 push	 esi
  0000b	8b f1		 mov	 esi, ecx

; 89   : 		if (strcmp(m_name, "ValueNames") == 0)

  0000d	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@KPHNIBPN@ValueNames@
  00012	57		 push	 edi
  00013	89 06		 mov	 DWORD PTR [esi], eax
  00015	8b 45 10	 mov	 eax, DWORD PTR _valueType$[ebp]
  00018	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0001b	8b 45 14	 mov	 eax, DWORD PTR _pValue$[ebp]
  0001e	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  00021	8b c3		 mov	 eax, ebx
  00023	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  00026	66 c7 46 10 00
	00		 mov	 WORD PTR [esi+16], 0
  0002c	0f 1f 40 00	 npad	 4
$LL32@GetValueHe:
  00030	8a 10		 mov	 dl, BYTE PTR [eax]
  00032	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00034	75 1a		 jne	 SHORT $LN33@GetValueHe
  00036	84 d2		 test	 dl, dl
  00038	74 12		 je	 SHORT $LN34@GetValueHe
  0003a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0003d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00040	75 0e		 jne	 SHORT $LN33@GetValueHe
  00042	83 c0 02	 add	 eax, 2
  00045	83 c1 02	 add	 ecx, 2
  00048	84 d2		 test	 dl, dl
  0004a	75 e4		 jne	 SHORT $LL32@GetValueHe
$LN34@GetValueHe:
  0004c	33 c0		 xor	 eax, eax
  0004e	eb 05		 jmp	 SHORT $LN35@GetValueHe
$LN33@GetValueHe:
  00050	1b c0		 sbb	 eax, eax
  00052	83 c8 01	 or	 eax, 1
$LN35@GetValueHe:
  00055	8b 7d 18	 mov	 edi, DWORD PTR _searchFirst$[ebp]
  00058	85 c0		 test	 eax, eax
  0005a	0f 85 a6 00 00
	00		 jne	 $LN29@GetValueHe

; 90   : 		{
; 91   : 			m_found = m_getValueNames = true;
; 92   : 			NameValuePairs::ThrowIfTypeMismatch(m_name, typeid(std::string), *m_valueType);

  00060	ff 75 10	 push	 DWORD PTR _valueType$[ebp]
  00063	66 c7 46 10 01
	01		 mov	 WORD PTR [esi+16], 257	; 00000101H
  00069	68 00 00 00 00	 push	 OFFSET ??_R0?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
  0006e	53		 push	 ebx
  0006f	e8 00 00 00 00	 call	 ?ThrowIfTypeMismatch@NameValuePairs@CryptoPP@@SAXPBDABVtype_info@@1@Z ; CryptoPP::NameValuePairs::ThrowIfTypeMismatch

; 93   : 			if (searchFirst)

  00074	8b 5d 14	 mov	 ebx, DWORD PTR _pValue$[ebp]
  00077	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007a	85 ff		 test	 edi, edi
  0007c	74 0e		 je	 SHORT $LN3@GetValueHe

; 94   : 				searchFirst->GetVoidValue(m_name, valueType, pValue);

  0007e	8b 07		 mov	 eax, DWORD PTR [edi]
  00080	8b cf		 mov	 ecx, edi
  00082	53		 push	 ebx
  00083	ff 75 10	 push	 DWORD PTR _valueType$[ebp]
  00086	ff 76 04	 push	 DWORD PTR [esi+4]
  00089	ff 50 04	 call	 DWORD PTR [eax+4]
$LN3@GetValueHe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h

; 88   :         return __std_type_info_compare(&_Data, &_Other._Data) != 0;

  0008c	68 04 00 00 00	 push	 OFFSET ??_R0?AVDL_GroupParameters_IntegerBased@CryptoPP@@@8+4
  00091	68 04 00 00 00	 push	 OFFSET ??_R0?AVDL_GroupParameters_GFP@CryptoPP@@@8+4
  00096	e8 00 00 00 00	 call	 ___std_type_info_compare
  0009b	83 c4 08	 add	 esp, 8
  0009e	85 c0		 test	 eax, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 95   : 			if (typeid(T) != typeid(BASE))

  000a0	74 12		 je	 SHORT $LN31@GetValueHe

; 96   : 				pObject->BASE::GetVoidValue(m_name, valueType, pValue);

  000a2	8b 4d 08	 mov	 ecx, DWORD PTR _pObject$[ebp]
  000a5	53		 push	 ebx
  000a6	ff 75 10	 push	 DWORD PTR _valueType$[ebp]
  000a9	ff 76 04	 push	 DWORD PTR [esi+4]
  000ac	8d 49 28	 lea	 ecx, DWORD PTR [ecx+40]
  000af	e8 00 00 00 00	 call	 ?GetVoidValue@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NPBDABVtype_info@@PAX@Z ; CryptoPP::DL_GroupParameters_IntegerBased::GetVoidValue
$LN31@GetValueHe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h

; 101  :         return __std_type_info_name(&_Data, &__type_info_root_node);

  000b4	68 00 00 00 00	 push	 OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
  000b9	68 04 00 00 00	 push	 OFFSET ??_R0?AVDL_GroupParameters_GFP@CryptoPP@@@8+4
  000be	e8 00 00 00 00	 call	 ___std_type_info_name
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2958 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000c3	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h

; 101  :         return __std_type_info_name(&_Data, &__type_info_root_node);

  000c6	83 c4 08	 add	 esp, 8
  000c9	8b d8		 mov	 ebx, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2958 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000cb	6a 0c		 push	 12			; 0000000cH
  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_0N@EDONPEO@ThisPointer?3@
  000d2	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 389  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  000d7	8b d3		 mov	 edx, ebx
  000d9	8d 4a 01	 lea	 ecx, DWORD PTR [edx+1]
  000dc	89 4d 0c	 mov	 DWORD PTR tv279[ebp], ecx
  000df	90		 npad	 1
$LL36@GetValueHe:
  000e0	8a 0a		 mov	 cl, BYTE PTR [edx]
  000e2	42		 inc	 edx
  000e3	84 c9		 test	 cl, cl
  000e5	75 f9		 jne	 SHORT $LL36@GetValueHe
  000e7	2b 55 0c	 sub	 edx, DWORD PTR tv279[ebp]

; 2958 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000ea	8b c8		 mov	 ecx, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 97   : 			((*reinterpret_cast<std::string *>(m_pValue) += "ThisPointer:") += typeid(T).name()) += ';';

  000ec	6a 3b		 push	 59			; 0000003bH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2958 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  000ee	52		 push	 edx
  000ef	53		 push	 ebx
  000f0	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 97   : 			((*reinterpret_cast<std::string *>(m_pValue) += "ThisPointer:") += typeid(T).name()) += ';';

  000f5	8b c8		 mov	 ecx, eax
  000f7	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 100  : 		if (!m_found && strncmp(m_name, "ThisPointer:", 12) == 0 && strcmp(m_name+12, typeid(T).name()) == 0)

  000fc	80 7e 10 00	 cmp	 BYTE PTR [esi+16], 0
  00100	0f 85 7d 00 00
	00		 jne	 $LN5@GetValueHe
$LN29@GetValueHe:
  00106	6a 0c		 push	 12			; 0000000cH
  00108	68 00 00 00 00	 push	 OFFSET ??_C@_0N@EDONPEO@ThisPointer?3@
  0010d	ff 76 04	 push	 DWORD PTR [esi+4]
  00110	e8 00 00 00 00	 call	 _strncmp
  00115	83 c4 0c	 add	 esp, 12			; 0000000cH
  00118	85 c0		 test	 eax, eax
  0011a	75 67		 jne	 SHORT $LN5@GetValueHe
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h

; 101  :         return __std_type_info_name(&_Data, &__type_info_root_node);

  0011c	68 00 00 00 00	 push	 OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
  00121	68 04 00 00 00	 push	 OFFSET ??_R0?AVDL_GroupParameters_GFP@CryptoPP@@@8+4
  00126	e8 00 00 00 00	 call	 ___std_type_info_name
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 100  : 		if (!m_found && strncmp(m_name, "ThisPointer:", 12) == 0 && strcmp(m_name+12, typeid(T).name()) == 0)

  0012b	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h

; 101  :         return __std_type_info_name(&_Data, &__type_info_root_node);

  0012e	83 c4 08	 add	 esp, 8
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 100  : 		if (!m_found && strncmp(m_name, "ThisPointer:", 12) == 0 && strcmp(m_name+12, typeid(T).name()) == 0)

  00131	8d 4b 0c	 lea	 ecx, DWORD PTR [ebx+12]
$LL37@GetValueHe:
  00134	8a 11		 mov	 dl, BYTE PTR [ecx]
  00136	3a 10		 cmp	 dl, BYTE PTR [eax]
  00138	75 1a		 jne	 SHORT $LN38@GetValueHe
  0013a	84 d2		 test	 dl, dl
  0013c	74 12		 je	 SHORT $LN39@GetValueHe
  0013e	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  00141	3a 50 01	 cmp	 dl, BYTE PTR [eax+1]
  00144	75 0e		 jne	 SHORT $LN38@GetValueHe
  00146	83 c1 02	 add	 ecx, 2
  00149	83 c0 02	 add	 eax, 2
  0014c	84 d2		 test	 dl, dl
  0014e	75 e4		 jne	 SHORT $LL37@GetValueHe
$LN39@GetValueHe:
  00150	33 c0		 xor	 eax, eax
  00152	eb 05		 jmp	 SHORT $LN40@GetValueHe
$LN38@GetValueHe:
  00154	1b c0		 sbb	 eax, eax
  00156	83 c8 01	 or	 eax, 1
$LN40@GetValueHe:
  00159	85 c0		 test	 eax, eax
  0015b	75 26		 jne	 SHORT $LN5@GetValueHe

; 101  : 		{
; 102  : 			NameValuePairs::ThrowIfTypeMismatch(m_name, typeid(T *), *m_valueType);

  0015d	ff 76 08	 push	 DWORD PTR [esi+8]
  00160	68 00 00 00 00	 push	 OFFSET ??_R0PAVDL_GroupParameters_GFP@CryptoPP@@@8
  00165	53		 push	 ebx
  00166	e8 00 00 00 00	 call	 ?ThrowIfTypeMismatch@NameValuePairs@CryptoPP@@SAXPBDABVtype_info@@1@Z ; CryptoPP::NameValuePairs::ThrowIfTypeMismatch

; 103  : 			*reinterpret_cast<const T **>(pValue) = pObject;

  0016b	8b 45 14	 mov	 eax, DWORD PTR _pValue$[ebp]
  0016e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00171	8b 4d 08	 mov	 ecx, DWORD PTR _pObject$[ebp]
  00174	89 08		 mov	 DWORD PTR [eax], ecx

; 113  : 	}

  00176	8b c6		 mov	 eax, esi
  00178	5f		 pop	 edi
  00179	c6 46 10 01	 mov	 BYTE PTR [esi+16], 1
  0017d	5e		 pop	 esi
  0017e	5b		 pop	 ebx
  0017f	5d		 pop	 ebp
  00180	c2 14 00	 ret	 20			; 00000014H
$LN5@GetValueHe:

; 104  : 			m_found = true;
; 105  : 			return;
; 106  : 		}
; 107  : 
; 108  : 		if (!m_found && searchFirst)

  00183	8a 46 10	 mov	 al, BYTE PTR [esi+16]
  00186	84 c0		 test	 al, al
  00188	75 4a		 jne	 SHORT $LN41@GetValueHe
  0018a	85 ff		 test	 edi, edi
  0018c	74 19		 je	 SHORT $LN30@GetValueHe

; 109  : 			m_found = searchFirst->GetVoidValue(m_name, valueType, pValue);

  0018e	ff 75 14	 push	 DWORD PTR _pValue$[ebp]
  00191	8b 07		 mov	 eax, DWORD PTR [edi]
  00193	8b cf		 mov	 ecx, edi
  00195	ff 75 10	 push	 DWORD PTR _valueType$[ebp]
  00198	ff 76 04	 push	 DWORD PTR [esi+4]
  0019b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0019e	ff d0		 call	 eax
  001a0	88 46 10	 mov	 BYTE PTR [esi+16], al

; 111  : 		if (!m_found && typeid(T) != typeid(BASE))

  001a3	84 c0		 test	 al, al
  001a5	75 2d		 jne	 SHORT $LN41@GetValueHe
$LN30@GetValueHe:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h

; 88   :         return __std_type_info_compare(&_Data, &_Other._Data) != 0;

  001a7	68 04 00 00 00	 push	 OFFSET ??_R0?AVDL_GroupParameters_IntegerBased@CryptoPP@@@8+4
  001ac	68 04 00 00 00	 push	 OFFSET ??_R0?AVDL_GroupParameters_GFP@CryptoPP@@@8+4
  001b1	e8 00 00 00 00	 call	 ___std_type_info_compare
  001b6	83 c4 08	 add	 esp, 8
  001b9	85 c0		 test	 eax, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 111  : 		if (!m_found && typeid(T) != typeid(BASE))

  001bb	74 17		 je	 SHORT $LN41@GetValueHe

; 112  : 			m_found = pObject->BASE::GetVoidValue(m_name, valueType, pValue);

  001bd	ff 75 14	 push	 DWORD PTR _pValue$[ebp]
  001c0	8b 4d 08	 mov	 ecx, DWORD PTR _pObject$[ebp]
  001c3	ff 75 10	 push	 DWORD PTR _valueType$[ebp]
  001c6	ff 76 04	 push	 DWORD PTR [esi+4]
  001c9	8d 49 28	 lea	 ecx, DWORD PTR [ecx+40]
  001cc	e8 00 00 00 00	 call	 ?GetVoidValue@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NPBDABVtype_info@@PAX@Z ; CryptoPP::DL_GroupParameters_IntegerBased::GetVoidValue
  001d1	88 46 10	 mov	 BYTE PTR [esi+16], al
$LN41@GetValueHe:

; 113  : 	}

  001d4	5f		 pop	 edi
  001d5	8b c6		 mov	 eax, esi
  001d7	5e		 pop	 esi
  001d8	5b		 pop	 ebx
  001d9	5d		 pop	 ebp
  001da	c2 14 00	 ret	 20			; 00000014H
??0?$GetValueHelperClass@VDL_GroupParameters_GFP@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@QAE@PBVDL_GroupParameters_GFP@1@PBDABVtype_info@@PAXPBVNameValuePairs@1@@Z ENDP ; CryptoPP::GetValueHelperClass<CryptoPP::DL_GroupParameters_GFP,CryptoPP::DL_GroupParameters_IntegerBased>::GetValueHelperClass<CryptoPP::DL_GroupParameters_GFP,CryptoPP::DL_GroupParameters_IntegerBased>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
;	COMDAT ??$GetValueHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@VDL_GroupParameters_GFP@2@@CryptoPP@@YA?AV?$GetValueHelperClass@VDL_GroupParameters_GFP@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PBVDL_GroupParameters_GFP@0@PBDABVtype_info@@PAXPBVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_pObject$ = 12						; size = 4
_name$ = 16						; size = 4
_valueType$ = 20					; size = 4
_pValue$ = 24						; size = 4
_searchFirst$ = 28					; size = 4
_dummy$ = 32						; size = 4
??$GetValueHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@VDL_GroupParameters_GFP@2@@CryptoPP@@YA?AV?$GetValueHelperClass@VDL_GroupParameters_GFP@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PBVDL_GroupParameters_GFP@0@PBDABVtype_info@@PAXPBVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z PROC ; CryptoPP::GetValueHelper<CryptoPP::DL_GroupParameters_IntegerBased,CryptoPP::DL_GroupParameters_GFP>, COMDAT

; 156  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 157  : 	return GetValueHelperClass<T, BASE>(pObject, name, valueType, pValue, searchFirst);

  00003	ff 75 1c	 push	 DWORD PTR _searchFirst$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00009	ff 75 18	 push	 DWORD PTR _pValue$[ebp]
  0000c	ff 75 14	 push	 DWORD PTR _valueType$[ebp]
  0000f	ff 75 10	 push	 DWORD PTR _name$[ebp]
  00012	ff 75 0c	 push	 DWORD PTR _pObject$[ebp]
  00015	e8 00 00 00 00	 call	 ??0?$GetValueHelperClass@VDL_GroupParameters_GFP@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@QAE@PBVDL_GroupParameters_GFP@1@PBDABVtype_info@@PAXPBVNameValuePairs@1@@Z ; CryptoPP::GetValueHelperClass<CryptoPP::DL_GroupParameters_GFP,CryptoPP::DL_GroupParameters_IntegerBased>::GetValueHelperClass<CryptoPP::DL_GroupParameters_GFP,CryptoPP::DL_GroupParameters_IntegerBased>
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 158  : }

  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
??$GetValueHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@VDL_GroupParameters_GFP@2@@CryptoPP@@YA?AV?$GetValueHelperClass@VDL_GroupParameters_GFP@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PBVDL_GroupParameters_GFP@0@PBDABVtype_info@@PAXPBVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z ENDP ; CryptoPP::GetValueHelper<CryptoPP::DL_GroupParameters_IntegerBased,CryptoPP::DL_GroupParameters_GFP>
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GDL_GroupParameters_GFP@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GDL_GroupParameters_GFP@CryptoPP@@UAEPAXI@Z PROC	; CryptoPP::DL_GroupParameters_GFP::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAE@XZ
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN12@scalar
  00011	6a 70		 push	 112			; 00000070H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN12@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GDL_GroupParameters_GFP@CryptoPP@@UAEPAXI@Z ENDP	; CryptoPP::DL_GroupParameters_GFP::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\eprecomp.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??0DL_GroupParameters_GFP@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$2 = 8						; size = 4
_$initVBases$ = 8					; size = 4
??0DL_GroupParameters_GFP@CryptoPP@@QAE@XZ PROC		; CryptoPP::DL_GroupParameters_GFP::DL_GroupParameters_GFP, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0DL_GroupParameters_GFP@CryptoPP@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi
  0002a	83 7d 08 00	 cmp	 DWORD PTR _$initVBases$[ebp], 0
  0002e	74 07		 je	 SHORT $LN47@DL_GroupPa
  00030	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], OFFSET ??_8DL_GroupParameters_GFP@CryptoPP@@7B@
$LN47@DL_GroupPa:
  00037	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h

; 528  : 	DL_GroupParameters() : m_validationLevel(0) {}

  0003a	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
  00041	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@XZ ; CryptoPP::Integer::Integer
  00046	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00049	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6B@
  0004f	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], OFFSET ??_7?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6BGeneratableCryptoMaterial@1@@
  00056	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0005d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00060	c7 44 38 08 00
	00 00 00	 mov	 DWORD PTR [eax+edi+8], OFFSET ??_7?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@6BCryptoMaterial@1@@
  00068	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0006b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0006e	c7 44 38 04 00
	00 00 00	 mov	 DWORD PTR [eax+edi+4], 0
  00076	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], OFFSET ??_7ModExpPrecomputation@CryptoPP@@6B@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h

; 20   : 	explicit member_ptr(T *p = NULL) : m_p(p) {}

  0007d	c7 47 28 00 00
	00 00		 mov	 DWORD PTR [edi+40], 0
  00084	8d 77 2c	 lea	 esi, DWORD PTR [edi+44]
  00087	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0008b	89 75 08	 mov	 DWORD PTR _this$2[ebp], esi
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\eprecomp.h

; 46   : 	DL_FixedBasePrecomputationImpl() : m_windowSize(0) {}

  0008e	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00091	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@6B@
  00097	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@XZ ; CryptoPP::Integer::Integer
  0009c	8d 4e 1c	 lea	 ecx, DWORD PTR [esi+28]
  0009f	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000a3	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  000aa	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@XZ ; CryptoPP::Integer::Integer
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000af	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0
  000b6	c7 46 34 00 00
	00 00		 mov	 DWORD PTR [esi+52], 0
  000bd	c7 46 38 00 00
	00 00		 mov	 DWORD PTR [esi+56], 0
  000c4	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000c7	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7DL_GroupParameters_GFP@CryptoPP@@6B@
  000cd	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], OFFSET ??_7DL_GroupParameters_GFP@CryptoPP@@6BGeneratableCryptoMaterial@1@@
  000d4	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000d7	c7 44 38 08 00
	00 00 00	 mov	 DWORD PTR [eax+edi+8], OFFSET ??_7DL_GroupParameters_GFP@CryptoPP@@6BCryptoMaterial@1@@
  000df	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000e2	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000e5	c7 44 38 04 00
	00 00 00	 mov	 DWORD PTR [eax+edi+4], 0
  000ed	8b c7		 mov	 eax, edi
  000ef	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000f2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000f9	59		 pop	 ecx
  000fa	5f		 pop	 edi
  000fb	5e		 pop	 esi
  000fc	8b e5		 mov	 esp, ebp
  000fe	5d		 pop	 ebp
  000ff	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DL_GroupParameters_GFP@CryptoPP@@QAE@XZ$2:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1DL_GroupParameters_IntegerBased@CryptoPP@@UAE@XZ
__unwindfunclet$??0DL_GroupParameters_GFP@CryptoPP@@QAE@XZ$3:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	83 c1 24	 add	 ecx, 36			; 00000024H
  0000e	e9 00 00 00 00	 jmp	 ??1ModExpPrecomputation@CryptoPP@@QAE@XZ
__unwindfunclet$??0DL_GroupParameters_GFP@CryptoPP@@QAE@XZ$6:
  00013	8b 4d 08	 mov	 ecx, DWORD PTR _this$2[ebp]
  00016	83 c1 04	 add	 ecx, 4
  00019	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
  0001e	cc		 int	 3
  0001f	cc		 int	 3
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
__ehhandler$??0DL_GroupParameters_GFP@CryptoPP@@QAE@XZ:
  00023	90		 npad	 1
  00024	90		 npad	 1
  00025	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00029	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002c	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0002f	33 c8		 xor	 ecx, eax
  00031	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00036	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0DL_GroupParameters_GFP@CryptoPP@@QAE@XZ
  0003b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0DL_GroupParameters_GFP@CryptoPP@@QAE@XZ ENDP		; CryptoPP::DL_GroupParameters_GFP::DL_GroupParameters_GFP
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
;	COMDAT ?GetFieldType@DL_GroupParameters_GFP@CryptoPP@@MBEHXZ
_TEXT	SEGMENT
?GetFieldType@DL_GroupParameters_GFP@CryptoPP@@MBEHXZ PROC ; CryptoPP::DL_GroupParameters_GFP::GetFieldType, COMDAT
; _this$ = ecx

; 137  : 	int GetFieldType() const {return 1;}

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetFieldType@DL_GroupParameters_GFP@CryptoPP@@MBEHXZ ENDP ; CryptoPP::DL_GroupParameters_GFP::GetFieldType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
;	COMDAT ?GetVoidValue@DL_GroupParameters_GFP@CryptoPP@@UBE_NPBDABVtype_info@@PAX@Z
_TEXT	SEGMENT
$T1 = -20						; size = 20
_name$ = 8						; size = 4
_valueType$ = 12					; size = 4
_pValue$ = 16						; size = 4
?GetVoidValue@DL_GroupParameters_GFP@CryptoPP@@UBE_NPBDABVtype_info@@PAX@Z PROC ; CryptoPP::DL_GroupParameters_GFP::GetVoidValue, COMDAT
; _this$ = ecx

; 128  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 129  : 		return GetValueHelper<DL_GroupParameters_IntegerBased>(this, name, valueType, pValue).Assignable();

  00006	8d 41 94	 lea	 eax, DWORD PTR [ecx-108]
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	6a 00		 push	 0
  0000d	6a 00		 push	 0
  0000f	ff 75 10	 push	 DWORD PTR _pValue$[ebp]
  00012	ff 75 0c	 push	 DWORD PTR _valueType$[ebp]
  00015	ff 75 08	 push	 DWORD PTR _name$[ebp]
  00018	50		 push	 eax
  00019	8d 45 ec	 lea	 eax, DWORD PTR $T1[ebp]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??$GetValueHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@VDL_GroupParameters_GFP@2@@CryptoPP@@YA?AV?$GetValueHelperClass@VDL_GroupParameters_GFP@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PBVDL_GroupParameters_GFP@0@PBDABVtype_info@@PAXPBVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z ; CryptoPP::GetValueHelper<CryptoPP::DL_GroupParameters_IntegerBased,CryptoPP::DL_GroupParameters_GFP>
  00022	8b f0		 mov	 esi, eax
  00024	83 c4 1c	 add	 esp, 28			; 0000001cH
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 134  : 		if (m_getValueNames)

  00027	80 7e 11 00	 cmp	 BYTE PTR [esi+17], 0
  0002b	74 45		 je	 SHORT $LN4@GetVoidVal
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h

; 101  :         return __std_type_info_name(&_Data, &__type_info_root_node);

  0002d	53		 push	 ebx
  0002e	68 00 00 00 00	 push	 OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
  00033	68 04 00 00 00	 push	 OFFSET ??_R0?AVDL_GroupParameters_GFP@CryptoPP@@@8+4
  00038	e8 00 00 00 00	 call	 ___std_type_info_name
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2958 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0003d	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h

; 101  :         return __std_type_info_name(&_Data, &__type_info_root_node);

  00040	83 c4 08	 add	 esp, 8
  00043	8b f8		 mov	 edi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2958 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00045	6a 0b		 push	 11			; 0000000bH
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0M@POHHOAKA@ThisObject?3@
  0004c	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 389  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00051	8b d7		 mov	 edx, edi
  00053	8d 5a 01	 lea	 ebx, DWORD PTR [edx+1]
$LL25@GetVoidVal:
  00056	8a 0a		 mov	 cl, BYTE PTR [edx]
  00058	42		 inc	 edx
  00059	84 c9		 test	 cl, cl
  0005b	75 f9		 jne	 SHORT $LL25@GetVoidVal
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 135  : 			((*reinterpret_cast<std::string *>(m_pValue) += "ThisObject:") += typeid(T).name()) += ';';

  0005d	6a 3b		 push	 59			; 0000003bH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 389  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0005f	2b d3		 sub	 edx, ebx

; 2958 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00061	8b c8		 mov	 ecx, eax
  00063	52		 push	 edx
  00064	57		 push	 edi
  00065	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 135  : 			((*reinterpret_cast<std::string *>(m_pValue) += "ThisObject:") += typeid(T).name()) += ';';

  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00071	5b		 pop	 ebx
$LN4@GetVoidVal:

; 136  : 		if (!m_found && strncmp(m_name, "ThisObject:", 11) == 0 && strcmp(m_name+11, typeid(T).name()) == 0)

  00072	80 7e 10 00	 cmp	 BYTE PTR [esi+16], 0
  00076	75 76		 jne	 SHORT $LN30@GetVoidVal
  00078	6a 0b		 push	 11			; 0000000bH
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_0M@POHHOAKA@ThisObject?3@
  0007f	ff 76 04	 push	 DWORD PTR [esi+4]
  00082	e8 00 00 00 00	 call	 _strncmp
  00087	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008a	85 c0		 test	 eax, eax
  0008c	75 60		 jne	 SHORT $LN30@GetVoidVal
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h

; 101  :         return __std_type_info_name(&_Data, &__type_info_root_node);

  0008e	68 00 00 00 00	 push	 OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
  00093	68 04 00 00 00	 push	 OFFSET ??_R0?AVDL_GroupParameters_GFP@CryptoPP@@@8+4
  00098	e8 00 00 00 00	 call	 ___std_type_info_name
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 136  : 		if (!m_found && strncmp(m_name, "ThisObject:", 11) == 0 && strcmp(m_name+11, typeid(T).name()) == 0)

  0009d	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h

; 101  :         return __std_type_info_name(&_Data, &__type_info_root_node);

  000a0	83 c4 08	 add	 esp, 8
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 136  : 		if (!m_found && strncmp(m_name, "ThisObject:", 11) == 0 && strcmp(m_name+11, typeid(T).name()) == 0)

  000a3	8d 4f 0b	 lea	 ecx, DWORD PTR [edi+11]
$LL26@GetVoidVal:
  000a6	8a 11		 mov	 dl, BYTE PTR [ecx]
  000a8	3a 10		 cmp	 dl, BYTE PTR [eax]
  000aa	75 1a		 jne	 SHORT $LN27@GetVoidVal
  000ac	84 d2		 test	 dl, dl
  000ae	74 12		 je	 SHORT $LN28@GetVoidVal
  000b0	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  000b3	3a 50 01	 cmp	 dl, BYTE PTR [eax+1]
  000b6	75 0e		 jne	 SHORT $LN27@GetVoidVal
  000b8	83 c1 02	 add	 ecx, 2
  000bb	83 c0 02	 add	 eax, 2
  000be	84 d2		 test	 dl, dl
  000c0	75 e4		 jne	 SHORT $LL26@GetVoidVal
$LN28@GetVoidVal:
  000c2	33 c0		 xor	 eax, eax
  000c4	eb 05		 jmp	 SHORT $LN29@GetVoidVal
$LN27@GetVoidVal:
  000c6	1b c0		 sbb	 eax, eax
  000c8	83 c8 01	 or	 eax, 1
$LN29@GetVoidVal:
  000cb	85 c0		 test	 eax, eax
  000cd	75 1f		 jne	 SHORT $LN30@GetVoidVal

; 137  : 		{
; 138  : 			NameValuePairs::ThrowIfTypeMismatch(m_name, typeid(T), *m_valueType);

  000cf	ff 76 08	 push	 DWORD PTR [esi+8]
  000d2	68 00 00 00 00	 push	 OFFSET ??_R0?AVDL_GroupParameters_GFP@CryptoPP@@@8
  000d7	57		 push	 edi
  000d8	e8 00 00 00 00	 call	 ?ThrowIfTypeMismatch@NameValuePairs@CryptoPP@@SAXPBDABVtype_info@@1@Z ; CryptoPP::NameValuePairs::ThrowIfTypeMismatch
  000dd	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000e3	ff 36		 push	 DWORD PTR [esi]
  000e5	e8 00 00 00 00	 call	 ??4?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@QAEAAV01@ABV01@@Z

; 139  : 			*reinterpret_cast<T *>(m_pValue) = *m_pObject;
; 140  : 			m_found = true;

  000ea	c6 46 10 01	 mov	 BYTE PTR [esi+16], 1
$LN30@GetVoidVal:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h

; 130  : 	}

  000ee	8a 46 10	 mov	 al, BYTE PTR [esi+16]
  000f1	5f		 pop	 edi
  000f2	5e		 pop	 esi
  000f3	8b e5		 mov	 esp, ebp
  000f5	5d		 pop	 ebp
  000f6	c2 0c 00	 ret	 12			; 0000000cH
?GetVoidValue@DL_GroupParameters_GFP@CryptoPP@@UBE_NPBDABVtype_info@@PAX@Z ENDP ; CryptoPP::DL_GroupParameters_GFP::GetVoidValue
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
;	COMDAT ?IsIdentity@DL_GroupParameters_GFP@CryptoPP@@UBE_NABVInteger@2@@Z
_TEXT	SEGMENT
_element$ = 8						; size = 4
?IsIdentity@DL_GroupParameters_GFP@CryptoPP@@UBE_NABVInteger@2@@Z PROC ; CryptoPP::DL_GroupParameters_GFP::IsIdentity, COMDAT
; _this$ = ecx

; 123  : 	bool IsIdentity(const Integer &element) const {return element == Integer::One();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?One@Integer@CryptoPP@@SAABV12@XZ ; CryptoPP::Integer::One
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 383  : inline bool operator==(const CryptoPP::Integer& a, const CryptoPP::Integer& b) {return a.Compare(b)==0;}

  00008	8b 4d 08	 mov	 ecx, DWORD PTR _element$[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ?Compare@Integer@CryptoPP@@QBEHABV12@@Z ; CryptoPP::Integer::Compare
  00011	85 c0		 test	 eax, eax
  00013	0f 94 c0	 sete	 al
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h

; 123  : 	bool IsIdentity(const Integer &element) const {return element == Integer::One();}

  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?IsIdentity@DL_GroupParameters_GFP@CryptoPP@@UBE_NABVInteger@2@@Z ENDP ; CryptoPP::DL_GroupParameters_GFP::IsIdentity
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??4?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
$T1 = 8							; size = 1
___that$ = 8						; size = 4
??4?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@QAEAAV01@ABV01@@Z PROC ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::operator=, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1168 :         if (this != _STD addressof(_Right)) {

  00003	56		 push	 esi
  00004	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0000d	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  00010	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00013	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ??4Integer@CryptoPP@@QAEAAV01@ABV01@@Z ; CryptoPP::Integer::operator=
  0001c	8d 46 28	 lea	 eax, DWORD PTR [esi+40]
  0001f	50		 push	 eax
  00020	8d 4f 28	 lea	 ecx, DWORD PTR [edi+40]
  00023	e8 00 00 00 00	 call	 ??4?$value_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAEAAV01@ABV01@@Z ; CryptoPP::value_ptr<CryptoPP::MontgomeryRepresentation>::operator=
  00028	8d 46 30	 lea	 eax, DWORD PTR [esi+48]
  0002b	50		 push	 eax
  0002c	8d 4f 30	 lea	 ecx, DWORD PTR [edi+48]
  0002f	e8 00 00 00 00	 call	 ??4Integer@CryptoPP@@QAEAAV01@ABV01@@Z ; CryptoPP::Integer::operator=
  00034	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00037	8d 4f 48	 lea	 ecx, DWORD PTR [edi+72]
  0003a	89 47 44	 mov	 DWORD PTR [edi+68], eax
  0003d	8d 46 48	 lea	 eax, DWORD PTR [esi+72]
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ??4Integer@CryptoPP@@QAEAAV01@ABV01@@Z ; CryptoPP::Integer::operator=
  00046	83 c6 5c	 add	 esi, 92			; 0000005cH
  00049	8d 4f 5c	 lea	 ecx, DWORD PTR [edi+92]
  0004c	3b ce		 cmp	 ecx, esi
  0004e	74 0d		 je	 SHORT $LN22@operator

; 1142 :         _Assign_range(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  00050	ff 75 08	 push	 DWORD PTR $T1[ebp]
  00053	ff 76 04	 push	 DWORD PTR [esi+4]
  00056	ff 36		 push	 DWORD PTR [esi]
  00058	e8 00 00 00 00	 call	 ??$_Assign_range@PAVInteger@CryptoPP@@@?$vector@VInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@AAEXPAVInteger@CryptoPP@@0Uforward_iterator_tag@1@@Z ; std::vector<CryptoPP::Integer,std::allocator<CryptoPP::Integer> >::_Assign_range<CryptoPP::Integer *>
$LN22@operator:
  0005d	8b c7		 mov	 eax, edi
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
??4?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@QAEAAV01@ABV01@@Z ENDP ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::operator=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modexppc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
;	COMDAT ?SetModulusAndSubgroupGenerator@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEXABVInteger@2@0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
_g$ = 12						; size = 4
?SetModulusAndSubgroupGenerator@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEXABVInteger@2@0@Z PROC ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::SetModulusAndSubgroupGenerator, COMDAT
; _this$ = ecx

; 107  : 		{this->m_groupPrecomputation.SetModulus(p); this->m_gpc.SetBase(this->GetGroupPrecomputation(), g); this->ParametersChanged();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetModulusAndSubgroupGenerator@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEXABVInteger@2@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b d9		 mov	 ebx, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modexppc.h

; 25   : 	void SetModulus(const Integer &v) {m_mr.reset(new MontgomeryRepresentation(v));}

  00028	6a 68		 push	 104			; 00000068H
  0002a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002f	83 c4 04	 add	 esp, 4
  00032	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003c	85 c0		 test	 eax, eax
  0003e	74 0c		 je	 SHORT $LN5@SetModulus
  00040	ff 75 08	 push	 DWORD PTR _p$[ebp]
  00043	8b c8		 mov	 ecx, eax
  00045	e8 00 00 00 00	 call	 ??0MontgomeryRepresentation@CryptoPP@@QAE@ABVInteger@1@@Z ; CryptoPP::MontgomeryRepresentation::MontgomeryRepresentation
  0004a	eb 02		 jmp	 SHORT $LN6@SetModulus
$LN5@SetModulus:
  0004c	33 c0		 xor	 eax, eax
$LN6@SetModulus:
  0004e	50		 push	 eax
  0004f	8d 4b 28	 lea	 ecx, DWORD PTR [ebx+40]
  00052	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00059	e8 00 00 00 00	 call	 ?reset@?$member_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAEXPAVMontgomeryRepresentation@2@@Z ; CryptoPP::member_ptr<CryptoPP::MontgomeryRepresentation>::reset
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h

; 107  : 		{this->m_groupPrecomputation.SetModulus(p); this->m_gpc.SetBase(this->GetGroupPrecomputation(), g); this->ParametersChanged();}

  0005e	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00061	8d 4b 04	 lea	 ecx, DWORD PTR [ebx+4]
  00064	ff 75 0c	 push	 DWORD PTR _g$[ebp]
  00067	8b 7b 2c	 mov	 edi, DWORD PTR [ebx+44]
  0006a	ff 50 14	 call	 DWORD PTR [eax+20]
  0006d	50		 push	 eax
  0006e	8d 4b 2c	 lea	 ecx, DWORD PTR [ebx+44]
  00071	ff 57 04	 call	 DWORD PTR [edi+4]
  00074	c7 43 0c 00 00
	00 00		 mov	 DWORD PTR [ebx+12], 0
  0007b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00085	59		 pop	 ecx
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	5b		 pop	 ebx
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetModulusAndSubgroupGenerator@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEXABVInteger@2@0@Z$0:
  00000	6a 68		 push	 104			; 00000068H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?SetModulusAndSubgroupGenerator@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEXABVInteger@2@0@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetModulusAndSubgroupGenerator@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEXABVInteger@2@0@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetModulusAndSubgroupGenerator@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEXABVInteger@2@0@Z ENDP ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::SetModulusAndSubgroupGenerator
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modexppc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
;	COMDAT ?GetModulus@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UBEABVInteger@2@XZ
_TEXT	SEGMENT
?GetModulus@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UBEABVInteger@2@XZ PROC ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::GetModulus, COMDAT
; _this$ = ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modexppc.h

; 26   : 	const Integer & GetModulus() const {return m_mr->GetModulus();}

  00000	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  00003	83 c0 0c	 add	 eax, 12			; 0000000cH
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h

; 103  : 	const Integer & GetModulus() const {return this->m_groupPrecomputation.GetModulus();}

  00006	c3		 ret	 0
?GetModulus@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UBEABVInteger@2@XZ ENDP ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::GetModulus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
;	COMDAT ?AccessBasePrecomputation@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEAAV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ
_TEXT	SEGMENT
?AccessBasePrecomputation@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEAAV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ PROC ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::AccessBasePrecomputation, COMDAT
; _this$ = ecx

; 100  : 	DL_FixedBasePrecomputation<Element> & AccessBasePrecomputation() {return this->m_gpc;}

  00000	8d 41 28	 lea	 eax, DWORD PTR [ecx+40]
  00003	c3		 ret	 0
?AccessBasePrecomputation@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEAAV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ ENDP ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::AccessBasePrecomputation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
;	COMDAT ?GetBasePrecomputation@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UBEABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ
_TEXT	SEGMENT
?GetBasePrecomputation@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UBEABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ PROC ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::GetBasePrecomputation, COMDAT
; _this$ = ecx

; 99   : 	const DL_FixedBasePrecomputation<Element> & GetBasePrecomputation() const {return this->m_gpc;}

  00000	8d 41 28	 lea	 eax, DWORD PTR [ecx+40]
  00003	c3		 ret	 0
?GetBasePrecomputation@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UBEABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ ENDP ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::GetBasePrecomputation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
;	COMDAT ?AssignFrom@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEXABVNameValuePairs@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
_source$ = 8						; size = 4
?AssignFrom@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEXABVNameValuePairs@2@@Z PROC ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::AssignFrom, COMDAT
; _this$ = ecx

; 96   : 		{AssignFromHelper<DL_GroupParameters_IntegerBased>(this, source);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	8d 41 94	 lea	 eax, DWORD PTR [ecx-108]
  00009	6a 00		 push	 0
  0000b	ff 75 08	 push	 DWORD PTR _source$[ebp]
  0000e	50		 push	 eax
  0000f	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??$AssignFromHelper@VDL_GroupParameters_IntegerBased@CryptoPP@@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@2@@CryptoPP@@YA?AV?$AssignFromHelperClass@V?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@VDL_GroupParameters_IntegerBased@2@@0@PAV?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@0@ABVNameValuePairs@0@PAVDL_GroupParameters_IntegerBased@0@@Z ; CryptoPP::AssignFromHelper<CryptoPP::DL_GroupParameters_IntegerBased,CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> > >
  00018	83 c4 10	 add	 esp, 16			; 00000010H
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?AssignFrom@?$DL_GroupParameters_IntegerBasedImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@@CryptoPP@@UAEXABVNameValuePairs@2@@Z ENDP ; CryptoPP::DL_GroupParameters_IntegerBasedImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer> >::AssignFrom
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_G?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAE@XZ
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 70		 push	 112			; 00000070H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_G?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??1?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAE@XZ PROC ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::~DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	8d 4e 2c	 lea	 ecx, DWORD PTR [esi+44]
  00029	e8 00 00 00 00	 call	 ??1?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@QAE@XZ
  0002e	8d 4e 28	 lea	 ecx, DWORD PTR [esi+40]
  00031	e8 00 00 00 00	 call	 ??1?$member_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::MontgomeryRepresentation>::~member_ptr<CryptoPP::MontgomeryRepresentation>

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00036	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00039	33 c0		 xor	 eax, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0003b	8b 76 1c	 mov	 esi, DWORD PTR [esi+28]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0003e	8b ca		 mov	 ecx, edx
  00040	8b fe		 mov	 edi, esi
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00042	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00049	f3 ab		 rep stosd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  0004b	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  00052	56		 push	 esi
  00053	83 f8 10	 cmp	 eax, 16			; 00000010H
  00056	72 19		 jb	 SHORT $LN19@DL_GroupPa

; 109  : 			return AlignedDeallocate(p);

  00058	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  0005d	83 c4 04	 add	 esp, 4
  00060	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00063	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006a	59		 pop	 ecx
  0006b	5f		 pop	 edi
  0006c	5e		 pop	 esi
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
$LN19@DL_GroupPa:
  00071	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00076	83 c4 04	 add	 esp, 4
  00079	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00083	59		 pop	 ecx
  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
  0008a	cc		 int	 3
  0008b	cc		 int	 3
  0008c	cc		 int	 3
  0008d	cc		 int	 3
  0008e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAE@XZ ENDP ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::~DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?AccessBasePrecomputation@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAEAAV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ
_TEXT	SEGMENT
?AccessBasePrecomputation@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAEAAV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ PROC ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::AccessBasePrecomputation, COMDAT
; _this$ = ecx

; 622  : 	DL_FixedBasePrecomputation<Element> & AccessBasePrecomputation() {return m_gpc;}

  00000	8d 41 28	 lea	 eax, DWORD PTR [ecx+40]
  00003	c3		 ret	 0
?AccessBasePrecomputation@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UAEAAV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ ENDP ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::AccessBasePrecomputation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?GetBasePrecomputation@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UBEABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ
_TEXT	SEGMENT
?GetBasePrecomputation@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UBEABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ PROC ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::GetBasePrecomputation, COMDAT
; _this$ = ecx

; 621  : 	const DL_FixedBasePrecomputation<Element> & GetBasePrecomputation() const {return m_gpc;}

  00000	8d 41 28	 lea	 eax, DWORD PTR [ecx+40]
  00003	c3		 ret	 0
?GetBasePrecomputation@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UBEABV?$DL_FixedBasePrecomputation@VInteger@CryptoPP@@@2@XZ ENDP ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::GetBasePrecomputation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?GetGroupPrecomputation@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UBEABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@XZ
_TEXT	SEGMENT
?GetGroupPrecomputation@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UBEABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@XZ PROC ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::GetGroupPrecomputation, COMDAT
; _this$ = ecx

; 620  : 	const DL_GroupPrecomputation<Element> & GetGroupPrecomputation() const {return m_groupPrecomputation;}

  00000	8d 41 20	 lea	 eax, DWORD PTR [ecx+32]
  00003	c3		 ret	 0
?GetGroupPrecomputation@?$DL_GroupParametersImpl@VModExpPrecomputation@CryptoPP@@V?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@2@VDL_GroupParameters_IntegerBased@2@@CryptoPP@@UBEABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@XZ ENDP ; CryptoPP::DL_GroupParametersImpl<CryptoPP::ModExpPrecomputation,CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>,CryptoPP::DL_GroupParameters_IntegerBased>::GetGroupPrecomputation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??1DL_GroupParameters_IntegerBased@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1DL_GroupParameters_IntegerBased@CryptoPP@@UAE@XZ PROC ; CryptoPP::DL_GroupParameters_IntegerBased::~DL_GroupParameters_IntegerBased, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1DL_GroupParameters_IntegerBased@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00024	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00027	33 c0		 xor	 eax, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00029	8b 71 1c	 mov	 esi, DWORD PTR [ecx+28]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0002c	8b fe		 mov	 edi, esi
  0002e	8b ca		 mov	 ecx, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00037	f3 ab		 rep stosd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  00039	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  00040	56		 push	 esi
  00041	83 f8 10	 cmp	 eax, 16			; 00000010H
  00044	72 19		 jb	 SHORT $LN10@DL_GroupPa

; 109  : 			return AlignedDeallocate(p);

  00046	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  0004b	83 c4 04	 add	 esp, 4
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
$LN10@DL_GroupPa:
  0005f	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00064	83 c4 04	 add	 esp, 4
  00067	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00071	59		 pop	 ecx
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c3		 ret	 0
  00078	cc		 int	 3
  00079	cc		 int	 3
  0007a	cc		 int	 3
  0007b	cc		 int	 3
  0007c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1DL_GroupParameters_IntegerBased@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1DL_GroupParameters_IntegerBased@CryptoPP@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1DL_GroupParameters_IntegerBased@CryptoPP@@UAE@XZ ENDP ; CryptoPP::DL_GroupParameters_IntegerBased::~DL_GroupParameters_IntegerBased
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
;	COMDAT ?ConvertElementToInteger@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_element$ = 12						; size = 4
?ConvertElementToInteger@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@ABV32@@Z PROC ; CryptoPP::DL_GroupParameters_IntegerBased::ConvertElementToInteger, COMDAT
; _this$ = ecx

; 58   : 		{return element;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 0c	 push	 DWORD PTR _element$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00009	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::Integer::Integer
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?ConvertElementToInteger@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@ABV32@@Z ENDP ; CryptoPP::DL_GroupParameters_IntegerBased::ConvertElementToInteger
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
;	COMDAT ?GetEncodedElementSize@DL_GroupParameters_IntegerBased@CryptoPP@@UBEI_N@Z
_TEXT	SEGMENT
_reversible$ = 8					; size = 1
?GetEncodedElementSize@DL_GroupParameters_IntegerBased@CryptoPP@@UBEI_N@Z PROC ; CryptoPP::DL_GroupParameters_IntegerBased::GetEncodedElementSize, COMDAT
; _this$ = ecx

; 55   : 	unsigned int GetEncodedElementSize(bool reversible) const {return GetModulus().ByteCount();}

  00000	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
  00003	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00006	ff 50 10	 call	 DWORD PTR [eax+16]
  00009	8b c8		 mov	 ecx, eax
  0000b	e8 00 00 00 00	 call	 ?ByteCount@Integer@CryptoPP@@QBEIXZ ; CryptoPP::Integer::ByteCount
  00010	c2 04 00	 ret	 4
?GetEncodedElementSize@DL_GroupParameters_IntegerBased@CryptoPP@@UBEI_N@Z ENDP ; CryptoPP::DL_GroupParameters_IntegerBased::GetEncodedElementSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
;	COMDAT ?EncodeElement@DL_GroupParameters_IntegerBased@CryptoPP@@UBEX_NABVInteger@2@PAE@Z
_TEXT	SEGMENT
_reversible$ = 8					; size = 1
_element$ = 12						; size = 4
_encoded$ = 16						; size = 4
?EncodeElement@DL_GroupParameters_IntegerBased@CryptoPP@@UBEX_NABVInteger@2@PAE@Z PROC ; CryptoPP::DL_GroupParameters_IntegerBased::EncodeElement, COMDAT
; _this$ = ecx

; 54   : 		{element.Encode(encoded, GetModulus().ByteCount());}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
  00006	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00009	6a 00		 push	 0
  0000b	ff 50 10	 call	 DWORD PTR [eax+16]
  0000e	8b c8		 mov	 ecx, eax
  00010	e8 00 00 00 00	 call	 ?ByteCount@Integer@CryptoPP@@QBEIXZ ; CryptoPP::Integer::ByteCount
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR _element$[ebp]
  00018	50		 push	 eax
  00019	ff 75 10	 push	 DWORD PTR _encoded$[ebp]
  0001c	e8 00 00 00 00	 call	 ?Encode@Integer@CryptoPP@@QBEXPAEIW4Signedness@12@@Z ; CryptoPP::Integer::Encode
  00021	5d		 pop	 ebp
  00022	c2 0c 00	 ret	 12			; 0000000cH
?EncodeElement@DL_GroupParameters_IntegerBased@CryptoPP@@UBEX_NABVInteger@2@PAE@Z ENDP ; CryptoPP::DL_GroupParameters_IntegerBased::EncodeElement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
;	COMDAT ?FastSubgroupCheckAvailable@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
$T2 = -52						; size = 20
$T3 = -32						; size = 20
__$EHRec$ = -12						; size = 12
?FastSubgroupCheckAvailable@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NXZ PROC ; CryptoPP::DL_GroupParameters_IntegerBased::FastSubgroupCheckAvailable, COMDAT
; _this$ = ecx

; 52   : 	bool FastSubgroupCheckAvailable() const {return GetCofactor() == 2;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?FastSubgroupCheckAvailable@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
  0002a	6a 02		 push	 2
  0002c	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
  0002f	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@J@Z ; CryptoPP::Integer::Integer
  00034	8b 06		 mov	 eax, DWORD PTR [esi]
  00036	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00039	51		 push	 ecx
  0003a	8b ce		 mov	 ecx, esi
  0003c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00043	ff 50 2c	 call	 DWORD PTR [eax+44]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 383  : inline bool operator==(const CryptoPP::Integer& a, const CryptoPP::Integer& b) {return a.Compare(b)==0;}

  00046	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h

; 52   : 	bool FastSubgroupCheckAvailable() const {return GetCofactor() == 2;}

  00049	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 383  : inline bool operator==(const CryptoPP::Integer& a, const CryptoPP::Integer& b) {return a.Compare(b)==0;}

  0004d	51		 push	 ecx
  0004e	8b c8		 mov	 ecx, eax
  00050	e8 00 00 00 00	 call	 ?Compare@Integer@CryptoPP@@QBEHABV12@@Z ; CryptoPP::Integer::Compare
  00055	85 c0		 test	 eax, eax
  00057	0f 94 c3	 sete	 bl
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0005a	8b 55 d4	 mov	 edx, DWORD PTR $T2[ebp+8]
  0005d	33 c0		 xor	 eax, eax
  0005f	8b 75 d8	 mov	 esi, DWORD PTR $T2[ebp+12]
  00062	8b ca		 mov	 ecx, edx
  00064	8b fe		 mov	 edi, esi
  00066	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0006a	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  0006c	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  00073	56		 push	 esi
  00074	83 f8 10	 cmp	 eax, 16			; 00000010H
  00077	72 07		 jb	 SHORT $LN14@FastSubgro

; 109  : 			return AlignedDeallocate(p);

  00079	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  0007e	eb 05		 jmp	 SHORT $LN62@FastSubgro
$LN14@FastSubgro:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  00080	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN62@FastSubgro:

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00085	83 c4 04	 add	 esp, 4
  00088	8b 55 e8	 mov	 edx, DWORD PTR $T3[ebp+8]
  0008b	33 c0		 xor	 eax, eax
  0008d	8b 75 ec	 mov	 esi, DWORD PTR $T3[ebp+12]
  00090	8b ca		 mov	 ecx, edx
  00092	8b fe		 mov	 edi, esi
  00094	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  0009b	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  0009d	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
  000a4	56		 push	 esi
  000a5	83 f9 10	 cmp	 ecx, 16			; 00000010H
  000a8	72 07		 jb	 SHORT $LN41@FastSubgro

; 109  : 			return AlignedDeallocate(p);

  000aa	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  000af	eb 05		 jmp	 SHORT $LN63@FastSubgro
$LN41@FastSubgro:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  000b1	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN63@FastSubgro:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h

; 52   : 	bool FastSubgroupCheckAvailable() const {return GetCofactor() == 2;}

  000b6	8a c3		 mov	 al, bl
  000b8	83 c4 04	 add	 esp, 4
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000be	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c5	59		 pop	 ecx
  000c6	5f		 pop	 edi
  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx
  000c9	8b e5		 mov	 esp, ebp
  000cb	5d		 pop	 ebp
  000cc	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FastSubgroupCheckAvailable@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NXZ$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
__unwindfunclet$?FastSubgroupCheckAvailable@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NXZ$1:
  00008	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?FastSubgroupCheckAvailable@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NXZ:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?FastSubgroupCheckAvailable@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NXZ
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?FastSubgroupCheckAvailable@DL_GroupParameters_IntegerBased@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::DL_GroupParameters_IntegerBased::FastSubgroupCheckAvailable
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
;	COMDAT ?GetGroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ
_TEXT	SEGMENT
$T2 = -60						; size = 20
$T3 = -40						; size = 20
_p$1$ = -20						; size = 4
$T4 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetGroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ PROC ; CryptoPP::DL_GroupParameters_IntegerBased::GetGroupOrder, COMDAT
; _this$ = ecx

; 49   : 	Integer GetGroupOrder() const {return GetFieldType() == 1 ? GetModulus()-Integer::One() : GetModulus()+Integer::One();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetGroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 30	 sub	 esp, 48			; 00000030H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8d 79 fc	 lea	 edi, DWORD PTR [ecx-4]
  0002b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp], 0
  00032	8b 07		 mov	 eax, DWORD PTR [edi]
  00034	8b cf		 mov	 ecx, edi
  00036	ff 50 18	 call	 DWORD PTR [eax+24]
  00039	83 f8 01	 cmp	 eax, 1
  0003c	75 2b		 jne	 SHORT $LN3@GetGroupOr
  0003e	e8 00 00 00 00	 call	 ?One@Integer@CryptoPP@@SAABV12@XZ ; CryptoPP::Integer::One
  00043	8b 17		 mov	 edx, DWORD PTR [edi]
  00045	8b cf		 mov	 ecx, edi
  00047	8b f0		 mov	 esi, eax
  00049	ff 52 10	 call	 DWORD PTR [edx+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 397  : inline CryptoPP::Integer operator-(const CryptoPP::Integer &a, const CryptoPP::Integer &b) {return a.Minus(b);}

  0004c	56		 push	 esi
  0004d	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00050	51		 push	 ecx
  00051	8b c8		 mov	 ecx, eax
  00053	e8 00 00 00 00	 call	 ?Minus@Integer@CryptoPP@@QBE?AV12@ABV12@@Z ; CryptoPP::Integer::Minus
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h

; 49   : 	Integer GetGroupOrder() const {return GetFieldType() == 1 ? GetModulus()-Integer::One() : GetModulus()+Integer::One();}

  00058	8d 45 c4	 lea	 eax, DWORD PTR $T2[ebp]
  0005b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00062	bb 09 00 00 00	 mov	 ebx, 9
  00067	eb 29		 jmp	 SHORT $LN77@GetGroupOr
$LN3@GetGroupOr:
  00069	e8 00 00 00 00	 call	 ?One@Integer@CryptoPP@@SAABV12@XZ ; CryptoPP::Integer::One
  0006e	8b 17		 mov	 edx, DWORD PTR [edi]
  00070	8b cf		 mov	 ecx, edi
  00072	8b f0		 mov	 esi, eax
  00074	ff 52 10	 call	 DWORD PTR [edx+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 395  : inline CryptoPP::Integer operator+(const CryptoPP::Integer &a, const CryptoPP::Integer &b) {return a.Plus(b);}

  00077	56		 push	 esi
  00078	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  0007b	51		 push	 ecx
  0007c	8b c8		 mov	 ecx, eax
  0007e	e8 00 00 00 00	 call	 ?Plus@Integer@CryptoPP@@QBE?AV12@ABV12@@Z ; CryptoPP::Integer::Plus
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h

; 49   : 	Integer GetGroupOrder() const {return GetFieldType() == 1 ? GetModulus()-Integer::One() : GetModulus()+Integer::One();}

  00083	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00086	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  0008d	bb 12 00 00 00	 mov	 ebx, 18			; 00000012H
$LN77@GetGroupOr:
  00092	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00095	8b ce		 mov	 ecx, esi
  00097	50		 push	 eax
  00098	89 5d f0	 mov	 DWORD PTR $T4[ebp], ebx
  0009b	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::Integer::Integer
  000a0	83 cb 04	 or	 ebx, 4
  000a3	f6 c3 02	 test	 bl, 2
  000a6	74 3c		 je	 SHORT $LN27@GetGroupOr
  000a8	83 e3 fd	 and	 ebx, -3			; fffffffdH
  000ab	89 5d f0	 mov	 DWORD PTR $T4[ebp], ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000ae	8b 45 e4	 mov	 eax, DWORD PTR $T3[ebp+12]
  000b1	8b f8		 mov	 edi, eax
  000b3	8b 55 e0	 mov	 edx, DWORD PTR $T3[ebp+8]
  000b6	8b ca		 mov	 ecx, edx
  000b8	89 45 ec	 mov	 DWORD PTR _p$1$[ebp], eax
  000bb	33 c0		 xor	 eax, eax

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  000bd	ff 75 ec	 push	 DWORD PTR _p$1$[ebp]

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000c0	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  000c2	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000c9	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  000d0	83 f8 10	 cmp	 eax, 16			; 00000010H
  000d3	72 07		 jb	 SHORT $LN28@GetGroupOr

; 109  : 			return AlignedDeallocate(p);

  000d5	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  000da	eb 05		 jmp	 SHORT $LN78@GetGroupOr
$LN28@GetGroupOr:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  000dc	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN78@GetGroupOr:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h

; 49   : 	Integer GetGroupOrder() const {return GetFieldType() == 1 ? GetModulus()-Integer::One() : GetModulus()+Integer::One();}

  000e1	83 c4 04	 add	 esp, 4
$LN27@GetGroupOr:
  000e4	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000eb	f6 c3 01	 test	 bl, 1
  000ee	74 37		 je	 SHORT $LN75@GetGroupOr
  000f0	83 e3 fe	 and	 ebx, -2			; fffffffeH
  000f3	89 5d f0	 mov	 DWORD PTR $T4[ebp], ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000f6	8b 55 cc	 mov	 edx, DWORD PTR $T2[ebp+8]
  000f9	33 c0		 xor	 eax, eax
  000fb	8b 5d d0	 mov	 ebx, DWORD PTR $T2[ebp+12]
  000fe	8b ca		 mov	 ecx, edx
  00100	8b fb		 mov	 edi, ebx
  00102	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  00109	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  0010b	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
  00112	53		 push	 ebx
  00113	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00116	72 07		 jb	 SHORT $LN55@GetGroupOr

; 109  : 			return AlignedDeallocate(p);

  00118	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  0011d	eb 05		 jmp	 SHORT $LN79@GetGroupOr
$LN55@GetGroupOr:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  0011f	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN79@GetGroupOr:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h

; 49   : 	Integer GetGroupOrder() const {return GetFieldType() == 1 ? GetModulus()-Integer::One() : GetModulus()+Integer::One();}

  00124	83 c4 04	 add	 esp, 4
$LN75@GetGroupOr:
  00127	8b c6		 mov	 eax, esi
  00129	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0012c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00133	59		 pop	 ecx
  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	5b		 pop	 ebx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetGroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T4[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0c 00 00
	00		 je	 $LN6@GetGroupOr
  0000c	83 65 f0 fe	 and	 DWORD PTR $T4[ebp], -2	; fffffffeH
  00010	8d 4d c4	 lea	 ecx, DWORD PTR $T2[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
$LN6@GetGroupOr:
  00018	c3		 ret	 0
__unwindfunclet$?GetGroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ$1:
  00019	8b 45 f0	 mov	 eax, DWORD PTR $T4[ebp]
  0001c	83 e0 02	 and	 eax, 2
  0001f	0f 84 0c 00 00
	00		 je	 $LN8@GetGroupOr
  00025	83 65 f0 fd	 and	 DWORD PTR $T4[ebp], -3	; fffffffdH
  00029	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  0002c	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
$LN8@GetGroupOr:
  00031	c3		 ret	 0
__unwindfunclet$?GetGroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ$2:
  00032	8b 45 f0	 mov	 eax, DWORD PTR $T4[ebp]
  00035	83 e0 04	 and	 eax, 4
  00038	0f 84 0c 00 00
	00		 je	 $LN10@GetGroupOr
  0003e	83 65 f0 fb	 and	 DWORD PTR $T4[ebp], -5	; fffffffbH
  00042	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00045	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
$LN10@GetGroupOr:
  0004a	c3		 ret	 0
  0004b	cc		 int	 3
  0004c	cc		 int	 3
  0004d	cc		 int	 3
  0004e	cc		 int	 3
  0004f	cc		 int	 3
__ehhandler$?GetGroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ:
  00050	90		 npad	 1
  00051	90		 npad	 1
  00052	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00056	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00059	8b 4a c0	 mov	 ecx, DWORD PTR [edx-64]
  0005c	33 c8		 xor	 ecx, eax
  0005e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00063	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetGroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ
  00068	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetGroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBE?AVInteger@2@XZ ENDP ; CryptoPP::DL_GroupParameters_IntegerBased::GetGroupOrder
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\gfpcrypt.h
;	COMDAT ?GetSubgroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBEABVInteger@2@XZ
_TEXT	SEGMENT
?GetSubgroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBEABVInteger@2@XZ PROC ; CryptoPP::DL_GroupParameters_IntegerBased::GetSubgroupOrder, COMDAT
; _this$ = ecx

; 48   : 	const Integer & GetSubgroupOrder() const {return m_q;}

  00000	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  00003	c3		 ret	 0
?GetSubgroupOrder@DL_GroupParameters_IntegerBased@CryptoPP@@UBEABVInteger@2@XZ ENDP ; CryptoPP::DL_GroupParameters_IntegerBased::GetSubgroupOrder
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\asn.h
;	COMDAT ?Load@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@UAEXAAVBufferedTransformation@2@@Z
_TEXT	SEGMENT
_bt$ = 8						; size = 4
?Load@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@UAEXAAVBufferedTransformation@2@@Z PROC ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::Load, COMDAT
; _this$ = ecx

; 241  : 		{BERDecode(bt);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 41 ec	 mov	 eax, DWORD PTR [ecx-20]
  00006	83 c1 ec	 add	 ecx, -20		; ffffffecH
  00009	5d		 pop	 ebp
  0000a	ff 60 04	 jmp	 DWORD PTR [eax+4]
?Load@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@UAEXAAVBufferedTransformation@2@@Z ENDP ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::Load
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\asn.h
;	COMDAT ?Save@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z
_TEXT	SEGMENT
_bt$ = 8						; size = 4
?Save@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z PROC ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::Save, COMDAT
; _this$ = ecx

; 239  : 		{BEREncode(bt);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 41 ec	 mov	 eax, DWORD PTR [ecx-20]
  00006	83 c1 ec	 add	 ecx, -20		; ffffffecH
  00009	5d		 pop	 ebp
  0000a	ff 60 0c	 jmp	 DWORD PTR [eax+12]
?Save@?$ASN1CryptoMaterial@V?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z ENDP ; CryptoPP::ASN1CryptoMaterial<CryptoPP::DL_GroupParameters<CryptoPP::Integer> >::Save
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?GetCofactor@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@XZ
_TEXT	SEGMENT
$T2 = -36						; size = 20
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetCofactor@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@XZ PROC ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::GetCofactor, COMDAT
; _this$ = ecx

; 593  : 	virtual Integer GetCofactor() const {return GetGroupOrder()/GetSubgroupOrder();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?GetCofactor@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 18	 sub	 esp, 24			; 00000018H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx
  0002a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T3[ebp], 0
  00031	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00034	8b 07		 mov	 eax, DWORD PTR [edi]
  00036	51		 push	 ecx
  00037	8b cf		 mov	 ecx, edi
  00039	ff 50 28	 call	 DWORD PTR [eax+40]
  0003c	8b f0		 mov	 esi, eax
  0003e	8b 17		 mov	 edx, DWORD PTR [edi]
  00040	8b cf		 mov	 ecx, edi
  00042	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00049	ff 52 20	 call	 DWORD PTR [edx+32]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 401  : inline CryptoPP::Integer operator/(const CryptoPP::Integer &a, const CryptoPP::Integer &b) {return a.DividedBy(b);}

  0004c	8b 5d 08	 mov	 ebx, DWORD PTR ___$ReturnUdt$[ebp]
  0004f	8b ce		 mov	 ecx, esi
  00051	50		 push	 eax
  00052	53		 push	 ebx
  00053	e8 00 00 00 00	 call	 ?DividedBy@Integer@CryptoPP@@QBE?AV12@ABV12@@Z ; CryptoPP::Integer::DividedBy
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h

; 593  : 	virtual Integer GetCofactor() const {return GetGroupOrder()/GetSubgroupOrder();}

  00058	c7 45 f0 03 00
	00 00		 mov	 DWORD PTR $T3[ebp], 3
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0005f	8b 55 e4	 mov	 edx, DWORD PTR $T2[ebp+8]
  00062	33 c0		 xor	 eax, eax
  00064	8b 75 e8	 mov	 esi, DWORD PTR $T2[ebp+12]
  00067	8b ca		 mov	 ecx, edx
  00069	8b fe		 mov	 edi, esi
  0006b	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00072	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  00074	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
  0007b	56		 push	 esi
  0007c	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0007f	72 07		 jb	 SHORT $LN17@GetCofacto

; 109  : 			return AlignedDeallocate(p);

  00081	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  00086	eb 05		 jmp	 SHORT $LN38@GetCofacto
$LN17@GetCofacto:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  00088	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN38@GetCofacto:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h

; 593  : 	virtual Integer GetCofactor() const {return GetGroupOrder()/GetSubgroupOrder();}

  0008d	8b c3		 mov	 eax, ebx
  0008f	83 c4 04	 add	 esp, 4
  00092	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00095	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009c	59		 pop	 ecx
  0009d	5f		 pop	 edi
  0009e	5e		 pop	 esi
  0009f	5b		 pop	 ebx
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCofactor@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@XZ$0:
  00000	8d 4d dc	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
__unwindfunclet$?GetCofactor@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@XZ$1:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T3[ebp]
  0000b	83 e0 01	 and	 eax, 1
  0000e	0f 84 0c 00 00
	00		 je	 $LN5@GetCofacto
  00014	83 65 f0 fe	 and	 DWORD PTR $T3[ebp], -2	; fffffffeH
  00018	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
$LN5@GetCofacto:
  00020	c3		 ret	 0
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
  00025	cc		 int	 3
__ehhandler$?GetCofactor@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@XZ:
  00026	90		 npad	 1
  00027	90		 npad	 1
  00028	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002f	8b 4a d8	 mov	 ecx, DWORD PTR [edx-40]
  00032	33 c8		 xor	 ecx, eax
  00034	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00039	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?GetCofactor@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@XZ
  0003e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?GetCofactor@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@XZ ENDP ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::GetCofactor
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?ExponentiateElement@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_base$ = 12						; size = 4
_exponent$ = 16						; size = 4
?ExponentiateElement@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z PROC ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::ExponentiateElement, COMDAT
; _this$ = ecx

; 581  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ExponentiateElement@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T2[ebp], 0

; 582  : 		Element result;

  0002e	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  00031	8b ce		 mov	 ecx, esi
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@XZ ; CryptoPP::Integer::Integer

; 583  : 		SimultaneousExponentiate(&result, base, &exponent, 1);
; 584  : 		return result;

  0003f	8b 17		 mov	 edx, DWORD PTR [edi]
  00041	8b cf		 mov	 ecx, edi
  00043	6a 01		 push	 1
  00045	ff 75 10	 push	 DWORD PTR _exponent$[ebp]
  00048	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0004f	ff 75 0c	 push	 DWORD PTR _base$[ebp]
  00052	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR $T2[ebp], 1
  00059	56		 push	 esi
  0005a	ff 52 50	 call	 DWORD PTR [edx+80]
  0005d	8b c6		 mov	 eax, esi

; 585  : 	}

  0005f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00062	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00069	59		 pop	 ecx
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	8b e5		 mov	 esp, ebp
  0006e	5d		 pop	 ebp
  0006f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ExponentiateElement@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z$0:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00003	83 e0 01	 and	 eax, 1
  00006	0f 84 0c 00 00
	00		 je	 $LN4@Exponentia
  0000c	83 65 f0 fe	 and	 DWORD PTR $T2[ebp], -2	; fffffffeH
  00010	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
$LN4@Exponentia:
  00018	c3		 ret	 0
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
__ehhandler$?ExponentiateElement@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z:
  0001e	90		 npad	 1
  0001f	90		 npad	 1
  00020	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00024	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00027	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ExponentiateElement@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ExponentiateElement@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@0@Z ENDP ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::ExponentiateElement
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?ExponentiateBase@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_exponent$ = 12						; size = 4
?ExponentiateBase@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@@Z PROC ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::ExponentiateBase, COMDAT
; _this$ = ecx

; 577  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	57		 push	 edi

; 578  : 		return GetBasePrecomputation().Exponentiate(GetGroupPrecomputation(), exponent);

  00008	8b 06		 mov	 eax, DWORD PTR [esi]
  0000a	ff 50 18	 call	 DWORD PTR [eax+24]
  0000d	8b 16		 mov	 edx, DWORD PTR [esi]
  0000f	8b f8		 mov	 edi, eax
  00011	ff 75 0c	 push	 DWORD PTR _exponent$[ebp]
  00014	8b ce		 mov	 ecx, esi
  00016	8b 1f		 mov	 ebx, DWORD PTR [edi]
  00018	ff 52 14	 call	 DWORD PTR [edx+20]
  0001b	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	8b cf		 mov	 ecx, edi
  00020	50		 push	 eax
  00021	56		 push	 esi
  00022	ff 53 18	 call	 DWORD PTR [ebx+24]
  00025	5f		 pop	 edi
  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx

; 579  : 	}

  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?ExponentiateBase@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@@Z ENDP ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::ExponentiateBase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?SetSubgroupGenerator@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UAEXABVInteger@2@@Z
_TEXT	SEGMENT
_base$ = 8						; size = 4
?SetSubgroupGenerator@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UAEXABVInteger@2@@Z PROC ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::SetSubgroupGenerator, COMDAT
; _this$ = ecx

; 575  : 	virtual void SetSubgroupGenerator(const Element &base) {AccessBasePrecomputation().SetBase(GetGroupPrecomputation(), base);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b d9		 mov	 ebx, ecx
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 03		 mov	 eax, DWORD PTR [ebx]
  0000a	ff 50 1c	 call	 DWORD PTR [eax+28]
  0000d	8b 13		 mov	 edx, DWORD PTR [ebx]
  0000f	8b f0		 mov	 esi, eax
  00011	ff 75 08	 push	 DWORD PTR _base$[ebp]
  00014	8b cb		 mov	 ecx, ebx
  00016	8b 3e		 mov	 edi, DWORD PTR [esi]
  00018	ff 52 14	 call	 DWORD PTR [edx+20]
  0001b	50		 push	 eax
  0001c	8b ce		 mov	 ecx, esi
  0001e	ff 57 04	 call	 DWORD PTR [edi+4]
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?SetSubgroupGenerator@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UAEXABVInteger@2@@Z ENDP ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::SetSubgroupGenerator
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?GetSubgroupGenerator@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@2@XZ
_TEXT	SEGMENT
?GetSubgroupGenerator@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@2@XZ PROC ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::GetSubgroupGenerator, COMDAT
; _this$ = ecx

; 574  : 	virtual const Element & GetSubgroupGenerator() const {return GetBasePrecomputation().GetBase(GetGroupPrecomputation());}

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b 03		 mov	 eax, DWORD PTR [ebx]
  00007	ff 50 18	 call	 DWORD PTR [eax+24]
  0000a	8b 13		 mov	 edx, DWORD PTR [ebx]
  0000c	8b f0		 mov	 esi, eax
  0000e	8b cb		 mov	 ecx, ebx
  00010	8b 3e		 mov	 edi, DWORD PTR [esi]
  00012	ff 52 14	 call	 DWORD PTR [edx+20]
  00015	50		 push	 eax
  00016	8b ce		 mov	 ecx, esi
  00018	ff 57 08	 call	 DWORD PTR [edi+8]
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	c3		 ret	 0
?GetSubgroupGenerator@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@2@XZ ENDP ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::GetSubgroupGenerator
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?SavePrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z
_TEXT	SEGMENT
_storedPrecomputation$ = 8				; size = 4
?SavePrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z PROC ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::SavePrecomputation, COMDAT
; _this$ = ecx

; 569  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 570  : 		GetBasePrecomputation().Save(GetGroupPrecomputation(), storedPrecomputation);

  00003	8b 41 f0	 mov	 eax, DWORD PTR [ecx-16]
  00006	53		 push	 ebx
  00007	8d 59 f0	 lea	 ebx, DWORD PTR [ecx-16]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b cb		 mov	 ecx, ebx
  0000e	ff 50 18	 call	 DWORD PTR [eax+24]
  00011	8b 13		 mov	 edx, DWORD PTR [ebx]
  00013	8b f0		 mov	 esi, eax
  00015	ff 75 08	 push	 DWORD PTR _storedPrecomputation$[ebp]
  00018	8b cb		 mov	 ecx, ebx
  0001a	8b 3e		 mov	 edi, DWORD PTR [esi]
  0001c	ff 52 14	 call	 DWORD PTR [edx+20]
  0001f	50		 push	 eax
  00020	8b ce		 mov	 ecx, esi
  00022	ff 57 14	 call	 DWORD PTR [edi+20]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx

; 571  : 	}

  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?SavePrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z ENDP ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::SavePrecomputation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?LoadPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UAEXAAVBufferedTransformation@2@@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_storedPrecomputation$ = 8				; size = 4
?LoadPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UAEXAAVBufferedTransformation@2@@Z PROC ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::LoadPrecomputation, COMDAT
; _this$ = ecx

; 563  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b c1		 mov	 eax, ecx
  00006	53		 push	 ebx
  00007	89 45 fc	 mov	 DWORD PTR _this$1$[ebp], eax
  0000a	56		 push	 esi

; 564  : 		AccessBasePrecomputation().Load(GetGroupPrecomputation(), storedPrecomputation);

  0000b	8d 58 f0	 lea	 ebx, DWORD PTR [eax-16]
  0000e	8b 03		 mov	 eax, DWORD PTR [ebx]
  00010	8b cb		 mov	 ecx, ebx
  00012	57		 push	 edi
  00013	ff 50 1c	 call	 DWORD PTR [eax+28]
  00016	8b 13		 mov	 edx, DWORD PTR [ebx]
  00018	8b f0		 mov	 esi, eax
  0001a	ff 75 08	 push	 DWORD PTR _storedPrecomputation$[ebp]
  0001d	8b cb		 mov	 ecx, ebx
  0001f	8b 3e		 mov	 edi, DWORD PTR [esi]
  00021	ff 52 14	 call	 DWORD PTR [edx+20]
  00024	50		 push	 eax
  00025	8b ce		 mov	 ecx, esi
  00027	ff 57 10	 call	 DWORD PTR [edi+16]

; 565  : 		m_validationLevel = 0;

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$1$[ebp]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	c7 40 f8 00 00
	00 00		 mov	 DWORD PTR [eax-8], 0

; 566  : 	}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
?LoadPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UAEXAAVBufferedTransformation@2@@Z ENDP ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::LoadPrecomputation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?Precompute@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UAEXI@Z
_TEXT	SEGMENT
_precomputationStorage$ = 8				; size = 4
?Precompute@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UAEXI@Z PROC ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::Precompute, COMDAT
; _this$ = ecx

; 558  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 559  : 		AccessBasePrecomputation().Precompute(GetGroupPrecomputation(), GetSubgroupOrder().BitCount(), precomputationStorage);

  00003	8b 41 f0	 mov	 eax, DWORD PTR [ecx-16]
  00006	53		 push	 ebx
  00007	8d 59 f0	 lea	 ebx, DWORD PTR [ecx-16]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b cb		 mov	 ecx, ebx
  0000e	ff 50 1c	 call	 DWORD PTR [eax+28]
  00011	8b 13		 mov	 edx, DWORD PTR [ebx]
  00013	8b f0		 mov	 esi, eax
  00015	ff 75 08	 push	 DWORD PTR _precomputationStorage$[ebp]
  00018	8b cb		 mov	 ecx, ebx
  0001a	8b 3e		 mov	 edi, DWORD PTR [esi]
  0001c	ff 52 20	 call	 DWORD PTR [edx+32]
  0001f	8b c8		 mov	 ecx, eax
  00021	e8 00 00 00 00	 call	 ?BitCount@Integer@CryptoPP@@QBEIXZ ; CryptoPP::Integer::BitCount
  00026	50		 push	 eax
  00027	8b 03		 mov	 eax, DWORD PTR [ebx]
  00029	8b cb		 mov	 ecx, ebx
  0002b	ff 50 14	 call	 DWORD PTR [eax+20]
  0002e	50		 push	 eax
  0002f	8b ce		 mov	 ecx, esi
  00031	ff 57 0c	 call	 DWORD PTR [edi+12]
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx

; 560  : 	}

  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?Precompute@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UAEXI@Z ENDP ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::Precompute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?SupportsPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?SupportsPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::SupportsPrecomputation, COMDAT
; _this$ = ecx

; 555  : 	bool SupportsPrecomputation() const {return true;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?SupportsPrecomputation@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::SupportsPrecomputation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ?Validate@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE_NAAVRandomNumberGenerator@2@I@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
_rng$ = 8						; size = 4
_level$ = 12						; size = 4
?Validate@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE_NAAVRandomNumberGenerator@2@I@Z PROC ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::Validate, COMDAT
; _this$ = ecx

; 532  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 533  : 		if (!GetBasePrecomputation().IsInitialized())

  00007	8b 46 f0	 mov	 eax, DWORD PTR [esi-16]
  0000a	57		 push	 edi
  0000b	8d 7e f0	 lea	 edi, DWORD PTR [esi-16]
  0000e	89 75 fc	 mov	 DWORD PTR _this$1$[ebp], esi
  00011	8b cf		 mov	 ecx, edi
  00013	ff 50 18	 call	 DWORD PTR [eax+24]
  00016	8b c8		 mov	 ecx, eax
  00018	8b 10		 mov	 edx, DWORD PTR [eax]
  0001a	8b 02		 mov	 eax, DWORD PTR [edx]
  0001c	ff d0		 call	 eax
  0001e	84 c0		 test	 al, al
  00020	75 08		 jne	 SHORT $LN2@Validate

; 543  : 
; 544  : 		return pass;
; 545  : 	}

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
$LN2@Validate:
  0002a	53		 push	 ebx

; 534  : 			return false;
; 535  : 
; 536  : 		if (m_validationLevel > level)

  0002b	8b 5d 0c	 mov	 ebx, DWORD PTR _level$[ebp]
  0002e	39 5e f8	 cmp	 DWORD PTR [esi-8], ebx
  00031	76 0b		 jbe	 SHORT $LN3@Validate

; 537  : 			return true;

  00033	5b		 pop	 ebx
  00034	5f		 pop	 edi
  00035	b0 01		 mov	 al, 1

; 543  : 
; 544  : 		return pass;
; 545  : 	}

  00037	5e		 pop	 esi
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN3@Validate:

; 538  : 
; 539  : 		bool pass = ValidateGroup(rng, level);

  0003e	8b 07		 mov	 eax, DWORD PTR [edi]
  00040	8b cf		 mov	 ecx, edi
  00042	53		 push	 ebx
  00043	ff 75 08	 push	 DWORD PTR _rng$[ebp]
  00046	8b 40 40	 mov	 eax, DWORD PTR [eax+64]
  00049	ff d0		 call	 eax

; 540  : 		pass = pass && ValidateElement(level, GetSubgroupGenerator(), &GetBasePrecomputation());

  0004b	84 c0		 test	 al, al
  0004d	74 20		 je	 SHORT $LN5@Validate
  0004f	8b 37		 mov	 esi, DWORD PTR [edi]
  00051	8b cf		 mov	 ecx, edi
  00053	ff 56 18	 call	 DWORD PTR [esi+24]
  00056	50		 push	 eax
  00057	8b 07		 mov	 eax, DWORD PTR [edi]
  00059	8b cf		 mov	 ecx, edi
  0005b	ff 50 04	 call	 DWORD PTR [eax+4]
  0005e	50		 push	 eax
  0005f	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00062	8b cf		 mov	 ecx, edi
  00064	53		 push	 ebx
  00065	ff d0		 call	 eax
  00067	84 c0		 test	 al, al
  00069	74 04		 je	 SHORT $LN5@Validate
  0006b	b0 01		 mov	 al, 1
  0006d	eb 02		 jmp	 SHORT $LN6@Validate
$LN5@Validate:
  0006f	32 c0		 xor	 al, al
$LN6@Validate:

; 541  : 
; 542  : 		m_validationLevel = pass ? level+1 : 0;

  00071	33 d2		 xor	 edx, edx
  00073	8d 4b 01	 lea	 ecx, DWORD PTR [ebx+1]
  00076	84 c0		 test	 al, al
  00078	5b		 pop	 ebx
  00079	0f 44 ca	 cmove	 ecx, edx
  0007c	8b 55 fc	 mov	 edx, DWORD PTR _this$1$[ebp]
  0007f	5f		 pop	 edi

; 543  : 
; 544  : 		return pass;
; 545  : 	}

  00080	5e		 pop	 esi
  00081	89 4a f8	 mov	 DWORD PTR [edx-8], ecx
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 08 00	 ret	 8
?Validate@?$DL_GroupParameters@VInteger@CryptoPP@@@CryptoPP@@UBE_NAAVRandomNumberGenerator@2@I@Z ENDP ; CryptoPP::DL_GroupParameters<CryptoPP::Integer>::Validate
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1ModExpPrecomputation@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
??1ModExpPrecomputation@CryptoPP@@QAE@XZ PROC		; CryptoPP::ModExpPrecomputation::~ModExpPrecomputation, COMDAT
; _this$ = ecx
  00000	83 c1 04	 add	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??1?$member_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::MontgomeryRepresentation>::~member_ptr<CryptoPP::MontgomeryRepresentation>
??1ModExpPrecomputation@CryptoPP@@QAE@XZ ENDP		; CryptoPP::ModExpPrecomputation::~ModExpPrecomputation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h
;	COMDAT ??4?$value_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_rhs$ = 8						; size = 4
??4?$value_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAEAAV01@ABV01@@Z PROC ; CryptoPP::value_ptr<CryptoPP::MontgomeryRepresentation>::operator=, COMDAT
; _this$ = ecx

; 70   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??4?$value_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAEAAV01@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx

; 71   : 	T *old_p = this->m_p;
; 72   : 	this->m_p = rhs.m_p ? new T(*rhs.m_p) : NULL;

  00027	8b 5d 08	 mov	 ebx, DWORD PTR _rhs$[ebp]
  0002a	8b 3e		 mov	 edi, DWORD PTR [esi]
  0002c	83 3b 00	 cmp	 DWORD PTR [ebx], 0
  0002f	74 23		 je	 SHORT $LN5@operator
  00031	6a 68		 push	 104			; 00000068H
  00033	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00038	83 c4 04	 add	 esp, 4
  0003b	89 45 08	 mov	 DWORD PTR $T2[ebp], eax
  0003e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00045	85 c0		 test	 eax, eax
  00047	74 0b		 je	 SHORT $LN5@operator
  00049	ff 33		 push	 DWORD PTR [ebx]
  0004b	8b c8		 mov	 ecx, eax
  0004d	e8 00 00 00 00	 call	 ??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z
  00052	eb 02		 jmp	 SHORT $LN6@operator
$LN5@operator:
  00054	33 c0		 xor	 eax, eax
$LN6@operator:
  00056	89 06		 mov	 DWORD PTR [esi], eax

; 73   : 	delete old_p;

  00058	85 ff		 test	 edi, edi
  0005a	74 08		 je	 SHORT $LN10@operator
  0005c	8b 07		 mov	 eax, DWORD PTR [edi]
  0005e	8b cf		 mov	 ecx, edi
  00060	6a 01		 push	 1
  00062	ff 10		 call	 DWORD PTR [eax]
$LN10@operator:

; 74   : 	return *this;
; 75   : }

  00064	8b c6		 mov	 eax, esi
  00066	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00069	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00070	59		 pop	 ecx
  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	5b		 pop	 ebx
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4?$value_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAEAAV01@ABV01@@Z$0:
  00000	6a 68		 push	 104			; 00000068H
  00002	8b 45 08	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$??4?$value_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAEAAV01@ABV01@@Z:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??4?$value_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAEAAV01@ABV01@@Z
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??4?$value_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAEAAV01@ABV01@@Z ENDP ; CryptoPP::value_ptr<CryptoPP::MontgomeryRepresentation>::operator=
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h
;	COMDAT ?reset@?$member_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAEXPAVMontgomeryRepresentation@2@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?reset@?$member_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAEXPAVMontgomeryRepresentation@2@@Z PROC ; CryptoPP::member_ptr<CryptoPP::MontgomeryRepresentation>::reset, COMDAT
; _this$ = ecx

; 50   : template <class T> void member_ptr<T>::reset(T *p) {delete m_p; m_p = p;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	85 c9		 test	 ecx, ecx
  0000a	74 06		 je	 SHORT $LN5@reset
  0000c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000e	6a 01		 push	 1
  00010	ff 10		 call	 DWORD PTR [eax]
$LN5@reset:
  00012	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00015	89 06		 mov	 DWORD PTR [esi], eax
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?reset@?$member_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAEXPAVMontgomeryRepresentation@2@@Z ENDP ; CryptoPP::member_ptr<CryptoPP::MontgomeryRepresentation>::reset
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h
;	COMDAT ??1?$member_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
??1?$member_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAE@XZ PROC ; CryptoPP::member_ptr<CryptoPP::MontgomeryRepresentation>::~member_ptr<CryptoPP::MontgomeryRepresentation>, COMDAT
; _this$ = ecx

; 49   : template <class T> member_ptr<T>::~member_ptr() {delete m_p;}

  00000	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00002	85 c9		 test	 ecx, ecx
  00004	74 06		 je	 SHORT $LN3@member_ptr
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	6a 01		 push	 1
  0000a	ff 10		 call	 DWORD PTR [eax]
$LN3@member_ptr:
  0000c	c3		 ret	 0
??1?$member_ptr@VMontgomeryRepresentation@CryptoPP@@@CryptoPP@@QAE@XZ ENDP ; CryptoPP::member_ptr<CryptoPP::MontgomeryRepresentation>::~member_ptr<CryptoPP::MontgomeryRepresentation>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modexppc.h
;	COMDAT ?DEREncodeElement@ModExpPrecomputation@CryptoPP@@UBEXAAVBufferedTransformation@2@ABVInteger@2@@Z
_TEXT	SEGMENT
_bt$ = 8						; size = 4
_v$ = 12						; size = 4
?DEREncodeElement@ModExpPrecomputation@CryptoPP@@UBEXAAVBufferedTransformation@2@ABVInteger@2@@Z PROC ; CryptoPP::ModExpPrecomputation::DEREncodeElement, COMDAT
; _this$ = ecx

; 22   : 	void DEREncodeElement(BufferedTransformation &bt, const Element &v) const {v.DEREncode(bt);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _bt$[ebp]
  00009	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000b	ff 50 08	 call	 DWORD PTR [eax+8]
  0000e	5d		 pop	 ebp
  0000f	c2 08 00	 ret	 8
?DEREncodeElement@ModExpPrecomputation@CryptoPP@@UBEXAAVBufferedTransformation@2@ABVInteger@2@@Z ENDP ; CryptoPP::ModExpPrecomputation::DEREncodeElement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modexppc.h
;	COMDAT ?BERDecodeElement@ModExpPrecomputation@CryptoPP@@UBE?AVInteger@2@AAVBufferedTransformation@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_bt$ = 12						; size = 4
?BERDecodeElement@ModExpPrecomputation@CryptoPP@@UBE?AVInteger@2@AAVBufferedTransformation@2@@Z PROC ; CryptoPP::ModExpPrecomputation::BERDecodeElement, COMDAT
; _this$ = ecx

; 21   : 	Element BERDecodeElement(BufferedTransformation &bt) const {return Integer(bt);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 0c	 push	 DWORD PTR _bt$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00009	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@AAVBufferedTransformation@1@@Z ; CryptoPP::Integer::Integer
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?BERDecodeElement@ModExpPrecomputation@CryptoPP@@UBE?AVInteger@2@AAVBufferedTransformation@2@@Z ENDP ; CryptoPP::ModExpPrecomputation::BERDecodeElement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modexppc.h
;	COMDAT ?GetGroup@ModExpPrecomputation@CryptoPP@@UBEABV?$AbstractGroup@VInteger@CryptoPP@@@2@XZ
_TEXT	SEGMENT
?GetGroup@ModExpPrecomputation@CryptoPP@@UBEABV?$AbstractGroup@VInteger@CryptoPP@@@2@XZ PROC ; CryptoPP::ModExpPrecomputation::GetGroup, COMDAT
; _this$ = ecx

; 20   : 	const AbstractGroup<Element> & GetGroup() const {return m_mr->MultiplicativeGroup();}

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	ff 60 58	 jmp	 DWORD PTR [eax+88]
?GetGroup@ModExpPrecomputation@CryptoPP@@UBEABV?$AbstractGroup@VInteger@CryptoPP@@@2@XZ ENDP ; CryptoPP::ModExpPrecomputation::GetGroup
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modexppc.h
;	COMDAT ?ConvertOut@ModExpPrecomputation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
?ConvertOut@ModExpPrecomputation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z PROC ; CryptoPP::ModExpPrecomputation::ConvertOut, COMDAT
; _this$ = ecx

; 19   : 	virtual Element ConvertOut(const Element &v) const {return m_mr->ConvertOut(v);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	ff 75 0c	 push	 DWORD PTR _v$[ebp]
  00009	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  0000c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000e	ff 50 68	 call	 DWORD PTR [eax+104]
  00011	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
?ConvertOut@ModExpPrecomputation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z ENDP ; CryptoPP::ModExpPrecomputation::ConvertOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modexppc.h
;	COMDAT ?ConvertIn@ModExpPrecomputation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
?ConvertIn@ModExpPrecomputation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z PROC ; CryptoPP::ModExpPrecomputation::ConvertIn, COMDAT
; _this$ = ecx

; 18   : 	Element ConvertIn(const Element &v) const {return m_mr->ConvertIn(v);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	ff 75 0c	 push	 DWORD PTR _v$[ebp]
  00009	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  0000c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000e	ff 50 64	 call	 DWORD PTR [eax+100]
  00011	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
?ConvertIn@ModExpPrecomputation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z ENDP ; CryptoPP::ModExpPrecomputation::ConvertIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modexppc.h
;	COMDAT ?NeedConversions@ModExpPrecomputation@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?NeedConversions@ModExpPrecomputation@CryptoPP@@UBE_NXZ PROC ; CryptoPP::ModExpPrecomputation::NeedConversions, COMDAT
; _this$ = ecx

; 17   : 	bool NeedConversions() const {return true;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?NeedConversions@ModExpPrecomputation@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::ModExpPrecomputation::NeedConversions
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\eprecomp.h
;	COMDAT ?ConvertOut@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
?ConvertOut@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@@Z PROC ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer>::ConvertOut, COMDAT
; _this$ = ecx

; 18   : 	virtual Element ConvertOut(const Element &v) const {return v;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 0c	 push	 DWORD PTR _v$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00009	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::Integer::Integer
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?ConvertOut@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@@Z ENDP ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer>::ConvertOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\eprecomp.h
;	COMDAT ?ConvertIn@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
?ConvertIn@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@@Z PROC ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer>::ConvertIn, COMDAT
; _this$ = ecx

; 17   : 	virtual Element ConvertIn(const Element &v) const {return v;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 0c	 push	 DWORD PTR _v$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00009	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::Integer::Integer
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?ConvertIn@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@@Z ENDP ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer>::ConvertIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\eprecomp.h
;	COMDAT ?NeedConversions@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?NeedConversions@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer>::NeedConversions, COMDAT
; _this$ = ecx

; 16   : 	virtual bool NeedConversions() const {return false;}

  00000	32 c0		 xor	 al, al
  00002	c3		 ret	 0
?NeedConversions@?$DL_GroupPrecomputation@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::DL_GroupPrecomputation<CryptoPP::Integer>::NeedConversions
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??1?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@QAE@XZ PROC ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::~DL_FixedBasePrecomputationImpl<CryptoPP::Integer>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b d9		 mov	 ebx, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00027	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
  0002a	8d 7b 30	 lea	 edi, DWORD PTR [ebx+48]
  0002d	85 c0		 test	 eax, eax
  0002f	74 46		 je	 SHORT $LN6@DL_FixedBa

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  00031	57		 push	 edi
  00032	ff 77 04	 push	 DWORD PTR [edi+4]
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@VInteger@CryptoPP@@@std@@@std@@YAXPAVInteger@CryptoPP@@QAV12@AAV?$allocator@VInteger@CryptoPP@@@0@@Z ; std::_Destroy_range<std::allocator<CryptoPP::Integer> >

; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  0003b	8b 37		 mov	 esi, DWORD PTR [edi]
  0003d	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00042	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00045	2b ce		 sub	 ecx, esi
  00047	f7 e9		 imul	 ecx
  00049	c1 fa 03	 sar	 edx, 3
  0004c	8b c2		 mov	 eax, edx
  0004e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00051	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00053	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00056	c1 e0 02	 shl	 eax, 2
  00059	50		 push	 eax
  0005a	56		 push	 esi
  0005b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00060	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00066	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1699 :             _Mylast  = pointer();

  00069	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 1700 :             _Myend   = pointer();

  00070	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
$LN6@DL_FixedBa:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00077	8b 53 24	 mov	 edx, DWORD PTR [ebx+36]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0007a	33 c0		 xor	 eax, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0007c	8b 73 28	 mov	 esi, DWORD PTR [ebx+40]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0007f	8b ca		 mov	 ecx, edx
  00081	8b fe		 mov	 edi, esi
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00083	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0008a	f3 ab		 rep stosd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  0008c	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  00093	56		 push	 esi
  00094	83 f8 10	 cmp	 eax, 16			; 00000010H
  00097	72 07		 jb	 SHORT $LN19@DL_FixedBa

; 109  : 			return AlignedDeallocate(p);

  00099	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  0009e	eb 05		 jmp	 SHORT $LN67@DL_FixedBa
$LN19@DL_FixedBa:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  000a0	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN67@DL_FixedBa:

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000a5	83 c4 04	 add	 esp, 4
  000a8	8b 53 0c	 mov	 edx, DWORD PTR [ebx+12]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  000ab	33 c0		 xor	 eax, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000ad	8b 73 10	 mov	 esi, DWORD PTR [ebx+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  000b0	8b ca		 mov	 ecx, edx
  000b2	8b fe		 mov	 edi, esi
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000b4	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  000bb	f3 ab		 rep stosd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  000bd	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  000c4	56		 push	 esi
  000c5	83 f8 10	 cmp	 eax, 16			; 00000010H
  000c8	72 07		 jb	 SHORT $LN46@DL_FixedBa

; 109  : 			return AlignedDeallocate(p);

  000ca	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  000cf	eb 05		 jmp	 SHORT $LN68@DL_FixedBa
$LN46@DL_FixedBa:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  000d1	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN68@DL_FixedBa:
  000d6	83 c4 04	 add	 esp, 4
  000d9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000dc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000e3	59		 pop	 ecx
  000e4	5f		 pop	 edi
  000e5	5e		 pop	 esi
  000e6	5b		 pop	 ebx
  000e7	8b e5		 mov	 esp, ebp
  000e9	5d		 pop	 ebp
  000ea	c3		 ret	 0
  000eb	cc		 int	 3
  000ec	cc		 int	 3
  000ed	cc		 int	 3
  000ee	cc		 int	 3
  000ef	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@QAE@XZ ENDP ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::~DL_FixedBasePrecomputationImpl<CryptoPP::Integer>
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Xlength@?$vector@VInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@VInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@CAXXZ PROC ; std::vector<CryptoPP::Integer,std::allocator<CryptoPP::Integer> >::_Xlength, COMDAT

; 1705 :         _Xlength_error("vector too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlength:
  0000a	cc		 int	 3
?_Xlength@?$vector@VInteger@CryptoPP@@V?$allocator@VInteger@CryptoPP@@@std@@@std@@CAXXZ ENDP ; std::vector<CryptoPP::Integer,std::allocator<CryptoPP::Integer> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\eprecomp.h
;	COMDAT ?GetBase@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@2@ABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@@Z
_TEXT	SEGMENT
_group$ = 8						; size = 4
?GetBase@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@2@ABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@@Z PROC ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::GetBase, COMDAT
; _this$ = ecx

; 53   : 		{return group.NeedConversions() ? m_base : m_bases[0];}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8b 4d 08	 mov	 ecx, DWORD PTR _group$[ebp]
  00009	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000b	8b 00		 mov	 eax, DWORD PTR [eax]
  0000d	ff d0		 call	 eax
  0000f	84 c0		 test	 al, al
  00011	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00014	75 03		 jne	 SHORT $LN6@GetBase
  00016	8b 46 30	 mov	 eax, DWORD PTR [esi+48]
$LN6@GetBase:
  00019	5e		 pop	 esi
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
?GetBase@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@2@ABV?$DL_GroupPrecomputation@VInteger@CryptoPP@@@2@@Z ENDP ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::GetBase
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\eprecomp.h
;	COMDAT ?IsInitialized@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsInitialized@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::IsInitialized, COMDAT
; _this$ = ecx

; 50   : 		{return !m_bases.empty();}

  00000	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  00003	3b 41 34	 cmp	 eax, DWORD PTR [ecx+52]
  00006	0f 95 c0	 setne	 al
  00009	c3		 ret	 0
?IsInitialized@?$DL_FixedBasePrecomputationImpl@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::DL_FixedBasePrecomputationImpl<CryptoPP::Integer>::IsInitialized
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_GDL_BadElement@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GDL_BadElement@CryptoPP@@UAEPAXI@Z PROC		; CryptoPP::DL_BadElement::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 132  : 	virtual ~Exception() throw() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0000c	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0000f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 0d		 jb	 SHORT $LN16@scalar

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	50		 push	 eax
  00016	ff 76 10	 push	 DWORD PTR [esi+16]
  00019	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001e	83 c4 08	 add	 esp, 8
$LN16@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00021	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00024	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00032	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00036	50		 push	 eax
  00037	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0003d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00042	83 c4 04	 add	 esp, 4
  00045	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00049	74 0b		 je	 SHORT $LN24@scalar
  0004b	6a 28		 push	 40			; 00000028H
  0004d	56		 push	 esi
  0004e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00053	83 c4 08	 add	 esp, 8
$LN24@scalar:
  00056	8b c6		 mov	 eax, esi
  00058	5e		 pop	 esi
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
??_GDL_BadElement@CryptoPP@@UAEPAXI@Z ENDP		; CryptoPP::DL_BadElement::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0DL_BadElement@CryptoPP@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0DL_BadElement@CryptoPP@@QAE@ABV01@@Z PROC		; CryptoPP::DL_BadElement::DL_BadElement, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0DL_BadElement@CryptoPP@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0002a	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0002d	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00030	0f 57 c0	 xorps	 xmm0, xmm0

; 72   :     {

  00033	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7exception@std@@6B@

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  00039	50		 push	 eax
  0003a	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  0003e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ___std_exception_copy
  00047	83 c4 08	 add	 esp, 8
  0004a	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7Exception@CryptoPP@@6B@
  00050	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00053	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00056	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  00059	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0005c	50		 push	 eax
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00064	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00069	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7DL_BadElement@CryptoPP@@6B@
  0006f	8b c7		 mov	 eax, edi
  00071	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007b	59		 pop	 ecx
  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DL_BadElement@CryptoPP@@QAE@ABV01@@Z$2:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0DL_BadElement@CryptoPP@@QAE@ABV01@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0DL_BadElement@CryptoPP@@QAE@ABV01@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0DL_BadElement@CryptoPP@@QAE@ABV01@@Z ENDP		; CryptoPP::DL_BadElement::DL_BadElement
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1DL_BadElement@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
??1DL_BadElement@CryptoPP@@UAE@XZ PROC			; CryptoPP::DL_BadElement::~DL_BadElement, COMDAT
; _this$ = ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 132  : 	virtual ~Exception() throw() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00009	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0000c	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 0d		 jb	 SHORT $LN12@DL_BadElem

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00011	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00012	50		 push	 eax
  00013	ff 76 10	 push	 DWORD PTR [esi+16]
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8
$LN12@DL_BadElem:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  0001e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00021	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00028	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0002f	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00033	50		 push	 eax
  00034	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0003a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0003f	83 c4 04	 add	 esp, 4
  00042	5e		 pop	 esi
  00043	c3		 ret	 0
??1DL_BadElement@CryptoPP@@UAE@XZ ENDP			; CryptoPP::DL_BadElement::~DL_BadElement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h
;	COMDAT ??0DL_BadElement@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
_this$GSCopy$ = -48					; size = 4
__New_ptr$2 = -44					; size = 4
_this$ = -44						; size = 4
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
??0DL_BadElement@CryptoPP@@QAE@XZ PROC			; CryptoPP::DL_BadElement::DL_BadElement, COMDAT
; _this$ = ecx

; 516  : 	DL_BadElement() : InvalidDataFormat("CryptoPP: invalid group element") {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0DL_BadElement@CryptoPP@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 24	 sub	 esp, 36			; 00000024H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	8b f1		 mov	 esi, ecx
  0002b	89 75 d4	 mov	 DWORD PTR _this$[ebp], esi
  0002e	89 75 d0	 mov	 DWORD PTR _this$GSCopy$[ebp], esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00031	6a 20		 push	 32			; 00000020H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00033	c6 45 d8 00	 mov	 BYTE PTR $T3[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00037	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0003c	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CA@BKIJBIHG@CryptoPP?3?5invalid?5group?5element@

; 4312 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00043	8b c8		 mov	 ecx, eax

; 4313 :         _Mypair._Myval2._Orphan_all();
; 4314 :         _Mypair._Myval2._Mysize = _New_size;

  00045	c7 45 e8 1f 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 31 ; 0000001fH
  0004c	89 4d d4	 mov	 DWORD PTR __New_ptr$2[ebp], ecx

; 4315 :         _Mypair._Myval2._Myres  = _New_capacity;

  0004f	c7 45 ec 1f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 31 ; 0000001fH

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00056	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  00059	f3 0f 7e 05 10
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0CA@BKIJBIHG@CryptoPP?3?5invalid?5group?5element@+16
  00061	66 0f d6 41 10	 movq	 QWORD PTR [ecx+16], xmm0
  00066	a1 18 00 00 00	 mov	 eax, DWORD PTR ??_C@_0CA@BKIJBIHG@CryptoPP?3?5invalid?5group?5element@+24
  0006b	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  0006e	66 a1 1c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0CA@BKIJBIHG@CryptoPP?3?5invalid?5group?5element@+28
  00074	66 89 41 1c	 mov	 WORD PTR [ecx+28], ax
  00078	a0 1e 00 00 00	 mov	 al, BYTE PTR ??_C@_0CA@BKIJBIHG@CryptoPP?3?5invalid?5group?5element@+30
  0007d	88 41 1e	 mov	 BYTE PTR [ecx+30], al

; 4321 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00080	8d 45 d4	 lea	 eax, DWORD PTR __New_ptr$2[ebp]
  00083	50		 push	 eax
  00084	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]

; 3056 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00087	c6 41 1f 00	 mov	 BYTE PTR [ecx+31], 0

; 4321 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  0008b	50		 push	 eax
  0008c	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  00091	83 c4 0c	 add	 esp, 12			; 0000000cH
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h

; 516  : 	DL_BadElement() : InvalidDataFormat("CryptoPP: invalid group element") {}

  00094	0f 57 c0	 xorps	 xmm0, xmm0
  00097	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 53   :         : _Data()

  0009e	66 0f d6 46 04	 movq	 QWORD PTR [esi+4], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 131  : 	explicit Exception(ErrorType errorType, const std::string &s) : m_errorType(errorType), m_what(s) {}

  000a3	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  000a6	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000aa	50		 push	 eax
  000ab	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  000ae	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
  000b4	c7 46 0c 04 00
	00 00		 mov	 DWORD PTR [esi+12], 4
  000bb	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  000c0	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 155  : 	explicit InvalidDataFormat(const std::string &s) : Exception(INVALID_DATA_FORMAT, s) {}

  000c3	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7InvalidDataFormat@CryptoPP@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  000c9	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000cc	72 0d		 jb	 SHORT $LN73@DL_BadElem

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000ce	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000cf	51		 push	 ecx
  000d0	ff 75 d8	 push	 DWORD PTR $T3[ebp]
  000d3	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000d8	83 c4 08	 add	 esp, 8
$LN73@DL_BadElem:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\pubkey.h

; 516  : 	DL_BadElement() : InvalidDataFormat("CryptoPP: invalid group element") {}

  000db	8b c6		 mov	 eax, esi
  000dd	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7DL_BadElement@CryptoPP@@6B@
  000e3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ed	59		 pop	 ecx
  000ee	5e		 pop	 esi
  000ef	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f2	33 cd		 xor	 ecx, ebp
  000f4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DL_BadElement@CryptoPP@@QAE@XZ$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0DL_BadElement@CryptoPP@@QAE@XZ$5:
  00008	8b 4d d0	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$??0DL_BadElement@CryptoPP@@QAE@XZ:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0DL_BadElement@CryptoPP@@QAE@XZ
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0DL_BadElement@CryptoPP@@QAE@XZ ENDP			; CryptoPP::DL_BadElement::DL_BadElement
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??_GMontgomeryRepresentation@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_GMontgomeryRepresentation@CryptoPP@@UAEPAXI@Z PROC	; CryptoPP::MontgomeryRepresentation::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_GMontgomeryRepresentation@CryptoPP@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00027	8b 56 60	 mov	 edx, DWORD PTR [esi+96]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0002a	33 c0		 xor	 eax, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0002c	8b 5e 64	 mov	 ebx, DWORD PTR [esi+100]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0002f	8b ca		 mov	 ecx, edx
  00031	8b fb		 mov	 edi, ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0003a	f3 ab		 rep stosd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  0003c	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  00043	53		 push	 ebx
  00044	83 f8 10	 cmp	 eax, 16			; 00000010H
  00047	72 07		 jb	 SHORT $LN11@scalar

; 109  : 			return AlignedDeallocate(p);

  00049	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  0004e	eb 05		 jmp	 SHORT $LN60@scalar
$LN11@scalar:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  00050	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN60@scalar:

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00055	83 c4 04	 add	 esp, 4
  00058	8b 56 50	 mov	 edx, DWORD PTR [esi+80]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0005b	33 c0		 xor	 eax, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0005d	8b 5e 54	 mov	 ebx, DWORD PTR [esi+84]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00060	8b ca		 mov	 ecx, edx
  00062	8b fb		 mov	 edi, ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00064	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0006b	f3 ab		 rep stosd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  0006d	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  00074	53		 push	 ebx
  00075	83 f8 10	 cmp	 eax, 16			; 00000010H
  00078	72 07		 jb	 SHORT $LN38@scalar

; 109  : 			return AlignedDeallocate(p);

  0007a	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  0007f	eb 05		 jmp	 SHORT $LN61@scalar
$LN38@scalar:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  00081	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN61@scalar:
  00086	83 c4 04	 add	 esp, 4
  00089	8b ce		 mov	 ecx, esi
  0008b	e8 00 00 00 00	 call	 ??1ModularArithmetic@CryptoPP@@UAE@XZ
  00090	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00094	74 0b		 je	 SHORT $LN58@scalar
  00096	6a 68		 push	 104			; 00000068H
  00098	56		 push	 esi
  00099	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0009e	83 c4 08	 add	 esp, 8
$LN58@scalar:
  000a1	8b c6		 mov	 eax, esi
  000a3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ad	59		 pop	 ecx
  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	5b		 pop	 ebx
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c2 04 00	 ret	 4
  000b7	cc		 int	 3
  000b8	cc		 int	 3
  000b9	cc		 int	 3
  000ba	cc		 int	 3
  000bb	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_GMontgomeryRepresentation@CryptoPP@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_GMontgomeryRepresentation@CryptoPP@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_GMontgomeryRepresentation@CryptoPP@@UAEPAXI@Z ENDP	; CryptoPP::MontgomeryRepresentation::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algebra.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
;	COMDAT ??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z PROC	; CryptoPP::MontgomeryRepresentation::MontgomeryRepresentation, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b f1		 mov	 esi, ecx
  00028	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 30   : 		: m_modulus(ma.m_modulus), m_result((word)0, m_modulus.reg.size()) {}

  0002b	8b 5d 08	 mov	 ebx, DWORD PTR ___that$[ebp]
  0002e	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00031	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@6B@
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algebra.h

; 49   : 	AbstractRing() {m_mg.m_pRing = this;}

  00038	89 76 08	 mov	 DWORD PTR [esi+8], esi
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 30   : 		: m_modulus(ma.m_modulus), m_result((word)0, m_modulus.reg.size()) {}

  0003b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ModularArithmetic@CryptoPP@@6B@
  00041	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::Integer::Integer
  0004a	ff 76 14	 push	 DWORD PTR [esi+20]
  0004d	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  00050	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00057	6a 00		 push	 0
  00059	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@AAE@II@Z ; CryptoPP::Integer::Integer
  0005e	8d 4e 34	 lea	 ecx, DWORD PTR [esi+52]
  00061	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00065	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@XZ ; CryptoPP::Integer::Integer
  0006a	8d 43 48	 lea	 eax, DWORD PTR [ebx+72]
  0006d	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00074	50		 push	 eax
  00075	8d 4e 48	 lea	 ecx, DWORD PTR [esi+72]
  00078	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7MontgomeryRepresentation@CryptoPP@@6B@
  0007e	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::Integer::Integer
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00083	8b 7b 60	 mov	 edi, DWORD PTR [ebx+96]

; 91   : 		CheckSize(n);

  00086	57		 push	 edi
  00087	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  0008b	89 7e 60	 mov	 DWORD PTR [esi+96], edi

; 91   : 		CheckSize(n);

  0008e	e8 00 00 00 00	 call	 ?CheckSize@?$AllocatorBase@I@CryptoPP@@KAXI@Z ; CryptoPP::AllocatorBase<unsigned int>::CheckSize
  00093	83 c4 04	 add	 esp, 4

; 92   : 		if (n == 0)

  00096	85 ff		 test	 edi, edi
  00098	75 04		 jne	 SHORT $LN19@Montgomery

; 93   : 			return NULL;

  0009a	33 c0		 xor	 eax, eax
  0009c	eb 1c		 jmp	 SHORT $LN18@Montgomery
$LN19@Montgomery:

; 94   : 
; 95   : #if CRYPTOPP_BOOL_ALIGN16_ENABLED
; 96   : 		if (T_Align16 && n*sizeof(T) >= 16)

  0009e	8d 04 bd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*4]
  000a5	50		 push	 eax
  000a6	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a9	72 07		 jb	 SHORT $LN20@Montgomery

; 97   : 			return (pointer)AlignedAllocate(n*sizeof(T));

  000ab	e8 00 00 00 00	 call	 ?AlignedAllocate@CryptoPP@@YAPAXI@Z ; CryptoPP::AlignedAllocate
  000b0	eb 05		 jmp	 SHORT $LN32@Montgomery
$LN20@Montgomery:

; 98   : #endif
; 99   : 
; 100  : 		return (pointer)UnalignedAllocate(n*sizeof(T));

  000b2	e8 00 00 00 00	 call	 ?UnalignedAllocate@CryptoPP@@YAPAXI@Z ; CryptoPP::UnalignedAllocate
$LN32@Montgomery:

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  000b7	83 c4 04	 add	 esp, 4
$LN18@Montgomery:
  000ba	8b 4e 60	 mov	 ecx, DWORD PTR [esi+96]
  000bd	c1 e1 02	 shl	 ecx, 2
  000c0	89 46 64	 mov	 DWORD PTR [esi+100], eax
  000c3	8b 53 64	 mov	 edx, DWORD PTR [ebx+100]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 42   :         if (_SourceSize == 0)

  000c6	85 c9		 test	 ecx, ecx
  000c8	74 30		 je	 SHORT $LN30@Montgomery

; 43   :         {
; 44   :             return 0;
; 45   :         }
; 46   : 
; 47   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  000ca	85 c0		 test	 eax, eax
  000cc	74 1c		 je	 SHORT $LN33@Montgomery

; 48   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  000ce	51		 push	 ecx
  000cf	85 d2		 test	 edx, edx
  000d1	74 0c		 je	 SHORT $LN26@Montgomery

; 53   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);
; 54   : 
; 55   :             // Unreachable, but required to suppress /analyze warnings:
; 56   :             return EINVAL;
; 57   :         }
; 58   : #pragma warning(suppress:4996) // Deprecation
; 59   :         memcpy(_Destination, _Source, _SourceSize);

  000d3	52		 push	 edx
  000d4	50		 push	 eax
  000d5	e8 00 00 00 00	 call	 _memcpy
  000da	83 c4 0c	 add	 esp, 12			; 0000000cH
  000dd	eb 1b		 jmp	 SHORT $LN30@Montgomery
$LN26@Montgomery:

; 49   :         {
; 50   :             memset(_Destination, 0, _DestinationSize);

  000df	6a 00		 push	 0
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 _memset
  000e7	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN33@Montgomery:

; 51   : 
; 52   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);

  000ea	e8 00 00 00 00	 call	 __errno
  000ef	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  000f5	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN30@Montgomery:
  000fa	8b c6		 mov	 eax, esi
  000fc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ff	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00106	59		 pop	 ecx
  00107	5f		 pop	 edi
  00108	5e		 pop	 esi
  00109	5b		 pop	 ebx
  0010a	8b e5		 mov	 esp, ebp
  0010c	5d		 pop	 ebp
  0010d	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z$3:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00006	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
__unwindfunclet$??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z$4:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 20	 add	 ecx, 32			; 00000020H
  00011	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
__unwindfunclet$??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z$0:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e9 00 00 00 00	 jmp	 ??1ModularArithmetic@CryptoPP@@UAE@XZ
__unwindfunclet$??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z$1:
  0001e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	83 c1 48	 add	 ecx, 72			; 00000048H
  00024	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
  00029	cc		 int	 3
  0002a	cc		 int	 3
  0002b	cc		 int	 3
  0002c	cc		 int	 3
  0002d	cc		 int	 3
__ehhandler$??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z:
  0002e	90		 npad	 1
  0002f	90		 npad	 1
  00030	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00034	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00037	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0003a	33 c8		 xor	 ecx, eax
  0003c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00041	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z
  00046	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z ENDP	; CryptoPP::MontgomeryRepresentation::MontgomeryRepresentation
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
;	COMDAT ?SimultaneousExponentiate@MontgomeryRepresentation@CryptoPP@@UBEXPAVInteger@2@ABV32@PBV32@I@Z
_TEXT	SEGMENT
_results$ = 8						; size = 4
_base$ = 12						; size = 4
_exponents$ = 16					; size = 4
_exponentsCount$ = 20					; size = 4
?SimultaneousExponentiate@MontgomeryRepresentation@CryptoPP@@UBEXPAVInteger@2@ABV32@PBV32@I@Z PROC ; CryptoPP::MontgomeryRepresentation::SimultaneousExponentiate, COMDAT
; _this$ = ecx

; 149  : 		{AbstractRing<Integer>::SimultaneousExponentiate(results, base, exponents, exponentsCount);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	e9 00 00 00 00	 jmp	 ?SimultaneousExponentiate@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEXPAVInteger@2@ABV32@PBV32@I@Z ; CryptoPP::AbstractRing<CryptoPP::Integer>::SimultaneousExponentiate
?SimultaneousExponentiate@MontgomeryRepresentation@CryptoPP@@UBEXPAVInteger@2@ABV32@PBV32@I@Z ENDP ; CryptoPP::MontgomeryRepresentation::SimultaneousExponentiate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
;	COMDAT ?CascadeExponentiate@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@000@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
_e1$ = 16						; size = 4
_y$ = 20						; size = 4
_e2$ = 24						; size = 4
?CascadeExponentiate@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@000@Z PROC ; CryptoPP::MontgomeryRepresentation::CascadeExponentiate, COMDAT
; _this$ = ecx

; 146  : 		{return AbstractRing<Integer>::CascadeExponentiate(x, e1, y, e2);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 18	 push	 DWORD PTR _e2$[ebp]
  00006	ff 75 14	 push	 DWORD PTR _y$[ebp]
  00009	ff 75 10	 push	 DWORD PTR _e1$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  00012	e8 00 00 00 00	 call	 ?CascadeExponentiate@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@2@ABV32@000@Z ; CryptoPP::AbstractRing<CryptoPP::Integer>::CascadeExponentiate
  00017	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001a	5d		 pop	 ebp
  0001b	c2 14 00	 ret	 20			; 00000014H
?CascadeExponentiate@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@000@Z ENDP ; CryptoPP::MontgomeryRepresentation::CascadeExponentiate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
;	COMDAT ?MultiplicativeIdentity@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@XZ
_TEXT	SEGMENT
$T2 = -52						; size = 20
$T3 = -32						; size = 20
__$EHRec$ = -12						; size = 12
?MultiplicativeIdentity@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@XZ PROC ; CryptoPP::MontgomeryRepresentation::MultiplicativeIdentity, COMDAT
; _this$ = ecx

; 137  : 		{return m_result1 = Integer::Power2(WORD_BITS*m_modulus.reg.size())%m_modulus;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?MultiplicativeIdentity@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
  0002a	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0002d	c1 e0 05	 shl	 eax, 5
  00030	50		 push	 eax
  00031	8d 45 cc	 lea	 eax, DWORD PTR $T2[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?Power2@Integer@CryptoPP@@SA?AV12@I@Z ; CryptoPP::Integer::Power2
  0003a	83 c4 08	 add	 esp, 8
  0003d	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00040	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 403  : inline CryptoPP::Integer operator%(const CryptoPP::Integer &a, const CryptoPP::Integer &b) {return a.Modulo(b);}

  00047	51		 push	 ecx
  00048	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
  0004b	51		 push	 ecx
  0004c	8b c8		 mov	 ecx, eax
  0004e	e8 00 00 00 00	 call	 ?Modulo@Integer@CryptoPP@@QBE?AV12@ABV12@@Z ; CryptoPP::Integer::Modulo
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 137  : 		{return m_result1 = Integer::Power2(WORD_BITS*m_modulus.reg.size())%m_modulus;}

  00053	8d 45 e0	 lea	 eax, DWORD PTR $T3[ebp]
  00056	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0005a	50		 push	 eax
  0005b	8d 4e 34	 lea	 ecx, DWORD PTR [esi+52]
  0005e	e8 00 00 00 00	 call	 ??4Integer@CryptoPP@@QAEAAV01@ABV01@@Z ; CryptoPP::Integer::operator=
  00063	8b d8		 mov	 ebx, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00065	8b 55 e8	 mov	 edx, DWORD PTR $T3[ebp+8]
  00068	33 c0		 xor	 eax, eax
  0006a	8b 75 ec	 mov	 esi, DWORD PTR $T3[ebp+12]
  0006d	8b ca		 mov	 ecx, edx
  0006f	8b fe		 mov	 edi, esi
  00071	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00075	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  00077	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
  0007e	56		 push	 esi
  0007f	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00082	72 07		 jb	 SHORT $LN16@Multiplica

; 109  : 			return AlignedDeallocate(p);

  00084	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  00089	eb 05		 jmp	 SHORT $LN64@Multiplica
$LN16@Multiplica:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  0008b	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN64@Multiplica:

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00090	83 c4 04	 add	 esp, 4
  00093	8b 55 d4	 mov	 edx, DWORD PTR $T2[ebp+8]
  00096	33 c0		 xor	 eax, eax
  00098	8b 75 d8	 mov	 esi, DWORD PTR $T2[ebp+12]
  0009b	8b ca		 mov	 ecx, edx
  0009d	8b fe		 mov	 edi, esi
  0009f	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  000a6	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  000a8	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  000af	56		 push	 esi
  000b0	83 f8 10	 cmp	 eax, 16			; 00000010H
  000b3	72 07		 jb	 SHORT $LN43@Multiplica

; 109  : 			return AlignedDeallocate(p);

  000b5	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  000ba	eb 05		 jmp	 SHORT $LN65@Multiplica
$LN43@Multiplica:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  000bc	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN65@Multiplica:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 137  : 		{return m_result1 = Integer::Power2(WORD_BITS*m_modulus.reg.size())%m_modulus;}

  000c1	8b c3		 mov	 eax, ebx
  000c3	83 c4 04	 add	 esp, 4
  000c6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d0	59		 pop	 ecx
  000d1	5f		 pop	 edi
  000d2	5e		 pop	 esi
  000d3	5b		 pop	 ebx
  000d4	8b e5		 mov	 esp, ebp
  000d6	5d		 pop	 ebp
  000d7	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MultiplicativeIdentity@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@XZ$0:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
__unwindfunclet$?MultiplicativeIdentity@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@XZ$1:
  00008	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?MultiplicativeIdentity@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@XZ:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?MultiplicativeIdentity@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@XZ
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?MultiplicativeIdentity@MontgomeryRepresentation@CryptoPP@@UBEABVInteger@2@XZ ENDP ; CryptoPP::MontgomeryRepresentation::MultiplicativeIdentity
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
;	COMDAT ?ConvertIn@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
_TEXT	SEGMENT
$T2 = -56						; size = 20
$T3 = -36						; size = 20
$T4 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
$T5 = 12						; size = 4
_a$ = 12						; size = 4
?ConvertIn@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z PROC ; CryptoPP::MontgomeryRepresentation::ConvertIn, COMDAT
; _this$ = ecx

; 132  : 		{return (a<<(WORD_BITS*m_modulus.reg.size()))%m_modulus;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ConvertIn@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b d9		 mov	 ebx, ecx
  0002a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp], 0
  00031	8b 73 14	 mov	 esi, DWORD PTR [ebx+20]
  00034	c1 e6 05	 shl	 esi, 5
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 315  : 		Integer operator<<(size_t n) const	{return Integer(*this)<<=n;}

  00037	ff 75 0c	 push	 DWORD PTR _a$[ebp]
  0003a	8d 4d dc	 lea	 ecx, DWORD PTR $T3[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 132  : 		{return (a<<(WORD_BITS*m_modulus.reg.size()))%m_modulus;}

  0003d	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 315  : 		Integer operator<<(size_t n) const	{return Integer(*this)<<=n;}

  00044	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::Integer::Integer
  00049	56		 push	 esi
  0004a	8b c8		 mov	 ecx, eax
  0004c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00050	e8 00 00 00 00	 call	 ??_3Integer@CryptoPP@@QAEAAV01@I@Z ; CryptoPP::Integer::operator<<=
  00055	50		 push	 eax
  00056	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  00059	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::Integer::Integer
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 132  : 		{return (a<<(WORD_BITS*m_modulus.reg.size()))%m_modulus;}

  0005e	89 45 0c	 mov	 DWORD PTR $T5[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 315  : 		Integer operator<<(size_t n) const	{return Integer(*this)<<=n;}

  00061	c7 45 f0 02 00
	00 00		 mov	 DWORD PTR $T4[ebp], 2
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00068	8b 55 e4	 mov	 edx, DWORD PTR $T3[ebp+8]
  0006b	33 c0		 xor	 eax, eax
  0006d	8b 75 e8	 mov	 esi, DWORD PTR $T3[ebp+12]
  00070	8b ca		 mov	 ecx, edx
  00072	8b fe		 mov	 edi, esi
  00074	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00078	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  0007a	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  00081	56		 push	 esi
  00082	83 f8 10	 cmp	 eax, 16			; 00000010H
  00085	72 07		 jb	 SHORT $LN18@ConvertIn

; 109  : 			return AlignedDeallocate(p);

  00087	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  0008c	eb 05		 jmp	 SHORT $LN70@ConvertIn
$LN18@ConvertIn:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  0008e	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN70@ConvertIn:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 403  : inline CryptoPP::Integer operator%(const CryptoPP::Integer &a, const CryptoPP::Integer &b) {return a.Modulo(b);}

  00093	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 132  : 		{return (a<<(WORD_BITS*m_modulus.reg.size()))%m_modulus;}

  00096	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 403  : inline CryptoPP::Integer operator%(const CryptoPP::Integer &a, const CryptoPP::Integer &b) {return a.Modulo(b);}

  00099	8b 4d 0c	 mov	 ecx, DWORD PTR $T5[ebp]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0009c	83 c4 04	 add	 esp, 4
  0009f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 403  : inline CryptoPP::Integer operator%(const CryptoPP::Integer &a, const CryptoPP::Integer &b) {return a.Modulo(b);}

  000a3	50		 push	 eax
  000a4	56		 push	 esi
  000a5	e8 00 00 00 00	 call	 ?Modulo@Integer@CryptoPP@@QBE?AV12@ABV12@@Z ; CryptoPP::Integer::Modulo
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 132  : 		{return (a<<(WORD_BITS*m_modulus.reg.size()))%m_modulus;}

  000aa	c7 45 f0 05 00
	00 00		 mov	 DWORD PTR $T4[ebp], 5
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  000b1	8b 55 d0	 mov	 edx, DWORD PTR $T2[ebp+8]
  000b4	33 c0		 xor	 eax, eax
  000b6	8b 5d d4	 mov	 ebx, DWORD PTR $T2[ebp+12]
  000b9	8b ca		 mov	 ecx, edx
  000bb	8b fb		 mov	 edi, ebx
  000bd	c7 45 fc 04 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 4
  000c4	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  000c6	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
  000cd	53		 push	 ebx
  000ce	83 f9 10	 cmp	 ecx, 16			; 00000010H
  000d1	72 07		 jb	 SHORT $LN49@ConvertIn

; 109  : 			return AlignedDeallocate(p);

  000d3	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  000d8	eb 05		 jmp	 SHORT $LN71@ConvertIn
$LN49@ConvertIn:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  000da	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN71@ConvertIn:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 132  : 		{return (a<<(WORD_BITS*m_modulus.reg.size()))%m_modulus;}

  000df	8b c6		 mov	 eax, esi
  000e1	83 c4 04	 add	 esp, 4
  000e4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ee	59		 pop	 ecx
  000ef	5f		 pop	 edi
  000f0	5e		 pop	 esi
  000f1	5b		 pop	 ebx
  000f2	8b e5		 mov	 esp, ebp
  000f4	5d		 pop	 ebp
  000f5	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ConvertIn@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z$3:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T4[ebp]
  00003	83 e0 02	 and	 eax, 2
  00006	0f 84 0c 00 00
	00		 je	 $LN10@ConvertIn
  0000c	83 65 f0 fd	 and	 DWORD PTR $T4[ebp], -3	; fffffffdH
  00010	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
$LN10@ConvertIn:
  00018	c3		 ret	 0
__unwindfunclet$?ConvertIn@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z$2:
  00019	8d 4d dc	 lea	 ecx, DWORD PTR $T3[ebp]
  0001c	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
__unwindfunclet$?ConvertIn@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z$1:
  00021	8b 45 f0	 mov	 eax, DWORD PTR $T4[ebp]
  00024	83 e0 01	 and	 eax, 1
  00027	0f 84 0c 00 00
	00		 je	 $LN5@ConvertIn
  0002d	83 65 f0 fe	 and	 DWORD PTR $T4[ebp], -2	; fffffffeH
  00031	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00034	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
$LN5@ConvertIn:
  00039	c3		 ret	 0
  0003a	cc		 int	 3
  0003b	cc		 int	 3
  0003c	cc		 int	 3
  0003d	cc		 int	 3
  0003e	cc		 int	 3
__ehhandler$?ConvertIn@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z:
  0003f	90		 npad	 1
  00040	90		 npad	 1
  00041	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00045	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00048	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0004b	33 c8		 xor	 ecx, eax
  0004d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00052	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ConvertIn@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
  00057	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ConvertIn@MontgomeryRepresentation@CryptoPP@@UBE?AVInteger@2@ABV32@@Z ENDP ; CryptoPP::MontgomeryRepresentation::ConvertIn
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
;	COMDAT ?IsMontgomeryRepresentation@MontgomeryRepresentation@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsMontgomeryRepresentation@MontgomeryRepresentation@CryptoPP@@UBE_NXZ PROC ; CryptoPP::MontgomeryRepresentation::IsMontgomeryRepresentation, COMDAT
; _this$ = ecx

; 129  : 	bool IsMontgomeryRepresentation() const {return true;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsMontgomeryRepresentation@MontgomeryRepresentation@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::MontgomeryRepresentation::IsMontgomeryRepresentation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
;	COMDAT ?Clone@MontgomeryRepresentation@CryptoPP@@UBEPAVModularArithmetic@2@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Clone@MontgomeryRepresentation@CryptoPP@@UBEPAVModularArithmetic@2@XZ PROC ; CryptoPP::MontgomeryRepresentation::Clone, COMDAT
; _this$ = ecx

; 127  : 	virtual ModularArithmetic * Clone() const {return new MontgomeryRepresentation(*this);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Clone@MontgomeryRepresentation@CryptoPP@@UBEPAVModularArithmetic@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	6a 68		 push	 104			; 00000068H
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003a	85 c0		 test	 eax, eax
  0003c	74 18		 je	 SHORT $LN3@Clone
  0003e	56		 push	 esi
  0003f	8b c8		 mov	 ecx, eax
  00041	e8 00 00 00 00	 call	 ??0MontgomeryRepresentation@CryptoPP@@QAE@ABV01@@Z
  00046	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00049	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00050	59		 pop	 ecx
  00051	5e		 pop	 esi
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
$LN3@Clone:
  00056	33 c0		 xor	 eax, eax
  00058	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00062	59		 pop	 ecx
  00063	5e		 pop	 esi
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Clone@MontgomeryRepresentation@CryptoPP@@UBEPAVModularArithmetic@2@XZ$0:
  00000	6a 68		 push	 104			; 00000068H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
  0000f	cc		 int	 3
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
__ehhandler$?Clone@MontgomeryRepresentation@CryptoPP@@UBEPAVModularArithmetic@2@XZ:
  00014	90		 npad	 1
  00015	90		 npad	 1
  00016	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001d	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00020	33 c8		 xor	 ecx, eax
  00022	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00027	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Clone@MontgomeryRepresentation@CryptoPP@@UBEPAVModularArithmetic@2@XZ
  0002c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Clone@MontgomeryRepresentation@CryptoPP@@UBEPAVModularArithmetic@2@XZ ENDP ; CryptoPP::MontgomeryRepresentation::Clone
; Function compile flags: /Ogtp
;	COMDAT ??_GModularArithmetic@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GModularArithmetic@CryptoPP@@UAEPAXI@Z PROC		; CryptoPP::ModularArithmetic::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ModularArithmetic@CryptoPP@@UAE@XZ
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 48		 push	 72			; 00000048H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GModularArithmetic@CryptoPP@@UAEPAXI@Z ENDP		; CryptoPP::ModularArithmetic::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??1ModularArithmetic@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1ModularArithmetic@CryptoPP@@UAE@XZ PROC		; CryptoPP::ModularArithmetic::~ModularArithmetic, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ModularArithmetic@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00027	8b 56 3c	 mov	 edx, DWORD PTR [esi+60]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0002a	33 c0		 xor	 eax, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0002c	8b 5e 40	 mov	 ebx, DWORD PTR [esi+64]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0002f	8b ca		 mov	 ecx, edx
  00031	8b fb		 mov	 edi, ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0003a	f3 ab		 rep stosd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  0003c	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  00043	53		 push	 ebx
  00044	83 f8 10	 cmp	 eax, 16			; 00000010H
  00047	72 07		 jb	 SHORT $LN10@ModularAri

; 109  : 			return AlignedDeallocate(p);

  00049	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  0004e	eb 05		 jmp	 SHORT $LN85@ModularAri
$LN10@ModularAri:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  00050	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN85@ModularAri:

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00055	83 c4 04	 add	 esp, 4
  00058	8b 56 28	 mov	 edx, DWORD PTR [esi+40]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0005b	33 c0		 xor	 eax, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0005d	8b 5e 2c	 mov	 ebx, DWORD PTR [esi+44]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00060	8b ca		 mov	 ecx, edx
  00062	8b fb		 mov	 edi, ebx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00064	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0006b	f3 ab		 rep stosd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  0006d	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  00074	53		 push	 ebx
  00075	83 f8 10	 cmp	 eax, 16			; 00000010H
  00078	72 07		 jb	 SHORT $LN37@ModularAri

; 109  : 			return AlignedDeallocate(p);

  0007a	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  0007f	eb 05		 jmp	 SHORT $LN86@ModularAri
$LN37@ModularAri:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  00081	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN86@ModularAri:

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00086	83 c4 04	 add	 esp, 4
  00089	8b 56 14	 mov	 edx, DWORD PTR [esi+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0008c	33 c0		 xor	 eax, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0008e	8b 76 18	 mov	 esi, DWORD PTR [esi+24]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00091	8b ca		 mov	 ecx, edx
  00093	8b fe		 mov	 edi, esi
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00095	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0009c	f3 ab		 rep stosd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  0009e	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  000a5	56		 push	 esi
  000a6	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a9	72 07		 jb	 SHORT $LN64@ModularAri

; 109  : 			return AlignedDeallocate(p);

  000ab	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  000b0	eb 05		 jmp	 SHORT $LN87@ModularAri
$LN64@ModularAri:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  000b2	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN87@ModularAri:
  000b7	83 c4 04	 add	 esp, 4
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c4	59		 pop	 ecx
  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi
  000c7	5b		 pop	 ebx
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c3		 ret	 0
  000cc	cc		 int	 3
  000cd	cc		 int	 3
  000ce	cc		 int	 3
  000cf	cc		 int	 3
  000d0	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1ModularArithmetic@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ModularArithmetic@CryptoPP@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ModularArithmetic@CryptoPP@@UAE@XZ ENDP		; CryptoPP::ModularArithmetic::~ModularArithmetic
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
;	COMDAT ?Divide@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?Divide@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z PROC ; CryptoPP::ModularArithmetic::Divide, COMDAT
; _this$ = ecx

; 89   : 		{return Multiply(a, MultiplicativeInverse(b));}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	ff 75 0c	 push	 DWORD PTR _b$[ebp]
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 37		 mov	 esi, DWORD PTR [edi]
  0000c	ff 56 40	 call	 DWORD PTR [esi+64]
  0000f	50		 push	 eax
  00010	ff 75 08	 push	 DWORD PTR _a$[ebp]
  00013	8b cf		 mov	 ecx, edi
  00015	ff 56 3c	 call	 DWORD PTR [esi+60]
  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
?Divide@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z ENDP ; CryptoPP::ModularArithmetic::Divide
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
;	COMDAT ?MultiplicativeInverse@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z
_TEXT	SEGMENT
$T2 = -32						; size = 20
__$EHRec$ = -12						; size = 12
_a$ = 8							; size = 4
?MultiplicativeInverse@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z PROC ; CryptoPP::ModularArithmetic::MultiplicativeInverse, COMDAT
; _this$ = ecx

; 86   : 		{return m_result1 = a.InverseMod(m_modulus);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?MultiplicativeInverse@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _a$[ebp]
  0002d	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00030	50		 push	 eax
  00031	8d 45 e0	 lea	 eax, DWORD PTR $T2[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 ?InverseMod@Integer@CryptoPP@@QBE?AV12@ABV12@@Z ; CryptoPP::Integer::InverseMod
  0003a	50		 push	 eax
  0003b	8d 4e 34	 lea	 ecx, DWORD PTR [esi+52]
  0003e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00045	e8 00 00 00 00	 call	 ??4Integer@CryptoPP@@QAEAAV01@ABV01@@Z ; CryptoPP::Integer::operator=
  0004a	8b d8		 mov	 ebx, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0004c	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp+8]
  0004f	33 c0		 xor	 eax, eax
  00051	8b 75 ec	 mov	 esi, DWORD PTR $T2[ebp+12]
  00054	8b ca		 mov	 ecx, edx
  00056	8b fe		 mov	 edi, esi
  00058	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0005f	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  00061	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
  00068	56		 push	 esi
  00069	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0006c	72 07		 jb	 SHORT $LN11@Multiplica

; 109  : 			return AlignedDeallocate(p);

  0006e	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  00073	eb 05		 jmp	 SHORT $LN32@Multiplica
$LN11@Multiplica:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  00075	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN32@Multiplica:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 86   : 		{return m_result1 = a.InverseMod(m_modulus);}

  0007a	8b c3		 mov	 eax, ebx
  0007c	83 c4 04	 add	 esp, 4
  0007f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00082	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00089	59		 pop	 ecx
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	5b		 pop	 ebx
  0008d	8b e5		 mov	 esp, ebp
  0008f	5d		 pop	 ebp
  00090	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MultiplicativeInverse@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?MultiplicativeInverse@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?MultiplicativeInverse@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?MultiplicativeInverse@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z ENDP ; CryptoPP::ModularArithmetic::MultiplicativeInverse
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
;	COMDAT ?IsUnit@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@@Z
_TEXT	SEGMENT
$T2 = -32						; size = 20
__$EHRec$ = -12						; size = 12
_a$ = 8							; size = 4
?IsUnit@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@@Z PROC ; CryptoPP::ModularArithmetic::IsUnit, COMDAT
; _this$ = ecx

; 83   : 		{return Integer::Gcd(a, m_modulus).IsUnit();}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?IsUnit@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  0002b	50		 push	 eax
  0002c	ff 75 08	 push	 DWORD PTR _a$[ebp]
  0002f	8d 45 e0	 lea	 eax, DWORD PTR $T2[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?Gcd@Integer@CryptoPP@@SA?AV12@ABV12@0@Z ; CryptoPP::Integer::Gcd
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003b	8b c8		 mov	 ecx, eax
  0003d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00044	e8 00 00 00 00	 call	 ?IsUnit@Integer@CryptoPP@@QBE_NXZ ; CryptoPP::Integer::IsUnit
  00049	8a d8		 mov	 bl, al
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0004b	8b 55 e8	 mov	 edx, DWORD PTR $T2[ebp+8]
  0004e	33 c0		 xor	 eax, eax
  00050	8b 75 ec	 mov	 esi, DWORD PTR $T2[ebp+12]
  00053	8b ca		 mov	 ecx, edx
  00055	8b fe		 mov	 edi, esi
  00057	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  0005e	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  00060	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
  00067	56		 push	 esi
  00068	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0006b	72 07		 jb	 SHORT $LN11@IsUnit

; 109  : 			return AlignedDeallocate(p);

  0006d	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  00072	eb 05		 jmp	 SHORT $LN32@IsUnit
$LN11@IsUnit:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  00074	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN32@IsUnit:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 83   : 		{return Integer::Gcd(a, m_modulus).IsUnit();}

  00079	8a c3		 mov	 al, bl
  0007b	83 c4 04	 add	 esp, 4
  0007e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00081	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00088	59		 pop	 ecx
  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?IsUnit@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?IsUnit@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?IsUnit@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?IsUnit@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@@Z ENDP ; CryptoPP::ModularArithmetic::IsUnit
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
;	COMDAT ?Square@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z
_TEXT	SEGMENT
$T2 = -52						; size = 20
$T3 = -32						; size = 20
__$EHRec$ = -12						; size = 12
_a$ = 8							; size = 4
?Square@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z PROC ; CryptoPP::ModularArithmetic::Square, COMDAT
; _this$ = ecx

; 80   : 		{return m_result1 = a.Squared()%m_modulus;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Square@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 325  : 		Integer Squared() const {return Times(*this);}

  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _a$[ebp]
  0002d	8d 45 cc	 lea	 eax, DWORD PTR $T2[ebp]
  00030	51		 push	 ecx
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ?Times@Integer@CryptoPP@@QBE?AV12@ABV12@@Z ; CryptoPP::Integer::Times
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 80   : 		{return m_result1 = a.Squared()%m_modulus;}

  00037	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  0003a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 403  : inline CryptoPP::Integer operator%(const CryptoPP::Integer &a, const CryptoPP::Integer &b) {return a.Modulo(b);}

  00041	50		 push	 eax
  00042	8d 45 e0	 lea	 eax, DWORD PTR $T3[ebp]
  00045	50		 push	 eax
  00046	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00049	e8 00 00 00 00	 call	 ?Modulo@Integer@CryptoPP@@QBE?AV12@ABV12@@Z ; CryptoPP::Integer::Modulo
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 80   : 		{return m_result1 = a.Squared()%m_modulus;}

  0004e	8d 45 e0	 lea	 eax, DWORD PTR $T3[ebp]
  00051	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00055	50		 push	 eax
  00056	8d 4e 34	 lea	 ecx, DWORD PTR [esi+52]
  00059	e8 00 00 00 00	 call	 ??4Integer@CryptoPP@@QAEAAV01@ABV01@@Z ; CryptoPP::Integer::operator=
  0005e	8b d8		 mov	 ebx, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00060	8b 55 e8	 mov	 edx, DWORD PTR $T3[ebp+8]
  00063	33 c0		 xor	 eax, eax
  00065	8b 75 ec	 mov	 esi, DWORD PTR $T3[ebp+12]
  00068	8b ca		 mov	 ecx, edx
  0006a	8b fe		 mov	 edi, esi
  0006c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00070	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  00072	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
  00079	56		 push	 esi
  0007a	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0007d	72 07		 jb	 SHORT $LN20@Square

; 109  : 			return AlignedDeallocate(p);

  0007f	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  00084	eb 05		 jmp	 SHORT $LN68@Square
$LN20@Square:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  00086	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN68@Square:

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0008b	83 c4 04	 add	 esp, 4
  0008e	8b 55 d4	 mov	 edx, DWORD PTR $T2[ebp+8]
  00091	33 c0		 xor	 eax, eax
  00093	8b 75 d8	 mov	 esi, DWORD PTR $T2[ebp+12]
  00096	8b ca		 mov	 ecx, edx
  00098	8b fe		 mov	 edi, esi
  0009a	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  000a1	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  000a3	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  000aa	56		 push	 esi
  000ab	83 f8 10	 cmp	 eax, 16			; 00000010H
  000ae	72 07		 jb	 SHORT $LN47@Square

; 109  : 			return AlignedDeallocate(p);

  000b0	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  000b5	eb 05		 jmp	 SHORT $LN69@Square
$LN47@Square:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  000b7	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN69@Square:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 80   : 		{return m_result1 = a.Squared()%m_modulus;}

  000bc	8b c3		 mov	 eax, ebx
  000be	83 c4 04	 add	 esp, 4
  000c1	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000cb	59		 pop	 ecx
  000cc	5f		 pop	 edi
  000cd	5e		 pop	 esi
  000ce	5b		 pop	 ebx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Square@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z$0:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
__unwindfunclet$?Square@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z$1:
  00008	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?Square@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Square@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Square@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z ENDP ; CryptoPP::ModularArithmetic::Square
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
;	COMDAT ?Multiply@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z
_TEXT	SEGMENT
$T2 = -52						; size = 20
$T3 = -32						; size = 20
__$EHRec$ = -12						; size = 12
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?Multiply@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z PROC ; CryptoPP::ModularArithmetic::Multiply, COMDAT
; _this$ = ecx

; 77   : 		{return m_result1 = a*b%m_modulus;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Multiply@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 28	 sub	 esp, 40			; 00000028H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 399  : inline CryptoPP::Integer operator*(const CryptoPP::Integer &a, const CryptoPP::Integer &b) {return a.Times(b);}

  0002a	ff 75 0c	 push	 DWORD PTR _b$[ebp]
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _a$[ebp]
  00030	8d 45 cc	 lea	 eax, DWORD PTR $T2[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?Times@Integer@CryptoPP@@QBE?AV12@ABV12@@Z ; CryptoPP::Integer::Times
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 77   : 		{return m_result1 = a*b%m_modulus;}

  00039	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  0003c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 403  : inline CryptoPP::Integer operator%(const CryptoPP::Integer &a, const CryptoPP::Integer &b) {return a.Modulo(b);}

  00043	50		 push	 eax
  00044	8d 45 e0	 lea	 eax, DWORD PTR $T3[ebp]
  00047	50		 push	 eax
  00048	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  0004b	e8 00 00 00 00	 call	 ?Modulo@Integer@CryptoPP@@QBE?AV12@ABV12@@Z ; CryptoPP::Integer::Modulo
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 77   : 		{return m_result1 = a*b%m_modulus;}

  00050	8d 45 e0	 lea	 eax, DWORD PTR $T3[ebp]
  00053	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00057	50		 push	 eax
  00058	8d 4e 34	 lea	 ecx, DWORD PTR [esi+52]
  0005b	e8 00 00 00 00	 call	 ??4Integer@CryptoPP@@QAEAAV01@ABV01@@Z ; CryptoPP::Integer::operator=
  00060	8b d8		 mov	 ebx, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00062	8b 55 e8	 mov	 edx, DWORD PTR $T3[ebp+8]
  00065	33 c0		 xor	 eax, eax
  00067	8b 75 ec	 mov	 esi, DWORD PTR $T3[ebp+12]
  0006a	8b ca		 mov	 ecx, edx
  0006c	8b fe		 mov	 edi, esi
  0006e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00072	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  00074	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*4]
  0007b	56		 push	 esi
  0007c	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0007f	72 07		 jb	 SHORT $LN20@Multiply

; 109  : 			return AlignedDeallocate(p);

  00081	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  00086	eb 05		 jmp	 SHORT $LN68@Multiply
$LN20@Multiply:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  00088	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN68@Multiply:

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0008d	83 c4 04	 add	 esp, 4
  00090	8b 55 d4	 mov	 edx, DWORD PTR $T2[ebp+8]
  00093	33 c0		 xor	 eax, eax
  00095	8b 75 d8	 mov	 esi, DWORD PTR $T2[ebp+12]
  00098	8b ca		 mov	 ecx, edx
  0009a	8b fe		 mov	 edi, esi
  0009c	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 3
  000a3	f3 ab		 rep stosd

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  000a5	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  000ac	56		 push	 esi
  000ad	83 f8 10	 cmp	 eax, 16			; 00000010H
  000b0	72 07		 jb	 SHORT $LN47@Multiply

; 109  : 			return AlignedDeallocate(p);

  000b2	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  000b7	eb 05		 jmp	 SHORT $LN69@Multiply
$LN47@Multiply:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  000b9	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN69@Multiply:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 77   : 		{return m_result1 = a*b%m_modulus;}

  000be	8b c3		 mov	 eax, ebx
  000c0	83 c4 04	 add	 esp, 4
  000c3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000cd	59		 pop	 ecx
  000ce	5f		 pop	 edi
  000cf	5e		 pop	 esi
  000d0	5b		 pop	 ebx
  000d1	8b e5		 mov	 esp, ebp
  000d3	5d		 pop	 ebp
  000d4	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Multiply@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z$0:
  00000	8d 4d cc	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
__unwindfunclet$?Multiply@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z$1:
  00008	8d 4d e0	 lea	 ecx, DWORD PTR $T3[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?Multiply@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a c8	 mov	 ecx, DWORD PTR [edx-56]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Multiply@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Multiply@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@0@Z ENDP ; CryptoPP::ModularArithmetic::Multiply
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
;	COMDAT ?MultiplicativeIdentity@ModularArithmetic@CryptoPP@@UBEABVInteger@2@XZ
_TEXT	SEGMENT
?MultiplicativeIdentity@ModularArithmetic@CryptoPP@@UBEABVInteger@2@XZ PROC ; CryptoPP::ModularArithmetic::MultiplicativeIdentity, COMDAT
; _this$ = ecx

; 74   : 		{return Integer::One();}

  00000	e9 00 00 00 00	 jmp	 ?One@Integer@CryptoPP@@SAABV12@XZ ; CryptoPP::Integer::One
?MultiplicativeIdentity@ModularArithmetic@CryptoPP@@UBEABVInteger@2@XZ ENDP ; CryptoPP::ModularArithmetic::MultiplicativeIdentity
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
;	COMDAT ?Double@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
?Double@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z PROC ; CryptoPP::ModularArithmetic::Double, COMDAT
; _this$ = ecx

; 71   : 		{return Add(a, a);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _a$[ebp]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	50		 push	 eax
  00009	50		 push	 eax
  0000a	ff 52 0c	 call	 DWORD PTR [edx+12]
  0000d	5d		 pop	 ebp
  0000e	c2 04 00	 ret	 4
?Double@ModularArithmetic@CryptoPP@@UBEABVInteger@2@ABV32@@Z ENDP ; CryptoPP::ModularArithmetic::Double
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
;	COMDAT ?Identity@ModularArithmetic@CryptoPP@@UBEABVInteger@2@XZ
_TEXT	SEGMENT
?Identity@ModularArithmetic@CryptoPP@@UBEABVInteger@2@XZ PROC ; CryptoPP::ModularArithmetic::Identity, COMDAT
; _this$ = ecx

; 58   : 		{return Integer::Zero();}

  00000	e9 00 00 00 00	 jmp	 ?Zero@Integer@CryptoPP@@SAABV12@XZ ; CryptoPP::Integer::Zero
?Identity@ModularArithmetic@CryptoPP@@UBEABVInteger@2@XZ ENDP ; CryptoPP::ModularArithmetic::Identity
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
;	COMDAT ?Equal@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?Equal@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@0@Z PROC ; CryptoPP::ModularArithmetic::Equal, COMDAT
; _this$ = ecx

; 55   : 		{return a==b;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 383  : inline bool operator==(const CryptoPP::Integer& a, const CryptoPP::Integer& b) {return a.Compare(b)==0;}

  00003	ff 75 0c	 push	 DWORD PTR _b$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR _a$[ebp]
  00009	e8 00 00 00 00	 call	 ?Compare@Integer@CryptoPP@@QBEHABV12@@Z ; CryptoPP::Integer::Compare
  0000e	85 c0		 test	 eax, eax
  00010	0f 94 c0	 sete	 al
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 55   : 		{return a==b;}

  00013	5d		 pop	 ebp
  00014	c2 08 00	 ret	 8
?Equal@ModularArithmetic@CryptoPP@@UBE_NABVInteger@2@0@Z ENDP ; CryptoPP::ModularArithmetic::Equal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
;	COMDAT ?ConvertOut@ModularArithmetic@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_a$ = 12						; size = 4
?ConvertOut@ModularArithmetic@CryptoPP@@UBE?AVInteger@2@ABV32@@Z PROC ; CryptoPP::ModularArithmetic::ConvertOut, COMDAT
; _this$ = ecx

; 50   : 		{return a;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 0c	 push	 DWORD PTR _a$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00009	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::Integer::Integer
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	5d		 pop	 ebp
  00012	c2 08 00	 ret	 8
?ConvertOut@ModularArithmetic@CryptoPP@@UBE?AVInteger@2@ABV32@@Z ENDP ; CryptoPP::ModularArithmetic::ConvertOut
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
;	COMDAT ?ConvertIn@ModularArithmetic@CryptoPP@@UBE?AVInteger@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_a$ = 12						; size = 4
?ConvertIn@ModularArithmetic@CryptoPP@@UBE?AVInteger@2@ABV32@@Z PROC ; CryptoPP::ModularArithmetic::ConvertIn, COMDAT
; _this$ = ecx

; 47   : 		{return a%m_modulus;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\integer.h

; 403  : inline CryptoPP::Integer operator%(const CryptoPP::Integer &a, const CryptoPP::Integer &b) {return a.Modulo(b);}

  00006	8b 4d 0c	 mov	 ecx, DWORD PTR _a$[ebp]
  00009	50		 push	 eax
  0000a	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  0000d	e8 00 00 00 00	 call	 ?Modulo@Integer@CryptoPP@@QBE?AV12@ABV12@@Z ; CryptoPP::Integer::Modulo
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 47   : 		{return a%m_modulus;}

  00012	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00015	5d		 pop	 ebp
  00016	c2 08 00	 ret	 8
?ConvertIn@ModularArithmetic@CryptoPP@@UBE?AVInteger@2@ABV32@@Z ENDP ; CryptoPP::ModularArithmetic::ConvertIn
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
;	COMDAT ?IsMontgomeryRepresentation@ModularArithmetic@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsMontgomeryRepresentation@ModularArithmetic@CryptoPP@@UBE_NXZ PROC ; CryptoPP::ModularArithmetic::IsMontgomeryRepresentation, COMDAT
; _this$ = ecx

; 44   : 	virtual bool IsMontgomeryRepresentation() const {return false;}

  00000	32 c0		 xor	 al, al
  00002	c3		 ret	 0
?IsMontgomeryRepresentation@ModularArithmetic@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::ModularArithmetic::IsMontgomeryRepresentation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algebra.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h
;	COMDAT ?Clone@ModularArithmetic@CryptoPP@@UBEPAV12@XZ
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Clone@ModularArithmetic@CryptoPP@@UBEPAV12@XZ PROC	; CryptoPP::ModularArithmetic::Clone, COMDAT
; _this$ = ecx

; 34   : 	virtual ModularArithmetic * Clone() const {return new ModularArithmetic(*this);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Clone@ModularArithmetic@CryptoPP@@UBEPAV12@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	6a 48		 push	 72			; 00000048H
  00029	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002e	8b f0		 mov	 esi, eax
  00030	83 c4 04	 add	 esp, 4
  00033	89 75 f0	 mov	 DWORD PTR $T2[ebp], esi
  00036	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003d	85 f6		 test	 esi, esi
  0003f	74 4c		 je	 SHORT $LN3@Clone

; 30   : 		: m_modulus(ma.m_modulus), m_result((word)0, m_modulus.reg.size()) {}

  00041	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  00044	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET ??_7MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@6B@
  0004b	50		 push	 eax
  0004c	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algebra.h

; 49   : 	AbstractRing() {m_mg.m_pRing = this;}

  0004f	89 76 08	 mov	 DWORD PTR [esi+8], esi
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modarith.h

; 30   : 		: m_modulus(ma.m_modulus), m_result((word)0, m_modulus.reg.size()) {}

  00052	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ModularArithmetic@CryptoPP@@6B@
  00058	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::Integer::Integer
  0005d	ff 76 14	 push	 DWORD PTR [esi+20]
  00060	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  00063	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00067	6a 00		 push	 0
  00069	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@AAE@II@Z ; CryptoPP::Integer::Integer
  0006e	8d 4e 34	 lea	 ecx, DWORD PTR [esi+52]
  00071	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  00075	e8 00 00 00 00	 call	 ??0Integer@CryptoPP@@QAE@XZ ; CryptoPP::Integer::Integer

; 34   : 	virtual ModularArithmetic * Clone() const {return new ModularArithmetic(*this);}

  0007a	8b c6		 mov	 eax, esi
  0007c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00086	59		 pop	 ecx
  00087	5f		 pop	 edi
  00088	5e		 pop	 esi
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
$LN3@Clone:
  0008d	33 c0		 xor	 eax, eax
  0008f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00092	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00099	59		 pop	 ecx
  0009a	5f		 pop	 edi
  0009b	5e		 pop	 esi
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Clone@ModularArithmetic@CryptoPP@@UBEPAV12@XZ$0:
  00000	6a 48		 push	 72			; 00000048H
  00002	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00005	50		 push	 eax
  00006	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000b	83 c4 08	 add	 esp, 8
  0000e	c3		 ret	 0
__unwindfunclet$?Clone@ModularArithmetic@CryptoPP@@UBEPAV12@XZ$1:
  0000f	8b 4d f0	 mov	 ecx, DWORD PTR $T2[ebp]
  00012	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00015	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
__unwindfunclet$?Clone@ModularArithmetic@CryptoPP@@UBEPAV12@XZ$2:
  0001a	8b 4d f0	 mov	 ecx, DWORD PTR $T2[ebp]
  0001d	83 c1 20	 add	 ecx, 32			; 00000020H
  00020	e9 00 00 00 00	 jmp	 ??1Integer@CryptoPP@@UAE@XZ
  00025	cc		 int	 3
  00026	cc		 int	 3
  00027	cc		 int	 3
  00028	cc		 int	 3
  00029	cc		 int	 3
__ehhandler$?Clone@ModularArithmetic@CryptoPP@@UBEPAV12@XZ:
  0002a	90		 npad	 1
  0002b	90		 npad	 1
  0002c	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00030	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00033	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00036	33 c8		 xor	 ecx, eax
  00038	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0003d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Clone@ModularArithmetic@CryptoPP@@UBEPAV12@XZ
  00042	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Clone@ModularArithmetic@CryptoPP@@UBEPAV12@XZ ENDP	; CryptoPP::ModularArithmetic::Clone
; Function compile flags: /Ogtp
;	COMDAT ??_GMultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GMultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00007	56		 push	 esi
  00008	8b f1		 mov	 esi, ecx
  0000a	74 0b		 je	 SHORT $LN4@scalar
  0000c	6a 08		 push	 8
  0000e	56		 push	 esi
  0000f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00014	83 c4 08	 add	 esp, 8
$LN4@scalar:
  00017	8b c6		 mov	 eax, esi
  00019	5e		 pop	 esi
  0001a	5d		 pop	 ebp
  0001b	c2 04 00	 ret	 4
??_GMultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algebra.h
;	COMDAT ?SimultaneousMultiply@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEXPAVInteger@3@ABV43@PBV43@I@Z
_TEXT	SEGMENT
_results$ = 8						; size = 4
_base$ = 12						; size = 4
_exponents$ = 16					; size = 4
_exponentsCount$ = 20					; size = 4
?SimultaneousMultiply@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEXPAVInteger@3@ABV43@PBV43@I@Z PROC ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::SimultaneousMultiply, COMDAT
; _this$ = ecx

; 107  : 			{GetRing().SimultaneousExponentiate(results, base, exponents, exponentsCount);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	5d		 pop	 ebp
  00009	ff 60 54	 jmp	 DWORD PTR [eax+84]
?SimultaneousMultiply@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEXPAVInteger@3@ABV43@PBV43@I@Z ENDP ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::SimultaneousMultiply
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algebra.h
;	COMDAT ?CascadeScalarMultiply@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@3@ABV43@000@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
_e1$ = 16						; size = 4
_y$ = 20						; size = 4
_e2$ = 24						; size = 4
?CascadeScalarMultiply@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@3@ABV43@000@Z PROC ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::CascadeScalarMultiply, COMDAT
; _this$ = ecx

; 104  : 			{return GetRing().CascadeExponentiate(x, e1, y, e2);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 18	 push	 DWORD PTR _e2$[ebp]
  00006	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00009	ff 75 14	 push	 DWORD PTR _y$[ebp]
  0000c	ff 75 10	 push	 DWORD PTR _e1$[ebp]
  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  00014	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  00017	ff 50 50	 call	 DWORD PTR [eax+80]
  0001a	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0001d	5d		 pop	 ebp
  0001e	c2 14 00	 ret	 20			; 00000014H
?CascadeScalarMultiply@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@3@ABV43@000@Z ENDP ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::CascadeScalarMultiply
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algebra.h
;	COMDAT ?ScalarMultiply@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@3@ABV43@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_a$ = 12						; size = 4
_e$ = 16						; size = 4
?ScalarMultiply@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@3@ABV43@0@Z PROC ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::ScalarMultiply, COMDAT
; _this$ = ecx

; 101  : 			{return GetRing().Exponentiate(a, e);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	ff 75 10	 push	 DWORD PTR _e$[ebp]
  00009	ff 75 0c	 push	 DWORD PTR _a$[ebp]
  0000c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000e	ff 75 08	 push	 DWORD PTR ___$ReturnUdt$[ebp]
  00011	ff 50 4c	 call	 DWORD PTR [eax+76]
  00014	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00017	5d		 pop	 ebp
  00018	c2 0c 00	 ret	 12			; 0000000cH
?ScalarMultiply@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE?AVInteger@3@ABV43@0@Z ENDP ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::ScalarMultiply
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algebra.h
;	COMDAT ?Double@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
?Double@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@@Z PROC ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Double, COMDAT
; _this$ = ecx

; 98   : 			{return GetRing().Square(a);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	5d		 pop	 ebp
  00009	ff 60 44	 jmp	 DWORD PTR [eax+68]
?Double@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@@Z ENDP ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Double
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algebra.h
;	COMDAT ?Reduce@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEAAVInteger@3@AAV43@ABV43@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?Reduce@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEAAVInteger@3@AAV43@ABV43@@Z PROC ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Reduce, COMDAT
; _this$ = ecx

; 95   : 			{return a = GetRing().Divide(a, b);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	ff 75 0c	 push	 DWORD PTR _b$[ebp]
  00009	ff 75 08	 push	 DWORD PTR _a$[ebp]
  0000c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000e	ff 50 48	 call	 DWORD PTR [eax+72]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _a$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ??4Integer@CryptoPP@@QAEAAV01@ABV01@@Z ; CryptoPP::Integer::operator=
  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
?Reduce@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEAAVInteger@3@AAV43@ABV43@@Z ENDP ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Reduce
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algebra.h
;	COMDAT ?Subtract@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?Subtract@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@0@Z PROC ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Subtract, COMDAT
; _this$ = ecx

; 92   : 			{return GetRing().Divide(a, b);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	5d		 pop	 ebp
  00009	ff 60 48	 jmp	 DWORD PTR [eax+72]
?Subtract@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@0@Z ENDP ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Subtract
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algebra.h
;	COMDAT ?Inverse@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
?Inverse@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@@Z PROC ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Inverse, COMDAT
; _this$ = ecx

; 89   : 			{return GetRing().MultiplicativeInverse(a);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	5d		 pop	 ebp
  00009	ff 60 40	 jmp	 DWORD PTR [eax+64]
?Inverse@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@@Z ENDP ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Inverse
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algebra.h
;	COMDAT ?Accumulate@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEAAVInteger@3@AAV43@ABV43@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?Accumulate@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEAAVInteger@3@AAV43@ABV43@@Z PROC ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Accumulate, COMDAT
; _this$ = ecx

; 86   : 			{return a = GetRing().Multiply(a, b);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	ff 75 0c	 push	 DWORD PTR _b$[ebp]
  00009	ff 75 08	 push	 DWORD PTR _a$[ebp]
  0000c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000e	ff 50 3c	 call	 DWORD PTR [eax+60]
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _a$[ebp]
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ??4Integer@CryptoPP@@QAEAAV01@ABV01@@Z ; CryptoPP::Integer::operator=
  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
?Accumulate@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEAAVInteger@3@AAV43@ABV43@@Z ENDP ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Accumulate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algebra.h
;	COMDAT ?Add@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?Add@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@0@Z PROC ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Add, COMDAT
; _this$ = ecx

; 83   : 			{return GetRing().Multiply(a, b);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	5d		 pop	 ebp
  00009	ff 60 3c	 jmp	 DWORD PTR [eax+60]
?Add@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@ABV43@0@Z ENDP ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Add
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algebra.h
;	COMDAT ?Identity@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@XZ
_TEXT	SEGMENT
?Identity@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@XZ PROC ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Identity, COMDAT
; _this$ = ecx

; 80   : 			{return GetRing().MultiplicativeIdentity();}

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	ff 60 38	 jmp	 DWORD PTR [eax+56]
?Identity@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABVInteger@3@XZ ENDP ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Identity
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algebra.h
;	COMDAT ?Equal@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE_NABVInteger@3@0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?Equal@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE_NABVInteger@3@0@Z PROC ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Equal, COMDAT
; _this$ = ecx

; 77   : 			{return GetRing().Equal(a, b);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000b	5d		 pop	 ebp
  0000c	ff e0		 jmp	 eax
?Equal@MultiplicativeGroupT@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBE_NABVInteger@3@0@Z ENDP ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroupT::Equal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algebra.h
;	COMDAT ?MultiplicativeGroup@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABV?$AbstractGroup@VInteger@CryptoPP@@@2@XZ
_TEXT	SEGMENT
?MultiplicativeGroup@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABV?$AbstractGroup@VInteger@CryptoPP@@@2@XZ PROC ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroup, COMDAT
; _this$ = ecx

; 67   : 		{return m_mg;}

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?MultiplicativeGroup@?$AbstractRing@VInteger@CryptoPP@@@CryptoPP@@UBEABV?$AbstractGroup@VInteger@CryptoPP@@@2@XZ ENDP ; CryptoPP::AbstractRing<CryptoPP::Integer>::MultiplicativeGroup
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algebra.h
;	COMDAT ?InversionIsFast@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?InversionIsFast@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::AbstractGroup<CryptoPP::Integer>::InversionIsFast, COMDAT
; _this$ = ecx

; 30   : 	virtual bool InversionIsFast() const {return false;}

  00000	32 c0		 xor	 al, al
  00002	c3		 ret	 0
?InversionIsFast@?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::AbstractGroup<CryptoPP::Integer>::InversionIsFast
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algebra.h
;	COMDAT ??1?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
??1?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UAE@XZ PROC ; CryptoPP::AbstractGroup<CryptoPP::Integer>::~AbstractGroup<CryptoPP::Integer>, COMDAT
; _this$ = ecx

; 24   : 	virtual ~AbstractGroup() {}

  00000	c2 00 00	 ret	 0
??1?$AbstractGroup@VInteger@CryptoPP@@@CryptoPP@@UAE@XZ ENDP ; CryptoPP::AbstractGroup<CryptoPP::Integer>::~AbstractGroup<CryptoPP::Integer>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??_GAutoSeededRandomPool@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GAutoSeededRandomPool@CryptoPP@@UAEPAXI@Z PROC	; CryptoPP::AutoSeededRandomPool::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
  00007	8d 4e 58	 lea	 ecx, DWORD PTR [esi+88]
  0000a	e8 00 00 00 00	 call	 ??1?$member_ptr@VBlockCipher@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::BlockCipher>::~member_ptr<CryptoPP::BlockCipher>
  0000f	8b 7e 54	 mov	 edi, DWORD PTR [esi+84]
  00012	8d 46 38	 lea	 eax, DWORD PTR [esi+56]
  00015	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]

; 194  : 		if (p == GetAlignedArray())

  00018	3b f8		 cmp	 edi, eax
  0001a	75 08		 jne	 SHORT $LN25@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0001c	c6 40 11 00	 mov	 BYTE PTR [eax+17], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00020	32 c0		 xor	 al, al
  00022	f3 aa		 rep stosb
$LN25@scalar:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00024	8b 7e 34	 mov	 edi, DWORD PTR [esi+52]
  00027	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0002a	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]

; 194  : 		if (p == GetAlignedArray())

  0002d	3b f8		 cmp	 edi, eax
  0002f	75 08		 jne	 SHORT $LN52@scalar

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  00031	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00035	32 c0		 xor	 al, al
  00037	f3 aa		 rep stosb
$LN52@scalar:
  00039	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0003d	74 0b		 je	 SHORT $LN64@scalar
  0003f	6a 60		 push	 96			; 00000060H
  00041	56		 push	 esi
  00042	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00047	83 c4 08	 add	 esp, 8
$LN64@scalar:
  0004a	5f		 pop	 edi
  0004b	8b c6		 mov	 eax, esi
  0004d	5e		 pop	 esi
  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
??_GAutoSeededRandomPool@CryptoPP@@UAEPAXI@Z ENDP	; CryptoPP::AutoSeededRandomPool::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??1AutoSeededRandomPool@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
??1AutoSeededRandomPool@CryptoPP@@UAE@XZ PROC		; CryptoPP::AutoSeededRandomPool::~AutoSeededRandomPool, COMDAT
; _this$ = ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi
  00004	8d 4e 58	 lea	 ecx, DWORD PTR [esi+88]
  00007	e8 00 00 00 00	 call	 ??1?$member_ptr@VBlockCipher@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::BlockCipher>::~member_ptr<CryptoPP::BlockCipher>
  0000c	8b 7e 54	 mov	 edi, DWORD PTR [esi+84]
  0000f	8d 46 38	 lea	 eax, DWORD PTR [esi+56]
  00012	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]

; 194  : 		if (p == GetAlignedArray())

  00015	3b f8		 cmp	 edi, eax
  00017	75 08		 jne	 SHORT $LN21@AutoSeeded

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  00019	c6 40 11 00	 mov	 BYTE PTR [eax+17], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  0001d	32 c0		 xor	 al, al
  0001f	f3 aa		 rep stosb
$LN21@AutoSeeded:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00021	8b 7e 34	 mov	 edi, DWORD PTR [esi+52]
  00024	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00027	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]

; 194  : 		if (p == GetAlignedArray())

  0002a	3b f8		 cmp	 edi, eax
  0002c	75 08		 jne	 SHORT $LN48@AutoSeeded

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0002e	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00032	32 c0		 xor	 al, al
  00034	f3 aa		 rep stosb
$LN48@AutoSeeded:
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	c3		 ret	 0
??1AutoSeededRandomPool@CryptoPP@@UAE@XZ ENDP		; CryptoPP::AutoSeededRandomPool::~AutoSeededRandomPool
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_GSelfTestFailure@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GSelfTestFailure@CryptoPP@@UAEPAXI@Z PROC		; CryptoPP::SelfTestFailure::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 132  : 	virtual ~Exception() throw() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0000c	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0000f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 0d		 jb	 SHORT $LN13@scalar

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	50		 push	 eax
  00016	ff 76 10	 push	 DWORD PTR [esi+16]
  00019	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001e	83 c4 08	 add	 esp, 8
$LN13@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00021	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00024	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00032	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00036	50		 push	 eax
  00037	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0003d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00042	83 c4 04	 add	 esp, 4
  00045	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00049	74 0b		 je	 SHORT $LN21@scalar
  0004b	6a 28		 push	 40			; 00000028H
  0004d	56		 push	 esi
  0004e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00053	83 c4 08	 add	 esp, 8
$LN21@scalar:
  00056	8b c6		 mov	 eax, esi
  00058	5e		 pop	 esi
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
??_GSelfTestFailure@CryptoPP@@UAEPAXI@Z ENDP		; CryptoPP::SelfTestFailure::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0SelfTestFailure@CryptoPP@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0SelfTestFailure@CryptoPP@@QAE@ABV01@@Z PROC		; CryptoPP::SelfTestFailure::SelfTestFailure, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0SelfTestFailure@CryptoPP@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0002a	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0002d	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00030	0f 57 c0	 xorps	 xmm0, xmm0

; 72   :     {

  00033	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7exception@std@@6B@

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  00039	50		 push	 eax
  0003a	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  0003e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ___std_exception_copy
  00047	83 c4 08	 add	 esp, 8
  0004a	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7Exception@CryptoPP@@6B@
  00050	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00053	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00056	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  00059	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0005c	50		 push	 eax
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00064	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00069	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7SelfTestFailure@CryptoPP@@6B@
  0006f	8b c7		 mov	 eax, edi
  00071	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007b	59		 pop	 ecx
  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SelfTestFailure@CryptoPP@@QAE@ABV01@@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0SelfTestFailure@CryptoPP@@QAE@ABV01@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0SelfTestFailure@CryptoPP@@QAE@ABV01@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0SelfTestFailure@CryptoPP@@QAE@ABV01@@Z ENDP		; CryptoPP::SelfTestFailure::SelfTestFailure
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1SelfTestFailure@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
??1SelfTestFailure@CryptoPP@@UAE@XZ PROC		; CryptoPP::SelfTestFailure::~SelfTestFailure, COMDAT
; _this$ = ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 132  : 	virtual ~Exception() throw() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00009	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0000c	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 0d		 jb	 SHORT $LN9@SelfTestFa

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00011	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00012	50		 push	 eax
  00013	ff 76 10	 push	 DWORD PTR [esi+16]
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8
$LN9@SelfTestFa:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  0001e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00021	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00028	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0002f	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00033	50		 push	 eax
  00034	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0003a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0003f	83 c4 04	 add	 esp, 4
  00042	5e		 pop	 esi
  00043	c3		 ret	 0
??1SelfTestFailure@CryptoPP@@UAE@XZ ENDP		; CryptoPP::SelfTestFailure::~SelfTestFailure
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\fips140.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\fips140.h
;	COMDAT ??0SelfTestFailure@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
??0SelfTestFailure@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CryptoPP::SelfTestFailure::SelfTestFailure, COMDAT
; _this$ = ecx

; 17   : 	explicit SelfTestFailure(const std::string &s) : Exception(OTHER_ERROR, s) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0SelfTestFailure@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 53   :         : _Data()

  0002c	66 0f d6 46 04	 movq	 QWORD PTR [esi+4], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 131  : 	explicit Exception(ErrorType errorType, const std::string &s) : m_errorType(errorType), m_what(s) {}

  00031	ff 75 08	 push	 DWORD PTR _s$[ebp]
  00034	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
  00044	c7 46 0c 06 00
	00 00		 mov	 DWORD PTR [esi+12], 6
  0004b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\fips140.h

; 17   : 	explicit SelfTestFailure(const std::string &s) : Exception(OTHER_ERROR, s) {}

  00050	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7SelfTestFailure@CryptoPP@@6B@
  00056	8b c6		 mov	 eax, esi
  00058	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00062	59		 pop	 ecx
  00063	5e		 pop	 esi
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SelfTestFailure@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0SelfTestFailure@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0SelfTestFailure@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0SelfTestFailure@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CryptoPP::SelfTestFailure::SelfTestFailure
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
;	COMDAT ??1RandomPool@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
??1RandomPool@CryptoPP@@UAE@XZ PROC			; CryptoPP::RandomPool::~RandomPool, COMDAT
; _this$ = ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi
  00004	8d 4e 58	 lea	 ecx, DWORD PTR [esi+88]
  00007	e8 00 00 00 00	 call	 ??1?$member_ptr@VBlockCipher@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::BlockCipher>::~member_ptr<CryptoPP::BlockCipher>
  0000c	8b 7e 54	 mov	 edi, DWORD PTR [esi+84]
  0000f	8d 46 38	 lea	 eax, DWORD PTR [esi+56]
  00012	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]

; 194  : 		if (p == GetAlignedArray())

  00015	3b f8		 cmp	 edi, eax
  00017	75 08		 jne	 SHORT $LN18@RandomPool

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  00019	c6 40 11 00	 mov	 BYTE PTR [eax+17], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  0001d	32 c0		 xor	 al, al
  0001f	f3 aa		 rep stosb
$LN18@RandomPool:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00021	8b 7e 34	 mov	 edi, DWORD PTR [esi+52]
  00024	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00027	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]

; 194  : 		if (p == GetAlignedArray())

  0002a	3b f8		 cmp	 edi, eax
  0002c	75 08		 jne	 SHORT $LN45@RandomPool

; 195  : 		{
; 196  : 			assert(n <= S);
; 197  : 			assert(m_allocated);
; 198  : 			m_allocated = false;

  0002e	c6 40 21 00	 mov	 BYTE PTR [eax+33], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00032	32 c0		 xor	 al, al
  00034	f3 aa		 rep stosb
$LN45@RandomPool:
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	c3		 ret	 0
??1RandomPool@CryptoPP@@UAE@XZ ENDP			; CryptoPP::RandomPool::~RandomPool
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h
;	COMDAT ??1?$member_ptr@VBlockCipher@CryptoPP@@@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
??1?$member_ptr@VBlockCipher@CryptoPP@@@CryptoPP@@QAE@XZ PROC ; CryptoPP::member_ptr<CryptoPP::BlockCipher>::~member_ptr<CryptoPP::BlockCipher>, COMDAT
; _this$ = ecx

; 49   : template <class T> member_ptr<T>::~member_ptr() {delete m_p;}

  00000	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00002	85 c9		 test	 ecx, ecx
  00004	74 06		 je	 SHORT $LN3@member_ptr
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	6a 01		 push	 1
  0000a	ff 10		 call	 DWORD PTR [eax]
$LN3@member_ptr:
  0000c	c3		 ret	 0
??1?$member_ptr@VBlockCipher@CryptoPP@@@CryptoPP@@QAE@XZ ENDP ; CryptoPP::member_ptr<CryptoPP::BlockCipher>::~member_ptr<CryptoPP::BlockCipher>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\randpool.h
;	COMDAT ?CanIncorporateEntropy@RandomPool@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?CanIncorporateEntropy@RandomPool@CryptoPP@@UBE_NXZ PROC ; CryptoPP::RandomPool::CanIncorporateEntropy, COMDAT
; _this$ = ecx

; 17   : 	bool CanIncorporateEntropy() const {return true;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?CanIncorporateEntropy@RandomPool@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::RandomPool::CanIncorporateEntropy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
;	COMDAT ??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z
_TEXT	SEGMENT
$T2 = -32						; size = 12
$T3 = -20						; size = 4
$T4 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_name$ = 12						; size = 4
_value$ = 16						; size = 4
_p$5 = 20						; size = 4
_throwIfNotUsed$ = 20					; size = 1
??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z PROC ; CryptoPP::MakeParameters<CryptoPP::ConstByteArrayParameter>, COMDAT

; 387  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 388  : 	return AlgorithmParameters()(name, value, throwIfNotUsed);

  00028	8d 4d e0	 lea	 ecx, DWORD PTR $T2[ebp]
  0002b	e8 00 00 00 00	 call	 ??0AlgorithmParameters@CryptoPP@@QAE@XZ ; CryptoPP::AlgorithmParameters::AlgorithmParameters
  00030	8b f0		 mov	 esi, eax
  00032	89 75 f0	 mov	 DWORD PTR $T4[ebp], esi

; 354  : 		member_ptr<AlgorithmParametersBase> p(new AlgorithmParametersTemplate<T>(name, value, throwIfNotUsed));

  00035	6a 28		 push	 40			; 00000028H

; 388  : 	return AlgorithmParameters()(name, value, throwIfNotUsed);

  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 354  : 		member_ptr<AlgorithmParametersBase> p(new AlgorithmParametersTemplate<T>(name, value, throwIfNotUsed));

  0003e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00043	8b f8		 mov	 edi, eax
  00045	83 c4 04	 add	 esp, 4
  00048	89 7d ec	 mov	 DWORD PTR $T3[ebp], edi
  0004b	8a 5d 14	 mov	 bl, BYTE PTR _throwIfNotUsed$[ebp]
  0004e	85 ff		 test	 edi, edi
  00050	74 2b		 je	 SHORT $LN8@MakeParame

; 266  : 		: m_name(name), m_throwIfNotUsed(throwIfNotUsed), m_used(false) {}

  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _name$[ebp]
  00055	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
  00058	88 5f 08	 mov	 BYTE PTR [edi+8], bl
  0005b	c6 47 09 00	 mov	 BYTE PTR [edi+9], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h

; 20   : 	explicit member_ptr(T *p = NULL) : m_p(p) {}

  0005f	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 306  : 		: AlgorithmParametersBase(name, throwIfNotUsed), m_value(value)

  00066	ff 75 10	 push	 DWORD PTR _value$[ebp]
  00069	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  0006c	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2

; 307  : 	{

  00070	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@6B@
  00076	e8 00 00 00 00	 call	 ??0ConstByteArrayParameter@CryptoPP@@QAE@ABV01@@Z

; 354  : 		member_ptr<AlgorithmParametersBase> p(new AlgorithmParametersTemplate<T>(name, value, throwIfNotUsed));

  0007b	eb 02		 jmp	 SHORT $LN9@MakeParame
$LN8@MakeParame:
  0007d	33 ff		 xor	 edi, edi
$LN9@MakeParame:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h

; 35   : 		T *old_p = m_p;

  0007f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 355  : 		p->m_next.reset(m_next.release());

  00082	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]
  00085	50		 push	 eax
  00086	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h

; 36   : 		m_p = 0;

  0008a	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 355  : 		p->m_next.reset(m_next.release());

  00091	e8 00 00 00 00	 call	 ?reset@?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAEXPAVAlgorithmParametersBase@2@@Z ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::reset

; 356  : 		m_next.reset(p.release());

  00096	57		 push	 edi
  00097	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h

; 36   : 		m_p = 0;

  0009a	c7 45 14 00 00
	00 00		 mov	 DWORD PTR _p$5[ebp], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 356  : 		m_next.reset(p.release());

  000a1	e8 00 00 00 00	 call	 ?reset@?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAEXPAVAlgorithmParametersBase@2@@Z ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::reset

; 357  : 		m_defaultThrowIfNotUsed = throwIfNotUsed;

  000a6	8b 75 f0	 mov	 esi, DWORD PTR $T4[ebp]

; 358  : 		return *this;

  000a9	8d 4d 14	 lea	 ecx, DWORD PTR _p$5[ebp]
  000ac	88 5e 08	 mov	 BYTE PTR [esi+8], bl
  000af	e8 00 00 00 00	 call	 ??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>

; 388  : 	return AlgorithmParameters()(name, value, throwIfNotUsed);

  000b4	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000b7	56		 push	 esi
  000b8	e8 00 00 00 00	 call	 ??0AlgorithmParameters@CryptoPP@@QAE@ABV01@@Z ; CryptoPP::AlgorithmParameters::AlgorithmParameters
  000bd	8d 4d e4	 lea	 ecx, DWORD PTR $T2[ebp+4]
  000c0	e8 00 00 00 00	 call	 ??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>
  000c5	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 389  : }

  000c8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000cb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d2	59		 pop	 ecx
  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z$0:
  00000	8d 4d e0	 lea	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1AlgorithmParameters@CryptoPP@@UAE@XZ
__unwindfunclet$??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z$2:
  00008	6a 28		 push	 40			; 00000028H
  0000a	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp]
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00013	83 c4 08	 add	 esp, 8
  00016	c3		 ret	 0
__unwindfunclet$??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z$4:
  00017	8b 4d ec	 mov	 ecx, DWORD PTR $T3[ebp]
  0001a	e9 00 00 00 00	 jmp	 ??1AlgorithmParametersBase@CryptoPP@@UAE@XZ ; CryptoPP::AlgorithmParametersBase::~AlgorithmParametersBase
  0001f	cc		 int	 3
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
__ehhandler$??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z:
  00024	90		 npad	 1
  00025	90		 npad	 1
  00026	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002d	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  00030	33 c8		 xor	 ecx, eax
  00032	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00037	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z
  0003c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$MakeParameters@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@YA?AVAlgorithmParameters@0@PBDABVConstByteArrayParameter@0@_N@Z ENDP ; CryptoPP::MakeParameters<CryptoPP::ConstByteArrayParameter>
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??1Integer@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1Integer@CryptoPP@@UAE@XZ PROC			; CryptoPP::Integer::~Integer, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1Integer@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00024	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00027	33 c0		 xor	 eax, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00029	8b 71 0c	 mov	 esi, DWORD PTR [ecx+12]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  0002c	8b fe		 mov	 edi, esi
  0002e	8b ca		 mov	 ecx, edx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 514  : 	__stosd((unsigned long *)(size_t)p, 0, n);

  00037	f3 ab		 rep stosd
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  00039	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  00040	56		 push	 esi
  00041	83 f8 10	 cmp	 eax, 16			; 00000010H
  00044	72 19		 jb	 SHORT $LN7@Integer

; 109  : 			return AlignedDeallocate(p);

  00046	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  0004b	83 c4 04	 add	 esp, 4
  0004e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00051	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00058	59		 pop	 ecx
  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
$LN7@Integer:
  0005f	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00064	83 c4 04	 add	 esp, 4
  00067	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00071	59		 pop	 ecx
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c3		 ret	 0
  00078	cc		 int	 3
  00079	cc		 int	 3
  0007a	cc		 int	 3
  0007b	cc		 int	 3
  0007c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1Integer@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1Integer@CryptoPP@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1Integer@CryptoPP@@UAE@XZ ENDP			; CryptoPP::Integer::~Integer
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ??_G?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 34	 mov	 edx, DWORD PTR [esi+52]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
  00049	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0004d	74 0b		 je	 SHORT $LN37@scalar
  0004f	6a 40		 push	 64			; 00000040H
  00051	56		 push	 esi
  00052	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00057	83 c4 08	 add	 esp, 8
$LN37@scalar:
  0005a	8b c6		 mov	 eax, esi
  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
  0006f	cc		 int	 3
  00070	cc		 int	 3
  00071	cc		 int	 3
  00072	cc		 int	 3
  00073	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ PROC ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	8b d9		 mov	 ebx, ecx
  00028	89 5d f0	 mov	 DWORD PTR _this$[ebp], ebx
  0002b	6a 01		 push	 1
  0002d	8d 4b 04	 lea	 ecx, DWORD PTR [ebx+4]
  00030	e8 00 00 00 00	 call	 ??0Algorithm@CryptoPP@@QAE@_N@Z ; CryptoPP::Algorithm::Algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 63   : 	CipherModeBase() : m_cipher(NULL) {}

  00035	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  0003c	c7 43 10 00 00
	00 00		 mov	 DWORD PTR [ebx+16], 0
  00043	c7 43 14 00 00
	00 00		 mov	 DWORD PTR [ebx+20], 0
  0004a	c7 43 20 00 00
	00 00		 mov	 DWORD PTR [ebx+32], 0
  00051	c7 43 24 00 00
	00 00		 mov	 DWORD PTR [ebx+36], 0
  00058	6a 01		 push	 1
  0005a	8d 4b 28	 lea	 ecx, DWORD PTR [ebx+40]
  0005d	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00064	e8 00 00 00 00	 call	 ??0Algorithm@CryptoPP@@QAE@_N@Z ; CryptoPP::Algorithm::Algorithm
  00069	c7 43 30 00 00
	00 00		 mov	 DWORD PTR [ebx+48], 0
  00070	8b c3		 mov	 eax, ebx
  00072	c7 43 34 00 00
	00 00		 mov	 DWORD PTR [ebx+52], 0
  00079	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], OFFSET ??_7?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BSimpleKeyingInterface@1@@
  0007f	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], OFFSET ??_7?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BStreamTransformation@1@@
  00086	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], OFFSET ??_7?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6B?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@1@@
  0008d	c7 43 28 00 00
	00 00		 mov	 DWORD PTR [ebx+40], OFFSET ??_7?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@6BRandomNumberGenerator@1@@
  00094	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00097	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0009e	59		 pop	 ecx
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ$4:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@UAE@XZ
__unwindfunclet$??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@UAE@XZ ; CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy>::~AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy>
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@QAE@XZ ENDP ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ?AccessPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MAEAAUAdditiveCipherAbstractPolicy@2@XZ
_TEXT	SEGMENT
?AccessPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MAEAAUAdditiveCipherAbstractPolicy@2@XZ PROC ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::AccessPolicy, COMDAT
; _this$ = ecx

; 54   : 	POLICY_INTERFACE & AccessPolicy() {return *this;}

  00000	8d 41 18	 lea	 eax, DWORD PTR [ecx+24]
  00003	c3		 ret	 0
?AccessPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MAEAAUAdditiveCipherAbstractPolicy@2@XZ ENDP ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::AccessPolicy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ?GetPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MBEABUAdditiveCipherAbstractPolicy@2@XZ
_TEXT	SEGMENT
?GetPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MBEABUAdditiveCipherAbstractPolicy@2@XZ PROC ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::GetPolicy, COMDAT
; _this$ = ecx

; 53   : 	const POLICY_INTERFACE & GetPolicy() const {return *this;}

  00000	8d 41 18	 lea	 eax, DWORD PTR [ecx+24]
  00003	c3		 ret	 0
?GetPolicy@?$ConcretePolicyHolder@VEmpty@CryptoPP@@V?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@2@UAdditiveCipherAbstractPolicy@2@@CryptoPP@@MBEABUAdditiveCipherAbstractPolicy@2@XZ ENDP ; CryptoPP::ConcretePolicyHolder<CryptoPP::Empty,CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >,CryptoPP::AdditiveCipherAbstractPolicy>::GetPolicy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ?IsRandomAccess@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsRandomAccess@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::IsRandomAccess, COMDAT
; _this$ = ecx

; 145  : 	bool IsRandomAccess() const {return this->GetPolicy().CipherIsRandomAccess();}

  00000	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
  00003	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00006	ff 50 48	 call	 DWORD PTR [eax+72]
  00009	8b c8		 mov	 ecx, eax
  0000b	8b 10		 mov	 edx, DWORD PTR [eax]
  0000d	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00010	ff e0		 jmp	 eax
?IsRandomAccess@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::IsRandomAccess
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ?IsForwardTransformation@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsForwardTransformation@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::IsForwardTransformation, COMDAT
; _this$ = ecx

; 144  : 	bool IsForwardTransformation() const {return true;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsForwardTransformation@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::IsForwardTransformation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ?IsSelfInverting@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsSelfInverting@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ PROC ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::IsSelfInverting, COMDAT
; _this$ = ecx

; 143  : 	bool IsSelfInverting() const {return true;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsSelfInverting@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::IsSelfInverting
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ?OptimalDataAlignment@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?OptimalDataAlignment@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ PROC ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::OptimalDataAlignment, COMDAT
; _this$ = ecx

; 142  : 	unsigned int OptimalDataAlignment() const {return this->GetPolicy().GetAlignment();}

  00000	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
  00003	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00006	ff 50 48	 call	 DWORD PTR [eax+72]
  00009	8b c8		 mov	 ecx, eax
  0000b	8b 10		 mov	 edx, DWORD PTR [eax]
  0000d	ff 62 04	 jmp	 DWORD PTR [edx+4]
?OptimalDataAlignment@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::OptimalDataAlignment
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ?OptimalBlockSize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?OptimalBlockSize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ PROC ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::OptimalBlockSize, COMDAT
; _this$ = ecx

; 140  : 	unsigned int OptimalBlockSize() const {return this->GetPolicy().GetOptimalBlockSize();}

  00000	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
  00003	83 c1 fc	 add	 ecx, -4			; fffffffcH
  00006	ff 50 48	 call	 DWORD PTR [eax+72]
  00009	8b c8		 mov	 ecx, eax
  0000b	8b 10		 mov	 edx, DWORD PTR [eax]
  0000d	ff 62 0c	 jmp	 DWORD PTR [edx+12]
?OptimalBlockSize@?$AdditiveCipherTemplate@V?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@@CryptoPP@@UBEIXZ ENDP ; CryptoPP::AdditiveCipherTemplate<CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy> >::OptimalBlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ??1?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
??1?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@UAE@XZ PROC ; CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy>::~AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy>, COMDAT
; _this$ = ecx

; 42   : 	virtual ~AbstractPolicyHolder() {}

  00000	e9 00 00 00 00	 jmp	 ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
??1?$AbstractPolicyHolder@UAdditiveCipherAbstractPolicy@CryptoPP@@VCTR_ModePolicy@2@@CryptoPP@@UAE@XZ ENDP ; CryptoPP::AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy>::~AbstractPolicyHolder<CryptoPP::AdditiveCipherAbstractPolicy,CryptoPP::CTR_ModePolicy>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??1CTR_ModePolicy@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1CTR_ModePolicy@CryptoPP@@UAE@XZ PROC			; CryptoPP::CTR_ModePolicy::~CTR_ModePolicy, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CTR_ModePolicy@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b d9		 mov	 ebx, ecx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00027	8b 53 20	 mov	 edx, DWORD PTR [ebx+32]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  0002a	32 c0		 xor	 al, al
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0002c	8b 73 24	 mov	 esi, DWORD PTR [ebx+36]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  0002f	8b fe		 mov	 edi, esi
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00031	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00038	8b ca		 mov	 ecx, edx
  0003a	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  0003c	56		 push	 esi
  0003d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00040	72 07		 jb	 SHORT $LN7@CTR_ModePo

; 109  : 			return AlignedDeallocate(p);

  00042	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  00047	eb 05		 jmp	 SHORT $LN58@CTR_ModePo
$LN7@CTR_ModePo:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  00049	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN58@CTR_ModePo:

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0004e	83 c4 04	 add	 esp, 4
  00051	8b 53 10	 mov	 edx, DWORD PTR [ebx+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00054	32 c0		 xor	 al, al
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00056	8b 73 14	 mov	 esi, DWORD PTR [ebx+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00059	8b fe		 mov	 edi, esi
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0005b	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00062	8b ca		 mov	 ecx, edx
  00064	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  00066	56		 push	 esi
  00067	83 fa 10	 cmp	 edx, 16			; 00000010H
  0006a	72 07		 jb	 SHORT $LN37@CTR_ModePo

; 109  : 			return AlignedDeallocate(p);

  0006c	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate
  00071	eb 05		 jmp	 SHORT $LN59@CTR_ModePo
$LN37@CTR_ModePo:

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  00073	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
$LN59@CTR_ModePo:
  00078	83 c4 04	 add	 esp, 4
  0007b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00085	59		 pop	 ecx
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	5b		 pop	 ebx
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
  0008d	cc		 int	 3
  0008e	cc		 int	 3
  0008f	cc		 int	 3
  00090	cc		 int	 3
  00091	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CTR_ModePolicy@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CTR_ModePolicy@CryptoPP@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CTR_ModePolicy@CryptoPP@@UAE@XZ ENDP			; CryptoPP::CTR_ModePolicy::~CTR_ModePolicy
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ?CanOperateKeystream@CTR_ModePolicy@CryptoPP@@MBE_NXZ
_TEXT	SEGMENT
?CanOperateKeystream@CTR_ModePolicy@CryptoPP@@MBE_NXZ PROC ; CryptoPP::CTR_ModePolicy::CanOperateKeystream, COMDAT
; _this$ = ecx

; 152  : 	bool CanOperateKeystream() const {return true;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?CanOperateKeystream@CTR_ModePolicy@CryptoPP@@MBE_NXZ ENDP ; CryptoPP::CTR_ModePolicy::CanOperateKeystream
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ?WriteKeystream@CTR_ModePolicy@CryptoPP@@MAEXPAEI@Z
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
_iterationCount$ = 12					; size = 4
?WriteKeystream@CTR_ModePolicy@CryptoPP@@MAEXPAEI@Z PROC ; CryptoPP::CTR_ModePolicy::WriteKeystream, COMDAT
; _this$ = ecx

; 151  : 		{OperateKeystream(WRITE_KEYSTREAM, buffer, NULL, iterationCount);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	ff 75 0c	 push	 DWORD PTR _iterationCount$[ebp]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	6a 00		 push	 0
  0000a	ff 75 08	 push	 DWORD PTR _buffer$[ebp]
  0000d	6a 04		 push	 4
  0000f	ff 50 1c	 call	 DWORD PTR [eax+28]
  00012	5d		 pop	 ebp
  00013	c2 08 00	 ret	 8
?WriteKeystream@CTR_ModePolicy@CryptoPP@@MAEXPAEI@Z ENDP ; CryptoPP::CTR_ModePolicy::WriteKeystream
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ?GetIterationsToBuffer@CTR_ModePolicy@CryptoPP@@MBEIXZ
_TEXT	SEGMENT
?GetIterationsToBuffer@CTR_ModePolicy@CryptoPP@@MBEIXZ PROC ; CryptoPP::CTR_ModePolicy::GetIterationsToBuffer, COMDAT
; _this$ = ecx

; 149  : 	unsigned int GetIterationsToBuffer() const {return m_cipher->OptimalNumberOfParallelBlocks();}

  00000	8b 49 f0	 mov	 ecx, DWORD PTR [ecx-16]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8d 49 04	 lea	 ecx, DWORD PTR [ecx+4]
  00009	ff 60 20	 jmp	 DWORD PTR [eax+32]
?GetIterationsToBuffer@CTR_ModePolicy@CryptoPP@@MBEIXZ ENDP ; CryptoPP::CTR_ModePolicy::GetIterationsToBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ?GetBytesPerIteration@CTR_ModePolicy@CryptoPP@@MBEIXZ
_TEXT	SEGMENT
?GetBytesPerIteration@CTR_ModePolicy@CryptoPP@@MBEIXZ PROC ; CryptoPP::CTR_ModePolicy::GetBytesPerIteration, COMDAT
; _this$ = ecx

; 148  : 	unsigned int GetBytesPerIteration() const {return BlockSize();}

  00000	8b 41 f8	 mov	 eax, DWORD PTR [ecx-8]
  00003	c3		 ret	 0
?GetBytesPerIteration@CTR_ModePolicy@CryptoPP@@MBEIXZ ENDP ; CryptoPP::CTR_ModePolicy::GetBytesPerIteration
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ?GetAlignment@CTR_ModePolicy@CryptoPP@@MBEIXZ
_TEXT	SEGMENT
?GetAlignment@CTR_ModePolicy@CryptoPP@@MBEIXZ PROC	; CryptoPP::CTR_ModePolicy::GetAlignment, COMDAT
; _this$ = ecx

; 147  : 	unsigned int GetAlignment() const {return m_cipher->OptimalDataAlignment();}

  00000	8b 49 f0	 mov	 ecx, DWORD PTR [ecx-16]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8d 49 04	 lea	 ecx, DWORD PTR [ecx+4]
  00009	ff 60 14	 jmp	 DWORD PTR [eax+20]
?GetAlignment@CTR_ModePolicy@CryptoPP@@MBEIXZ ENDP	; CryptoPP::CTR_ModePolicy::GetAlignment
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ?IVRequirement@CTR_ModePolicy@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ
_TEXT	SEGMENT
?IVRequirement@CTR_ModePolicy@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ PROC ; CryptoPP::CTR_ModePolicy::IVRequirement, COMDAT
; _this$ = ecx

; 141  : 	IV_Requirement IVRequirement() const {return RANDOM_IV;}

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?IVRequirement@CTR_ModePolicy@CryptoPP@@UBE?AW4IV_Requirement@SimpleKeyingInterface@2@XZ ENDP ; CryptoPP::CTR_ModePolicy::IVRequirement
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ?CipherIsRandomAccess@CTR_ModePolicy@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?CipherIsRandomAccess@CTR_ModePolicy@CryptoPP@@UBE_NXZ PROC ; CryptoPP::CTR_ModePolicy::CipherIsRandomAccess, COMDAT
; _this$ = ecx

; 140  : 	bool CipherIsRandomAccess() const {return true;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?CipherIsRandomAccess@CTR_ModePolicy@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::CTR_ModePolicy::CipherIsRandomAccess
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??1?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@UAE@XZ PROC ; CryptoPP::ModePolicyCommonTemplate<CryptoPP::AdditiveCipherAbstractPolicy>::~ModePolicyCommonTemplate<CryptoPP::AdditiveCipherAbstractPolicy>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00024	8b 71 14	 mov	 esi, DWORD PTR [ecx+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00027	32 c0		 xor	 al, al
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00029	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  0002c	8b fe		 mov	 edi, esi
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  0002e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00035	8b ca		 mov	 ecx, edx
  00037	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 108  : 		if (T_Align16 && n*sizeof(T) >= 16)

  00039	56		 push	 esi
  0003a	83 fa 10	 cmp	 edx, 16			; 00000010H
  0003d	72 19		 jb	 SHORT $LN10@ModePolicy

; 109  : 			return AlignedDeallocate(p);

  0003f	e8 00 00 00 00	 call	 ?AlignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::AlignedDeallocate

; 110  : #endif
; 111  : 
; 112  : 		UnalignedDeallocate(p);

  00044	83 c4 04	 add	 esp, 4
  00047	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00051	59		 pop	 ecx
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	8b e5		 mov	 esp, ebp
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN10@ModePolicy:
  00058	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0005d	83 c4 04	 add	 esp, 4
  00060	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00063	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006a	59		 pop	 ecx
  0006b	5f		 pop	 edi
  0006c	5e		 pop	 esi
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
  00071	cc		 int	 3
  00072	cc		 int	 3
  00073	cc		 int	 3
  00074	cc		 int	 3
  00075	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@UAE@XZ ENDP ; CryptoPP::ModePolicyCommonTemplate<CryptoPP::AdditiveCipherAbstractPolicy>::~ModePolicyCommonTemplate<CryptoPP::AdditiveCipherAbstractPolicy>
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ?CipherSetKey@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@EAEXABVNameValuePairs@2@PBEI@Z
_TEXT	SEGMENT
_defaultValue$ = 8					; size = 4
_params$ = 8						; size = 4
_key$ = 12						; size = 4
_length$ = 16						; size = 4
?CipherSetKey@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@EAEXABVNameValuePairs@2@PBEI@Z PROC ; CryptoPP::ModePolicyCommonTemplate<CryptoPP::AdditiveCipherAbstractPolicy>::CipherSetKey, COMDAT
; _this$ = ecx

; 88   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi

; 89   : 	m_cipher->SetKey(key, length, params);

  00007	8b 7d 08	 mov	 edi, DWORD PTR _params$[ebp]
  0000a	57		 push	 edi
  0000b	8b 4e f0	 mov	 ecx, DWORD PTR [esi-16]
  0000e	ff 75 10	 push	 DWORD PTR _length$[ebp]
  00011	ff 75 0c	 push	 DWORD PTR _key$[ebp]
  00014	8b 01		 mov	 eax, DWORD PTR [ecx]
  00016	ff 50 18	 call	 DWORD PTR [eax+24]

; 90   : 	ResizeBuffers();

  00019	8b 46 e8	 mov	 eax, DWORD PTR [esi-24]
  0001c	8d 4e e8	 lea	 ecx, DWORD PTR [esi-24]
  0001f	ff 50 40	 call	 DWORD PTR [eax+64]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 264  : 		return GetVoidValue(name, typeid(T), &value);

  00022	8b 07		 mov	 eax, DWORD PTR [edi]
  00024	8d 4d 08	 lea	 ecx, DWORD PTR _defaultValue$[ebp]
  00027	51		 push	 ecx
  00028	68 00 00 00 00	 push	 OFFSET ??_R0H@8
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0N@GKFFKNHD@FeedbackSize@
  00032	8b cf		 mov	 ecx, edi

; 287  : 		{return GetValueWithDefault(name, defaultValue);}

  00034	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _defaultValue$[ebp], 0

; 264  : 		return GetVoidValue(name, typeid(T), &value);

  0003b	ff 50 04	 call	 DWORD PTR [eax+4]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 92   : 	SetFeedbackSize(feedbackSize);

  0003e	8b 46 e8	 mov	 eax, DWORD PTR [esi-24]
  00041	8d 4e e8	 lea	 ecx, DWORD PTR [esi-24]
  00044	ff 75 08	 push	 DWORD PTR _defaultValue$[ebp]
  00047	ff 50 3c	 call	 DWORD PTR [eax+60]
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi

; 93   : }

  0004c	5d		 pop	 ebp
  0004d	c2 0c 00	 ret	 12			; 0000000cH
?CipherSetKey@?$ModePolicyCommonTemplate@UAdditiveCipherAbstractPolicy@CryptoPP@@@CryptoPP@@EAEXABVNameValuePairs@2@PBEI@Z ENDP ; CryptoPP::ModePolicyCommonTemplate<CryptoPP::AdditiveCipherAbstractPolicy>::CipherSetKey
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ?ResizeBuffers@CipherModeBase@CryptoPP@@MAEXXZ
_TEXT	SEGMENT
?ResizeBuffers@CipherModeBase@CryptoPP@@MAEXXZ PROC	; CryptoPP::CipherModeBase::ResizeBuffers, COMDAT
; _this$ = ecx

; 71   : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	57		 push	 edi

; 72   : 		m_register.New(m_cipher->BlockSize());

  00004	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00007	83 c1 04	 add	 ecx, 4
  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	ff 50 10	 call	 DWORD PTR [eax+16]
  0000f	83 c6 0c	 add	 esi, 12			; 0000000cH
  00012	8b f8		 mov	 edi, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 117  : 		return StandardReallocate(*this, p, oldSize, newSize, preserve);

  00014	6a 00		 push	 0
  00016	57		 push	 edi
  00017	ff 76 04	 push	 DWORD PTR [esi+4]
  0001a	ff 76 08	 push	 DWORD PTR [esi+8]
  0001d	56		 push	 esi
  0001e	e8 00 00 00 00	 call	 ??$StandardReallocate@EV?$AllocatorWithCleanup@E$00@CryptoPP@@@CryptoPP@@YAPAEAAV?$AllocatorWithCleanup@E$00@0@PAEII_N@Z ; CryptoPP::StandardReallocate<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,1> >
  00023	83 c4 14	 add	 esp, 20			; 00000014H

; 364  : 		m_size = newSize;

  00026	89 7e 04	 mov	 DWORD PTR [esi+4], edi
  00029	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h

; 73   : 	}

  0002e	c3		 ret	 0
?ResizeBuffers@CipherModeBase@CryptoPP@@MAEXXZ ENDP	; CryptoPP::CipherModeBase::ResizeBuffers
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z
_TEXT	SEGMENT
$T2 = -80						; size = 40
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_feedbackSize$ = 8					; size = 4
?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z PROC	; CryptoPP::CipherModeBase::SetFeedbackSize, COMDAT
; _this$ = ecx

; 66   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 67   : 		if (!(feedbackSize == 0 || feedbackSize == BlockSize()))

  00028	8b 45 08	 mov	 eax, DWORD PTR _feedbackSize$[ebp]
  0002b	85 c0		 test	 eax, eax
  0002d	74 05		 je	 SHORT $LN2@SetFeedbac
  0002f	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  00032	75 1b		 jne	 SHORT $LN8@SetFeedbac
$LN2@SetFeedbac:

; 69   : 	}

  00034	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00037	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0003e	59		 pop	 ecx
  0003f	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00042	33 cd		 xor	 ecx, ebp
  00044	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
$LN8@SetFeedbac:

; 68   : 			throw InvalidArgument("CipherModeBase: feedback size cannot be specified for this cipher mode");

  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_0EH@FMNEDLJE@CipherModeBase?3?5feedback?5size?5c@
  00054	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00057	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005c	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  0005f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00066	50		 push	 eax
  00067	8d 4d b0	 lea	 ecx, DWORD PTR $T2[ebp]
  0006a	e8 00 00 00 00	 call	 ??0InvalidArgument@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CryptoPP::InvalidArgument::InvalidArgument
  0006f	68 00 00 00 00	 push	 OFFSET __TI3?AVInvalidArgument@CryptoPP@@
  00074	8d 45 b0	 lea	 eax, DWORD PTR $T2[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN6@SetFeedbac:
  0007d	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetFeedbackSize@CipherModeBase@CryptoPP@@MAEXI@Z ENDP	; CryptoPP::CipherModeBase::SetFeedbackSize
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ?IVSize@CipherModeBase@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?IVSize@CipherModeBase@CryptoPP@@UBEIXZ PROC		; CryptoPP::CipherModeBase::IVSize, COMDAT
; _this$ = ecx

; 42   : 	unsigned int IVSize() const {return BlockSize();}

  00000	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00003	c3		 ret	 0
?IVSize@CipherModeBase@CryptoPP@@UBEIXZ ENDP		; CryptoPP::CipherModeBase::IVSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ?IsValidKeyLength@CipherModeBase@CryptoPP@@UBE_NI@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
?IsValidKeyLength@CipherModeBase@CryptoPP@@UBE_NI@Z PROC ; CryptoPP::CipherModeBase::IsValidKeyLength, COMDAT
; _this$ = ecx

; 38   : 	bool IsValidKeyLength(size_t n) const {return m_cipher->IsValidKeyLength(n);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  0000b	5d		 pop	 ebp
  0000c	ff e0		 jmp	 eax
?IsValidKeyLength@CipherModeBase@CryptoPP@@UBE_NI@Z ENDP ; CryptoPP::CipherModeBase::IsValidKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ?GetValidKeyLength@CipherModeBase@CryptoPP@@UBEII@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
?GetValidKeyLength@CipherModeBase@CryptoPP@@UBEII@Z PROC ; CryptoPP::CipherModeBase::GetValidKeyLength, COMDAT
; _this$ = ecx

; 37   : 	size_t GetValidKeyLength(size_t n) const {return m_cipher->GetValidKeyLength(n);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	5d		 pop	 ebp
  00009	ff 60 10	 jmp	 DWORD PTR [eax+16]
?GetValidKeyLength@CipherModeBase@CryptoPP@@UBEII@Z ENDP ; CryptoPP::CipherModeBase::GetValidKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ?DefaultKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?DefaultKeyLength@CipherModeBase@CryptoPP@@UBEIXZ PROC	; CryptoPP::CipherModeBase::DefaultKeyLength, COMDAT
; _this$ = ecx

; 36   : 	size_t DefaultKeyLength() const {return m_cipher->DefaultKeyLength();}

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	ff 60 0c	 jmp	 DWORD PTR [eax+12]
?DefaultKeyLength@CipherModeBase@CryptoPP@@UBEIXZ ENDP	; CryptoPP::CipherModeBase::DefaultKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ?MaxKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MaxKeyLength@CipherModeBase@CryptoPP@@UBEIXZ PROC	; CryptoPP::CipherModeBase::MaxKeyLength, COMDAT
; _this$ = ecx

; 35   : 	size_t MaxKeyLength() const {return m_cipher->MaxKeyLength();}

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	ff 60 08	 jmp	 DWORD PTR [eax+8]
?MaxKeyLength@CipherModeBase@CryptoPP@@UBEIXZ ENDP	; CryptoPP::CipherModeBase::MaxKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\modes.h
;	COMDAT ?MinKeyLength@CipherModeBase@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MinKeyLength@CipherModeBase@CryptoPP@@UBEIXZ PROC	; CryptoPP::CipherModeBase::MinKeyLength, COMDAT
; _this$ = ecx

; 34   : 	size_t MinKeyLength() const {return m_cipher->MinKeyLength();}

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	ff 60 04	 jmp	 DWORD PTR [eax+4]
?MinKeyLength@CipherModeBase@CryptoPP@@UBEIXZ ENDP	; CryptoPP::CipherModeBase::MinKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??1AlgorithmParameters@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
??1AlgorithmParameters@CryptoPP@@UAE@XZ PROC		; CryptoPP::AlgorithmParameters::~AlgorithmParameters, COMDAT
; _this$ = ecx
  00000	83 c1 04	 add	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>
??1AlgorithmParameters@CryptoPP@@UAE@XZ ENDP		; CryptoPP::AlgorithmParameters::~AlgorithmParameters
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??_G?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_G?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??_G?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UAEPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00026	8b 56 24	 mov	 edx, DWORD PTR [esi+36]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00029	32 c0		 xor	 al, al
  0002b	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  0002e	8b fa		 mov	 edi, edx
  00030	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  00032	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00033	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  0003a	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003f	83 c4 04	 add	 esp, 4
  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ??1AlgorithmParametersBase@CryptoPP@@UAE@XZ ; CryptoPP::AlgorithmParametersBase::~AlgorithmParametersBase
  00049	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0004d	74 0b		 je	 SHORT $LN34@scalar
  0004f	6a 28		 push	 40			; 00000028H
  00051	56		 push	 esi
  00052	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00057	83 c4 08	 add	 esp, 8
$LN34@scalar:
  0005a	8b c6		 mov	 eax, esi
  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c2 04 00	 ret	 4
  0006f	cc		 int	 3
  00070	cc		 int	 3
  00071	cc		 int	 3
  00072	cc		 int	 3
  00073	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_G?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UAEPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??_G?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UAEPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??_G?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::`scalar deleting destructor'
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
;	COMDAT ?MoveInto@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UBEXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T2 = 8							; size = 4
_buffer$ = 8						; size = 4
?MoveInto@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UBEXPAX@Z PROC ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::MoveInto, COMDAT
; _this$ = ecx

; 321  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?MoveInto@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UBEXPAX@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx

; 322  : 		AlgorithmParametersTemplate<T>* p = new(buffer) AlgorithmParametersTemplate<T>(*this);

  00026	8b 7d 08	 mov	 edi, DWORD PTR _buffer$[ebp]

; 260  : 	{

  00029	8d 4f 0c	 lea	 ecx, DWORD PTR [edi+12]

; 322  : 		AlgorithmParametersTemplate<T>* p = new(buffer) AlgorithmParametersTemplate<T>(*this);

  0002c	89 7d 08	 mov	 DWORD PTR $T2[ebp], edi

; 260  : 	{

  0002f	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7AlgorithmParametersBase@CryptoPP@@6B@
  00035	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00038	89 47 04	 mov	 DWORD PTR [edi+4], eax
  0003b	0f b6 46 08	 movzx	 eax, BYTE PTR [esi+8]
  0003f	88 47 08	 mov	 BYTE PTR [edi+8], al
  00042	0f b6 46 09	 movzx	 eax, BYTE PTR [esi+9]
  00046	88 47 09	 mov	 BYTE PTR [edi+9], al
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h

; 20   : 	explicit member_ptr(T *p = NULL) : m_p(p) {}

  00049	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 35   : 		T *old_p = m_p;

  0004f	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 261  : 		m_next.reset(const_cast<AlgorithmParametersBase &>(x).m_next.release());

  00052	50		 push	 eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h

; 36   : 		m_p = 0;

  00053	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 261  : 		m_next.reset(const_cast<AlgorithmParametersBase &>(x).m_next.release());

  0005a	e8 00 00 00 00	 call	 ?reset@?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAEXPAVAlgorithmParametersBase@2@@Z ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::reset

; 262  : 		x.m_used = true;

  0005f	c6 46 09 01	 mov	 BYTE PTR [esi+9], 1
  00063	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00066	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006d	50		 push	 eax
  0006e	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00071	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@6B@
  00077	e8 00 00 00 00	 call	 ??0ConstByteArrayParameter@CryptoPP@@QAE@ABV01@@Z

; 323  : 	}

  0007c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00086	59		 pop	 ecx
  00087	5f		 pop	 edi
  00088	5e		 pop	 esi
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?MoveInto@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UBEXPAX@Z$0:
  00000	8b 4d 08	 mov	 ecx, DWORD PTR $T2[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1AlgorithmParametersBase@CryptoPP@@UAE@XZ ; CryptoPP::AlgorithmParametersBase::~AlgorithmParametersBase
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?MoveInto@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UBEXPAX@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?MoveInto@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UBEXPAX@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?MoveInto@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UBEXPAX@Z ENDP ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::MoveInto
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
;	COMDAT ?AssignValue@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UBEXPBDABVtype_info@@PAX@Z
_TEXT	SEGMENT
_name$ = 8						; size = 4
_valueType$ = 12					; size = 4
_pValue$ = 16						; size = 4
?AssignValue@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UBEXPBDABVtype_info@@PAX@Z PROC ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::AssignValue, COMDAT
; _this$ = ecx

; 311  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 313  : 		if (!(g_pAssignIntToInteger != NULL && typeid(T) == typeid(int) && g_pAssignIntToInteger(valueType, pValue, &m_value)))

  00003	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_pAssignIntToInteger@CryptoPP@@3P6A_NABVtype_info@@PAXPBX@ZA, 0 ; CryptoPP::g_pAssignIntToInteger
  0000a	53		 push	 ebx
  0000b	8b 5d 0c	 mov	 ebx, DWORD PTR _valueType$[ebp]
  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	8b 7d 10	 mov	 edi, DWORD PTR _pValue$[ebp]
  00013	8b f1		 mov	 esi, ecx
  00015	74 2d		 je	 SHORT $LN3@AssignValu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h

; 83   :         return __std_type_info_compare(&_Data, &_Other._Data) == 0;

  00017	68 04 00 00 00	 push	 OFFSET ??_R0H@8+4
  0001c	68 04 00 00 00	 push	 OFFSET ??_R0?AVConstByteArrayParameter@CryptoPP@@@8+4
  00021	e8 00 00 00 00	 call	 ___std_type_info_compare
  00026	83 c4 08	 add	 esp, 8
  00029	85 c0		 test	 eax, eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 313  : 		if (!(g_pAssignIntToInteger != NULL && typeid(T) == typeid(int) && g_pAssignIntToInteger(valueType, pValue, &m_value)))

  0002b	75 17		 jne	 SHORT $LN3@AssignValu
  0002d	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00030	50		 push	 eax
  00031	57		 push	 edi
  00032	53		 push	 ebx
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pAssignIntToInteger@CryptoPP@@3P6A_NABVtype_info@@PAXPBX@ZA ; CryptoPP::g_pAssignIntToInteger
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	84 c0		 test	 al, al
  0003e	0f 85 83 00 00
	00		 jne	 $LN24@AssignValu
$LN3@AssignValu:

; 314  : 		{
; 315  : 			NameValuePairs::ThrowIfTypeMismatch(name, typeid(T), valueType);

  00044	53		 push	 ebx
  00045	68 00 00 00 00	 push	 OFFSET ??_R0?AVConstByteArrayParameter@CryptoPP@@@8
  0004a	ff 75 08	 push	 DWORD PTR _name$[ebp]
  0004d	e8 00 00 00 00	 call	 ?ThrowIfTypeMismatch@NameValuePairs@CryptoPP@@SAXPBDABVtype_info@@1@Z ; CryptoPP::NameValuePairs::ThrowIfTypeMismatch
  00052	8a 46 10	 mov	 al, BYTE PTR [esi+16]
  00055	8d 5e 1c	 lea	 ebx, DWORD PTR [esi+28]
  00058	88 07		 mov	 BYTE PTR [edi], al
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005d	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00060	89 47 04	 mov	 DWORD PTR [edi+4], eax
  00063	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00066	89 47 08	 mov	 DWORD PTR [edi+8], eax
  00069	83 c7 0c	 add	 edi, 12			; 0000000cH
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 319  : 		if (this != &t)

  0006c	3b fb		 cmp	 edi, ebx
  0006e	74 57		 je	 SHORT $LN24@AssignValu

; 320  : 		{
; 321  : 			New(t.m_size);

  00070	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]

; 117  : 		return StandardReallocate(*this, p, oldSize, newSize, preserve);

  00073	6a 00		 push	 0
  00075	56		 push	 esi
  00076	ff 77 04	 push	 DWORD PTR [edi+4]
  00079	ff 77 08	 push	 DWORD PTR [edi+8]
  0007c	57		 push	 edi
  0007d	e8 00 00 00 00	 call	 ??$StandardReallocate@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@YAPAEAAV?$AllocatorWithCleanup@E$0A@@0@PAEII_N@Z ; CryptoPP::StandardReallocate<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
  00082	83 c4 14	 add	 esp, 20			; 00000014H

; 363  : 		m_ptr = m_alloc.reallocate(m_ptr, m_size, newSize, false);

  00085	89 47 08	 mov	 DWORD PTR [edi+8], eax

; 364  : 		m_size = newSize;

  00088	89 77 04	 mov	 DWORD PTR [edi+4], esi

; 322  : 			memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));

  0008b	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 42   :         if (_SourceSize == 0)

  0008e	85 f6		 test	 esi, esi
  00090	74 35		 je	 SHORT $LN24@AssignValu

; 43   :         {
; 44   :             return 0;
; 45   :         }
; 46   : 
; 47   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  00092	85 c0		 test	 eax, eax
  00094	74 21		 je	 SHORT $LN27@AssignValu

; 48   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  00096	56		 push	 esi
  00097	85 c9		 test	 ecx, ecx
  00099	74 11		 je	 SHORT $LN22@AssignValu

; 51   : 
; 52   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);
; 53   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);
; 54   : 
; 55   :             // Unreachable, but required to suppress /analyze warnings:
; 56   :             return EINVAL;
; 57   :         }
; 58   : #pragma warning(suppress:4996) // Deprecation
; 59   :         memcpy(_Destination, _Source, _SourceSize);

  0009b	51		 push	 ecx
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 _memcpy
  000a2	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a5	5f		 pop	 edi
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 318  : 	}

  000a6	5e		 pop	 esi
  000a7	5b		 pop	 ebx
  000a8	5d		 pop	 ebp
  000a9	c2 0c 00	 ret	 12			; 0000000cH
$LN22@AssignValu:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 50   :             memset(_Destination, 0, _DestinationSize);

  000ac	6a 00		 push	 0
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 _memset
  000b4	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN27@AssignValu:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 318  : 	}

  000b7	e8 00 00 00 00	 call	 __errno
  000bc	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  000c2	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN24@AssignValu:
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx
  000ca	5d		 pop	 ebp
  000cb	c2 0c 00	 ret	 12			; 0000000cH
?AssignValue@?$AlgorithmParametersTemplate@VConstByteArrayParameter@CryptoPP@@@CryptoPP@@UBEXPBDABVtype_info@@PAX@Z ENDP ; CryptoPP::AlgorithmParametersTemplate<CryptoPP::ConstByteArrayParameter>::AssignValue
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_GAlgorithmParametersBase@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GAlgorithmParametersBase@CryptoPP@@UAEPAXI@Z PROC	; CryptoPP::AlgorithmParametersBase::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1AlgorithmParametersBase@CryptoPP@@UAE@XZ ; CryptoPP::AlgorithmParametersBase::~AlgorithmParametersBase
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 0b		 je	 SHORT $LN4@scalar
  00011	6a 10		 push	 16			; 00000010H
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00019	83 c4 08	 add	 esp, 8
$LN4@scalar:
  0001c	8b c6		 mov	 eax, esi
  0001e	5e		 pop	 esi
  0001f	5d		 pop	 ebp
  00020	c2 04 00	 ret	 4
??_GAlgorithmParametersBase@CryptoPP@@UAEPAXI@Z ENDP	; CryptoPP::AlgorithmParametersBase::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h
;	COMDAT ?reset@?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAEXPAVAlgorithmParametersBase@2@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?reset@?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAEXPAVAlgorithmParametersBase@2@@Z PROC ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::reset, COMDAT
; _this$ = ecx

; 50   : template <class T> void member_ptr<T>::reset(T *p) {delete m_p; m_p = p;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00008	85 c9		 test	 ecx, ecx
  0000a	74 06		 je	 SHORT $LN5@reset
  0000c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000e	6a 01		 push	 1
  00010	ff 10		 call	 DWORD PTR [eax]
$LN5@reset:
  00012	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00015	89 06		 mov	 DWORD PTR [esi], eax
  00017	5e		 pop	 esi
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?reset@?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAEXPAVAlgorithmParametersBase@2@@Z ENDP ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::reset
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\smartptr.h
;	COMDAT ??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ PROC ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>, COMDAT
; _this$ = ecx

; 49   : template <class T> member_ptr<T>::~member_ptr() {delete m_p;}

  00000	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00002	85 c9		 test	 ecx, ecx
  00004	74 06		 je	 SHORT $LN3@member_ptr
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	6a 01		 push	 1
  0000a	ff 10		 call	 DWORD PTR [eax]
$LN3@member_ptr:
  0000c	c3		 ret	 0
??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ ENDP ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
;	COMDAT ??1AlgorithmParametersBase@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
$T2 = -56						; size = 40
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
??1AlgorithmParametersBase@CryptoPP@@UAE@XZ PROC	; CryptoPP::AlgorithmParametersBase::~AlgorithmParametersBase, COMDAT
; _this$ = ecx

; 269  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1AlgorithmParametersBase@CryptoPP@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	8b f1		 mov	 esi, ecx
  0002b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7AlgorithmParametersBase@CryptoPP@@6B@

; 270  : #ifdef CRYPTOPP_UNCAUGHT_EXCEPTION_AVAILABLE
; 271  : 		if (!std::uncaught_exception())

  00031	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  00036	84 c0		 test	 al, al
  00038	75 0a		 jne	 SHORT $LN3@AlgorithmP

; 272  : #else
; 273  : 		try
; 274  : #endif
; 275  : 		{
; 276  : 			if (m_throwIfNotUsed && !m_used)

  0003a	38 46 08	 cmp	 BYTE PTR [esi+8], al
  0003d	74 05		 je	 SHORT $LN3@AlgorithmP
  0003f	38 46 09	 cmp	 BYTE PTR [esi+9], al
  00042	74 22		 je	 SHORT $LN8@AlgorithmP
$LN3@AlgorithmP:

; 278  : 		}
; 279  : #ifndef CRYPTOPP_UNCAUGHT_EXCEPTION_AVAILABLE
; 280  : 		catch(...)
; 281  : 		{
; 282  : 		}
; 283  : #endif
; 284  : 	}

  00044	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00047	e8 00 00 00 00	 call	 ??1?$member_ptr@VAlgorithmParametersBase@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::member_ptr<CryptoPP::AlgorithmParametersBase>::~member_ptr<CryptoPP::AlgorithmParametersBase>
  0004c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00056	59		 pop	 ecx
  00057	5e		 pop	 esi
  00058	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005b	33 cd		 xor	 ecx, ebp
  0005d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
$LN8@AlgorithmP:

; 277  : 				throw ParameterNotUsed(m_name);

  00066	ff 76 04	 push	 DWORD PTR [esi+4]
  00069	8d 4d c8	 lea	 ecx, DWORD PTR $T2[ebp]
  0006c	e8 00 00 00 00	 call	 ??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@PBD@Z ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::ParameterNotUsed
  00071	68 00 00 00 00	 push	 OFFSET __TI3?AVParameterNotUsed@AlgorithmParametersBase@CryptoPP@@
  00076	8d 45 c8	 lea	 eax, DWORD PTR $T2[ebp]
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN6@AlgorithmP:
  0007f	cc		 int	 3
  00080	cc		 int	 3
  00081	cc		 int	 3
  00082	cc		 int	 3
  00083	cc		 int	 3
  00084	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1AlgorithmParametersBase@CryptoPP@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a cc	 mov	 ecx, DWORD PTR [edx-52]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00016	33 c8		 xor	 ecx, eax
  00018	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001d	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1AlgorithmParametersBase@CryptoPP@@UAE@XZ
  00022	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1AlgorithmParametersBase@CryptoPP@@UAE@XZ ENDP	; CryptoPP::AlgorithmParametersBase::~AlgorithmParametersBase
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_GParameterNotUsed@AlgorithmParametersBase@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GParameterNotUsed@AlgorithmParametersBase@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 132  : 	virtual ~Exception() throw() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0000c	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0000f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 0d		 jb	 SHORT $LN13@scalar

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	50		 push	 eax
  00016	ff 76 10	 push	 DWORD PTR [esi+16]
  00019	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001e	83 c4 08	 add	 esp, 8
$LN13@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00021	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00024	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00032	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00036	50		 push	 eax
  00037	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0003d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00042	83 c4 04	 add	 esp, 4
  00045	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00049	74 0b		 je	 SHORT $LN21@scalar
  0004b	6a 28		 push	 40			; 00000028H
  0004d	56		 push	 esi
  0004e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00053	83 c4 08	 add	 esp, 8
$LN21@scalar:
  00056	8b c6		 mov	 eax, esi
  00058	5e		 pop	 esi
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
??_GParameterNotUsed@AlgorithmParametersBase@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@ABV012@@Z PROC ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::ParameterNotUsed, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@ABV012@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0002a	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0002d	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00030	0f 57 c0	 xorps	 xmm0, xmm0

; 72   :     {

  00033	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7exception@std@@6B@

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  00039	50		 push	 eax
  0003a	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  0003e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ___std_exception_copy
  00047	83 c4 08	 add	 esp, 8
  0004a	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7Exception@CryptoPP@@6B@
  00050	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00053	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00056	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  00059	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0005c	50		 push	 eax
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00064	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00069	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@6B@
  0006f	8b c7		 mov	 eax, edi
  00071	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007b	59		 pop	 ecx
  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@ABV012@@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@ABV012@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@ABV012@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@ABV012@@Z ENDP ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::ParameterNotUsed
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
??1ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@UAE@XZ PROC ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::~ParameterNotUsed, COMDAT
; _this$ = ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 132  : 	virtual ~Exception() throw() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00009	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0000c	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 0d		 jb	 SHORT $LN9@ParameterN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00011	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00012	50		 push	 eax
  00013	ff 76 10	 push	 DWORD PTR [esi+16]
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8
$LN9@ParameterN:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  0001e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00021	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00028	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0002f	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00033	50		 push	 eax
  00034	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0003a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0003f	83 c4 04	 add	 esp, 4
  00042	5e		 pop	 esi
  00043	c3		 ret	 0
??1ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@UAE@XZ ENDP ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::~ParameterNotUsed
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h
;	COMDAT ??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@PBD@Z
_TEXT	SEGMENT
_this$GSCopy$ = -96					; size = 4
__New_ptr$2 = -92					; size = 4
_this$ = -92						; size = 4
$T3 = -88						; size = 24
$T4 = -64						; size = 24
$T5 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@PBD@Z PROC ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::ParameterNotUsed, COMDAT
; _this$ = ecx

; 254  : 		ParameterNotUsed(const char *name) : Exception(OTHER_ERROR, std::string("AlgorithmParametersBase: parameter \"") + name + "\" not used") {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 54	 sub	 esp, 84			; 00000054H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	50		 push	 eax
  00021	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00024	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002a	8b f9		 mov	 edi, ecx
  0002c	89 7d a4	 mov	 DWORD PTR _this$[ebp], edi
  0002f	8b 75 08	 mov	 esi, DWORD PTR _name$[ebp]
  00032	89 7d a0	 mov	 DWORD PTR _this$GSCopy$[ebp], edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00035	6a 30		 push	 48			; 00000030H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4377 :         _Mypair._Myval2._Mysize = 0;

  00037	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0003e	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00045	c6 45 d8 00	 mov	 BYTE PTR $T5[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00049	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0004e	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CF@BLINCPFB@AlgorithmParametersBase?3?5parame@

; 4312 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00055	8b c8		 mov	 ecx, eax

; 4313 :         _Mypair._Myval2._Orphan_all();
; 4314 :         _Mypair._Myval2._Mysize = _New_size;

  00057	c7 45 e8 24 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 36 ; 00000024H

; 4315 :         _Mypair._Myval2._Myres  = _New_capacity;

  0005e	c7 45 ec 2f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 47 ; 0000002fH
  00065	89 4d a4	 mov	 DWORD PTR __New_ptr$2[ebp], ecx

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00068	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  0006b	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CF@BLINCPFB@AlgorithmParametersBase?3?5parame@+16
  00072	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0
  00076	a1 20 00 00 00	 mov	 eax, DWORD PTR ??_C@_0CF@BLINCPFB@AlgorithmParametersBase?3?5parame@+32
  0007b	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 4321 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  0007e	8d 45 a4	 lea	 eax, DWORD PTR __New_ptr$2[ebp]
  00081	50		 push	 eax
  00082	8d 45 d8	 lea	 eax, DWORD PTR $T5[ebp]

; 3056 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00085	c6 41 24 00	 mov	 BYTE PTR [ecx+36], 0

; 4321 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 254  : 		ParameterNotUsed(const char *name) : Exception(OTHER_ERROR, std::string("AlgorithmParametersBase: parameter \"") + name + "\" not used") {}

  0008f	56		 push	 esi
  00090	8d 45 d8	 lea	 eax, DWORD PTR $T5[ebp]
  00093	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0009a	50		 push	 eax
  0009b	8d 45 a8	 lea	 eax, DWORD PTR $T3[ebp]
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  000a4	68 00 00 00 00	 push	 OFFSET ??_C@_0L@IAABKFFP@?$CC?5not?5used@
  000a9	50		 push	 eax
  000aa	8d 45 c0	 lea	 eax, DWORD PTR $T4[ebp]
  000ad	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  000b7	83 c4 24	 add	 esp, 36			; 00000024H
  000ba	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 53   :         : _Data()

  000bd	66 0f d6 47 04	 movq	 QWORD PTR [edi+4], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 131  : 	explicit Exception(ErrorType errorType, const std::string &s) : m_errorType(errorType), m_what(s) {}

  000c2	50		 push	 eax
  000c3	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  000c6	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000ca	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7Exception@CryptoPP@@6B@
  000d0	c7 47 0c 06 00
	00 00		 mov	 DWORD PTR [edi+12], 6
  000d7	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  000dc	8b 45 d4	 mov	 eax, DWORD PTR $T4[ebp+20]
  000df	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  000e2	72 0d		 jb	 SHORT $LN66@ParameterN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  000e4	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e5	50		 push	 eax
  000e6	ff 75 c0	 push	 DWORD PTR $T4[ebp]
  000e9	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  000ee	83 c4 08	 add	 esp, 8
$LN66@ParameterN:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  000f1	8b 45 bc	 mov	 eax, DWORD PTR $T3[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  000f4	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000fb	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00102	c6 45 c0 00	 mov	 BYTE PTR $T4[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  00106	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00109	72 0d		 jb	 SHORT $LN76@ParameterN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0010b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0010c	50		 push	 eax
  0010d	ff 75 a8	 push	 DWORD PTR $T3[ebp]
  00110	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00115	83 c4 08	 add	 esp, 8
$LN76@ParameterN:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00118	8b 4d ec	 mov	 ecx, DWORD PTR $T5[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  0011b	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00122	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00129	c6 45 a8 00	 mov	 BYTE PTR $T3[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  0012d	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00130	72 0d		 jb	 SHORT $LN92@ParameterN

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00132	41		 inc	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00133	51		 push	 ecx
  00134	ff 75 d8	 push	 DWORD PTR $T5[ebp]
  00137	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0013c	83 c4 08	 add	 esp, 8
$LN92@ParameterN:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\algparam.h

; 254  : 		ParameterNotUsed(const char *name) : Exception(OTHER_ERROR, std::string("AlgorithmParametersBase: parameter \"") + name + "\" not used") {}

  0013f	8b c7		 mov	 eax, edi
  00141	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@6B@
  00147	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0014a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00151	59		 pop	 ecx
  00152	5f		 pop	 edi
  00153	5e		 pop	 esi
  00154	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00157	33 cd		 xor	 ecx, ebp
  00159	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0015e	8b e5		 mov	 esp, ebp
  00160	5d		 pop	 ebp
  00161	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@PBD@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@PBD@Z$1:
  00008	8d 4d a8	 lea	 ecx, DWORD PTR $T3[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@PBD@Z$2:
  00010	8d 4d c0	 lea	 ecx, DWORD PTR $T4[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@PBD@Z$6:
  00018	8b 4d a0	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00020	cc		 int	 3
  00021	cc		 int	 3
  00022	cc		 int	 3
  00023	cc		 int	 3
  00024	cc		 int	 3
__ehhandler$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@PBD@Z:
  00025	90		 npad	 1
  00026	90		 npad	 1
  00027	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002e	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  00031	33 c8		 xor	 ecx, eax
  00033	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00038	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0003b	33 c8		 xor	 ecx, eax
  0003d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00042	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@PBD@Z
  00047	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ParameterNotUsed@AlgorithmParametersBase@CryptoPP@@QAE@PBD@Z ENDP ; CryptoPP::AlgorithmParametersBase::ParameterNotUsed::ParameterNotUsed
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
;	COMDAT ??0ConstByteArrayParameter@CryptoPP@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0ConstByteArrayParameter@CryptoPP@@QAE@ABV01@@Z PROC	; CryptoPP::ConstByteArrayParameter::ConstByteArrayParameter, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR ___that$[ebp]
  0000b	89 75 fc	 mov	 DWORD PTR _this$[ebp], esi
  0000e	8a 07		 mov	 al, BYTE PTR [edi]
  00010	88 06		 mov	 BYTE PTR [esi], al
  00012	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00015	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00018	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0001b	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0001e	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00021	89 46 10	 mov	 DWORD PTR [esi+16], eax

; 92   : 		if (n == 0)

  00024	85 c0		 test	 eax, eax
  00026	75 0d		 jne	 SHORT $LN7@ConstByteA

; 93   : 			return NULL;

  00028	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0002b	8b c6		 mov	 eax, esi
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
$LN7@ConstByteA:

; 94   : 
; 95   : #if CRYPTOPP_BOOL_ALIGN16_ENABLED
; 96   : 		if (T_Align16 && n*sizeof(T) >= 16)
; 97   : 			return (pointer)AlignedAllocate(n*sizeof(T));
; 98   : #endif
; 99   : 
; 100  : 		return (pointer)UnalignedAllocate(n*sizeof(T));

  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ?UnalignedAllocate@CryptoPP@@YAPAXI@Z ; CryptoPP::UnalignedAllocate
  0003b	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0003e	83 c4 04	 add	 esp, 4

; 249  : 		: m_size(t.m_size) {m_ptr = m_alloc.allocate(m_size, NULL); memcpy_s(m_ptr, m_size*sizeof(T), t.m_ptr, m_size*sizeof(T));}

  00041	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00044	8b 57 14	 mov	 edx, DWORD PTR [edi+20]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 42   :         if (_SourceSize == 0)

  00047	85 c9		 test	 ecx, ecx
  00049	74 38		 je	 SHORT $LN18@ConstByteA

; 43   :         {
; 44   :             return 0;
; 45   :         }
; 46   : 
; 47   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  0004b	85 c0		 test	 eax, eax
  0004d	74 24		 je	 SHORT $LN19@ConstByteA

; 48   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  0004f	51		 push	 ecx
  00050	85 d2		 test	 edx, edx
  00052	74 14		 je	 SHORT $LN14@ConstByteA

; 53   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);
; 54   : 
; 55   :             // Unreachable, but required to suppress /analyze warnings:
; 56   :             return EINVAL;
; 57   :         }
; 58   : #pragma warning(suppress:4996) // Deprecation
; 59   :         memcpy(_Destination, _Source, _SourceSize);

  00054	52		 push	 edx
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 _memcpy
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	8b c6		 mov	 eax, esi
  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
$LN14@ConstByteA:

; 49   :         {
; 50   :             memset(_Destination, 0, _DestinationSize);

  00068	6a 00		 push	 0
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 _memset
  00070	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN19@ConstByteA:

; 51   : 
; 52   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);

  00073	e8 00 00 00 00	 call	 __errno
  00078	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  0007e	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN18@ConstByteA:
  00083	5f		 pop	 edi
  00084	8b c6		 mov	 eax, esi
  00086	5e		 pop	 esi
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 04 00	 ret	 4
??0ConstByteArrayParameter@CryptoPP@@QAE@ABV01@@Z ENDP	; CryptoPP::ConstByteArrayParameter::ConstByteArrayParameter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??1ConstByteArrayParameter@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1ConstByteArrayParameter@CryptoPP@@QAE@XZ PROC	; CryptoPP::ConstByteArrayParameter::~ConstByteArrayParameter, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1ConstByteArrayParameter@CryptoPP@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	57		 push	 edi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00023	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00026	32 c0		 xor	 al, al
  00028	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  0002b	8b fa		 mov	 edi, edx
  0002d	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  0002f	52		 push	 edx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00030	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 112  : 		UnalignedDeallocate(p);

  00037	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  0003c	83 c4 04	 add	 esp, 4
  0003f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00042	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00049	59		 pop	 ecx
  0004a	5f		 pop	 edi
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
  0004f	cc		 int	 3
  00050	cc		 int	 3
  00051	cc		 int	 3
  00052	cc		 int	 3
  00053	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1ConstByteArrayParameter@CryptoPP@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ConstByteArrayParameter@CryptoPP@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ConstByteArrayParameter@CryptoPP@@QAE@XZ ENDP	; CryptoPP::ConstByteArrayParameter::~ConstByteArrayParameter
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ?Assign@?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAEXPBEI@Z
_TEXT	SEGMENT
_t$ = 8							; size = 4
_len$ = 12						; size = 4
?Assign@?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAEXPBEI@Z PROC ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::Assign, COMDAT
; _this$ = ecx

; 311  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 117  : 		return StandardReallocate(*this, p, oldSize, newSize, preserve);

  00005	8b 7d 0c	 mov	 edi, DWORD PTR _len$[ebp]

; 311  : 	{

  00008	8b f1		 mov	 esi, ecx

; 117  : 		return StandardReallocate(*this, p, oldSize, newSize, preserve);

  0000a	6a 00		 push	 0
  0000c	57		 push	 edi
  0000d	ff 76 04	 push	 DWORD PTR [esi+4]
  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 ??$StandardReallocate@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@YAPAEAAV?$AllocatorWithCleanup@E$0A@@0@PAEII_N@Z ; CryptoPP::StandardReallocate<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
  00019	83 c4 14	 add	 esp, 20			; 00000014H

; 363  : 		m_ptr = m_alloc.reallocate(m_ptr, m_size, newSize, false);

  0001c	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 364  : 		m_size = newSize;

  0001f	89 7e 04	 mov	 DWORD PTR [esi+4], edi
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 42   :         if (_SourceSize == 0)

  00022	85 ff		 test	 edi, edi
  00024	74 37		 je	 SHORT $LN12@Assign

; 43   :         {
; 44   :             return 0;
; 45   :         }
; 46   : 
; 47   :         _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Destination != NULL, EINVAL);

  00026	85 c0		 test	 eax, eax
  00028	74 23		 je	 SHORT $LN15@Assign

; 48   :         if (_Source == NULL || _DestinationSize < _SourceSize)

  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _t$[ebp]
  0002d	57		 push	 edi
  0002e	85 c9		 test	 ecx, ecx
  00030	74 10		 je	 SHORT $LN11@Assign

; 51   : 
; 52   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_Source != NULL,                 EINVAL);
; 53   :             _CRT_MEMCPY_S_VALIDATE_RETURN_ERRCODE(_DestinationSize >= _SourceSize, ERANGE);
; 54   : 
; 55   :             // Unreachable, but required to suppress /analyze warnings:
; 56   :             return EINVAL;
; 57   :         }
; 58   : #pragma warning(suppress:4996) // Deprecation
; 59   :         memcpy(_Destination, _Source, _SourceSize);

  00032	51		 push	 ecx
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 _memcpy
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	5f		 pop	 edi
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 314  : 	}

  0003d	5e		 pop	 esi
  0003e	5d		 pop	 ebp
  0003f	c2 08 00	 ret	 8
$LN11@Assign:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_memcpy_s.h

; 50   :             memset(_Destination, 0, _DestinationSize);

  00042	6a 00		 push	 0
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 _memset
  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN15@Assign:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 314  : 	}

  0004d	e8 00 00 00 00	 call	 __errno
  00052	c7 00 16 00 00
	00		 mov	 DWORD PTR [eax], 22	; 00000016H
  00058	e8 00 00 00 00	 call	 __invalid_parameter_noinfo
$LN12@Assign:
  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5d		 pop	 ebp
  00060	c2 08 00	 ret	 8
?Assign@?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAEXPBEI@Z ENDP ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::Assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ PROC ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >, COMDAT
; _this$ = ecx

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	57		 push	 edi
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\misc.h

; 494  : 	__stosb((byte *)(size_t)p, 0, n);

  00026	32 c0		 xor	 al, al
  00028	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002b	8b fa		 mov	 edi, edx
  0002d	f3 aa		 rep stosb
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h

; 112  : 		UnalignedDeallocate(p);

  0002f	52		 push	 edx
  00030	e8 00 00 00 00	 call	 ?UnalignedDeallocate@CryptoPP@@YAXPAX@Z ; CryptoPP::UnalignedDeallocate
  00035	83 c4 04	 add	 esp, 4

; 261  : 		{m_alloc.deallocate(m_ptr, m_size);}

  00038	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00042	59		 pop	 ecx
  00043	5f		 pop	 edi
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
  00048	cc		 int	 3
  00049	cc		 int	 3
  0004a	cc		 int	 3
  0004b	cc		 int	 3
  0004c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ENDP ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ??0?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@I@Z
_TEXT	SEGMENT
_size$ = 8						; size = 4
??0?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@I@Z PROC ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >, COMDAT
; _this$ = ecx

; 246  : 	explicit SecBlock(size_type size=0)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00003	8b 45 08	 mov	 eax, DWORD PTR _size$[ebp]
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 92   : 		if (n == 0)

  0000c	85 c0		 test	 eax, eax
  0000e	75 0a		 jne	 SHORT $LN4@SecBlock

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00010	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
$LN4@SecBlock:

; 100  : 		return (pointer)UnalignedAllocate(n*sizeof(T));

  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ?UnalignedAllocate@CryptoPP@@YAPAXI@Z ; CryptoPP::UnalignedAllocate
  00020	83 c4 04	 add	 esp, 4

; 247  : 		: m_size(size) {m_ptr = m_alloc.allocate(size, NULL);}

  00023	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@I@Z ENDP ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ?GetOptimalBlockSize@AdditiveCipherAbstractPolicy@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?GetOptimalBlockSize@AdditiveCipherAbstractPolicy@CryptoPP@@UBEIXZ PROC ; CryptoPP::AdditiveCipherAbstractPolicy::GetOptimalBlockSize, COMDAT
; _this$ = ecx

; 71   : 	virtual unsigned int GetOptimalBlockSize() const {return GetBytesPerIteration();}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	ff 60 08	 jmp	 DWORD PTR [eax+8]
?GetOptimalBlockSize@AdditiveCipherAbstractPolicy@CryptoPP@@UBEIXZ ENDP ; CryptoPP::AdditiveCipherAbstractPolicy::GetOptimalBlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\strciphr.h
;	COMDAT ??1AdditiveCipherAbstractPolicy@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
??1AdditiveCipherAbstractPolicy@CryptoPP@@UAE@XZ PROC	; CryptoPP::AdditiveCipherAbstractPolicy::~AdditiveCipherAbstractPolicy, COMDAT
; _this$ = ecx

; 68   : 	virtual ~AdditiveCipherAbstractPolicy() {}

  00000	c2 00 00	 ret	 0
??1AdditiveCipherAbstractPolicy@CryptoPP@@UAE@XZ ENDP	; CryptoPP::AdditiveCipherAbstractPolicy::~AdditiveCipherAbstractPolicy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\secblock.h
;	COMDAT ?CheckSize@?$AllocatorBase@I@CryptoPP@@KAXI@Z
_TEXT	SEGMENT
$T2 = -80						; size = 40
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_n$ = 8							; size = 4
?CheckSize@?$AllocatorBase@I@CryptoPP@@KAXI@Z PROC	; CryptoPP::AllocatorBase<unsigned int>::CheckSize, COMDAT

; 38   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?CheckSize@?$AllocatorBase@I@CryptoPP@@KAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 39   : 		if (n > ~size_t(0) / sizeof(T))

  00028	81 7d 08 ff ff
	ff 3f		 cmp	 DWORD PTR _n$[ebp], 1073741823 ; 3fffffffH
  0002f	77 19		 ja	 SHORT $LN8@CheckSize

; 41   : 	}

  00031	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00034	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0003b	59		 pop	 ecx
  0003c	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0003f	33 cd		 xor	 ecx, ebp
  00041	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
$LN8@CheckSize:

; 40   : 			throw InvalidArgument("AllocatorBase: requested size would cause integer overflow");

  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@LFCPKOMM@AllocatorBase?3?5requested?5size?5w@
  0004f	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00052	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00057	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  0005a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00061	50		 push	 eax
  00062	8d 4d b0	 lea	 ecx, DWORD PTR $T2[ebp]
  00065	e8 00 00 00 00	 call	 ??0InvalidArgument@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CryptoPP::InvalidArgument::InvalidArgument
  0006a	68 00 00 00 00	 push	 OFFSET __TI3?AVInvalidArgument@CryptoPP@@
  0006f	8d 45 b0	 lea	 eax, DWORD PTR $T2[ebp]
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN6@CheckSize:
  00078	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CheckSize@?$AllocatorBase@I@CryptoPP@@KAXI@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?CheckSize@?$AllocatorBase@I@CryptoPP@@KAXI@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?CheckSize@?$AllocatorBase@I@CryptoPP@@KAXI@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?CheckSize@?$AllocatorBase@I@CryptoPP@@KAXI@Z ENDP	; CryptoPP::AllocatorBase<unsigned int>::CheckSize
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\memory
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\memory
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\memory
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?SetUp@Cipher@@AAE_N_N@Z
_TEXT	SEGMENT
_iv_0$ = -92						; size = 12
_iv_1$ = -80						; size = 12
_key_0$ = -68						; size = 12
_key_1$ = -56						; size = 12
_algorithm_1$ = -44					; size = 4
_algorithm_0$ = -40					; size = 4
_this$1$ = -36						; size = 4
tv745 = -32						; size = 4
_iv_length_1$1$ = -28					; size = 4
_iv_length_0$1$ = -24					; size = 4
_key_length_1$1$ = -20					; size = 4
_key_length_0$1$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_polarity$ = 8						; size = 1
?SetUp@Cipher@@AAE_N_N@Z PROC				; Cipher::SetUp, COMDAT
; _this$ = ecx

; 203  : bool Cipher::SetUp(bool polarity) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?SetUp@Cipher@@AAE_N_N@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 50	 sub	 esp, 80			; 00000050H
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b c1		 mov	 eax, ecx
  0002a	89 45 dc	 mov	 DWORD PTR _this$1$[ebp], eax

; 204  : #ifdef __THEMIDA__
; 205  : 	VM_START
; 206  : #endif
; 207  : 
; 208  : 	assert(key_agreement_ != NULL);
; 209  : 	const SecByteBlock& shared = key_agreement_->shared();

  0002d	8b 58 0c	 mov	 ebx, DWORD PTR [eax+12]
  00030	89 5d e0	 mov	 DWORD PTR tv745[ebp], ebx

; 210  : 
; 211  : 	// Pick a block cipher algorithm
; 212  : 
; 213  : 	if (shared.size() < 2) {

  00033	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]
  00036	83 ff 02	 cmp	 edi, 2
  00039	73 16		 jae	 SHORT $LN2@SetUp

; 214  : 		return false;

  0003b	32 c0		 xor	 al, al

; 274  : }

  0003d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00040	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00047	59		 pop	 ecx
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 04 00	 ret	 4
$LN2@SetUp:

; 215  : 	}
; 216  : 
; 217  : 	int hint_0 = shared.BytePtr()[*(shared.BytePtr()) % shared.size()];

  00051	8b 73 0c	 mov	 esi, DWORD PTR [ebx+12]
  00054	33 d2		 xor	 edx, edx
  00056	0f b6 06	 movzx	 eax, BYTE PTR [esi]
  00059	f7 f7		 div	 edi

; 218  : 	int hint_1 = shared.BytePtr()[*(shared.BytePtr() + 1) % shared.size()];

  0005b	0f b6 46 01	 movzx	 eax, BYTE PTR [esi+1]
  0005f	0f b6 0c 32	 movzx	 ecx, BYTE PTR [edx+esi]
  00063	33 d2		 xor	 edx, edx
  00065	f7 f7		 div	 edi

; 219  : 	BlockCipherAlgorithm* detail_0 = BlockCipherAlgorithm::Pick(hint_0);

  00067	51		 push	 ecx
  00068	0f b6 34 32	 movzx	 esi, BYTE PTR [edx+esi]
  0006c	e8 00 00 00 00	 call	 ?Pick@BlockCipherAlgorithm@@SAPAU1@H@Z ; BlockCipherAlgorithm::Pick

; 220  : 	BlockCipherAlgorithm* detail_1 = BlockCipherAlgorithm::Pick(hint_1);

  00071	56		 push	 esi
  00072	8b f8		 mov	 edi, eax
  00074	e8 00 00 00 00	 call	 ?Pick@BlockCipherAlgorithm@@SAPAU1@H@Z ; BlockCipherAlgorithm::Pick
  00079	83 c4 08	 add	 esp, 8
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\memory

; 476  :     explicit auto_ptr(_Ty* _Ptr = nullptr) noexcept : _Myptr(_Ptr) {}

  0007c	89 7d d8	 mov	 DWORD PTR _algorithm_0$[ebp], edi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 220  : 	BlockCipherAlgorithm* detail_1 = BlockCipherAlgorithm::Pick(hint_1);

  0007f	8b f0		 mov	 esi, eax

; 221  : 	assert(detail_0 != NULL);
; 222  : 	assert(detail_1 != NULL);
; 223  : 	std::auto_ptr<BlockCipherAlgorithm> algorithm_0(detail_0);

  00081	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\memory

; 476  :     explicit auto_ptr(_Ty* _Ptr = nullptr) noexcept : _Myptr(_Ptr) {}

  00088	89 75 d4	 mov	 DWORD PTR _algorithm_1$[ebp], esi
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 226  : 	const size_t key_length_0 = algorithm_0->GetDefaultKeyLength();

  0008b	8b 07		 mov	 eax, DWORD PTR [edi]
  0008d	8b cf		 mov	 ecx, edi
  0008f	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00093	ff 50 08	 call	 DWORD PTR [eax+8]

; 227  : 	const size_t iv_length_0 = algorithm_0->GetBlockSize();

  00096	8b 17		 mov	 edx, DWORD PTR [edi]
  00098	8b cf		 mov	 ecx, edi
  0009a	89 45 f0	 mov	 DWORD PTR _key_length_0$1$[ebp], eax
  0009d	ff 52 04	 call	 DWORD PTR [edx+4]

; 228  : 
; 229  : 	if (shared.size() < key_length_0 || shared.size() < iv_length_0) {

  000a0	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000a3	89 45 e8	 mov	 DWORD PTR _iv_length_0$1$[ebp], eax
  000a6	3b 4d f0	 cmp	 ecx, DWORD PTR _key_length_0$1$[ebp]
  000a9	0f 82 49 01 00
	00		 jb	 $LN6@SetUp
  000af	3b c8		 cmp	 ecx, eax
  000b1	0f 82 41 01 00
	00		 jb	 $LN6@SetUp

; 230  : 		return false;
; 231  : 	}
; 232  : 
; 233  : 	const size_t key_length_1 = algorithm_1->GetDefaultKeyLength();

  000b7	8b 16		 mov	 edx, DWORD PTR [esi]
  000b9	8b ce		 mov	 ecx, esi
  000bb	ff 52 08	 call	 DWORD PTR [edx+8]

; 234  : 	const size_t iv_length_1 = algorithm_1->GetBlockSize();

  000be	8b 16		 mov	 edx, DWORD PTR [esi]
  000c0	8b ce		 mov	 ecx, esi
  000c2	89 45 ec	 mov	 DWORD PTR _key_length_1$1$[ebp], eax
  000c5	ff 52 04	 call	 DWORD PTR [edx+4]

; 235  : 
; 236  : 	if (shared.size() < key_length_1 || shared.size() < iv_length_1) {

  000c8	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  000cb	89 45 e4	 mov	 DWORD PTR _iv_length_1$1$[ebp], eax
  000ce	3b 4d ec	 cmp	 ecx, DWORD PTR _key_length_1$1$[ebp]
  000d1	0f 82 21 01 00
	00		 jb	 $LN6@SetUp
  000d7	3b c8		 cmp	 ecx, eax
  000d9	0f 82 19 01 00
	00		 jb	 $LN6@SetUp

; 237  : 		return false;
; 238  : 	}
; 239  : 
; 240  : 	// Pick encryption keys and initial vectors
; 241  : 
; 242  : 	SecByteBlock key_0(key_length_0), iv_0(iv_length_0);

  000df	ff 75 f0	 push	 DWORD PTR _key_length_0$1$[ebp]
  000e2	8d 4d bc	 lea	 ecx, DWORD PTR _key_0$[ebp]
  000e5	e8 00 00 00 00	 call	 ??0?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@I@Z ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
  000ea	ff 75 e8	 push	 DWORD PTR _iv_length_0$1$[ebp]
  000ed	8d 4d a4	 lea	 ecx, DWORD PTR _iv_0$[ebp]
  000f0	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000f4	e8 00 00 00 00	 call	 ??0?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@I@Z ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >

; 243  : 	SecByteBlock key_1(key_length_1), iv_1(iv_length_1);

  000f9	ff 75 ec	 push	 DWORD PTR _key_length_1$1$[ebp]
  000fc	8d 4d c8	 lea	 ecx, DWORD PTR _key_1$[ebp]
  000ff	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  00103	e8 00 00 00 00	 call	 ??0?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@I@Z ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
  00108	ff 75 e4	 push	 DWORD PTR _iv_length_1$1$[ebp]
  0010b	8d 4d b0	 lea	 ecx, DWORD PTR _iv_1$[ebp]
  0010e	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00112	e8 00 00 00 00	 call	 ??0?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@I@Z ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >

; 244  : 
; 245  : 	size_t offset;
; 246  : 
; 247  : 	key_0.Assign(shared, key_length_0);

  00117	ff 75 f0	 push	 DWORD PTR _key_length_0$1$[ebp]
  0011a	8d 4d bc	 lea	 ecx, DWORD PTR _key_0$[ebp]
  0011d	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  00121	ff 73 0c	 push	 DWORD PTR [ebx+12]
  00124	e8 00 00 00 00	 call	 ?Assign@?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAEXPBEI@Z ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::Assign

; 248  : 	offset = key_length_0;
; 249  : 	offset = min(key_length_0, shared.size() - key_length_1);

  00129	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0012c	8b 45 ec	 mov	 eax, DWORD PTR _key_length_1$1$[ebp]
  0012f	2b c8		 sub	 ecx, eax
  00131	39 4d f0	 cmp	 DWORD PTR _key_length_0$1$[ebp], ecx

; 250  : 	key_1.Assign(shared.BytePtr() + offset, key_length_1);

  00134	50		 push	 eax
  00135	0f 42 4d f0	 cmovb	 ecx, DWORD PTR _key_length_0$1$[ebp]
  00139	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  0013c	03 c1		 add	 eax, ecx
  0013e	8d 4d c8	 lea	 ecx, DWORD PTR _key_1$[ebp]
  00141	50		 push	 eax
  00142	e8 00 00 00 00	 call	 ?Assign@?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAEXPBEI@Z ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::Assign

; 251  : 
; 252  : 	offset = shared.size() - iv_length_0;

  00147	8b 5b 08	 mov	 ebx, DWORD PTR [ebx+8]

; 253  : 	iv_0.Assign(shared.BytePtr() + offset, iv_length_0);

  0014a	8d 4d a4	 lea	 ecx, DWORD PTR _iv_0$[ebp]
  0014d	8b 45 e8	 mov	 eax, DWORD PTR _iv_length_0$1$[ebp]
  00150	2b d8		 sub	 ebx, eax
  00152	50		 push	 eax
  00153	8b 45 e0	 mov	 eax, DWORD PTR tv745[ebp]
  00156	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00159	03 c3		 add	 eax, ebx
  0015b	50		 push	 eax
  0015c	e8 00 00 00 00	 call	 ?Assign@?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAEXPBEI@Z ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::Assign

; 254  : 	offset = (offset < iv_length_1 ? 0 : offset - iv_length_1);

  00161	8b 45 e4	 mov	 eax, DWORD PTR _iv_length_1$1$[ebp]
  00164	3b d8		 cmp	 ebx, eax
  00166	73 04		 jae	 SHORT $LN12@SetUp
  00168	33 db		 xor	 ebx, ebx
  0016a	eb 02		 jmp	 SHORT $LN13@SetUp
$LN12@SetUp:
  0016c	2b d8		 sub	 ebx, eax
$LN13@SetUp:

; 255  : 	iv_1.Assign(shared.BytePtr() + offset, iv_length_1);

  0016e	50		 push	 eax
  0016f	8b 45 e0	 mov	 eax, DWORD PTR tv745[ebp]
  00172	8d 4d b0	 lea	 ecx, DWORD PTR _iv_1$[ebp]
  00175	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00178	03 c3		 add	 eax, ebx
  0017a	50		 push	 eax
  0017b	e8 00 00 00 00	 call	 ?Assign@?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAEXPBEI@Z ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::Assign

; 256  : 
; 257  : 	// Create encryption/decryption objects
; 258  : 
; 259  : 	if (polarity) {

  00180	80 7d 08 00	 cmp	 BYTE PTR _polarity$[ebp], 0
  00184	74 25		 je	 SHORT $LN7@SetUp

; 260  : 		encoder_ = algorithm_1->CreateEncoder(key_1, key_1.size(), iv_1);

  00186	ff 75 b8	 push	 DWORD PTR _iv_1$[ebp+8]
  00189	8b 06		 mov	 eax, DWORD PTR [esi]
  0018b	8b ce		 mov	 ecx, esi
  0018d	ff 75 cc	 push	 DWORD PTR _key_1$[ebp+4]
  00190	ff 75 d0	 push	 DWORD PTR _key_1$[ebp+8]
  00193	ff 50 10	 call	 DWORD PTR [eax+16]

; 261  : 		decoder_ = algorithm_0->CreateDecoder(key_0, key_0.size(), iv_0);

  00196	ff 75 ac	 push	 DWORD PTR _iv_0$[ebp+8]
  00199	8b 5d dc	 mov	 ebx, DWORD PTR _this$1$[ebp]
  0019c	8b cf		 mov	 ecx, edi
  0019e	ff 75 c0	 push	 DWORD PTR _key_0$[ebp+4]
  001a1	ff 75 c4	 push	 DWORD PTR _key_0$[ebp+8]
  001a4	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  001a7	8b 07		 mov	 eax, DWORD PTR [edi]

; 262  : 	} else {

  001a9	eb 23		 jmp	 SHORT $LN51@SetUp
$LN7@SetUp:

; 263  : 		encoder_ = algorithm_0->CreateEncoder(key_0, key_0.size(), iv_0);

  001ab	ff 75 ac	 push	 DWORD PTR _iv_0$[ebp+8]
  001ae	8b 07		 mov	 eax, DWORD PTR [edi]
  001b0	8b cf		 mov	 ecx, edi
  001b2	ff 75 c0	 push	 DWORD PTR _key_0$[ebp+4]
  001b5	ff 75 c4	 push	 DWORD PTR _key_0$[ebp+8]
  001b8	ff 50 10	 call	 DWORD PTR [eax+16]

; 264  : 		decoder_ = algorithm_1->CreateDecoder(key_1, key_1.size(), iv_1);

  001bb	ff 75 b8	 push	 DWORD PTR _iv_1$[ebp+8]
  001be	8b 5d dc	 mov	 ebx, DWORD PTR _this$1$[ebp]
  001c1	8b ce		 mov	 ecx, esi
  001c3	ff 75 cc	 push	 DWORD PTR _key_1$[ebp+4]
  001c6	ff 75 d0	 push	 DWORD PTR _key_1$[ebp+8]
  001c9	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  001cc	8b 06		 mov	 eax, DWORD PTR [esi]
$LN51@SetUp:

; 273  : 	return true;

  001ce	ff 50 14	 call	 DWORD PTR [eax+20]
  001d1	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  001d4	8d 4d b0	 lea	 ecx, DWORD PTR _iv_1$[ebp]
  001d7	b3 01		 mov	 bl, 1
  001d9	e8 00 00 00 00	 call	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
  001de	8d 4d c8	 lea	 ecx, DWORD PTR _key_1$[ebp]
  001e1	e8 00 00 00 00	 call	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
  001e6	8d 4d a4	 lea	 ecx, DWORD PTR _iv_0$[ebp]
  001e9	e8 00 00 00 00	 call	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
  001ee	8d 4d bc	 lea	 ecx, DWORD PTR _key_0$[ebp]
  001f1	e8 00 00 00 00	 call	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
  001f6	eb 02		 jmp	 SHORT $LN21@SetUp
$LN6@SetUp:
  001f8	32 db		 xor	 bl, bl
$LN21@SetUp:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\memory

; 521  :         delete _Myptr;

  001fa	85 f6		 test	 esi, esi
  001fc	74 08		 je	 SHORT $LN44@SetUp
  001fe	8b 06		 mov	 eax, DWORD PTR [esi]
  00200	8b ce		 mov	 ecx, esi
  00202	6a 01		 push	 1
  00204	ff 10		 call	 DWORD PTR [eax]
$LN44@SetUp:
  00206	85 ff		 test	 edi, edi
  00208	74 08		 je	 SHORT $LN48@SetUp
  0020a	8b 17		 mov	 edx, DWORD PTR [edi]
  0020c	8b cf		 mov	 ecx, edi
  0020e	6a 01		 push	 1
  00210	ff 12		 call	 DWORD PTR [edx]
$LN48@SetUp:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp

; 273  : 	return true;

  00212	8a c3		 mov	 al, bl

; 274  : }

  00214	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00217	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0021e	59		 pop	 ecx
  0021f	5f		 pop	 edi
  00220	5e		 pop	 esi
  00221	5b		 pop	 ebx
  00222	8b e5		 mov	 esp, ebp
  00224	5d		 pop	 ebp
  00225	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetUp@Cipher@@AAE_N_N@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR _algorithm_0$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$auto_ptr@UBlockCipherAlgorithm@@@std@@QAE@XZ ; std::auto_ptr<BlockCipherAlgorithm>::~auto_ptr<BlockCipherAlgorithm>
__unwindfunclet$?SetUp@Cipher@@AAE_N_N@Z$1:
  00008	8d 4d d4	 lea	 ecx, DWORD PTR _algorithm_1$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$auto_ptr@UBlockCipherAlgorithm@@@std@@QAE@XZ ; std::auto_ptr<BlockCipherAlgorithm>::~auto_ptr<BlockCipherAlgorithm>
__unwindfunclet$?SetUp@Cipher@@AAE_N_N@Z$2:
  00010	8d 4d bc	 lea	 ecx, DWORD PTR _key_0$[ebp]
  00013	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$?SetUp@Cipher@@AAE_N_N@Z$3:
  00018	8d 4d a4	 lea	 ecx, DWORD PTR _iv_0$[ebp]
  0001b	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$?SetUp@Cipher@@AAE_N_N@Z$4:
  00020	8d 4d c8	 lea	 ecx, DWORD PTR _key_1$[ebp]
  00023	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
__unwindfunclet$?SetUp@Cipher@@AAE_N_N@Z$5:
  00028	8d 4d b0	 lea	 ecx, DWORD PTR _iv_1$[ebp]
  0002b	e9 00 00 00 00	 jmp	 ??1?$SecBlock@EV?$AllocatorWithCleanup@E$0A@@CryptoPP@@@CryptoPP@@QAE@XZ ; CryptoPP::SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >::~SecBlock<unsigned char,CryptoPP::AllocatorWithCleanup<unsigned char,0> >
  00030	cc		 int	 3
  00031	cc		 int	 3
  00032	cc		 int	 3
  00033	cc		 int	 3
  00034	cc		 int	 3
__ehhandler$?SetUp@Cipher@@AAE_N_N@Z:
  00035	90		 npad	 1
  00036	90		 npad	 1
  00037	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0003b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0003e	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  00041	33 c8		 xor	 ecx, eax
  00043	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00048	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?SetUp@Cipher@@AAE_N_N@Z
  0004d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?SetUp@Cipher@@AAE_N_N@Z ENDP				; Cipher::SetUp
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?Activate@Cipher@@QAE_N_NIPBXI@Z
_TEXT	SEGMENT
_polarity$ = 8						; size = 1
_agreed_length$ = 12					; size = 4
_buffer$ = 16						; size = 4
_length$ = 20						; size = 4
?Activate@Cipher@@QAE_N_NIPBXI@Z PROC			; Cipher::Activate, COMDAT
; _this$ = ecx

; 183  : 					  const void* buffer, size_t length) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 184  : #ifdef __THEMIDA__
; 185  : 	VM_START
; 186  : #endif
; 187  : 
; 188  : 	assert(activated_ == false);
; 189  : 	assert(key_agreement_ != NULL);
; 190  : 	bool result = false;
; 191  : 	if (key_agreement_->Agree(agreed_length, buffer, length)) {

  00005	ff 75 14	 push	 DWORD PTR _length$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	32 db		 xor	 bl, bl
  0000c	ff 75 10	 push	 DWORD PTR _buffer$[ebp]
  0000f	ff 75 0c	 push	 DWORD PTR _agreed_length$[ebp]
  00012	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00015	8b 01		 mov	 eax, DWORD PTR [ecx]
  00017	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001a	ff d0		 call	 eax
  0001c	84 c0		 test	 al, al
  0001e	74 0c		 je	 SHORT $LN2@Activate

; 192  : 		result = SetUp(polarity);

  00020	ff 75 08	 push	 DWORD PTR _polarity$[ebp]
  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?SetUp@Cipher@@AAE_N_N@Z ; Cipher::SetUp
  0002a	8a d8		 mov	 bl, al
$LN2@Activate:

; 193  : 	}
; 194  : 	delete key_agreement_;

  0002c	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0002f	85 c9		 test	 ecx, ecx
  00031	74 06		 je	 SHORT $LN6@Activate
  00033	8b 11		 mov	 edx, DWORD PTR [ecx]
  00035	6a 01		 push	 1
  00037	ff 12		 call	 DWORD PTR [edx]
$LN6@Activate:

; 195  : 	key_agreement_ = NULL;
; 196  : #ifdef __THEMIDA__
; 197  : 	VM_END
; 198  : #endif
; 199  : 
; 200  : 	return result;
; 201  : }

  00039	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00040	8a c3		 mov	 al, bl
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx
  00044	5d		 pop	 ebp
  00045	c2 10 00	 ret	 16			; 00000010H
?Activate@Cipher@@QAE_N_NIPBXI@Z ENDP			; Cipher::Activate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?Prepare@Cipher@@QAEIPAXPAI@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_buffer$ = 8						; size = 4
_length$ = 12						; size = 4
?Prepare@Cipher@@QAEIPAXPAI@Z PROC			; Cipher::Prepare, COMDAT
; _this$ = ecx

; 162  : size_t Cipher::Prepare(void* buffer, size_t* length) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Prepare@Cipher@@QAEIPAXPAI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f1		 mov	 esi, ecx

; 163  : #ifdef __THEMIDA__
; 164  : 	VM_START
; 165  : #endif
; 166  : 
; 167  : 	assert(key_agreement_ == NULL);
; 168  : 	key_agreement_ = new DH2KeyAgreement();

  00027	68 a8 00 00 00	 push	 168			; 000000a8H
  0002c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00031	83 c4 04	 add	 esp, 4
  00034	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003e	85 c0		 test	 eax, eax
  00040	74 0b		 je	 SHORT $LN4@Prepare
  00042	8b c8		 mov	 ecx, eax
  00044	e8 00 00 00 00	 call	 ??0DH2KeyAgreement@@QAE@XZ ; DH2KeyAgreement::DH2KeyAgreement
  00049	8b c8		 mov	 ecx, eax
  0004b	eb 02		 jmp	 SHORT $LN5@Prepare
$LN4@Prepare:
  0004d	33 c9		 xor	 ecx, ecx
$LN5@Prepare:

; 169  : 	assert(key_agreement_ != NULL);
; 170  : 	size_t agreed_length = key_agreement_->Prepare(buffer, length);

  0004f	ff 75 0c	 push	 DWORD PTR _length$[ebp]
  00052	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00055	8b 01		 mov	 eax, DWORD PTR [ecx]
  00057	ff 75 08	 push	 DWORD PTR _buffer$[ebp]
  0005a	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	ff 50 04	 call	 DWORD PTR [eax+4]
  00064	8b f8		 mov	 edi, eax

; 171  : 	if (agreed_length == 0) {

  00066	85 ff		 test	 edi, edi
  00068	75 14		 jne	 SHORT $LN9@Prepare

; 172  : 		delete key_agreement_;

  0006a	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0006d	85 c9		 test	 ecx, ecx
  0006f	74 06		 je	 SHORT $LN6@Prepare
  00071	8b 11		 mov	 edx, DWORD PTR [ecx]
  00073	6a 01		 push	 1
  00075	ff 12		 call	 DWORD PTR [edx]
$LN6@Prepare:

; 173  : 		key_agreement_ = NULL;

  00077	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN9@Prepare:

; 174  : 	}
; 175  : #ifdef __THEMIDA__
; 176  : 	VM_END
; 177  : #endif
; 178  : 
; 179  : 	return agreed_length;
; 180  : }

  0007e	8b c7		 mov	 eax, edi
  00080	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008a	59		 pop	 ecx
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi
  0008d	8b e5		 mov	 esp, ebp
  0008f	5d		 pop	 ebp
  00090	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Prepare@Cipher@@QAEIPAXPAI@Z$0:
  00000	68 a8 00 00 00	 push	 168			; 000000a8H
  00005	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  00008	50		 push	 eax
  00009	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0000e	83 c4 08	 add	 esp, 8
  00011	c3		 ret	 0
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
  00015	cc		 int	 3
  00016	cc		 int	 3
__ehhandler$?Prepare@Cipher@@QAEIPAXPAI@Z:
  00017	90		 npad	 1
  00018	90		 npad	 1
  00019	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001d	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00020	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Prepare@Cipher@@QAEIPAXPAI@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Prepare@Cipher@@QAEIPAXPAI@Z ENDP			; Cipher::Prepare
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ?CleanUp@Cipher@@QAEXXZ
_TEXT	SEGMENT
?CleanUp@Cipher@@QAEXXZ PROC				; Cipher::CleanUp, COMDAT
; _this$ = ecx

; 146  : void Cipher::CleanUp() {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 147  : 	if (encoder_ != NULL) {

  00003	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00006	85 c9		 test	 ecx, ecx
  00008	74 0d		 je	 SHORT $LN2@CleanUp

; 148  : 		delete encoder_;

  0000a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000c	6a 01		 push	 1
  0000e	ff 10		 call	 DWORD PTR [eax]

; 149  : 		encoder_ = NULL;

  00010	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
$LN2@CleanUp:

; 150  : 	}
; 151  : 	if (decoder_ != NULL) {

  00017	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0001a	85 c9		 test	 ecx, ecx
  0001c	74 0d		 je	 SHORT $LN3@CleanUp

; 152  : 		delete decoder_;

  0001e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00020	6a 01		 push	 1
  00022	ff 10		 call	 DWORD PTR [eax]

; 153  : 		decoder_ = NULL;

  00024	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN3@CleanUp:

; 154  : 	}
; 155  : 	if (key_agreement_ != NULL) {

  0002b	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0002e	85 c9		 test	 ecx, ecx
  00030	74 0d		 je	 SHORT $LN12@CleanUp

; 156  : 		delete key_agreement_;

  00032	8b 01		 mov	 eax, DWORD PTR [ecx]
  00034	6a 01		 push	 1
  00036	ff 10		 call	 DWORD PTR [eax]

; 157  : 		key_agreement_ = NULL;

  00038	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN12@CleanUp:

; 158  : 	}
; 159  : 	activated_ = false;
; 160  : }

  0003f	c6 06 00	 mov	 BYTE PTR [esi], 0
  00042	5e		 pop	 esi
  00043	c3		 ret	 0
?CleanUp@Cipher@@QAEXXZ ENDP				; Cipher::CleanUp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ??1Cipher@@QAE@XZ
_TEXT	SEGMENT
??1Cipher@@QAE@XZ PROC					; Cipher::~Cipher, COMDAT
; _this$ = ecx

; 141  : 	if (activated_) {

  00000	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00003	0f 85 00 00 00
	00		 jne	 ?CleanUp@Cipher@@QAEXXZ	; Cipher::CleanUp

; 142  : 		CleanUp();
; 143  : 	}
; 144  : }

  00009	c3		 ret	 0
??1Cipher@@QAE@XZ ENDP					; Cipher::~Cipher
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\cipher.cpp
;	COMDAT ??0Cipher@@QAE@XZ
_TEXT	SEGMENT
??0Cipher@@QAE@XZ PROC					; Cipher::Cipher, COMDAT
; _this$ = ecx

; 137  : : activated_(false), encoder_(NULL), decoder_(NULL), key_agreement_(NULL) {

  00000	c6 01 00	 mov	 BYTE PTR [ecx], 0

; 138  : }

  00003	8b c1		 mov	 eax, ecx
  00005	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0000c	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00013	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  0001a	c3		 ret	 0
??0Cipher@@QAE@XZ ENDP					; Cipher::Cipher
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?BEREncode@ASN1Object@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z
_TEXT	SEGMENT
_bt$ = 8						; size = 4
?BEREncode@ASN1Object@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z PROC ; CryptoPP::ASN1Object::BEREncode, COMDAT
; _this$ = ecx

; 1644 : 	virtual void BEREncode(BufferedTransformation &bt) const {DEREncode(bt);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	5d		 pop	 ebp
  00006	ff 60 08	 jmp	 DWORD PTR [eax+8]
?BEREncode@ASN1Object@CryptoPP@@UBEXAAVBufferedTransformation@2@@Z ENDP ; CryptoPP::ASN1Object::BEREncode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ??1ASN1Object@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
??1ASN1Object@CryptoPP@@UAE@XZ PROC			; CryptoPP::ASN1Object::~ASN1Object, COMDAT
; _this$ = ecx

; 1637 : 	virtual ~ASN1Object() {}

  00000	c2 00 00	 ret	 0
??1ASN1Object@CryptoPP@@UAE@XZ ENDP			; CryptoPP::ASN1Object::~ASN1Object
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?GetCryptoParameters@KeyAgreementAlgorithm@CryptoPP@@UBEABVCryptoParameters@2@XZ
_TEXT	SEGMENT
?GetCryptoParameters@KeyAgreementAlgorithm@CryptoPP@@UBEABVCryptoParameters@2@XZ PROC ; CryptoPP::KeyAgreementAlgorithm::GetCryptoParameters, COMDAT
; _this$ = ecx

; 1184 : 	virtual const CryptoParameters & GetCryptoParameters() const {return const_cast<KeyAgreementAlgorithm *>(this)->AccessCryptoParameters();}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	ff 60 14	 jmp	 DWORD PTR [eax+20]
?GetCryptoParameters@KeyAgreementAlgorithm@CryptoPP@@UBEABVCryptoParameters@2@XZ ENDP ; CryptoPP::KeyAgreementAlgorithm::GetCryptoParameters
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?GetMaterial@KeyAgreementAlgorithm@CryptoPP@@UBEABVCryptoMaterial@2@XZ
_TEXT	SEGMENT
?GetMaterial@KeyAgreementAlgorithm@CryptoPP@@UBEABVCryptoMaterial@2@XZ PROC ; CryptoPP::KeyAgreementAlgorithm::GetMaterial, COMDAT
; _this$ = ecx

; 1181 : 	const CryptoMaterial & GetMaterial() const {return GetCryptoParameters();}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	ff 50 18	 call	 DWORD PTR [eax+24]
  00005	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00008	83 c0 04	 add	 eax, 4
  0000b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000e	03 c1		 add	 eax, ecx
  00010	c3		 ret	 0
?GetMaterial@KeyAgreementAlgorithm@CryptoPP@@UBEABVCryptoMaterial@2@XZ ENDP ; CryptoPP::KeyAgreementAlgorithm::GetMaterial
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?AccessMaterial@KeyAgreementAlgorithm@CryptoPP@@UAEAAVCryptoMaterial@2@XZ
_TEXT	SEGMENT
?AccessMaterial@KeyAgreementAlgorithm@CryptoPP@@UAEAAVCryptoMaterial@2@XZ PROC ; CryptoPP::KeyAgreementAlgorithm::AccessMaterial, COMDAT
; _this$ = ecx

; 1180 : 	CryptoMaterial & AccessMaterial() {return AccessCryptoParameters();}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	ff 50 14	 call	 DWORD PTR [eax+20]
  00005	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00008	83 c0 04	 add	 eax, 4
  0000b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0000e	03 c1		 add	 eax, ecx
  00010	c3		 ret	 0
?AccessMaterial@KeyAgreementAlgorithm@CryptoPP@@UAEAAVCryptoMaterial@2@XZ ENDP ; CryptoPP::KeyAgreementAlgorithm::AccessMaterial
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?ThrowIfInvalid@CryptoMaterial@CryptoPP@@UBEXAAVRandomNumberGenerator@2@I@Z
_TEXT	SEGMENT
$T2 = -80						; size = 40
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_rng$ = 8						; size = 4
_level$ = 12						; size = 4
?ThrowIfInvalid@CryptoMaterial@CryptoPP@@UBEXAAVRandomNumberGenerator@2@I@Z PROC ; CryptoPP::CryptoMaterial::ThrowIfInvalid, COMDAT
; _this$ = ecx

; 1060 : 		{if (!Validate(rng, level)) throw InvalidMaterial("CryptoMaterial: this object contains invalid values");}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ThrowIfInvalid@CryptoMaterial@CryptoPP@@UBEXAAVRandomNumberGenerator@2@I@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002a	ff 75 0c	 push	 DWORD PTR _level$[ebp]
  0002d	8b 45 08	 mov	 eax, DWORD PTR _rng$[ebp]
  00030	50		 push	 eax
  00031	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00034	ff d0		 call	 eax
  00036	84 c0		 test	 al, al
  00038	74 1b		 je	 SHORT $LN8@ThrowIfInv
  0003a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00044	59		 pop	 ecx
  00045	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00048	33 cd		 xor	 ecx, ebp
  0004a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c2 08 00	 ret	 8
$LN8@ThrowIfInv:
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@KNKMJKBA@CryptoMaterial?3?5this?5object?5con@
  0005a	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  0005d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00062	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00065	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0006c	50		 push	 eax
  0006d	8d 4d b0	 lea	 ecx, DWORD PTR $T2[ebp]
  00070	e8 00 00 00 00	 call	 ??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CryptoPP::CryptoMaterial::InvalidMaterial::InvalidMaterial
  00075	68 00 00 00 00	 push	 OFFSET __TI4?AVInvalidMaterial@CryptoMaterial@CryptoPP@@
  0007a	8d 45 b0	 lea	 eax, DWORD PTR $T2[ebp]
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN6@ThrowIfInv:
  00083	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ThrowIfInvalid@CryptoMaterial@CryptoPP@@UBEXAAVRandomNumberGenerator@2@I@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?ThrowIfInvalid@CryptoMaterial@CryptoPP@@UBEXAAVRandomNumberGenerator@2@I@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ThrowIfInvalid@CryptoMaterial@CryptoPP@@UBEXAAVRandomNumberGenerator@2@I@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ThrowIfInvalid@CryptoMaterial@CryptoPP@@UBEXAAVRandomNumberGenerator@2@I@Z ENDP ; CryptoPP::CryptoMaterial::ThrowIfInvalid
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_GInvalidMaterial@CryptoMaterial@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GInvalidMaterial@CryptoMaterial@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::CryptoMaterial::InvalidMaterial::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 132  : 	virtual ~Exception() throw() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0000c	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0000f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 0d		 jb	 SHORT $LN16@scalar

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	50		 push	 eax
  00016	ff 76 10	 push	 DWORD PTR [esi+16]
  00019	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001e	83 c4 08	 add	 esp, 8
$LN16@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00021	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00024	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00032	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00036	50		 push	 eax
  00037	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0003d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00042	83 c4 04	 add	 esp, 4
  00045	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00049	74 0b		 je	 SHORT $LN24@scalar
  0004b	6a 28		 push	 40			; 00000028H
  0004d	56		 push	 esi
  0004e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00053	83 c4 08	 add	 esp, 8
$LN24@scalar:
  00056	8b c6		 mov	 eax, esi
  00058	5e		 pop	 esi
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
??_GInvalidMaterial@CryptoMaterial@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::CryptoMaterial::InvalidMaterial::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV012@@Z PROC ; CryptoPP::CryptoMaterial::InvalidMaterial::InvalidMaterial, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV012@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0002a	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0002d	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00030	0f 57 c0	 xorps	 xmm0, xmm0

; 72   :     {

  00033	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7exception@std@@6B@

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  00039	50		 push	 eax
  0003a	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  0003e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ___std_exception_copy
  00047	83 c4 08	 add	 esp, 8
  0004a	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7Exception@CryptoPP@@6B@
  00050	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00053	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00056	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  00059	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0005c	50		 push	 eax
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00064	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00069	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7InvalidMaterial@CryptoMaterial@CryptoPP@@6B@
  0006f	8b c7		 mov	 eax, edi
  00071	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007b	59		 pop	 ecx
  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV012@@Z$2:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV012@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV012@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV012@@Z ENDP ; CryptoPP::CryptoMaterial::InvalidMaterial::InvalidMaterial
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1InvalidMaterial@CryptoMaterial@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
??1InvalidMaterial@CryptoMaterial@CryptoPP@@UAE@XZ PROC	; CryptoPP::CryptoMaterial::InvalidMaterial::~InvalidMaterial, COMDAT
; _this$ = ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 132  : 	virtual ~Exception() throw() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00009	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0000c	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 0d		 jb	 SHORT $LN12@InvalidMat

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00011	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00012	50		 push	 eax
  00013	ff 76 10	 push	 DWORD PTR [esi+16]
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8
$LN12@InvalidMat:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  0001e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00021	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00028	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0002f	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00033	50		 push	 eax
  00034	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0003a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0003f	83 c4 04	 add	 esp, 4
  00042	5e		 pop	 esi
  00043	c3		 ret	 0
??1InvalidMaterial@CryptoMaterial@CryptoPP@@UAE@XZ ENDP	; CryptoPP::CryptoMaterial::InvalidMaterial::~InvalidMaterial
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CryptoPP::CryptoMaterial::InvalidMaterial::InvalidMaterial, COMDAT
; _this$ = ecx

; 1042 : 		explicit InvalidMaterial(const std::string &s) : InvalidDataFormat(s) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 53   :         : _Data()

  0002c	66 0f d6 46 04	 movq	 QWORD PTR [esi+4], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 131  : 	explicit Exception(ErrorType errorType, const std::string &s) : m_errorType(errorType), m_what(s) {}

  00031	ff 75 08	 push	 DWORD PTR _s$[ebp]
  00034	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
  00044	c7 46 0c 04 00
	00 00		 mov	 DWORD PTR [esi+12], 4
  0004b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 1042 : 		explicit InvalidMaterial(const std::string &s) : InvalidDataFormat(s) {}

  00050	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7InvalidMaterial@CryptoMaterial@CryptoPP@@6B@
  00056	8b c6		 mov	 eax, esi
  00058	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00062	59		 pop	 ecx
  00063	5e		 pop	 esi
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0InvalidMaterial@CryptoMaterial@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CryptoPP::CryptoMaterial::InvalidMaterial::InvalidMaterial
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?CanIncorporateEntropy@RandomNumberGenerator@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?CanIncorporateEntropy@RandomNumberGenerator@CryptoPP@@UBE_NXZ PROC ; CryptoPP::RandomNumberGenerator::CanIncorporateEntropy, COMDAT
; _this$ = ecx

; 676  : 	virtual bool CanIncorporateEntropy() const {return false;}

  00000	32 c0		 xor	 al, al
  00002	c3		 ret	 0
?CanIncorporateEntropy@RandomNumberGenerator@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::RandomNumberGenerator::CanIncorporateEntropy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z
_TEXT	SEGMENT
$T2 = -80						; size = 40
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_input$ = 8						; size = 4
_length$ = 12						; size = 4
?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z PROC ; CryptoPP::RandomNumberGenerator::IncorporateEntropy, COMDAT
; _this$ = ecx

; 673  : 	virtual void IncorporateEntropy(const byte *input, size_t length) {throw NotImplemented("RandomNumberGenerator: IncorporateEntropy not implemented");}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@CFJCNMFC@RandomNumberGenerator?3?5Incorpor@
  0002d	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00035	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003f	50		 push	 eax
  00040	8d 4d b0	 lea	 ecx, DWORD PTR $T2[ebp]
  00043	e8 00 00 00 00	 call	 ??0NotImplemented@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CryptoPP::NotImplemented::NotImplemented
  00048	68 00 00 00 00	 push	 OFFSET __TI3?AVNotImplemented@CryptoPP@@
  0004d	8d 45 b0	 lea	 eax, DWORD PTR $T2[ebp]
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN5@Incorporat:
  00056	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?IncorporateEntropy@RandomNumberGenerator@CryptoPP@@UAEXPBEI@Z ENDP ; CryptoPP::RandomNumberGenerator::IncorporateEntropy
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?GetAlgorithm@SymmetricCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
_TEXT	SEGMENT
?GetAlgorithm@SymmetricCipher@CryptoPP@@MBEABVAlgorithm@2@XZ PROC ; CryptoPP::SymmetricCipher::GetAlgorithm, COMDAT
; _this$ = ecx

; 614  : 	const Algorithm & GetAlgorithm() const {return *this;}

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetAlgorithm@SymmetricCipher@CryptoPP@@MBEABVAlgorithm@2@XZ ENDP ; CryptoPP::SymmetricCipher::GetAlgorithm
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?GetAlgorithm@BlockCipher@CryptoPP@@MBEABVAlgorithm@2@XZ
_TEXT	SEGMENT
?GetAlgorithm@BlockCipher@CryptoPP@@MBEABVAlgorithm@2@XZ PROC ; CryptoPP::BlockCipher::GetAlgorithm, COMDAT
; _this$ = ecx

; 607  : 	const Algorithm & GetAlgorithm() const {return *this;}

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetAlgorithm@BlockCipher@CryptoPP@@MBEABVAlgorithm@2@XZ ENDP ; CryptoPP::BlockCipher::GetAlgorithm
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?MinLastBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MinLastBlockSize@StreamTransformation@CryptoPP@@UBEIXZ PROC ; CryptoPP::StreamTransformation::MinLastBlockSize, COMDAT
; _this$ = ecx

; 496  : 	virtual unsigned int MinLastBlockSize() const {return 0;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?MinLastBlockSize@StreamTransformation@CryptoPP@@UBEIXZ ENDP ; CryptoPP::StreamTransformation::MinLastBlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?GetOptimalBlockSizeUsed@StreamTransformation@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?GetOptimalBlockSizeUsed@StreamTransformation@CryptoPP@@UBEIXZ PROC ; CryptoPP::StreamTransformation::GetOptimalBlockSizeUsed, COMDAT
; _this$ = ecx

; 483  : 	virtual unsigned int GetOptimalBlockSizeUsed() const {return 0;}

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?GetOptimalBlockSizeUsed@StreamTransformation@CryptoPP@@UBEIXZ ENDP ; CryptoPP::StreamTransformation::GetOptimalBlockSizeUsed
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?MandatoryBlockSize@StreamTransformation@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MandatoryBlockSize@StreamTransformation@CryptoPP@@UBEIXZ PROC ; CryptoPP::StreamTransformation::MandatoryBlockSize, COMDAT
; _this$ = ecx

; 477  : 	virtual unsigned int MandatoryBlockSize() const {return 1;}

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?MandatoryBlockSize@StreamTransformation@CryptoPP@@UBEIXZ ENDP ; CryptoPP::StreamTransformation::MandatoryBlockSize
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?OptimalNumberOfParallelBlocks@BlockTransformation@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?OptimalNumberOfParallelBlocks@BlockTransformation@CryptoPP@@UBEIXZ PROC ; CryptoPP::BlockTransformation::OptimalNumberOfParallelBlocks, COMDAT
; _this$ = ecx

; 457  : 	virtual unsigned int OptimalNumberOfParallelBlocks() const {return 1;}

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?OptimalNumberOfParallelBlocks@BlockTransformation@CryptoPP@@UBEIXZ ENDP ; CryptoPP::BlockTransformation::OptimalNumberOfParallelBlocks
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?IsPermutation@BlockTransformation@CryptoPP@@UBE_NXZ
_TEXT	SEGMENT
?IsPermutation@BlockTransformation@CryptoPP@@UBE_NXZ PROC ; CryptoPP::BlockTransformation::IsPermutation, COMDAT
; _this$ = ecx

; 451  : 	virtual bool IsPermutation() const {return true;}

  00000	b0 01		 mov	 al, 1
  00002	c3		 ret	 0
?IsPermutation@BlockTransformation@CryptoPP@@UBE_NXZ ENDP ; CryptoPP::BlockTransformation::IsPermutation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z
_TEXT	SEGMENT
$T2 = -104						; size = 24
$T3 = -80						; size = 24
$T4 = -56						; size = 40
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iv$ = 8						; size = 4
_ivLength$ = 12						; size = 4
?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z PROC ; CryptoPP::SimpleKeyingInterface::Resynchronize, COMDAT
; _this$ = ecx

; 402  : 	virtual void Resynchronize(const byte *iv, int ivLength=-1) {throw NotImplemented(GetAlgorithm().AlgorithmName() + ": this object doesn't support resynchronization");}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b 01		 mov	 eax, DWORD PTR [ecx]
  0002a	ff 50 34	 call	 DWORD PTR [eax+52]
  0002d	8d 4d b0	 lea	 ecx, DWORD PTR $T3[ebp]
  00030	51		 push	 ecx
  00031	8b c8		 mov	 ecx, eax
  00033	8b 10		 mov	 edx, DWORD PTR [eax]
  00035	ff 52 08	 call	 DWORD PTR [edx+8]
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@CJIHPKKH@?3?5this?5object?5doesn?8t?5support?5r@
  0003d	50		 push	 eax
  0003e	8d 45 98	 lea	 eax, DWORD PTR $T2[ebp]
  00041	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0004e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00051	50		 push	 eax
  00052	8d 4d c8	 lea	 ecx, DWORD PTR $T4[ebp]
  00055	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00059	e8 00 00 00 00	 call	 ??0NotImplemented@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CryptoPP::NotImplemented::NotImplemented
  0005e	68 00 00 00 00	 push	 OFFSET __TI3?AVNotImplemented@CryptoPP@@
  00063	8d 45 c8	 lea	 eax, DWORD PTR $T4[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN6@Resynchron:
  0006c	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z$0:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z$1:
  00008	8d 4d 98	 lea	 ecx, DWORD PTR $T2[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00010	cc		 int	 3
  00011	cc		 int	 3
  00012	cc		 int	 3
  00013	cc		 int	 3
  00014	cc		 int	 3
__ehhandler$?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z:
  00015	90		 npad	 1
  00016	90		 npad	 1
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a a0	 mov	 ecx, DWORD PTR [edx-96]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0002b	33 c8		 xor	 ecx, eax
  0002d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00032	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z
  00037	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Resynchronize@SimpleKeyingInterface@CryptoPP@@UAEXPBEH@Z ENDP ; CryptoPP::SimpleKeyingInterface::Resynchronize
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterface::MaxIVLength, COMDAT
; _this$ = ecx

; 400  : 	virtual unsigned int MaxIVLength() const {return IVSize();}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	ff 60 20	 jmp	 DWORD PTR [eax+32]
?MaxIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterface::MaxIVLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ
_TEXT	SEGMENT
?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ PROC ; CryptoPP::SimpleKeyingInterface::MinIVLength, COMDAT
; _this$ = ecx

; 398  : 	virtual unsigned int MinIVLength() const {return IVSize();}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	ff 60 20	 jmp	 DWORD PTR [eax+32]
?MinIVLength@SimpleKeyingInterface@CryptoPP@@UBEIXZ ENDP ; CryptoPP::SimpleKeyingInterface::MinIVLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?IsValidKeyLength@SimpleKeyingInterface@CryptoPP@@UBE_NI@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
?IsValidKeyLength@SimpleKeyingInterface@CryptoPP@@UBE_NI@Z PROC ; CryptoPP::SimpleKeyingInterface::IsValidKeyLength, COMDAT
; _this$ = ecx

; 364  : 		{return n == GetValidKeyLength(n);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 01		 mov	 eax, DWORD PTR [ecx]
  00005	ff 75 08	 push	 DWORD PTR _n$[ebp]
  00008	ff 50 10	 call	 DWORD PTR [eax+16]
  0000b	39 45 08	 cmp	 DWORD PTR _n$[ebp], eax
  0000e	0f 94 c0	 sete	 al
  00011	5d		 pop	 ebp
  00012	c2 04 00	 ret	 4
?IsValidKeyLength@SimpleKeyingInterface@CryptoPP@@UBE_NI@Z ENDP ; CryptoPP::SimpleKeyingInterface::IsValidKeyLength
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ??1SimpleKeyingInterface@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
??1SimpleKeyingInterface@CryptoPP@@UAE@XZ PROC		; CryptoPP::SimpleKeyingInterface::~SimpleKeyingInterface, COMDAT
; _this$ = ecx

; 350  : 	virtual ~SimpleKeyingInterface() {}

  00000	c2 00 00	 ret	 0
??1SimpleKeyingInterface@CryptoPP@@UAE@XZ ENDP		; CryptoPP::SimpleKeyingInterface::~SimpleKeyingInterface
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?AlgorithmName@Algorithm@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?AlgorithmName@Algorithm@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; CryptoPP::Algorithm::AlgorithmName, COMDAT
; _this$ = ecx

; 343  : 	virtual std::string AlgorithmName() const {return "unknown";}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00004	8b 75 08	 mov	 esi, DWORD PTR ___$ReturnUdt$[ebp]

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00007	6a 07		 push	 7
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_07CIFAGBMG@unknown@
  0000e	56		 push	 esi

; 4377 :         _Mypair._Myval2._Mysize = 0;

  0000f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00016	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0001d	c6 06 00	 mov	 BYTE PTR [esi], 0

; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00020	c7 46 10 07 00
	00 00		 mov	 DWORD PTR [esi+16], 7

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 46 07 00	 mov	 BYTE PTR [esi+7], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 343  : 	virtual std::string AlgorithmName() const {return "unknown";}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
?AlgorithmName@Algorithm@CryptoPP@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; CryptoPP::Algorithm::AlgorithmName
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
_TEXT	SEGMENT
$T2 = -80						; size = 40
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?Clone@Clonable@CryptoPP@@UBEPAV12@XZ PROC		; CryptoPP::Clonable::Clone, COMDAT
; _this$ = ecx

; 331  : 	virtual Clonable* Clone() const {throw NotImplemented("Clone() is not implemented yet.");}	// TODO: make this =0

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 44	 sub	 esp, 68			; 00000044H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@CCPAJEEJ@Clone?$CI?$CJ?5is?5not?5implemented?5yet?4@
  0002d	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00035	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00038	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003f	50		 push	 eax
  00040	8d 4d b0	 lea	 ecx, DWORD PTR $T2[ebp]
  00043	e8 00 00 00 00	 call	 ??0NotImplemented@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CryptoPP::NotImplemented::NotImplemented
  00048	68 00 00 00 00	 push	 OFFSET __TI3?AVNotImplemented@CryptoPP@@
  0004d	8d 45 b0	 lea	 eax, DWORD PTR $T2[ebp]
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN5@Clone:
  00056	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Clone@Clonable@CryptoPP@@UBEPAV12@XZ$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?Clone@Clonable@CryptoPP@@UBEPAV12@XZ:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a b8	 mov	 ecx, DWORD PTR [edx-72]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Clone@Clonable@CryptoPP@@UBEPAV12@XZ
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Clone@Clonable@CryptoPP@@UBEPAV12@XZ ENDP		; CryptoPP::Clonable::Clone
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ??1Clonable@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
??1Clonable@CryptoPP@@UAE@XZ PROC			; CryptoPP::Clonable::~Clonable, COMDAT
; _this$ = ecx

; 329  : 	virtual ~Clonable() {}

  00000	c2 00 00	 ret	 0
??1Clonable@CryptoPP@@UAE@XZ ENDP			; CryptoPP::Clonable::~Clonable
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4541 :     basic_string<_Elem, _Traits, _Alloc>&& _Left, _In_z_ const _Elem* const _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 389  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 55 10	 mov	 edx, DWORD PTR __Right$[ebp]
  00006	8b c2		 mov	 eax, edx

; 4541 :     basic_string<_Elem, _Traits, _Alloc>&& _Left, _In_z_ const _Elem* const _Right) {

  00008	56		 push	 esi

; 389  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00009	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  0000c	0f 1f 40 00	 npad	 4
$LL24@operator:
  00010	8a 08		 mov	 cl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 c9		 test	 cl, cl
  00015	75 f9		 jne	 SHORT $LL24@operator

; 2958 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00017	8b 4d 0c	 mov	 ecx, DWORD PTR __Left$[ebp]

; 389  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0001a	2b c6		 sub	 eax, esi

; 2958 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0001c	50		 push	 eax
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00023	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]

; 4542 :     return _STD move(_Left.append(_Right));

  00026	5e		 pop	 esi

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  00027	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  0002e	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0

; 2684 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00035	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00038	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  0003b	f3 0f 7e 40 10	 movq	 xmm0, QWORD PTR [eax+16]
  00040	66 0f d6 41 10	 movq	 QWORD PTR [ecx+16], xmm0

; 4377 :         _Mypair._Myval2._Mysize = 0;

  00045	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0004c	c7 40 14 0f 00
	00 00		 mov	 DWORD PTR [eax+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00053	c6 00 00	 mov	 BYTE PTR [eax], 0

; 4542 :     return _STD move(_Left.append(_Right));

  00056	8b c1		 mov	 eax, ecx

; 4543 : }

  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBDABV10@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Left$ = 12						; size = 4
$T1 = 16						; size = 1
__Right$ = 16						; size = 4
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBDABV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4456 :     _In_z_ const _Elem* const _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 389  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00004	8b 75 0c	 mov	 esi, DWORD PTR __Left$[ebp]
  00007	8b c6		 mov	 eax, esi
  00009	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0000c	0f 1f 40 00	 npad	 4
$LL15@operator:
  00010	8a 08		 mov	 cl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 c9		 test	 cl, cl
  00015	75 f9		 jne	 SHORT $LL15@operator
  00017	2b c2		 sub	 eax, edx

; 4457 :     using _Size_type       = typename basic_string<_Elem, _Traits, _Alloc>::size_type;
; 4458 :     const auto _Left_size  = _Convert_size<_Size_type>(_Traits::length(_Left));
; 4459 :     const auto _Right_size = _Right.size();
; 4460 :     if (_Right.max_size() - _Right_size < _Left_size) {

  00019	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  0001e	8b 55 10	 mov	 edx, DWORD PTR __Right$[ebp]
  00021	2b 4a 10	 sub	 ecx, DWORD PTR [edx+16]
  00024	3b c8		 cmp	 ecx, eax
  00026	72 22		 jb	 SHORT $LN18@operator

; 2227 :         return _BUF_SIZE <= _Myres;

  00028	83 7a 14 10	 cmp	 DWORD PTR [edx+20], 16	; 00000010H

; 2218 :         const value_type* _Result = _Bx._Buf;

  0002c	8b ca		 mov	 ecx, edx

; 2219 :         if (_Large_string_engaged()) {

  0002e	72 02		 jb	 SHORT $LN11@operator

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  00030	8b 0a		 mov	 ecx, DWORD PTR [edx]
$LN11@operator:

; 4462 :     }
; 4463 : 
; 4464 :     return {_String_constructor_concat_tag{}, _Right, _Left, _Left_size, _Right.c_str(), _Right_size};

  00032	ff 72 10	 push	 DWORD PTR [edx+16]
  00035	51		 push	 ecx
  00036	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00039	50		 push	 eax
  0003a	56		 push	 esi
  0003b	52		 push	 edx
  0003c	ff 75 10	 push	 DWORD PTR $T1[ebp]
  0003f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00044	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00047	5e		 pop	 esi

; 4465 : }

  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
$LN18@operator:

; 4461 :         _Xlen_string();

  0004a	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN16@operator:
  0004f	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBDABV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?ThrowIfTypeMismatch@NameValuePairs@CryptoPP@@SAXPBDABVtype_info@@1@Z
_TEXT	SEGMENT
$T2 = -88						; size = 48
$T3 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
_stored$ = 12						; size = 4
_retrieving$ = 16					; size = 4
?ThrowIfTypeMismatch@NameValuePairs@CryptoPP@@SAXPBDABVtype_info@@1@Z PROC ; CryptoPP::NameValuePairs::ThrowIfTypeMismatch, COMDAT

; 291  : 		{if (stored != retrieving) throw ValueTypeMismatch(name, stored, retrieving);}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ThrowIfTypeMismatch@NameValuePairs@CryptoPP@@SAXPBDABVtype_info@@1@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	50		 push	 eax
  00022	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00025	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002b	8b 7d 10	 mov	 edi, DWORD PTR _retrieving$[ebp]
  0002e	8b 75 0c	 mov	 esi, DWORD PTR _stored$[ebp]
  00031	8b 5d 08	 mov	 ebx, DWORD PTR _name$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h

; 88   :         return __std_type_info_compare(&_Data, &_Other._Data) != 0;

  00034	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00037	50		 push	 eax
  00038	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ___std_type_info_compare
  00041	83 c4 08	 add	 esp, 8
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 291  : 		{if (stored != retrieving) throw ValueTypeMismatch(name, stored, retrieving);}

  00044	85 c0		 test	 eax, eax
  00046	75 1c		 jne	 SHORT $LN10@ThrowIfTyp
  00048	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00052	59		 pop	 ecx
  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00059	33 cd		 xor	 ecx, ebp
  0005b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
$LN10@ThrowIfTyp:
  00064	53		 push	 ebx
  00065	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00068	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0006d	57		 push	 edi
  0006e	56		 push	 esi
  0006f	8d 45 d8	 lea	 eax, DWORD PTR $T3[ebp]
  00072	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00079	50		 push	 eax
  0007a	8d 4d a8	 lea	 ecx, DWORD PTR $T2[ebp]
  0007d	e8 00 00 00 00	 call	 ??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z ; CryptoPP::NameValuePairs::ValueTypeMismatch::ValueTypeMismatch
  00082	68 00 00 00 00	 push	 OFFSET __TI4?AVValueTypeMismatch@NameValuePairs@CryptoPP@@
  00087	8d 45 a8	 lea	 eax, DWORD PTR $T2[ebp]
  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN8@ThrowIfTyp:
  00090	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ThrowIfTypeMismatch@NameValuePairs@CryptoPP@@SAXPBDABVtype_info@@1@Z$0:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$?ThrowIfTypeMismatch@NameValuePairs@CryptoPP@@SAXPBDABVtype_info@@1@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a a4	 mov	 ecx, DWORD PTR [edx-92]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00023	33 c8		 xor	 ecx, eax
  00025	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002a	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ThrowIfTypeMismatch@NameValuePairs@CryptoPP@@SAXPBDABVtype_info@@1@Z
  0002f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ThrowIfTypeMismatch@NameValuePairs@CryptoPP@@SAXPBDABVtype_info@@1@Z ENDP ; CryptoPP::NameValuePairs::ThrowIfTypeMismatch
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_GValueTypeMismatch@NameValuePairs@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GValueTypeMismatch@NameValuePairs@CryptoPP@@UAEPAXI@Z PROC ; CryptoPP::NameValuePairs::ValueTypeMismatch::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 132  : 	virtual ~Exception() throw() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0000c	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0000f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 0d		 jb	 SHORT $LN16@scalar

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	50		 push	 eax
  00016	ff 76 10	 push	 DWORD PTR [esi+16]
  00019	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001e	83 c4 08	 add	 esp, 8
$LN16@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00021	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00024	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00032	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00036	50		 push	 eax
  00037	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0003d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00042	83 c4 04	 add	 esp, 4
  00045	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00049	74 0b		 je	 SHORT $LN24@scalar
  0004b	6a 30		 push	 48			; 00000030H
  0004d	56		 push	 esi
  0004e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00053	83 c4 08	 add	 esp, 8
$LN24@scalar:
  00056	8b c6		 mov	 eax, esi
  00058	5e		 pop	 esi
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
??_GValueTypeMismatch@NameValuePairs@CryptoPP@@UAEPAXI@Z ENDP ; CryptoPP::NameValuePairs::ValueTypeMismatch::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV012@@Z PROC ; CryptoPP::NameValuePairs::ValueTypeMismatch::ValueTypeMismatch, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV012@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0002a	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0002d	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00030	0f 57 c0	 xorps	 xmm0, xmm0

; 72   :     {

  00033	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7exception@std@@6B@

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  00039	50		 push	 eax
  0003a	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  0003e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ___std_exception_copy
  00047	83 c4 08	 add	 esp, 8
  0004a	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7Exception@CryptoPP@@6B@
  00050	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00053	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00056	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  00059	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0005c	50		 push	 eax
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00064	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00069	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7ValueTypeMismatch@NameValuePairs@CryptoPP@@6B@
  0006f	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  00072	89 47 28	 mov	 DWORD PTR [edi+40], eax
  00075	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00078	89 47 2c	 mov	 DWORD PTR [edi+44], eax
  0007b	8b c7		 mov	 eax, edi
  0007d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00087	59		 pop	 ecx
  00088	5f		 pop	 edi
  00089	5e		 pop	 esi
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV012@@Z$2:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV012@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV012@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV012@@Z ENDP ; CryptoPP::NameValuePairs::ValueTypeMismatch::ValueTypeMismatch
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1ValueTypeMismatch@NameValuePairs@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
??1ValueTypeMismatch@NameValuePairs@CryptoPP@@UAE@XZ PROC ; CryptoPP::NameValuePairs::ValueTypeMismatch::~ValueTypeMismatch, COMDAT
; _this$ = ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 132  : 	virtual ~Exception() throw() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00009	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0000c	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 0d		 jb	 SHORT $LN12@ValueTypeM

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00011	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00012	50		 push	 eax
  00013	ff 76 10	 push	 DWORD PTR [esi+16]
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8
$LN12@ValueTypeM:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  0001e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00021	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00028	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0002f	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00033	50		 push	 eax
  00034	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0003a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0003f	83 c4 04	 add	 esp, 4
  00042	5e		 pop	 esi
  00043	c3		 ret	 0
??1ValueTypeMismatch@NameValuePairs@CryptoPP@@UAE@XZ ENDP ; CryptoPP::NameValuePairs::ValueTypeMismatch::~ValueTypeMismatch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z
_TEXT	SEGMENT
_this$GSCopy$ = -172					; size = 4
_this$ = -168						; size = 4
_retrieving$GSCopy$1$ = -164				; size = 4
$T2 = -160						; size = 24
$T3 = -136						; size = 24
$T4 = -112						; size = 24
$T5 = -88						; size = 24
$T6 = -64						; size = 24
$T7 = -40						; size = 24
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
_stored$ = 12						; size = 4
_retrieving$ = 16					; size = 4
??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z PROC ; CryptoPP::NameValuePairs::ValueTypeMismatch::ValueTypeMismatch, COMDAT
; _this$ = ecx

; 236  : 			, m_stored(stored), m_retrieving(retrieving) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	8b f9		 mov	 edi, ecx
  00030	89 bd 58 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], edi
  00036	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00039	8b 4d 10	 mov	 ecx, DWORD PTR _retrieving$[ebp]
  0003c	8b 5d 0c	 mov	 ebx, DWORD PTR _stored$[ebp]
  0003f	50		 push	 eax
  00040	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00046	89 bd 54 ff ff
	ff		 mov	 DWORD PTR _this$GSCopy$[ebp], edi
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@LNMKHLKF@NameValuePairs?3?5type?5mismatch?5f@
  00051	50		 push	 eax
  00052	89 8d 5c ff ff
	ff		 mov	 DWORD PTR _retrieving$GSCopy$1$[ebp], ecx
  00058	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QBDABV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PGGGIJHH@?8?0?5stored?5?8@
  00062	50		 push	 eax
  00063	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  00069	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00076	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h

; 101  :         return __std_type_info_name(&_Data, &__type_info_root_node);

  00078	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 235  : 			: InvalidArgument("NameValuePairs: type mismatch for '" + name + "', stored '" + stored.name() + "', trying to retrieve '" + retrieving.name() + "'")

  0007b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h

; 101  :         return __std_type_info_name(&_Data, &__type_info_root_node);

  0007f	68 00 00 00 00	 push	 OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 ___std_type_info_name
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 235  : 			: InvalidArgument("NameValuePairs: type mismatch for '" + name + "', stored '" + stored.name() + "', trying to retrieve '" + retrieving.name() + "'")

  0008a	50		 push	 eax
  0008b	8d 45 90	 lea	 eax, DWORD PTR $T4[ebp]
  0008e	56		 push	 esi
  0008f	50		 push	 eax
  00090	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CPJAGCKP@?8?0?5trying?5to?5retrieve?5?8@
  0009a	50		 push	 eax
  0009b	8d 45 a8	 lea	 eax, DWORD PTR $T5[ebp]
  0009e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  000a8	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h

; 101  :         return __std_type_info_name(&_Data, &__type_info_root_node);

  000aa	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR _retrieving$GSCopy$1$[ebp]
  000b0	83 c0 04	 add	 eax, 4
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 235  : 			: InvalidArgument("NameValuePairs: type mismatch for '" + name + "', stored '" + stored.name() + "', trying to retrieve '" + retrieving.name() + "'")

  000b3	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_typeinfo.h

; 101  :         return __std_type_info_name(&_Data, &__type_info_root_node);

  000b7	68 00 00 00 00	 push	 OFFSET ?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ___std_type_info_name
  000c2	83 c4 40	 add	 esp, 64			; 00000040H
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 235  : 			: InvalidArgument("NameValuePairs: type mismatch for '" + name + "', stored '" + stored.name() + "', trying to retrieve '" + retrieving.name() + "'")

  000c5	50		 push	 eax
  000c6	8d 45 c0	 lea	 eax, DWORD PTR $T6[ebp]
  000c9	56		 push	 esi
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  000d0	68 00 00 00 00	 push	 OFFSET ??_C@_01GEODFPGF@?8@
  000d5	50		 push	 eax
  000d6	8d 45 d8	 lea	 eax, DWORD PTR $T7[ebp]
  000d9	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000dd	50		 push	 eax
  000de	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QAV10@QBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  000e3	83 c4 18	 add	 esp, 24			; 00000018H
  000e6	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 53   :         : _Data()

  000e9	66 0f d6 47 04	 movq	 QWORD PTR [edi+4], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 131  : 	explicit Exception(ErrorType errorType, const std::string &s) : m_errorType(errorType), m_what(s) {}

  000ee	50		 push	 eax
  000ef	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  000f2	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  000f6	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7Exception@CryptoPP@@6B@
  000fc	c7 47 0c 01 00
	00 00		 mov	 DWORD PTR [edi+12], 1
  00103	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00108	8b 45 ec	 mov	 eax, DWORD PTR $T7[ebp+20]
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 148  : 	explicit InvalidArgument(const std::string &s) : Exception(INVALID_ARGUMENT, s) {}

  0010b	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7InvalidArgument@CryptoPP@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00111	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00114	72 0d		 jb	 SHORT $LN27@ValueTypeM

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00116	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00117	50		 push	 eax
  00118	ff 75 d8	 push	 DWORD PTR $T7[ebp]
  0011b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00120	83 c4 08	 add	 esp, 8
$LN27@ValueTypeM:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00123	8b 45 d4	 mov	 eax, DWORD PTR $T6[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00126	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR $T7[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0012d	c7 45 ec 0f 00
	00 00		 mov	 DWORD PTR $T7[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00134	c6 45 d8 00	 mov	 BYTE PTR $T7[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  00138	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0013b	72 0d		 jb	 SHORT $LN37@ValueTypeM

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0013d	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0013e	50		 push	 eax
  0013f	ff 75 c0	 push	 DWORD PTR $T6[ebp]
  00142	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00147	83 c4 08	 add	 esp, 8
$LN37@ValueTypeM:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0014a	8b 45 bc	 mov	 eax, DWORD PTR $T5[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  0014d	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR $T6[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00154	c7 45 d4 0f 00
	00 00		 mov	 DWORD PTR $T6[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0015b	c6 45 c0 00	 mov	 BYTE PTR $T6[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  0015f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00162	72 0d		 jb	 SHORT $LN47@ValueTypeM

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00164	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00165	50		 push	 eax
  00166	ff 75 a8	 push	 DWORD PTR $T5[ebp]
  00169	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0016e	83 c4 08	 add	 esp, 8
$LN47@ValueTypeM:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00171	8b 45 a4	 mov	 eax, DWORD PTR $T4[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00174	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0017b	c7 45 bc 0f 00
	00 00		 mov	 DWORD PTR $T5[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00182	c6 45 a8 00	 mov	 BYTE PTR $T5[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  00186	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00189	72 0d		 jb	 SHORT $LN57@ValueTypeM

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0018b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0018c	50		 push	 eax
  0018d	ff 75 90	 push	 DWORD PTR $T4[ebp]
  00190	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00195	83 c4 08	 add	 esp, 8
$LN57@ValueTypeM:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00198	8b 45 8c	 mov	 eax, DWORD PTR $T3[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  0019b	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001a2	c7 45 a4 0f 00
	00 00		 mov	 DWORD PTR $T4[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  001a9	c6 45 90 00	 mov	 BYTE PTR $T4[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  001ad	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001b0	72 10		 jb	 SHORT $LN67@ValueTypeM

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001b2	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001b3	50		 push	 eax
  001b4	ff b5 78 ff ff
	ff		 push	 DWORD PTR $T3[ebp]
  001ba	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001bf	83 c4 08	 add	 esp, 8
$LN67@ValueTypeM:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  001c2	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR $T2[ebp+20]

; 4392 :         _Mypair._Myval2._Mysize = 0;

  001c8	c7 45 88 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  001cf	c7 45 8c 0f 00
	00 00		 mov	 DWORD PTR $T3[ebp+20], 15 ; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  001d6	c6 85 78 ff ff
	ff 00		 mov	 BYTE PTR $T3[ebp], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  001dd	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  001e0	72 10		 jb	 SHORT $LN77@ValueTypeM

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  001e2	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  001e3	50		 push	 eax
  001e4	ff b5 60 ff ff
	ff		 push	 DWORD PTR $T2[ebp]
  001ea	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  001ef	83 c4 08	 add	 esp, 8
$LN77@ValueTypeM:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 236  : 			, m_stored(stored), m_retrieving(retrieving) {}

  001f2	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR _retrieving$GSCopy$1$[ebp]
  001f8	89 47 2c	 mov	 DWORD PTR [edi+44], eax
  001fb	8b c7		 mov	 eax, edi
  001fd	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7ValueTypeMismatch@NameValuePairs@CryptoPP@@6B@
  00203	89 5f 28	 mov	 DWORD PTR [edi+40], ebx
  00206	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00209	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00210	59		 pop	 ecx
  00211	5f		 pop	 edi
  00212	5e		 pop	 esi
  00213	5b		 pop	 ebx
  00214	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00217	33 cd		 xor	 ecx, ebp
  00219	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0021e	8b e5		 mov	 esp, ebp
  00220	5d		 pop	 ebp
  00221	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z$0:
  00000	8d 8d 60 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z$1:
  0000b	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z$2:
  00016	8d 4d 90	 lea	 ecx, DWORD PTR $T4[ebp]
  00019	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z$3:
  0001e	8d 4d a8	 lea	 ecx, DWORD PTR $T5[ebp]
  00021	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z$4:
  00026	8d 4d c0	 lea	 ecx, DWORD PTR $T6[ebp]
  00029	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z$5:
  0002e	8d 4d d8	 lea	 ecx, DWORD PTR $T7[ebp]
  00031	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z$8:
  00036	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  0003c	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00041	cc		 int	 3
  00042	cc		 int	 3
  00043	cc		 int	 3
  00044	cc		 int	 3
  00045	cc		 int	 3
__ehhandler$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z:
  00046	90		 npad	 1
  00047	90		 npad	 1
  00048	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0004c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0004f	8b 8a 50 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-176]
  00055	33 c8		 xor	 ecx, eax
  00057	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005c	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0005f	33 c8		 xor	 ecx, eax
  00061	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00066	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z
  0006b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ValueTypeMismatch@NameValuePairs@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABVtype_info@@1@Z ENDP ; CryptoPP::NameValuePairs::ValueTypeMismatch::ValueTypeMismatch
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ??1NameValuePairs@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
??1NameValuePairs@CryptoPP@@UAE@XZ PROC			; CryptoPP::NameValuePairs::~NameValuePairs, COMDAT
; _this$ = ecx

; 228  : 	virtual ~NameValuePairs() {}

  00000	c2 00 00	 ret	 0
??1NameValuePairs@CryptoPP@@UAE@XZ ENDP			; CryptoPP::NameValuePairs::~NameValuePairs
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_GNotImplemented@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GNotImplemented@CryptoPP@@UAEPAXI@Z PROC		; CryptoPP::NotImplemented::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 132  : 	virtual ~Exception() throw() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0000c	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0000f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 0d		 jb	 SHORT $LN13@scalar

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	50		 push	 eax
  00016	ff 76 10	 push	 DWORD PTR [esi+16]
  00019	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001e	83 c4 08	 add	 esp, 8
$LN13@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00021	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00024	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00032	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00036	50		 push	 eax
  00037	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0003d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00042	83 c4 04	 add	 esp, 4
  00045	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00049	74 0b		 je	 SHORT $LN21@scalar
  0004b	6a 28		 push	 40			; 00000028H
  0004d	56		 push	 esi
  0004e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00053	83 c4 08	 add	 esp, 8
$LN21@scalar:
  00056	8b c6		 mov	 eax, esi
  00058	5e		 pop	 esi
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
??_GNotImplemented@CryptoPP@@UAEPAXI@Z ENDP		; CryptoPP::NotImplemented::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0NotImplemented@CryptoPP@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0NotImplemented@CryptoPP@@QAE@ABV01@@Z PROC		; CryptoPP::NotImplemented::NotImplemented, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0NotImplemented@CryptoPP@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0002a	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0002d	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00030	0f 57 c0	 xorps	 xmm0, xmm0

; 72   :     {

  00033	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7exception@std@@6B@

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  00039	50		 push	 eax
  0003a	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  0003e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ___std_exception_copy
  00047	83 c4 08	 add	 esp, 8
  0004a	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7Exception@CryptoPP@@6B@
  00050	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00053	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00056	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  00059	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0005c	50		 push	 eax
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00064	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00069	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7NotImplemented@CryptoPP@@6B@
  0006f	8b c7		 mov	 eax, edi
  00071	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007b	59		 pop	 ecx
  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0NotImplemented@CryptoPP@@QAE@ABV01@@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0NotImplemented@CryptoPP@@QAE@ABV01@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0NotImplemented@CryptoPP@@QAE@ABV01@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0NotImplemented@CryptoPP@@QAE@ABV01@@Z ENDP		; CryptoPP::NotImplemented::NotImplemented
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1NotImplemented@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
??1NotImplemented@CryptoPP@@UAE@XZ PROC			; CryptoPP::NotImplemented::~NotImplemented, COMDAT
; _this$ = ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 132  : 	virtual ~Exception() throw() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00009	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0000c	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 0d		 jb	 SHORT $LN9@NotImpleme

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00011	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00012	50		 push	 eax
  00013	ff 76 10	 push	 DWORD PTR [esi+16]
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8
$LN9@NotImpleme:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  0001e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00021	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00028	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0002f	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00033	50		 push	 eax
  00034	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0003a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0003f	83 c4 04	 add	 esp, 4
  00042	5e		 pop	 esi
  00043	c3		 ret	 0
??1NotImplemented@CryptoPP@@UAE@XZ ENDP			; CryptoPP::NotImplemented::~NotImplemented
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ??0NotImplemented@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
??0NotImplemented@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CryptoPP::NotImplemented::NotImplemented, COMDAT
; _this$ = ecx

; 169  : 	explicit NotImplemented(const std::string &s) : Exception(NOT_IMPLEMENTED, s) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0NotImplemented@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 53   :         : _Data()

  0002c	66 0f d6 46 04	 movq	 QWORD PTR [esi+4], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 131  : 	explicit Exception(ErrorType errorType, const std::string &s) : m_errorType(errorType), m_what(s) {}

  00031	ff 75 08	 push	 DWORD PTR _s$[ebp]
  00034	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
  00044	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  0004b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 169  : 	explicit NotImplemented(const std::string &s) : Exception(NOT_IMPLEMENTED, s) {}

  00050	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7NotImplemented@CryptoPP@@6B@
  00056	8b c6		 mov	 eax, esi
  00058	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00062	59		 pop	 ecx
  00063	5e		 pop	 esi
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0NotImplemented@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0NotImplemented@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0NotImplemented@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0NotImplemented@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CryptoPP::NotImplemented::NotImplemented
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_GInvalidDataFormat@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GInvalidDataFormat@CryptoPP@@UAEPAXI@Z PROC		; CryptoPP::InvalidDataFormat::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 132  : 	virtual ~Exception() throw() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0000c	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0000f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 0d		 jb	 SHORT $LN13@scalar

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	50		 push	 eax
  00016	ff 76 10	 push	 DWORD PTR [esi+16]
  00019	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001e	83 c4 08	 add	 esp, 8
$LN13@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00021	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00024	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00032	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00036	50		 push	 eax
  00037	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0003d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00042	83 c4 04	 add	 esp, 4
  00045	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00049	74 0b		 je	 SHORT $LN21@scalar
  0004b	6a 28		 push	 40			; 00000028H
  0004d	56		 push	 esi
  0004e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00053	83 c4 08	 add	 esp, 8
$LN21@scalar:
  00056	8b c6		 mov	 eax, esi
  00058	5e		 pop	 esi
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
??_GInvalidDataFormat@CryptoPP@@UAEPAXI@Z ENDP		; CryptoPP::InvalidDataFormat::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0InvalidDataFormat@CryptoPP@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0InvalidDataFormat@CryptoPP@@QAE@ABV01@@Z PROC	; CryptoPP::InvalidDataFormat::InvalidDataFormat, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0InvalidDataFormat@CryptoPP@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0002a	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0002d	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00030	0f 57 c0	 xorps	 xmm0, xmm0

; 72   :     {

  00033	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7exception@std@@6B@

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  00039	50		 push	 eax
  0003a	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  0003e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ___std_exception_copy
  00047	83 c4 08	 add	 esp, 8
  0004a	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7Exception@CryptoPP@@6B@
  00050	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00053	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00056	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  00059	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0005c	50		 push	 eax
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00064	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00069	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7InvalidDataFormat@CryptoPP@@6B@
  0006f	8b c7		 mov	 eax, edi
  00071	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007b	59		 pop	 ecx
  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0InvalidDataFormat@CryptoPP@@QAE@ABV01@@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0InvalidDataFormat@CryptoPP@@QAE@ABV01@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0InvalidDataFormat@CryptoPP@@QAE@ABV01@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0InvalidDataFormat@CryptoPP@@QAE@ABV01@@Z ENDP	; CryptoPP::InvalidDataFormat::InvalidDataFormat
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_GInvalidArgument@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GInvalidArgument@CryptoPP@@UAEPAXI@Z PROC		; CryptoPP::InvalidArgument::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 132  : 	virtual ~Exception() throw() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0000c	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0000f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 0d		 jb	 SHORT $LN13@scalar

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	50		 push	 eax
  00016	ff 76 10	 push	 DWORD PTR [esi+16]
  00019	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001e	83 c4 08	 add	 esp, 8
$LN13@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00021	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00024	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00032	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00036	50		 push	 eax
  00037	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0003d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00042	83 c4 04	 add	 esp, 4
  00045	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00049	74 0b		 je	 SHORT $LN21@scalar
  0004b	6a 28		 push	 40			; 00000028H
  0004d	56		 push	 esi
  0004e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00053	83 c4 08	 add	 esp, 8
$LN21@scalar:
  00056	8b c6		 mov	 eax, esi
  00058	5e		 pop	 esi
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
??_GInvalidArgument@CryptoPP@@UAEPAXI@Z ENDP		; CryptoPP::InvalidArgument::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0InvalidArgument@CryptoPP@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0InvalidArgument@CryptoPP@@QAE@ABV01@@Z PROC		; CryptoPP::InvalidArgument::InvalidArgument, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0InvalidArgument@CryptoPP@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0002a	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0002d	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00030	0f 57 c0	 xorps	 xmm0, xmm0

; 72   :     {

  00033	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7exception@std@@6B@

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  00039	50		 push	 eax
  0003a	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  0003e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ___std_exception_copy
  00047	83 c4 08	 add	 esp, 8
  0004a	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7Exception@CryptoPP@@6B@
  00050	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00053	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00056	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  00059	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0005c	50		 push	 eax
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00064	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00069	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7InvalidArgument@CryptoPP@@6B@
  0006f	8b c7		 mov	 eax, edi
  00071	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0007b	59		 pop	 ecx
  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0InvalidArgument@CryptoPP@@QAE@ABV01@@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0InvalidArgument@CryptoPP@@QAE@ABV01@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0InvalidArgument@CryptoPP@@QAE@ABV01@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0InvalidArgument@CryptoPP@@QAE@ABV01@@Z ENDP		; CryptoPP::InvalidArgument::InvalidArgument
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1InvalidArgument@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
??1InvalidArgument@CryptoPP@@UAE@XZ PROC		; CryptoPP::InvalidArgument::~InvalidArgument, COMDAT
; _this$ = ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 132  : 	virtual ~Exception() throw() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00009	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0000c	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 0d		 jb	 SHORT $LN9@InvalidArg

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00011	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00012	50		 push	 eax
  00013	ff 76 10	 push	 DWORD PTR [esi+16]
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8
$LN9@InvalidArg:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  0001e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00021	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00028	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0002f	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00033	50		 push	 eax
  00034	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0003a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0003f	83 c4 04	 add	 esp, 4
  00042	5e		 pop	 esi
  00043	c3		 ret	 0
??1InvalidArgument@CryptoPP@@UAE@XZ ENDP		; CryptoPP::InvalidArgument::~InvalidArgument
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ??0InvalidArgument@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
??0InvalidArgument@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; CryptoPP::InvalidArgument::InvalidArgument, COMDAT
; _this$ = ecx

; 148  : 	explicit InvalidArgument(const std::string &s) : Exception(INVALID_ARGUMENT, s) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0InvalidArgument@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00029	0f 57 c0	 xorps	 xmm0, xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 53   :         : _Data()

  0002c	66 0f d6 46 04	 movq	 QWORD PTR [esi+4], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 131  : 	explicit Exception(ErrorType errorType, const std::string &s) : m_errorType(errorType), m_what(s) {}

  00031	ff 75 08	 push	 DWORD PTR _s$[ebp]
  00034	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00037	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
  00044	c7 46 0c 01 00
	00 00		 mov	 DWORD PTR [esi+12], 1
  0004b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 148  : 	explicit InvalidArgument(const std::string &s) : Exception(INVALID_ARGUMENT, s) {}

  00050	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7InvalidArgument@CryptoPP@@6B@
  00056	8b c6		 mov	 eax, esi
  00058	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00062	59		 pop	 ecx
  00063	5e		 pop	 esi
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0InvalidArgument@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0InvalidArgument@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0InvalidArgument@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0InvalidArgument@CryptoPP@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CryptoPP::InvalidArgument::InvalidArgument
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_GException@CryptoPP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GException@CryptoPP@@UAEPAXI@Z PROC			; CryptoPP::Exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 132  : 	virtual ~Exception() throw() {}

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  0000c	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0000f	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00012	72 0d		 jb	 SHORT $LN10@scalar

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00014	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00015	50		 push	 eax
  00016	ff 76 10	 push	 DWORD PTR [esi+16]
  00019	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001e	83 c4 08	 add	 esp, 8
$LN10@scalar:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00021	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00024	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00032	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00036	50		 push	 eax
  00037	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0003d	e8 00 00 00 00	 call	 ___std_exception_destroy
  00042	83 c4 04	 add	 esp, 4
  00045	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  00049	74 0b		 je	 SHORT $LN18@scalar
  0004b	6a 28		 push	 40			; 00000028H
  0004d	56		 push	 esi
  0004e	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00053	83 c4 08	 add	 esp, 8
$LN18@scalar:
  00056	8b c6		 mov	 eax, esi
  00058	5e		 pop	 esi
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
??_GException@CryptoPP@@UAEPAXI@Z ENDP			; CryptoPP::Exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0Exception@CryptoPP@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0Exception@CryptoPP@@QAE@ABV01@@Z PROC		; CryptoPP::Exception::Exception, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Exception@CryptoPP@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	8b f9		 mov	 edi, ecx
  00027	89 7d f0	 mov	 DWORD PTR _this$[ebp], edi

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0002a	8b 75 08	 mov	 esi, DWORD PTR ___that$[ebp]
  0002d	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00030	0f 57 c0	 xorps	 xmm0, xmm0

; 72   :     {

  00033	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7exception@std@@6B@

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  00039	50		 push	 eax
  0003a	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  0003e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ___std_exception_copy
  00047	83 c4 08	 add	 esp, 8
  0004a	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7Exception@CryptoPP@@6B@
  00050	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00053	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00056	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  00059	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  0005c	50		 push	 eax
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  00064	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00069	8b c7		 mov	 eax, edi
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@CryptoPP@@QAE@ABV01@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@std@@UAE@XZ ; std::exception::~exception
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0Exception@CryptoPP@@QAE@ABV01@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Exception@CryptoPP@@QAE@ABV01@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Exception@CryptoPP@@QAE@ABV01@@Z ENDP		; CryptoPP::Exception::Exception
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ?what@Exception@CryptoPP@@UBEPBDXZ
_TEXT	SEGMENT
?what@Exception@CryptoPP@@UBEPBDXZ PROC			; CryptoPP::Exception::what, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00000	83 79 24 10	 cmp	 DWORD PTR [ecx+36], 16	; 00000010H

; 3752 :         return _Mypair._Myval2._Myptr();

  00004	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]

; 2219 :         if (_Large_string_engaged()) {

  00007	72 02		 jb	 SHORT $LN6@what
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 133  : 	const char *what() const throw() {return (m_what.c_str());}

  00009	8b 00		 mov	 eax, DWORD PTR [eax]
$LN6@what:
  0000b	c3		 ret	 0
?what@Exception@CryptoPP@@UBEPBDXZ ENDP			; CryptoPP::Exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h
;	COMDAT ??1Exception@CryptoPP@@UAE@XZ
_TEXT	SEGMENT
??1Exception@CryptoPP@@UAE@XZ PROC			; CryptoPP::Exception::~Exception, COMDAT
; _this$ = ecx

; 132  : 	virtual ~Exception() throw() {}

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7Exception@CryptoPP@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2227 :         return _BUF_SIZE <= _Myres;

  00009	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0000c	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0000f	72 0d		 jb	 SHORT $LN7@Exception

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00011	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00012	50		 push	 eax
  00013	ff 76 10	 push	 DWORD PTR [esi+16]
  00016	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0001b	83 c4 08	 add	 esp, 8
$LN7@Exception:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  0001e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00021	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00028	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0002f	c6 46 10 00	 mov	 BYTE PTR [esi+16], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h

; 90   :         __std_exception_destroy(&_Data);

  00033	50		 push	 eax
  00034	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0003a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0003f	83 c4 04	 add	 esp, 4
  00042	5e		 pop	 esi
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\cryptopp\cryptlib.h

; 132  : 	virtual ~Exception() throw() {}

  00043	c3		 ret	 0
??1Exception@CryptoPP@@UAE@XZ ENDP			; CryptoPP::Exception::~Exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__New_ptr$1 = 12					; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 3042 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	57		 push	 edi

; 3043 :         // assign [_Ptr, _Ptr + _Count)
; 3044 :         if (_Count <= _Mypair._Myval2._Myres) {

  00009	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0000c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0000f	89 4d fc	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00012	3b f9		 cmp	 edi, ecx
  00014	77 28		 ja	 SHORT $LN2@assign

; 2209 :         value_type* _Result = _Bx._Buf;

  00016	8b de		 mov	 ebx, esi

; 2227 :         return _BUF_SIZE <= _Myres;

  00018	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2210 :         if (_Large_string_engaged()) {

  0001b	72 02		 jb	 SHORT $LN5@assign

; 2211 :             _Result = _Unfancy(_Bx._Ptr);

  0001d	8b 1e		 mov	 ebx, DWORD PTR [esi]
$LN5@assign:

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  0001f	57		 push	 edi
  00020	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 3045 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 3046 :             _Mypair._Myval2._Mysize = _Count;

  00023	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00026	53		 push	 ebx
  00027	e8 00 00 00 00	 call	 _memmove
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3047 :             _Traits::move(_Old_ptr, _Ptr, _Count);
; 3048 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0002f	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 3059 :     }

  00033	8b c6		 mov	 eax, esi
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c2 08 00	 ret	 8
$LN2@assign:

; 4305 :         if (_New_size > max_size()) {

  0003e	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  00044	0f 87 91 00 00
	00		 ja	 $LN36@assign

; 4285 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0004a	8b df		 mov	 ebx, edi
  0004c	83 cb 0f	 or	 ebx, 15			; 0000000fH
  0004f	81 fb ff ff ff
	7f		 cmp	 ebx, 2147483647		; 7fffffffH

; 4286 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00055	76 07		 jbe	 SHORT $LN19@assign

; 4287 :             return _Max;

  00057	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  0005c	eb 1e		 jmp	 SHORT $LN18@assign
$LN19@assign:

; 4288 :         }
; 4289 : 
; 4290 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0005e	8b d1		 mov	 edx, ecx
  00060	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00065	d1 ea		 shr	 edx, 1
  00067	2b c2		 sub	 eax, edx
  00069	3b c8		 cmp	 ecx, eax
  0006b	76 07		 jbe	 SHORT $LN20@assign

; 4291 :             return _Max;

  0006d	bb ff ff ff 7f	 mov	 ebx, 2147483647		; 7fffffffH
  00072	eb 08		 jmp	 SHORT $LN18@assign
$LN20@assign:

; 4292 :         }
; 4293 : 
; 4294 :         return (_STD max)(_Masked, _Old + _Old / 2);

  00074	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00077	3b d8		 cmp	 ebx, eax
  00079	0f 42 d8	 cmovb	 ebx, eax
$LN18@assign:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4312 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  0007c	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00085	57		 push	 edi
  00086	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 4312 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00089	89 45 0c	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0008c	50		 push	 eax

; 4314 :         _Mypair._Myval2._Mysize = _New_size;

  0008d	89 7e 10	 mov	 DWORD PTR [esi+16], edi

; 4315 :         _Mypair._Myval2._Myres  = _New_capacity;

  00090	89 5e 14	 mov	 DWORD PTR [esi+20], ebx

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00093	e8 00 00 00 00	 call	 _memcpy

; 3056 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00098	8b 5d 0c	 mov	 ebx, DWORD PTR __New_ptr$1[ebp]

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0009b	83 c4 10	 add	 esp, 16			; 00000010H

; 4317 :         if (_BUF_SIZE <= _Old_capacity) {

  0009e	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]

; 3056 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  000a1	c6 04 3b 00	 mov	 BYTE PTR [ebx+edi], 0

; 4317 :         if (_BUF_SIZE <= _Old_capacity) {

  000a5	83 f8 10	 cmp	 eax, 16			; 00000010H
  000a8	72 19		 jb	 SHORT $LN13@assign

; 4318 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000aa	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ab	50		 push	 eax
  000ac	ff 36		 push	 DWORD PTR [esi]
  000ae	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3059 :     }

  000b3	83 c4 08	 add	 esp, 8

; 4319 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  000b6	89 1e		 mov	 DWORD PTR [esi], ebx

; 3059 :     }

  000b8	8b c6		 mov	 eax, esi
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c2 08 00	 ret	 8
$LN13@assign:

; 4321 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  000c3	8d 45 0c	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000c6	50		 push	 eax
  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 3059 :     }

  000cd	83 c4 08	 add	 esp, 8
  000d0	8b c6		 mov	 eax, esi
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	5b		 pop	 ebx
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c2 08 00	 ret	 8
$LN36@assign:

; 4306 :             _Xlen_string(); // result too long

  000db	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN33@assign:
  000e0	cc		 int	 3
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
__Old_size$1$ = -16					; size = 4
__New_ptr$1 = -12					; size = 4
tv448 = -8						; size = 4
__Old$1$ = -4						; size = 4
__Ptr$ = 8						; size = 4
tv452 = 12						; size = 4
tv449 = 12						; size = 4
$T2 = 12						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 2935 :     basic_string& append(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx

; 2936 :         // append [_Ptr, _Ptr + _Count)
; 2937 :         const size_type _Old_size = _Mypair._Myval2._Mysize;
; 2938 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  00007	8b 5d 0c	 mov	 ebx, DWORD PTR __Count$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b f9		 mov	 edi, ecx
  0000e	8b 57 14	 mov	 edx, DWORD PTR [edi+20]
  00011	8b c2		 mov	 eax, edx
  00013	8b 77 10	 mov	 esi, DWORD PTR [edi+16]
  00016	2b c6		 sub	 eax, esi
  00018	89 75 f0	 mov	 DWORD PTR __Old_size$1$[ebp], esi
  0001b	89 55 fc	 mov	 DWORD PTR __Old$1$[ebp], edx
  0001e	3b d8		 cmp	 ebx, eax
  00020	77 2d		 ja	 SHORT $LN2@append

; 2939 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00022	8d 04 1e	 lea	 eax, DWORD PTR [esi+ebx]
  00025	89 47 10	 mov	 DWORD PTR [edi+16], eax

; 2209 :         value_type* _Result = _Bx._Buf;

  00028	8b c7		 mov	 eax, edi

; 2227 :         return _BUF_SIZE <= _Myres;

  0002a	83 fa 10	 cmp	 edx, 16			; 00000010H

; 2210 :         if (_Large_string_engaged()) {

  0002d	72 02		 jb	 SHORT $LN5@append

; 2211 :             _Result = _Unfancy(_Bx._Ptr);

  0002f	8b 07		 mov	 eax, DWORD PTR [edi]
$LN5@append:

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00031	53		 push	 ebx
  00032	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]

; 2940 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();
; 2941 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

  00035	03 f0		 add	 esi, eax

; 119  :         _CSTD memmove(_First1, _First2, _Count * sizeof(_Elem));

  00037	56		 push	 esi
  00038	e8 00 00 00 00	 call	 _memmove
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2942 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  00040	c6 04 1e 00	 mov	 BYTE PTR [esi+ebx], 0

; 2953 :             },
; 2954 :             _Ptr, _Count);
; 2955 :     }

  00044	8b c7		 mov	 eax, edi
  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 08 00	 ret	 8
$LN2@append:

; 4333 :         if (max_size() - _Old_size < _Size_increase) {

  0004f	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00054	2b c6		 sub	 eax, esi
  00056	3b c3		 cmp	 eax, ebx
  00058	0f 82 d6 00 00
	00		 jb	 $LN45@append

; 4335 :         }
; 4336 : 
; 4337 :         const size_type _New_size     = _Old_size + _Size_increase;

  0005e	8d 0c 1e	 lea	 ecx, DWORD PTR [esi+ebx]

; 4285 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00061	83 c9 0f	 or	 ecx, 15			; 0000000fH
  00064	81 f9 ff ff ff
	7f		 cmp	 ecx, 2147483647		; 7fffffffH

; 4286 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  0006a	76 07		 jbe	 SHORT $LN19@append

; 4287 :             return _Max;

  0006c	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  00071	eb 24		 jmp	 SHORT $LN42@append
$LN19@append:

; 4288 :         }
; 4289 : 
; 4290 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00073	8b c2		 mov	 eax, edx
  00075	d1 e8		 shr	 eax, 1
  00077	89 45 0c	 mov	 DWORD PTR tv452[ebp], eax
  0007a	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  0007f	2b 45 0c	 sub	 eax, DWORD PTR tv452[ebp]
  00082	3b d0		 cmp	 edx, eax
  00084	76 07		 jbe	 SHORT $LN20@append

; 4291 :             return _Max;

  00086	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  0008b	eb 0a		 jmp	 SHORT $LN42@append
$LN20@append:

; 4292 :         }
; 4293 : 
; 4294 :         return (_STD max)(_Masked, _Old + _Old / 2);

  0008d	8b 45 0c	 mov	 eax, DWORD PTR tv452[ebp]
  00090	03 c2		 add	 eax, edx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00092	3b c8		 cmp	 ecx, eax
  00094	0f 42 c8	 cmovb	 ecx, eax
$LN42@append:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4341 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00097	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  0009a	89 4d 0c	 mov	 DWORD PTR $T2[ebp], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4343 :         _My_data._Mysize      = _New_size;

  000a3	8d 0c 1e	 lea	 ecx, DWORD PTR [esi+ebx]
  000a6	89 45 f4	 mov	 DWORD PTR __New_ptr$1[ebp], eax
  000a9	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  000ac	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4344 :         _My_data._Myres       = _New_capacity;

  000af	8b 4d 0c	 mov	 ecx, DWORD PTR $T2[ebp]
  000b2	89 4f 14	 mov	 DWORD PTR [edi+20], ecx

; 4345 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000b5	8d 0c 30	 lea	 ecx, DWORD PTR [eax+esi]
  000b8	89 4d 0c	 mov	 DWORD PTR tv449[ebp], ecx
  000bb	03 cb		 add	 ecx, ebx

; 4346 :         if (_BUF_SIZE <= _Old_capacity) {

  000bd	83 7d fc 10	 cmp	 DWORD PTR __Old$1$[ebp], 16 ; 00000010H
  000c1	89 4d f8	 mov	 DWORD PTR tv448[ebp], ecx
  000c4	72 3c		 jb	 SHORT $LN13@append

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000c6	ff 75 f0	 push	 DWORD PTR __Old_size$1$[ebp]

; 4347 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  000c9	8b 37		 mov	 esi, DWORD PTR [edi]

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000cb	56		 push	 esi
  000cc	50		 push	 eax
  000cd	e8 00 00 00 00	 call	 _memcpy
  000d2	53		 push	 ebx
  000d3	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  000d6	ff 75 0c	 push	 DWORD PTR tv449[ebp]
  000d9	e8 00 00 00 00	 call	 _memcpy

; 2952 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  000de	8b 45 f8	 mov	 eax, DWORD PTR tv448[ebp]
  000e1	c6 00 00	 mov	 BYTE PTR [eax], 0

; 4349 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  000e4	8b 45 fc	 mov	 eax, DWORD PTR __Old$1$[ebp]
  000e7	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000e8	50		 push	 eax
  000e9	56		 push	 esi
  000ea	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4350 :             _My_data._Bx._Ptr = _New_ptr;

  000ef	8b 45 f4	 mov	 eax, DWORD PTR __New_ptr$1[ebp]

; 2953 :             },
; 2954 :             _Ptr, _Count);
; 2955 :     }

  000f2	83 c4 20	 add	 esp, 32			; 00000020H

; 4350 :             _My_data._Bx._Ptr = _New_ptr;

  000f5	89 07		 mov	 DWORD PTR [edi], eax

; 2953 :             },
; 2954 :             _Ptr, _Count);
; 2955 :     }

  000f7	8b c7		 mov	 eax, edi
  000f9	5f		 pop	 edi
  000fa	5e		 pop	 esi
  000fb	5b		 pop	 ebx
  000fc	8b e5		 mov	 esp, ebp
  000fe	5d		 pop	 ebp
  000ff	c2 08 00	 ret	 8
$LN13@append:

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00102	56		 push	 esi
  00103	57		 push	 edi
  00104	50		 push	 eax
  00105	e8 00 00 00 00	 call	 _memcpy
  0010a	53		 push	 ebx
  0010b	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  0010e	ff 75 0c	 push	 DWORD PTR tv449[ebp]
  00111	e8 00 00 00 00	 call	 _memcpy

; 2952 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00116	8b 45 f8	 mov	 eax, DWORD PTR tv448[ebp]
  00119	c6 00 00	 mov	 BYTE PTR [eax], 0

; 4353 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  0011c	8d 45 f4	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  0011f	50		 push	 eax
  00120	57		 push	 edi
  00121	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2953 :             },
; 2954 :             _Ptr, _Count);
; 2955 :     }

  00126	83 c4 20	 add	 esp, 32			; 00000020H
  00129	8b c7		 mov	 eax, edi
  0012b	5f		 pop	 edi
  0012c	5e		 pop	 esi
  0012d	5b		 pop	 ebx
  0012e	8b e5		 mov	 esp, ebp
  00130	5d		 pop	 ebp
  00131	c2 08 00	 ret	 8
$LN45@append:

; 4334 :             _Xlen_string(); // result too long

  00134	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN41@append:
  00139	cc		 int	 3
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z
_TEXT	SEGMENT
__Old$1$ = -8						; size = 4
__New_ptr$1 = -4					; size = 4
__Ch$ = 8						; size = 1
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT
; _this$ = ecx

; 2904 :     basic_string& operator+=(_Elem _Ch) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx

; 3693 :         if (_Old_size < _Mypair._Myval2._Myres) {

  0000a	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  0000d	8b 5f 10	 mov	 ebx, DWORD PTR [edi+16]
  00010	89 4d f8	 mov	 DWORD PTR __Old$1$[ebp], ecx
  00013	3b d9		 cmp	 ebx, ecx
  00015	73 24		 jae	 SHORT $LN4@operator

; 3694 :             _Mypair._Myval2._Mysize = _Old_size + 1;

  00017	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]

; 2209 :         value_type* _Result = _Bx._Buf;

  0001a	8b d7		 mov	 edx, edi

; 3694 :             _Mypair._Myval2._Mysize = _Old_size + 1;

  0001c	89 47 10	 mov	 DWORD PTR [edi+16], eax

; 2227 :         return _BUF_SIZE <= _Myres;

  0001f	83 f9 10	 cmp	 ecx, 16			; 00000010H

; 2210 :         if (_Large_string_engaged()) {

  00022	72 02		 jb	 SHORT $LN7@operator

; 2211 :             _Result = _Unfancy(_Bx._Ptr);

  00024	8b 17		 mov	 edx, DWORD PTR [edi]
$LN7@operator:

; 3696 :             _Traits::assign(_Ptr[_Old_size], _Ch);

  00026	8a 45 08	 mov	 al, BYTE PTR __Ch$[ebp]
  00029	88 04 1a	 mov	 BYTE PTR [edx+ebx], al

; 2905 :         push_back(_Ch);
; 2906 :         return *this;

  0002c	8b c7		 mov	 eax, edi
  0002e	5f		 pop	 edi

; 3697 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());

  0002f	c6 44 1a 01 00	 mov	 BYTE PTR [edx+ebx+1], 0

; 2905 :         push_back(_Ch);
; 2906 :         return *this;

  00034	5b		 pop	 ebx

; 2907 :     }

  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
$LN4@operator:

; 4333 :         if (max_size() - _Old_size < _Size_increase) {

  0003b	ba ff ff ff 7f	 mov	 edx, 2147483647		; 7fffffffH
  00040	8b c2		 mov	 eax, edx
  00042	2b c3		 sub	 eax, ebx
  00044	83 f8 01	 cmp	 eax, 1
  00047	0f 82 a8 00 00
	00		 jb	 $LN42@operator
  0004d	56		 push	 esi

; 4335 :         }
; 4336 : 
; 4337 :         const size_type _New_size     = _Old_size + _Size_increase;

  0004e	8d 73 01	 lea	 esi, DWORD PTR [ebx+1]

; 4285 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00051	83 ce 0f	 or	 esi, 15			; 0000000fH
  00054	3b f2		 cmp	 esi, edx

; 4286 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00056	76 04		 jbe	 SHORT $LN19@operator

; 4287 :             return _Max;

  00058	8b f2		 mov	 esi, edx
  0005a	eb 18		 jmp	 SHORT $LN18@operator
$LN19@operator:

; 4288 :         }
; 4289 : 
; 4290 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  0005c	8b c1		 mov	 eax, ecx
  0005e	d1 e8		 shr	 eax, 1
  00060	2b d0		 sub	 edx, eax
  00062	3b ca		 cmp	 ecx, edx
  00064	76 07		 jbe	 SHORT $LN20@operator

; 4291 :             return _Max;

  00066	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
  0006b	eb 07		 jmp	 SHORT $LN18@operator
$LN20@operator:

; 4292 :         }
; 4293 : 
; 4294 :         return (_STD max)(_Masked, _Old + _Old / 2);

  0006d	03 c1		 add	 eax, ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  0006f	3b f0		 cmp	 esi, eax
  00071	0f 42 f0	 cmovb	 esi, eax
$LN18@operator:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4341 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00074	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  0007d	83 c4 04	 add	 esp, 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4341 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00080	89 45 fc	 mov	 DWORD PTR __New_ptr$1[ebp], eax

; 4342 :         _My_data._Orphan_all();
; 4343 :         _My_data._Mysize      = _New_size;
; 4344 :         _My_data._Myres       = _New_capacity;
; 4345 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);
; 4346 :         if (_BUF_SIZE <= _Old_capacity) {

  00083	83 7d f8 10	 cmp	 DWORD PTR __Old$1$[ebp], 16 ; 00000010H
  00087	8d 4b 01	 lea	 ecx, DWORD PTR [ebx+1]
  0008a	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  0008d	89 77 14	 mov	 DWORD PTR [edi+20], esi
  00090	53		 push	 ebx
  00091	72 35		 jb	 SHORT $LN13@operator

; 4347 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00093	8b 37		 mov	 esi, DWORD PTR [edi]

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00095	56		 push	 esi
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 _memcpy

; 3705 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);

  0009c	8b 4d fc	 mov	 ecx, DWORD PTR __New_ptr$1[ebp]
  0009f	8a 45 08	 mov	 al, BYTE PTR __Ch$[ebp]
  000a2	88 04 19	 mov	 BYTE PTR [ecx+ebx], al

; 4349 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  000a5	8b 45 f8	 mov	 eax, DWORD PTR __Old$1$[ebp]
  000a8	40		 inc	 eax

; 3706 :                 _Traits::assign(_New_ptr[_Old_size + 1], _Elem());

  000a9	c6 44 19 01 00	 mov	 BYTE PTR [ecx+ebx+1], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  000ae	50		 push	 eax
  000af	56		 push	 esi
  000b0	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4350 :             _My_data._Bx._Ptr = _New_ptr;

  000b5	8b 45 fc	 mov	 eax, DWORD PTR __New_ptr$1[ebp]

; 4351 :         } else {
; 4352 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);
; 4353 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  000b8	83 c4 14	 add	 esp, 20			; 00000014H
  000bb	89 07		 mov	 DWORD PTR [edi], eax

; 2905 :         push_back(_Ch);
; 2906 :         return *this;

  000bd	8b c7		 mov	 eax, edi
  000bf	5e		 pop	 esi
  000c0	5f		 pop	 edi
  000c1	5b		 pop	 ebx

; 2907 :     }

  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c2 04 00	 ret	 4
$LN13@operator:

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  000c8	57		 push	 edi
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 _memcpy

; 3705 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);

  000cf	8b 4d fc	 mov	 ecx, DWORD PTR __New_ptr$1[ebp]
  000d2	8a 45 08	 mov	 al, BYTE PTR __Ch$[ebp]
  000d5	88 04 19	 mov	 BYTE PTR [ecx+ebx], al

; 4353 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  000d8	8d 45 fc	 lea	 eax, DWORD PTR __New_ptr$1[ebp]
  000db	50		 push	 eax
  000dc	57		 push	 edi

; 3706 :                 _Traits::assign(_New_ptr[_Old_size + 1], _Elem());

  000dd	c6 44 19 01 00	 mov	 BYTE PTR [ecx+ebx+1], 0

; 4353 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  000e2	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  000e7	83 c4 14	 add	 esp, 20			; 00000014H

; 2905 :         push_back(_Ch);
; 2906 :         return *this;

  000ea	8b c7		 mov	 eax, edi
  000ec	5e		 pop	 esi
  000ed	5f		 pop	 edi
  000ee	5b		 pop	 ebx

; 2907 :     }

  000ef	8b e5		 mov	 esp, ebp
  000f1	5d		 pop	 ebp
  000f2	c2 04 00	 ret	 4
$LN42@operator:

; 4334 :             _Xlen_string(); // result too long

  000f5	e8 00 00 00 00	 call	 ?_Xlen_string@std@@YAXXZ ; std::_Xlen_string
$LN39@operator:
  000fa	cc		 int	 3
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2800 :     ~basic_string() noexcept {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2227 :         return _BUF_SIZE <= _Myres;

  00003	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00006	83 f8 10	 cmp	 eax, 16			; 00000010H

; 4385 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00009	72 0c		 jb	 SHORT $LN4@basic_stri

; 4386 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;
; 4387 :             auto& _Al          = _Getal();
; 4388 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);
; 4389 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0000b	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  0000c	50		 push	 eax
  0000d	ff 36		 push	 DWORD PTR [esi]
  0000f	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00014	83 c4 08	 add	 esp, 8
$LN4@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 4392 :         _Mypair._Myval2._Mysize = 0;

  00017	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4393 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0001e	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4394 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4395 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00025	c6 06 00	 mov	 BYTE PTR [esi], 0
  00028	5e		 pop	 esi

; 2801 :         _Tidy_deallocate();
; 2802 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2803 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2804 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;
; 2805 :         _Mypair._Myval2._Myproxy = nullptr;
; 2806 :         _Delete_plain_internal(_Alproxy, _To_delete);
; 2807 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2808 :     }

  00029	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z
_TEXT	SEGMENT
__Fancyptr$1 = -8					; size = 4
__New_size$1$ = -4					; size = 4
___formal$ = 8						; size = 1
__Source_of_al$ = 12					; size = 4
__Left_ptr$ = 16					; size = 4
__Left_size$ = 20					; size = 4
__Right_ptr$ = 24					; size = 4
__Right_size$ = 28					; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2521 :             _One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Source_of_al._Getal())) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 2522 :         _STL_INTERNAL_CHECK(_Left_size <= max_size());
; 2523 :         _STL_INTERNAL_CHECK(_Right_size <= max_size());
; 2524 :         _STL_INTERNAL_CHECK(_Right_size <= max_size() - _Left_size);
; 2525 :         const auto _New_size    = static_cast<size_type>(_Left_size + _Right_size);

  00006	8b 45 14	 mov	 eax, DWORD PTR __Left_size$[ebp]
  00009	03 45 1c	 add	 eax, DWORD PTR __Right_size$[ebp]
  0000c	53		 push	 ebx
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b f9		 mov	 edi, ecx
  00011	89 45 fc	 mov	 DWORD PTR __New_size$1$[ebp], eax

; 2526 :         size_type _New_capacity = _BUF_SIZE - 1;

  00014	be 0f 00 00 00	 mov	 esi, 15			; 0000000fH

; 2527 :         auto& _My_data          = _Mypair._Myval2;
; 2528 :         _Elem* _Ptr             = _My_data._Bx._Buf;

  00019	8b df		 mov	 ebx, edi

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  0001b	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  00022	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2529 :         auto&& _Alproxy         = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2530 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data); // throws
; 2531 :         if (_New_capacity < _New_size) {

  00029	3b c6		 cmp	 eax, esi
  0002b	76 3c		 jbe	 SHORT $LN2@basic_stri

; 4285 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  0002d	8b f0		 mov	 esi, eax
  0002f	83 ce 0f	 or	 esi, 15			; 0000000fH
  00032	81 fe ff ff ff
	7f		 cmp	 esi, 2147483647		; 7fffffffH

; 4286 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00038	76 07		 jbe	 SHORT $LN11@basic_stri

; 4287 :             return _Max;

  0003a	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
  0003f	eb 0a		 jmp	 SHORT $LN10@basic_stri
$LN11@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 44   :     return _Left < _Right ? _Right : _Left;

  00041	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  00046	3b f0		 cmp	 esi, eax
  00048	0f 42 f0	 cmovb	 esi, eax
$LN10@basic_stri:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2533 :             const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

  0004b	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2533 :             const pointer _Fancyptr = _Getal().allocate(_New_capacity + 1); // throws

  00054	8b d8		 mov	 ebx, eax

; 2534 :             _Ptr                    = _Unfancy(_Fancyptr);
; 2535 :             _Construct_in_place(_My_data._Bx._Ptr, _Fancyptr);

  00056	8d 45 f8	 lea	 eax, DWORD PTR __Fancyptr$1[ebp]
  00059	50		 push	 eax
  0005a	57		 push	 edi
  0005b	89 5d f8	 mov	 DWORD PTR __Fancyptr$1[ebp], ebx
  0005e	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
  00063	8b 45 fc	 mov	 eax, DWORD PTR __New_size$1$[ebp]
  00066	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@basic_stri:

; 2539 :         _My_data._Myres  = _New_capacity;

  00069	89 77 14	 mov	 DWORD PTR [edi+20], esi

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0006c	8b 75 14	 mov	 esi, DWORD PTR __Left_size$[ebp]
  0006f	56		 push	 esi
  00070	ff 75 10	 push	 DWORD PTR __Left_ptr$[ebp]

; 2536 :         }
; 2537 : 
; 2538 :         _My_data._Mysize = _New_size;

  00073	89 47 10	 mov	 DWORD PTR [edi+16], eax

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00076	53		 push	 ebx
  00077	e8 00 00 00 00	 call	 _memcpy
  0007c	ff 75 1c	 push	 DWORD PTR __Right_size$[ebp]

; 2540 :         _Traits::copy(_Ptr, _Left_ptr, _Left_size);
; 2541 :         _Traits::copy(_Ptr + static_cast<ptrdiff_t>(_Left_size), _Right_ptr, _Right_size);

  0007f	8d 04 33	 lea	 eax, DWORD PTR [ebx+esi]

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00082	ff 75 18	 push	 DWORD PTR __Right_ptr$[ebp]
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 _memcpy

; 2542 :         _Traits::assign(_Ptr[_New_size], _Elem());

  0008b	8b 45 fc	 mov	 eax, DWORD PTR __New_size$1$[ebp]

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0008e	83 c4 18	 add	 esp, 24			; 00000018H

; 2542 :         _Traits::assign(_Ptr[_New_size], _Elem());

  00091	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0

; 2543 :         _Proxy._Release();
; 2544 :     }

  00095	8b c7		 mov	 eax, edi
  00097	5f		 pop	 edi
  00098	5e		 pop	 esi
  00099	5b		 pop	 ebx
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c2 18 00	 ret	 24			; 00000018H
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@U_String_constructor_concat_tag@1@ABV01@QBDI2I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2413 :     basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 389  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00003	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00006	8b c2		 mov	 eax, edx

; 2413 :     basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t{}) {

  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	57		 push	 edi

; 389  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0000c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 4377 :         _Mypair._Myval2._Mysize = 0;

  0000f	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0

; 4378 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00016	c7 46 14 0f 00
	00 00		 mov	 DWORD PTR [esi+20], 15	; 0000000fH

; 4379 :         // the _Traits::assign is last so the codegen doesn't think the char write can alias this
; 4380 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  0001d	c6 06 00	 mov	 BYTE PTR [esi], 0
$LL15@basic_stri:

; 389  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $LL15@basic_stri
  00027	2b c7		 sub	 eax, edi

; 3062 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00029	8b ce		 mov	 ecx, esi
  0002b	50		 push	 eax
  0002c	52		 push	 edx
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2414 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2415 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2416 :         _Tidy_init();
; 2417 :         assign(_Ptr);
; 2418 :         _Proxy._Release();
; 2419 :     }

  00032	5f		 pop	 edi
  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
__New_array$2 = -4					; size = 4
__Right_size$1$ = 8					; size = 4
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2351 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 2734 :         const size_type _Right_size   = _Right_data._Mysize;

  00007	8b 5d 08	 mov	 ebx, DWORD PTR __Right$[ebp]

; 2351 :         : _Mypair(_One_then_variadic_args_t{}, _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx

; 2198 :     _String_val() noexcept : _Bx(), _Mysize(0), _Myres(0) {}

  0000d	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  00014	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0

; 2227 :         return _BUF_SIZE <= _Myres;

  0001b	83 7b 14 10	 cmp	 DWORD PTR [ebx+20], 16	; 00000010H

; 2734 :         const size_type _Right_size   = _Right_data._Mysize;

  0001f	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  00022	89 45 08	 mov	 DWORD PTR __Right_size$1$[ebp], eax

; 2219 :         if (_Large_string_engaged()) {

  00025	72 02		 jb	 SHORT $LN13@basic_stri

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  00027	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$LN13@basic_stri:

; 2737 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  00029	83 f8 10	 cmp	 eax, 16			; 00000010H
  0002c	73 1e		 jae	 SHORT $LN10@basic_stri

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  0002e	0f 10 03	 movups	 xmm0, XMMWORD PTR [ebx]

; 2352 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2353 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2354 :         _Construct_lv_contents(_Right);
; 2355 :         _Proxy._Release();
; 2356 :     }

  00031	8b 4d 08	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]

; 2740 :             _My_data._Myres  = _BUF_SIZE - 1;

  00034	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00039	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0

; 2352 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2353 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2354 :         _Construct_lv_contents(_Right);
; 2355 :         _Proxy._Release();
; 2356 :     }

  0003c	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  0003f	89 47 14	 mov	 DWORD PTR [edi+20], eax
  00042	8b c7		 mov	 eax, edi
  00044	5f		 pop	 edi
  00045	5b		 pop	 ebx
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
$LN10@basic_stri:

; 2745 :         const size_type _New_capacity = (_STD min)(_Right_size | _ALLOC_MASK, max_size());

  0004c	83 c8 0f	 or	 eax, 15			; 0000000fH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 68   :     return _Right < _Left ? _Right : _Left;

  0004f	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
  00054	3b c1		 cmp	 eax, ecx
  00056	56		 push	 esi
  00057	0f 47 c1	 cmova	 eax, ecx
  0005a	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2746 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  0005d	40		 inc	 eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 814  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2746 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  00064	8b f0		 mov	 esi, eax

; 2747 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  00066	8d 45 fc	 lea	 eax, DWORD PTR __New_array$2[ebp]
  00069	50		 push	 eax
  0006a	57		 push	 edi
  0006b	89 75 fc	 mov	 DWORD PTR __New_array$2[ebp], esi
  0006e	e8 00 00 00 00	 call	 ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2748 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  00073	8b 4d 08	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
  00076	41		 inc	 ecx

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00077	51		 push	 ecx
  00078	53		 push	 ebx
  00079	56		 push	 esi
  0007a	e8 00 00 00 00	 call	 _memcpy
  0007f	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]
  00082	83 c4 18	 add	 esp, 24			; 00000018H

; 2352 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2353 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2354 :         _Construct_lv_contents(_Right);
; 2355 :         _Proxy._Release();
; 2356 :     }

  00085	8b 4d 08	 mov	 ecx, DWORD PTR __Right_size$1$[ebp]
  00088	89 4f 10	 mov	 DWORD PTR [edi+16], ecx
  0008b	89 47 14	 mov	 DWORD PTR [edi+20], eax
  0008e	8b c7		 mov	 eax, edi

; 62   :         _CSTD memcpy(_First1, _First2, _Count * sizeof(_Elem));

  00090	5e		 pop	 esi

; 2352 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 2353 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);
; 2354 :         _Construct_lv_contents(_Right);
; 2355 :         _Proxy._Release();
; 2356 :     }

  00091	5f		 pop	 edi
  00092	5b		 pop	 ebx
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT

; 2275 :     _Xlength_error("string too long");

  00000	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
  00005	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN3@Xlen_strin:
  0000a	cc		 int	 3
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 320  : [[noreturn]] inline void _Throw_bad_array_new_length() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 321  :     _THROW(bad_array_new_length{});

  00006	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  00009	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QAE@XZ ; std::bad_array_new_length::bad_array_new_length
  0000e	68 00 00 00 00	 push	 OFFSET __TI3?AVbad_array_new_length@std@@
  00013	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN3@Throw_bad_:
  0001c	cc		 int	 3
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN12@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN12@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_array_new_length@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx
  00010	c3		 ret	 0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 142  :     }

  00003	8b c1		 mov	 eax, ecx

; 65   :         : _Data()

  00005	66 0f d6 41 04	 movq	 QWORD PTR [ecx+4], xmm0

; 66   :     {
; 67   :         _Data._What = _Message;

  0000a	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@

; 141  :     {

  00011	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

  00017	c3		 ret	 0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN9@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN9@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 72   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0

; 71   :         : _Data()

  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7bad_alloc@std@@6B@
  0002c	8b c6		 mov	 eax, esi
  0002e	5e		 pop	 esi
  0002f	5d		 pop	 ebp
  00030	c2 04 00	 ret	 4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   :     {

  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 90   :         __std_exception_destroy(&_Data);

  00006	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00009	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ___std_exception_destroy
  00015	83 c4 04	 add	 esp, 4
  00018	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0001c	74 0b		 je	 SHORT $LN6@scalar
  0001e	6a 0c		 push	 12			; 0000000cH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00026	83 c4 08	 add	 esp, 8
$LN6@scalar:
  00029	8b c6		 mov	 eax, esi
  0002b	5e		 pop	 esi
  0002c	5d		 pop	 ebp
  0002d	c2 04 00	 ret	 4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
  00008	85 c9		 test	 ecx, ecx
  0000a	0f 45 c1	 cmovne	 eax, ecx

; 96   :     }

  0000d	c3		 ret	 0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 90   :         __std_exception_destroy(&_Data);

  00000	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  00003	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7exception@std@@6B@
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ___std_exception_destroy
  0000f	59		 pop	 ecx

; 91   :     }

  00010	c3		 ret	 0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	0f 57 c0	 xorps	 xmm0, xmm0
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

  0000c	50		 push	 eax
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7exception@std@@6B@
  00013	66 0f d6 00	 movq	 QWORD PTR [eax], xmm0
  00017	8b 45 08	 mov	 eax, DWORD PTR __Other$[ebp]
  0001a	83 c0 04	 add	 eax, 4
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 ___std_exception_copy
  00023	83 c4 08	 add	 esp, 8

; 74   :     }

  00026	8b c6		 mov	 eax, esi
  00028	5e		 pop	 esi
  00029	5d		 pop	 ebp
  0002a	c2 04 00	 ret	 4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
END
