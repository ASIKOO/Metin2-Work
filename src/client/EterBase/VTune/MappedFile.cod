; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0CMappedFile@@QAE@XZ				; CMappedFile::CMappedFile
PUBLIC	??1CMappedFile@@UAE@XZ				; CMappedFile::~CMappedFile
PUBLIC	?Link@CMappedFile@@QAEXKPBX@Z			; CMappedFile::Link
PUBLIC	?Create@CMappedFile@@QAEHPBD@Z			; CMappedFile::Create
PUBLIC	?Create@CMappedFile@@QAEHPBDPAPBXHH@Z		; CMappedFile::Create
PUBLIC	?Get@CMappedFile@@QAEPBXXZ			; CMappedFile::Get
PUBLIC	?Destroy@CMappedFile@@QAEXXZ			; CMappedFile::Destroy
PUBLIC	?Seek@CMappedFile@@QAEHKH@Z			; CMappedFile::Seek
PUBLIC	?Map@CMappedFile@@QAEHPAPBXHH@Z			; CMappedFile::Map
PUBLIC	?Size@CMappedFile@@QAEKXZ			; CMappedFile::Size
PUBLIC	?GetPosition@CMappedFile@@QAEKXZ		; CMappedFile::GetPosition
PUBLIC	?Read@CMappedFile@@QAEHPAXH@Z			; CMappedFile::Read
PUBLIC	?GetSeekPosition@CMappedFile@@QAEKXZ		; CMappedFile::GetSeekPosition
PUBLIC	?BindLZObject@CMappedFile@@QAEXPAVCLZObject@@@Z	; CMappedFile::BindLZObject
PUBLIC	?BindLZObjectWithBufferedSize@CMappedFile@@QAEXPAVCLZObject@@@Z ; CMappedFile::BindLZObjectWithBufferedSize
PUBLIC	?AppendDataBlock@CMappedFile@@QAEPAEPBXK@Z	; CMappedFile::AppendDataBlock
PUBLIC	?GetCurrentSeekPoint@CMappedFile@@QAEPAEXZ	; CMappedFile::GetCurrentSeekPoint
PUBLIC	?Unmap@CMappedFile@@AAEXPBX@Z			; CMappedFile::Unmap
PUBLIC	??_GCMappedFile@@UAEPAXI@Z			; CMappedFile::`scalar deleting destructor'
PUBLIC	??_7CMappedFile@@6B@				; CMappedFile::`vftable'
PUBLIC	??_C@_0BJ@KMLLEHNI@CMappedFile?3?3Map?5?$CBm_hFM?6@ ; `string'
PUBLIC	??_C@_0CC@PKLPNOAB@CMappedFile?3?3Map?5?$CBm_lpMapData?5?$CF@ ; `string'
PUBLIC	??_C@_0BL@ODMFAMPL@CMappedFile?3?3Unmap?5?9?5Error@ ; `string'
PUBLIC	??_R4CMappedFile@@6B@				; CMappedFile::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCMappedFile@@@8				; CMappedFile `RTTI Type Descriptor'
PUBLIC	??_R3CMappedFile@@8				; CMappedFile::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMappedFile@@8				; CMappedFile::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMappedFile@@8			; CMappedFile::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CFileBase@@8			; CFileBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCFileBase@@@8				; CFileBase `RTTI Type Descriptor'
PUBLIC	??_R3CFileBase@@8				; CFileBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CFileBase@@8				; CFileBase::`RTTI Base Class Array'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_memcpy:PROC
EXTRN	__imp__OutputDebugStringA@4:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__GetSystemInfo@4:PROC
EXTRN	__imp__MapViewOfFile@20:PROC
EXTRN	__imp__UnmapViewOfFile@4:PROC
EXTRN	__imp__CreateFileMappingA@24:PROC
EXTRN	??1CLZObject@@QAE@XZ:PROC			; CLZObject::~CLZObject
EXTRN	?GetSize@CLZObject@@QAEKXZ:PROC			; CLZObject::GetSize
EXTRN	??0CFileBase@@QAE@XZ:PROC			; CFileBase::CFileBase
EXTRN	??1CFileBase@@UAE@XZ:PROC			; CFileBase::~CFileBase
EXTRN	?Destroy@CFileBase@@QAEXXZ:PROC			; CFileBase::Destroy
EXTRN	?Create@CFileBase@@QAEHPBDW4EFileMode@1@@Z:PROC	; CFileBase::Create
EXTRN	?Write@CFileBase@@UAEHPBXH@Z:PROC		; CFileBase::Write
EXTRN	??_ECMappedFile@@UAEPAXI@Z:PROC			; CMappedFile::`vector deleting destructor'
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ??_R2CFileBase@@8
rdata$r	SEGMENT
??_R2CFileBase@@8 DD FLAT:??_R1A@?0A@EA@CFileBase@@8	; CFileBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CFileBase@@8
rdata$r	SEGMENT
??_R3CFileBase@@8 DD 00H				; CFileBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CFileBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCFileBase@@@8
data$rs	SEGMENT
??_R0?AVCFileBase@@@8 DD FLAT:??_7type_info@@6B@	; CFileBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCFileBase@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CFileBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CFileBase@@8 DD FLAT:??_R0?AVCFileBase@@@8 ; CFileBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CFileBase@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMappedFile@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMappedFile@@8 DD FLAT:??_R0?AVCMappedFile@@@8 ; CMappedFile::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMappedFile@@8
rdata$r	ENDS
;	COMDAT ??_R2CMappedFile@@8
rdata$r	SEGMENT
??_R2CMappedFile@@8 DD FLAT:??_R1A@?0A@EA@CMappedFile@@8 ; CMappedFile::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CFileBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CMappedFile@@8
rdata$r	SEGMENT
??_R3CMappedFile@@8 DD 00H				; CMappedFile::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CMappedFile@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMappedFile@@@8
data$rs	SEGMENT
??_R0?AVCMappedFile@@@8 DD FLAT:??_7type_info@@6B@	; CMappedFile `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMappedFile@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CMappedFile@@6B@
rdata$r	SEGMENT
??_R4CMappedFile@@6B@ DD 00H				; CMappedFile::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCMappedFile@@@8
	DD	FLAT:??_R3CMappedFile@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BL@ODMFAMPL@CMappedFile?3?3Unmap?5?9?5Error@
CONST	SEGMENT
??_C@_0BL@ODMFAMPL@CMappedFile?3?3Unmap?5?9?5Error@ DB 'CMappedFile::Unma'
	DB	'p - Error', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@PKLPNOAB@CMappedFile?3?3Map?5?$CBm_lpMapData?5?$CF@
CONST	SEGMENT
??_C@_0CC@PKLPNOAB@CMappedFile?3?3Map?5?$CBm_lpMapData?5?$CF@ DB 'CMapped'
	DB	'File::Map !m_lpMapData %lu', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KMLLEHNI@CMappedFile?3?3Map?5?$CBm_hFM?6@
CONST	SEGMENT
??_C@_0BJ@KMLLEHNI@CMappedFile?3?3Map?5?$CBm_hFM?6@ DB 'CMappedFile::Map '
	DB	'!m_hFM', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CMappedFile@@6B@
CONST	SEGMENT
??_7CMappedFile@@6B@ DD FLAT:??_R4CMappedFile@@6B@	; CMappedFile::`vftable'
	DD	FLAT:??_ECMappedFile@@UAEPAXI@Z
	DD	FLAT:?Write@CFileBase@@UAEHPBXH@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CMappedFile@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_GCMappedFile@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCMappedFile@@UAEPAXI@Z PROC				; CMappedFile::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CMappedFile@@UAE@XZ	; CMappedFile::~CMappedFile
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0f		 je	 SHORT $LN2@scalar
  00017	68 44 01 00 00	 push	 324			; 00000144H
  0001c	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00024	59		 pop	 ecx
  00025	59		 pop	 ecx
$LN2@scalar:
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	c9		 leave
  0002a	c2 04 00	 ret	 4
??_GCMappedFile@@UAEPAXI@Z ENDP				; CMappedFile::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
;	COMDAT ?Unmap@CMappedFile@@AAEXPBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_data$ = 8						; size = 4
?Unmap@CMappedFile@@AAEXPBX@Z PROC			; CMappedFile::Unmap, COMDAT
; _this$ = ecx

; 247  : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 248  : 	if (UnmapViewOfFile(data))

  00007	ff 75 08	 push	 DWORD PTR _data$[ebp]
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UnmapViewOfFile@4
  00010	85 c0		 test	 eax, eax
  00012	74 02		 je	 SHORT $LN2@Unmap

; 249  : 	{
; 250  : 		// 2004.09.16.myevan.MemoryMappedFile 98/ME 개수 제한 문제 체크
; 251  : 		//g_dwCount--;
; 252  : 		//Tracenf("UNMAPFILE %d", g_dwCount);
; 253  : 	}

  00014	eb 0b		 jmp	 SHORT $LN3@Unmap
$LN2@Unmap:

; 254  : 	else
; 255  : 	{
; 256  : 		TraceError("CMappedFile::Unmap - Error");

  00016	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@ODMFAMPL@CMappedFile?3?3Unmap?5?9?5Error@
  0001b	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  00020	59		 pop	 ecx
$LN3@Unmap:

; 257  : 	}
; 258  : 	m_lpData = NULL;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 a0 3c 01 00
	00 00		 and	 DWORD PTR [eax+316], 0

; 259  : }

  0002b	c9		 leave
  0002c	c2 04 00	 ret	 4
?Unmap@CMappedFile@@AAEXPBX@Z ENDP			; CMappedFile::Unmap
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
;	COMDAT ?GetCurrentSeekPoint@CMappedFile@@QAEPAEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCurrentSeekPoint@CMappedFile@@QAEPAEXZ PROC		; CMappedFile::GetCurrentSeekPoint, COMDAT
; _this$ = ecx

; 209  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 210  : 	return m_pbBufLinkData+m_seekPosition;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 18 01 00
	00		 mov	 eax, DWORD PTR [eax+280]
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	03 81 28 01 00
	00		 add	 eax, DWORD PTR [ecx+296]

; 211  : 	//return m_pLZObj ? m_pLZObj->GetBuffer() + m_seekPosition : (BYTE *) m_lpData + m_seekPosition;
; 212  : }

  00019	c9		 leave
  0001a	c3		 ret	 0
?GetCurrentSeekPoint@CMappedFile@@QAEPAEXZ ENDP		; CMappedFile::GetCurrentSeekPoint
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
;	COMDAT ?AppendDataBlock@CMappedFile@@QAEPAEPBXK@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
_pBlock$ = 8						; size = 4
_dwBlockSize$ = 12					; size = 4
?AppendDataBlock@CMappedFile@@QAEPAEPBXK@Z PROC		; CMappedFile::AppendDataBlock, COMDAT
; _this$ = ecx

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 68   : 	if( m_pbAppendResultDataBlock )

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 b8 20 01 00
	00 00		 cmp	 DWORD PTR [eax+288], 0
  00013	74 15		 je	 SHORT $LN2@AppendData

; 69   : 	{
; 70   : 		delete []m_pbAppendResultDataBlock;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 80 20 01 00
	00		 mov	 eax, DWORD PTR [eax+288]
  0001e	89 45 f8	 mov	 DWORD PTR $T2[ebp], eax
  00021	ff 75 f8	 push	 DWORD PTR $T2[ebp]
  00024	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00029	59		 pop	 ecx
$LN2@AppendData:

; 71   : 	}
; 72   : 
; 73   : 	//realloc
; 74   : 	m_dwAppendResultDataSize  = m_dwBufLinkSize+dwBlockSize;

  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 80 1c 01 00
	00		 mov	 eax, DWORD PTR [eax+284]
  00033	03 45 0c	 add	 eax, DWORD PTR _dwBlockSize$[ebp]
  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	89 81 24 01 00
	00		 mov	 DWORD PTR [ecx+292], eax

; 75   : 	m_pbAppendResultDataBlock = new BYTE[m_dwAppendResultDataSize];

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00042	ff b0 24 01 00
	00		 push	 DWORD PTR [eax+292]
  00048	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  0004d	59		 pop	 ecx
  0004e	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
  00051	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00054	8b 4d f4	 mov	 ecx, DWORD PTR $T1[ebp]
  00057	89 88 20 01 00
	00		 mov	 DWORD PTR [eax+288], ecx

; 76   : 
; 77   : 	memcpy(m_pbAppendResultDataBlock, m_pbBufLinkData, m_dwBufLinkSize );

  0005d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00060	ff b0 1c 01 00
	00		 push	 DWORD PTR [eax+284]
  00066	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00069	ff b0 18 01 00
	00		 push	 DWORD PTR [eax+280]
  0006f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00072	ff b0 20 01 00
	00		 push	 DWORD PTR [eax+288]
  00078	e8 00 00 00 00	 call	 _memcpy
  0007d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 78   : 	memcpy(m_pbAppendResultDataBlock + m_dwBufLinkSize, pBlock, dwBlockSize );

  00080	ff 75 0c	 push	 DWORD PTR _dwBlockSize$[ebp]
  00083	ff 75 08	 push	 DWORD PTR _pBlock$[ebp]
  00086	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00089	8b 80 20 01 00
	00		 mov	 eax, DWORD PTR [eax+288]
  0008f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00092	03 81 1c 01 00
	00		 add	 eax, DWORD PTR [ecx+284]
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 _memcpy
  0009e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 79   : 
; 80   : 	//redirect
; 81   : 	Link(m_dwAppendResultDataSize, m_pbAppendResultDataBlock);

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	ff b0 20 01 00
	00		 push	 DWORD PTR [eax+288]
  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	ff b0 24 01 00
	00		 push	 DWORD PTR [eax+292]
  000b3	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	e8 00 00 00 00	 call	 ?Link@CMappedFile@@QAEXKPBX@Z ; CMappedFile::Link

; 82   : 
; 83   : 	return m_pbAppendResultDataBlock;

  000bb	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000be	8b 80 20 01 00
	00		 mov	 eax, DWORD PTR [eax+288]

; 84   : }

  000c4	c9		 leave
  000c5	c2 08 00	 ret	 8
?AppendDataBlock@CMappedFile@@QAEPAEPBXK@Z ENDP		; CMappedFile::AppendDataBlock
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\lzo.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
;	COMDAT ?BindLZObjectWithBufferedSize@CMappedFile@@QAEXPAVCLZObject@@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
_pLZObj$ = 8						; size = 4
?BindLZObjectWithBufferedSize@CMappedFile@@QAEXPAVCLZObject@@@Z PROC ; CMappedFile::BindLZObjectWithBufferedSize, COMDAT
; _this$ = ecx

; 59   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 60   : 	assert(m_pLZObj == NULL);
; 61   : 	m_pLZObj = pLZObj;

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR _pLZObj$[ebp]
  0000f	89 88 40 01 00
	00		 mov	 DWORD PTR [eax+320], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\lzo.h

; 37   : 		BYTE *			GetBuffer() { return m_pbBuffer; }

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 80 40 01 00
	00		 mov	 eax, DWORD PTR [eax+320]
  0001e	8b 00		 mov	 eax, DWORD PTR [eax]
  00020	89 45 f8	 mov	 DWORD PTR $T2[ebp], eax

; 40   : 		DWORD			GetBufferSize() { return m_dwBufferSize; }

  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b 80 40 01 00
	00		 mov	 eax, DWORD PTR [eax+320]
  0002c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002f	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp

; 63   : 	Link(m_pLZObj->GetBufferSize(), m_pLZObj->GetBuffer());

  00032	ff 75 f8	 push	 DWORD PTR $T2[ebp]
  00035	ff 75 f4	 push	 DWORD PTR $T1[ebp]
  00038	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?Link@CMappedFile@@QAEXKPBX@Z ; CMappedFile::Link

; 64   : }

  00040	c9		 leave
  00041	c2 04 00	 ret	 4
?BindLZObjectWithBufferedSize@CMappedFile@@QAEXPAVCLZObject@@@Z ENDP ; CMappedFile::BindLZObjectWithBufferedSize
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\lzo.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
;	COMDAT ?BindLZObject@CMappedFile@@QAEXPAVCLZObject@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
_pLZObj$ = 8						; size = 4
?BindLZObject@CMappedFile@@QAEXPAVCLZObject@@@Z PROC	; CMappedFile::BindLZObject, COMDAT
; _this$ = ecx

; 51   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 52   : 	assert(m_pLZObj == NULL);
; 53   : 	m_pLZObj = pLZObj;

  00008	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _pLZObj$[ebp]
  0000e	89 88 40 01 00
	00		 mov	 DWORD PTR [eax+320], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\lzo.h

; 37   : 		BYTE *			GetBuffer() { return m_pbBuffer; }

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	8b 80 40 01 00
	00		 mov	 eax, DWORD PTR [eax+320]
  0001d	8b 00		 mov	 eax, DWORD PTR [eax]
  0001f	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp

; 55   : 	Link(m_pLZObj->GetSize(), m_pLZObj->GetBuffer());

  00022	ff 75 f8	 push	 DWORD PTR $T1[ebp]
  00025	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 88 40 01 00
	00		 mov	 ecx, DWORD PTR [eax+320]
  0002e	e8 00 00 00 00	 call	 ?GetSize@CLZObject@@QAEKXZ ; CLZObject::GetSize
  00033	50		 push	 eax
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?Link@CMappedFile@@QAEXKPBX@Z ; CMappedFile::Link

; 56   : }

  0003c	c9		 leave
  0003d	c2 04 00	 ret	 4
?BindLZObject@CMappedFile@@QAEXPAVCLZObject@@@Z ENDP	; CMappedFile::BindLZObject
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
;	COMDAT ?GetSeekPosition@CMappedFile@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSeekPosition@CMappedFile@@QAEKXZ PROC		; CMappedFile::GetSeekPosition, COMDAT
; _this$ = ecx

; 242  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 243  : 	return m_seekPosition;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 28 01 00
	00		 mov	 eax, DWORD PTR [eax+296]

; 244  : }

  00010	c9		 leave
  00011	c3		 ret	 0
?GetSeekPosition@CMappedFile@@QAEKXZ ENDP		; CMappedFile::GetSeekPosition
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
;	COMDAT ?Read@CMappedFile@@QAEHPAXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dest$ = 8						; size = 4
_bytes$ = 12						; size = 4
?Read@CMappedFile@@QAEHPAXH@Z PROC			; CMappedFile::Read, COMDAT
; _this$ = ecx

; 232  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 233  : 	if (m_seekPosition + bytes > Size())

  00008	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	8b b0 28 01 00
	00		 mov	 esi, DWORD PTR [eax+296]
  00011	03 75 0c	 add	 esi, DWORD PTR _bytes$[ebp]
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
  0001c	3b f0		 cmp	 esi, eax
  0001e	76 04		 jbe	 SHORT $LN2@Read

; 234  : 		return FALSE;

  00020	33 c0		 xor	 eax, eax
  00022	eb 2f		 jmp	 SHORT $LN1@Read
$LN2@Read:

; 235  : 
; 236  : 	memcpy(dest, GetCurrentSeekPoint(), bytes);

  00024	ff 75 0c	 push	 DWORD PTR _bytes$[ebp]
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?GetCurrentSeekPoint@CMappedFile@@QAEPAEXZ ; CMappedFile::GetCurrentSeekPoint
  0002f	50		 push	 eax
  00030	ff 75 08	 push	 DWORD PTR _dest$[ebp]
  00033	e8 00 00 00 00	 call	 _memcpy
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH

; 237  : 	m_seekPosition += bytes;

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 80 28 01 00
	00		 mov	 eax, DWORD PTR [eax+296]
  00044	03 45 0c	 add	 eax, DWORD PTR _bytes$[ebp]
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	89 81 28 01 00
	00		 mov	 DWORD PTR [ecx+296], eax

; 238  : 	return TRUE;

  00050	33 c0		 xor	 eax, eax
  00052	40		 inc	 eax
$LN1@Read:

; 239  : }

  00053	5e		 pop	 esi
  00054	c9		 leave
  00055	c2 08 00	 ret	 8
?Read@CMappedFile@@QAEHPAXH@Z ENDP			; CMappedFile::Read
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
;	COMDAT ?GetPosition@CMappedFile@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPosition@CMappedFile@@QAEKXZ PROC			; CMappedFile::GetPosition, COMDAT
; _this$ = ecx

; 227  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 228  : 	return m_dataOffset;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 30 01 00
	00		 mov	 eax, DWORD PTR [eax+304]

; 229  : }

  00010	c9		 leave
  00011	c3		 ret	 0
?GetPosition@CMappedFile@@QAEKXZ ENDP			; CMappedFile::GetPosition
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
;	COMDAT ?Size@CMappedFile@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Size@CMappedFile@@QAEKXZ PROC				; CMappedFile::Size, COMDAT
; _this$ = ecx

; 216  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 217  : 	return m_dwBufLinkSize;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 1c 01 00
	00		 mov	 eax, DWORD PTR [eax+284]

; 218  : 	/*
; 219  : 	if (m_pLZObj)
; 220  : 		return m_pLZObj->GetSize();
; 221  : 
; 222  : 	return (m_mapSize);
; 223  : 	*/
; 224  : }

  00010	c9		 leave
  00011	c3		 ret	 0
?Size@CMappedFile@@QAEKXZ ENDP				; CMappedFile::Size
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
;	COMDAT ?Map@CMappedFile@@QAEHPAPBXHH@Z
_TEXT	SEGMENT
_SysInfo$ = -56						; size = 36
_iViewDelta$ = -20					; size = 4
_dwMapViewSize$ = -16					; size = 4
_dwFileMapStart$ = -12					; size = 4
_dwSysGran$ = -8					; size = 4
_this$ = -4						; size = 4
_dest$ = 8						; size = 4
_offset$ = 12						; size = 4
_size$ = 16						; size = 4
?Map@CMappedFile@@QAEHPAPBXHH@Z PROC			; CMappedFile::Map, COMDAT
; _this$ = ecx

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 152  : 	m_dataOffset = offset;

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _offset$[ebp]
  0000f	89 88 30 01 00
	00		 mov	 DWORD PTR [eax+304], ecx

; 153  : 
; 154  : 	if (size == 0)

  00015	83 7d 10 00	 cmp	 DWORD PTR _size$[ebp], 0
  00019	75 14		 jne	 SHORT $LN2@Map

; 155  : 		m_mapSize = m_dwSize;

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	8b 89 14 01 00
	00		 mov	 ecx, DWORD PTR [ecx+276]
  00027	89 88 34 01 00
	00		 mov	 DWORD PTR [eax+308], ecx
  0002d	eb 0c		 jmp	 SHORT $LN3@Map
$LN2@Map:

; 156  : 	else
; 157  : 		m_mapSize = size;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b 4d 10	 mov	 ecx, DWORD PTR _size$[ebp]
  00035	89 88 34 01 00
	00		 mov	 DWORD PTR [eax+308], ecx
$LN3@Map:

; 158  : 
; 159  : 	if (m_dataOffset + m_mapSize > m_dwSize)

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 80 30 01 00
	00		 mov	 eax, DWORD PTR [eax+304]
  00044	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	03 81 34 01 00
	00		 add	 eax, DWORD PTR [ecx+308]
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	3b 81 14 01 00
	00		 cmp	 eax, DWORD PTR [ecx+276]
  00056	76 07		 jbe	 SHORT $LN4@Map

; 160  : 		return NULL;

  00058	33 c0		 xor	 eax, eax
  0005a	e9 34 01 00 00	 jmp	 $LN1@Map
$LN4@Map:

; 161  : 
; 162  : 	SYSTEM_INFO SysInfo;
; 163  : 	GetSystemInfo(&SysInfo);

  0005f	8d 45 c8	 lea	 eax, DWORD PTR _SysInfo$[ebp]
  00062	50		 push	 eax
  00063	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemInfo@4

; 164  : 	DWORD dwSysGran = SysInfo.dwAllocationGranularity;

  00069	8b 45 e4	 mov	 eax, DWORD PTR _SysInfo$[ebp+28]
  0006c	89 45 f8	 mov	 DWORD PTR _dwSysGran$[ebp], eax

; 165  : 	DWORD dwFileMapStart = (m_dataOffset / dwSysGran) * dwSysGran;

  0006f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00072	8b 80 30 01 00
	00		 mov	 eax, DWORD PTR [eax+304]
  00078	33 d2		 xor	 edx, edx
  0007a	f7 75 f8	 div	 DWORD PTR _dwSysGran$[ebp]
  0007d	0f af 45 f8	 imul	 eax, DWORD PTR _dwSysGran$[ebp]
  00081	89 45 f4	 mov	 DWORD PTR _dwFileMapStart$[ebp], eax

; 166  : 	DWORD dwMapViewSize = (m_dataOffset % dwSysGran) + m_mapSize;

  00084	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00087	8b 80 30 01 00
	00		 mov	 eax, DWORD PTR [eax+304]
  0008d	33 d2		 xor	 edx, edx
  0008f	f7 75 f8	 div	 DWORD PTR _dwSysGran$[ebp]
  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	03 90 34 01 00
	00		 add	 edx, DWORD PTR [eax+308]
  0009b	89 55 f0	 mov	 DWORD PTR _dwMapViewSize$[ebp], edx

; 167  : 	INT iViewDelta = m_dataOffset - dwFileMapStart;

  0009e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a1	8b 80 30 01 00
	00		 mov	 eax, DWORD PTR [eax+304]
  000a7	2b 45 f4	 sub	 eax, DWORD PTR _dwFileMapStart$[ebp]
  000aa	89 45 ec	 mov	 DWORD PTR _iViewDelta$[ebp], eax

; 168  : 	
; 169  : 
; 170  : 	m_hFM = CreateFileMapping(m_hFile,				// handle

  000ad	6a 00		 push	 0
  000af	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b2	8b 80 30 01 00
	00		 mov	 eax, DWORD PTR [eax+304]
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000bb	03 81 34 01 00
	00		 add	 eax, DWORD PTR [ecx+308]
  000c1	50		 push	 eax
  000c2	6a 00		 push	 0
  000c4	6a 02		 push	 2
  000c6	6a 00		 push	 0
  000c8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cb	ff b0 10 01 00
	00		 push	 DWORD PTR [eax+272]
  000d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFileMappingA@24
  000d7	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000da	89 81 2c 01 00
	00		 mov	 DWORD PTR [ecx+300], eax

; 171  : 							  NULL,					// security
; 172  : 							  PAGE_READONLY,		// flProtect
; 173  : 							  0,					// high
; 174  : 							  m_dataOffset + m_mapSize,	// low
; 175  : 							  NULL);				// name
; 176  : 
; 177  : 	if (!m_hFM)

  000e0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e3	83 b8 2c 01 00
	00 00		 cmp	 DWORD PTR [eax+300], 0
  000ea	75 12		 jne	 SHORT $LN5@Map

; 178  : 	{
; 179  : 		OutputDebugString("CMappedFile::Map !m_hFM\n");

  000ec	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@KMLLEHNI@CMappedFile?3?3Map?5?$CBm_hFM?6@
  000f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OutputDebugStringA@4

; 180  : 		return NULL;

  000f7	33 c0		 xor	 eax, eax
  000f9	e9 95 00 00 00	 jmp	 $LN1@Map
$LN5@Map:

; 181  : 	}	
; 182  : 
; 183  : 	m_lpMapData = MapViewOfFile(m_hFM,

  000fe	ff 75 f0	 push	 DWORD PTR _dwMapViewSize$[ebp]
  00101	ff 75 f4	 push	 DWORD PTR _dwFileMapStart$[ebp]
  00104	6a 00		 push	 0
  00106	6a 04		 push	 4
  00108	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010b	ff b0 2c 01 00
	00		 push	 DWORD PTR [eax+300]
  00111	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MapViewOfFile@20
  00117	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0011a	89 81 38 01 00
	00		 mov	 DWORD PTR [ecx+312], eax

; 184  : 								FILE_MAP_READ,
; 185  : 								0,
; 186  : 								dwFileMapStart,
; 187  : 								dwMapViewSize);
; 188  : 
; 189  : 	if (!m_lpMapData) // Success

  00120	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00123	83 b8 38 01 00
	00 00		 cmp	 DWORD PTR [eax+312], 0
  0012a	75 17		 jne	 SHORT $LN6@Map

; 190  : 	{
; 191  : 		TraceError("CMappedFile::Map !m_lpMapData %lu", GetLastError());

  0012c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00132	50		 push	 eax
  00133	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@PKLPNOAB@CMappedFile?3?3Map?5?$CBm_lpMapData?5?$CF@
  00138	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0013d	59		 pop	 ecx
  0013e	59		 pop	 ecx

; 192  : 		return 0;

  0013f	33 c0		 xor	 eax, eax
  00141	eb 50		 jmp	 SHORT $LN1@Map
$LN6@Map:

; 193  : 	}
; 194  : 	
; 195  : 	// 2004.09.16.myevan.MemoryMappedFile 98/ME 개수 제한 문제 체크
; 196  : 	//g_dwCount++;
; 197  : 	//Tracenf("MAPFILE %d", g_dwCount);
; 198  : 	
; 199  : 	m_lpData = (char*) m_lpMapData + iViewDelta;

  00143	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00146	8b 80 38 01 00
	00		 mov	 eax, DWORD PTR [eax+312]
  0014c	03 45 ec	 add	 eax, DWORD PTR _iViewDelta$[ebp]
  0014f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00152	89 81 3c 01 00
	00		 mov	 DWORD PTR [ecx+316], eax

; 200  : 	*dest = (char*) m_lpData;

  00158	8b 45 08	 mov	 eax, DWORD PTR _dest$[ebp]
  0015b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0015e	8b 89 3c 01 00
	00		 mov	 ecx, DWORD PTR [ecx+316]
  00164	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 	m_seekPosition = 0;

  00166	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00169	83 a0 28 01 00
	00 00		 and	 DWORD PTR [eax+296], 0

; 202  : 
; 203  : 	Link(m_mapSize, m_lpData);

  00170	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00173	ff b0 3c 01 00
	00		 push	 DWORD PTR [eax+316]
  00179	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0017c	ff b0 34 01 00
	00		 push	 DWORD PTR [eax+308]
  00182	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00185	e8 00 00 00 00	 call	 ?Link@CMappedFile@@QAEXKPBX@Z ; CMappedFile::Link

; 204  : 
; 205  : 	return (m_mapSize);

  0018a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0018d	8b 80 34 01 00
	00		 mov	 eax, DWORD PTR [eax+308]
$LN1@Map:

; 206  : }

  00193	c9		 leave
  00194	c2 0c 00	 ret	 12			; 0000000cH
?Map@CMappedFile@@QAEHPAPBXHH@Z ENDP			; CMappedFile::Map
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
;	COMDAT ?Seek@CMappedFile@@QAEHKH@Z
_TEXT	SEGMENT
tv128 = -16						; size = 4
tv87 = -12						; size = 4
tv64 = -8						; size = 4
_this$ = -4						; size = 4
_offset$ = 8						; size = 4
_iSeekType$ = 12					; size = 4
?Seek@CMappedFile@@QAEHKH@Z PROC			; CMappedFile::Seek, COMDAT
; _this$ = ecx

; 125  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 126  : 	switch (iSeekType)

  0000a	8b 45 0c	 mov	 eax, DWORD PTR _iSeekType$[ebp]
  0000d	89 45 f8	 mov	 DWORD PTR tv64[ebp], eax
  00010	83 7d f8 00	 cmp	 DWORD PTR tv64[ebp], 0
  00014	74 11		 je	 SHORT $LN4@Seek
  00016	83 7d f8 01	 cmp	 DWORD PTR tv64[ebp], 1
  0001a	74 33		 je	 SHORT $LN6@Seek
  0001c	83 7d f8 02	 cmp	 DWORD PTR tv64[ebp], 2
  00020	74 6f		 je	 SHORT $LN7@Seek
  00022	e9 97 00 00 00	 jmp	 $LN2@Seek
$LN4@Seek:

; 127  : 	{
; 128  : 		case SEEK_TYPE_BEGIN:
; 129  : 			if (offset > m_dwSize)

  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _offset$[ebp]
  0002d	3b 88 14 01 00
	00		 cmp	 ecx, DWORD PTR [eax+276]
  00033	76 0c		 jbe	 SHORT $LN5@Seek

; 130  : 				offset = m_dwSize;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	8b 80 14 01 00
	00		 mov	 eax, DWORD PTR [eax+276]
  0003e	89 45 08	 mov	 DWORD PTR _offset$[ebp], eax
$LN5@Seek:

; 131  : 
; 132  : 			m_seekPosition = offset;

  00041	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00044	8b 4d 08	 mov	 ecx, DWORD PTR _offset$[ebp]
  00047	89 88 28 01 00
	00		 mov	 DWORD PTR [eax+296], ecx

; 133  : 			break;

  0004d	eb 6f		 jmp	 SHORT $LN2@Seek
$LN6@Seek:

; 134  : 			
; 135  : 		case SEEK_TYPE_CURRENT:
; 136  : 			m_seekPosition = min(m_seekPosition + offset, Size());

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00052	8b b0 28 01 00
	00		 mov	 esi, DWORD PTR [eax+296]
  00058	03 75 08	 add	 esi, DWORD PTR _offset$[ebp]
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
  00063	3b f0		 cmp	 esi, eax
  00065	73 11		 jae	 SHORT $LN9@Seek
  00067	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	8b 80 28 01 00
	00		 mov	 eax, DWORD PTR [eax+296]
  00070	03 45 08	 add	 eax, DWORD PTR _offset$[ebp]
  00073	89 45 f4	 mov	 DWORD PTR tv87[ebp], eax
  00076	eb 0b		 jmp	 SHORT $LN10@Seek
$LN9@Seek:
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
  00080	89 45 f4	 mov	 DWORD PTR tv87[ebp], eax
$LN10@Seek:
  00083	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00086	8b 4d f4	 mov	 ecx, DWORD PTR tv87[ebp]
  00089	89 88 28 01 00
	00		 mov	 DWORD PTR [eax+296], ecx

; 137  : 			break;

  0008f	eb 2d		 jmp	 SHORT $LN2@Seek
$LN7@Seek:

; 138  : 
; 139  : 		case SEEK_TYPE_END:
; 140  : 			m_seekPosition = max(0, Size() - offset);

  00091	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00094	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
  00099	2b 45 08	 sub	 eax, DWORD PTR _offset$[ebp]
  0009c	eb 06		 jmp	 SHORT $LN11@Seek
  0009e	83 65 f0 00	 and	 DWORD PTR tv128[ebp], 0
  000a2	eb 0e		 jmp	 SHORT $LN12@Seek
$LN11@Seek:
  000a4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a7	e8 00 00 00 00	 call	 ?Size@CMappedFile@@QAEKXZ ; CMappedFile::Size
  000ac	2b 45 08	 sub	 eax, DWORD PTR _offset$[ebp]
  000af	89 45 f0	 mov	 DWORD PTR tv128[ebp], eax
$LN12@Seek:
  000b2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b5	8b 4d f0	 mov	 ecx, DWORD PTR tv128[ebp]
  000b8	89 88 28 01 00
	00		 mov	 DWORD PTR [eax+296], ecx
$LN2@Seek:

; 141  : 			break;
; 142  : 	}
; 143  : 
; 144  : 	return m_seekPosition;

  000be	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c1	8b 80 28 01 00
	00		 mov	 eax, DWORD PTR [eax+296]

; 145  : }

  000c7	5e		 pop	 esi
  000c8	c9		 leave
  000c9	c2 08 00	 ret	 8
?Seek@CMappedFile@@QAEHKH@Z ENDP			; CMappedFile::Seek
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
;	COMDAT ?Destroy@CMappedFile@@QAEXXZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
$T2 = -16						; size = 4
tv71 = -12						; size = 4
$T3 = -8						; size = 4
_this$ = -4						; size = 4
?Destroy@CMappedFile@@QAEXXZ PROC			; CMappedFile::Destroy, COMDAT
; _this$ = ecx

; 87   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 88   : 	if (m_pLZObj)	// 압축된 데이터가 이 포인터로 연결 된다

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 b8 40 01 00
	00 00		 cmp	 DWORD PTR [eax+320], 0
  00013	74 4a		 je	 SHORT $LN2@Destroy

; 89   : 	{
; 90   : 		delete m_pLZObj;

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	8b 80 40 01 00
	00		 mov	 eax, DWORD PTR [eax+320]
  0001e	89 45 f8	 mov	 DWORD PTR $T3[ebp], eax
  00021	83 7d f8 00	 cmp	 DWORD PTR $T3[ebp], 0
  00025	74 2a		 je	 SHORT $LN7@Destroy
  00027	8b 45 ec	 mov	 eax, DWORD PTR $T1[ebp]
  0002a	89 45 f4	 mov	 DWORD PTR tv71[ebp], eax
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR $T3[ebp]
  00030	e8 00 00 00 00	 call	 ??1CLZObject@@QAE@XZ	; CLZObject::~CLZObject
  00035	33 c0		 xor	 eax, eax
  00037	40		 inc	 eax
  00038	83 e0 01	 and	 eax, 1
  0003b	74 0c		 je	 SHORT $LN10@Destroy
  0003d	6a 14		 push	 20			; 00000014H
  0003f	ff 75 f8	 push	 DWORD PTR $T3[ebp]
  00042	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00047	59		 pop	 ecx
  00048	59		 pop	 ecx
$LN10@Destroy:
  00049	8b 45 f8	 mov	 eax, DWORD PTR $T3[ebp]
  0004c	89 45 f4	 mov	 DWORD PTR tv71[ebp], eax
  0004f	eb 04		 jmp	 SHORT $LN8@Destroy
$LN7@Destroy:
  00051	83 65 f4 00	 and	 DWORD PTR tv71[ebp], 0
$LN8@Destroy:

; 91   : 		m_pLZObj = NULL;

  00055	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00058	83 a0 40 01 00
	00 00		 and	 DWORD PTR [eax+320], 0
$LN2@Destroy:

; 92   : 	}
; 93   : 
; 94   : 	if (NULL != m_lpMapData)

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	83 b8 38 01 00
	00 00		 cmp	 DWORD PTR [eax+312], 0
  00069	74 1b		 je	 SHORT $LN3@Destroy

; 95   : 	{		
; 96   : 		Unmap(m_lpMapData);

  0006b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006e	ff b0 38 01 00
	00		 push	 DWORD PTR [eax+312]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ?Unmap@CMappedFile@@AAEXPBX@Z ; CMappedFile::Unmap

; 97   : 		m_lpMapData = NULL;

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	83 a0 38 01 00
	00 00		 and	 DWORD PTR [eax+312], 0
$LN3@Destroy:

; 98   : 	}
; 99   : 
; 100  : 	if (NULL != m_hFM)

  00086	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00089	83 b8 2c 01 00
	00 00		 cmp	 DWORD PTR [eax+300], 0
  00090	74 19		 je	 SHORT $LN4@Destroy

; 101  : 	{
; 102  : 		CloseHandle(m_hFM);

  00092	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00095	ff b0 2c 01 00
	00		 push	 DWORD PTR [eax+300]
  0009b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 103  : 		m_hFM = NULL;

  000a1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a4	83 a0 2c 01 00
	00 00		 and	 DWORD PTR [eax+300], 0
$LN4@Destroy:

; 104  : 	}
; 105  : 
; 106  : 	if( m_pbAppendResultDataBlock )

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	83 b8 20 01 00
	00 00		 cmp	 DWORD PTR [eax+288], 0
  000b5	74 1f		 je	 SHORT $LN5@Destroy

; 107  : 	{
; 108  : 		delete []m_pbAppendResultDataBlock;

  000b7	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ba	8b 80 20 01 00
	00		 mov	 eax, DWORD PTR [eax+288]
  000c0	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  000c3	ff 75 f0	 push	 DWORD PTR $T2[ebp]
  000c6	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  000cb	59		 pop	 ecx

; 109  : 		m_pbAppendResultDataBlock = NULL;

  000cc	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000cf	83 a0 20 01 00
	00 00		 and	 DWORD PTR [eax+288], 0
$LN5@Destroy:

; 110  : 	}
; 111  : 
; 112  : 	m_dwAppendResultDataSize = 0;

  000d6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d9	83 a0 24 01 00
	00 00		 and	 DWORD PTR [eax+292], 0

; 113  : 
; 114  : 	m_pbBufLinkData = NULL;

  000e0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e3	83 a0 18 01 00
	00 00		 and	 DWORD PTR [eax+280], 0

; 115  : 	m_dwBufLinkSize = 0;

  000ea	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ed	83 a0 1c 01 00
	00 00		 and	 DWORD PTR [eax+284], 0

; 116  : 
; 117  : 	m_seekPosition = 0;

  000f4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f7	83 a0 28 01 00
	00 00		 and	 DWORD PTR [eax+296], 0

; 118  : 	m_dataOffset = 0;

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00101	83 a0 30 01 00
	00 00		 and	 DWORD PTR [eax+304], 0

; 119  : 	m_mapSize = 0;

  00108	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0010b	83 a0 34 01 00
	00 00		 and	 DWORD PTR [eax+308], 0

; 120  : 
; 121  : 	CFileBase::Destroy();

  00112	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00115	e8 00 00 00 00	 call	 ?Destroy@CFileBase@@QAEXXZ ; CFileBase::Destroy

; 122  : }

  0011a	c9		 leave
  0011b	c3		 ret	 0
?Destroy@CMappedFile@@QAEXXZ ENDP			; CMappedFile::Destroy
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
;	COMDAT ?Get@CMappedFile@@QAEPBXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@CMappedFile@@QAEPBXXZ PROC				; CMappedFile::Get, COMDAT
; _this$ = ecx

; 40   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 41   : 	return m_lpData;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 3c 01 00
	00		 mov	 eax, DWORD PTR [eax+316]

; 42   : }

  00010	c9		 leave
  00011	c3		 ret	 0
?Get@CMappedFile@@QAEPBXXZ ENDP				; CMappedFile::Get
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
;	COMDAT ?Create@CMappedFile@@QAEHPBDPAPBXHH@Z
_TEXT	SEGMENT
_ret$ = -12						; size = 4
tv74 = -8						; size = 4
_this$ = -4						; size = 4
_filename$ = 8						; size = 4
_dest$ = 12						; size = 4
_offset$ = 16						; size = 4
_size$ = 20						; size = 4
?Create@CMappedFile@@QAEHPBDPAPBXHH@Z PROC		; CMappedFile::Create, COMDAT
; _this$ = ecx

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 32   : 	if (!CMappedFile::Create(filename))

  00009	ff 75 08	 push	 DWORD PTR _filename$[ebp]
  0000c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?Create@CMappedFile@@QAEHPBD@Z ; CMappedFile::Create
  00014	85 c0		 test	 eax, eax
  00016	75 04		 jne	 SHORT $LN2@Create

; 33   : 		return NULL;

  00018	33 c0		 xor	 eax, eax
  0001a	eb 2a		 jmp	 SHORT $LN1@Create
$LN2@Create:

; 34   : 
; 35   : 	int ret = Map(dest, offset, size);

  0001c	ff 75 14	 push	 DWORD PTR _size$[ebp]
  0001f	ff 75 10	 push	 DWORD PTR _offset$[ebp]
  00022	ff 75 0c	 push	 DWORD PTR _dest$[ebp]
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ?Map@CMappedFile@@QAEHPAPBXHH@Z ; CMappedFile::Map
  0002d	89 45 f4	 mov	 DWORD PTR _ret$[ebp], eax

; 36   : 	return (ret) > 0;

  00030	83 7d f4 00	 cmp	 DWORD PTR _ret$[ebp], 0
  00034	7e 09		 jle	 SHORT $LN4@Create
  00036	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv74[ebp], 1
  0003d	eb 04		 jmp	 SHORT $LN5@Create
$LN4@Create:
  0003f	83 65 f8 00	 and	 DWORD PTR tv74[ebp], 0
$LN5@Create:
  00043	8b 45 f8	 mov	 eax, DWORD PTR tv74[ebp]
$LN1@Create:

; 37   : }

  00046	c9		 leave
  00047	c2 10 00	 ret	 16			; 00000010H
?Create@CMappedFile@@QAEHPBDPAPBXHH@Z ENDP		; CMappedFile::Create
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
;	COMDAT ?Create@CMappedFile@@QAEHPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_filename$ = 8						; size = 4
?Create@CMappedFile@@QAEHPBD@Z PROC			; CMappedFile::Create, COMDAT
; _this$ = ecx

; 25   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 26   : 	Destroy();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Destroy@CMappedFile@@QAEXXZ ; CMappedFile::Destroy

; 27   : 	return CFileBase::Create(filename, FILEMODE_READ);

  0000f	6a 01		 push	 1
  00011	ff 75 08	 push	 DWORD PTR _filename$[ebp]
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?Create@CFileBase@@QAEHPBDW4EFileMode@1@@Z ; CFileBase::Create

; 28   : }

  0001c	c9		 leave
  0001d	c2 04 00	 ret	 4
?Create@CMappedFile@@QAEHPBD@Z ENDP			; CMappedFile::Create
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
;	COMDAT ?Link@CMappedFile@@QAEXKPBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwBufSize$ = 8						; size = 4
_c_pvBufData$ = 12					; size = 4
?Link@CMappedFile@@QAEXKPBX@Z PROC			; CMappedFile::Link, COMDAT
; _this$ = ecx

; 45   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 46   : 	m_dwBufLinkSize=dwBufSize;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _dwBufSize$[ebp]
  0000d	89 88 1c 01 00
	00		 mov	 DWORD PTR [eax+284], ecx

; 47   : 	m_pbBufLinkData=(BYTE*)c_pvBufData;

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR _c_pvBufData$[ebp]
  00019	89 88 18 01 00
	00		 mov	 DWORD PTR [eax+280], ecx

; 48   : }

  0001f	c9		 leave
  00020	c2 08 00	 ret	 8
?Link@CMappedFile@@QAEXKPBX@Z ENDP			; CMappedFile::Link
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
;	COMDAT ??1CMappedFile@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CMappedFile@@UAE@XZ PROC				; CMappedFile::~CMappedFile, COMDAT
; _this$ = ecx

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CMappedFile@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00029	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CMappedFile@@6B@

; 21   : 	Destroy();

  0002f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?Destroy@CMappedFile@@QAEXXZ ; CMappedFile::Destroy

; 22   : }

  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ??1CFileBase@@UAE@XZ	; CFileBase::~CFileBase
  0003f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00042	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00049	59		 pop	 ecx
  0004a	c9		 leave
  0004b	c3		 ret	 0
  0004c	cc		 int	 3
  0004d	cc		 int	 3
  0004e	cc		 int	 3
  0004f	cc		 int	 3
  00050	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CMappedFile@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CMappedFile@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CMappedFile@@UAE@XZ ENDP				; CMappedFile::~CMappedFile
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterBase\MappedFile.cpp
;	COMDAT ??0CMappedFile@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CMappedFile@@QAE@XZ PROC				; CMappedFile::CMappedFile, COMDAT
; _this$ = ecx

; 16   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CFileBase@@QAE@XZ	; CFileBase::CFileBase
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CMappedFile@@6B@

; 12   : m_pbBufLinkData(NULL),

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 a0 18 01 00
	00 00		 and	 DWORD PTR [eax+280], 0

; 13   : m_dwBufLinkSize(0),

  00022	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00025	83 a0 1c 01 00
	00 00		 and	 DWORD PTR [eax+284], 0

; 14   : m_pbAppendResultDataBlock(NULL),

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 a0 20 01 00
	00 00		 and	 DWORD PTR [eax+288], 0

; 15   : m_dwAppendResultDataSize(0)

  00036	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00039	83 a0 24 01 00
	00 00		 and	 DWORD PTR [eax+292], 0

; 10   : m_seekPosition(0),

  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	83 a0 28 01 00
	00 00		 and	 DWORD PTR [eax+296], 0

; 6    : m_hFM(NULL),

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	83 a0 2c 01 00
	00 00		 and	 DWORD PTR [eax+300], 0

; 8    : m_dataOffset(0),

  00054	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00057	83 a0 30 01 00
	00 00		 and	 DWORD PTR [eax+304], 0

; 9    : m_mapSize(0),

  0005e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00061	83 a0 34 01 00
	00 00		 and	 DWORD PTR [eax+308], 0

; 7    : m_lpMapData(NULL),

  00068	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	83 a0 38 01 00
	00 00		 and	 DWORD PTR [eax+312], 0

; 11   : m_pLZObj(NULL),

  00072	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00075	83 a0 40 01 00
	00 00		 and	 DWORD PTR [eax+320], 0

; 17   : }

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	c9		 leave
  00080	c3		 ret	 0
??0CMappedFile@@QAE@XZ ENDP				; CMappedFile::CMappedFile
_TEXT	ENDS
END
