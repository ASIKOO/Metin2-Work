; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\ColorTransitionHelper.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0CColorTransitionHelper@@QAE@XZ		; CColorTransitionHelper::CColorTransitionHelper
PUBLIC	??1CColorTransitionHelper@@QAE@XZ		; CColorTransitionHelper::~CColorTransitionHelper
PUBLIC	?Clear@CColorTransitionHelper@@QAEXABM000@Z	; CColorTransitionHelper::Clear
PUBLIC	?SetSrcColor@CColorTransitionHelper@@QAEXABM000@Z ; CColorTransitionHelper::SetSrcColor
PUBLIC	?SetTransition@CColorTransitionHelper@@QAEXABM000ABK@Z ; CColorTransitionHelper::SetTransition
PUBLIC	?GetCurColor@CColorTransitionHelper@@QAEABKXZ	; CColorTransitionHelper::GetCurColor
PUBLIC	?StartTransition@CColorTransitionHelper@@QAEXXZ	; CColorTransitionHelper::StartTransition
PUBLIC	?Update@CColorTransitionHelper@@QAE_NXZ		; CColorTransitionHelper::Update
PUBLIC	__real@3f800000
PUBLIC	__real@437f0000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftoui3:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CColorTransitionHelper@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\ColorTransitionHelper.cpp
;	COMDAT ?Update@CColorTransitionHelper@@QAE_NXZ
_TEXT	SEGMENT
tv179 = -56						; size = 8
tv169 = -48						; size = 8
_dwElapsedTime$ = -40					; size = 4
_dwCurTime$ = -36					; size = 4
_fCurBlue$ = -32					; size = 4
_fCurGreen$ = -28					; size = 4
_fCurRed$ = -24						; size = 4
_fCurAlpha$ = -20					; size = 4
tv175 = -16						; size = 4
tv165 = -12						; size = 4
_fpercent$ = -8						; size = 4
_this$ = -4						; size = 4
?Update@CColorTransitionHelper@@QAE_NXZ PROC		; CColorTransitionHelper::Update, COMDAT
; _this$ = ecx

; 57   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	56		 push	 esi
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 58   : //	if (!m_bTransitionStarted)
; 59   : //		return false;
; 60   : 
; 61   : 	DWORD dwCurTime = GetCurrentTime();

  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00010	89 45 dc	 mov	 DWORD PTR _dwCurTime$[ebp], eax

; 62   : 	DWORD dwElapsedTime = dwCurTime - m_dwStartTime;

  00013	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 4d dc	 mov	 ecx, DWORD PTR _dwCurTime$[ebp]
  00019	2b 48 04	 sub	 ecx, DWORD PTR [eax+4]
  0001c	89 4d d8	 mov	 DWORD PTR _dwElapsedTime$[ebp], ecx

; 63   : 
; 64   : 	float fpercent = (float)(dwElapsedTime) / (float)(m_dwDuration);

  0001f	8b 45 d8	 mov	 eax, DWORD PTR _dwElapsedTime$[ebp]
  00022	89 45 f4	 mov	 DWORD PTR tv165[ebp], eax
  00025	f2 0f 2a 45 f4	 cvtsi2sd xmm0, DWORD PTR tv165[ebp]
  0002a	8b 45 f4	 mov	 eax, DWORD PTR tv165[ebp]
  0002d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00030	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00039	f2 0f 11 45 d0	 movsd	 QWORD PTR tv169[ebp], xmm0
  0003e	f2 0f 5a 45 d0	 cvtsd2ss xmm0, QWORD PTR tv169[ebp]
  00043	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00046	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00049	89 45 f0	 mov	 DWORD PTR tv175[ebp], eax
  0004c	f2 0f 2a 4d f0	 cvtsi2sd xmm1, DWORD PTR tv175[ebp]
  00051	8b 45 f0	 mov	 eax, DWORD PTR tv175[ebp]
  00054	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00057	f2 0f 58 0c c5
	00 00 00 00	 addsd	 xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00060	f2 0f 11 4d c8	 movsd	 QWORD PTR tv179[ebp], xmm1
  00065	f2 0f 5a 4d c8	 cvtsd2ss xmm1, QWORD PTR tv179[ebp]
  0006a	f3 0f 5e c1	 divss	 xmm0, xmm1
  0006e	f3 0f 11 45 f8	 movss	 DWORD PTR _fpercent$[ebp], xmm0

; 65   : 	if (fpercent <= 0.0f)

  00073	0f 57 c0	 xorps	 xmm0, xmm0
  00076	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _fpercent$[ebp]
  0007a	72 08		 jb	 SHORT $LN2@Update

; 66   : 		fpercent = 0.0f;

  0007c	0f 57 c0	 xorps	 xmm0, xmm0
  0007f	f3 0f 11 45 f8	 movss	 DWORD PTR _fpercent$[ebp], xmm0
$LN2@Update:

; 67   : 	if (fpercent >= 1.0f)

  00084	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _fpercent$[ebp]
  00089	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00090	72 0d		 jb	 SHORT $LN3@Update

; 68   : 		fpercent = 1.0f;

  00092	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0009a	f3 0f 11 45 f8	 movss	 DWORD PTR _fpercent$[ebp], xmm0
$LN3@Update:

; 69   : 	float fCurRed, fCurGreen, fCurBlue, fCurAlpha;
; 70   : 	fCurRed		= m_fSrcRed + (m_fDstRed - m_fSrcRed) * fpercent;

  0009f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a5	f3 0f 10 40 20	 movss	 xmm0, DWORD PTR [eax+32]
  000aa	f3 0f 5c 41 10	 subss	 xmm0, DWORD PTR [ecx+16]
  000af	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _fpercent$[ebp]
  000b4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b7	f3 0f 58 40 10	 addss	 xmm0, DWORD PTR [eax+16]
  000bc	f3 0f 11 45 e8	 movss	 DWORD PTR _fCurRed$[ebp], xmm0

; 71   : 	fCurGreen	= m_fSrcGreen + (m_fDstGreen - m_fSrcGreen) * fpercent;

  000c1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c7	f3 0f 10 40 24	 movss	 xmm0, DWORD PTR [eax+36]
  000cc	f3 0f 5c 41 14	 subss	 xmm0, DWORD PTR [ecx+20]
  000d1	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _fpercent$[ebp]
  000d6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d9	f3 0f 58 40 14	 addss	 xmm0, DWORD PTR [eax+20]
  000de	f3 0f 11 45 e4	 movss	 DWORD PTR _fCurGreen$[ebp], xmm0

; 72   : 	fCurBlue	= m_fSrcBlue + (m_fDstBlue - m_fSrcBlue) * fpercent;

  000e3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e6	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000e9	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  000ee	f3 0f 5c 41 18	 subss	 xmm0, DWORD PTR [ecx+24]
  000f3	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _fpercent$[ebp]
  000f8	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000fb	f3 0f 58 40 18	 addss	 xmm0, DWORD PTR [eax+24]
  00100	f3 0f 11 45 e0	 movss	 DWORD PTR _fCurBlue$[ebp], xmm0

; 73   : 	fCurAlpha	= m_fSrcAlpha + (m_fDstAlpha - m_fSrcAlpha) * fpercent;

  00105	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00108	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0010b	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  00110	f3 0f 5c 41 1c	 subss	 xmm0, DWORD PTR [ecx+28]
  00115	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _fpercent$[ebp]
  0011a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0011d	f3 0f 58 40 1c	 addss	 xmm0, DWORD PTR [eax+28]
  00122	f3 0f 11 45 ec	 movss	 DWORD PTR _fCurAlpha$[ebp], xmm0

; 74   : 
; 75   : // 	Tracef("%f, %f, %f, %f\n", fCurRed, fCurGreen, fCurBlue, fCurAlpha);
; 76   : 
; 77   : 	m_dwCurColor = (((DWORD)(fCurAlpha * 255.0f)&0xff)<< 24) |

  00127	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fCurAlpha$[ebp]
  0012c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00134	e8 00 00 00 00	 call	 __ftoui3
  00139	8b f0		 mov	 esi, eax
  0013b	81 e6 ff 00 00
	00		 and	 esi, 255		; 000000ffH
  00141	c1 e6 18	 shl	 esi, 24			; 00000018H
  00144	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _fCurRed$[ebp]
  00149	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00151	e8 00 00 00 00	 call	 __ftoui3
  00156	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0015b	c1 e0 10	 shl	 eax, 16			; 00000010H
  0015e	0b f0		 or	 esi, eax
  00160	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _fCurGreen$[ebp]
  00165	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  0016d	e8 00 00 00 00	 call	 __ftoui3
  00172	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00177	c1 e0 08	 shl	 eax, 8
  0017a	0b f0		 or	 esi, eax
  0017c	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _fCurBlue$[ebp]
  00181	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00189	e8 00 00 00 00	 call	 __ftoui3
  0018e	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00193	0b f0		 or	 esi, eax
  00195	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00198	89 30		 mov	 DWORD PTR [eax], esi

; 78   : 		(((DWORD)(fCurRed * 255.0f)&0xff) << 16) |
; 79   : 		(((DWORD)(fCurGreen * 255.0f)&0xff) << 8) |
; 80   : 		((DWORD)(fCurBlue * 255.0f)&0xff);
; 81   : 
; 82   : 	if ( (1.0f == fpercent) && (fCurAlpha == m_fDstAlpha) && (fCurRed == m_fDstRed) && (fCurGreen == m_fDstGreen) && (fCurBlue == m_fDstBlue) )

  0019a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001a2	0f 2e 45 f8	 ucomiss xmm0, DWORD PTR _fpercent$[ebp]
  001a6	9f		 lahf
  001a7	f6 c4 44	 test	 ah, 68			; 00000044H
  001aa	7a 53		 jp	 SHORT $LN4@Update
  001ac	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001af	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fCurAlpha$[ebp]
  001b4	0f 2e 40 2c	 ucomiss xmm0, DWORD PTR [eax+44]
  001b8	9f		 lahf
  001b9	f6 c4 44	 test	 ah, 68			; 00000044H
  001bc	7a 41		 jp	 SHORT $LN4@Update
  001be	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001c1	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _fCurRed$[ebp]
  001c6	0f 2e 40 20	 ucomiss xmm0, DWORD PTR [eax+32]
  001ca	9f		 lahf
  001cb	f6 c4 44	 test	 ah, 68			; 00000044H
  001ce	7a 2f		 jp	 SHORT $LN4@Update
  001d0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001d3	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _fCurGreen$[ebp]
  001d8	0f 2e 40 24	 ucomiss xmm0, DWORD PTR [eax+36]
  001dc	9f		 lahf
  001dd	f6 c4 44	 test	 ah, 68			; 00000044H
  001e0	7a 1d		 jp	 SHORT $LN4@Update
  001e2	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001e5	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _fCurBlue$[ebp]
  001ea	0f 2e 40 28	 ucomiss xmm0, DWORD PTR [eax+40]
  001ee	9f		 lahf
  001ef	f6 c4 44	 test	 ah, 68			; 00000044H
  001f2	7a 0b		 jp	 SHORT $LN4@Update

; 83   : 	{
; 84   : 		m_bTransitionStarted = false;

  001f4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  001f7	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 85   : 		return false;

  001fb	32 c0		 xor	 al, al
  001fd	eb 02		 jmp	 SHORT $LN1@Update
$LN4@Update:

; 86   : 	}
; 87   : 
; 88   : 	return true;

  001ff	b0 01		 mov	 al, 1
$LN1@Update:

; 89   : }

  00201	5e		 pop	 esi
  00202	c9		 leave
  00203	c3		 ret	 0
?Update@CColorTransitionHelper@@QAE_NXZ ENDP		; CColorTransitionHelper::Update
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\ColorTransitionHelper.cpp
;	COMDAT ?StartTransition@CColorTransitionHelper@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StartTransition@CColorTransitionHelper@@QAEXXZ PROC	; CColorTransitionHelper::StartTransition, COMDAT
; _this$ = ecx

; 51   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 52   : 	m_bTransitionStarted = true;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c6 40 0c 01	 mov	 BYTE PTR [eax+12], 1

; 53   : 	m_dwStartTime = GetCurrentTime();

  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetTickCount@0
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 54   : }

  0001a	c9		 leave
  0001b	c3		 ret	 0
?StartTransition@CColorTransitionHelper@@QAEXXZ ENDP	; CColorTransitionHelper::StartTransition
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\ColorTransitionHelper.cpp
;	COMDAT ?GetCurColor@CColorTransitionHelper@@QAEABKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCurColor@CColorTransitionHelper@@QAEABKXZ PROC	; CColorTransitionHelper::GetCurColor, COMDAT
; _this$ = ecx

; 92   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 93   : 	return m_dwCurColor; 

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 94   : }

  0000a	c9		 leave
  0000b	c3		 ret	 0
?GetCurColor@CColorTransitionHelper@@QAEABKXZ ENDP	; CColorTransitionHelper::GetCurColor
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\ColorTransitionHelper.cpp
;	COMDAT ?SetTransition@CColorTransitionHelper@@QAEXABM000ABK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_c_rfRed$ = 8						; size = 4
_c_rfGreen$ = 12					; size = 4
_c_rfBlue$ = 16						; size = 4
_c_rfAlpha$ = 20					; size = 4
_dwDuration$ = 24					; size = 4
?SetTransition@CColorTransitionHelper@@QAEXABM000ABK@Z PROC ; CColorTransitionHelper::SetTransition, COMDAT
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 42   : 	m_fDstRed	= c_rfRed;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _c_rfRed$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 48 20	 mov	 DWORD PTR [eax+32], ecx

; 43   : 	m_fDstGreen	= c_rfGreen;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR _c_rfGreen$[ebp]
  00018	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0001a	89 48 24	 mov	 DWORD PTR [eax+36], ecx

; 44   : 	m_fDstBlue	= c_rfBlue;

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 4d 10	 mov	 ecx, DWORD PTR _c_rfBlue$[ebp]
  00023	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00025	89 48 28	 mov	 DWORD PTR [eax+40], ecx

; 45   : 	m_fDstAlpha	= c_rfAlpha;

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	8b 4d 14	 mov	 ecx, DWORD PTR _c_rfAlpha$[ebp]
  0002e	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00030	89 48 2c	 mov	 DWORD PTR [eax+44], ecx

; 46   : 
; 47   : 	m_dwDuration = dwDuration;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 4d 18	 mov	 ecx, DWORD PTR _dwDuration$[ebp]
  00039	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0003b	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 48   : }

  0003e	c9		 leave
  0003f	c2 14 00	 ret	 20			; 00000014H
?SetTransition@CColorTransitionHelper@@QAEXABM000ABK@Z ENDP ; CColorTransitionHelper::SetTransition
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\ColorTransitionHelper.cpp
;	COMDAT ?SetSrcColor@CColorTransitionHelper@@QAEXABM000@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_c_rfRed$ = 8						; size = 4
_c_rfGreen$ = 12					; size = 4
_c_rfBlue$ = 16						; size = 4
_c_rfAlpha$ = 20					; size = 4
?SetSrcColor@CColorTransitionHelper@@QAEXABM000@Z PROC	; CColorTransitionHelper::SetSrcColor, COMDAT
; _this$ = ecx

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 30   : 	m_fSrcRed	= c_rfRed;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _c_rfRed$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 31   : 	m_fSrcGreen	= c_rfGreen;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR _c_rfGreen$[ebp]
  00018	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0001a	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 32   : 	m_fSrcBlue	= c_rfBlue;

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 4d 10	 mov	 ecx, DWORD PTR _c_rfBlue$[ebp]
  00023	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00025	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 33   : 	m_fSrcAlpha	= c_rfAlpha;

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	8b 4d 14	 mov	 ecx, DWORD PTR _c_rfAlpha$[ebp]
  0002e	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00030	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 34   : }

  00033	c9		 leave
  00034	c2 10 00	 ret	 16			; 00000010H
?SetSrcColor@CColorTransitionHelper@@QAEXABM000@Z ENDP	; CColorTransitionHelper::SetSrcColor
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\ColorTransitionHelper.cpp
;	COMDAT ?Clear@CColorTransitionHelper@@QAEXABM000@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_c_rfRed$ = 8						; size = 4
_c_rfGreen$ = 12					; size = 4
_c_rfBlue$ = 16						; size = 4
_c_rfAlpha$ = 20					; size = 4
?Clear@CColorTransitionHelper@@QAEXABM000@Z PROC	; CColorTransitionHelper::Clear, COMDAT
; _this$ = ecx

; 8    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 9    : 
; 10   : 	m_fSrcRed	= c_rfRed;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _c_rfRed$[ebp]
  0000d	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000f	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 11   : 	m_fSrcGreen	= c_rfGreen;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR _c_rfGreen$[ebp]
  00018	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0001a	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 12   : 	m_fSrcBlue	= c_rfBlue;

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 4d 10	 mov	 ecx, DWORD PTR _c_rfBlue$[ebp]
  00023	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00025	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 13   : 	m_fSrcAlpha	= c_rfAlpha;

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	8b 4d 14	 mov	 ecx, DWORD PTR _c_rfAlpha$[ebp]
  0002e	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00030	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 14   : 
; 15   : 	m_fDstRed	= c_rfRed;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 4d 08	 mov	 ecx, DWORD PTR _c_rfRed$[ebp]
  00039	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0003b	89 48 20	 mov	 DWORD PTR [eax+32], ecx

; 16   : 	m_fDstGreen	= c_rfGreen;

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00041	8b 4d 0c	 mov	 ecx, DWORD PTR _c_rfGreen$[ebp]
  00044	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00046	89 48 24	 mov	 DWORD PTR [eax+36], ecx

; 17   : 	m_fDstBlue	= c_rfBlue;

  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	8b 4d 10	 mov	 ecx, DWORD PTR _c_rfBlue$[ebp]
  0004f	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00051	89 48 28	 mov	 DWORD PTR [eax+40], ecx

; 18   : 	m_fDstAlpha	= c_rfAlpha;

  00054	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00057	8b 4d 14	 mov	 ecx, DWORD PTR _c_rfAlpha$[ebp]
  0005a	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0005c	89 48 2c	 mov	 DWORD PTR [eax+44], ecx

; 19   : 
; 20   : 	m_dwCurColor = 0x00000000;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	83 20 00	 and	 DWORD PTR [eax], 0

; 21   : 
; 22   : 	m_dwStartTime = m_dwDuration = 0;

  00065	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00068	83 60 08 00	 and	 DWORD PTR [eax+8], 0
  0006c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	83 60 04 00	 and	 DWORD PTR [eax+4], 0

; 23   : }

  00073	c9		 leave
  00074	c2 10 00	 ret	 16			; 00000010H
?Clear@CColorTransitionHelper@@QAEXABM000@Z ENDP	; CColorTransitionHelper::Clear
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\ColorTransitionHelper.cpp
;	COMDAT ??1CColorTransitionHelper@@QAE@XZ
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T2 = -28						; size = 4
$T3 = -24						; size = 4
$T4 = -20						; size = 4
$T5 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CColorTransitionHelper@@QAE@XZ PROC			; CColorTransitionHelper::~CColorTransitionHelper, COMDAT
; _this$ = ecx

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CColorTransitionHelper@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 103  : 	Clear(0.0f, 0.0f, 0.0f, 0.0f); 

  00028	0f 57 c0	 xorps	 xmm0, xmm0
  0002b	f3 0f 11 45 f0	 movss	 DWORD PTR $T5[ebp], xmm0
  00030	0f 57 c0	 xorps	 xmm0, xmm0
  00033	f3 0f 11 45 ec	 movss	 DWORD PTR $T4[ebp], xmm0
  00038	0f 57 c0	 xorps	 xmm0, xmm0
  0003b	f3 0f 11 45 e8	 movss	 DWORD PTR $T3[ebp], xmm0
  00040	0f 57 c0	 xorps	 xmm0, xmm0
  00043	f3 0f 11 45 e4	 movss	 DWORD PTR $T2[ebp], xmm0
  00048	8d 45 f0	 lea	 eax, DWORD PTR $T5[ebp]
  0004b	50		 push	 eax
  0004c	8d 45 ec	 lea	 eax, DWORD PTR $T4[ebp]
  0004f	50		 push	 eax
  00050	8d 45 e8	 lea	 eax, DWORD PTR $T3[ebp]
  00053	50		 push	 eax
  00054	8d 45 e4	 lea	 eax, DWORD PTR $T2[ebp]
  00057	50		 push	 eax
  00058	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?Clear@CColorTransitionHelper@@QAEXABM000@Z ; CColorTransitionHelper::Clear

; 104  : }

  00060	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00063	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0006a	59		 pop	 ecx
  0006b	c9		 leave
  0006c	c3		 ret	 0
  0006d	cc		 int	 3
  0006e	cc		 int	 3
  0006f	cc		 int	 3
  00070	cc		 int	 3
  00071	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CColorTransitionHelper@@QAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CColorTransitionHelper@@QAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CColorTransitionHelper@@QAE@XZ ENDP			; CColorTransitionHelper::~CColorTransitionHelper
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\ColorTransitionHelper.cpp
;	COMDAT ??0CColorTransitionHelper@@QAE@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
$T2 = -16						; size = 4
$T3 = -12						; size = 4
$T4 = -8						; size = 4
_this$ = -4						; size = 4
??0CColorTransitionHelper@@QAE@XZ PROC			; CColorTransitionHelper::CColorTransitionHelper, COMDAT
; _this$ = ecx

; 97   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 96   : CColorTransitionHelper::CColorTransitionHelper():m_bTransitionStarted(false)

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 98   : 	Clear(0.0f, 0.0f, 0.0f, 0.0f); 

  00010	0f 57 c0	 xorps	 xmm0, xmm0
  00013	f3 0f 11 45 f8	 movss	 DWORD PTR $T4[ebp], xmm0
  00018	0f 57 c0	 xorps	 xmm0, xmm0
  0001b	f3 0f 11 45 f4	 movss	 DWORD PTR $T3[ebp], xmm0
  00020	0f 57 c0	 xorps	 xmm0, xmm0
  00023	f3 0f 11 45 f0	 movss	 DWORD PTR $T2[ebp], xmm0
  00028	0f 57 c0	 xorps	 xmm0, xmm0
  0002b	f3 0f 11 45 ec	 movss	 DWORD PTR $T1[ebp], xmm0
  00030	8d 45 f8	 lea	 eax, DWORD PTR $T4[ebp]
  00033	50		 push	 eax
  00034	8d 45 f4	 lea	 eax, DWORD PTR $T3[ebp]
  00037	50		 push	 eax
  00038	8d 45 f0	 lea	 eax, DWORD PTR $T2[ebp]
  0003b	50		 push	 eax
  0003c	8d 45 ec	 lea	 eax, DWORD PTR $T1[ebp]
  0003f	50		 push	 eax
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00043	e8 00 00 00 00	 call	 ?Clear@CColorTransitionHelper@@QAEXABM000@Z ; CColorTransitionHelper::Clear

; 99   : }

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	c9		 leave
  0004c	c3		 ret	 0
??0CColorTransitionHelper@@QAE@XZ ENDP			; CColorTransitionHelper::CColorTransitionHelper
_TEXT	ENDS
END
