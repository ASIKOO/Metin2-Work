; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?m_kLightData@@3USLightData@@A			; m_kLightData
_BSS	SEGMENT
?m_kLightData@@3USLightData@@A DB 0340H DUP (?)		; m_kLightData
_BSS	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??0CStateManagerState@@QAE@XZ			; CStateManagerState::CStateManagerState
PUBLIC	?ResetState@CStateManagerState@@QAEXXZ		; CStateManagerState::ResetState
PUBLIC	??1?$CSingleton@VCStateManager@@@@UAE@XZ	; CSingleton<CStateManager>::~CSingleton<CStateManager>
PUBLIC	??_G?$CSingleton@VCStateManager@@@@UAEPAXI@Z	; CSingleton<CStateManager>::`scalar deleting destructor'
PUBLIC	??0CStateManager@@QAE@PAUIDirect3DDevice8@@@Z	; CStateManager::CStateManager
PUBLIC	??1CStateManager@@UAE@XZ			; CStateManager::~CStateManager
PUBLIC	?SetDefaultState@CStateManager@@QAEXXZ		; CStateManager::SetDefaultState
PUBLIC	?Restore@CStateManager@@QAEXXZ			; CStateManager::Restore
PUBLIC	?BeginScene@CStateManager@@QAE_NXZ		; CStateManager::BeginScene
PUBLIC	?EndScene@CStateManager@@QAEXXZ			; CStateManager::EndScene
PUBLIC	?SaveMaterial@CStateManager@@QAEXXZ		; CStateManager::SaveMaterial
PUBLIC	?SaveMaterial@CStateManager@@QAEXPBU_D3DMATERIAL8@@@Z ; CStateManager::SaveMaterial
PUBLIC	?RestoreMaterial@CStateManager@@QAEXXZ		; CStateManager::RestoreMaterial
PUBLIC	?SetMaterial@CStateManager@@QAEXPBU_D3DMATERIAL8@@@Z ; CStateManager::SetMaterial
PUBLIC	?GetMaterial@CStateManager@@QAEXPAU_D3DMATERIAL8@@@Z ; CStateManager::GetMaterial
PUBLIC	?SetLight@CStateManager@@QAEXKPBU_D3DLIGHT8@@@Z	; CStateManager::SetLight
PUBLIC	?GetLight@CStateManager@@QAEXKPAU_D3DLIGHT8@@@Z	; CStateManager::GetLight
PUBLIC	?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SaveRenderState
PUBLIC	?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::RestoreRenderState
PUBLIC	?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState
PUBLIC	?GetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@PAK@Z ; CStateManager::GetRenderState
PUBLIC	?SaveTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SaveTexture
PUBLIC	?RestoreTexture@CStateManager@@QAEXK@Z		; CStateManager::RestoreTexture
PUBLIC	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture
PUBLIC	?GetTexture@CStateManager@@QAEXKPAPAUIDirect3DBaseTexture8@@@Z ; CStateManager::GetTexture
PUBLIC	?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SaveTextureStageState
PUBLIC	?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ; CStateManager::RestoreTextureStageState
PUBLIC	?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState
PUBLIC	?GetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@PAK@Z ; CStateManager::GetTextureStageState
PUBLIC	?SetBestFiltering@CStateManager@@QAEXK@Z	; CStateManager::SetBestFiltering
PUBLIC	?SaveVertexShader@CStateManager@@QAEXK@Z	; CStateManager::SaveVertexShader
PUBLIC	?RestoreVertexShader@CStateManager@@QAEXXZ	; CStateManager::RestoreVertexShader
PUBLIC	?SetVertexShader@CStateManager@@QAEXK@Z		; CStateManager::SetVertexShader
PUBLIC	?GetVertexShader@CStateManager@@QAEXPAK@Z	; CStateManager::GetVertexShader
PUBLIC	?SavePixelShader@CStateManager@@QAEXK@Z		; CStateManager::SavePixelShader
PUBLIC	?RestorePixelShader@CStateManager@@QAEXXZ	; CStateManager::RestorePixelShader
PUBLIC	?SetPixelShader@CStateManager@@QAEXK@Z		; CStateManager::SetPixelShader
PUBLIC	?GetPixelShader@CStateManager@@QAEXPAK@Z	; CStateManager::GetPixelShader
PUBLIC	?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SaveTransform
PUBLIC	?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z ; CStateManager::RestoreTransform
PUBLIC	?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform
PUBLIC	?GetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z ; CStateManager::GetTransform
PUBLIC	?SaveVertexShaderConstant@CStateManager@@QAEXKPBXK@Z ; CStateManager::SaveVertexShaderConstant
PUBLIC	?RestoreVertexShaderConstant@CStateManager@@QAEXKK@Z ; CStateManager::RestoreVertexShaderConstant
PUBLIC	?SetVertexShaderConstant@CStateManager@@QAEXKPBXK@Z ; CStateManager::SetVertexShaderConstant
PUBLIC	?SavePixelShaderConstant@CStateManager@@QAEXKPBXK@Z ; CStateManager::SavePixelShaderConstant
PUBLIC	?RestorePixelShaderConstant@CStateManager@@QAEXKK@Z ; CStateManager::RestorePixelShaderConstant
PUBLIC	?SetPixelShaderConstant@CStateManager@@QAEXKPBXK@Z ; CStateManager::SetPixelShaderConstant
PUBLIC	?SaveStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z ; CStateManager::SaveStreamSource
PUBLIC	?RestoreStreamSource@CStateManager@@QAEXI@Z	; CStateManager::RestoreStreamSource
PUBLIC	?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z ; CStateManager::SetStreamSource
PUBLIC	?SaveIndices@CStateManager@@QAEXPAUIDirect3DIndexBuffer8@@I@Z ; CStateManager::SaveIndices
PUBLIC	?RestoreIndices@CStateManager@@QAEXXZ		; CStateManager::RestoreIndices
PUBLIC	?SetIndices@CStateManager@@QAEXPAUIDirect3DIndexBuffer8@@I@Z ; CStateManager::SetIndices
PUBLIC	?DrawPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@II@Z ; CStateManager::DrawPrimitive
PUBLIC	?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z ; CStateManager::DrawPrimitiveUP
PUBLIC	?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z ; CStateManager::DrawIndexedPrimitive
PUBLIC	?DrawIndexedPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIIPBXW4_D3DFORMAT@@1I@Z ; CStateManager::DrawIndexedPrimitiveUP
PUBLIC	?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z ; CStateManager::GetRenderState
PUBLIC	?SetDevice@CStateManager@@AAEXPAUIDirect3DDevice8@@@Z ; CStateManager::SetDevice
PUBLIC	??1?$vector@VCStateID@@V?$allocator@VCStateID@@@std@@@std@@QAE@XZ ; std::vector<CStateID,std::allocator<CStateID> >::~vector<CStateID,std::allocator<CStateID> >
PUBLIC	?_Tidy@?$vector@VCStateID@@V?$allocator@VCStateID@@@std@@@std@@AAEXXZ ; std::vector<CStateID,std::allocator<CStateID> >::_Tidy
PUBLIC	??_GCStateManager@@UAEPAXI@Z			; CStateManager::`scalar deleting destructor'
PUBLIC	??$_Destroy_range@V?$allocator@VCStateID@@@std@@@std@@YAXPAVCStateID@@QAV1@AAV?$allocator@VCStateID@@@0@@Z ; std::_Destroy_range<std::allocator<CStateID> >
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	??_7?$CSingleton@VCStateManager@@@@6B@		; CSingleton<CStateManager>::`vftable'
PUBLIC	??_7CStateManager@@6B@				; CStateManager::`vftable'
PUBLIC	??_R4CStateManager@@6B@				; CStateManager::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCStateManager@@@8			; CStateManager `RTTI Type Descriptor'
PUBLIC	??_R3CStateManager@@8				; CStateManager::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CStateManager@@8				; CStateManager::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CStateManager@@8			; CStateManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$CSingleton@VCStateManager@@@@8	; CSingleton<CStateManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$CSingleton@VCStateManager@@@@@8	; CSingleton<CStateManager> `RTTI Type Descriptor'
PUBLIC	??_R3?$CSingleton@VCStateManager@@@@8		; CSingleton<CStateManager>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CSingleton@VCStateManager@@@@8		; CSingleton<CStateManager>::`RTTI Base Class Array'
PUBLIC	??_R4?$CSingleton@VCStateManager@@@@6B@		; CSingleton<CStateManager>::`RTTI Complete Object Locator'
PUBLIC	__real@3f800000
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	??_E?$CSingleton@VCStateManager@@@@UAEPAXI@Z:PROC ; CSingleton<CStateManager>::`vector deleting destructor'
EXTRN	??_ECStateManager@@UAEPAXI@Z:PROC		; CStateManager::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ??_R4?$CSingleton@VCStateManager@@@@6B@
rdata$r	SEGMENT
??_R4?$CSingleton@VCStateManager@@@@6B@ DD 00H		; CSingleton<CStateManager>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CSingleton@VCStateManager@@@@@8
	DD	FLAT:??_R3?$CSingleton@VCStateManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CSingleton@VCStateManager@@@@8
rdata$r	SEGMENT
??_R2?$CSingleton@VCStateManager@@@@8 DD FLAT:??_R1A@?0A@EA@?$CSingleton@VCStateManager@@@@8 ; CSingleton<CStateManager>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$CSingleton@VCStateManager@@@@8
rdata$r	SEGMENT
??_R3?$CSingleton@VCStateManager@@@@8 DD 00H		; CSingleton<CStateManager>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$CSingleton@VCStateManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CSingleton@VCStateManager@@@@@8
data$rs	SEGMENT
??_R0?AV?$CSingleton@VCStateManager@@@@@8 DD FLAT:??_7type_info@@6B@ ; CSingleton<CStateManager> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CSingleton@VCStateManager@@@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CSingleton@VCStateManager@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CSingleton@VCStateManager@@@@8 DD FLAT:??_R0?AV?$CSingleton@VCStateManager@@@@@8 ; CSingleton<CStateManager>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CSingleton@VCStateManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CStateManager@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CStateManager@@8 DD FLAT:??_R0?AVCStateManager@@@8 ; CStateManager::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CStateManager@@8
rdata$r	ENDS
;	COMDAT ??_R2CStateManager@@8
rdata$r	SEGMENT
??_R2CStateManager@@8 DD FLAT:??_R1A@?0A@EA@CStateManager@@8 ; CStateManager::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$CSingleton@VCStateManager@@@@8
rdata$r	ENDS
;	COMDAT ??_R3CStateManager@@8
rdata$r	SEGMENT
??_R3CStateManager@@8 DD 00H				; CStateManager::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CStateManager@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCStateManager@@@8
data$rs	SEGMENT
??_R0?AVCStateManager@@@8 DD FLAT:??_7type_info@@6B@	; CStateManager `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCStateManager@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CStateManager@@6B@
rdata$r	SEGMENT
??_R4CStateManager@@6B@ DD 00H				; CStateManager::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCStateManager@@@8
	DD	FLAT:??_R3CStateManager@@8
rdata$r	ENDS
;	COMDAT ??_7CStateManager@@6B@
CONST	SEGMENT
??_7CStateManager@@6B@ DD FLAT:??_R4CStateManager@@6B@	; CStateManager::`vftable'
	DD	FLAT:??_ECStateManager@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$CSingleton@VCStateManager@@@@6B@
CONST	SEGMENT
??_7?$CSingleton@VCStateManager@@@@6B@ DD FLAT:??_R4?$CSingleton@VCStateManager@@@@6B@ ; CSingleton<CStateManager>::`vftable'
	DD	FLAT:??_E?$CSingleton@VCStateManager@@@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CStateManager@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CStateManager@@QAE@PAUIDirect3DDevice8@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CStateManager@@QAE@PAUIDirect3DDevice8@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CStateManager@@QAE@PAUIDirect3DDevice8@@@Z$1
__ehfuncinfo$??0CStateManager@@QAE@PAUIDirect3DDevice8@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CStateManager@@QAE@PAUIDirect3DDevice8@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@VCStateID@@@std@@@std@@YAXPAVCStateID@@QAV1@AAV?$allocator@VCStateID@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@VCStateID@@@std@@@std@@YAXPAVCStateID@@QAV1@AAV?$allocator@VCStateID@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CStateID> >, COMDAT

; 962  :     _Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {
; 967  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 968  :         }
; 969  :     }
; 970  : }

  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy_range@V?$allocator@VCStateID@@@std@@@std@@YAXPAVCStateID@@QAV1@AAV?$allocator@VCStateID@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CStateID> >
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_GCStateManager@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCStateManager@@UAEPAXI@Z PROC			; CStateManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CStateManager@@UAE@XZ ; CStateManager::~CStateManager
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0f		 je	 SHORT $LN2@scalar
  00017	68 7c 33 01 00	 push	 78716			; 0001337cH
  0001c	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00024	59		 pop	 ecx
  00025	59		 pop	 ecx
$LN2@scalar:
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	c9		 leave
  0002a	c2 04 00	 ret	 4
??_GCStateManager@@UAEPAXI@Z ENDP			; CStateManager::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Tidy@?$vector@VCStateID@@V?$allocator@VCStateID@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
$T1 = -52						; size = 4
__Ptr$ = -48						; size = 4
__Count$ = -44						; size = 4
$T2 = -40						; size = 4
__First$ = -36						; size = 4
__Last$ = -32						; size = 4
$T3 = -28						; size = 4
$T4 = -24						; size = 4
__Myend$ = -20						; size = 4
__Mylast$ = -16						; size = 4
_this$ = -12						; size = 4
__My_data$ = -8						; size = 4
__Myfirst$ = -4						; size = 4
?_Tidy@?$vector@VCStateID@@V?$allocator@VCStateID@@@std@@@std@@AAEXXZ PROC ; std::vector<CStateID,std::allocator<CStateID> >::_Tidy, COMDAT
; _this$ = ecx

; 1686 :     void _Tidy() noexcept { // free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1687 :         auto& _My_data    = _Mypair._Myval2;

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 f8	 mov	 DWORD PTR __My_data$[ebp], eax

; 1688 :         pointer& _Myfirst = _My_data._Myfirst;

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00012	89 45 fc	 mov	 DWORD PTR __Myfirst$[ebp], eax

; 1689 :         pointer& _Mylast  = _My_data._Mylast;

  00015	8b 45 f8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00018	83 c0 04	 add	 eax, 4
  0001b	89 45 f0	 mov	 DWORD PTR __Mylast$[ebp], eax

; 1690 :         pointer& _Myend   = _My_data._Myend;

  0001e	8b 45 f8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00021	83 c0 08	 add	 eax, 8
  00024	89 45 ec	 mov	 DWORD PTR __Myend$[ebp], eax

; 1691 : 
; 1692 :         _My_data._Orphan_all();
; 1693 : 
; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00027	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0002a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0002d	74 75		 je	 SHORT $LN3@Tidy

; 1695 :             _Destroy(_Myfirst, _Mylast);

  0002f	8b 45 f0	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00032	8b 00		 mov	 eax, DWORD PTR [eax]
  00034	89 45 e0	 mov	 DWORD PTR __Last$[ebp], eax
  00037	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0003a	8b 00		 mov	 eax, DWORD PTR [eax]
  0003c	89 45 dc	 mov	 DWORD PTR __First$[ebp], eax

; 1733 :         return _Mypair._Get_first();

  0003f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  00042	89 45 e8	 mov	 DWORD PTR $T4[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  00045	8b 45 e8	 mov	 eax, DWORD PTR $T4[ebp]
  00048	89 45 e4	 mov	 DWORD PTR $T3[ebp], eax

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0004b	ff 75 e4	 push	 DWORD PTR $T3[ebp]
  0004e	ff 75 e0	 push	 DWORD PTR __Last$[ebp]
  00051	ff 75 dc	 push	 DWORD PTR __First$[ebp]
  00054	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@VCStateID@@@std@@@std@@YAXPAVCStateID@@QAV1@AAV?$allocator@VCStateID@@@0@@Z ; std::_Destroy_range<std::allocator<CStateID> >
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1733 :         return _Mypair._Get_first();

  0005c	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  0005f	89 45 d8	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  00062	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
  00065	89 45 cc	 mov	 DWORD PTR $T1[ebp], eax

; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00068	8b 45 ec	 mov	 eax, DWORD PTR __Myend$[ebp]
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR __Myfirst$[ebp]
  0006e	8b 00		 mov	 eax, DWORD PTR [eax]
  00070	2b 01		 sub	 eax, DWORD PTR [ecx]
  00072	99		 cdq
  00073	6a 0c		 push	 12			; 0000000cH
  00075	59		 pop	 ecx
  00076	f7 f9		 idiv	 ecx
  00078	89 45 d4	 mov	 DWORD PTR __Count$[ebp], eax
  0007b	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0007e	8b 00		 mov	 eax, DWORD PTR [eax]
  00080	89 45 d0	 mov	 DWORD PTR __Ptr$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00083	6b 45 d4 0c	 imul	 eax, DWORD PTR __Count$[ebp], 12
  00087	50		 push	 eax
  00088	ff 75 d0	 push	 DWORD PTR __Ptr$[ebp]
  0008b	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00090	59		 pop	 ecx
  00091	59		 pop	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00092	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  00095	83 20 00	 and	 DWORD PTR [eax], 0

; 1699 :             _Mylast  = pointer();

  00098	8b 45 f0	 mov	 eax, DWORD PTR __Mylast$[ebp]
  0009b	83 20 00	 and	 DWORD PTR [eax], 0

; 1700 :             _Myend   = pointer();

  0009e	8b 45 ec	 mov	 eax, DWORD PTR __Myend$[ebp]
  000a1	83 20 00	 and	 DWORD PTR [eax], 0
$LN3@Tidy:

; 1701 :         }
; 1702 :     }

  000a4	c9		 leave
  000a5	c3		 ret	 0
?_Tidy@?$vector@VCStateID@@V?$allocator@VCStateID@@@std@@@std@@AAEXXZ ENDP ; std::vector<CStateID,std::allocator<CStateID> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??1?$vector@VCStateID@@V?$allocator@VCStateID@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@VCStateID@@V?$allocator@VCStateID@@@std@@@std@@QAE@XZ PROC ; std::vector<CStateID,std::allocator<CStateID> >::~vector<CStateID,std::allocator<CStateID> >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 673  :         _Tidy();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Tidy@?$vector@VCStateID@@V?$allocator@VCStateID@@@std@@@std@@AAEXXZ ; std::vector<CStateID,std::allocator<CStateID> >::_Tidy

; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  0000f	c9		 leave
  00010	c3		 ret	 0
??1?$vector@VCStateID@@V?$allocator@VCStateID@@@std@@@std@@QAE@XZ ENDP ; std::vector<CStateID,std::allocator<CStateID> >::~vector<CStateID,std::allocator<CStateID> >
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SetDevice@CStateManager@@AAEXPAUIDirect3DDevice8@@@Z
_TEXT	SEGMENT
tv135 = -116						; size = 4
_i$1 = -112						; size = 4
_dwMax$ = -108						; size = 4
_this$ = -104						; size = 4
_d3dCaps$ = -100					; size = 212
__$ArrayPad$ = 112					; size = 4
_lpDevice$ = 124					; size = 4
?SetDevice@CStateManager@@AAEXPAUIDirect3DDevice8@@@Z PROC ; CStateManager::SetDevice, COMDAT
; _this$ = ecx

; 75   : {

  00000	55		 push	 ebp
  00001	8d 6c 24 8c	 lea	 ebp, DWORD PTR [esp-116]
  00005	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  0000b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00010	33 c5		 xor	 eax, ebp
  00012	89 45 70	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00015	89 4d 98	 mov	 DWORD PTR _this$[ebp], ecx

; 76   : 	StateManager_Assert(lpDevice);
; 77   : 	lpDevice->AddRef();

  00018	8b 45 7c	 mov	 eax, DWORD PTR _lpDevice$[ebp]
  0001b	8b 00		 mov	 eax, DWORD PTR [eax]
  0001d	ff 75 7c	 push	 DWORD PTR _lpDevice$[ebp]
  00020	ff 50 04	 call	 DWORD PTR [eax+4]

; 78   : 
; 79   : 	if (m_lpD3DDev)

  00023	8b 45 98	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 b8 78 33 01
	00 00		 cmp	 DWORD PTR [eax+78712], 0
  0002d	74 21		 je	 SHORT $LN5@SetDevice

; 80   : 	{
; 81   : 		m_lpD3DDev->Release();

  0002f	8b 45 98	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  00038	8b 4d 98	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	8b 00		 mov	 eax, DWORD PTR [eax]
  0003d	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  00043	ff 50 08	 call	 DWORD PTR [eax+8]

; 82   : 		m_lpD3DDev = NULL;

  00046	8b 45 98	 mov	 eax, DWORD PTR _this$[ebp]
  00049	83 a0 78 33 01
	00 00		 and	 DWORD PTR [eax+78712], 0
$LN5@SetDevice:

; 83   : 	}
; 84   : 
; 85   : 	m_lpD3DDev = lpDevice;

  00050	8b 45 98	 mov	 eax, DWORD PTR _this$[ebp]
  00053	8b 4d 7c	 mov	 ecx, DWORD PTR _lpDevice$[ebp]
  00056	89 88 78 33 01
	00		 mov	 DWORD PTR [eax+78712], ecx

; 86   : 
; 87   : 	D3DCAPS8 d3dCaps;
; 88   : 	m_lpD3DDev->GetDeviceCaps(&d3dCaps);

  0005c	8d 45 9c	 lea	 eax, DWORD PTR _d3dCaps$[ebp]
  0005f	50		 push	 eax
  00060	8b 45 98	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  00069	8b 4d 98	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	8b 00		 mov	 eax, DWORD PTR [eax]
  0006e	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  00074	ff 50 1c	 call	 DWORD PTR [eax+28]

; 89   : 
; 90   : 	if (d3dCaps.TextureFilterCaps & D3DPTFILTERCAPS_MAGFANISOTROPIC)

  00077	8b 45 dc	 mov	 eax, DWORD PTR _d3dCaps$[ebp+64]
  0007a	25 00 00 00 04	 and	 eax, 67108864		; 04000000H
  0007f	74 0f		 je	 SHORT $LN6@SetDevice

; 91   : 		m_dwBestMagFilter = D3DTEXF_ANISOTROPIC;

  00081	8b 45 98	 mov	 eax, DWORD PTR _this$[ebp]
  00084	c7 80 74 33 01
	00 03 00 00 00	 mov	 DWORD PTR [eax+78708], 3
  0008e	eb 0d		 jmp	 SHORT $LN7@SetDevice
$LN6@SetDevice:

; 92   : 	else
; 93   : 		m_dwBestMagFilter = D3DTEXF_LINEAR;

  00090	8b 45 98	 mov	 eax, DWORD PTR _this$[ebp]
  00093	c7 80 74 33 01
	00 02 00 00 00	 mov	 DWORD PTR [eax+78708], 2
$LN7@SetDevice:

; 94   : 	
; 95   : 	if (d3dCaps.TextureFilterCaps & D3DPTFILTERCAPS_MINFANISOTROPIC)

  0009d	8b 45 dc	 mov	 eax, DWORD PTR _d3dCaps$[ebp+64]
  000a0	25 00 04 00 00	 and	 eax, 1024		; 00000400H
  000a5	74 0f		 je	 SHORT $LN8@SetDevice

; 96   : 		m_dwBestMinFilter = D3DTEXF_ANISOTROPIC;

  000a7	8b 45 98	 mov	 eax, DWORD PTR _this$[ebp]
  000aa	c7 80 70 33 01
	00 03 00 00 00	 mov	 DWORD PTR [eax+78704], 3
  000b4	eb 0d		 jmp	 SHORT $LN9@SetDevice
$LN8@SetDevice:

; 97   : 	else
; 98   : 		m_dwBestMinFilter = D3DTEXF_LINEAR;

  000b6	8b 45 98	 mov	 eax, DWORD PTR _this$[ebp]
  000b9	c7 80 70 33 01
	00 02 00 00 00	 mov	 DWORD PTR [eax+78704], 2
$LN9@SetDevice:

; 99   : 
; 100  : 	DWORD dwMax = d3dCaps.MaxAnisotropy;

  000c3	8b 45 08	 mov	 eax, DWORD PTR _d3dCaps$[ebp+108]
  000c6	89 45 94	 mov	 DWORD PTR _dwMax$[ebp], eax

; 101  : 	dwMax = dwMax < 4 ? dwMax : 4;

  000c9	83 7d 94 04	 cmp	 DWORD PTR _dwMax$[ebp], 4
  000cd	73 08		 jae	 SHORT $LN11@SetDevice
  000cf	8b 45 94	 mov	 eax, DWORD PTR _dwMax$[ebp]
  000d2	89 45 8c	 mov	 DWORD PTR tv135[ebp], eax
  000d5	eb 07		 jmp	 SHORT $LN12@SetDevice
$LN11@SetDevice:
  000d7	c7 45 8c 04 00
	00 00		 mov	 DWORD PTR tv135[ebp], 4
$LN12@SetDevice:
  000de	8b 45 8c	 mov	 eax, DWORD PTR tv135[ebp]
  000e1	89 45 94	 mov	 DWORD PTR _dwMax$[ebp], eax

; 102  : 
; 103  : 	for (int i = 0; i < 8; ++i)

  000e4	83 65 90 00	 and	 DWORD PTR _i$1[ebp], 0
  000e8	eb 07		 jmp	 SHORT $LN4@SetDevice
$LN2@SetDevice:
  000ea	8b 45 90	 mov	 eax, DWORD PTR _i$1[ebp]
  000ed	40		 inc	 eax
  000ee	89 45 90	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@SetDevice:
  000f1	83 7d 90 08	 cmp	 DWORD PTR _i$1[ebp], 8
  000f5	7d 24		 jge	 SHORT $LN3@SetDevice

; 104  : 		m_lpD3DDev->SetTextureStageState(i, D3DTSS_MAXANISOTROPY, dwMax);

  000f7	ff 75 94	 push	 DWORD PTR _dwMax$[ebp]
  000fa	6a 15		 push	 21			; 00000015H
  000fc	ff 75 90	 push	 DWORD PTR _i$1[ebp]
  000ff	8b 45 98	 mov	 eax, DWORD PTR _this$[ebp]
  00102	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  00108	8b 4d 98	 mov	 ecx, DWORD PTR _this$[ebp]
  0010b	8b 00		 mov	 eax, DWORD PTR [eax]
  0010d	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  00113	ff 90 fc 00 00
	00		 call	 DWORD PTR [eax+252]
  00119	eb cf		 jmp	 SHORT $LN2@SetDevice
$LN3@SetDevice:

; 105  : 
; 106  : 	SetDefaultState();

  0011b	8b 4d 98	 mov	 ecx, DWORD PTR _this$[ebp]
  0011e	e8 00 00 00 00	 call	 ?SetDefaultState@CStateManager@@QAEXXZ ; CStateManager::SetDefaultState

; 107  : }

  00123	8b 4d 70	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00126	33 cd		 xor	 ecx, ebp
  00128	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0012d	83 c5 74	 add	 ebp, 116		; 00000074H
  00130	c9		 leave
  00131	c2 04 00	 ret	 4
?SetDevice@CStateManager@@AAEXPAUIDirect3DDevice8@@@Z ENDP ; CStateManager::SetDevice
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Type$ = 8						; size = 4
?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z PROC ; CStateManager::GetRenderState, COMDAT
; _this$ = ecx

; 419  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 420  : 	return m_CurrentState.m_RenderStates[Type];

  00007	8b 45 08	 mov	 eax, DWORD PTR _Type$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8b 84 81 78 66
	00 00		 mov	 eax, DWORD PTR [ecx+eax*4+26232]

; 421  : }

  00014	c9		 leave
  00015	c2 04 00	 ret	 4
?GetRenderState@CStateManager@@QAEKW4_D3DRENDERSTATETYPE@@@Z ENDP ; CStateManager::GetRenderState
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?DrawIndexedPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIIPBXW4_D3DFORMAT@@1I@Z
_TEXT	SEGMENT
$T1 = -20						; size = 8
$T2 = -12						; size = 8
_this$ = -4						; size = 4
_PrimitiveType$ = 8					; size = 4
_MinVertexIndex$ = 12					; size = 4
_NumVertexIndices$ = 16					; size = 4
_PrimitiveCount$ = 20					; size = 4
_pIndexData$ = 24					; size = 4
_IndexDataFormat$ = 28					; size = 4
_pVertexStreamZeroData$ = 32				; size = 4
_VertexStreamZeroStride$ = 36				; size = 4
?DrawIndexedPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIIPBXW4_D3DFORMAT@@1I@Z PROC ; CStateManager::DrawIndexedPrimitiveUP, COMDAT
; _this$ = ecx

; 765  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h

; 87   : 			: m_lpIndexData(pIndexData),

  0000a	83 65 f4 00	 and	 DWORD PTR $T2[ebp], 0

; 88   : 		m_BaseVertexIndex(BaseVertexIndex)

  0000e	83 65 f8 00	 and	 DWORD PTR $T2[ebp+4], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp

; 766  : 	m_CurrentState.m_IndexData = NULL;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 4d f4	 mov	 ecx, DWORD PTR $T2[ebp]
  00018	8b 55 f8	 mov	 edx, DWORD PTR $T2[ebp+4]
  0001b	89 88 e4 cc 00
	00		 mov	 DWORD PTR [eax+52452], ecx
  00021	89 90 e8 cc 00
	00		 mov	 DWORD PTR [eax+52456], edx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h

; 70   : 		CStreamData(LPDIRECT3DVERTEXBUFFER8 pStreamData = NULL, UINT Stride = 0) : m_lpStreamData(pStreamData), m_Stride(Stride)

  00027	83 65 ec 00	 and	 DWORD PTR $T1[ebp], 0
  0002b	83 65 f0 00	 and	 DWORD PTR $T1[ebp+4], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp

; 767  : 	m_CurrentState.m_StreamData[0] = NULL;

  0002f	6a 08		 push	 8
  00031	58		 pop	 eax
  00032	6b c0 00	 imul	 eax, eax, 0
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00038	8b 55 ec	 mov	 edx, DWORD PTR $T1[ebp]
  0003b	8b 75 f0	 mov	 esi, DWORD PTR $T1[ebp+4]
  0003e	89 94 01 64 cc
	00 00		 mov	 DWORD PTR [ecx+eax+52324], edx
  00045	89 b4 01 68 cc
	00 00		 mov	 DWORD PTR [ecx+eax+52328], esi

; 768  : 	return (m_lpD3DDev->DrawIndexedPrimitiveUP(PrimitiveType, MinVertexIndex, NumVertexIndices, PrimitiveCount, pIndexData, IndexDataFormat, pVertexStreamZeroData, VertexStreamZeroStride));

  0004c	ff 75 24	 push	 DWORD PTR _VertexStreamZeroStride$[ebp]
  0004f	ff 75 20	 push	 DWORD PTR _pVertexStreamZeroData$[ebp]
  00052	ff 75 1c	 push	 DWORD PTR _IndexDataFormat$[ebp]
  00055	ff 75 18	 push	 DWORD PTR _pIndexData$[ebp]
  00058	ff 75 14	 push	 DWORD PTR _PrimitiveCount$[ebp]
  0005b	ff 75 10	 push	 DWORD PTR _NumVertexIndices$[ebp]
  0005e	ff 75 0c	 push	 DWORD PTR _MinVertexIndex$[ebp]
  00061	ff 75 08	 push	 DWORD PTR _PrimitiveType$[ebp]
  00064	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00067	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	8b 00		 mov	 eax, DWORD PTR [eax]
  00072	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  00078	ff 90 24 01 00
	00		 call	 DWORD PTR [eax+292]

; 769  : }

  0007e	5e		 pop	 esi
  0007f	c9		 leave
  00080	c2 20 00	 ret	 32			; 00000020H
?DrawIndexedPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIIPBXW4_D3DFORMAT@@1I@Z ENDP ; CStateManager::DrawIndexedPrimitiveUP
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_PrimitiveType$ = 8					; size = 4
_minIndex$ = 12						; size = 4
_NumVertices$ = 16					; size = 4
_startIndex$ = 20					; size = 4
_primCount$ = 24					; size = 4
?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z PROC ; CStateManager::DrawIndexedPrimitive, COMDAT
; _this$ = ecx

; 760  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 761  : 	return (m_lpD3DDev->DrawIndexedPrimitive(PrimitiveType, minIndex, NumVertices, startIndex, primCount));

  00007	ff 75 18	 push	 DWORD PTR _primCount$[ebp]
  0000a	ff 75 14	 push	 DWORD PTR _startIndex$[ebp]
  0000d	ff 75 10	 push	 DWORD PTR _NumVertices$[ebp]
  00010	ff 75 0c	 push	 DWORD PTR _minIndex$[ebp]
  00013	ff 75 08	 push	 DWORD PTR _PrimitiveType$[ebp]
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	8b 00		 mov	 eax, DWORD PTR [eax]
  00024	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  0002a	ff 90 1c 01 00
	00		 call	 DWORD PTR [eax+284]

; 762  : }

  00030	c9		 leave
  00031	c2 14 00	 ret	 20			; 00000014H
?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z ENDP ; CStateManager::DrawIndexedPrimitive
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
_PrimitiveType$ = 8					; size = 4
_PrimitiveCount$ = 12					; size = 4
_pVertexStreamZeroData$ = 16				; size = 4
_VertexStreamZeroStride$ = 20				; size = 4
?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z PROC ; CStateManager::DrawPrimitiveUP, COMDAT
; _this$ = ecx

; 754  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h

; 70   : 		CStreamData(LPDIRECT3DVERTEXBUFFER8 pStreamData = NULL, UINT Stride = 0) : m_lpStreamData(pStreamData), m_Stride(Stride)

  0000a	83 65 f4 00	 and	 DWORD PTR $T1[ebp], 0
  0000e	83 65 f8 00	 and	 DWORD PTR $T1[ebp+4], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp

; 755  : 	m_CurrentState.m_StreamData[0] = NULL;

  00012	6a 08		 push	 8
  00014	58		 pop	 eax
  00015	6b c0 00	 imul	 eax, eax, 0
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 f4	 mov	 edx, DWORD PTR $T1[ebp]
  0001e	8b 75 f8	 mov	 esi, DWORD PTR $T1[ebp+4]
  00021	89 94 01 64 cc
	00 00		 mov	 DWORD PTR [ecx+eax+52324], edx
  00028	89 b4 01 68 cc
	00 00		 mov	 DWORD PTR [ecx+eax+52328], esi

; 756  : 	return (m_lpD3DDev->DrawPrimitiveUP(PrimitiveType, PrimitiveCount, pVertexStreamZeroData, VertexStreamZeroStride));

  0002f	ff 75 14	 push	 DWORD PTR _VertexStreamZeroStride$[ebp]
  00032	ff 75 10	 push	 DWORD PTR _pVertexStreamZeroData$[ebp]
  00035	ff 75 0c	 push	 DWORD PTR _PrimitiveCount$[ebp]
  00038	ff 75 08	 push	 DWORD PTR _PrimitiveType$[ebp]
  0003b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  00044	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	8b 00		 mov	 eax, DWORD PTR [eax]
  00049	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  0004f	ff 90 20 01 00
	00		 call	 DWORD PTR [eax+288]

; 757  : }

  00055	5e		 pop	 esi
  00056	c9		 leave
  00057	c2 10 00	 ret	 16			; 00000010H
?DrawPrimitiveUP@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IPBXI@Z ENDP ; CStateManager::DrawPrimitiveUP
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?DrawPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@II@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_PrimitiveType$ = 8					; size = 4
_StartVertex$ = 12					; size = 4
_PrimitiveCount$ = 16					; size = 4
?DrawPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@II@Z PROC ; CStateManager::DrawPrimitive, COMDAT
; _this$ = ecx

; 749  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 750  : 	return (m_lpD3DDev->DrawPrimitive(PrimitiveType, StartVertex, PrimitiveCount));

  00007	ff 75 10	 push	 DWORD PTR _PrimitiveCount$[ebp]
  0000a	ff 75 0c	 push	 DWORD PTR _StartVertex$[ebp]
  0000d	ff 75 08	 push	 DWORD PTR _PrimitiveType$[ebp]
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	8b 00		 mov	 eax, DWORD PTR [eax]
  0001e	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  00024	ff 90 18 01 00
	00		 call	 DWORD PTR [eax+280]

; 751  : }

  0002a	c9		 leave
  0002b	c2 0c 00	 ret	 12			; 0000000cH
?DrawPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@II@Z ENDP ; CStateManager::DrawPrimitive
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SetIndices@CStateManager@@QAEXPAUIDirect3DIndexBuffer8@@I@Z
_TEXT	SEGMENT
_kIndexData$ = -20					; size = 8
tv90 = -12						; size = 4
_this$ = -8						; size = 4
_this$ = -4						; size = 4
_pIndexData$ = 8					; size = 4
_BaseVertexIndex$ = 12					; size = 4
?SetIndices@CStateManager@@QAEXPAUIDirect3DIndexBuffer8@@I@Z PROC ; CStateManager::SetIndices, COMDAT
; _this$ = ecx

; 738  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h

; 87   : 			: m_lpIndexData(pIndexData),

  00009	8b 45 08	 mov	 eax, DWORD PTR _pIndexData$[ebp]
  0000c	89 45 ec	 mov	 DWORD PTR _kIndexData$[ebp], eax

; 88   : 		m_BaseVertexIndex(BaseVertexIndex)

  0000f	8b 45 0c	 mov	 eax, DWORD PTR _BaseVertexIndex$[ebp]
  00012	89 45 f0	 mov	 DWORD PTR _kIndexData$[ebp+4], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp

; 741  : 	if (m_CurrentState.m_IndexData == kIndexData)

  00015	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00018	05 e4 cc 00 00	 add	 eax, 52452		; 0000cce4H
  0001d	89 45 f8	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h

; 94   : 			return ((m_lpIndexData == rhs.m_lpIndexData) && (m_BaseVertexIndex == rhs.m_BaseVertexIndex));

  00020	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
  00025	3b 45 ec	 cmp	 eax, DWORD PTR _kIndexData$[ebp]
  00028	75 14		 jne	 SHORT $LN8@SetIndices
  0002a	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00030	3b 45 f0	 cmp	 eax, DWORD PTR _kIndexData$[ebp+4]
  00033	75 09		 jne	 SHORT $LN8@SetIndices
  00035	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv90[ebp], 1
  0003c	eb 04		 jmp	 SHORT $LN6@SetIndices
$LN8@SetIndices:
  0003e	83 65 f4 00	 and	 DWORD PTR tv90[ebp], 0
$LN6@SetIndices:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp

; 741  : 	if (m_CurrentState.m_IndexData == kIndexData)

  00042	0f b6 45 f4	 movzx	 eax, BYTE PTR tv90[ebp]
  00046	85 c0		 test	 eax, eax
  00048	74 02		 je	 SHORT $LN2@SetIndices

; 742  : 		return;

  0004a	eb 35		 jmp	 SHORT $LN1@SetIndices
$LN2@SetIndices:

; 743  : 	
; 744  : 	m_lpD3DDev->SetIndices(pIndexData, BaseVertexIndex);

  0004c	ff 75 0c	 push	 DWORD PTR _BaseVertexIndex$[ebp]
  0004f	ff 75 08	 push	 DWORD PTR _pIndexData$[ebp]
  00052	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00055	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	8b 00		 mov	 eax, DWORD PTR [eax]
  00060	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  00066	ff 90 54 01 00
	00		 call	 DWORD PTR [eax+340]

; 745  : 	m_CurrentState.m_IndexData = kIndexData;

  0006c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	8b 4d ec	 mov	 ecx, DWORD PTR _kIndexData$[ebp]
  00072	8b 55 f0	 mov	 edx, DWORD PTR _kIndexData$[ebp+4]
  00075	89 88 e4 cc 00
	00		 mov	 DWORD PTR [eax+52452], ecx
  0007b	89 90 e8 cc 00
	00		 mov	 DWORD PTR [eax+52456], edx
$LN1@SetIndices:

; 746  : }

  00081	c9		 leave
  00082	c2 08 00	 ret	 8
?SetIndices@CStateManager@@QAEXPAUIDirect3DIndexBuffer8@@I@Z ENDP ; CStateManager::SetIndices
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?RestoreIndices@CStateManager@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RestoreIndices@CStateManager@@QAEXXZ PROC		; CStateManager::RestoreIndices, COMDAT
; _this$ = ecx

; 733  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 734  : 	SetIndices(m_CopyState.m_IndexData.m_lpIndexData, m_CopyState.m_IndexData.m_BaseVertexIndex);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	ff b0 5c 33 01
	00		 push	 DWORD PTR [eax+78684]
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	ff b0 58 33 01
	00		 push	 DWORD PTR [eax+78680]
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ?SetIndices@CStateManager@@QAEXPAUIDirect3DIndexBuffer8@@I@Z ; CStateManager::SetIndices

; 735  : }

  00021	c9		 leave
  00022	c3		 ret	 0
?RestoreIndices@CStateManager@@QAEXXZ ENDP		; CStateManager::RestoreIndices
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SaveIndices@CStateManager@@QAEXPAUIDirect3DIndexBuffer8@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pIndexData$ = 8					; size = 4
_BaseVertexIndex$ = 12					; size = 4
?SaveIndices@CStateManager@@QAEXPAUIDirect3DIndexBuffer8@@I@Z PROC ; CStateManager::SaveIndices, COMDAT
; _this$ = ecx

; 727  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 728  : 	m_CopyState.m_IndexData = m_CurrentState.m_IndexData;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 88 e4 cc 00
	00		 mov	 ecx, DWORD PTR [eax+52452]
  00010	8b 80 e8 cc 00
	00		 mov	 eax, DWORD PTR [eax+52456]
  00016	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00019	89 8a 58 33 01
	00		 mov	 DWORD PTR [edx+78680], ecx
  0001f	89 82 5c 33 01
	00		 mov	 DWORD PTR [edx+78684], eax

; 729  : 	SetIndices(pIndexData, BaseVertexIndex);

  00025	ff 75 0c	 push	 DWORD PTR _BaseVertexIndex$[ebp]
  00028	ff 75 08	 push	 DWORD PTR _pIndexData$[ebp]
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?SetIndices@CStateManager@@QAEXPAUIDirect3DIndexBuffer8@@I@Z ; CStateManager::SetIndices

; 730  : }

  00033	c9		 leave
  00034	c2 08 00	 ret	 8
?SaveIndices@CStateManager@@QAEXPAUIDirect3DIndexBuffer8@@I@Z ENDP ; CStateManager::SaveIndices
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z
_TEXT	SEGMENT
_kStreamData$ = -20					; size = 8
tv95 = -12						; size = 4
_this$ = -8						; size = 4
_this$ = -4						; size = 4
_StreamNumber$ = 8					; size = 4
_pStreamData$ = 12					; size = 4
_Stride$ = 16						; size = 4
?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z PROC ; CStateManager::SetStreamSource, COMDAT
; _this$ = ecx

; 717  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	56		 push	 esi
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h

; 70   : 		CStreamData(LPDIRECT3DVERTEXBUFFER8 pStreamData = NULL, UINT Stride = 0) : m_lpStreamData(pStreamData), m_Stride(Stride)

  0000a	8b 45 0c	 mov	 eax, DWORD PTR _pStreamData$[ebp]
  0000d	89 45 ec	 mov	 DWORD PTR _kStreamData$[ebp], eax
  00010	8b 45 10	 mov	 eax, DWORD PTR _Stride$[ebp]
  00013	89 45 f0	 mov	 DWORD PTR _kStreamData$[ebp+4], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp

; 719  : 	if (m_CurrentState.m_StreamData[StreamNumber] == kStreamData)

  00016	8b 45 08	 mov	 eax, DWORD PTR _StreamNumber$[ebp]
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	8d 84 c1 64 cc
	00 00		 lea	 eax, DWORD PTR [ecx+eax*8+52324]
  00023	89 45 f8	 mov	 DWORD PTR _this$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h

; 76   : 			return ((m_lpStreamData == rhs.m_lpStreamData) && (m_Stride == rhs.m_Stride));

  00026	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 00		 mov	 eax, DWORD PTR [eax]
  0002b	3b 45 ec	 cmp	 eax, DWORD PTR _kStreamData$[ebp]
  0002e	75 14		 jne	 SHORT $LN8@SetStreamS
  00030	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	3b 45 f0	 cmp	 eax, DWORD PTR _kStreamData$[ebp+4]
  00039	75 09		 jne	 SHORT $LN8@SetStreamS
  0003b	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv95[ebp], 1
  00042	eb 04		 jmp	 SHORT $LN6@SetStreamS
$LN8@SetStreamS:
  00044	83 65 f4 00	 and	 DWORD PTR tv95[ebp], 0
$LN6@SetStreamS:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp

; 719  : 	if (m_CurrentState.m_StreamData[StreamNumber] == kStreamData)

  00048	0f b6 45 f4	 movzx	 eax, BYTE PTR tv95[ebp]
  0004c	85 c0		 test	 eax, eax
  0004e	74 02		 je	 SHORT $LN2@SetStreamS

; 720  : 		return;	

  00050	eb 3d		 jmp	 SHORT $LN1@SetStreamS
$LN2@SetStreamS:

; 721  : 
; 722  : 	m_lpD3DDev->SetStreamSource(StreamNumber, pStreamData, Stride);

  00052	ff 75 10	 push	 DWORD PTR _Stride$[ebp]
  00055	ff 75 0c	 push	 DWORD PTR _pStreamData$[ebp]
  00058	ff 75 08	 push	 DWORD PTR _StreamNumber$[ebp]
  0005b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0005e	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	8b 00		 mov	 eax, DWORD PTR [eax]
  00069	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  0006f	ff 90 4c 01 00
	00		 call	 DWORD PTR [eax+332]

; 723  : 	m_CurrentState.m_StreamData[StreamNumber] = kStreamData;

  00075	8b 45 08	 mov	 eax, DWORD PTR _StreamNumber$[ebp]
  00078	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007b	8b 55 ec	 mov	 edx, DWORD PTR _kStreamData$[ebp]
  0007e	8b 75 f0	 mov	 esi, DWORD PTR _kStreamData$[ebp+4]
  00081	89 94 c1 64 cc
	00 00		 mov	 DWORD PTR [ecx+eax*8+52324], edx
  00088	89 b4 c1 68 cc
	00 00		 mov	 DWORD PTR [ecx+eax*8+52328], esi
$LN1@SetStreamS:

; 724  : }

  0008f	5e		 pop	 esi
  00090	c9		 leave
  00091	c2 0c 00	 ret	 12			; 0000000cH
?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z ENDP ; CStateManager::SetStreamSource
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?RestoreStreamSource@CStateManager@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_StreamNumber$ = 8					; size = 4
?RestoreStreamSource@CStateManager@@QAEXI@Z PROC	; CStateManager::RestoreStreamSource, COMDAT
; _this$ = ecx

; 710  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 711  : 	SetStreamSource(StreamNumber, 

  00007	8b 45 08	 mov	 eax, DWORD PTR _StreamNumber$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	ff b4 c1 dc 32
	01 00		 push	 DWORD PTR [ecx+eax*8+78556]
  00014	8b 45 08	 mov	 eax, DWORD PTR _StreamNumber$[ebp]
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	ff b4 c1 d8 32
	01 00		 push	 DWORD PTR [ecx+eax*8+78552]
  00021	ff 75 08	 push	 DWORD PTR _StreamNumber$[ebp]
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	e8 00 00 00 00	 call	 ?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z ; CStateManager::SetStreamSource

; 712  : 					m_CopyState.m_StreamData[StreamNumber].m_lpStreamData, 
; 713  : 					m_CopyState.m_StreamData[StreamNumber].m_Stride);
; 714  : }

  0002c	c9		 leave
  0002d	c2 04 00	 ret	 4
?RestoreStreamSource@CStateManager@@QAEXI@Z ENDP	; CStateManager::RestoreStreamSource
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SaveStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_StreamNumber$ = 8					; size = 4
_pStreamData$ = 12					; size = 4
_Stride$ = 16						; size = 4
?SaveStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z PROC ; CStateManager::SaveStreamSource, COMDAT
; _this$ = ecx

; 703  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 704  : 	// Check that we have set this up before, if not, the default is this.
; 705  : 	m_CopyState.m_StreamData[StreamNumber] = m_CurrentState.m_StreamData[StreamNumber];

  00008	8b 45 08	 mov	 eax, DWORD PTR _StreamNumber$[ebp]
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 94 c1 64 cc
	00 00		 mov	 edx, DWORD PTR [ecx+eax*8+52324]
  00015	8b 84 c1 68 cc
	00 00		 mov	 eax, DWORD PTR [ecx+eax*8+52328]
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR _StreamNumber$[ebp]
  0001f	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  00022	89 94 ce d8 32
	01 00		 mov	 DWORD PTR [esi+ecx*8+78552], edx
  00029	89 84 ce dc 32
	01 00		 mov	 DWORD PTR [esi+ecx*8+78556], eax

; 706  : 	SetStreamSource(StreamNumber, pStreamData, Stride);

  00030	ff 75 10	 push	 DWORD PTR _Stride$[ebp]
  00033	ff 75 0c	 push	 DWORD PTR _pStreamData$[ebp]
  00036	ff 75 08	 push	 DWORD PTR _StreamNumber$[ebp]
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	e8 00 00 00 00	 call	 ?SetStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z ; CStateManager::SetStreamSource

; 707  : }

  00041	5e		 pop	 esi
  00042	c9		 leave
  00043	c2 0c 00	 ret	 12			; 0000000cH
?SaveStreamSource@CStateManager@@QAEXIPAUIDirect3DVertexBuffer8@@I@Z ENDP ; CStateManager::SaveStreamSource
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SetPixelShaderConstant@CStateManager@@QAEXKPBXK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$1 = -4						; size = 4
_dwRegister$ = 8					; size = 4
_pConstantData$ = 12					; size = 4
_dwConstantCount$ = 16					; size = 4
?SetPixelShaderConstant@CStateManager@@QAEXKPBXK@Z PROC	; CStateManager::SetPixelShaderConstant, COMDAT
; _this$ = ecx

; 691  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 692  : 	m_lpD3DDev->SetPixelShaderConstant(dwRegister, pConstantData, dwConstantCount);

  0000a	ff 75 10	 push	 DWORD PTR _dwConstantCount$[ebp]
  0000d	ff 75 0c	 push	 DWORD PTR _pConstantData$[ebp]
  00010	ff 75 08	 push	 DWORD PTR _dwRegister$[ebp]
  00013	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  0001c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	8b 00		 mov	 eax, DWORD PTR [eax]
  00021	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  00027	ff 90 6c 01 00
	00		 call	 DWORD PTR [eax+364]

; 693  : 
; 694  : 	// Set the renderstate and remember it.
; 695  : 	for (DWORD i = 0; i < dwConstantCount; i++)

  0002d	83 65 fc 00	 and	 DWORD PTR _i$1[ebp], 0
  00031	eb 07		 jmp	 SHORT $LN4@SetPixelSh
$LN2@SetPixelSh:
  00033	8b 45 fc	 mov	 eax, DWORD PTR _i$1[ebp]
  00036	40		 inc	 eax
  00037	89 45 fc	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@SetPixelSh:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _i$1[ebp]
  0003d	3b 45 10	 cmp	 eax, DWORD PTR _dwConstantCount$[ebp]
  00040	73 22		 jae	 SHORT $LN1@SetPixelSh

; 696  : 	{
; 697  : 		StateManager_Assert((dwRegister + i) < STATEMANAGER_MAX_VCONSTANTS);
; 698  : 		m_CurrentState.m_PixelShaderConstants[dwRegister + i] = *(((D3DXVECTOR4*)pConstantData) + i);

  00042	8b 75 fc	 mov	 esi, DWORD PTR _i$1[ebp]
  00045	c1 e6 04	 shl	 esi, 4
  00048	03 75 0c	 add	 esi, DWORD PTR _pConstantData$[ebp]
  0004b	8b 45 08	 mov	 eax, DWORD PTR _dwRegister$[ebp]
  0004e	03 45 fc	 add	 eax, DWORD PTR _i$1[ebp]
  00051	c1 e0 04	 shl	 eax, 4
  00054	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	8d bc 01 78 80
	00 00		 lea	 edi, DWORD PTR [ecx+eax+32888]
  0005e	a5		 movsd
  0005f	a5		 movsd
  00060	a5		 movsd
  00061	a5		 movsd

; 699  : 	}

  00062	eb cf		 jmp	 SHORT $LN2@SetPixelSh
$LN1@SetPixelSh:

; 700  : }

  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c9		 leave
  00067	c2 0c 00	 ret	 12			; 0000000cH
?SetPixelShaderConstant@CStateManager@@QAEXKPBXK@Z ENDP	; CStateManager::SetPixelShaderConstant
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?RestorePixelShaderConstant@CStateManager@@QAEXKK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwRegister$ = 8					; size = 4
_dwConstantCount$ = 12					; size = 4
?RestorePixelShaderConstant@CStateManager@@QAEXKK@Z PROC ; CStateManager::RestorePixelShaderConstant, COMDAT
; _this$ = ecx

; 686  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 687  : 	SetPixelShaderConstant(dwRegister, &m_CopyState.m_PixelShaderConstants[dwRegister], dwConstantCount);

  00007	ff 75 0c	 push	 DWORD PTR _dwConstantCount$[ebp]
  0000a	8b 45 08	 mov	 eax, DWORD PTR _dwRegister$[ebp]
  0000d	c1 e0 04	 shl	 eax, 4
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	8d 84 01 ec e6
	00 00		 lea	 eax, DWORD PTR [ecx+eax+59116]
  0001a	50		 push	 eax
  0001b	ff 75 08	 push	 DWORD PTR _dwRegister$[ebp]
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?SetPixelShaderConstant@CStateManager@@QAEXKPBXK@Z ; CStateManager::SetPixelShaderConstant

; 688  : }

  00026	c9		 leave
  00027	c2 08 00	 ret	 8
?RestorePixelShaderConstant@CStateManager@@QAEXKK@Z ENDP ; CStateManager::RestorePixelShaderConstant
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SavePixelShaderConstant@CStateManager@@QAEXKPBXK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = -4						; size = 4
_dwRegister$ = 8					; size = 4
_pConstantData$ = 12					; size = 4
_dwConstantCount$ = 16					; size = 4
?SavePixelShaderConstant@CStateManager@@QAEXKPBXK@Z PROC ; CStateManager::SavePixelShaderConstant, COMDAT
; _this$ = ecx

; 673  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 674  : 	DWORD i;
; 675  : 
; 676  : 	for (i = 0; i < dwConstantCount; i++)

  0000a	83 65 fc 00	 and	 DWORD PTR _i$[ebp], 0
  0000e	eb 07		 jmp	 SHORT $LN4@SavePixelS
$LN2@SavePixelS:
  00010	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00013	40		 inc	 eax
  00014	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN4@SavePixelS:
  00017	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0001a	3b 45 10	 cmp	 eax, DWORD PTR _dwConstantCount$[ebp]
  0001d	73 22		 jae	 SHORT $LN3@SavePixelS

; 677  : 	{
; 678  : 		StateManager_Assert((dwRegister + i) < STATEMANAGER_MAX_VCONSTANTS);
; 679  : 		m_CopyState.m_PixelShaderConstants[dwRegister + i] = *(((D3DXVECTOR4*)pConstantData) + i);

  0001f	8b 75 fc	 mov	 esi, DWORD PTR _i$[ebp]
  00022	c1 e6 04	 shl	 esi, 4
  00025	03 75 0c	 add	 esi, DWORD PTR _pConstantData$[ebp]
  00028	8b 45 08	 mov	 eax, DWORD PTR _dwRegister$[ebp]
  0002b	03 45 fc	 add	 eax, DWORD PTR _i$[ebp]
  0002e	c1 e0 04	 shl	 eax, 4
  00031	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	8d bc 01 ec e6
	00 00		 lea	 edi, DWORD PTR [ecx+eax+59116]
  0003b	a5		 movsd
  0003c	a5		 movsd
  0003d	a5		 movsd
  0003e	a5		 movsd

; 680  : 	}

  0003f	eb cf		 jmp	 SHORT $LN2@SavePixelS
$LN3@SavePixelS:

; 681  : 
; 682  : 	SetPixelShaderConstant(dwRegister, pConstantData, dwConstantCount);

  00041	ff 75 10	 push	 DWORD PTR _dwConstantCount$[ebp]
  00044	ff 75 0c	 push	 DWORD PTR _pConstantData$[ebp]
  00047	ff 75 08	 push	 DWORD PTR _dwRegister$[ebp]
  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ?SetPixelShaderConstant@CStateManager@@QAEXKPBXK@Z ; CStateManager::SetPixelShaderConstant

; 683  : }

  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	c9		 leave
  00055	c2 0c 00	 ret	 12			; 0000000cH
?SavePixelShaderConstant@CStateManager@@QAEXKPBXK@Z ENDP ; CStateManager::SavePixelShaderConstant
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SetVertexShaderConstant@CStateManager@@QAEXKPBXK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$1 = -4						; size = 4
_dwRegister$ = 8					; size = 4
_pConstantData$ = 12					; size = 4
_dwConstantCount$ = 16					; size = 4
?SetVertexShaderConstant@CStateManager@@QAEXKPBXK@Z PROC ; CStateManager::SetVertexShaderConstant, COMDAT
; _this$ = ecx

; 660  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 661  : 	m_lpD3DDev->SetVertexShaderConstant(dwRegister, pConstantData, dwConstantCount);

  0000a	ff 75 10	 push	 DWORD PTR _dwConstantCount$[ebp]
  0000d	ff 75 0c	 push	 DWORD PTR _pConstantData$[ebp]
  00010	ff 75 08	 push	 DWORD PTR _dwRegister$[ebp]
  00013	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00016	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  0001c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	8b 00		 mov	 eax, DWORD PTR [eax]
  00021	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  00027	ff 90 3c 01 00
	00		 call	 DWORD PTR [eax+316]

; 662  : 
; 663  : 	// Set the renderstate and remember it.
; 664  : 	for (DWORD i = 0; i < dwConstantCount; i++)

  0002d	83 65 fc 00	 and	 DWORD PTR _i$1[ebp], 0
  00031	eb 07		 jmp	 SHORT $LN4@SetVertexS
$LN2@SetVertexS:
  00033	8b 45 fc	 mov	 eax, DWORD PTR _i$1[ebp]
  00036	40		 inc	 eax
  00037	89 45 fc	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@SetVertexS:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _i$1[ebp]
  0003d	3b 45 10	 cmp	 eax, DWORD PTR _dwConstantCount$[ebp]
  00040	73 22		 jae	 SHORT $LN1@SetVertexS

; 665  : 	{
; 666  : 		StateManager_Assert((dwRegister + i) < STATEMANAGER_MAX_VCONSTANTS);
; 667  : 		m_CurrentState.m_VertexShaderConstants[dwRegister + i] = *(((D3DXVECTOR4*)pConstantData) + i);

  00042	8b 75 fc	 mov	 esi, DWORD PTR _i$1[ebp]
  00045	c1 e6 04	 shl	 esi, 4
  00048	03 75 0c	 add	 esi, DWORD PTR _pConstantData$[ebp]
  0004b	8b 45 08	 mov	 eax, DWORD PTR _dwRegister$[ebp]
  0004e	03 45 fc	 add	 eax, DWORD PTR _i$1[ebp]
  00051	c1 e0 04	 shl	 eax, 4
  00054	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	8d bc 01 78 7a
	00 00		 lea	 edi, DWORD PTR [ecx+eax+31352]
  0005e	a5		 movsd
  0005f	a5		 movsd
  00060	a5		 movsd
  00061	a5		 movsd

; 668  : 	}

  00062	eb cf		 jmp	 SHORT $LN2@SetVertexS
$LN1@SetVertexS:

; 669  : }

  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c9		 leave
  00067	c2 0c 00	 ret	 12			; 0000000cH
?SetVertexShaderConstant@CStateManager@@QAEXKPBXK@Z ENDP ; CStateManager::SetVertexShaderConstant
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?RestoreVertexShaderConstant@CStateManager@@QAEXKK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwRegister$ = 8					; size = 4
_dwConstantCount$ = 12					; size = 4
?RestoreVertexShaderConstant@CStateManager@@QAEXKK@Z PROC ; CStateManager::RestoreVertexShaderConstant, COMDAT
; _this$ = ecx

; 655  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 656  : 	SetVertexShaderConstant(dwRegister, &m_CopyState.m_VertexShaderConstants[dwRegister], dwConstantCount);

  00007	ff 75 0c	 push	 DWORD PTR _dwConstantCount$[ebp]
  0000a	8b 45 08	 mov	 eax, DWORD PTR _dwRegister$[ebp]
  0000d	c1 e0 04	 shl	 eax, 4
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	8d 84 01 ec e0
	00 00		 lea	 eax, DWORD PTR [ecx+eax+57580]
  0001a	50		 push	 eax
  0001b	ff 75 08	 push	 DWORD PTR _dwRegister$[ebp]
  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?SetVertexShaderConstant@CStateManager@@QAEXKPBXK@Z ; CStateManager::SetVertexShaderConstant

; 657  : }

  00026	c9		 leave
  00027	c2 08 00	 ret	 8
?RestoreVertexShaderConstant@CStateManager@@QAEXKK@Z ENDP ; CStateManager::RestoreVertexShaderConstant
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SaveVertexShaderConstant@CStateManager@@QAEXKPBXK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = -4						; size = 4
_dwRegister$ = 8					; size = 4
_pConstantData$ = 12					; size = 4
_dwConstantCount$ = 16					; size = 4
?SaveVertexShaderConstant@CStateManager@@QAEXKPBXK@Z PROC ; CStateManager::SaveVertexShaderConstant, COMDAT
; _this$ = ecx

; 642  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 643  : 	DWORD i;
; 644  : 
; 645  : 	for (i = 0; i < dwConstantCount; i++)

  0000a	83 65 fc 00	 and	 DWORD PTR _i$[ebp], 0
  0000e	eb 07		 jmp	 SHORT $LN4@SaveVertex
$LN2@SaveVertex:
  00010	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00013	40		 inc	 eax
  00014	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN4@SaveVertex:
  00017	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0001a	3b 45 10	 cmp	 eax, DWORD PTR _dwConstantCount$[ebp]
  0001d	73 2c		 jae	 SHORT $LN3@SaveVertex

; 646  : 	{
; 647  : 		StateManager_Assert((dwRegister + i) < STATEMANAGER_MAX_VCONSTANTS);
; 648  : 		m_CopyState.m_VertexShaderConstants[dwRegister + i] = m_CurrentState.m_VertexShaderConstants[dwRegister + i];

  0001f	8b 45 08	 mov	 eax, DWORD PTR _dwRegister$[ebp]
  00022	03 45 fc	 add	 eax, DWORD PTR _i$[ebp]
  00025	c1 e0 04	 shl	 eax, 4
  00028	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	8d b4 01 78 7a
	00 00		 lea	 esi, DWORD PTR [ecx+eax+31352]
  00032	8b 45 08	 mov	 eax, DWORD PTR _dwRegister$[ebp]
  00035	03 45 fc	 add	 eax, DWORD PTR _i$[ebp]
  00038	c1 e0 04	 shl	 eax, 4
  0003b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	8d bc 01 ec e0
	00 00		 lea	 edi, DWORD PTR [ecx+eax+57580]
  00045	a5		 movsd
  00046	a5		 movsd
  00047	a5		 movsd
  00048	a5		 movsd

; 649  : 	}

  00049	eb c5		 jmp	 SHORT $LN2@SaveVertex
$LN3@SaveVertex:

; 650  : 
; 651  : 	SetVertexShaderConstant(dwRegister, pConstantData, dwConstantCount);

  0004b	ff 75 10	 push	 DWORD PTR _dwConstantCount$[ebp]
  0004e	ff 75 0c	 push	 DWORD PTR _pConstantData$[ebp]
  00051	ff 75 08	 push	 DWORD PTR _dwRegister$[ebp]
  00054	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00057	e8 00 00 00 00	 call	 ?SetVertexShaderConstant@CStateManager@@QAEXKPBXK@Z ; CStateManager::SetVertexShaderConstant

; 652  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	c9		 leave
  0005f	c2 0c 00	 ret	 12			; 0000000cH
?SaveVertexShaderConstant@CStateManager@@QAEXKPBXK@Z ENDP ; CStateManager::SaveVertexShaderConstant
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?GetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Type$ = 8						; size = 4
_pMatrix$ = 12						; size = 4
?GetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z PROC ; CStateManager::GetTransform, COMDAT
; _this$ = ecx

; 636  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 637  : 	*pMatrix = m_CurrentState.m_Matrices[Type];

  00009	8b 45 08	 mov	 eax, DWORD PTR _Type$[ebp]
  0000c	c1 e0 06	 shl	 eax, 6
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8d b4 01 20 81
	00 00		 lea	 esi, DWORD PTR [ecx+eax+33056]
  00019	6a 10		 push	 16			; 00000010H
  0001b	59		 pop	 ecx
  0001c	8b 7d 0c	 mov	 edi, DWORD PTR _pMatrix$[ebp]
  0001f	f3 a5		 rep movsd

; 638  : }

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	c9		 leave
  00024	c2 08 00	 ret	 8
?GetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z ENDP ; CStateManager::GetTransform
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z
_TEXT	SEGMENT
_this$ = -72						; size = 4
$T1 = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_Type$ = 8						; size = 4
_pMatrix$ = 12						; size = 4
?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z PROC ; CStateManager::SetTransform, COMDAT
; _this$ = ecx

; 622  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	89 4d b8	 mov	 DWORD PTR _this$[ebp], ecx

; 623  : 	if (m_bScene)

  00015	8b 45 b8	 mov	 eax, DWORD PTR _this$[ebp]
  00018	0f b6 80 6d 33
	01 00		 movzx	 eax, BYTE PTR [eax+78701]
  0001f	85 c0		 test	 eax, eax
  00021	74 20		 je	 SHORT $LN3@SetTransfo

; 624  : 	{
; 625  : 		m_lpD3DDev->SetTransform(Type, pMatrix);

  00023	ff 75 0c	 push	 DWORD PTR _pMatrix$[ebp]
  00026	ff 75 08	 push	 DWORD PTR _Type$[ebp]
  00029	8b 45 b8	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  00032	8b 4d b8	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	8b 00		 mov	 eax, DWORD PTR [eax]
  00037	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  0003d	ff 90 94 00 00
	00		 call	 DWORD PTR [eax+148]
$LN3@SetTransfo:
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 463  :     memcpy(&_11, &mat, sizeof(D3DXMATRIX));

  00043	6a 40		 push	 64			; 00000040H
  00045	ff 75 0c	 push	 DWORD PTR _pMatrix$[ebp]
  00048	8d 45 bc	 lea	 eax, DWORD PTR $T1[ebp]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 _memcpy
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp

; 632  : 	m_CurrentState.m_Matrices[Type] = *pMatrix;

  00054	8b 45 08	 mov	 eax, DWORD PTR _Type$[ebp]
  00057	c1 e0 06	 shl	 eax, 6
  0005a	8b 4d b8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	8d bc 01 20 81
	00 00		 lea	 edi, DWORD PTR [ecx+eax+33056]
  00064	6a 10		 push	 16			; 00000010H
  00066	59		 pop	 ecx
  00067	8d 75 bc	 lea	 esi, DWORD PTR $T1[ebp]
  0006a	f3 a5		 rep movsd

; 633  : }

  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00071	33 cd		 xor	 ecx, ebp
  00073	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00078	c9		 leave
  00079	c2 08 00	 ret	 8
?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ENDP ; CStateManager::SetTransform
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Type$ = 8						; size = 4
?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z PROC ; CStateManager::RestoreTransform, COMDAT
; _this$ = ecx

; 607  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 608  : #ifdef _DEBUG
; 609  : 	if (!m_bTransformSavingFlag[Type])
; 610  : 	{
; 611  : 		Tracef(" CStateManager::RestoreTransform - This transform was not saved [%d]\n", Type);
; 612  : 		StateManager_Assert(!" This render state was not saved!");
; 613  : 	}
; 614  : 	m_bTransformSavingFlag[Type] = FALSE;
; 615  : #endif _DEBUG
; 616  : 
; 617  : 	SetTransform(Type, &m_CopyState.m_Matrices[Type]);

  00007	8b 45 08	 mov	 eax, DWORD PTR _Type$[ebp]
  0000a	c1 e0 06	 shl	 eax, 6
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8d 84 01 94 e7
	00 00		 lea	 eax, DWORD PTR [ecx+eax+59284]
  00017	50		 push	 eax
  00018	ff 75 08	 push	 DWORD PTR _Type$[ebp]
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform

; 618  : }

  00023	c9		 leave
  00024	c2 04 00	 ret	 4
?RestoreTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@@Z ENDP ; CStateManager::RestoreTransform
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Type$ = 8						; size = 4
_pMatrix$ = 12						; size = 4
?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z PROC ; CStateManager::SaveTransform, COMDAT
; _this$ = ecx

; 592  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 593  : #ifdef _DEBUG
; 594  : 	if (m_bTransformSavingFlag[Type])
; 595  : 	{
; 596  : 		Tracef(" CStateManager::SaveTransform - This transform is already saved [%d]\n", Type);
; 597  : 		StateManager_Assert(!" This trasform is already saved!");
; 598  : 	}
; 599  : 	m_bTransformSavingFlag[Type] = TRUE;
; 600  : #endif _DEBUG
; 601  : 
; 602  : 	m_CopyState.m_Matrices[Type] = m_CurrentState.m_Matrices[Type];

  00009	8b 45 08	 mov	 eax, DWORD PTR _Type$[ebp]
  0000c	c1 e0 06	 shl	 eax, 6
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	8d b4 01 20 81
	00 00		 lea	 esi, DWORD PTR [ecx+eax+33056]
  00019	8b 45 08	 mov	 eax, DWORD PTR _Type$[ebp]
  0001c	c1 e0 06	 shl	 eax, 6
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	8d bc 01 94 e7
	00 00		 lea	 edi, DWORD PTR [ecx+eax+59284]
  00029	6a 10		 push	 16			; 00000010H
  0002b	59		 pop	 ecx
  0002c	f3 a5		 rep movsd

; 603  : 	SetTransform(Type, (D3DXMATRIX *)pMatrix);

  0002e	ff 75 0c	 push	 DWORD PTR _pMatrix$[ebp]
  00031	ff 75 08	 push	 DWORD PTR _Type$[ebp]
  00034	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform

; 604  : }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	c9		 leave
  0003f	c2 08 00	 ret	 8
?SaveTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ENDP ; CStateManager::SaveTransform
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?GetPixelShader@CStateManager@@QAEXPAK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pdwShader$ = 8						; size = 4
?GetPixelShader@CStateManager@@QAEXPAK@Z PROC		; CStateManager::GetPixelShader, COMDAT
; _this$ = ecx

; 585  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 586  : 	*pdwShader = m_CurrentState.m_dwPixelShader;

  00007	8b 45 08	 mov	 eax, DWORD PTR _pdwShader$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8b 89 18 81 00
	00		 mov	 ecx, DWORD PTR [ecx+33048]
  00013	89 08		 mov	 DWORD PTR [eax], ecx

; 587  : }

  00015	c9		 leave
  00016	c2 04 00	 ret	 4
?GetPixelShader@CStateManager@@QAEXPAK@Z ENDP		; CStateManager::GetPixelShader
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SetPixelShader@CStateManager@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwShader$ = 8						; size = 4
?SetPixelShader@CStateManager@@QAEXK@Z PROC		; CStateManager::SetPixelShader, COMDAT
; _this$ = ecx

; 576  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 577  : 	if (m_CurrentState.m_dwPixelShader == dwShader)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 18 81 00
	00		 mov	 eax, DWORD PTR [eax+33048]
  00010	3b 45 08	 cmp	 eax, DWORD PTR _dwShader$[ebp]
  00013	75 02		 jne	 SHORT $LN2@SetPixelSh

; 578  : 		return;

  00015	eb 29		 jmp	 SHORT $LN1@SetPixelSh
$LN2@SetPixelSh:

; 579  : 
; 580  : 	m_lpD3DDev->SetPixelShader(dwShader);

  00017	ff 75 08	 push	 DWORD PTR _dwShader$[ebp]
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  0002e	ff 90 60 01 00
	00		 call	 DWORD PTR [eax+352]

; 581  : 	m_CurrentState.m_dwPixelShader = dwShader;

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 4d 08	 mov	 ecx, DWORD PTR _dwShader$[ebp]
  0003a	89 88 18 81 00
	00		 mov	 DWORD PTR [eax+33048], ecx
$LN1@SetPixelSh:

; 582  : }

  00040	c9		 leave
  00041	c2 04 00	 ret	 4
?SetPixelShader@CStateManager@@QAEXK@Z ENDP		; CStateManager::SetPixelShader
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?RestorePixelShader@CStateManager@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RestorePixelShader@CStateManager@@QAEXXZ PROC		; CStateManager::RestorePixelShader, COMDAT
; _this$ = ecx

; 571  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 572  : 	SetPixelShader(m_CopyState.m_dwPixelShader);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	ff b0 8c e7 00
	00		 push	 DWORD PTR [eax+59276]
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?SetPixelShader@CStateManager@@QAEXK@Z ; CStateManager::SetPixelShader

; 573  : }

  00018	c9		 leave
  00019	c3		 ret	 0
?RestorePixelShader@CStateManager@@QAEXXZ ENDP		; CStateManager::RestorePixelShader
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SavePixelShader@CStateManager@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwShader$ = 8						; size = 4
?SavePixelShader@CStateManager@@QAEXK@Z PROC		; CStateManager::SavePixelShader, COMDAT
; _this$ = ecx

; 565  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 566  : 	m_CopyState.m_dwPixelShader = m_CurrentState.m_dwPixelShader;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8b 89 18 81 00
	00		 mov	 ecx, DWORD PTR [ecx+33048]
  00013	89 88 8c e7 00
	00		 mov	 DWORD PTR [eax+59276], ecx

; 567  : 	SetPixelShader(dwShader);

  00019	ff 75 08	 push	 DWORD PTR _dwShader$[ebp]
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?SetPixelShader@CStateManager@@QAEXK@Z ; CStateManager::SetPixelShader

; 568  : }

  00024	c9		 leave
  00025	c2 04 00	 ret	 4
?SavePixelShader@CStateManager@@QAEXK@Z ENDP		; CStateManager::SavePixelShader
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?GetVertexShader@CStateManager@@QAEXPAK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pdwShader$ = 8						; size = 4
?GetVertexShader@CStateManager@@QAEXPAK@Z PROC		; CStateManager::GetVertexShader, COMDAT
; _this$ = ecx

; 559  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 560  : 	*pdwShader = m_CurrentState.m_dwVertexShader;

  00007	8b 45 08	 mov	 eax, DWORD PTR _pdwShader$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8b 89 1c 81 00
	00		 mov	 ecx, DWORD PTR [ecx+33052]
  00013	89 08		 mov	 DWORD PTR [eax], ecx

; 561  : }

  00015	c9		 leave
  00016	c2 04 00	 ret	 4
?GetVertexShader@CStateManager@@QAEXPAK@Z ENDP		; CStateManager::GetVertexShader
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SetVertexShader@CStateManager@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwShader$ = 8						; size = 4
?SetVertexShader@CStateManager@@QAEXK@Z PROC		; CStateManager::SetVertexShader, COMDAT
; _this$ = ecx

; 550  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 551  : 	if (m_CurrentState.m_dwVertexShader == dwShader)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 1c 81 00
	00		 mov	 eax, DWORD PTR [eax+33052]
  00010	3b 45 08	 cmp	 eax, DWORD PTR _dwShader$[ebp]
  00013	75 02		 jne	 SHORT $LN2@SetVertexS

; 552  : 		return;

  00015	eb 29		 jmp	 SHORT $LN1@SetVertexS
$LN2@SetVertexS:

; 553  : 
; 554  : 	m_lpD3DDev->SetVertexShader(dwShader);

  00017	ff 75 08	 push	 DWORD PTR _dwShader$[ebp]
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  0002e	ff 90 30 01 00
	00		 call	 DWORD PTR [eax+304]

; 555  : 	m_CurrentState.m_dwVertexShader = dwShader;

  00034	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00037	8b 4d 08	 mov	 ecx, DWORD PTR _dwShader$[ebp]
  0003a	89 88 1c 81 00
	00		 mov	 DWORD PTR [eax+33052], ecx
$LN1@SetVertexS:

; 556  : }

  00040	c9		 leave
  00041	c2 04 00	 ret	 4
?SetVertexShader@CStateManager@@QAEXK@Z ENDP		; CStateManager::SetVertexShader
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?RestoreVertexShader@CStateManager@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RestoreVertexShader@CStateManager@@QAEXXZ PROC		; CStateManager::RestoreVertexShader, COMDAT
; _this$ = ecx

; 545  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 546  : 	SetVertexShader(m_CopyState.m_dwVertexShader);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	ff b0 90 e7 00
	00		 push	 DWORD PTR [eax+59280]
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 547  : }

  00018	c9		 leave
  00019	c3		 ret	 0
?RestoreVertexShader@CStateManager@@QAEXXZ ENDP		; CStateManager::RestoreVertexShader
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SaveVertexShader@CStateManager@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwShader$ = 8						; size = 4
?SaveVertexShader@CStateManager@@QAEXK@Z PROC		; CStateManager::SaveVertexShader, COMDAT
; _this$ = ecx

; 539  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 540  : 	m_CopyState.m_dwVertexShader = m_CurrentState.m_dwVertexShader;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8b 89 1c 81 00
	00		 mov	 ecx, DWORD PTR [ecx+33052]
  00013	89 88 90 e7 00
	00		 mov	 DWORD PTR [eax+59280], ecx

; 541  : 	SetVertexShader(dwShader);

  00019	ff 75 08	 push	 DWORD PTR _dwShader$[ebp]
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 542  : }

  00024	c9		 leave
  00025	c2 04 00	 ret	 4
?SaveVertexShader@CStateManager@@QAEXK@Z ENDP		; CStateManager::SaveVertexShader
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SetBestFiltering@CStateManager@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwStage$ = 8						; size = 4
?SetBestFiltering@CStateManager@@QAEXK@Z PROC		; CStateManager::SetBestFiltering, COMDAT
; _this$ = ecx

; 110  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 111  : 	SetTextureStageState(dwStage, D3DTSS_MINFILTER,	m_dwBestMinFilter);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	ff b0 70 33 01
	00		 push	 DWORD PTR [eax+78704]
  00010	6a 11		 push	 17			; 00000011H
  00012	ff 75 08	 push	 DWORD PTR _dwStage$[ebp]
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 112  : 	SetTextureStageState(dwStage, D3DTSS_MAGFILTER,	m_dwBestMagFilter);

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	ff b0 74 33 01
	00		 push	 DWORD PTR [eax+78708]
  00026	6a 10		 push	 16			; 00000010H
  00028	ff 75 08	 push	 DWORD PTR _dwStage$[ebp]
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 113  : 	SetTextureStageState(dwStage, D3DTSS_MIPFILTER,	D3DTEXF_LINEAR);

  00033	6a 02		 push	 2
  00035	6a 12		 push	 18			; 00000012H
  00037	ff 75 08	 push	 DWORD PTR _dwStage$[ebp]
  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 114  : }

  00042	c9		 leave
  00043	c2 04 00	 ret	 4
?SetBestFiltering@CStateManager@@QAEXK@Z ENDP		; CStateManager::SetBestFiltering
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?GetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@PAK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwStage$ = 8						; size = 4
_Type$ = 12						; size = 4
_pdwValue$ = 16						; size = 4
?GetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@PAK@Z PROC ; CStateManager::GetTextureStageState, COMDAT
; _this$ = ecx

; 533  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 534  : 	*pdwValue = m_CurrentState.m_TextureStates[dwStage][Type];

  00007	8b 45 08	 mov	 eax, DWORD PTR _dwStage$[ebp]
  0000a	c1 e0 09	 shl	 eax, 9
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8d 84 01 78 6a
	00 00		 lea	 eax, DWORD PTR [ecx+eax+27256]
  00017	8b 4d 10	 mov	 ecx, DWORD PTR _pdwValue$[ebp]
  0001a	8b 55 0c	 mov	 edx, DWORD PTR _Type$[ebp]
  0001d	8b 04 90	 mov	 eax, DWORD PTR [eax+edx*4]
  00020	89 01		 mov	 DWORD PTR [ecx], eax

; 535  : }

  00022	c9		 leave
  00023	c2 0c 00	 ret	 12			; 0000000cH
?GetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@PAK@Z ENDP ; CStateManager::GetTextureStageState
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwStage$ = 8						; size = 4
_Type$ = 12						; size = 4
_dwValue$ = 16						; size = 4
?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z PROC ; CStateManager::SetTextureStageState, COMDAT
; _this$ = ecx

; 524  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 525  : 	if (m_CurrentState.m_TextureStates[dwStage][Type] == dwValue)

  00007	8b 45 08	 mov	 eax, DWORD PTR _dwStage$[ebp]
  0000a	c1 e0 09	 shl	 eax, 9
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8d 84 01 78 6a
	00 00		 lea	 eax, DWORD PTR [ecx+eax+27256]
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _Type$[ebp]
  0001a	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  0001d	3b 45 10	 cmp	 eax, DWORD PTR _dwValue$[ebp]
  00020	75 02		 jne	 SHORT $LN2@SetTexture

; 526  : 		return;

  00022	eb 3c		 jmp	 SHORT $LN1@SetTexture
$LN2@SetTexture:

; 527  : 
; 528  : 	m_lpD3DDev->SetTextureStageState(dwStage, Type, dwValue);

  00024	ff 75 10	 push	 DWORD PTR _dwValue$[ebp]
  00027	ff 75 0c	 push	 DWORD PTR _Type$[ebp]
  0002a	ff 75 08	 push	 DWORD PTR _dwStage$[ebp]
  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  00036	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
  0003b	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  00041	ff 90 fc 00 00
	00		 call	 DWORD PTR [eax+252]

; 529  : 	m_CurrentState.m_TextureStates[dwStage][Type] = dwValue;

  00047	8b 45 08	 mov	 eax, DWORD PTR _dwStage$[ebp]
  0004a	c1 e0 09	 shl	 eax, 9
  0004d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	8d 84 01 78 6a
	00 00		 lea	 eax, DWORD PTR [ecx+eax+27256]
  00057	8b 4d 0c	 mov	 ecx, DWORD PTR _Type$[ebp]
  0005a	8b 55 10	 mov	 edx, DWORD PTR _dwValue$[ebp]
  0005d	89 14 88	 mov	 DWORD PTR [eax+ecx*4], edx
$LN1@SetTexture:

; 530  : }

  00060	c9		 leave
  00061	c2 0c 00	 ret	 12			; 0000000cH
?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ENDP ; CStateManager::SetTextureStageState
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwStage$ = 8						; size = 4
_Type$ = 12						; size = 4
?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z PROC ; CStateManager::RestoreTextureStageState, COMDAT
; _this$ = ecx

; 511  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 512  : #ifdef _DEBUG
; 513  : 	if (!m_bTextureStageStateSavingFlag[dwStage][Type])
; 514  : 	{
; 515  : 		Tracef(" CStateManager::RestoreTextureStageState - This texture stage state was not saved [%d, %d]\n", dwStage, Type);
; 516  : 		StateManager_Assert(!" This texture stage state was not saved!");
; 517  : 	}
; 518  : 	m_bTextureStageStateSavingFlag[dwStage][Type] = FALSE;
; 519  : #endif _DEBUG
; 520  : 	SetTextureStageState(dwStage, Type, m_CopyState.m_TextureStates[dwStage][Type]);

  00007	8b 45 08	 mov	 eax, DWORD PTR _dwStage$[ebp]
  0000a	c1 e0 09	 shl	 eax, 9
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	8d 84 01 ec d0
	00 00		 lea	 eax, DWORD PTR [ecx+eax+53484]
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _Type$[ebp]
  0001a	ff 34 88	 push	 DWORD PTR [eax+ecx*4]
  0001d	ff 75 0c	 push	 DWORD PTR _Type$[ebp]
  00020	ff 75 08	 push	 DWORD PTR _dwStage$[ebp]
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 521  : }

  0002b	c9		 leave
  0002c	c2 08 00	 ret	 8
?RestoreTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@@Z ENDP ; CStateManager::RestoreTextureStageState
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwStage$ = 8						; size = 4
_Type$ = 12						; size = 4
_dwValue$ = 16						; size = 4
?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z PROC ; CStateManager::SaveTextureStageState, COMDAT
; _this$ = ecx

; 496  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 497  : 	// Check that we have set this up before, if not, the default is this.
; 498  : #ifdef _DEBUG
; 499  : 	if (m_bTextureStageStateSavingFlag[dwStage][Type])
; 500  : 	{
; 501  : 		Tracef(" CStateManager::SaveTextureStageState - This texture stage state is already saved [%d, %d]\n", dwStage, Type);
; 502  : 		StateManager_Assert(!" This texture stage state is already saved!");
; 503  : 	}
; 504  : 	m_bTextureStageStateSavingFlag[dwStage][Type] = TRUE;
; 505  : #endif _DEBUG
; 506  : 	m_CopyState.m_TextureStates[dwStage][Type] = m_CurrentState.m_TextureStates[dwStage][Type];

  00008	8b 45 08	 mov	 eax, DWORD PTR _dwStage$[ebp]
  0000b	c1 e0 09	 shl	 eax, 9
  0000e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	8d 84 01 78 6a
	00 00		 lea	 eax, DWORD PTR [ecx+eax+27256]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _dwStage$[ebp]
  0001b	c1 e1 09	 shl	 ecx, 9
  0001e	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00021	8d 8c 0a ec d0
	00 00		 lea	 ecx, DWORD PTR [edx+ecx+53484]
  00028	8b 55 0c	 mov	 edx, DWORD PTR _Type$[ebp]
  0002b	8b 75 0c	 mov	 esi, DWORD PTR _Type$[ebp]
  0002e	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]
  00031	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax

; 507  : 	SetTextureStageState(dwStage, Type, dwValue);

  00034	ff 75 10	 push	 DWORD PTR _dwValue$[ebp]
  00037	ff 75 0c	 push	 DWORD PTR _Type$[ebp]
  0003a	ff 75 08	 push	 DWORD PTR _dwStage$[ebp]
  0003d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 508  : }

  00045	5e		 pop	 esi
  00046	c9		 leave
  00047	c2 0c 00	 ret	 12			; 0000000cH
?SaveTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ENDP ; CStateManager::SaveTextureStageState
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?GetTexture@CStateManager@@QAEXKPAPAUIDirect3DBaseTexture8@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwStage$ = 8						; size = 4
_ppTexture$ = 12					; size = 4
?GetTexture@CStateManager@@QAEXKPAPAUIDirect3DBaseTexture8@@@Z PROC ; CStateManager::GetTexture, COMDAT
; _this$ = ecx

; 490  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 491  : 	*ppTexture = m_CurrentState.m_Textures[dwStage];

  00007	8b 45 0c	 mov	 eax, DWORD PTR _ppTexture$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _dwStage$[ebp]
  0000d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00010	8b 8c 8a f8 80
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+33016]
  00017	89 08		 mov	 DWORD PTR [eax], ecx

; 492  : }

  00019	c9		 leave
  0001a	c2 08 00	 ret	 8
?GetTexture@CStateManager@@QAEXKPAPAUIDirect3DBaseTexture8@@@Z ENDP ; CStateManager::GetTexture
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwStage$ = 8						; size = 4
_pTexture$ = 12						; size = 4
?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z PROC ; CStateManager::SetTexture, COMDAT
; _this$ = ecx

; 481  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 482  : 	if (pTexture == m_CurrentState.m_Textures[dwStage])

  00007	8b 45 08	 mov	 eax, DWORD PTR _dwStage$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8b 55 0c	 mov	 edx, DWORD PTR _pTexture$[ebp]
  00010	3b 94 81 f8 80
	00 00		 cmp	 edx, DWORD PTR [ecx+eax*4+33016]
  00017	75 02		 jne	 SHORT $LN2@SetTexture

; 483  : 		return;

  00019	eb 30		 jmp	 SHORT $LN1@SetTexture
$LN2@SetTexture:

; 484  : 
; 485  : 	m_lpD3DDev->SetTexture(dwStage, pTexture);

  0001b	ff 75 0c	 push	 DWORD PTR _pTexture$[ebp]
  0001e	ff 75 08	 push	 DWORD PTR _dwStage$[ebp]
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
  0002f	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  00035	ff 90 f4 00 00
	00		 call	 DWORD PTR [eax+244]

; 486  : 	m_CurrentState.m_Textures[dwStage] = pTexture;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _dwStage$[ebp]
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	8b 55 0c	 mov	 edx, DWORD PTR _pTexture$[ebp]
  00044	89 94 81 f8 80
	00 00		 mov	 DWORD PTR [ecx+eax*4+33016], edx
$LN1@SetTexture:

; 487  : }

  0004b	c9		 leave
  0004c	c2 08 00	 ret	 8
?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ENDP ; CStateManager::SetTexture
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?RestoreTexture@CStateManager@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwStage$ = 8						; size = 4
?RestoreTexture@CStateManager@@QAEXK@Z PROC		; CStateManager::RestoreTexture, COMDAT
; _this$ = ecx

; 476  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 477  : 	SetTexture(dwStage, m_CopyState.m_Textures[dwStage]);

  00007	8b 45 08	 mov	 eax, DWORD PTR _dwStage$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	ff b4 81 6c e7
	00 00		 push	 DWORD PTR [ecx+eax*4+59244]
  00014	ff 75 08	 push	 DWORD PTR _dwStage$[ebp]
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 478  : }

  0001f	c9		 leave
  00020	c2 04 00	 ret	 4
?RestoreTexture@CStateManager@@QAEXK@Z ENDP		; CStateManager::RestoreTexture
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SaveTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwStage$ = 8						; size = 4
_pTexture$ = 12						; size = 4
?SaveTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z PROC ; CStateManager::SaveTexture, COMDAT
; _this$ = ecx

; 469  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 470  : 	// Check that we have set this up before, if not, the default is this.
; 471  : 	m_CopyState.m_Textures[dwStage] = m_CurrentState.m_Textures[dwStage];

  00008	8b 45 08	 mov	 eax, DWORD PTR _dwStage$[ebp]
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 55 08	 mov	 edx, DWORD PTR _dwStage$[ebp]
  00011	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  00014	8b 94 96 f8 80
	00 00		 mov	 edx, DWORD PTR [esi+edx*4+33016]
  0001b	89 94 81 6c e7
	00 00		 mov	 DWORD PTR [ecx+eax*4+59244], edx

; 472  : 	SetTexture(dwStage, pTexture);

  00022	ff 75 0c	 push	 DWORD PTR _pTexture$[ebp]
  00025	ff 75 08	 push	 DWORD PTR _dwStage$[ebp]
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 473  : }

  00030	5e		 pop	 esi
  00031	c9		 leave
  00032	c2 08 00	 ret	 8
?SaveTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ENDP ; CStateManager::SaveTexture
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?GetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@PAK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Type$ = 8						; size = 4
_pdwValue$ = 12						; size = 4
?GetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@PAK@Z PROC ; CStateManager::GetRenderState, COMDAT
; _this$ = ecx

; 463  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 464  : 	*pdwValue = m_CurrentState.m_RenderStates[Type];

  00007	8b 45 0c	 mov	 eax, DWORD PTR _pdwValue$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _Type$[ebp]
  0000d	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00010	8b 8c 8a 78 66
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+26232]
  00017	89 08		 mov	 DWORD PTR [eax], ecx

; 465  : }

  00019	c9		 leave
  0001a	c2 08 00	 ret	 8
?GetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@PAK@Z ENDP ; CStateManager::GetRenderState
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Type$ = 8						; size = 4
_Value$ = 12						; size = 4
?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z PROC ; CStateManager::SetRenderState, COMDAT
; _this$ = ecx

; 454  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 455  : 	if (m_CurrentState.m_RenderStates[Type] == Value)

  00007	8b 45 08	 mov	 eax, DWORD PTR _Type$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8b 84 81 78 66
	00 00		 mov	 eax, DWORD PTR [ecx+eax*4+26232]
  00014	3b 45 0c	 cmp	 eax, DWORD PTR _Value$[ebp]
  00017	75 02		 jne	 SHORT $LN2@SetRenderS

; 456  : 		return;

  00019	eb 30		 jmp	 SHORT $LN1@SetRenderS
$LN2@SetRenderS:

; 457  : 
; 458  : 	m_lpD3DDev->SetRenderState(Type, Value);

  0001b	ff 75 0c	 push	 DWORD PTR _Value$[ebp]
  0001e	ff 75 08	 push	 DWORD PTR _Type$[ebp]
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
  0002f	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  00035	ff 90 c8 00 00
	00		 call	 DWORD PTR [eax+200]

; 459  : 	m_CurrentState.m_RenderStates[Type] = Value;

  0003b	8b 45 08	 mov	 eax, DWORD PTR _Type$[ebp]
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	8b 55 0c	 mov	 edx, DWORD PTR _Value$[ebp]
  00044	89 94 81 78 66
	00 00		 mov	 DWORD PTR [ecx+eax*4+26232], edx
$LN1@SetRenderS:

; 460  : }

  0004b	c9		 leave
  0004c	c2 08 00	 ret	 8
?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ENDP ; CStateManager::SetRenderState
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Type$ = 8						; size = 4
?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z PROC ; CStateManager::RestoreRenderState, COMDAT
; _this$ = ecx

; 440  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 441  : #ifdef _DEBUG
; 442  : 	if (!m_bRenderStateSavingFlag[Type])
; 443  : 	{
; 444  : 		Tracef(" CStateManager::SaveRenderState - This render state was not saved [%d, %d]\n", Type);
; 445  : 		StateManager_Assert(!" This render state was not saved!");
; 446  : 	}
; 447  : 	m_bRenderStateSavingFlag[Type] = FALSE;
; 448  : #endif _DEBUG
; 449  : 
; 450  : 	SetRenderState(Type, m_CopyState.m_RenderStates[Type]);

  00007	8b 45 08	 mov	 eax, DWORD PTR _Type$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	ff b4 81 ec cc
	00 00		 push	 DWORD PTR [ecx+eax*4+52460]
  00014	ff 75 08	 push	 DWORD PTR _Type$[ebp]
  00017	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 451  : }

  0001f	c9		 leave
  00020	c2 04 00	 ret	 4
?RestoreRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@@Z ENDP ; CStateManager::RestoreRenderState
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Type$ = 8						; size = 4
_dwValue$ = 12						; size = 4
?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z PROC ; CStateManager::SaveRenderState, COMDAT
; _this$ = ecx

; 424  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 425  : #ifdef _DEBUG
; 426  : 	if (m_bRenderStateSavingFlag[Type])
; 427  : 	{
; 428  : 		Tracef(" CStateManager::SaveRenderState - This render state is already saved [%d, %d]\n", Type, dwValue);
; 429  : 		StateManager_Assert(!" This render state is already saved!");
; 430  : 	}
; 431  : 	m_bRenderStateSavingFlag[Type] = TRUE;
; 432  : #endif _DEBUG
; 433  : 
; 434  : 	// Check that we have set this up before, if not, the default is this.
; 435  : 	m_CopyState.m_RenderStates[Type] = m_CurrentState.m_RenderStates[Type];

  00008	8b 45 08	 mov	 eax, DWORD PTR _Type$[ebp]
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	8b 55 08	 mov	 edx, DWORD PTR _Type$[ebp]
  00011	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  00014	8b 94 96 78 66
	00 00		 mov	 edx, DWORD PTR [esi+edx*4+26232]
  0001b	89 94 81 ec cc
	00 00		 mov	 DWORD PTR [ecx+eax*4+52460], edx

; 436  : 	SetRenderState(Type, dwValue);

  00022	ff 75 0c	 push	 DWORD PTR _dwValue$[ebp]
  00025	ff 75 08	 push	 DWORD PTR _Type$[ebp]
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 437  : }

  00030	5e		 pop	 esi
  00031	c9		 leave
  00032	c2 08 00	 ret	 8
?SaveRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ENDP ; CStateManager::SaveRenderState
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?GetLight@CStateManager@@QAEXKPAU_D3DLIGHT8@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
_pLight$ = 12						; size = 4
?GetLight@CStateManager@@QAEXKPAU_D3DLIGHT8@@@Z PROC	; CStateManager::GetLight, COMDAT
; _this$ = ecx

; 27   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 28   : 	assert(index<8);
; 29   : 	*pLight=m_kLightData.m_akD3DLight[index];

  00009	6b 75 08 68	 imul	 esi, DWORD PTR _index$[ebp], 104
  0000d	81 c6 00 00 00
	00		 add	 esi, OFFSET ?m_kLightData@@3USLightData@@A ; m_kLightData
  00013	6a 1a		 push	 26			; 0000001aH
  00015	59		 pop	 ecx
  00016	8b 7d 0c	 mov	 edi, DWORD PTR _pLight$[ebp]
  00019	f3 a5		 rep movsd

; 30   : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	c9		 leave
  0001e	c2 08 00	 ret	 8
?GetLight@CStateManager@@QAEXKPAU_D3DLIGHT8@@@Z ENDP	; CStateManager::GetLight
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SetLight@CStateManager@@QAEXKPBU_D3DLIGHT8@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_index$ = 8						; size = 4
_pLight$ = 12						; size = 4
?SetLight@CStateManager@@QAEXKPBU_D3DLIGHT8@@@Z PROC	; CStateManager::SetLight, COMDAT
; _this$ = ecx

; 19   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 20   : 	assert(index<SLightData::LIGHT_NUM);
; 21   : 	m_kLightData.m_akD3DLight[index]=*pLight;

  00009	6b 7d 08 68	 imul	 edi, DWORD PTR _index$[ebp], 104
  0000d	81 c7 00 00 00
	00		 add	 edi, OFFSET ?m_kLightData@@3USLightData@@A ; m_kLightData
  00013	6a 1a		 push	 26			; 0000001aH
  00015	59		 pop	 ecx
  00016	8b 75 0c	 mov	 esi, DWORD PTR _pLight$[ebp]
  00019	f3 a5		 rep movsd

; 22   : 
; 23   : 	m_lpD3DDev->SetLight(index, pLight);

  0001b	ff 75 0c	 push	 DWORD PTR _pLight$[ebp]
  0001e	ff 75 08	 push	 DWORD PTR _index$[ebp]
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
  0002f	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  00035	ff 90 b0 00 00
	00		 call	 DWORD PTR [eax+176]

; 24   : }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	c9		 leave
  0003e	c2 08 00	 ret	 8
?SetLight@CStateManager@@QAEXKPBU_D3DLIGHT8@@@Z ENDP	; CStateManager::SetLight
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?GetMaterial@CStateManager@@QAEXPAU_D3DMATERIAL8@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMaterial$ = 8						; size = 4
?GetMaterial@CStateManager@@QAEXPAU_D3DMATERIAL8@@@Z PROC ; CStateManager::GetMaterial, COMDAT
; _this$ = ecx

; 412  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 413  : 	// Set the renderstate and remember it.
; 414  : 	*pMaterial = m_CurrentState.m_D3DMaterial;

  00009	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  0000c	81 c6 20 cc 00
	00		 add	 esi, 52256		; 0000cc20H
  00012	6a 11		 push	 17			; 00000011H
  00014	59		 pop	 ecx
  00015	8b 7d 08	 mov	 edi, DWORD PTR _pMaterial$[ebp]
  00018	f3 a5		 rep movsd

; 415  : }

  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	c9		 leave
  0001d	c2 04 00	 ret	 4
?GetMaterial@CStateManager@@QAEXPAU_D3DMATERIAL8@@@Z ENDP ; CStateManager::GetMaterial
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SetMaterial@CStateManager@@QAEXPBU_D3DMATERIAL8@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMaterial$ = 8						; size = 4
?SetMaterial@CStateManager@@QAEXPBU_D3DMATERIAL8@@@Z PROC ; CStateManager::SetMaterial, COMDAT
; _this$ = ecx

; 406  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 407  : 	m_lpD3DDev->SetMaterial(pMaterial);

  00009	ff 75 08	 push	 DWORD PTR _pMaterial$[ebp]
  0000c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000f	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  00015	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00018	8b 00		 mov	 eax, DWORD PTR [eax]
  0001a	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  00020	ff 90 a8 00 00
	00		 call	 DWORD PTR [eax+168]

; 408  : 	m_CurrentState.m_D3DMaterial = *pMaterial;

  00026	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00029	81 c7 20 cc 00
	00		 add	 edi, 52256		; 0000cc20H
  0002f	6a 11		 push	 17			; 00000011H
  00031	59		 pop	 ecx
  00032	8b 75 08	 mov	 esi, DWORD PTR _pMaterial$[ebp]
  00035	f3 a5		 rep movsd

; 409  : }

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	c9		 leave
  0003a	c2 04 00	 ret	 4
?SetMaterial@CStateManager@@QAEXPBU_D3DMATERIAL8@@@Z ENDP ; CStateManager::SetMaterial
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?RestoreMaterial@CStateManager@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RestoreMaterial@CStateManager@@QAEXXZ PROC		; CStateManager::RestoreMaterial, COMDAT
; _this$ = ecx

; 401  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 402  : 	SetMaterial(&m_CopyState.m_D3DMaterial);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	05 94 32 01 00	 add	 eax, 78484		; 00013294H
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?SetMaterial@CStateManager@@QAEXPBU_D3DMATERIAL8@@@Z ; CStateManager::SetMaterial

; 403  : }

  00018	c9		 leave
  00019	c3		 ret	 0
?RestoreMaterial@CStateManager@@QAEXXZ ENDP		; CStateManager::RestoreMaterial
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SaveMaterial@CStateManager@@QAEXPBU_D3DMATERIAL8@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMaterial$ = 8						; size = 4
?SaveMaterial@CStateManager@@QAEXPBU_D3DMATERIAL8@@@Z PROC ; CStateManager::SaveMaterial, COMDAT
; _this$ = ecx

; 394  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 395  : 	// Check that we have set this up before, if not, the default is this.
; 396  : 	m_CopyState.m_D3DMaterial = m_CurrentState.m_D3DMaterial;

  00009	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  0000c	81 c6 20 cc 00
	00		 add	 esi, 52256		; 0000cc20H
  00012	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00015	81 c7 94 32 01
	00		 add	 edi, 78484		; 00013294H
  0001b	6a 11		 push	 17			; 00000011H
  0001d	59		 pop	 ecx
  0001e	f3 a5		 rep movsd

; 397  : 	SetMaterial(pMaterial);

  00020	ff 75 08	 push	 DWORD PTR _pMaterial$[ebp]
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?SetMaterial@CStateManager@@QAEXPBU_D3DMATERIAL8@@@Z ; CStateManager::SetMaterial

; 398  : }

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	c9		 leave
  0002e	c2 04 00	 ret	 4
?SaveMaterial@CStateManager@@QAEXPBU_D3DMATERIAL8@@@Z ENDP ; CStateManager::SaveMaterial
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SaveMaterial@CStateManager@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SaveMaterial@CStateManager@@QAEXXZ PROC		; CStateManager::SaveMaterial, COMDAT
; _this$ = ecx

; 389  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 390  : 	m_CopyState.m_D3DMaterial = m_CurrentState.m_D3DMaterial;

  00009	8b 75 fc	 mov	 esi, DWORD PTR _this$[ebp]
  0000c	81 c6 20 cc 00
	00		 add	 esi, 52256		; 0000cc20H
  00012	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00015	81 c7 94 32 01
	00		 add	 edi, 78484		; 00013294H
  0001b	6a 11		 push	 17			; 00000011H
  0001d	59		 pop	 ecx
  0001e	f3 a5		 rep movsd

; 391  : }

  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	c9		 leave
  00023	c3		 ret	 0
?SaveMaterial@CStateManager@@QAEXXZ ENDP		; CStateManager::SaveMaterial
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?EndScene@CStateManager@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EndScene@CStateManager@@QAEXXZ PROC			; CStateManager::EndScene, COMDAT
; _this$ = ecx

; 52   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 53   : 	m_lpD3DDev->EndScene();

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	8b 00		 mov	 eax, DWORD PTR [eax]
  00015	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  0001b	ff 90 8c 00 00
	00		 call	 DWORD PTR [eax+140]

; 54   : 	m_bScene=false;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c6 80 6d 33 01
	00 00		 mov	 BYTE PTR [eax+78701], 0

; 55   : }

  0002b	c9		 leave
  0002c	c3		 ret	 0
?EndScene@CStateManager@@QAEXXZ ENDP			; CStateManager::EndScene
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?BeginScene@CStateManager@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -80						; size = 4
_m4View$ = -76						; size = 64
_m4Proj$ = -12						; size = 64
_m4World$ = 52						; size = 64
__$ArrayPad$ = 116					; size = 4
?BeginScene@CStateManager@@QAE_NXZ PROC			; CStateManager::BeginScene, COMDAT
; _this$ = ecx

; 33   : {

  00000	55		 push	 ebp
  00001	8d 6c 24 88	 lea	 ebp, DWORD PTR [esp-120]
  00005	81 ec c8 00 00
	00		 sub	 esp, 200		; 000000c8H
  0000b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00010	33 c5		 xor	 eax, ebp
  00012	89 45 74	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00015	89 4d b0	 mov	 DWORD PTR _this$[ebp], ecx

; 34   : 	m_bScene=true;

  00018	8b 45 b0	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	c6 80 6d 33 01
	00 01		 mov	 BYTE PTR [eax+78701], 1

; 35   : 
; 36   : 	D3DXMATRIX m4Proj;
; 37   : 	D3DXMATRIX m4View;
; 38   : 	D3DXMATRIX m4World;
; 39   : 	GetTransform(D3DTS_WORLD, &m4World);

  00022	8d 45 34	 lea	 eax, DWORD PTR _m4World$[ebp]
  00025	50		 push	 eax
  00026	68 00 01 00 00	 push	 256			; 00000100H
  0002b	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?GetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z ; CStateManager::GetTransform

; 40   : 	GetTransform(D3DTS_PROJECTION, &m4Proj);

  00033	8d 45 f4	 lea	 eax, DWORD PTR _m4Proj$[ebp]
  00036	50		 push	 eax
  00037	6a 03		 push	 3
  00039	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	e8 00 00 00 00	 call	 ?GetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z ; CStateManager::GetTransform

; 41   : 	GetTransform(D3DTS_VIEW, &m4View);

  00041	8d 45 b4	 lea	 eax, DWORD PTR _m4View$[ebp]
  00044	50		 push	 eax
  00045	6a 02		 push	 2
  00047	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ?GetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z ; CStateManager::GetTransform

; 42   : 	SetTransform(D3DTS_WORLD, &m4World);

  0004f	8d 45 34	 lea	 eax, DWORD PTR _m4World$[ebp]
  00052	50		 push	 eax
  00053	68 00 01 00 00	 push	 256			; 00000100H
  00058	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform

; 43   : 	SetTransform(D3DTS_PROJECTION, &m4Proj);

  00060	8d 45 f4	 lea	 eax, DWORD PTR _m4Proj$[ebp]
  00063	50		 push	 eax
  00064	6a 03		 push	 3
  00066	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform

; 44   : 	SetTransform(D3DTS_VIEW, &m4View);

  0006e	8d 45 b4	 lea	 eax, DWORD PTR _m4View$[ebp]
  00071	50		 push	 eax
  00072	6a 02		 push	 2
  00074	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform

; 45   : 
; 46   : 	if (FAILED(m_lpD3DDev->BeginScene()))

  0007c	8b 45 b0	 mov	 eax, DWORD PTR _this$[ebp]
  0007f	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  00085	8b 4d b0	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	8b 00		 mov	 eax, DWORD PTR [eax]
  0008a	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  00090	ff 90 88 00 00
	00		 call	 DWORD PTR [eax+136]
  00096	85 c0		 test	 eax, eax
  00098	7d 04		 jge	 SHORT $LN2@BeginScene

; 47   : 		return false;

  0009a	32 c0		 xor	 al, al
  0009c	eb 02		 jmp	 SHORT $LN1@BeginScene
$LN2@BeginScene:

; 48   : 	return true;

  0009e	b0 01		 mov	 al, 1
$LN1@BeginScene:

; 49   : }

  000a0	8b 4d 74	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a3	33 cd		 xor	 ecx, ebp
  000a5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000aa	83 c5 78	 add	 ebp, 120		; 00000078H
  000ad	c9		 leave
  000ae	c3		 ret	 0
?BeginScene@CStateManager@@QAE_NXZ ENDP			; CStateManager::BeginScene
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?Restore@CStateManager@@QAEXXZ
_TEXT	SEGMENT
_j$ = -12						; size = 4
_this$ = -8						; size = 4
_i$ = -4						; size = 4
?Restore@CStateManager@@QAEXXZ PROC			; CStateManager::Restore, COMDAT
; _this$ = ecx

; 117  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 118  : 	int i, j;
; 119  : 
; 120  : 	m_bForce = true;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	c6 80 6c 33 01
	00 01		 mov	 BYTE PTR [eax+78700], 1

; 121  : 
; 122  : 	for (i = 0; i < STATEMANAGER_MAX_RENDERSTATES; ++i)

  00013	83 65 fc 00	 and	 DWORD PTR _i$[ebp], 0
  00017	eb 07		 jmp	 SHORT $LN4@Restore
$LN2@Restore:
  00019	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0001c	40		 inc	 eax
  0001d	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN4@Restore:
  00020	81 7d fc 00 01
	00 00		 cmp	 DWORD PTR _i$[ebp], 256	; 00000100H
  00027	73 1a		 jae	 SHORT $LN3@Restore

; 123  : 		SetRenderState(D3DRENDERSTATETYPE(i), m_CurrentState.m_RenderStates[i]);

  00029	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	ff b4 81 78 66
	00 00		 push	 DWORD PTR [ecx+eax*4+26232]
  00036	ff 75 fc	 push	 DWORD PTR _i$[ebp]
  00039	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState
  00041	eb d6		 jmp	 SHORT $LN2@Restore
$LN3@Restore:

; 124  : 
; 125  : 	for (i = 0; i < STATEMANAGER_MAX_STAGES; ++i)

  00043	83 65 fc 00	 and	 DWORD PTR _i$[ebp], 0
  00047	eb 07		 jmp	 SHORT $LN7@Restore
$LN5@Restore:
  00049	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0004c	40		 inc	 eax
  0004d	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN7@Restore:
  00050	83 7d fc 08	 cmp	 DWORD PTR _i$[ebp], 8
  00054	73 3e		 jae	 SHORT $LN6@Restore

; 126  : 		for (j = 0; j < STATEMANAGER_MAX_TEXTURESTATES; ++j)

  00056	83 65 f4 00	 and	 DWORD PTR _j$[ebp], 0
  0005a	eb 07		 jmp	 SHORT $LN10@Restore
$LN8@Restore:
  0005c	8b 45 f4	 mov	 eax, DWORD PTR _j$[ebp]
  0005f	40		 inc	 eax
  00060	89 45 f4	 mov	 DWORD PTR _j$[ebp], eax
$LN10@Restore:
  00063	81 7d f4 80 00
	00 00		 cmp	 DWORD PTR _j$[ebp], 128	; 00000080H
  0006a	73 26		 jae	 SHORT $LN9@Restore

; 127  : 			SetTextureStageState(i, D3DTEXTURESTAGESTATETYPE(j), m_CurrentState.m_TextureStates[i][j]);

  0006c	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0006f	c1 e0 09	 shl	 eax, 9
  00072	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	8d 84 01 78 6a
	00 00		 lea	 eax, DWORD PTR [ecx+eax+27256]
  0007c	8b 4d f4	 mov	 ecx, DWORD PTR _j$[ebp]
  0007f	ff 34 88	 push	 DWORD PTR [eax+ecx*4]
  00082	ff 75 f4	 push	 DWORD PTR _j$[ebp]
  00085	ff 75 fc	 push	 DWORD PTR _i$[ebp]
  00088	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState
  00090	eb ca		 jmp	 SHORT $LN8@Restore
$LN9@Restore:
  00092	eb b5		 jmp	 SHORT $LN5@Restore
$LN6@Restore:

; 128  : 
; 129  : 	for (i = 0; i < STATEMANAGER_MAX_STAGES; ++i)

  00094	83 65 fc 00	 and	 DWORD PTR _i$[ebp], 0
  00098	eb 07		 jmp	 SHORT $LN13@Restore
$LN11@Restore:
  0009a	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0009d	40		 inc	 eax
  0009e	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN13@Restore:
  000a1	83 7d fc 08	 cmp	 DWORD PTR _i$[ebp], 8
  000a5	73 1a		 jae	 SHORT $LN12@Restore

; 130  : 		SetTexture(i, m_CurrentState.m_Textures[i]);

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  000aa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ad	ff b4 81 f8 80
	00 00		 push	 DWORD PTR [ecx+eax*4+33016]
  000b4	ff 75 fc	 push	 DWORD PTR _i$[ebp]
  000b7	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ba	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture
  000bf	eb d9		 jmp	 SHORT $LN11@Restore
$LN12@Restore:

; 131  : 	
; 132  : 	m_bForce = false;

  000c1	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c4	c6 80 6c 33 01
	00 00		 mov	 BYTE PTR [eax+78700], 0

; 133  : }

  000cb	c9		 leave
  000cc	c3		 ret	 0
?Restore@CStateManager@@QAEXXZ ENDP			; CStateManager::Restore
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ?SetDefaultState@CStateManager@@QAEXXZ
_TEXT	SEGMENT
tv937 = -128						; size = 4
___t$ = -124						; size = 4
___n$ = -120						; size = 4
_this$ = -116						; size = 4
_DefaultMat$ = -112					; size = 68
_Identity$ = -44					; size = 64
_av4Null$ = 20						; size = 1536
__$ArrayPad$ = 1556					; size = 4
?SetDefaultState@CStateManager@@QAEXXZ PROC		; CStateManager::SetDefaultState, COMDAT
; _this$ = ecx

; 136  : {

  00000	55		 push	 ebp
  00001	8d ac 24 e8 f9
	ff ff		 lea	 ebp, DWORD PTR [esp-1560]
  00008	81 ec 98 06 00
	00		 sub	 esp, 1688		; 00000698H
  0000e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00013	33 c5		 xor	 eax, ebp
  00015	89 85 14 06 00
	00		 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0001b	89 4d 8c	 mov	 DWORD PTR _this$[ebp], ecx

; 137  : 	m_CurrentState.ResetState();

  0001e	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	81 c1 78 66 00
	00		 add	 ecx, 26232		; 00006678H
  00027	e8 00 00 00 00	 call	 ?ResetState@CStateManagerState@@QAEXXZ ; CStateManagerState::ResetState

; 138  : 	m_CopyState.ResetState();

  0002c	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	81 c1 ec cc 00
	00		 add	 ecx, 52460		; 0000ccecH
  00035	e8 00 00 00 00	 call	 ?ResetState@CStateManagerState@@QAEXXZ ; CStateManagerState::ResetState

; 139  : 	m_ChipState.ResetState();

  0003a	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	83 c1 04	 add	 ecx, 4
  00040	e8 00 00 00 00	 call	 ?ResetState@CStateManagerState@@QAEXXZ ; CStateManagerState::ResetState

; 140  : 
; 141  : 	m_bScene = false;

  00045	8b 45 8c	 mov	 eax, DWORD PTR _this$[ebp]
  00048	c6 80 6d 33 01
	00 00		 mov	 BYTE PTR [eax+78701], 0

; 142  : 	m_bForce = true;

  0004f	8b 45 8c	 mov	 eax, DWORD PTR _this$[ebp]
  00052	c6 80 6c 33 01
	00 01		 mov	 BYTE PTR [eax+78700], 1
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  00059	6a 10		 push	 16			; 00000010H
  0005b	58		 pop	 eax
  0005c	6b c0 03	 imul	 eax, eax, 3
  0005f	8d 44 05 d4	 lea	 eax, DWORD PTR _Identity$[ebp+eax]
  00063	6a 04		 push	 4
  00065	59		 pop	 ecx
  00066	d1 e1		 shl	 ecx, 1
  00068	0f 57 c0	 xorps	 xmm0, xmm0
  0006b	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  00070	6a 10		 push	 16			; 00000010H
  00072	58		 pop	 eax
  00073	6b c0 03	 imul	 eax, eax, 3
  00076	8d 44 05 d4	 lea	 eax, DWORD PTR _Identity$[ebp+eax]
  0007a	6a 04		 push	 4
  0007c	59		 pop	 ecx
  0007d	c1 e1 00	 shl	 ecx, 0
  00080	0f 57 c0	 xorps	 xmm0, xmm0
  00083	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  00088	6a 10		 push	 16			; 00000010H
  0008a	58		 pop	 eax
  0008b	6b c0 03	 imul	 eax, eax, 3
  0008e	8d 44 05 d4	 lea	 eax, DWORD PTR _Identity$[ebp+eax]
  00092	6a 04		 push	 4
  00094	59		 pop	 ecx
  00095	6b c9 00	 imul	 ecx, ecx, 0
  00098	0f 57 c0	 xorps	 xmm0, xmm0
  0009b	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  000a0	6a 10		 push	 16			; 00000010H
  000a2	58		 pop	 eax
  000a3	d1 e0		 shl	 eax, 1
  000a5	8d 44 05 d4	 lea	 eax, DWORD PTR _Identity$[ebp+eax]
  000a9	6a 04		 push	 4
  000ab	59		 pop	 ecx
  000ac	6b c9 03	 imul	 ecx, ecx, 3
  000af	0f 57 c0	 xorps	 xmm0, xmm0
  000b2	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  000b7	6a 10		 push	 16			; 00000010H
  000b9	58		 pop	 eax
  000ba	d1 e0		 shl	 eax, 1
  000bc	8d 44 05 d4	 lea	 eax, DWORD PTR _Identity$[ebp+eax]
  000c0	6a 04		 push	 4
  000c2	59		 pop	 ecx
  000c3	c1 e1 00	 shl	 ecx, 0
  000c6	0f 57 c0	 xorps	 xmm0, xmm0
  000c9	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  000ce	6a 10		 push	 16			; 00000010H
  000d0	58		 pop	 eax
  000d1	d1 e0		 shl	 eax, 1
  000d3	8d 44 05 d4	 lea	 eax, DWORD PTR _Identity$[ebp+eax]
  000d7	6a 04		 push	 4
  000d9	59		 pop	 ecx
  000da	6b c9 00	 imul	 ecx, ecx, 0
  000dd	0f 57 c0	 xorps	 xmm0, xmm0
  000e0	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  000e5	6a 10		 push	 16			; 00000010H
  000e7	58		 pop	 eax
  000e8	c1 e0 00	 shl	 eax, 0
  000eb	8d 44 05 d4	 lea	 eax, DWORD PTR _Identity$[ebp+eax]
  000ef	6a 04		 push	 4
  000f1	59		 pop	 ecx
  000f2	6b c9 03	 imul	 ecx, ecx, 3
  000f5	0f 57 c0	 xorps	 xmm0, xmm0
  000f8	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  000fd	6a 10		 push	 16			; 00000010H
  000ff	58		 pop	 eax
  00100	c1 e0 00	 shl	 eax, 0
  00103	8d 44 05 d4	 lea	 eax, DWORD PTR _Identity$[ebp+eax]
  00107	6a 04		 push	 4
  00109	59		 pop	 ecx
  0010a	d1 e1		 shl	 ecx, 1
  0010c	0f 57 c0	 xorps	 xmm0, xmm0
  0010f	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  00114	6a 10		 push	 16			; 00000010H
  00116	58		 pop	 eax
  00117	c1 e0 00	 shl	 eax, 0
  0011a	8d 44 05 d4	 lea	 eax, DWORD PTR _Identity$[ebp+eax]
  0011e	6a 04		 push	 4
  00120	59		 pop	 ecx
  00121	6b c9 00	 imul	 ecx, ecx, 0
  00124	0f 57 c0	 xorps	 xmm0, xmm0
  00127	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  0012c	6a 10		 push	 16			; 00000010H
  0012e	58		 pop	 eax
  0012f	6b c0 00	 imul	 eax, eax, 0
  00132	8d 44 05 d4	 lea	 eax, DWORD PTR _Identity$[ebp+eax]
  00136	6a 04		 push	 4
  00138	59		 pop	 ecx
  00139	6b c9 03	 imul	 ecx, ecx, 3
  0013c	0f 57 c0	 xorps	 xmm0, xmm0
  0013f	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  00144	6a 10		 push	 16			; 00000010H
  00146	58		 pop	 eax
  00147	6b c0 00	 imul	 eax, eax, 0
  0014a	8d 44 05 d4	 lea	 eax, DWORD PTR _Identity$[ebp+eax]
  0014e	6a 04		 push	 4
  00150	59		 pop	 ecx
  00151	d1 e1		 shl	 ecx, 1
  00153	0f 57 c0	 xorps	 xmm0, xmm0
  00156	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  0015b	6a 10		 push	 16			; 00000010H
  0015d	58		 pop	 eax
  0015e	6b c0 00	 imul	 eax, eax, 0
  00161	8d 44 05 d4	 lea	 eax, DWORD PTR _Identity$[ebp+eax]
  00165	6a 04		 push	 4
  00167	59		 pop	 ecx
  00168	c1 e1 00	 shl	 ecx, 0
  0016b	0f 57 c0	 xorps	 xmm0, xmm0
  0016e	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 1517 :     pOut->m[1][0] = pOut->m[1][2] = pOut->m[1][3] =
; 1518 :     pOut->m[2][0] = pOut->m[2][1] = pOut->m[2][3] =
; 1519 :     pOut->m[3][0] = pOut->m[3][1] = pOut->m[3][2] = 0.0f;
; 1520 : 
; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  00173	6a 10		 push	 16			; 00000010H
  00175	58		 pop	 eax
  00176	6b c0 03	 imul	 eax, eax, 3
  00179	8d 44 05 d4	 lea	 eax, DWORD PTR _Identity$[ebp+eax]
  0017d	6a 04		 push	 4
  0017f	59		 pop	 ecx
  00180	6b c9 03	 imul	 ecx, ecx, 3
  00183	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0018b	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  00190	6a 10		 push	 16			; 00000010H
  00192	58		 pop	 eax
  00193	d1 e0		 shl	 eax, 1
  00195	8d 44 05 d4	 lea	 eax, DWORD PTR _Identity$[ebp+eax]
  00199	6a 04		 push	 4
  0019b	59		 pop	 ecx
  0019c	d1 e1		 shl	 ecx, 1
  0019e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001a6	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  001ab	6a 10		 push	 16			; 00000010H
  001ad	58		 pop	 eax
  001ae	c1 e0 00	 shl	 eax, 0
  001b1	8d 44 05 d4	 lea	 eax, DWORD PTR _Identity$[ebp+eax]
  001b5	6a 04		 push	 4
  001b7	59		 pop	 ecx
  001b8	c1 e1 00	 shl	 ecx, 0
  001bb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001c3	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  001c8	6a 10		 push	 16			; 00000010H
  001ca	58		 pop	 eax
  001cb	6b c0 00	 imul	 eax, eax, 0
  001ce	8d 44 05 d4	 lea	 eax, DWORD PTR _Identity$[ebp+eax]
  001d2	6a 04		 push	 4
  001d4	59		 pop	 ecx
  001d5	6b c9 00	 imul	 ecx, ecx, 0
  001d8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001e0	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp

; 147  : 	SetTransform(D3DTS_WORLD, &Identity);

  001e5	8d 45 d4	 lea	 eax, DWORD PTR _Identity$[ebp]
  001e8	50		 push	 eax
  001e9	68 00 01 00 00	 push	 256			; 00000100H
  001ee	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  001f1	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform

; 148  : 	SetTransform(D3DTS_VIEW, &Identity);

  001f6	8d 45 d4	 lea	 eax, DWORD PTR _Identity$[ebp]
  001f9	50		 push	 eax
  001fa	6a 02		 push	 2
  001fc	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  001ff	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform

; 149  : 	SetTransform(D3DTS_PROJECTION, &Identity);

  00204	8d 45 d4	 lea	 eax, DWORD PTR _Identity$[ebp]
  00207	50		 push	 eax
  00208	6a 03		 push	 3
  0020a	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0020d	e8 00 00 00 00	 call	 ?SetTransform@CStateManager@@QAEXW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; CStateManager::SetTransform

; 150  : 
; 151  : 	D3DMATERIAL8 DefaultMat;
; 152  : 	ZeroMemory(&DefaultMat, sizeof(D3DMATERIAL8));

  00212	6a 44		 push	 68			; 00000044H
  00214	6a 00		 push	 0
  00216	8d 45 90	 lea	 eax, DWORD PTR _DefaultMat$[ebp]
  00219	50		 push	 eax
  0021a	e8 00 00 00 00	 call	 _memset
  0021f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 153  : 
; 154  : 	DefaultMat.Diffuse.r = 1.0f;

  00222	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0022a	f3 0f 11 45 90	 movss	 DWORD PTR _DefaultMat$[ebp], xmm0

; 155  : 	DefaultMat.Diffuse.g = 1.0f;

  0022f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00237	f3 0f 11 45 94	 movss	 DWORD PTR _DefaultMat$[ebp+4], xmm0

; 156  : 	DefaultMat.Diffuse.b = 1.0f;

  0023c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00244	f3 0f 11 45 98	 movss	 DWORD PTR _DefaultMat$[ebp+8], xmm0

; 157  : 	DefaultMat.Diffuse.a = 1.0f;

  00249	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00251	f3 0f 11 45 9c	 movss	 DWORD PTR _DefaultMat$[ebp+12], xmm0

; 158  : 	DefaultMat.Ambient.r = 1.0f;

  00256	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0025e	f3 0f 11 45 a0	 movss	 DWORD PTR _DefaultMat$[ebp+16], xmm0

; 159  : 	DefaultMat.Ambient.g = 1.0f;

  00263	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0026b	f3 0f 11 45 a4	 movss	 DWORD PTR _DefaultMat$[ebp+20], xmm0

; 160  : 	DefaultMat.Ambient.b = 1.0f;

  00270	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00278	f3 0f 11 45 a8	 movss	 DWORD PTR _DefaultMat$[ebp+24], xmm0

; 161  : 	DefaultMat.Ambient.a = 1.0f;

  0027d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00285	f3 0f 11 45 ac	 movss	 DWORD PTR _DefaultMat$[ebp+28], xmm0

; 162  : 	DefaultMat.Emissive.r = 0.0f;

  0028a	0f 57 c0	 xorps	 xmm0, xmm0
  0028d	f3 0f 11 45 c0	 movss	 DWORD PTR _DefaultMat$[ebp+48], xmm0

; 163  : 	DefaultMat.Emissive.g = 0.0f;

  00292	0f 57 c0	 xorps	 xmm0, xmm0
  00295	f3 0f 11 45 c4	 movss	 DWORD PTR _DefaultMat$[ebp+52], xmm0

; 164  : 	DefaultMat.Emissive.b = 0.0f;

  0029a	0f 57 c0	 xorps	 xmm0, xmm0
  0029d	f3 0f 11 45 c8	 movss	 DWORD PTR _DefaultMat$[ebp+56], xmm0

; 165  : 	DefaultMat.Emissive.a = 0.0f;

  002a2	0f 57 c0	 xorps	 xmm0, xmm0
  002a5	f3 0f 11 45 cc	 movss	 DWORD PTR _DefaultMat$[ebp+60], xmm0

; 166  : 	DefaultMat.Specular.r = 0.0f;

  002aa	0f 57 c0	 xorps	 xmm0, xmm0
  002ad	f3 0f 11 45 b0	 movss	 DWORD PTR _DefaultMat$[ebp+32], xmm0

; 167  : 	DefaultMat.Specular.g = 0.0f;

  002b2	0f 57 c0	 xorps	 xmm0, xmm0
  002b5	f3 0f 11 45 b4	 movss	 DWORD PTR _DefaultMat$[ebp+36], xmm0

; 168  : 	DefaultMat.Specular.b = 0.0f;

  002ba	0f 57 c0	 xorps	 xmm0, xmm0
  002bd	f3 0f 11 45 b8	 movss	 DWORD PTR _DefaultMat$[ebp+40], xmm0

; 169  : 	DefaultMat.Specular.a = 0.0f;

  002c2	0f 57 c0	 xorps	 xmm0, xmm0
  002c5	f3 0f 11 45 bc	 movss	 DWORD PTR _DefaultMat$[ebp+44], xmm0

; 170  : 	DefaultMat.Power = 0.0f;

  002ca	0f 57 c0	 xorps	 xmm0, xmm0
  002cd	f3 0f 11 45 d0	 movss	 DWORD PTR _DefaultMat$[ebp+64], xmm0

; 171  : 
; 172  : 	SetMaterial(&DefaultMat);

  002d2	8d 45 90	 lea	 eax, DWORD PTR _DefaultMat$[ebp]
  002d5	50		 push	 eax
  002d6	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  002d9	e8 00 00 00 00	 call	 ?SetMaterial@CStateManager@@QAEXPBU_D3DMATERIAL8@@@Z ; CStateManager::SetMaterial

; 173  : 
; 174  : 	SetRenderState(D3DRS_DIFFUSEMATERIALSOURCE, D3DMCS_MATERIAL);

  002de	6a 00		 push	 0
  002e0	68 91 00 00 00	 push	 145			; 00000091H
  002e5	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  002e8	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 175  : 	SetRenderState(D3DRS_SPECULARMATERIALSOURCE, D3DMCS_MATERIAL);

  002ed	6a 00		 push	 0
  002ef	68 92 00 00 00	 push	 146			; 00000092H
  002f4	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  002f7	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 176  : 	SetRenderState(D3DRS_AMBIENTMATERIALSOURCE, D3DMCS_MATERIAL);

  002fc	6a 00		 push	 0
  002fe	68 93 00 00 00	 push	 147			; 00000093H
  00303	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00306	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 177  : 	SetRenderState(D3DRS_EMISSIVEMATERIALSOURCE, D3DMCS_MATERIAL);

  0030b	6a 00		 push	 0
  0030d	68 94 00 00 00	 push	 148			; 00000094H
  00312	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00315	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 178  : 
; 179  : 	SetRenderState(D3DRS_LINEPATTERN, 0xFFFFFFFF);

  0031a	6a ff		 push	 -1
  0031c	6a 0a		 push	 10			; 0000000aH
  0031e	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00321	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 180  : 	SetRenderState(D3DRS_LASTPIXEL, FALSE);

  00326	6a 00		 push	 0
  00328	6a 10		 push	 16			; 00000010H
  0032a	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0032d	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 181  : 	SetRenderState(D3DRS_ALPHAREF, 1);

  00332	6a 01		 push	 1
  00334	6a 18		 push	 24			; 00000018H
  00336	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00339	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 182  : 	SetRenderState(D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL);

  0033e	6a 07		 push	 7
  00340	6a 19		 push	 25			; 00000019H
  00342	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00345	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 183  : 	SetRenderState(D3DRS_ZVISIBLE, FALSE);

  0034a	6a 00		 push	 0
  0034c	6a 1e		 push	 30			; 0000001eH
  0034e	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00351	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 184  : 	SetRenderState(D3DRS_FOGSTART, 0);

  00356	6a 00		 push	 0
  00358	6a 24		 push	 36			; 00000024H
  0035a	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0035d	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 185  : 	SetRenderState(D3DRS_FOGEND, 0);

  00362	6a 00		 push	 0
  00364	6a 25		 push	 37			; 00000025H
  00366	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00369	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 186  : 	SetRenderState(D3DRS_FOGDENSITY, 0);

  0036e	6a 00		 push	 0
  00370	6a 26		 push	 38			; 00000026H
  00372	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00375	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 187  : 	SetRenderState(D3DRS_EDGEANTIALIAS, FALSE);

  0037a	6a 00		 push	 0
  0037c	6a 28		 push	 40			; 00000028H
  0037e	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00381	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 188  : 	SetRenderState(D3DRS_ZBIAS, 0);

  00386	6a 00		 push	 0
  00388	6a 2f		 push	 47			; 0000002fH
  0038a	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0038d	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 189  : 	SetRenderState(D3DRS_STENCILWRITEMASK, 0xFFFFFFFF);

  00392	6a ff		 push	 -1
  00394	6a 3b		 push	 59			; 0000003bH
  00396	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00399	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 190  : 	SetRenderState(D3DRS_AMBIENT, 0x00000000);

  0039e	6a 00		 push	 0
  003a0	68 8b 00 00 00	 push	 139			; 0000008bH
  003a5	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  003a8	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 191  : 	SetRenderState(D3DRS_LOCALVIEWER, FALSE);

  003ad	6a 00		 push	 0
  003af	68 8e 00 00 00	 push	 142			; 0000008eH
  003b4	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  003b7	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 192  : 	SetRenderState(D3DRS_NORMALIZENORMALS, FALSE);

  003bc	6a 00		 push	 0
  003be	68 8f 00 00 00	 push	 143			; 0000008fH
  003c3	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  003c6	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 193  : 	SetRenderState(D3DRS_VERTEXBLEND, D3DVBF_DISABLE);

  003cb	6a 00		 push	 0
  003cd	68 97 00 00 00	 push	 151			; 00000097H
  003d2	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  003d5	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 194  : 	SetRenderState(D3DRS_CLIPPLANEENABLE, 0);

  003da	6a 00		 push	 0
  003dc	68 98 00 00 00	 push	 152			; 00000098H
  003e1	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  003e4	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 195  : 	SetRenderState(D3DRS_SOFTWAREVERTEXPROCESSING, FALSE);

  003e9	6a 00		 push	 0
  003eb	68 99 00 00 00	 push	 153			; 00000099H
  003f0	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  003f3	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 196  : 	SetRenderState(D3DRS_MULTISAMPLEANTIALIAS, FALSE);

  003f8	6a 00		 push	 0
  003fa	68 a1 00 00 00	 push	 161			; 000000a1H
  003ff	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00402	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 197  : 	SetRenderState(D3DRS_MULTISAMPLEMASK, 0xFFFFFFFF);

  00407	6a ff		 push	 -1
  00409	68 a2 00 00 00	 push	 162			; 000000a2H
  0040e	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00411	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 198  : 	SetRenderState(D3DRS_INDEXEDVERTEXBLENDENABLE, FALSE);

  00416	6a 00		 push	 0
  00418	68 a7 00 00 00	 push	 167			; 000000a7H
  0041d	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00420	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 199  : 	SetRenderState(D3DRS_COLORWRITEENABLE, 0xFFFFFFFF);

  00425	6a ff		 push	 -1
  00427	68 a8 00 00 00	 push	 168			; 000000a8H
  0042c	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0042f	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 200  : 	SetRenderState(D3DRS_FILLMODE, D3DFILL_SOLID);

  00434	6a 03		 push	 3
  00436	6a 08		 push	 8
  00438	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0043b	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 201  : 	SetRenderState(D3DRS_SHADEMODE, D3DSHADE_GOURAUD);

  00440	6a 02		 push	 2
  00442	6a 09		 push	 9
  00444	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00447	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 202  : 	SetRenderState(D3DRS_CULLMODE, D3DCULL_CW);

  0044c	6a 02		 push	 2
  0044e	6a 16		 push	 22			; 00000016H
  00450	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00453	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 203  : 	SetRenderState(D3DRS_ALPHABLENDENABLE, FALSE);

  00458	6a 00		 push	 0
  0045a	6a 1b		 push	 27			; 0000001bH
  0045c	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0045f	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 204  : 	SetRenderState(D3DRS_BLENDOP, D3DBLENDOP_ADD);

  00464	6a 01		 push	 1
  00466	68 ab 00 00 00	 push	 171			; 000000abH
  0046b	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0046e	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 205  : 	SetRenderState(D3DRS_SRCBLEND, D3DBLEND_SRCALPHA);

  00473	6a 05		 push	 5
  00475	6a 13		 push	 19			; 00000013H
  00477	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0047a	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 206  : 	SetRenderState(D3DRS_DESTBLEND, D3DBLEND_INVSRCALPHA);

  0047f	6a 06		 push	 6
  00481	6a 14		 push	 20			; 00000014H
  00483	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00486	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 207  : 	SetRenderState(D3DRS_FOGENABLE, FALSE);

  0048b	6a 00		 push	 0
  0048d	6a 1c		 push	 28			; 0000001cH
  0048f	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00492	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 208  : 	SetRenderState(D3DRS_FOGCOLOR, 0xFF000000);

  00497	68 00 00 00 ff	 push	 -16777216		; ff000000H
  0049c	6a 22		 push	 34			; 00000022H
  0049e	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  004a1	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 209  : 	SetRenderState(D3DRS_FOGTABLEMODE, D3DFOG_NONE);

  004a6	6a 00		 push	 0
  004a8	6a 23		 push	 35			; 00000023H
  004aa	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  004ad	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 210  : 	SetRenderState(D3DRS_FOGVERTEXMODE, D3DFOG_LINEAR);

  004b2	6a 03		 push	 3
  004b4	68 8c 00 00 00	 push	 140			; 0000008cH
  004b9	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  004bc	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 211  : 	SetRenderState(D3DRS_RANGEFOGENABLE, FALSE);

  004c1	6a 00		 push	 0
  004c3	6a 30		 push	 48			; 00000030H
  004c5	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  004c8	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 212  : 	SetRenderState(D3DRS_ZENABLE, TRUE);

  004cd	6a 01		 push	 1
  004cf	6a 07		 push	 7
  004d1	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  004d4	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 213  : 	SetRenderState(D3DRS_ZFUNC, D3DCMP_LESSEQUAL);

  004d9	6a 04		 push	 4
  004db	6a 17		 push	 23			; 00000017H
  004dd	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  004e0	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 214  : 	SetRenderState(D3DRS_ZWRITEENABLE, TRUE);

  004e5	6a 01		 push	 1
  004e7	6a 0e		 push	 14			; 0000000eH
  004e9	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  004ec	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 215  : 	SetRenderState(D3DRS_DITHERENABLE, TRUE);

  004f1	6a 01		 push	 1
  004f3	6a 1a		 push	 26			; 0000001aH
  004f5	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  004f8	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 216  : 	SetRenderState(D3DRS_STENCILENABLE, FALSE);

  004fd	6a 00		 push	 0
  004ff	6a 34		 push	 52			; 00000034H
  00501	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00504	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 217  : 	SetRenderState(D3DRS_ALPHATESTENABLE, FALSE);

  00509	6a 00		 push	 0
  0050b	6a 0f		 push	 15			; 0000000fH
  0050d	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00510	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 218  : 	SetRenderState(D3DRS_CLIPPING, TRUE);

  00515	6a 01		 push	 1
  00517	68 88 00 00 00	 push	 136			; 00000088H
  0051c	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0051f	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 219  : 	SetRenderState(D3DRS_LIGHTING, FALSE);

  00524	6a 00		 push	 0
  00526	68 89 00 00 00	 push	 137			; 00000089H
  0052b	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0052e	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 220  : 	SetRenderState(D3DRS_SPECULARENABLE, FALSE);

  00533	6a 00		 push	 0
  00535	6a 1d		 push	 29			; 0000001dH
  00537	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0053a	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 221  : 	SetRenderState(D3DRS_COLORVERTEX, FALSE);

  0053f	6a 00		 push	 0
  00541	68 8d 00 00 00	 push	 141			; 0000008dH
  00546	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00549	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 222  : 	SetRenderState(D3DRS_WRAP0, 0);

  0054e	6a 00		 push	 0
  00550	68 80 00 00 00	 push	 128			; 00000080H
  00555	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00558	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 223  : 	SetRenderState(D3DRS_WRAP1, 0);

  0055d	6a 00		 push	 0
  0055f	68 81 00 00 00	 push	 129			; 00000081H
  00564	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00567	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 224  : 	SetRenderState(D3DRS_WRAP2, 0);

  0056c	6a 00		 push	 0
  0056e	68 82 00 00 00	 push	 130			; 00000082H
  00573	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00576	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 225  : 	SetRenderState(D3DRS_WRAP3, 0);

  0057b	6a 00		 push	 0
  0057d	68 83 00 00 00	 push	 131			; 00000083H
  00582	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00585	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 226  : 	SetRenderState(D3DRS_WRAP4, 0);

  0058a	6a 00		 push	 0
  0058c	68 84 00 00 00	 push	 132			; 00000084H
  00591	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00594	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 227  : 	SetRenderState(D3DRS_WRAP5, 0);

  00599	6a 00		 push	 0
  0059b	68 85 00 00 00	 push	 133			; 00000085H
  005a0	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  005a3	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 228  : 	SetRenderState(D3DRS_WRAP6, 0);

  005a8	6a 00		 push	 0
  005aa	68 86 00 00 00	 push	 134			; 00000086H
  005af	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  005b2	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 229  : 	SetRenderState(D3DRS_WRAP7, 0);

  005b7	6a 00		 push	 0
  005b9	68 87 00 00 00	 push	 135			; 00000087H
  005be	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  005c1	e8 00 00 00 00	 call	 ?SetRenderState@CStateManager@@QAEXW4_D3DRENDERSTATETYPE@@K@Z ; CStateManager::SetRenderState

; 230  : 
; 231  : 	SetTextureStageState(0, D3DTSS_COLOROP, D3DTOP_MODULATE);

  005c6	6a 04		 push	 4
  005c8	6a 01		 push	 1
  005ca	6a 00		 push	 0
  005cc	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  005cf	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 232  : 	SetTextureStageState(0, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  005d4	6a 02		 push	 2
  005d6	6a 02		 push	 2
  005d8	6a 00		 push	 0
  005da	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  005dd	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 233  : 	SetTextureStageState(0, D3DTSS_COLORARG2, D3DTA_CURRENT);

  005e2	6a 01		 push	 1
  005e4	6a 03		 push	 3
  005e6	6a 00		 push	 0
  005e8	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  005eb	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 234  : 	SetTextureStageState(0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  005f0	6a 02		 push	 2
  005f2	6a 05		 push	 5
  005f4	6a 00		 push	 0
  005f6	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  005f9	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 235  : 	SetTextureStageState(0, D3DTSS_ALPHAARG2, D3DTA_CURRENT);

  005fe	6a 01		 push	 1
  00600	6a 06		 push	 6
  00602	6a 00		 push	 0
  00604	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00607	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 236  : 	SetTextureStageState(0, D3DTSS_ALPHAOP, D3DTOP_SELECTARG1);

  0060c	6a 02		 push	 2
  0060e	6a 04		 push	 4
  00610	6a 00		 push	 0
  00612	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00615	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 237  : 
; 238  : 	SetTextureStageState(1, D3DTSS_COLOROP, D3DTOP_DISABLE);

  0061a	6a 01		 push	 1
  0061c	6a 01		 push	 1
  0061e	6a 01		 push	 1
  00620	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00623	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 239  : 	SetTextureStageState(1, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  00628	6a 02		 push	 2
  0062a	6a 02		 push	 2
  0062c	6a 01		 push	 1
  0062e	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00631	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 240  : 	SetTextureStageState(1, D3DTSS_COLORARG2, D3DTA_DIFFUSE);

  00636	6a 00		 push	 0
  00638	6a 03		 push	 3
  0063a	6a 01		 push	 1
  0063c	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0063f	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 241  : 	SetTextureStageState(1, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  00644	6a 01		 push	 1
  00646	6a 04		 push	 4
  00648	6a 01		 push	 1
  0064a	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0064d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 242  : 	SetTextureStageState(1, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  00652	6a 02		 push	 2
  00654	6a 05		 push	 5
  00656	6a 01		 push	 1
  00658	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0065b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 243  : 	SetTextureStageState(1, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE);

  00660	6a 00		 push	 0
  00662	6a 06		 push	 6
  00664	6a 01		 push	 1
  00666	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00669	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 244  : 
; 245  : 	SetTextureStageState(2, D3DTSS_COLOROP, D3DTOP_DISABLE);

  0066e	6a 01		 push	 1
  00670	6a 01		 push	 1
  00672	6a 02		 push	 2
  00674	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00677	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 246  : 	SetTextureStageState(2, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  0067c	6a 02		 push	 2
  0067e	6a 02		 push	 2
  00680	6a 02		 push	 2
  00682	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00685	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 247  : 	SetTextureStageState(2, D3DTSS_COLORARG2, D3DTA_DIFFUSE);

  0068a	6a 00		 push	 0
  0068c	6a 03		 push	 3
  0068e	6a 02		 push	 2
  00690	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00693	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 248  : 	SetTextureStageState(2, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  00698	6a 01		 push	 1
  0069a	6a 04		 push	 4
  0069c	6a 02		 push	 2
  0069e	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  006a1	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 249  : 	SetTextureStageState(2, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  006a6	6a 02		 push	 2
  006a8	6a 05		 push	 5
  006aa	6a 02		 push	 2
  006ac	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  006af	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 250  : 	SetTextureStageState(2, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE);

  006b4	6a 00		 push	 0
  006b6	6a 06		 push	 6
  006b8	6a 02		 push	 2
  006ba	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  006bd	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 251  : 
; 252  : 	SetTextureStageState(3, D3DTSS_COLOROP, D3DTOP_DISABLE);

  006c2	6a 01		 push	 1
  006c4	6a 01		 push	 1
  006c6	6a 03		 push	 3
  006c8	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  006cb	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 253  : 	SetTextureStageState(3, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  006d0	6a 02		 push	 2
  006d2	6a 02		 push	 2
  006d4	6a 03		 push	 3
  006d6	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  006d9	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 254  : 	SetTextureStageState(3, D3DTSS_COLORARG2, D3DTA_DIFFUSE);

  006de	6a 00		 push	 0
  006e0	6a 03		 push	 3
  006e2	6a 03		 push	 3
  006e4	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  006e7	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 255  : 	SetTextureStageState(3, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  006ec	6a 01		 push	 1
  006ee	6a 04		 push	 4
  006f0	6a 03		 push	 3
  006f2	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  006f5	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 256  : 	SetTextureStageState(3, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  006fa	6a 02		 push	 2
  006fc	6a 05		 push	 5
  006fe	6a 03		 push	 3
  00700	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00703	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 257  : 	SetTextureStageState(3, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE);

  00708	6a 00		 push	 0
  0070a	6a 06		 push	 6
  0070c	6a 03		 push	 3
  0070e	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00711	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 258  : 
; 259  : 	SetTextureStageState(4, D3DTSS_COLOROP, D3DTOP_DISABLE);

  00716	6a 01		 push	 1
  00718	6a 01		 push	 1
  0071a	6a 04		 push	 4
  0071c	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0071f	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 260  : 	SetTextureStageState(4, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  00724	6a 02		 push	 2
  00726	6a 02		 push	 2
  00728	6a 04		 push	 4
  0072a	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0072d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 261  : 	SetTextureStageState(4, D3DTSS_COLORARG2, D3DTA_DIFFUSE);

  00732	6a 00		 push	 0
  00734	6a 03		 push	 3
  00736	6a 04		 push	 4
  00738	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0073b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 262  : 	SetTextureStageState(4, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  00740	6a 01		 push	 1
  00742	6a 04		 push	 4
  00744	6a 04		 push	 4
  00746	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00749	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 263  : 	SetTextureStageState(4, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  0074e	6a 02		 push	 2
  00750	6a 05		 push	 5
  00752	6a 04		 push	 4
  00754	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00757	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 264  : 	SetTextureStageState(4, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE);

  0075c	6a 00		 push	 0
  0075e	6a 06		 push	 6
  00760	6a 04		 push	 4
  00762	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00765	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 265  : 
; 266  : 	SetTextureStageState(5, D3DTSS_COLOROP, D3DTOP_DISABLE);

  0076a	6a 01		 push	 1
  0076c	6a 01		 push	 1
  0076e	6a 05		 push	 5
  00770	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00773	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 267  : 	SetTextureStageState(5, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  00778	6a 02		 push	 2
  0077a	6a 02		 push	 2
  0077c	6a 05		 push	 5
  0077e	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00781	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 268  : 	SetTextureStageState(5, D3DTSS_COLORARG2, D3DTA_DIFFUSE);

  00786	6a 00		 push	 0
  00788	6a 03		 push	 3
  0078a	6a 05		 push	 5
  0078c	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0078f	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 269  : 	SetTextureStageState(5, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  00794	6a 01		 push	 1
  00796	6a 04		 push	 4
  00798	6a 05		 push	 5
  0079a	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0079d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 270  : 	SetTextureStageState(5, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  007a2	6a 02		 push	 2
  007a4	6a 05		 push	 5
  007a6	6a 05		 push	 5
  007a8	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  007ab	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 271  : 	SetTextureStageState(5, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE);

  007b0	6a 00		 push	 0
  007b2	6a 06		 push	 6
  007b4	6a 05		 push	 5
  007b6	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  007b9	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 272  : 
; 273  : 	SetTextureStageState(6, D3DTSS_COLOROP, D3DTOP_DISABLE);

  007be	6a 01		 push	 1
  007c0	6a 01		 push	 1
  007c2	6a 06		 push	 6
  007c4	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  007c7	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 274  : 	SetTextureStageState(6, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  007cc	6a 02		 push	 2
  007ce	6a 02		 push	 2
  007d0	6a 06		 push	 6
  007d2	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  007d5	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 275  : 	SetTextureStageState(6, D3DTSS_COLORARG2, D3DTA_DIFFUSE);

  007da	6a 00		 push	 0
  007dc	6a 03		 push	 3
  007de	6a 06		 push	 6
  007e0	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  007e3	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 276  : 	SetTextureStageState(6, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  007e8	6a 01		 push	 1
  007ea	6a 04		 push	 4
  007ec	6a 06		 push	 6
  007ee	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  007f1	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 277  : 	SetTextureStageState(6, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  007f6	6a 02		 push	 2
  007f8	6a 05		 push	 5
  007fa	6a 06		 push	 6
  007fc	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  007ff	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 278  : 	SetTextureStageState(6, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE);

  00804	6a 00		 push	 0
  00806	6a 06		 push	 6
  00808	6a 06		 push	 6
  0080a	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0080d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 279  : 
; 280  : 	SetTextureStageState(7, D3DTSS_COLOROP, D3DTOP_DISABLE);

  00812	6a 01		 push	 1
  00814	6a 01		 push	 1
  00816	6a 07		 push	 7
  00818	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0081b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 281  : 	SetTextureStageState(7, D3DTSS_COLORARG1, D3DTA_TEXTURE);

  00820	6a 02		 push	 2
  00822	6a 02		 push	 2
  00824	6a 07		 push	 7
  00826	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00829	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 282  : 	SetTextureStageState(7, D3DTSS_COLORARG2, D3DTA_DIFFUSE);

  0082e	6a 00		 push	 0
  00830	6a 03		 push	 3
  00832	6a 07		 push	 7
  00834	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00837	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 283  : 	SetTextureStageState(7, D3DTSS_ALPHAOP, D3DTOP_DISABLE);

  0083c	6a 01		 push	 1
  0083e	6a 04		 push	 4
  00840	6a 07		 push	 7
  00842	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00845	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 284  : 	SetTextureStageState(7, D3DTSS_ALPHAARG1, D3DTA_TEXTURE);

  0084a	6a 02		 push	 2
  0084c	6a 05		 push	 5
  0084e	6a 07		 push	 7
  00850	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00853	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 285  : 	SetTextureStageState(7, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE);

  00858	6a 00		 push	 0
  0085a	6a 06		 push	 6
  0085c	6a 07		 push	 7
  0085e	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00861	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 286  : 
; 287  : 	SetTextureStageState(0, D3DTSS_TEXCOORDINDEX, 0);

  00866	6a 00		 push	 0
  00868	6a 0b		 push	 11			; 0000000bH
  0086a	6a 00		 push	 0
  0086c	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0086f	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 288  : 	SetTextureStageState(1, D3DTSS_TEXCOORDINDEX, 1);

  00874	6a 01		 push	 1
  00876	6a 0b		 push	 11			; 0000000bH
  00878	6a 01		 push	 1
  0087a	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0087d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 289  : 	SetTextureStageState(2, D3DTSS_TEXCOORDINDEX, 2);

  00882	6a 02		 push	 2
  00884	6a 0b		 push	 11			; 0000000bH
  00886	6a 02		 push	 2
  00888	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0088b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 290  : 	SetTextureStageState(3, D3DTSS_TEXCOORDINDEX, 3);

  00890	6a 03		 push	 3
  00892	6a 0b		 push	 11			; 0000000bH
  00894	6a 03		 push	 3
  00896	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00899	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 291  : 	SetTextureStageState(4, D3DTSS_TEXCOORDINDEX, 4);

  0089e	6a 04		 push	 4
  008a0	6a 0b		 push	 11			; 0000000bH
  008a2	6a 04		 push	 4
  008a4	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  008a7	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 292  : 	SetTextureStageState(5, D3DTSS_TEXCOORDINDEX, 5);

  008ac	6a 05		 push	 5
  008ae	6a 0b		 push	 11			; 0000000bH
  008b0	6a 05		 push	 5
  008b2	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  008b5	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 293  : 	SetTextureStageState(6, D3DTSS_TEXCOORDINDEX, 6);

  008ba	6a 06		 push	 6
  008bc	6a 0b		 push	 11			; 0000000bH
  008be	6a 06		 push	 6
  008c0	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  008c3	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 294  : 	SetTextureStageState(7, D3DTSS_TEXCOORDINDEX, 7);

  008c8	6a 07		 push	 7
  008ca	6a 0b		 push	 11			; 0000000bH
  008cc	6a 07		 push	 7
  008ce	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  008d1	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 295  : 
; 296  : 	SetTextureStageState(0, D3DTSS_MINFILTER, D3DTEXF_LINEAR);

  008d6	6a 02		 push	 2
  008d8	6a 11		 push	 17			; 00000011H
  008da	6a 00		 push	 0
  008dc	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  008df	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 297  : 	SetTextureStageState(0, D3DTSS_MAGFILTER, D3DTEXF_LINEAR);

  008e4	6a 02		 push	 2
  008e6	6a 10		 push	 16			; 00000010H
  008e8	6a 00		 push	 0
  008ea	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  008ed	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 298  : 	SetTextureStageState(0, D3DTSS_MIPFILTER, D3DTEXF_LINEAR);

  008f2	6a 02		 push	 2
  008f4	6a 12		 push	 18			; 00000012H
  008f6	6a 00		 push	 0
  008f8	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  008fb	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 299  : 
; 300  : 	SetTextureStageState(1, D3DTSS_MINFILTER, D3DTEXF_LINEAR);

  00900	6a 02		 push	 2
  00902	6a 11		 push	 17			; 00000011H
  00904	6a 01		 push	 1
  00906	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00909	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 301  : 	SetTextureStageState(1, D3DTSS_MAGFILTER, D3DTEXF_LINEAR);

  0090e	6a 02		 push	 2
  00910	6a 10		 push	 16			; 00000010H
  00912	6a 01		 push	 1
  00914	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00917	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 302  : 	SetTextureStageState(1, D3DTSS_MIPFILTER, D3DTEXF_LINEAR);

  0091c	6a 02		 push	 2
  0091e	6a 12		 push	 18			; 00000012H
  00920	6a 01		 push	 1
  00922	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00925	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 303  : 
; 304  : 	SetTextureStageState(2, D3DTSS_MINFILTER, D3DTEXF_LINEAR);

  0092a	6a 02		 push	 2
  0092c	6a 11		 push	 17			; 00000011H
  0092e	6a 02		 push	 2
  00930	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00933	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 305  : 	SetTextureStageState(2, D3DTSS_MAGFILTER, D3DTEXF_LINEAR);

  00938	6a 02		 push	 2
  0093a	6a 10		 push	 16			; 00000010H
  0093c	6a 02		 push	 2
  0093e	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00941	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 306  : 	SetTextureStageState(2, D3DTSS_MIPFILTER, D3DTEXF_LINEAR);

  00946	6a 02		 push	 2
  00948	6a 12		 push	 18			; 00000012H
  0094a	6a 02		 push	 2
  0094c	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0094f	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 307  : 
; 308  : 	SetTextureStageState(3, D3DTSS_MINFILTER, D3DTEXF_LINEAR);

  00954	6a 02		 push	 2
  00956	6a 11		 push	 17			; 00000011H
  00958	6a 03		 push	 3
  0095a	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0095d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 309  : 	SetTextureStageState(3, D3DTSS_MAGFILTER, D3DTEXF_LINEAR);

  00962	6a 02		 push	 2
  00964	6a 10		 push	 16			; 00000010H
  00966	6a 03		 push	 3
  00968	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  0096b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 310  : 	SetTextureStageState(3, D3DTSS_MIPFILTER, D3DTEXF_LINEAR);

  00970	6a 02		 push	 2
  00972	6a 12		 push	 18			; 00000012H
  00974	6a 03		 push	 3
  00976	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00979	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 311  : 
; 312  : 	SetTextureStageState(4, D3DTSS_MINFILTER, D3DTEXF_LINEAR);

  0097e	6a 02		 push	 2
  00980	6a 11		 push	 17			; 00000011H
  00982	6a 04		 push	 4
  00984	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00987	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 313  : 	SetTextureStageState(4, D3DTSS_MAGFILTER, D3DTEXF_LINEAR);

  0098c	6a 02		 push	 2
  0098e	6a 10		 push	 16			; 00000010H
  00990	6a 04		 push	 4
  00992	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00995	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 314  : 	SetTextureStageState(4, D3DTSS_MIPFILTER, D3DTEXF_LINEAR);

  0099a	6a 02		 push	 2
  0099c	6a 12		 push	 18			; 00000012H
  0099e	6a 04		 push	 4
  009a0	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  009a3	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 315  : 
; 316  : 	SetTextureStageState(5, D3DTSS_MINFILTER, D3DTEXF_LINEAR);

  009a8	6a 02		 push	 2
  009aa	6a 11		 push	 17			; 00000011H
  009ac	6a 05		 push	 5
  009ae	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  009b1	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 317  : 	SetTextureStageState(5, D3DTSS_MAGFILTER, D3DTEXF_LINEAR);

  009b6	6a 02		 push	 2
  009b8	6a 10		 push	 16			; 00000010H
  009ba	6a 05		 push	 5
  009bc	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  009bf	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 318  : 	SetTextureStageState(5, D3DTSS_MIPFILTER, D3DTEXF_LINEAR);

  009c4	6a 02		 push	 2
  009c6	6a 12		 push	 18			; 00000012H
  009c8	6a 05		 push	 5
  009ca	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  009cd	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 319  : 
; 320  : 	SetTextureStageState(6, D3DTSS_MINFILTER, D3DTEXF_LINEAR);

  009d2	6a 02		 push	 2
  009d4	6a 11		 push	 17			; 00000011H
  009d6	6a 06		 push	 6
  009d8	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  009db	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 321  : 	SetTextureStageState(6, D3DTSS_MAGFILTER, D3DTEXF_LINEAR);

  009e0	6a 02		 push	 2
  009e2	6a 10		 push	 16			; 00000010H
  009e4	6a 06		 push	 6
  009e6	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  009e9	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 322  : 	SetTextureStageState(6, D3DTSS_MIPFILTER, D3DTEXF_LINEAR);

  009ee	6a 02		 push	 2
  009f0	6a 12		 push	 18			; 00000012H
  009f2	6a 06		 push	 6
  009f4	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  009f7	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 323  : 
; 324  : 	SetTextureStageState(7, D3DTSS_MINFILTER, D3DTEXF_LINEAR);

  009fc	6a 02		 push	 2
  009fe	6a 11		 push	 17			; 00000011H
  00a00	6a 07		 push	 7
  00a02	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00a05	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 325  : 	SetTextureStageState(7, D3DTSS_MAGFILTER, D3DTEXF_LINEAR);

  00a0a	6a 02		 push	 2
  00a0c	6a 10		 push	 16			; 00000010H
  00a0e	6a 07		 push	 7
  00a10	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00a13	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 326  : 	SetTextureStageState(7, D3DTSS_MIPFILTER, D3DTEXF_LINEAR);

  00a18	6a 02		 push	 2
  00a1a	6a 12		 push	 18			; 00000012H
  00a1c	6a 07		 push	 7
  00a1e	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00a21	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 327  : 
; 328  : 	SetTextureStageState(0, D3DTSS_ADDRESSU, D3DTADDRESS_WRAP);

  00a26	6a 01		 push	 1
  00a28	6a 0d		 push	 13			; 0000000dH
  00a2a	6a 00		 push	 0
  00a2c	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00a2f	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 329  : 	SetTextureStageState(0, D3DTSS_ADDRESSV, D3DTADDRESS_WRAP);

  00a34	6a 01		 push	 1
  00a36	6a 0e		 push	 14			; 0000000eH
  00a38	6a 00		 push	 0
  00a3a	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00a3d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 330  : 	SetTextureStageState(1, D3DTSS_ADDRESSU, D3DTADDRESS_WRAP);

  00a42	6a 01		 push	 1
  00a44	6a 0d		 push	 13			; 0000000dH
  00a46	6a 01		 push	 1
  00a48	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00a4b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 331  : 	SetTextureStageState(1, D3DTSS_ADDRESSV, D3DTADDRESS_WRAP);

  00a50	6a 01		 push	 1
  00a52	6a 0e		 push	 14			; 0000000eH
  00a54	6a 01		 push	 1
  00a56	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00a59	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 332  : 	SetTextureStageState(2, D3DTSS_ADDRESSU, D3DTADDRESS_WRAP);

  00a5e	6a 01		 push	 1
  00a60	6a 0d		 push	 13			; 0000000dH
  00a62	6a 02		 push	 2
  00a64	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00a67	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 333  : 	SetTextureStageState(2, D3DTSS_ADDRESSV, D3DTADDRESS_WRAP);

  00a6c	6a 01		 push	 1
  00a6e	6a 0e		 push	 14			; 0000000eH
  00a70	6a 02		 push	 2
  00a72	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00a75	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 334  : 	SetTextureStageState(3, D3DTSS_ADDRESSU, D3DTADDRESS_WRAP);

  00a7a	6a 01		 push	 1
  00a7c	6a 0d		 push	 13			; 0000000dH
  00a7e	6a 03		 push	 3
  00a80	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00a83	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 335  : 	SetTextureStageState(3, D3DTSS_ADDRESSV, D3DTADDRESS_WRAP);

  00a88	6a 01		 push	 1
  00a8a	6a 0e		 push	 14			; 0000000eH
  00a8c	6a 03		 push	 3
  00a8e	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00a91	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 336  : 	SetTextureStageState(4, D3DTSS_ADDRESSU, D3DTADDRESS_WRAP);

  00a96	6a 01		 push	 1
  00a98	6a 0d		 push	 13			; 0000000dH
  00a9a	6a 04		 push	 4
  00a9c	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00a9f	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 337  : 	SetTextureStageState(4, D3DTSS_ADDRESSV, D3DTADDRESS_WRAP);

  00aa4	6a 01		 push	 1
  00aa6	6a 0e		 push	 14			; 0000000eH
  00aa8	6a 04		 push	 4
  00aaa	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00aad	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 338  : 	SetTextureStageState(5, D3DTSS_ADDRESSU, D3DTADDRESS_WRAP);

  00ab2	6a 01		 push	 1
  00ab4	6a 0d		 push	 13			; 0000000dH
  00ab6	6a 05		 push	 5
  00ab8	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00abb	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 339  : 	SetTextureStageState(5, D3DTSS_ADDRESSV, D3DTADDRESS_WRAP);

  00ac0	6a 01		 push	 1
  00ac2	6a 0e		 push	 14			; 0000000eH
  00ac4	6a 05		 push	 5
  00ac6	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00ac9	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 340  : 	SetTextureStageState(6, D3DTSS_ADDRESSU, D3DTADDRESS_WRAP);

  00ace	6a 01		 push	 1
  00ad0	6a 0d		 push	 13			; 0000000dH
  00ad2	6a 06		 push	 6
  00ad4	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00ad7	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 341  : 	SetTextureStageState(6, D3DTSS_ADDRESSV, D3DTADDRESS_WRAP);

  00adc	6a 01		 push	 1
  00ade	6a 0e		 push	 14			; 0000000eH
  00ae0	6a 06		 push	 6
  00ae2	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00ae5	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 342  : 	SetTextureStageState(7, D3DTSS_ADDRESSU, D3DTADDRESS_WRAP);

  00aea	6a 01		 push	 1
  00aec	6a 0d		 push	 13			; 0000000dH
  00aee	6a 07		 push	 7
  00af0	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00af3	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 343  : 	SetTextureStageState(7, D3DTSS_ADDRESSV, D3DTADDRESS_WRAP);

  00af8	6a 01		 push	 1
  00afa	6a 0e		 push	 14			; 0000000eH
  00afc	6a 07		 push	 7
  00afe	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00b01	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 344  : 
; 345  : 	SetTextureStageState(0, D3DTSS_TEXTURETRANSFORMFLAGS, 0);

  00b06	6a 00		 push	 0
  00b08	6a 18		 push	 24			; 00000018H
  00b0a	6a 00		 push	 0
  00b0c	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00b0f	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 346  : 	SetTextureStageState(1, D3DTSS_TEXTURETRANSFORMFLAGS, 0);

  00b14	6a 00		 push	 0
  00b16	6a 18		 push	 24			; 00000018H
  00b18	6a 01		 push	 1
  00b1a	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00b1d	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 347  : 	SetTextureStageState(2, D3DTSS_TEXTURETRANSFORMFLAGS, 0);

  00b22	6a 00		 push	 0
  00b24	6a 18		 push	 24			; 00000018H
  00b26	6a 02		 push	 2
  00b28	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00b2b	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 348  : 	SetTextureStageState(3, D3DTSS_TEXTURETRANSFORMFLAGS, 0);

  00b30	6a 00		 push	 0
  00b32	6a 18		 push	 24			; 00000018H
  00b34	6a 03		 push	 3
  00b36	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00b39	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 349  : 	SetTextureStageState(4, D3DTSS_TEXTURETRANSFORMFLAGS, 0);

  00b3e	6a 00		 push	 0
  00b40	6a 18		 push	 24			; 00000018H
  00b42	6a 04		 push	 4
  00b44	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00b47	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 350  : 	SetTextureStageState(5, D3DTSS_TEXTURETRANSFORMFLAGS, 0);

  00b4c	6a 00		 push	 0
  00b4e	6a 18		 push	 24			; 00000018H
  00b50	6a 05		 push	 5
  00b52	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00b55	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 351  : 	SetTextureStageState(6, D3DTSS_TEXTURETRANSFORMFLAGS, 0);

  00b5a	6a 00		 push	 0
  00b5c	6a 18		 push	 24			; 00000018H
  00b5e	6a 06		 push	 6
  00b60	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00b63	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 352  : 	SetTextureStageState(7, D3DTSS_TEXTURETRANSFORMFLAGS, 0);

  00b68	6a 00		 push	 0
  00b6a	6a 18		 push	 24			; 00000018H
  00b6c	6a 07		 push	 7
  00b6e	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00b71	e8 00 00 00 00	 call	 ?SetTextureStageState@CStateManager@@QAEXKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; CStateManager::SetTextureStageState

; 353  : 
; 354  : 	SetTexture(0, NULL);

  00b76	6a 00		 push	 0
  00b78	6a 00		 push	 0
  00b7a	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00b7d	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 355  : 	SetTexture(1, NULL);

  00b82	6a 00		 push	 0
  00b84	6a 01		 push	 1
  00b86	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00b89	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 356  : 	SetTexture(2, NULL);

  00b8e	6a 00		 push	 0
  00b90	6a 02		 push	 2
  00b92	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00b95	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 357  : 	SetTexture(3, NULL);

  00b9a	6a 00		 push	 0
  00b9c	6a 03		 push	 3
  00b9e	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00ba1	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 358  : 	SetTexture(4, NULL);

  00ba6	6a 00		 push	 0
  00ba8	6a 04		 push	 4
  00baa	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00bad	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 359  : 	SetTexture(5, NULL);

  00bb2	6a 00		 push	 0
  00bb4	6a 05		 push	 5
  00bb6	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00bb9	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 360  : 	SetTexture(6, NULL);

  00bbe	6a 00		 push	 0
  00bc0	6a 06		 push	 6
  00bc2	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00bc5	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 361  : 	SetTexture(7, NULL);

  00bca	6a 00		 push	 0
  00bcc	6a 07		 push	 7
  00bce	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00bd1	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 362  : 
; 363  : 	SetPixelShader(0);

  00bd6	6a 00		 push	 0
  00bd8	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00bdb	e8 00 00 00 00	 call	 ?SetPixelShader@CStateManager@@QAEXK@Z ; CStateManager::SetPixelShader

; 364  : 	SetVertexShader(D3DFVF_XYZ);

  00be0	6a 02		 push	 2
  00be2	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00be5	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 365  : 
; 366  : 	D3DXVECTOR4 av4Null[STATEMANAGER_MAX_VCONSTANTS];

  00bea	c7 45 88 60 00
	00 00		 mov	 DWORD PTR ___n$[ebp], 96 ; 00000060H
  00bf1	8d 45 14	 lea	 eax, DWORD PTR _av4Null$[ebp]
  00bf4	89 45 84	 mov	 DWORD PTR ___t$[ebp], eax
$LN8@SetDefault:
  00bf7	8b 45 88	 mov	 eax, DWORD PTR ___n$[ebp]
  00bfa	89 45 80	 mov	 DWORD PTR tv937[ebp], eax
  00bfd	8b 45 88	 mov	 eax, DWORD PTR ___n$[ebp]
  00c00	48		 dec	 eax
  00c01	89 45 88	 mov	 DWORD PTR ___n$[ebp], eax
  00c04	83 7d 80 00	 cmp	 DWORD PTR tv937[ebp], 0
  00c08	76 0b		 jbe	 SHORT $LN9@SetDefault
  00c0a	8b 45 84	 mov	 eax, DWORD PTR ___t$[ebp]
  00c0d	83 c0 10	 add	 eax, 16			; 00000010H
  00c10	89 45 84	 mov	 DWORD PTR ___t$[ebp], eax
  00c13	eb e2		 jmp	 SHORT $LN8@SetDefault
$LN9@SetDefault:

; 367  : 	memset(av4Null, 0, sizeof(av4Null));

  00c15	68 00 06 00 00	 push	 1536			; 00000600H
  00c1a	6a 00		 push	 0
  00c1c	8d 45 14	 lea	 eax, DWORD PTR _av4Null$[ebp]
  00c1f	50		 push	 eax
  00c20	e8 00 00 00 00	 call	 _memset
  00c25	83 c4 0c	 add	 esp, 12			; 0000000cH

; 368  : 	SetVertexShaderConstant(0, av4Null, STATEMANAGER_MAX_VCONSTANTS);

  00c28	6a 60		 push	 96			; 00000060H
  00c2a	8d 45 14	 lea	 eax, DWORD PTR _av4Null$[ebp]
  00c2d	50		 push	 eax
  00c2e	6a 00		 push	 0
  00c30	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00c33	e8 00 00 00 00	 call	 ?SetVertexShaderConstant@CStateManager@@QAEXKPBXK@Z ; CStateManager::SetVertexShaderConstant

; 369  : 	SetPixelShaderConstant(0, av4Null, STATEMANAGER_MAX_PCONSTANTS);

  00c38	6a 08		 push	 8
  00c3a	8d 45 14	 lea	 eax, DWORD PTR _av4Null$[ebp]
  00c3d	50		 push	 eax
  00c3e	6a 00		 push	 0
  00c40	8b 4d 8c	 mov	 ecx, DWORD PTR _this$[ebp]
  00c43	e8 00 00 00 00	 call	 ?SetPixelShaderConstant@CStateManager@@QAEXKPBXK@Z ; CStateManager::SetPixelShaderConstant

; 370  : 
; 371  : 	m_bForce = false;

  00c48	8b 45 8c	 mov	 eax, DWORD PTR _this$[ebp]
  00c4b	c6 80 6c 33 01
	00 00		 mov	 BYTE PTR [eax+78700], 0

; 372  : 
; 373  : #ifdef _DEBUG
; 374  : 	int i, j;
; 375  : 	for (i = 0; i < STATEMANAGER_MAX_RENDERSTATES; i++)
; 376  : 		m_bRenderStateSavingFlag[i] = FALSE;
; 377  : 
; 378  : 	for (j = 0; j < STATEMANAGER_MAX_TRANSFORMSTATES; j++)
; 379  : 		m_bTransformSavingFlag[j] = FALSE;
; 380  : 
; 381  : 	for (j = 0; j < STATEMANAGER_MAX_STAGES; ++j)
; 382  : 		for (i = 0; i < STATEMANAGER_MAX_TEXTURESTATES; ++i)
; 383  : 			m_bTextureStageStateSavingFlag[j][i] = FALSE;
; 384  : #endif _DEBUG
; 385  : }

  00c52	8b 8d 14 06 00
	00		 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00c58	33 cd		 xor	 ecx, ebp
  00c5a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00c5f	81 c5 18 06 00
	00		 add	 ebp, 1560		; 00000618H
  00c65	c9		 leave
  00c66	c3		 ret	 0
?SetDefaultState@CStateManager@@QAEXXZ ENDP		; CStateManager::SetDefaultState
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ??1CStateManager@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CStateManager@@UAE@XZ PROC				; CStateManager::~CStateManager, COMDAT
; _this$ = ecx

; 66   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CStateManager@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00029	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CStateManager@@6B@

; 67   : 	if (m_lpD3DDev)

  0002f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00032	83 b8 78 33 01
	00 00		 cmp	 DWORD PTR [eax+78712], 0
  00039	74 21		 je	 SHORT $LN1@CStateMana

; 68   : 	{
; 69   : 		m_lpD3DDev->Release();

  0003b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 80 78 33 01
	00		 mov	 eax, DWORD PTR [eax+78712]
  00044	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	8b 00		 mov	 eax, DWORD PTR [eax]
  00049	ff b1 78 33 01
	00		 push	 DWORD PTR [ecx+78712]
  0004f	ff 50 08	 call	 DWORD PTR [eax+8]

; 70   : 		m_lpD3DDev = NULL;

  00052	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00055	83 a0 78 33 01
	00 00		 and	 DWORD PTR [eax+78712], 0
$LN1@CStateMana:

; 72   : }

  0005c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005f	81 c1 60 33 01
	00		 add	 ecx, 78688		; 00013360H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 673  :         _Tidy();

  00065	e8 00 00 00 00	 call	 ?_Tidy@?$vector@VCStateID@@V?$allocator@VCStateID@@@std@@@std@@AAEXXZ ; std::vector<CStateID,std::allocator<CStateID> >::_Tidy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 19   : 	{ 

  0006a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0006d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CSingleton@VCStateManager@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0; 

  00073	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A, 0 ; CSingleton<CStateManager>::ms_singleton
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp

; 72   : }

  0007a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00084	59		 pop	 ecx
  00085	c9		 leave
  00086	c3		 ret	 0
  00087	cc		 int	 3
  00088	cc		 int	 3
  00089	cc		 int	 3
  0008a	cc		 int	 3
  0008b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CStateManager@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CStateManager@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CStateManager@@UAE@XZ ENDP				; CStateManager::~CStateManager
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp
;	COMDAT ??0CStateManager@@QAE@PAUIDirect3DDevice8@@@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
_this$ = -28						; size = 4
_offset$2 = -24						; size = 4
_this$3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_lpDevice$ = 8						; size = 4
??0CStateManager@@QAE@PAUIDirect3DDevice8@@@Z PROC	; CStateManager::CStateManager, COMDAT
; _this$ = ecx

; 58   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CStateManager@@QAE@PAUIDirect3DDevice8@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 14	 sub	 esp, 20			; 00000014H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h

; 12   : 	{ 

  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CSingleton@VCStateManager@@@@6B@

; 13   : 		assert(!ms_singleton);
; 14   : 		int offset = (int) (T*) 1 - (int) (CSingleton <T>*) (T*) 1; 

  00031	33 c0		 xor	 eax, eax
  00033	89 45 e8	 mov	 DWORD PTR _offset$2[ebp], eax

; 15   : 		ms_singleton = (T*) ((int) this + offset);

  00036	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00039	03 45 e8	 add	 eax, DWORD PTR _offset$2[ebp]
  0003c	a3 00 00 00 00	 mov	 DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A, eax ; CSingleton<CStateManager>::ms_singleton
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp

; 58   : {

  00041	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00045	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00048	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CStateManager@@6B@
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	83 c1 04	 add	 ecx, 4
  00054	e8 00 00 00 00	 call	 ??0CStateManagerState@@QAE@XZ ; CStateManagerState::CStateManagerState
  00059	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	81 c1 78 66 00
	00		 add	 ecx, 26232		; 00006678H
  00062	e8 00 00 00 00	 call	 ??0CStateManagerState@@QAE@XZ ; CStateManagerState::CStateManagerState
  00067	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	81 c1 ec cc 00
	00		 add	 ecx, 52460		; 0000ccecH
  00070	e8 00 00 00 00	 call	 ??0CStateManagerState@@QAE@XZ ; CStateManagerState::CStateManagerState
  00075	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00078	05 60 33 01 00	 add	 eax, 78688		; 00013360H
  0007d	89 45 e4	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 445  :     vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

  00080	8b 45 e4	 mov	 eax, DWORD PTR _this$[ebp]
  00083	89 45 e0	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  00086	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00089	89 45 ec	 mov	 DWORD PTR _this$3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  0008c	8b 45 ec	 mov	 eax, DWORD PTR _this$3[ebp]
  0008f	83 20 00	 and	 DWORD PTR [eax], 0
  00092	8b 45 ec	 mov	 eax, DWORD PTR _this$3[ebp]
  00095	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  00099	8b 45 ec	 mov	 eax, DWORD PTR _this$3[ebp]
  0009c	83 60 08 00	 and	 DWORD PTR [eax+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.cpp

; 58   : {

  000a0	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1

; 57   : CStateManager::CStateManager(LPDIRECT3DDEVICE8 lpDevice) : m_lpD3DDev(NULL)

  000a4	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000a7	83 a0 78 33 01
	00 00		 and	 DWORD PTR [eax+78712], 0

; 59   : 	m_bScene = false;

  000ae	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000b1	c6 80 6d 33 01
	00 00		 mov	 BYTE PTR [eax+78701], 0

; 60   : 	m_dwBestMinFilter = D3DTEXF_LINEAR;

  000b8	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000bb	c7 80 70 33 01
	00 02 00 00 00	 mov	 DWORD PTR [eax+78704], 2

; 61   : 	m_dwBestMagFilter = D3DTEXF_LINEAR;

  000c5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000c8	c7 80 74 33 01
	00 02 00 00 00	 mov	 DWORD PTR [eax+78708], 2

; 62   : 	SetDevice(lpDevice);

  000d2	ff 75 08	 push	 DWORD PTR _lpDevice$[ebp]
  000d5	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d8	e8 00 00 00 00	 call	 ?SetDevice@CStateManager@@AAEXPAUIDirect3DDevice8@@@Z ; CStateManager::SetDevice

; 63   : }

  000dd	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  000e1	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000e7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ee	59		 pop	 ecx
  000ef	c9		 leave
  000f0	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CStateManager@@QAE@PAUIDirect3DDevice8@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CSingleton@VCStateManager@@@@UAE@XZ ; CSingleton<CStateManager>::~CSingleton<CStateManager>
__unwindfunclet$??0CStateManager@@QAE@PAUIDirect3DDevice8@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 60 33 01
	00		 add	 ecx, 78688		; 00013360H
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@VCStateID@@V?$allocator@VCStateID@@@std@@@std@@QAE@XZ ; std::vector<CStateID,std::allocator<CStateID> >::~vector<CStateID,std::allocator<CStateID> >
  00016	cc		 int	 3
  00017	cc		 int	 3
  00018	cc		 int	 3
  00019	cc		 int	 3
  0001a	cc		 int	 3
__ehhandler$??0CStateManager@@QAE@PAUIDirect3DDevice8@@@Z:
  0001b	90		 npad	 1
  0001c	90		 npad	 1
  0001d	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00021	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00024	8b 4a e8	 mov	 ecx, DWORD PTR [edx-24]
  00027	33 c8		 xor	 ecx, eax
  00029	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0002e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CStateManager@@QAE@PAUIDirect3DDevice8@@@Z
  00033	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CStateManager@@QAE@PAUIDirect3DDevice8@@@Z ENDP	; CStateManager::CStateManager
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
;	COMDAT ??_G?$CSingleton@VCStateManager@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$CSingleton@VCStateManager@@@@UAEPAXI@Z PROC	; CSingleton<CStateManager>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 19   : 	{ 

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CSingleton@VCStateManager@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0; 

  00010	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A, 0 ; CSingleton<CStateManager>::ms_singleton
  00017	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  0001a	83 e0 01	 and	 eax, 1
  0001d	74 0c		 je	 SHORT $LN2@scalar
  0001f	6a 04		 push	 4
  00021	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	59		 pop	 ecx
  0002a	59		 pop	 ecx
$LN2@scalar:
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c9		 leave
  0002f	c2 04 00	 ret	 4
??_G?$CSingleton@VCStateManager@@@@UAEPAXI@Z ENDP	; CSingleton<CStateManager>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterBase\Singleton.h
;	COMDAT ??1?$CSingleton@VCStateManager@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CSingleton@VCStateManager@@@@UAE@XZ PROC		; CSingleton<CStateManager>::~CSingleton<CStateManager>, COMDAT
; _this$ = ecx

; 19   : 	{ 

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CSingleton@VCStateManager@@@@6B@

; 20   : 		assert(ms_singleton);
; 21   : 		ms_singleton = 0; 

  00010	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A, 0 ; CSingleton<CStateManager>::ms_singleton

; 22   : 	}

  00017	c9		 leave
  00018	c3		 ret	 0
??1?$CSingleton@VCStateManager@@@@UAE@XZ ENDP		; CSingleton<CStateManager>::~CSingleton<CStateManager>
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h
;	COMDAT ?ResetState@CStateManagerState@@QAEXXZ
_TEXT	SEGMENT
$T1 = -64						; size = 16
$T2 = -48						; size = 16
$T3 = -32						; size = 8
$T4 = -24						; size = 8
_y$ = -16						; size = 4
_this$ = -12						; size = 4
_pOut$ = -8						; size = 4
_i$ = -4						; size = 4
?ResetState@CStateManagerState@@QAEXXZ PROC		; CStateManagerState::ResetState, COMDAT
; _this$ = ecx

; 167  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 168  : 			DWORD i, y;
; 169  : 
; 170  : 			for (i = 0; i < STATEMANAGER_MAX_RENDERSTATES; i++)

  0000b	83 65 fc 00	 and	 DWORD PTR _i$[ebp], 0
  0000f	eb 07		 jmp	 SHORT $LN4@ResetState
$LN2@ResetState:
  00011	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00014	40		 inc	 eax
  00015	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN4@ResetState:
  00018	81 7d fc 00 01
	00 00		 cmp	 DWORD PTR _i$[ebp], 256	; 00000100H
  0001f	73 0f		 jae	 SHORT $LN3@ResetState

; 171  : 				m_RenderStates[i] = 0x7FFFFFFF;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00024	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00027	c7 04 81 ff ff
	ff 7f		 mov	 DWORD PTR [ecx+eax*4], 2147483647 ; 7fffffffH
  0002e	eb e1		 jmp	 SHORT $LN2@ResetState
$LN3@ResetState:

; 172  : 
; 173  : 			for (i = 0; i < STATEMANAGER_MAX_STAGES; i++)

  00030	83 65 fc 00	 and	 DWORD PTR _i$[ebp], 0
  00034	eb 07		 jmp	 SHORT $LN7@ResetState
$LN5@ResetState:
  00036	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00039	40		 inc	 eax
  0003a	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN7@ResetState:
  0003d	83 7d fc 08	 cmp	 DWORD PTR _i$[ebp], 8
  00041	73 34		 jae	 SHORT $LN6@ResetState

; 174  : 				for (y = 0; y < STATEMANAGER_MAX_TEXTURESTATES; y++)

  00043	83 65 f0 00	 and	 DWORD PTR _y$[ebp], 0
  00047	eb 07		 jmp	 SHORT $LN10@ResetState
$LN8@ResetState:
  00049	8b 45 f0	 mov	 eax, DWORD PTR _y$[ebp]
  0004c	40		 inc	 eax
  0004d	89 45 f0	 mov	 DWORD PTR _y$[ebp], eax
$LN10@ResetState:
  00050	81 7d f0 80 00
	00 00		 cmp	 DWORD PTR _y$[ebp], 128	; 00000080H
  00057	73 1c		 jae	 SHORT $LN9@ResetState

; 175  : 					m_TextureStates[i][y] = 0x7FFFFFFF;

  00059	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0005c	c1 e0 09	 shl	 eax, 9
  0005f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	8d 84 01 00 04
	00 00		 lea	 eax, DWORD PTR [ecx+eax+1024]
  00069	8b 4d f0	 mov	 ecx, DWORD PTR _y$[ebp]
  0006c	c7 04 88 ff ff
	ff 7f		 mov	 DWORD PTR [eax+ecx*4], 2147483647 ; 7fffffffH
  00073	eb d4		 jmp	 SHORT $LN8@ResetState
$LN9@ResetState:
  00075	eb bf		 jmp	 SHORT $LN5@ResetState
$LN6@ResetState:

; 176  : 
; 177  : 			for (i = 0; i < STATEMANAGER_MAX_STREAMS; i++)

  00077	83 65 fc 00	 and	 DWORD PTR _i$[ebp], 0
  0007b	eb 07		 jmp	 SHORT $LN13@ResetState
$LN11@ResetState:
  0007d	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00080	40		 inc	 eax
  00081	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN13@ResetState:
  00084	83 7d fc 10	 cmp	 DWORD PTR _i$[ebp], 16	; 00000010H
  00088	73 24		 jae	 SHORT $LN12@ResetState

; 70   : 		CStreamData(LPDIRECT3DVERTEXBUFFER8 pStreamData = NULL, UINT Stride = 0) : m_lpStreamData(pStreamData), m_Stride(Stride)

  0008a	83 65 e8 00	 and	 DWORD PTR $T4[ebp], 0
  0008e	83 65 ec 00	 and	 DWORD PTR $T4[ebp+4], 0

; 178  : 				m_StreamData[i] = CStreamData();

  00092	8b 45 e8	 mov	 eax, DWORD PTR $T4[ebp]
  00095	8b 4d ec	 mov	 ecx, DWORD PTR $T4[ebp+4]
  00098	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  0009b	8b 75 f4	 mov	 esi, DWORD PTR _this$[ebp]
  0009e	89 84 d6 ec 65
	00 00		 mov	 DWORD PTR [esi+edx*8+26092], eax
  000a5	89 8c d6 f0 65
	00 00		 mov	 DWORD PTR [esi+edx*8+26096], ecx
  000ac	eb cf		 jmp	 SHORT $LN11@ResetState
$LN12@ResetState:

; 87   : 			: m_lpIndexData(pIndexData),

  000ae	83 65 e0 00	 and	 DWORD PTR $T3[ebp], 0

; 88   : 		m_BaseVertexIndex(BaseVertexIndex)

  000b2	83 65 e4 00	 and	 DWORD PTR $T3[ebp+4], 0

; 179  : 
; 180  : 			m_IndexData = CIndexData();

  000b6	8b 45 e0	 mov	 eax, DWORD PTR $T3[ebp]
  000b9	8b 4d e4	 mov	 ecx, DWORD PTR $T3[ebp+4]
  000bc	8b 55 f4	 mov	 edx, DWORD PTR _this$[ebp]
  000bf	89 82 6c 66 00
	00		 mov	 DWORD PTR [edx+26220], eax
  000c5	89 8a 70 66 00
	00		 mov	 DWORD PTR [edx+26224], ecx

; 181  : 
; 182  : 			for (i = 0; i < STATEMANAGER_MAX_STAGES; i++)

  000cb	83 65 fc 00	 and	 DWORD PTR _i$[ebp], 0
  000cf	eb 07		 jmp	 SHORT $LN16@ResetState
$LN14@ResetState:
  000d1	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  000d4	40		 inc	 eax
  000d5	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN16@ResetState:
  000d8	83 7d fc 08	 cmp	 DWORD PTR _i$[ebp], 8
  000dc	73 10		 jae	 SHORT $LN15@ResetState

; 183  : 				m_Textures[i] = NULL;

  000de	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  000e1	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  000e4	83 a4 81 80 1a
	00 00 00	 and	 DWORD PTR [ecx+eax*4+6784], 0
  000ec	eb e3		 jmp	 SHORT $LN14@ResetState
$LN15@ResetState:

; 184  : 
; 185  : 			// Matrices and constants are not cached, just restored.  It's silly to check all the 
; 186  : 			// data elements (by which time the driver could have been sent them).
; 187  : 			for (i = 0; i < STATEMANAGER_MAX_TRANSFORMSTATES; i++)

  000ee	83 65 fc 00	 and	 DWORD PTR _i$[ebp], 0
  000f2	eb 07		 jmp	 SHORT $LN19@ResetState
$LN17@ResetState:
  000f4	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  000f7	40		 inc	 eax
  000f8	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN19@ResetState:
  000fb	81 7d fc 2c 01
	00 00		 cmp	 DWORD PTR _i$[ebp], 300	; 0000012cH
  00102	0f 83 94 01 00
	00		 jae	 $LN18@ResetState

; 188  : 				D3DXMatrixIdentity(&m_Matrices[i]);

  00108	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0010b	c1 e0 06	 shl	 eax, 6
  0010e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00111	8d 84 01 a8 1a
	00 00		 lea	 eax, DWORD PTR [ecx+eax+6824]
  00118	89 45 f8	 mov	 DWORD PTR _pOut$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 1516 :     pOut->m[0][1] = pOut->m[0][2] = pOut->m[0][3] =

  0011b	6a 10		 push	 16			; 00000010H
  0011d	58		 pop	 eax
  0011e	6b c0 03	 imul	 eax, eax, 3
  00121	03 45 f8	 add	 eax, DWORD PTR _pOut$[ebp]
  00124	6a 04		 push	 4
  00126	59		 pop	 ecx
  00127	d1 e1		 shl	 ecx, 1
  00129	0f 57 c0	 xorps	 xmm0, xmm0
  0012c	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  00131	6a 10		 push	 16			; 00000010H
  00133	58		 pop	 eax
  00134	6b c0 03	 imul	 eax, eax, 3
  00137	03 45 f8	 add	 eax, DWORD PTR _pOut$[ebp]
  0013a	6a 04		 push	 4
  0013c	59		 pop	 ecx
  0013d	c1 e1 00	 shl	 ecx, 0
  00140	0f 57 c0	 xorps	 xmm0, xmm0
  00143	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  00148	6a 10		 push	 16			; 00000010H
  0014a	58		 pop	 eax
  0014b	6b c0 03	 imul	 eax, eax, 3
  0014e	03 45 f8	 add	 eax, DWORD PTR _pOut$[ebp]
  00151	6a 04		 push	 4
  00153	59		 pop	 ecx
  00154	6b c9 00	 imul	 ecx, ecx, 0
  00157	0f 57 c0	 xorps	 xmm0, xmm0
  0015a	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  0015f	6a 10		 push	 16			; 00000010H
  00161	58		 pop	 eax
  00162	d1 e0		 shl	 eax, 1
  00164	03 45 f8	 add	 eax, DWORD PTR _pOut$[ebp]
  00167	6a 04		 push	 4
  00169	59		 pop	 ecx
  0016a	6b c9 03	 imul	 ecx, ecx, 3
  0016d	0f 57 c0	 xorps	 xmm0, xmm0
  00170	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  00175	6a 10		 push	 16			; 00000010H
  00177	58		 pop	 eax
  00178	d1 e0		 shl	 eax, 1
  0017a	03 45 f8	 add	 eax, DWORD PTR _pOut$[ebp]
  0017d	6a 04		 push	 4
  0017f	59		 pop	 ecx
  00180	c1 e1 00	 shl	 ecx, 0
  00183	0f 57 c0	 xorps	 xmm0, xmm0
  00186	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  0018b	6a 10		 push	 16			; 00000010H
  0018d	58		 pop	 eax
  0018e	d1 e0		 shl	 eax, 1
  00190	03 45 f8	 add	 eax, DWORD PTR _pOut$[ebp]
  00193	6a 04		 push	 4
  00195	59		 pop	 ecx
  00196	6b c9 00	 imul	 ecx, ecx, 0
  00199	0f 57 c0	 xorps	 xmm0, xmm0
  0019c	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  001a1	6a 10		 push	 16			; 00000010H
  001a3	58		 pop	 eax
  001a4	c1 e0 00	 shl	 eax, 0
  001a7	03 45 f8	 add	 eax, DWORD PTR _pOut$[ebp]
  001aa	6a 04		 push	 4
  001ac	59		 pop	 ecx
  001ad	6b c9 03	 imul	 ecx, ecx, 3
  001b0	0f 57 c0	 xorps	 xmm0, xmm0
  001b3	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  001b8	6a 10		 push	 16			; 00000010H
  001ba	58		 pop	 eax
  001bb	c1 e0 00	 shl	 eax, 0
  001be	03 45 f8	 add	 eax, DWORD PTR _pOut$[ebp]
  001c1	6a 04		 push	 4
  001c3	59		 pop	 ecx
  001c4	d1 e1		 shl	 ecx, 1
  001c6	0f 57 c0	 xorps	 xmm0, xmm0
  001c9	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  001ce	6a 10		 push	 16			; 00000010H
  001d0	58		 pop	 eax
  001d1	c1 e0 00	 shl	 eax, 0
  001d4	03 45 f8	 add	 eax, DWORD PTR _pOut$[ebp]
  001d7	6a 04		 push	 4
  001d9	59		 pop	 ecx
  001da	6b c9 00	 imul	 ecx, ecx, 0
  001dd	0f 57 c0	 xorps	 xmm0, xmm0
  001e0	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  001e5	6a 10		 push	 16			; 00000010H
  001e7	58		 pop	 eax
  001e8	6b c0 00	 imul	 eax, eax, 0
  001eb	03 45 f8	 add	 eax, DWORD PTR _pOut$[ebp]
  001ee	6a 04		 push	 4
  001f0	59		 pop	 ecx
  001f1	6b c9 03	 imul	 ecx, ecx, 3
  001f4	0f 57 c0	 xorps	 xmm0, xmm0
  001f7	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  001fc	6a 10		 push	 16			; 00000010H
  001fe	58		 pop	 eax
  001ff	6b c0 00	 imul	 eax, eax, 0
  00202	03 45 f8	 add	 eax, DWORD PTR _pOut$[ebp]
  00205	6a 04		 push	 4
  00207	59		 pop	 ecx
  00208	d1 e1		 shl	 ecx, 1
  0020a	0f 57 c0	 xorps	 xmm0, xmm0
  0020d	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  00212	6a 10		 push	 16			; 00000010H
  00214	58		 pop	 eax
  00215	6b c0 00	 imul	 eax, eax, 0
  00218	03 45 f8	 add	 eax, DWORD PTR _pOut$[ebp]
  0021b	6a 04		 push	 4
  0021d	59		 pop	 ecx
  0021e	c1 e1 00	 shl	 ecx, 0
  00221	0f 57 c0	 xorps	 xmm0, xmm0
  00224	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 1517 :     pOut->m[1][0] = pOut->m[1][2] = pOut->m[1][3] =
; 1518 :     pOut->m[2][0] = pOut->m[2][1] = pOut->m[2][3] =
; 1519 :     pOut->m[3][0] = pOut->m[3][1] = pOut->m[3][2] = 0.0f;
; 1520 : 
; 1521 :     pOut->m[0][0] = pOut->m[1][1] = pOut->m[2][2] = pOut->m[3][3] = 1.0f;

  00229	6a 10		 push	 16			; 00000010H
  0022b	58		 pop	 eax
  0022c	6b c0 03	 imul	 eax, eax, 3
  0022f	03 45 f8	 add	 eax, DWORD PTR _pOut$[ebp]
  00232	6a 04		 push	 4
  00234	59		 pop	 ecx
  00235	6b c9 03	 imul	 ecx, ecx, 3
  00238	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00240	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  00245	6a 10		 push	 16			; 00000010H
  00247	58		 pop	 eax
  00248	d1 e0		 shl	 eax, 1
  0024a	03 45 f8	 add	 eax, DWORD PTR _pOut$[ebp]
  0024d	6a 04		 push	 4
  0024f	59		 pop	 ecx
  00250	d1 e1		 shl	 ecx, 1
  00252	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0025a	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  0025f	6a 10		 push	 16			; 00000010H
  00261	58		 pop	 eax
  00262	c1 e0 00	 shl	 eax, 0
  00265	03 45 f8	 add	 eax, DWORD PTR _pOut$[ebp]
  00268	6a 04		 push	 4
  0026a	59		 pop	 ecx
  0026b	c1 e1 00	 shl	 ecx, 0
  0026e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00276	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
  0027b	6a 10		 push	 16			; 00000010H
  0027d	58		 pop	 eax
  0027e	6b c0 00	 imul	 eax, eax, 0
  00281	03 45 f8	 add	 eax, DWORD PTR _pOut$[ebp]
  00284	6a 04		 push	 4
  00286	59		 pop	 ecx
  00287	6b c9 00	 imul	 ecx, ecx, 0
  0028a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00292	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h

; 188  : 				D3DXMatrixIdentity(&m_Matrices[i]);

  00297	e9 58 fe ff ff	 jmp	 $LN17@ResetState
$LN18@ResetState:

; 189  : 
; 190  : 			for (i = 0; i < STATEMANAGER_MAX_VCONSTANTS; i++)

  0029c	83 65 fc 00	 and	 DWORD PTR _i$[ebp], 0
  002a0	eb 07		 jmp	 SHORT $LN22@ResetState
$LN20@ResetState:
  002a2	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  002a5	40		 inc	 eax
  002a6	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN22@ResetState:
  002a9	83 7d fc 60	 cmp	 DWORD PTR _i$[ebp], 96	; 00000060H
  002ad	73 39		 jae	 SHORT $LN21@ResetState
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 321  :     x = fx;

  002af	0f 57 c0	 xorps	 xmm0, xmm0
  002b2	f3 0f 11 45 d0	 movss	 DWORD PTR $T2[ebp], xmm0

; 322  :     y = fy;

  002b7	0f 57 c0	 xorps	 xmm0, xmm0
  002ba	f3 0f 11 45 d4	 movss	 DWORD PTR $T2[ebp+4], xmm0

; 323  :     z = fz;

  002bf	0f 57 c0	 xorps	 xmm0, xmm0
  002c2	f3 0f 11 45 d8	 movss	 DWORD PTR $T2[ebp+8], xmm0

; 324  :     w = fw;

  002c7	0f 57 c0	 xorps	 xmm0, xmm0
  002ca	f3 0f 11 45 dc	 movss	 DWORD PTR $T2[ebp+12], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h

; 191  : 				m_VertexShaderConstants[i] = D3DXVECTOR4(0.0f, 0.0f, 0.0f, 0.0f);

  002cf	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  002d2	c1 e0 04	 shl	 eax, 4
  002d5	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  002d8	8d bc 01 00 14
	00 00		 lea	 edi, DWORD PTR [ecx+eax+5120]
  002df	8d 75 d0	 lea	 esi, DWORD PTR $T2[ebp]
  002e2	a5		 movsd
  002e3	a5		 movsd
  002e4	a5		 movsd
  002e5	a5		 movsd
  002e6	eb ba		 jmp	 SHORT $LN20@ResetState
$LN21@ResetState:

; 192  : 
; 193  : 			for (i = 0; i < STATEMANAGER_MAX_PCONSTANTS; i++)

  002e8	83 65 fc 00	 and	 DWORD PTR _i$[ebp], 0
  002ec	eb 07		 jmp	 SHORT $LN25@ResetState
$LN23@ResetState:
  002ee	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  002f1	40		 inc	 eax
  002f2	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN25@ResetState:
  002f5	83 7d fc 08	 cmp	 DWORD PTR _i$[ebp], 8
  002f9	73 39		 jae	 SHORT $LN24@ResetState
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 321  :     x = fx;

  002fb	0f 57 c0	 xorps	 xmm0, xmm0
  002fe	f3 0f 11 45 c0	 movss	 DWORD PTR $T1[ebp], xmm0

; 322  :     y = fy;

  00303	0f 57 c0	 xorps	 xmm0, xmm0
  00306	f3 0f 11 45 c4	 movss	 DWORD PTR $T1[ebp+4], xmm0

; 323  :     z = fz;

  0030b	0f 57 c0	 xorps	 xmm0, xmm0
  0030e	f3 0f 11 45 c8	 movss	 DWORD PTR $T1[ebp+8], xmm0

; 324  :     w = fw;

  00313	0f 57 c0	 xorps	 xmm0, xmm0
  00316	f3 0f 11 45 cc	 movss	 DWORD PTR $T1[ebp+12], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h

; 194  : 				m_PixelShaderConstants[i] = D3DXVECTOR4(0.0f, 0.0f, 0.0f, 0.0f);

  0031b	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0031e	c1 e0 04	 shl	 eax, 4
  00321	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00324	8d bc 01 00 1a
	00 00		 lea	 edi, DWORD PTR [ecx+eax+6656]
  0032b	8d 75 c0	 lea	 esi, DWORD PTR $T1[ebp]
  0032e	a5		 movsd
  0032f	a5		 movsd
  00330	a5		 movsd
  00331	a5		 movsd
  00332	eb ba		 jmp	 SHORT $LN23@ResetState
$LN24@ResetState:

; 195  : 
; 196  : 			m_dwPixelShader = 0;

  00334	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00337	83 a0 a0 1a 00
	00 00		 and	 DWORD PTR [eax+6816], 0

; 197  : 			m_dwVertexShader = D3DFVF_XYZ;

  0033e	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00341	c7 80 a4 1a 00
	00 02 00 00 00	 mov	 DWORD PTR [eax+6820], 2

; 198  : 
; 199  : 			ZeroMemory(&m_Matrices, sizeof(D3DXMATRIX) * STATEMANAGER_MAX_TRANSFORMSTATES);

  0034b	68 00 4b 00 00	 push	 19200			; 00004b00H
  00350	6a 00		 push	 0
  00352	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  00355	05 a8 1a 00 00	 add	 eax, 6824		; 00001aa8H
  0035a	50		 push	 eax
  0035b	e8 00 00 00 00	 call	 _memset
  00360	83 c4 0c	 add	 esp, 12			; 0000000cH

; 200  : 		}

  00363	5f		 pop	 edi
  00364	5e		 pop	 esi
  00365	c9		 leave
  00366	c3		 ret	 0
?ResetState@CStateManagerState@@QAEXXZ ENDP		; CStateManagerState::ResetState
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\StateManager.h
;	COMDAT ??0CStateManagerState@@QAE@XZ
_TEXT	SEGMENT
tv76 = -56						; size = 4
tv71 = -52						; size = 4
tv66 = -48						; size = 4
tv90 = -44						; size = 4
_this$ = -40						; size = 4
___t$ = -36						; size = 4
___t$ = -32						; size = 4
___t$ = -28						; size = 4
___n$ = -24						; size = 4
___n$ = -20						; size = 4
___n$ = -16						; size = 4
___n$ = -12						; size = 4
___t$ = -8						; size = 4
_this$ = -4						; size = 4
??0CStateManagerState@@QAE@XZ PROC			; CStateManagerState::CStateManagerState, COMDAT
; _this$ = ecx

; 162  : 		CStateManagerState()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00009	c7 45 f4 60 00
	00 00		 mov	 DWORD PTR ___n$[ebp], 96 ; 00000060H
  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	05 00 14 00 00	 add	 eax, 5120		; 00001400H
  00018	89 45 e4	 mov	 DWORD PTR ___t$[ebp], eax
$LN4@CStateMana:
  0001b	8b 45 f4	 mov	 eax, DWORD PTR ___n$[ebp]
  0001e	89 45 d4	 mov	 DWORD PTR tv90[ebp], eax
  00021	8b 45 f4	 mov	 eax, DWORD PTR ___n$[ebp]
  00024	48		 dec	 eax
  00025	89 45 f4	 mov	 DWORD PTR ___n$[ebp], eax
  00028	83 7d d4 00	 cmp	 DWORD PTR tv90[ebp], 0
  0002c	76 0b		 jbe	 SHORT $LN3@CStateMana
  0002e	8b 45 e4	 mov	 eax, DWORD PTR ___t$[ebp]
  00031	83 c0 10	 add	 eax, 16			; 00000010H
  00034	89 45 e4	 mov	 DWORD PTR ___t$[ebp], eax
  00037	eb e2		 jmp	 SHORT $LN4@CStateMana
$LN3@CStateMana:
  00039	c7 45 f0 08 00
	00 00		 mov	 DWORD PTR ___n$[ebp], 8
  00040	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00043	05 00 1a 00 00	 add	 eax, 6656		; 00001a00H
  00048	89 45 e0	 mov	 DWORD PTR ___t$[ebp], eax
$LN10@CStateMana:
  0004b	8b 45 f0	 mov	 eax, DWORD PTR ___n$[ebp]
  0004e	89 45 d0	 mov	 DWORD PTR tv66[ebp], eax
  00051	8b 45 f0	 mov	 eax, DWORD PTR ___n$[ebp]
  00054	48		 dec	 eax
  00055	89 45 f0	 mov	 DWORD PTR ___n$[ebp], eax
  00058	83 7d d0 00	 cmp	 DWORD PTR tv66[ebp], 0
  0005c	76 0b		 jbe	 SHORT $LN9@CStateMana
  0005e	8b 45 e0	 mov	 eax, DWORD PTR ___t$[ebp]
  00061	83 c0 10	 add	 eax, 16			; 00000010H
  00064	89 45 e0	 mov	 DWORD PTR ___t$[ebp], eax
  00067	eb e2		 jmp	 SHORT $LN10@CStateMana
$LN9@CStateMana:

; 165  : 
; 166  : 		void ResetState()
; 167  : 		{
; 168  : 			DWORD i, y;
; 169  : 
; 170  : 			for (i = 0; i < STATEMANAGER_MAX_RENDERSTATES; i++)
; 171  : 				m_RenderStates[i] = 0x7FFFFFFF;
; 172  : 
; 173  : 			for (i = 0; i < STATEMANAGER_MAX_STAGES; i++)
; 174  : 				for (y = 0; y < STATEMANAGER_MAX_TEXTURESTATES; y++)
; 175  : 					m_TextureStates[i][y] = 0x7FFFFFFF;
; 176  : 
; 177  : 			for (i = 0; i < STATEMANAGER_MAX_STREAMS; i++)
; 178  : 				m_StreamData[i] = CStreamData();
; 179  : 
; 180  : 			m_IndexData = CIndexData();
; 181  : 
; 182  : 			for (i = 0; i < STATEMANAGER_MAX_STAGES; i++)
; 183  : 				m_Textures[i] = NULL;
; 184  : 
; 185  : 			// Matrices and constants are not cached, just restored.  It's silly to check all the 
; 186  : 			// data elements (by which time the driver could have been sent them).
; 187  : 			for (i = 0; i < STATEMANAGER_MAX_TRANSFORMSTATES; i++)
; 188  : 				D3DXMatrixIdentity(&m_Matrices[i]);
; 189  : 
; 190  : 			for (i = 0; i < STATEMANAGER_MAX_VCONSTANTS; i++)
; 191  : 				m_VertexShaderConstants[i] = D3DXVECTOR4(0.0f, 0.0f, 0.0f, 0.0f);
; 192  : 
; 193  : 			for (i = 0; i < STATEMANAGER_MAX_PCONSTANTS; i++)
; 194  : 				m_PixelShaderConstants[i] = D3DXVECTOR4(0.0f, 0.0f, 0.0f, 0.0f);
; 195  : 
; 196  : 			m_dwPixelShader = 0;
; 197  : 			m_dwVertexShader = D3DFVF_XYZ;
; 198  : 
; 199  : 			ZeroMemory(&m_Matrices, sizeof(D3DXMATRIX) * STATEMANAGER_MAX_TRANSFORMSTATES);
; 200  : 		}
; 201  : 
; 202  : 		// Renderstates
; 203  : 		DWORD					m_RenderStates[STATEMANAGER_MAX_RENDERSTATES];
; 204  : 
; 205  : 		// Texture stage states
; 206  : 		DWORD					m_TextureStates[STATEMANAGER_MAX_STAGES][STATEMANAGER_MAX_TEXTURESTATES];
; 207  : 
; 208  : 		// Vertex shader constants
; 209  : 		D3DXVECTOR4				m_VertexShaderConstants[STATEMANAGER_MAX_VCONSTANTS];
; 210  : 
; 211  : 		// Pixel shader constants
; 212  : 		D3DXVECTOR4				m_PixelShaderConstants[STATEMANAGER_MAX_PCONSTANTS];
; 213  : 
; 214  : 		// Textures
; 215  : 		LPDIRECT3DBASETEXTURE8	m_Textures[STATEMANAGER_MAX_STAGES];
; 216  : 
; 217  : 		// Shaders
; 218  : 		DWORD					m_dwPixelShader;
; 219  : 		DWORD					m_dwVertexShader;

  00069	c7 45 ec 2c 01
	00 00		 mov	 DWORD PTR ___n$[ebp], 300 ; 0000012cH
  00070	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00073	05 a8 1a 00 00	 add	 eax, 6824		; 00001aa8H
  00078	89 45 dc	 mov	 DWORD PTR ___t$[ebp], eax
$LN16@CStateMana:
  0007b	8b 45 ec	 mov	 eax, DWORD PTR ___n$[ebp]
  0007e	89 45 cc	 mov	 DWORD PTR tv71[ebp], eax
  00081	8b 45 ec	 mov	 eax, DWORD PTR ___n$[ebp]
  00084	48		 dec	 eax
  00085	89 45 ec	 mov	 DWORD PTR ___n$[ebp], eax
  00088	83 7d cc 00	 cmp	 DWORD PTR tv71[ebp], 0
  0008c	76 0b		 jbe	 SHORT $LN15@CStateMana
  0008e	8b 45 dc	 mov	 eax, DWORD PTR ___t$[ebp]
  00091	83 c0 40	 add	 eax, 64			; 00000040H
  00094	89 45 dc	 mov	 DWORD PTR ___t$[ebp], eax
  00097	eb e2		 jmp	 SHORT $LN16@CStateMana
$LN15@CStateMana:

; 162  : 		CStateManagerState()

  00099	c7 45 e8 10 00
	00 00		 mov	 DWORD PTR ___n$[ebp], 16 ; 00000010H
  000a0	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a3	05 ec 65 00 00	 add	 eax, 26092		; 000065ecH
  000a8	89 45 f8	 mov	 DWORD PTR ___t$[ebp], eax
$LN22@CStateMana:
  000ab	8b 45 e8	 mov	 eax, DWORD PTR ___n$[ebp]
  000ae	89 45 c8	 mov	 DWORD PTR tv76[ebp], eax
  000b1	8b 45 e8	 mov	 eax, DWORD PTR ___n$[ebp]
  000b4	48		 dec	 eax
  000b5	89 45 e8	 mov	 DWORD PTR ___n$[ebp], eax
  000b8	83 7d c8 00	 cmp	 DWORD PTR tv76[ebp], 0
  000bc	76 18		 jbe	 SHORT $LN21@CStateMana

; 70   : 		CStreamData(LPDIRECT3DVERTEXBUFFER8 pStreamData = NULL, UINT Stride = 0) : m_lpStreamData(pStreamData), m_Stride(Stride)

  000be	8b 45 f8	 mov	 eax, DWORD PTR ___t$[ebp]
  000c1	83 20 00	 and	 DWORD PTR [eax], 0
  000c4	8b 45 f8	 mov	 eax, DWORD PTR ___t$[ebp]
  000c7	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  000cb	8b 45 f8	 mov	 eax, DWORD PTR ___t$[ebp]
  000ce	83 c0 08	 add	 eax, 8
  000d1	89 45 f8	 mov	 DWORD PTR ___t$[ebp], eax
  000d4	eb d5		 jmp	 SHORT $LN22@CStateMana
$LN21@CStateMana:

; 162  : 		CStateManagerState()

  000d6	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d9	05 6c 66 00 00	 add	 eax, 26220		; 0000666cH
  000de	89 45 d8	 mov	 DWORD PTR _this$[ebp], eax

; 87   : 			: m_lpIndexData(pIndexData),

  000e1	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	83 20 00	 and	 DWORD PTR [eax], 0

; 88   : 		m_BaseVertexIndex(BaseVertexIndex)

  000e7	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  000ea	83 60 04 00	 and	 DWORD PTR [eax+4], 0

; 163  : 		{
; 164  : 		}

  000ee	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000f1	c9		 leave
  000f2	c3		 ret	 0
??0CStateManagerState@@QAE@XZ ENDP			; CStateManagerState::CStateManagerState
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00022	81 7d 0c 00 10
	00 00		 cmp	 DWORD PTR __Bytes$[ebp], 4096 ; 00001000H
  00029	72 0f		 jb	 SHORT $LN2@Deallocate

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0002b	8d 45 0c	 lea	 eax, DWORD PTR __Bytes$[ebp]
  0002e	50		 push	 eax
  0002f	8d 45 08	 lea	 eax, DWORD PTR __Ptr$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
  00038	59		 pop	 ecx
  00039	59		 pop	 ecx
$LN2@Deallocate:

; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  0003a	ff 75 0c	 push	 DWORD PTR __Bytes$[ebp]
  0003d	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00040	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00045	59		 pop	 ecx
  00046	59		 pop	 ecx

; 222  : }

  00047	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00051	59		 pop	 ecx
  00052	c9		 leave
  00053	c3		 ret	 0
  00054	cc		 int	 3
  00055	cc		 int	 3
  00056	cc		 int	 3
  00057	cc		 int	 3
  00058	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z
_TEXT	SEGMENT
__Min_back_shift$ = -16					; size = 4
__Ptr_user$ = -12					; size = 4
__Ptr_container$ = -8					; size = 4
__Back_shift$ = -4					; size = 4
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 132  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 133  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 134  :     _Bytes += _Non_user_size;

  00006	8b 45 0c	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00009	8b 00		 mov	 eax, DWORD PTR [eax]
  0000b	83 c0 23	 add	 eax, 35			; 00000023H
  0000e	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00011	89 01		 mov	 DWORD PTR [ecx], eax

; 135  : 
; 136  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00013	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00016	8b 00		 mov	 eax, DWORD PTR [eax]
  00018	89 45 f4	 mov	 DWORD PTR __Ptr_user$[ebp], eax

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001b	6a 04		 push	 4
  0001d	58		 pop	 eax
  0001e	6b c0 ff	 imul	 eax, eax, -1
  00021	8b 4d f4	 mov	 ecx, DWORD PTR __Ptr_user$[ebp]
  00024	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  00027	89 45 f8	 mov	 DWORD PTR __Ptr_container$[ebp], eax

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);

  0002a	c7 45 f0 04 00
	00 00		 mov	 DWORD PTR __Min_back_shift$[ebp], 4

; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00031	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00034	8b 00		 mov	 eax, DWORD PTR [eax]
  00036	2b 45 f8	 sub	 eax, DWORD PTR __Ptr_container$[ebp]
  00039	89 45 fc	 mov	 DWORD PTR __Back_shift$[ebp], eax
$LN4@Adjust_man:

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0003c	83 7d fc 04	 cmp	 DWORD PTR __Back_shift$[ebp], 4
  00040	72 08		 jb	 SHORT $LN7@Adjust_man
  00042	83 7d fc 23	 cmp	 DWORD PTR __Back_shift$[ebp], 35 ; 00000023H
  00046	77 02		 ja	 SHORT $LN7@Adjust_man
  00048	eb 09		 jmp	 SHORT $LN2@Adjust_man
$LN7@Adjust_man:
  0004a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
  0004f	33 c0		 xor	 eax, eax
  00051	75 f7		 jne	 SHORT $LN7@Adjust_man
$LN2@Adjust_man:
  00053	33 c0		 xor	 eax, eax
  00055	75 e5		 jne	 SHORT $LN4@Adjust_man

; 152  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00057	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0005a	8b 4d f8	 mov	 ecx, DWORD PTR __Ptr_container$[ebp]
  0005d	89 08		 mov	 DWORD PTR [eax], ecx
$LN10@Adjust_man:

; 153  : }

  0005f	c9		 leave
  00060	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -4						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
$LN2@vector:
  00004	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  00007	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  0000a	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000d	48		 dec	 eax
  0000e	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00011	83 7d fc 00	 cmp	 DWORD PTR tv66[ebp], 0
  00015	76 11		 jbe	 SHORT $LN1@vector
  00017	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  0001a	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001d	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  00020	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00023	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00026	eb dc		 jmp	 SHORT $LN2@vector
$LN1@vector:
  00028	c9		 leave
  00029	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
