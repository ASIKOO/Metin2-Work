; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetDatagramReceiver.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0CNetDatagramReceiver@@QAE@XZ			; CNetDatagramReceiver::CNetDatagramReceiver
PUBLIC	??1CNetDatagramReceiver@@UAE@XZ			; CNetDatagramReceiver::~CNetDatagramReceiver
PUBLIC	?Clear@CNetDatagramReceiver@@QAEXXZ		; CNetDatagramReceiver::Clear
PUBLIC	?Bind@CNetDatagramReceiver@@QAEHKG@Z		; CNetDatagramReceiver::Bind
PUBLIC	?isBind@CNetDatagramReceiver@@QAEHXZ		; CNetDatagramReceiver::isBind
PUBLIC	?Process@CNetDatagramReceiver@@QAEHXZ		; CNetDatagramReceiver::Process
PUBLIC	?Recv@CNetDatagramReceiver@@QAEHPAXH@Z		; CNetDatagramReceiver::Recv
PUBLIC	?Peek@CNetDatagramReceiver@@QAEHPAXH@Z		; CNetDatagramReceiver::Peek
PUBLIC	?SetRecvBufferSize@CNetDatagramReceiver@@QAEXH@Z ; CNetDatagramReceiver::SetRecvBufferSize
PUBLIC	??_GCNetDatagramReceiver@@UAEPAXI@Z		; CNetDatagramReceiver::`scalar deleting destructor'
PUBLIC	??_7CNetDatagramReceiver@@6B@			; CNetDatagramReceiver::`vftable'
PUBLIC	??_C@_0BH@BNCNCIMM@Failed?5binding?5socket?6@	; `string'
PUBLIC	??_R4CNetDatagramReceiver@@6B@			; CNetDatagramReceiver::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCNetDatagramReceiver@@@8		; CNetDatagramReceiver `RTTI Type Descriptor'
PUBLIC	??_R3CNetDatagramReceiver@@8			; CNetDatagramReceiver::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CNetDatagramReceiver@@8			; CNetDatagramReceiver::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CNetDatagramReceiver@@8		; CNetDatagramReceiver::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	?Tracef@@YAXPBDZZ:PROC				; Tracef
EXTRN	_bind@12:PROC
EXTRN	_ioctlsocket@12:PROC
EXTRN	_htons@4:PROC
EXTRN	_recvfrom@24:PROC
EXTRN	_socket@12:PROC
EXTRN	??_ECNetDatagramReceiver@@UAEPAXI@Z:PROC	; CNetDatagramReceiver::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@CNetDatagramReceiver@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CNetDatagramReceiver@@8 DD FLAT:??_R0?AVCNetDatagramReceiver@@@8 ; CNetDatagramReceiver::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CNetDatagramReceiver@@8
rdata$r	ENDS
;	COMDAT ??_R2CNetDatagramReceiver@@8
rdata$r	SEGMENT
??_R2CNetDatagramReceiver@@8 DD FLAT:??_R1A@?0A@EA@CNetDatagramReceiver@@8 ; CNetDatagramReceiver::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CNetDatagramReceiver@@8
rdata$r	SEGMENT
??_R3CNetDatagramReceiver@@8 DD 00H			; CNetDatagramReceiver::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CNetDatagramReceiver@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCNetDatagramReceiver@@@8
data$rs	SEGMENT
??_R0?AVCNetDatagramReceiver@@@8 DD FLAT:??_7type_info@@6B@ ; CNetDatagramReceiver `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCNetDatagramReceiver@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CNetDatagramReceiver@@6B@
rdata$r	SEGMENT
??_R4CNetDatagramReceiver@@6B@ DD 00H			; CNetDatagramReceiver::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCNetDatagramReceiver@@@8
	DD	FLAT:??_R3CNetDatagramReceiver@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BH@BNCNCIMM@Failed?5binding?5socket?6@
CONST	SEGMENT
??_C@_0BH@BNCNCIMM@Failed?5binding?5socket?6@ DB 'Failed binding socket', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_7CNetDatagramReceiver@@6B@
CONST	SEGMENT
??_7CNetDatagramReceiver@@6B@ DD FLAT:??_R4CNetDatagramReceiver@@6B@ ; CNetDatagramReceiver::`vftable'
	DD	FLAT:??_ECNetDatagramReceiver@@UAEPAXI@Z
CONST	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_GCNetDatagramReceiver@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCNetDatagramReceiver@@UAEPAXI@Z PROC		; CNetDatagramReceiver::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CNetDatagramReceiver@@UAE@XZ ; CNetDatagramReceiver::~CNetDatagramReceiver
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0c		 je	 SHORT $LN2@scalar
  00017	6a 30		 push	 48			; 00000030H
  00019	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00021	59		 pop	 ecx
  00022	59		 pop	 ecx
$LN2@scalar:
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c9		 leave
  00027	c2 04 00	 ret	 4
??_GCNetDatagramReceiver@@UAEPAXI@Z ENDP		; CNetDatagramReceiver::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetDatagramReceiver.cpp
;	COMDAT ?SetRecvBufferSize@CNetDatagramReceiver@@QAEXH@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
_recvBufSize$ = 8					; size = 4
?SetRecvBufferSize@CNetDatagramReceiver@@QAEXH@Z PROC	; CNetDatagramReceiver::SetRecvBufferSize, COMDAT
; _this$ = ecx

; 68   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 69   : 	if (m_recvBuf)

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 78 28 00	 cmp	 DWORD PTR [eax+40], 0
  00010	74 1f		 je	 SHORT $LN2@SetRecvBuf

; 70   : 	{
; 71   : 		if (m_recvBufSize>recvBufSize)

  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  00018	3b 45 08	 cmp	 eax, DWORD PTR _recvBufSize$[ebp]
  0001b	7e 02		 jle	 SHORT $LN3@SetRecvBuf

; 72   : 			return;

  0001d	eb 33		 jmp	 SHORT $LN1@SetRecvBuf
$LN3@SetRecvBuf:

; 73   : 
; 74   : 		delete [] m_recvBuf;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  00025	89 45 f8	 mov	 DWORD PTR $T2[ebp], eax
  00028	ff 75 f8	 push	 DWORD PTR $T2[ebp]
  0002b	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00030	59		 pop	 ecx
$LN2@SetRecvBuf:

; 75   : 	}
; 76   : 	m_recvBufSize=recvBufSize;

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _recvBufSize$[ebp]
  00037	89 48 2c	 mov	 DWORD PTR [eax+44], ecx

; 77   : 	m_recvBuf=new char[m_recvBufSize];

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	ff 70 2c	 push	 DWORD PTR [eax+44]
  00040	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00045	59		 pop	 ecx
  00046	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	8b 4d f4	 mov	 ecx, DWORD PTR $T1[ebp]
  0004f	89 48 28	 mov	 DWORD PTR [eax+40], ecx
$LN1@SetRecvBuf:

; 78   : }

  00052	c9		 leave
  00053	c2 04 00	 ret	 4
?SetRecvBufferSize@CNetDatagramReceiver@@QAEXH@Z ENDP	; CNetDatagramReceiver::SetRecvBufferSize
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetDatagramReceiver.cpp
;	COMDAT ?Peek@CNetDatagramReceiver@@QAEHPAXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pBuffer$ = 8						; size = 4
_iSize$ = 12						; size = 4
?Peek@CNetDatagramReceiver@@QAEHPAXH@Z PROC		; CNetDatagramReceiver::Peek, COMDAT
; _this$ = ecx

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 31   : 	if (m_recvBufCurrentSize < m_recvBufCurrentPos+iSize)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  0000d	03 45 0c	 add	 eax, DWORD PTR _iSize$[ebp]
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	39 41 24	 cmp	 DWORD PTR [ecx+36], eax
  00016	7d 04		 jge	 SHORT $LN2@Peek

; 32   : 		return FALSE;

  00018	33 c0		 xor	 eax, eax
  0001a	eb 1e		 jmp	 SHORT $LN1@Peek
$LN2@Peek:

; 33   : 
; 34   : 	memcpy(pBuffer, m_recvBuf + m_recvBufCurrentPos, iSize);

  0001c	ff 75 0c	 push	 DWORD PTR _iSize$[ebp]
  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	03 41 20	 add	 eax, DWORD PTR [ecx+32]
  0002b	50		 push	 eax
  0002c	ff 75 08	 push	 DWORD PTR _pBuffer$[ebp]
  0002f	e8 00 00 00 00	 call	 _memcpy
  00034	83 c4 0c	 add	 esp, 12			; 0000000cH

; 35   : 	return TRUE;

  00037	33 c0		 xor	 eax, eax
  00039	40		 inc	 eax
$LN1@Peek:

; 36   : }

  0003a	c9		 leave
  0003b	c2 08 00	 ret	 8
?Peek@CNetDatagramReceiver@@QAEHPAXH@Z ENDP		; CNetDatagramReceiver::Peek
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetDatagramReceiver.cpp
;	COMDAT ?Recv@CNetDatagramReceiver@@QAEHPAXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pBuffer$ = 8						; size = 4
_iSize$ = 12						; size = 4
?Recv@CNetDatagramReceiver@@QAEHPAXH@Z PROC		; CNetDatagramReceiver::Recv, COMDAT
; _this$ = ecx

; 21   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 22   : 	if (!Peek(pBuffer, iSize))

  00007	ff 75 0c	 push	 DWORD PTR _iSize$[ebp]
  0000a	ff 75 08	 push	 DWORD PTR _pBuffer$[ebp]
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?Peek@CNetDatagramReceiver@@QAEHPAXH@Z ; CNetDatagramReceiver::Peek
  00015	85 c0		 test	 eax, eax
  00017	75 04		 jne	 SHORT $LN2@Recv

; 23   : 		return FALSE;

  00019	33 c0		 xor	 eax, eax
  0001b	eb 12		 jmp	 SHORT $LN1@Recv
$LN2@Recv:

; 24   : 
; 25   : 	m_recvBufCurrentPos += iSize;

  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  00023	03 45 0c	 add	 eax, DWORD PTR _iSize$[ebp]
  00026	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	89 41 20	 mov	 DWORD PTR [ecx+32], eax

; 26   : 	return TRUE;

  0002c	33 c0		 xor	 eax, eax
  0002e	40		 inc	 eax
$LN1@Recv:

; 27   : }

  0002f	c9		 leave
  00030	c2 08 00	 ret	 8
?Recv@CNetDatagramReceiver@@QAEHPAXH@Z ENDP		; CNetDatagramReceiver::Recv
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetDatagramReceiver.cpp
;	COMDAT ?Process@CNetDatagramReceiver@@QAEHXZ
_TEXT	SEGMENT
_irecvAddrLength$ = -8					; size = 4
_this$ = -4						; size = 4
?Process@CNetDatagramReceiver@@QAEHXZ PROC		; CNetDatagramReceiver::Process, COMDAT
; _this$ = ecx

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 6    : 	m_recvBufCurrentPos = 0;

  00008	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	83 60 20 00	 and	 DWORD PTR [eax+32], 0

; 7    : 	m_recvBufCurrentSize = 0;

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 60 24 00	 and	 DWORD PTR [eax+36], 0

; 8    : 
; 9    : 	int irecvAddrLength = sizeof(SOCKADDR_IN);

  00016	c7 45 f8 10 00
	00 00		 mov	 DWORD PTR _irecvAddrLength$[ebp], 16 ; 00000010H

; 10   : 	m_recvBufCurrentSize = recvfrom(m_Socket, (char *)m_recvBuf, m_recvBufSize, 0, (PSOCKADDR)&m_SockAddr, &irecvAddrLength);

  0001d	8d 45 f8	 lea	 eax, DWORD PTR _irecvAddrLength$[ebp]
  00020	50		 push	 eax
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	83 c0 10	 add	 eax, 16			; 00000010H
  00027	50		 push	 eax
  00028	6a 00		 push	 0
  0002a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002d	ff 70 2c	 push	 DWORD PTR [eax+44]
  00030	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00033	ff 70 28	 push	 DWORD PTR [eax+40]
  00036	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00039	ff 70 0c	 push	 DWORD PTR [eax+12]
  0003c	e8 00 00 00 00	 call	 _recvfrom@24
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	89 41 24	 mov	 DWORD PTR [ecx+36], eax

; 11   : 
; 12   : 	if (m_recvBufCurrentSize <= 0)

  00047	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004a	83 78 24 00	 cmp	 DWORD PTR [eax+36], 0
  0004e	7f 04		 jg	 SHORT $LN2@Process

; 13   : 	{
; 14   : 		return FALSE;

  00050	33 c0		 xor	 eax, eax
  00052	eb 03		 jmp	 SHORT $LN1@Process
$LN2@Process:

; 15   : 	}
; 16   : 
; 17   : 	return TRUE;

  00054	33 c0		 xor	 eax, eax
  00056	40		 inc	 eax
$LN1@Process:

; 18   : }

  00057	c9		 leave
  00058	c3		 ret	 0
?Process@CNetDatagramReceiver@@QAEHXZ ENDP		; CNetDatagramReceiver::Process
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetDatagramReceiver.cpp
;	COMDAT ?isBind@CNetDatagramReceiver@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?isBind@CNetDatagramReceiver@@QAEHXZ PROC		; CNetDatagramReceiver::isBind, COMDAT
; _this$ = ecx

; 39   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 40   : 	return m_isBind;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 41   : }

  0000d	c9		 leave
  0000e	c3		 ret	 0
?isBind@CNetDatagramReceiver@@QAEHXZ ENDP		; CNetDatagramReceiver::isBind
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetDatagramReceiver.cpp
;	COMDAT ?Bind@CNetDatagramReceiver@@QAEHKG@Z
_TEXT	SEGMENT
_arg$ = -8						; size = 4
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
_wPortIndex$ = 12					; size = 2
?Bind@CNetDatagramReceiver@@QAEHKG@Z PROC		; CNetDatagramReceiver::Bind, COMDAT
; _this$ = ecx

; 44   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 45   : 	m_Socket = socket(AF_INET, SOCK_DGRAM, 0);

  00008	6a 00		 push	 0
  0000a	6a 02		 push	 2
  0000c	6a 02		 push	 2
  0000e	e8 00 00 00 00	 call	 _socket@12
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 46   : 
; 47   : 	DWORD arg = 1;

  00019	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _arg$[ebp], 1

; 48   : 	ioctlsocket(m_Socket, FIONBIO, &arg);	// Non-blocking mode

  00020	8d 45 f8	 lea	 eax, DWORD PTR _arg$[ebp]
  00023	50		 push	 eax
  00024	68 7e 66 04 80	 push	 -2147195266		; 8004667eH
  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	ff 70 0c	 push	 DWORD PTR [eax+12]
  0002f	e8 00 00 00 00	 call	 _ioctlsocket@12

; 49   : 
; 50   : 	memset(&m_SockAddr, 0, sizeof(SOCKADDR_IN));

  00034	6a 10		 push	 16			; 00000010H
  00036	6a 00		 push	 0
  00038	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	83 c0 10	 add	 eax, 16			; 00000010H
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 _memset
  00044	83 c4 0c	 add	 esp, 12			; 0000000cH

; 51   : 	m_SockAddr.sin_family = AF_INET;

  00047	6a 02		 push	 2
  00049	58		 pop	 eax
  0004a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	66 89 41 10	 mov	 WORD PTR [ecx+16], ax

; 52   : //	m_SockAddr.sin_addr.s_addr = dwAddress;
; 53   : 	m_SockAddr.sin_addr.s_addr = INADDR_ANY;

  00051	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00054	83 60 14 00	 and	 DWORD PTR [eax+20], 0

; 54   : 	m_SockAddr.sin_port = htons(wPortIndex);

  00058	ff 75 0c	 push	 DWORD PTR _wPortIndex$[ebp]
  0005b	e8 00 00 00 00	 call	 _htons@4
  00060	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00063	66 89 41 12	 mov	 WORD PTR [ecx+18], ax

; 55   : 
; 56   : 	if (bind(m_Socket, (PSOCKADDR)&m_SockAddr, sizeof(SOCKADDR_IN)) < 0)

  00067	6a 10		 push	 16			; 00000010H
  00069	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006c	83 c0 10	 add	 eax, 16			; 00000010H
  0006f	50		 push	 eax
  00070	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00073	ff 70 0c	 push	 DWORD PTR [eax+12]
  00076	e8 00 00 00 00	 call	 _bind@12
  0007b	85 c0		 test	 eax, eax
  0007d	7d 0f		 jge	 SHORT $LN2@Bind

; 57   : 	{
; 58   : 		Tracef("Failed binding socket\n");

  0007f	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@BNCNCIMM@Failed?5binding?5socket?6@
  00084	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef
  00089	59		 pop	 ecx

; 59   : 		return FALSE;

  0008a	33 c0		 xor	 eax, eax
  0008c	eb 0d		 jmp	 SHORT $LN1@Bind
$LN2@Bind:

; 60   : 	}
; 61   : 
; 62   : 	m_isBind = TRUE;

  0008e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00091	c7 40 04 01 00
	00 00		 mov	 DWORD PTR [eax+4], 1

; 63   : 
; 64   : 	return TRUE;

  00098	33 c0		 xor	 eax, eax
  0009a	40		 inc	 eax
$LN1@Bind:

; 65   : }

  0009b	c9		 leave
  0009c	c2 08 00	 ret	 8
?Bind@CNetDatagramReceiver@@QAEHKG@Z ENDP		; CNetDatagramReceiver::Bind
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetDatagramReceiver.cpp
;	COMDAT ?Clear@CNetDatagramReceiver@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CNetDatagramReceiver@@QAEXXZ PROC		; CNetDatagramReceiver::Clear, COMDAT
; _this$ = ecx

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 82   : 	
; 83   : 	m_isBind = FALSE;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 60 04 00	 and	 DWORD PTR [eax+4], 0

; 84   : 
; 85   : 	m_dwPortIndex = 1000;

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00011	c7 40 08 e8 03
	00 00		 mov	 DWORD PTR [eax+8], 1000	; 000003e8H

; 86   : 
; 87   : 	m_Socket = 0;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 60 0c 00	 and	 DWORD PTR [eax+12], 0

; 88   : 	memset(&m_SockAddr, 0, sizeof(SOCKADDR_IN));

  0001f	6a 10		 push	 16			; 00000010H
  00021	6a 00		 push	 0
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 10	 add	 eax, 16			; 00000010H
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 _memset
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 89   : 
; 90   : 	m_recvBufCurrentPos = 0;

  00032	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00035	83 60 20 00	 and	 DWORD PTR [eax+32], 0

; 91   : 	m_recvBufCurrentSize = 0;	

  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	83 60 24 00	 and	 DWORD PTR [eax+36], 0

; 92   : }

  00040	c9		 leave
  00041	c3		 ret	 0
?Clear@CNetDatagramReceiver@@QAEXXZ ENDP		; CNetDatagramReceiver::Clear
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetDatagramReceiver.cpp
;	COMDAT ??1CNetDatagramReceiver@@UAE@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
??1CNetDatagramReceiver@@UAE@XZ PROC			; CNetDatagramReceiver::~CNetDatagramReceiver, COMDAT
; _this$ = ecx

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00008	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CNetDatagramReceiver@@6B@

; 103  : 	if (m_recvBuf)

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	83 78 28 00	 cmp	 DWORD PTR [eax+40], 0
  00018	74 12		 je	 SHORT $LN3@CNetDatagr

; 104  : 		delete [] m_recvBuf;

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  00020	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  00023	ff 75 f8	 push	 DWORD PTR $T1[ebp]
  00026	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0002b	59		 pop	 ecx
$LN3@CNetDatagr:

; 105  : }

  0002c	c9		 leave
  0002d	c3		 ret	 0
??1CNetDatagramReceiver@@UAE@XZ ENDP			; CNetDatagramReceiver::~CNetDatagramReceiver
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetDatagramReceiver.cpp
;	COMDAT ??0CNetDatagramReceiver@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CNetDatagramReceiver@@QAE@XZ PROC			; CNetDatagramReceiver::CNetDatagramReceiver, COMDAT
; _this$ = ecx

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CNetDatagramReceiver@@6B@

; 96   : 	m_recvBuf = NULL;

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	83 60 28 00	 and	 DWORD PTR [eax+40], 0

; 97   : 	m_recvBufSize = 0;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	83 60 2c 00	 and	 DWORD PTR [eax+44], 0

; 98   : 
; 99   : 	Clear();

  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	e8 00 00 00 00	 call	 ?Clear@CNetDatagramReceiver@@QAEXXZ ; CNetDatagramReceiver::Clear

; 100  : }

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	c9		 leave
  0002a	c3		 ret	 0
??0CNetDatagramReceiver@@QAE@XZ ENDP			; CNetDatagramReceiver::CNetDatagramReceiver
_TEXT	ENDS
END
