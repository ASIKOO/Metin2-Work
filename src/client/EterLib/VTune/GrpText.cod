; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpText.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?Type@CGraphicText@@SAKXZ			; CGraphicText::Type
PUBLIC	??0CGraphicText@@QAE@PBD@Z			; CGraphicText::CGraphicText
PUBLIC	??1CGraphicText@@UAE@XZ				; CGraphicText::~CGraphicText
PUBLIC	?CreateDeviceObjects@CGraphicText@@UAE_NXZ	; CGraphicText::CreateDeviceObjects
PUBLIC	?DestroyDeviceObjects@CGraphicText@@UAEXXZ	; CGraphicText::DestroyDeviceObjects
PUBLIC	?GetFontTexturePointer@CGraphicText@@QAEPAVCGraphicFontTexture@@XZ ; CGraphicText::GetFontTexturePointer
PUBLIC	?OnLoad@CGraphicText@@MAE_NHPBX@Z		; CGraphicText::OnLoad
PUBLIC	?OnClear@CGraphicText@@MAEXXZ			; CGraphicText::OnClear
PUBLIC	?OnIsEmpty@CGraphicText@@MBE_NXZ		; CGraphicText::OnIsEmpty
PUBLIC	?OnIsType@CGraphicText@@MAE_NK@Z		; CGraphicText::OnIsType
PUBLIC	??_GCGraphicText@@UAEPAXI@Z			; CGraphicText::`scalar deleting destructor'
PUBLIC	??_7CGraphicText@@6B@				; CGraphicText::`vftable'
PUBLIC	??_C@_0N@JPGFHJCC@CGraphicText@			; `string'
PUBLIC	??_R4CGraphicText@@6B@				; CGraphicText::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCGraphicText@@@8			; CGraphicText `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicText@@8				; CGraphicText::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicText@@8				; CGraphicText::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGraphicText@@8			; CGraphicText::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CResource@@8			; CResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCResource@@@8				; CResource `RTTI Type Descriptor'
PUBLIC	??_R3CResource@@8				; CResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CResource@@8				; CResource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CReferenceObject@@8		; CReferenceObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCReferenceObject@@@8			; CReferenceObject `RTTI Type Descriptor'
PUBLIC	??_R3CReferenceObject@@8			; CReferenceObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CReferenceObject@@8			; CReferenceObject::`RTTI Base Class Array'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	___report_rangecheckfailure:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__atoi64:PROC
EXTRN	_isdigit:PROC
EXTRN	_strrchr:PROC
EXTRN	_strncpy:PROC
EXTRN	?MIN@@YAHHH@Z:PROC				; MIN
EXTRN	?StringToType@CResource@@SAKPBD@Z:PROC		; CResource::StringToType
EXTRN	??0CResource@@QAE@PBD@Z:PROC			; CResource::CResource
EXTRN	??1CResource@@UAE@XZ:PROC			; CResource::~CResource
EXTRN	?OnIsType@CResource@@MAE_NK@Z:PROC		; CResource::OnIsType
EXTRN	?OnConstruct@CResource@@MAEXXZ:PROC		; CResource::OnConstruct
EXTRN	?OnSelfDestruct@CResource@@MAEXXZ:PROC		; CResource::OnSelfDestruct
EXTRN	??0CGraphicFontTexture@@QAE@XZ:PROC		; CGraphicFontTexture::CGraphicFontTexture
EXTRN	??1CGraphicFontTexture@@UAE@XZ:PROC		; CGraphicFontTexture::~CGraphicFontTexture
EXTRN	?Destroy@CGraphicFontTexture@@QAEXXZ:PROC	; CGraphicFontTexture::Destroy
EXTRN	?Create@CGraphicFontTexture@@QAE_NPBDH_N@Z:PROC	; CGraphicFontTexture::Create
EXTRN	?CreateDeviceObjects@CGraphicFontTexture@@QAE_NXZ:PROC ; CGraphicFontTexture::CreateDeviceObjects
EXTRN	?DestroyDeviceObjects@CGraphicFontTexture@@QAEXXZ:PROC ; CGraphicFontTexture::DestroyDeviceObjects
EXTRN	??_ECGraphicText@@UAEPAXI@Z:PROC		; CGraphicText::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?s_type@?1??Type@CGraphicText@@SAKXZ@4KA
_BSS	SEGMENT
?s_type@?1??Type@CGraphicText@@SAKXZ@4KA DD 01H DUP (?)	; `CGraphicText::Type'::`2'::s_type
_BSS	ENDS
;	COMDAT ?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA DD 01H DUP (?)	; `CGraphicText::Type'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?strName@?1??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA
_BSS	SEGMENT
?strName@?1??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA DB 020H DUP (?) ; `CGraphicText::OnLoad'::`2'::strName
_BSS	ENDS
;	COMDAT ?num@?4??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA
_BSS	SEGMENT
?num@?4??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA DB 08H DUP (?) ; `CGraphicText::OnLoad'::`5'::num
_BSS	ENDS
;	COMDAT ??_R2CReferenceObject@@8
rdata$r	SEGMENT
??_R2CReferenceObject@@8 DD FLAT:??_R1A@?0A@EA@CReferenceObject@@8 ; CReferenceObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CReferenceObject@@8
rdata$r	SEGMENT
??_R3CReferenceObject@@8 DD 00H				; CReferenceObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCReferenceObject@@@8
data$rs	SEGMENT
??_R0?AVCReferenceObject@@@8 DD FLAT:??_7type_info@@6B@	; CReferenceObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCReferenceObject@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CReferenceObject@@8 DD FLAT:??_R0?AVCReferenceObject@@@8 ; CReferenceObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CResource@@8
rdata$r	SEGMENT
??_R2CResource@@8 DD FLAT:??_R1A@?0A@EA@CResource@@8	; CResource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CResource@@8
rdata$r	SEGMENT
??_R3CResource@@8 DD 00H				; CResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCResource@@@8
data$rs	SEGMENT
??_R0?AVCResource@@@8 DD FLAT:??_7type_info@@6B@	; CResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCResource@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CResource@@8 DD FLAT:??_R0?AVCResource@@@8 ; CResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CResource@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicText@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicText@@8 DD FLAT:??_R0?AVCGraphicText@@@8 ; CGraphicText::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicText@@8
rdata$r	ENDS
;	COMDAT ??_R2CGraphicText@@8
rdata$r	SEGMENT
??_R2CGraphicText@@8 DD FLAT:??_R1A@?0A@EA@CGraphicText@@8 ; CGraphicText::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CResource@@8
	DD	FLAT:??_R1A@?0A@EA@CReferenceObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CGraphicText@@8
rdata$r	SEGMENT
??_R3CGraphicText@@8 DD 00H				; CGraphicText::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CGraphicText@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicText@@@8
data$rs	SEGMENT
??_R0?AVCGraphicText@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicText `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicText@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CGraphicText@@6B@
rdata$r	SEGMENT
??_R4CGraphicText@@6B@ DD 00H				; CGraphicText::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCGraphicText@@@8
	DD	FLAT:??_R3CGraphicText@@8
rdata$r	ENDS
;	COMDAT ??_C@_0N@JPGFHJCC@CGraphicText@
CONST	SEGMENT
??_C@_0N@JPGFHJCC@CGraphicText@ DB 'CGraphicText', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CGraphicText@@6B@
CONST	SEGMENT
??_7CGraphicText@@6B@ DD FLAT:??_R4CGraphicText@@6B@	; CGraphicText::`vftable'
	DD	FLAT:??_ECGraphicText@@UAEPAXI@Z
	DD	FLAT:?OnConstruct@CResource@@MAEXXZ
	DD	FLAT:?OnSelfDestruct@CResource@@MAEXXZ
	DD	FLAT:?CreateDeviceObjects@CGraphicText@@UAE_NXZ
	DD	FLAT:?DestroyDeviceObjects@CGraphicText@@UAEXXZ
	DD	FLAT:?OnLoad@CGraphicText@@MAE_NHPBX@Z
	DD	FLAT:?OnClear@CGraphicText@@MAEXXZ
	DD	FLAT:?OnIsEmpty@CGraphicText@@MBE_NXZ
	DD	FLAT:?OnIsType@CGraphicText@@MAE_NK@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CGraphicText@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CGraphicText@@QAE@PBD@Z$0
__ehfuncinfo$??0CGraphicText@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CGraphicText@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Type@CGraphicText@@SAKXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Type@CGraphicText@@SAKXZ$0
__ehfuncinfo$?Type@CGraphicText@@SAKXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Type@CGraphicText@@SAKXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_GCGraphicText@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCGraphicText@@UAEPAXI@Z PROC			; CGraphicText::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CGraphicText@@UAE@XZ	; CGraphicText::~CGraphicText
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0f		 je	 SHORT $LN2@scalar
  00017	68 e0 00 00 00	 push	 224			; 000000e0H
  0001c	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00024	59		 pop	 ecx
  00025	59		 pop	 ecx
$LN2@scalar:
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	c9		 leave
  0002a	c2 04 00	 ret	 4
??_GCGraphicText@@UAEPAXI@Z ENDP			; CGraphicText::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpText.cpp
;	COMDAT ?OnIsType@CGraphicText@@MAE_NK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_type$ = 8						; size = 4
?OnIsType@CGraphicText@@MAE_NK@Z PROC			; CGraphicText::OnIsType, COMDAT
; _this$ = ecx

; 96   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 97   : 	if (CGraphicText::Type() == type)

  00007	e8 00 00 00 00	 call	 ?Type@CGraphicText@@SAKXZ ; CGraphicText::Type
  0000c	3b 45 08	 cmp	 eax, DWORD PTR _type$[ebp]
  0000f	75 04		 jne	 SHORT $LN2@OnIsType

; 98   : 		return true;

  00011	b0 01		 mov	 al, 1
  00013	eb 0b		 jmp	 SHORT $LN1@OnIsType
$LN2@OnIsType:

; 99   : 	
; 100  : 	return CResource::OnIsType(type);

  00015	ff 75 08	 push	 DWORD PTR _type$[ebp]
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ?OnIsType@CResource@@MAE_NK@Z ; CResource::OnIsType
$LN1@OnIsType:

; 101  : }

  00020	c9		 leave
  00021	c2 04 00	 ret	 4
?OnIsType@CGraphicText@@MAE_NK@Z ENDP			; CGraphicText::OnIsType
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpText.cpp
;	COMDAT ?OnIsEmpty@CGraphicText@@MBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnIsEmpty@CGraphicText@@MBE_NXZ PROC			; CGraphicText::OnIsEmpty, COMDAT
; _this$ = ecx

; 91   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 92   : 	return m_fontTexture.IsEmpty();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 2c	 add	 ecx, 44			; 0000002cH
  0000d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00010	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  00013	ff 50 04	 call	 DWORD PTR [eax+4]

; 93   : }

  00016	c9		 leave
  00017	c3		 ret	 0
?OnIsEmpty@CGraphicText@@MBE_NXZ ENDP			; CGraphicText::OnIsEmpty
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpText.cpp
;	COMDAT ?OnClear@CGraphicText@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnClear@CGraphicText@@MAEXXZ PROC			; CGraphicText::OnClear, COMDAT
; _this$ = ecx

; 86   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 87   : 	m_fontTexture.Destroy();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 2c	 add	 ecx, 44			; 0000002cH
  0000d	e8 00 00 00 00	 call	 ?Destroy@CGraphicFontTexture@@QAEXXZ ; CGraphicFontTexture::Destroy

; 88   : }

  00012	c9		 leave
  00013	c3		 ret	 0
?OnClear@CGraphicText@@MAEXXZ ENDP			; CGraphicText::OnClear
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpText.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpText.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\Resource.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpText.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\Resource.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpText.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\Resource.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpText.cpp
;	COMDAT ?OnLoad@CGraphicText@@MAE_NHPBX@Z
_TEXT	SEGMENT
$T1 = -52						; size = 4
$T2 = -48						; size = 4
$T3 = -44						; size = 4
$T4 = -40						; size = 4
$T5 = -36						; size = 4
$T6 = -32						; size = 4
_size$ = -28						; size = 4
_bItalic$ = -24						; size = 1
$T7 = -20						; size = 4
$T8 = -16						; size = 4
_i$9 = -12						; size = 4
_this$ = -8						; size = 4
_p$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?OnLoad@CGraphicText@@MAE_NHPBX@Z PROC			; CGraphicText::OnLoad, COMDAT
; _this$ = ecx

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 36   : 	static char strName[32];
; 37   : 	int size;
; 38   : 	bool bItalic = false;

  00009	c6 45 e8 00	 mov	 BYTE PTR _bItalic$[ebp], 0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 3752 :         return _Mypair._Myval2._Myptr();

  0000d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00013	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00018	89 45 e0	 mov	 DWORD PTR $T6[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpText.cpp

; 44   : 	const char * p = strrchr(GetFileName(), ':');

  0001b	6a 3a		 push	 58			; 0000003aH
  0001d	ff 75 e0	 push	 DWORD PTR $T6[ebp]
  00020	e8 00 00 00 00	 call	 _strrchr
  00025	59		 pop	 ecx
  00026	59		 pop	 ecx
  00027	89 45 fc	 mov	 DWORD PTR _p$[ebp], eax

; 45   : 
; 46   : 	if (p)

  0002a	83 7d fc 00	 cmp	 DWORD PTR _p$[ebp], 0
  0002e	0f 84 c0 00 00
	00		 je	 $LN4@OnLoad
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\Resource.h

; 46   : 		const char *	GetFileName() const			{ return m_stFileName.c_str();				}

  00034	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0003a	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0003f	89 45 dc	 mov	 DWORD PTR $T5[ebp], eax
  00042	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00048	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0004d	89 45 d8	 mov	 DWORD PTR $T4[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpText.cpp

; 48   : 		strncpy(strName, GetFileName(), MIN(31, p - GetFileName()));

  00050	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00053	2b 45 dc	 sub	 eax, DWORD PTR $T5[ebp]
  00056	50		 push	 eax
  00057	6a 1f		 push	 31			; 0000001fH
  00059	e8 00 00 00 00	 call	 ?MIN@@YAHHH@Z		; MIN
  0005e	59		 pop	 ecx
  0005f	59		 pop	 ecx
  00060	50		 push	 eax
  00061	ff 75 d8	 push	 DWORD PTR $T4[ebp]
  00064	68 00 00 00 00	 push	 OFFSET ?strName@?1??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA
  00069	e8 00 00 00 00	 call	 _strncpy
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 49   : 		++p;

  00071	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00074	40		 inc	 eax
  00075	89 45 fc	 mov	 DWORD PTR _p$[ebp], eax

; 50   : 
; 51   : 		static char num[8];
; 52   : 
; 53   : 		int i = 0;

  00078	83 65 f4 00	 and	 DWORD PTR _i$9[ebp], 0
$LN2@OnLoad:

; 54   : 		while (*p && isdigit(*p))

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  0007f	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00082	85 c0		 test	 eax, eax
  00084	74 2f		 je	 SHORT $LN3@OnLoad
  00086	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00089	0f be 00	 movsx	 eax, BYTE PTR [eax]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 _isdigit
  00092	59		 pop	 ecx
  00093	85 c0		 test	 eax, eax
  00095	74 1e		 je	 SHORT $LN3@OnLoad

; 55   : 		{
; 56   : 			num[i++] = *(p++);

  00097	8b 45 f4	 mov	 eax, DWORD PTR _i$9[ebp]
  0009a	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0009d	8a 09		 mov	 cl, BYTE PTR [ecx]
  0009f	88 88 00 00 00
	00		 mov	 BYTE PTR ?num@?4??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA[eax], cl
  000a5	8b 45 f4	 mov	 eax, DWORD PTR _i$9[ebp]
  000a8	40		 inc	 eax
  000a9	89 45 f4	 mov	 DWORD PTR _i$9[ebp], eax
  000ac	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  000af	40		 inc	 eax
  000b0	89 45 fc	 mov	 DWORD PTR _p$[ebp], eax

; 57   : 		}

  000b3	eb c7		 jmp	 SHORT $LN2@OnLoad
$LN3@OnLoad:

; 58   : 
; 59   : 		num[i] = '\0';

  000b5	8b 45 f4	 mov	 eax, DWORD PTR _i$9[ebp]
  000b8	89 45 f0	 mov	 DWORD PTR $T8[ebp], eax
  000bb	83 7d f0 08	 cmp	 DWORD PTR $T8[ebp], 8
  000bf	73 02		 jae	 SHORT $LN11@OnLoad
  000c1	eb 05		 jmp	 SHORT $LN12@OnLoad
$LN11@OnLoad:
  000c3	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN12@OnLoad:
  000c8	8b 45 f0	 mov	 eax, DWORD PTR $T8[ebp]
  000cb	c6 80 00 00 00
	00 00		 mov	 BYTE PTR ?num@?4??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA[eax], 0

; 60   : 		if(*p == 'i')

  000d2	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  000d5	0f be 00	 movsx	 eax, BYTE PTR [eax]
  000d8	83 f8 69	 cmp	 eax, 105		; 00000069H
  000db	75 04		 jne	 SHORT $LN6@OnLoad

; 61   : 			bItalic = true;

  000dd	c6 45 e8 01	 mov	 BYTE PTR _bItalic$[ebp], 1
$LN6@OnLoad:

; 62   : 		size = atoi(num);

  000e1	68 00 00 00 00	 push	 OFFSET ?num@?4??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA
  000e6	e8 00 00 00 00	 call	 __atoi64
  000eb	59		 pop	 ecx
  000ec	89 45 e4	 mov	 DWORD PTR _size$[ebp], eax

; 63   : 	}

  000ef	e9 89 00 00 00	 jmp	 $LN5@OnLoad
$LN4@OnLoad:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\Resource.h

; 46   : 		const char *	GetFileName() const			{ return m_stFileName.c_str();				}

  000f4	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000f7	83 c1 0c	 add	 ecx, 12			; 0000000cH
  000fa	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  000ff	89 45 d4	 mov	 DWORD PTR $T3[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpText.cpp

; 66   : 		p = strrchr(GetFileName(), '.');

  00102	6a 2e		 push	 46			; 0000002eH
  00104	ff 75 d4	 push	 DWORD PTR $T3[ebp]
  00107	e8 00 00 00 00	 call	 _strrchr
  0010c	59		 pop	 ecx
  0010d	59		 pop	 ecx
  0010e	89 45 fc	 mov	 DWORD PTR _p$[ebp], eax

; 67   : 
; 68   : 		if (!p)

  00111	83 7d fc 00	 cmp	 DWORD PTR _p$[ebp], 0
  00115	75 22		 jne	 SHORT $LN7@OnLoad

; 69   : 		{
; 70   : 			assert(!"CGraphicText::OnLoadFromFile there is no extension (ie: .fnt)");
; 71   : 			strName[0] = '\0';

  00117	33 c0		 xor	 eax, eax
  00119	40		 inc	 eax
  0011a	6b c0 00	 imul	 eax, eax, 0
  0011d	89 45 ec	 mov	 DWORD PTR $T7[ebp], eax
  00120	83 7d ec 20	 cmp	 DWORD PTR $T7[ebp], 32	; 00000020H
  00124	73 02		 jae	 SHORT $LN13@OnLoad
  00126	eb 05		 jmp	 SHORT $LN14@OnLoad
$LN13@OnLoad:
  00128	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN14@OnLoad:
  0012d	8b 45 ec	 mov	 eax, DWORD PTR $T7[ebp]
  00130	c6 80 00 00 00
	00 00		 mov	 BYTE PTR ?strName@?1??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA[eax], 0

; 72   : 		}

  00137	eb 3d		 jmp	 SHORT $LN8@OnLoad
$LN7@OnLoad:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\Resource.h

; 46   : 		const char *	GetFileName() const			{ return m_stFileName.c_str();				}

  00139	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0013c	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0013f	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00144	89 45 d0	 mov	 DWORD PTR $T2[ebp], eax
  00147	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0014a	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0014d	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00152	89 45 cc	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpText.cpp

; 74   : 			strncpy(strName, GetFileName(), MIN(31, p - GetFileName()));

  00155	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00158	2b 45 d0	 sub	 eax, DWORD PTR $T2[ebp]
  0015b	50		 push	 eax
  0015c	6a 1f		 push	 31			; 0000001fH
  0015e	e8 00 00 00 00	 call	 ?MIN@@YAHHH@Z		; MIN
  00163	59		 pop	 ecx
  00164	59		 pop	 ecx
  00165	50		 push	 eax
  00166	ff 75 cc	 push	 DWORD PTR $T1[ebp]
  00169	68 00 00 00 00	 push	 OFFSET ?strName@?1??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA
  0016e	e8 00 00 00 00	 call	 _strncpy
  00173	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN8@OnLoad:

; 75   : 		
; 76   : 		size = 12;

  00176	c7 45 e4 0c 00
	00 00		 mov	 DWORD PTR _size$[ebp], 12 ; 0000000cH
$LN5@OnLoad:

; 77   : 	}
; 78   : 
; 79   : 	if (!m_fontTexture.Create(strName, size, bItalic))

  0017d	ff 75 e8	 push	 DWORD PTR _bItalic$[ebp]
  00180	ff 75 e4	 push	 DWORD PTR _size$[ebp]
  00183	68 00 00 00 00	 push	 OFFSET ?strName@?1??OnLoad@CGraphicText@@MAE_NHPBX@Z@4PADA
  00188	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0018b	83 c1 2c	 add	 ecx, 44			; 0000002cH
  0018e	e8 00 00 00 00	 call	 ?Create@CGraphicFontTexture@@QAE_NPBDH_N@Z ; CGraphicFontTexture::Create
  00193	0f b6 c0	 movzx	 eax, al
  00196	85 c0		 test	 eax, eax
  00198	75 04		 jne	 SHORT $LN9@OnLoad

; 80   : 		return false;

  0019a	32 c0		 xor	 al, al
  0019c	eb 02		 jmp	 SHORT $LN10@OnLoad
$LN9@OnLoad:

; 81   : 
; 82   : 	return true;

  0019e	b0 01		 mov	 al, 1
$LN10@OnLoad:

; 83   : }

  001a0	c9		 leave
  001a1	c2 08 00	 ret	 8
?OnLoad@CGraphicText@@MAE_NHPBX@Z ENDP			; CGraphicText::OnLoad
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpText.cpp
;	COMDAT ?GetFontTexturePointer@CGraphicText@@QAEPAVCGraphicFontTexture@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFontTexturePointer@CGraphicText@@QAEPAVCGraphicFontTexture@@XZ PROC ; CGraphicText::GetFontTexturePointer, COMDAT
; _this$ = ecx

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 25   : 	return &m_fontTexture;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 c0 2c	 add	 eax, 44			; 0000002cH

; 26   : }

  0000d	c9		 leave
  0000e	c3		 ret	 0
?GetFontTexturePointer@CGraphicText@@QAEPAVCGraphicFontTexture@@XZ ENDP ; CGraphicText::GetFontTexturePointer
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpText.cpp
;	COMDAT ?DestroyDeviceObjects@CGraphicText@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?DestroyDeviceObjects@CGraphicText@@UAEXXZ PROC		; CGraphicText::DestroyDeviceObjects, COMDAT
; _this$ = ecx

; 19   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 20   : 	m_fontTexture.DestroyDeviceObjects();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 2c	 add	 ecx, 44			; 0000002cH
  0000d	e8 00 00 00 00	 call	 ?DestroyDeviceObjects@CGraphicFontTexture@@QAEXXZ ; CGraphicFontTexture::DestroyDeviceObjects

; 21   : }

  00012	c9		 leave
  00013	c3		 ret	 0
?DestroyDeviceObjects@CGraphicText@@UAEXXZ ENDP		; CGraphicText::DestroyDeviceObjects
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpText.cpp
;	COMDAT ?CreateDeviceObjects@CGraphicText@@UAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CreateDeviceObjects@CGraphicText@@UAE_NXZ PROC		; CGraphicText::CreateDeviceObjects, COMDAT
; _this$ = ecx

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 15   : 	return m_fontTexture.CreateDeviceObjects();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	83 c1 2c	 add	 ecx, 44			; 0000002cH
  0000d	e8 00 00 00 00	 call	 ?CreateDeviceObjects@CGraphicFontTexture@@QAE_NXZ ; CGraphicFontTexture::CreateDeviceObjects

; 16   : }

  00012	c9		 leave
  00013	c3		 ret	 0
?CreateDeviceObjects@CGraphicText@@UAE_NXZ ENDP		; CGraphicText::CreateDeviceObjects
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpText.cpp
;	COMDAT ??1CGraphicText@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CGraphicText@@UAE@XZ PROC				; CGraphicText::~CGraphicText, COMDAT
; _this$ = ecx

; 10   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CGraphicText@@6B@

; 11   : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00016	e8 00 00 00 00	 call	 ??1CGraphicFontTexture@@UAE@XZ ; CGraphicFontTexture::~CGraphicFontTexture
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	e8 00 00 00 00	 call	 ??1CResource@@UAE@XZ	; CResource::~CResource
  00023	c9		 leave
  00024	c3		 ret	 0
??1CGraphicText@@UAE@XZ ENDP				; CGraphicText::~CGraphicText
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpText.cpp
;	COMDAT ??0CGraphicText@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_c_szFileName$ = 8					; size = 4
??0CGraphicText@@QAE@PBD@Z PROC				; CGraphicText::CGraphicText, COMDAT
; _this$ = ecx

; 6    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CGraphicText@@QAE@PBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 5    : CGraphicText::CGraphicText(const char* c_szFileName) : CResource(c_szFileName)

  00026	ff 75 08	 push	 DWORD PTR _c_szFileName$[ebp]
  00029	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ??0CResource@@QAE@PBD@Z	; CResource::CResource
  00031	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 6    : {

  00035	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00038	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CGraphicText@@6B@
  0003e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00044	e8 00 00 00 00	 call	 ??0CGraphicFontTexture@@QAE@XZ ; CGraphicFontTexture::CGraphicFontTexture

; 7    : }

  00049	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0004d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00050	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00053	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005a	59		 pop	 ecx
  0005b	c9		 leave
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CGraphicText@@QAE@PBD@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CResource@@UAE@XZ	; CResource::~CResource
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0CGraphicText@@QAE@PBD@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CGraphicText@@QAE@PBD@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CGraphicText@@QAE@PBD@Z ENDP				; CGraphicText::CGraphicText
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\GrpText.cpp
;	COMDAT ?Type@CGraphicText@@SAKXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?Type@CGraphicText@@SAKXZ PROC				; CGraphicText::Type, COMDAT

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?Type@CGraphicText@@SAKXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 30   : 	static TType s_type = StringToType("CGraphicText");

  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR __tls_index
  00027	64 8b 0d 00 00
	00 00		 mov	 ecx, DWORD PTR fs:__tls_array
  0002e	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
  00031	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA
  00037	3b 88 00 00 00
	00		 cmp	 ecx, DWORD PTR __Init_thread_epoch[eax]
  0003d	7e 37		 jle	 SHORT $LN2@Type
  0003f	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA
  00044	e8 00 00 00 00	 call	 __Init_thread_header
  00049	59		 pop	 ecx
  0004a	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA, -1
  00051	75 23		 jne	 SHORT $LN2@Type
  00053	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JPGFHJCC@CGraphicText@
  0005c	e8 00 00 00 00	 call	 ?StringToType@CResource@@SAKPBD@Z ; CResource::StringToType
  00061	59		 pop	 ecx
  00062	a3 00 00 00 00	 mov	 DWORD PTR ?s_type@?1??Type@CGraphicText@@SAKXZ@4KA, eax
  00067	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0006b	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA
  00070	e8 00 00 00 00	 call	 __Init_thread_footer
  00075	59		 pop	 ecx
$LN2@Type:

; 31   : 	return s_type;

  00076	a1 00 00 00 00	 mov	 eax, DWORD PTR ?s_type@?1??Type@CGraphicText@@SAKXZ@4KA

; 32   : }

  0007b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00085	59		 pop	 ecx
  00086	c9		 leave
  00087	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Type@CGraphicText@@SAKXZ$0:
  00000	68 00 00 00 00	 push	 OFFSET ?$TSS0@?1??Type@CGraphicText@@SAKXZ@4HA
  00005	e8 00 00 00 00	 call	 __Init_thread_abort
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
  0000c	cc		 int	 3
  0000d	cc		 int	 3
  0000e	cc		 int	 3
  0000f	cc		 int	 3
  00010	cc		 int	 3
__ehhandler$?Type@CGraphicText@@SAKXZ:
  00011	90		 npad	 1
  00012	90		 npad	 1
  00013	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00017	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001a	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0001d	33 c8		 xor	 ecx, eax
  0001f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00024	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?Type@CGraphicText@@SAKXZ
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?Type@CGraphicText@@SAKXZ ENDP				; CGraphicText::Type
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
$T1 = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__Result$2 = -16					; size = 4
tv80 = -12						; size = 4
_this$ = -8						; size = 4
$T3 = -1						; size = 1
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 3751 :     _NODISCARD _Ret_z_ const _Elem* c_str() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 3752 :         return _Mypair._Myval2._Myptr();

  00009	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 f8	 mov	 DWORD PTR _this$[ebp], eax

; 2218 :         const value_type* _Result = _Bx._Buf;

  0000f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00012	89 45 f0	 mov	 DWORD PTR __Result$2[ebp], eax

; 2227 :         return _BUF_SIZE <= _Myres;

  00015	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  0001c	72 09		 jb	 SHORT $LN9@c_str
  0001e	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv80[ebp], 1
  00025	eb 04		 jmp	 SHORT $LN10@c_str
$LN9@c_str:
  00027	83 65 f4 00	 and	 DWORD PTR tv80[ebp], 0
$LN10@c_str:
  0002b	8a 45 f4	 mov	 al, BYTE PTR tv80[ebp]
  0002e	88 45 ff	 mov	 BYTE PTR $T3[ebp], al

; 2219 :         if (_Large_string_engaged()) {

  00031	0f b6 45 ff	 movzx	 eax, BYTE PTR $T3[ebp]
  00035	85 c0		 test	 eax, eax
  00037	74 0e		 je	 SHORT $LN4@c_str

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  00039	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 00		 mov	 eax, DWORD PTR [eax]
  0003e	89 45 e8	 mov	 DWORD PTR __Ptr$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  00041	8b 45 e8	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00044	89 45 f0	 mov	 DWORD PTR __Result$2[ebp], eax
$LN4@c_str:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2223 :         return _Result;

  00047	8b 45 f0	 mov	 eax, DWORD PTR __Result$2[ebp]
  0004a	89 45 e4	 mov	 DWORD PTR $T1[ebp], eax

; 3752 :         return _Mypair._Myval2._Myptr();

  0004d	8b 45 e4	 mov	 eax, DWORD PTR $T1[ebp]

; 3753 :     }

  00050	c9		 leave
  00051	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
__Ptr$ = -20						; size = 4
__Result$ = -16						; size = 4
tv76 = -12						; size = 4
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2217 :     const value_type* _Myptr() const noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2218 :         const value_type* _Result = _Bx._Buf;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 f0	 mov	 DWORD PTR __Result$[ebp], eax

; 2227 :         return _BUF_SIZE <= _Myres;

  0000f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00012	83 78 14 10	 cmp	 DWORD PTR [eax+20], 16	; 00000010H
  00016	72 09		 jb	 SHORT $LN6@Myptr
  00018	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  0001f	eb 04		 jmp	 SHORT $LN7@Myptr
$LN6@Myptr:
  00021	83 65 f4 00	 and	 DWORD PTR tv76[ebp], 0
$LN7@Myptr:
  00025	8a 45 f4	 mov	 al, BYTE PTR tv76[ebp]
  00028	88 45 ff	 mov	 BYTE PTR $T1[ebp], al

; 2219 :         if (_Large_string_engaged()) {

  0002b	0f b6 45 ff	 movzx	 eax, BYTE PTR $T1[ebp]
  0002f	85 c0		 test	 eax, eax
  00031	74 0e		 je	 SHORT $LN2@Myptr

; 2220 :             _Result = _Unfancy(_Bx._Ptr);

  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	8b 00		 mov	 eax, DWORD PTR [eax]
  00038	89 45 ec	 mov	 DWORD PTR __Ptr$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  0003b	8b 45 ec	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0003e	89 45 f0	 mov	 DWORD PTR __Result$[ebp], eax
$LN2@Myptr:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring

; 2223 :         return _Result;

  00041	8b 45 f0	 mov	 eax, DWORD PTR __Result$[ebp]

; 2224 :     }

  00044	c9		 leave
  00045	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
END
