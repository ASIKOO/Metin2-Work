; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\BlockTexture.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??0CBlockTexture@@QAE@XZ			; CBlockTexture::CBlockTexture
PUBLIC	??1CBlockTexture@@UAE@XZ			; CBlockTexture::~CBlockTexture
PUBLIC	?Create@CBlockTexture@@QAE_NPAVCGraphicDib@@ABUtagRECT@@KK@Z ; CBlockTexture::Create
PUBLIC	?SetClipRect@CBlockTexture@@QAEXABUtagRECT@@@Z	; CBlockTexture::SetClipRect
PUBLIC	?Render@CBlockTexture@@QAEXHH@Z			; CBlockTexture::Render
PUBLIC	?InvalidateRect@CBlockTexture@@QAEXABUtagRECT@@@Z ; CBlockTexture::InvalidateRect
PUBLIC	??_GCBlockTexture@@UAEPAXI@Z			; CBlockTexture::`scalar deleting destructor'
PUBLIC	??_7CBlockTexture@@6B@				; CBlockTexture::`vftable'
PUBLIC	?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
PUBLIC	??_C@_0CA@GIFEHILH@InvalidateRect?$CI?$CJ?5?9?5Strange?5rect@ ; `string'
PUBLIC	??_C@_0CG@ELGANAOG@InvalidateRect?$CI?$CJ?5?9?5Failed?5to?5Lo@ ; `string'
PUBLIC	??_C@_0CH@GNLBGAOD@Failed?5to?5create?5block?5texture?5@ ; `string'
PUBLIC	??_R4CBlockTexture@@6B@				; CBlockTexture::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBlockTexture@@@8			; CBlockTexture `RTTI Type Descriptor'
PUBLIC	??_R3CBlockTexture@@8				; CBlockTexture::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBlockTexture@@8				; CBlockTexture::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBlockTexture@@8			; CBlockTexture::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CGraphicBase@@8			; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGraphicBase@@@8			; CGraphicBase `RTTI Type Descriptor'
PUBLIC	??_R3CGraphicBase@@8				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGraphicBase@@8				; CGraphicBase::`RTTI Base Class Array'
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	?Tracef@@YAXPBDZZ:PROC				; Tracef
EXTRN	??0CGraphicBase@@QAE@XZ:PROC			; CGraphicBase::CGraphicBase
EXTRN	??1CGraphicBase@@UAE@XZ:PROC			; CGraphicBase::~CGraphicBase
EXTRN	?SetDefaultIndexBuffer@CGraphicBase@@SAXI@Z:PROC ; CGraphicBase::SetDefaultIndexBuffer
EXTRN	?SetPDTStream@CGraphicBase@@SA_NPAUSPDTVertex@@I@Z:PROC ; CGraphicBase::SetPDTStream
EXTRN	??_ECBlockTexture@@UAEPAXI@Z:PROC		; CBlockTexture::`vector deleting destructor'
EXTRN	?GetWidth@CGraphicDib@@QAEHXZ:PROC		; CGraphicDib::GetWidth
EXTRN	?GetPointer@CGraphicDib@@QAEPAXXZ:PROC		; CGraphicDib::GetPointer
EXTRN	?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z:PROC ; CStateManager::SetTexture
EXTRN	?SetVertexShader@CStateManager@@QAEXK@Z:PROC	; CStateManager::SetVertexShader
EXTRN	?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z:PROC ; CStateManager::DrawIndexedPrimitive
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A:DWORD ; CGraphicBase::ms_lpd3dDevice
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A
_BSS	SEGMENT
?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A DD 01H DUP (?) ; CSingleton<CStateManager>::ms_singleton
_BSS	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT ??_R2CGraphicBase@@8
rdata$r	SEGMENT
??_R2CGraphicBase@@8 DD FLAT:??_R1A@?0A@EA@CGraphicBase@@8 ; CGraphicBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CGraphicBase@@8
rdata$r	SEGMENT
??_R3CGraphicBase@@8 DD 00H				; CGraphicBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGraphicBase@@@8
data$rs	SEGMENT
??_R0?AVCGraphicBase@@@8 DD FLAT:??_7type_info@@6B@	; CGraphicBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCGraphicBase@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGraphicBase@@8 DD FLAT:??_R0?AVCGraphicBase@@@8 ; CGraphicBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBlockTexture@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBlockTexture@@8 DD FLAT:??_R0?AVCBlockTexture@@@8 ; CBlockTexture::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBlockTexture@@8
rdata$r	ENDS
;	COMDAT ??_R2CBlockTexture@@8
rdata$r	SEGMENT
??_R2CBlockTexture@@8 DD FLAT:??_R1A@?0A@EA@CBlockTexture@@8 ; CBlockTexture::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CGraphicBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CBlockTexture@@8
rdata$r	SEGMENT
??_R3CBlockTexture@@8 DD 00H				; CBlockTexture::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CBlockTexture@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBlockTexture@@@8
data$rs	SEGMENT
??_R0?AVCBlockTexture@@@8 DD FLAT:??_7type_info@@6B@	; CBlockTexture `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBlockTexture@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CBlockTexture@@6B@
rdata$r	SEGMENT
??_R4CBlockTexture@@6B@ DD 00H				; CBlockTexture::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBlockTexture@@@8
	DD	FLAT:??_R3CBlockTexture@@8
rdata$r	ENDS
;	COMDAT ??_C@_0CH@GNLBGAOD@Failed?5to?5create?5block?5texture?5@
CONST	SEGMENT
??_C@_0CH@GNLBGAOD@Failed?5to?5create?5block?5texture?5@ DB 'Failed to cr'
	DB	'eate block texture %u, %u', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@ELGANAOG@InvalidateRect?$CI?$CJ?5?9?5Failed?5to?5Lo@
CONST	SEGMENT
??_C@_0CG@ELGANAOG@InvalidateRect?$CI?$CJ?5?9?5Failed?5to?5Lo@ DB 'Invali'
	DB	'dateRect() - Failed to LockRect', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GIFEHILH@InvalidateRect?$CI?$CJ?5?9?5Strange?5rect@
CONST	SEGMENT
??_C@_0CA@GIFEHILH@InvalidateRect?$CI?$CJ?5?9?5Strange?5rect@ DB 'Invalid'
	DB	'ateRect() - Strange rect', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CBlockTexture@@6B@
CONST	SEGMENT
??_7CBlockTexture@@6B@ DD FLAT:??_R4CBlockTexture@@6B@	; CBlockTexture::`vftable'
	DD	FLAT:??_ECBlockTexture@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CBlockTexture@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_GCBlockTexture@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCBlockTexture@@UAEPAXI@Z PROC			; CBlockTexture::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CBlockTexture@@UAE@XZ ; CBlockTexture::~CBlockTexture
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0c		 je	 SHORT $LN2@scalar
  00017	6a 38		 push	 56			; 00000038H
  00019	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00021	59		 pop	 ecx
  00022	59		 pop	 ecx
$LN2@scalar:
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c9		 leave
  00027	c2 04 00	 ret	 4
??_GCBlockTexture@@UAEPAXI@Z ENDP			; CBlockTexture::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\BlockTexture.cpp
;	COMDAT ?InvalidateRect@CBlockTexture@@QAEXABUtagRECT@@@Z
_TEXT	SEGMENT
_lockedRect$ = -96					; size = 8
_dwSrcWidth$ = -88					; size = 4
_dwDstWidth$ = -84					; size = 4
_iclipWidth$ = -80					; size = 4
_iclipHeight$ = -76					; size = 4
tv134 = -72						; size = 4
tv94 = -68						; size = 4
tv86 = -64						; size = 4
tv80 = -60						; size = 4
_i$1 = -56						; size = 4
_pdwDst$ = -52						; size = 4
_pdwSrc$ = -48						; size = 4
_i$2 = -44						; size = 4
_this$ = -40						; size = 4
_dstRect$ = -36						; size = 16
_clipRect$ = -20					; size = 16
__$ArrayPad$ = -4					; size = 4
_c_rsrcRect$ = 8					; size = 4
?InvalidateRect@CBlockTexture@@QAEXABUtagRECT@@@Z PROC	; CBlockTexture::InvalidateRect, COMDAT
; _this$ = ecx

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	89 4d d8	 mov	 DWORD PTR _this$[ebp], ecx

; 103  : 	RECT dstRect = m_rect;

  00015	8b 75 d8	 mov	 esi, DWORD PTR _this$[ebp]
  00018	83 c6 08	 add	 esi, 8
  0001b	8d 7d dc	 lea	 edi, DWORD PTR _dstRect$[ebp]
  0001e	a5		 movsd
  0001f	a5		 movsd
  00020	a5		 movsd
  00021	a5		 movsd

; 104  : 	if (c_rsrcRect.right < dstRect.left ||
; 105  : 		c_rsrcRect.left > dstRect.right ||
; 106  : 		c_rsrcRect.bottom < dstRect.top ||

  00022	8b 45 08	 mov	 eax, DWORD PTR _c_rsrcRect$[ebp]
  00025	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00028	3b 45 dc	 cmp	 eax, DWORD PTR _dstRect$[ebp]
  0002b	7c 20		 jl	 SHORT $LN9@Invalidate
  0002d	8b 45 08	 mov	 eax, DWORD PTR _c_rsrcRect$[ebp]
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	3b 45 e4	 cmp	 eax, DWORD PTR _dstRect$[ebp+8]
  00035	7f 16		 jg	 SHORT $LN9@Invalidate
  00037	8b 45 08	 mov	 eax, DWORD PTR _c_rsrcRect$[ebp]
  0003a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0003d	3b 45 e0	 cmp	 eax, DWORD PTR _dstRect$[ebp+4]
  00040	7c 0b		 jl	 SHORT $LN9@Invalidate
  00042	8b 45 08	 mov	 eax, DWORD PTR _c_rsrcRect$[ebp]
  00045	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00048	3b 45 e8	 cmp	 eax, DWORD PTR _dstRect$[ebp+12]
  0004b	7e 10		 jle	 SHORT $LN8@Invalidate
$LN9@Invalidate:

; 107  : 		c_rsrcRect.top > dstRect.bottom)
; 108  : 	{
; 109  : 		Tracef("InvalidateRect() - Strange rect");

  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@GIFEHILH@InvalidateRect?$CI?$CJ?5?9?5Strange?5rect@
  00052	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef
  00057	59		 pop	 ecx

; 110  : 		return;

  00058	e9 b9 01 00 00	 jmp	 $LN1@Invalidate
$LN8@Invalidate:

; 111  : 	}
; 112  : 
; 113  : 
; 114  : 	// DIBBAR_LONGSIZE_BUGFIX
; 115  : 	const RECT clipRect = { 				
; 116  : 		max(c_rsrcRect.left - dstRect.left, 0),

  0005d	8b 45 08	 mov	 eax, DWORD PTR _c_rsrcRect$[ebp]
  00060	8b 00		 mov	 eax, DWORD PTR [eax]
  00062	2b 45 dc	 sub	 eax, DWORD PTR _dstRect$[ebp]
  00065	85 c0		 test	 eax, eax
  00067	7e 0d		 jle	 SHORT $LN14@Invalidate
  00069	8b 45 08	 mov	 eax, DWORD PTR _c_rsrcRect$[ebp]
  0006c	8b 00		 mov	 eax, DWORD PTR [eax]
  0006e	2b 45 dc	 sub	 eax, DWORD PTR _dstRect$[ebp]
  00071	89 45 c4	 mov	 DWORD PTR tv80[ebp], eax
  00074	eb 04		 jmp	 SHORT $LN15@Invalidate
$LN14@Invalidate:
  00076	83 65 c4 00	 and	 DWORD PTR tv80[ebp], 0
$LN15@Invalidate:
  0007a	8b 45 c4	 mov	 eax, DWORD PTR tv80[ebp]
  0007d	89 45 ec	 mov	 DWORD PTR _clipRect$[ebp], eax

; 117  : 		max(c_rsrcRect.top - dstRect.top, 0),

  00080	8b 45 08	 mov	 eax, DWORD PTR _c_rsrcRect$[ebp]
  00083	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00086	2b 45 e0	 sub	 eax, DWORD PTR _dstRect$[ebp+4]
  00089	85 c0		 test	 eax, eax
  0008b	7e 0e		 jle	 SHORT $LN16@Invalidate
  0008d	8b 45 08	 mov	 eax, DWORD PTR _c_rsrcRect$[ebp]
  00090	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00093	2b 45 e0	 sub	 eax, DWORD PTR _dstRect$[ebp+4]
  00096	89 45 c0	 mov	 DWORD PTR tv86[ebp], eax
  00099	eb 04		 jmp	 SHORT $LN17@Invalidate
$LN16@Invalidate:
  0009b	83 65 c0 00	 and	 DWORD PTR tv86[ebp], 0
$LN17@Invalidate:
  0009f	8b 45 c0	 mov	 eax, DWORD PTR tv86[ebp]
  000a2	89 45 f0	 mov	 DWORD PTR _clipRect$[ebp+4], eax

; 118  : 		min(c_rsrcRect.right - dstRect.left, dstRect.right - dstRect.left),

  000a5	8b 45 08	 mov	 eax, DWORD PTR _c_rsrcRect$[ebp]
  000a8	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  000ab	2b 45 dc	 sub	 eax, DWORD PTR _dstRect$[ebp]
  000ae	8b 4d e4	 mov	 ecx, DWORD PTR _dstRect$[ebp+8]
  000b1	2b 4d dc	 sub	 ecx, DWORD PTR _dstRect$[ebp]
  000b4	3b c1		 cmp	 eax, ecx
  000b6	7d 0e		 jge	 SHORT $LN18@Invalidate
  000b8	8b 45 08	 mov	 eax, DWORD PTR _c_rsrcRect$[ebp]
  000bb	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  000be	2b 45 dc	 sub	 eax, DWORD PTR _dstRect$[ebp]
  000c1	89 45 bc	 mov	 DWORD PTR tv94[ebp], eax
  000c4	eb 09		 jmp	 SHORT $LN19@Invalidate
$LN18@Invalidate:
  000c6	8b 45 e4	 mov	 eax, DWORD PTR _dstRect$[ebp+8]
  000c9	2b 45 dc	 sub	 eax, DWORD PTR _dstRect$[ebp]
  000cc	89 45 bc	 mov	 DWORD PTR tv94[ebp], eax
$LN19@Invalidate:
  000cf	8b 45 bc	 mov	 eax, DWORD PTR tv94[ebp]
  000d2	89 45 f4	 mov	 DWORD PTR _clipRect$[ebp+8], eax

; 119  : 		min(c_rsrcRect.bottom - dstRect.top, dstRect.bottom - dstRect.top),

  000d5	8b 45 08	 mov	 eax, DWORD PTR _c_rsrcRect$[ebp]
  000d8	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  000db	2b 45 e0	 sub	 eax, DWORD PTR _dstRect$[ebp+4]
  000de	8b 4d e8	 mov	 ecx, DWORD PTR _dstRect$[ebp+12]
  000e1	2b 4d e0	 sub	 ecx, DWORD PTR _dstRect$[ebp+4]
  000e4	3b c1		 cmp	 eax, ecx
  000e6	7d 0e		 jge	 SHORT $LN20@Invalidate
  000e8	8b 45 08	 mov	 eax, DWORD PTR _c_rsrcRect$[ebp]
  000eb	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  000ee	2b 45 e0	 sub	 eax, DWORD PTR _dstRect$[ebp+4]
  000f1	89 45 b8	 mov	 DWORD PTR tv134[ebp], eax
  000f4	eb 09		 jmp	 SHORT $LN21@Invalidate
$LN20@Invalidate:
  000f6	8b 45 e8	 mov	 eax, DWORD PTR _dstRect$[ebp+12]
  000f9	2b 45 e0	 sub	 eax, DWORD PTR _dstRect$[ebp+4]
  000fc	89 45 b8	 mov	 DWORD PTR tv134[ebp], eax
$LN21@Invalidate:
  000ff	8b 45 b8	 mov	 eax, DWORD PTR tv134[ebp]
  00102	89 45 f8	 mov	 DWORD PTR _clipRect$[ebp+12], eax

; 120  : 	};
; 121  : 	// END_OF_DIBBAR_LONGSIZE_BUGFIX
; 122  : 
; 123  : 
; 124  : 	DWORD * pdwSrc;
; 125  : 	pdwSrc = (DWORD *)m_pDIB->GetPointer();

  00105	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  00108	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0010b	e8 00 00 00 00	 call	 ?GetPointer@CGraphicDib@@QAEPAXXZ ; CGraphicDib::GetPointer
  00110	89 45 d0	 mov	 DWORD PTR _pdwSrc$[ebp], eax

; 126  : 	pdwSrc += dstRect.left + dstRect.top*m_pDIB->GetWidth();

  00113	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  00116	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00119	e8 00 00 00 00	 call	 ?GetWidth@CGraphicDib@@QAEHXZ ; CGraphicDib::GetWidth
  0011e	0f af 45 e0	 imul	 eax, DWORD PTR _dstRect$[ebp+4]
  00122	03 45 dc	 add	 eax, DWORD PTR _dstRect$[ebp]
  00125	8b 4d d0	 mov	 ecx, DWORD PTR _pdwSrc$[ebp]
  00128	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0012b	89 45 d0	 mov	 DWORD PTR _pdwSrc$[ebp], eax

; 127  : 
; 128  : 	D3DLOCKED_RECT lockedRect;
; 129  : 	if (FAILED(m_lpd3dTexture->LockRect(0, &lockedRect, &clipRect, 0)))

  0012e	6a 00		 push	 0
  00130	8d 45 ec	 lea	 eax, DWORD PTR _clipRect$[ebp]
  00133	50		 push	 eax
  00134	8d 45 a0	 lea	 eax, DWORD PTR _lockedRect$[ebp]
  00137	50		 push	 eax
  00138	6a 00		 push	 0
  0013a	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  0013d	8b 40 34	 mov	 eax, DWORD PTR [eax+52]
  00140	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  00143	8b 00		 mov	 eax, DWORD PTR [eax]
  00145	ff 71 34	 push	 DWORD PTR [ecx+52]
  00148	ff 50 40	 call	 DWORD PTR [eax+64]
  0014b	85 c0		 test	 eax, eax
  0014d	7d 10		 jge	 SHORT $LN10@Invalidate

; 130  : 	{
; 131  : 		Tracef("InvalidateRect() - Failed to LockRect");

  0014f	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@ELGANAOG@InvalidateRect?$CI?$CJ?5?9?5Failed?5to?5Lo@
  00154	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef
  00159	59		 pop	 ecx

; 132  : 		return;

  0015a	e9 b7 00 00 00	 jmp	 $LN1@Invalidate
$LN10@Invalidate:

; 133  : 	}
; 134  : 
; 135  : 	int iclipWidth = clipRect.right - clipRect.left;

  0015f	8b 45 f4	 mov	 eax, DWORD PTR _clipRect$[ebp+8]
  00162	2b 45 ec	 sub	 eax, DWORD PTR _clipRect$[ebp]
  00165	89 45 b0	 mov	 DWORD PTR _iclipWidth$[ebp], eax

; 136  : 	int iclipHeight = clipRect.bottom - clipRect.top;

  00168	8b 45 f8	 mov	 eax, DWORD PTR _clipRect$[ebp+12]
  0016b	2b 45 f0	 sub	 eax, DWORD PTR _clipRect$[ebp+4]
  0016e	89 45 b4	 mov	 DWORD PTR _iclipHeight$[ebp], eax

; 137  : 	DWORD * pdwDst = (DWORD *)lockedRect.pBits;

  00171	8b 45 a4	 mov	 eax, DWORD PTR _lockedRect$[ebp+4]
  00174	89 45 cc	 mov	 DWORD PTR _pdwDst$[ebp], eax

; 138  : 	DWORD dwDstWidth = lockedRect.Pitch>>2;

  00177	8b 45 a0	 mov	 eax, DWORD PTR _lockedRect$[ebp]
  0017a	c1 f8 02	 sar	 eax, 2
  0017d	89 45 ac	 mov	 DWORD PTR _dwDstWidth$[ebp], eax

; 139  : 	DWORD dwSrcWidth = m_pDIB->GetWidth();

  00180	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  00183	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00186	e8 00 00 00 00	 call	 ?GetWidth@CGraphicDib@@QAEHXZ ; CGraphicDib::GetWidth
  0018b	89 45 a8	 mov	 DWORD PTR _dwSrcWidth$[ebp], eax

; 140  : 	for (int i = 0; i < iclipHeight; ++i)

  0018e	83 65 c8 00	 and	 DWORD PTR _i$1[ebp], 0
  00192	eb 07		 jmp	 SHORT $LN4@Invalidate
$LN2@Invalidate:
  00194	8b 45 c8	 mov	 eax, DWORD PTR _i$1[ebp]
  00197	40		 inc	 eax
  00198	89 45 c8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@Invalidate:
  0019b	8b 45 c8	 mov	 eax, DWORD PTR _i$1[ebp]
  0019e	3b 45 b4	 cmp	 eax, DWORD PTR _iclipHeight$[ebp]
  001a1	7d 60		 jge	 SHORT $LN3@Invalidate

; 141  : 	{
; 142  : 		for (int i = 0; i < iclipWidth; ++i)

  001a3	83 65 d4 00	 and	 DWORD PTR _i$2[ebp], 0
  001a7	eb 07		 jmp	 SHORT $LN7@Invalidate
$LN5@Invalidate:
  001a9	8b 45 d4	 mov	 eax, DWORD PTR _i$2[ebp]
  001ac	40		 inc	 eax
  001ad	89 45 d4	 mov	 DWORD PTR _i$2[ebp], eax
$LN7@Invalidate:
  001b0	8b 45 d4	 mov	 eax, DWORD PTR _i$2[ebp]
  001b3	3b 45 b0	 cmp	 eax, DWORD PTR _iclipWidth$[ebp]
  001b6	7d 31		 jge	 SHORT $LN6@Invalidate

; 143  : 		{
; 144  : 			if (pdwSrc[i])

  001b8	8b 45 d4	 mov	 eax, DWORD PTR _i$2[ebp]
  001bb	8b 4d d0	 mov	 ecx, DWORD PTR _pdwSrc$[ebp]
  001be	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  001c2	74 19		 je	 SHORT $LN11@Invalidate

; 145  : 				pdwDst[i] = pdwSrc[i] | 0xff000000;

  001c4	8b 45 d4	 mov	 eax, DWORD PTR _i$2[ebp]
  001c7	8b 4d d0	 mov	 ecx, DWORD PTR _pdwSrc$[ebp]
  001ca	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
  001cd	0d 00 00 00 ff	 or	 eax, -16777216		; ff000000H
  001d2	8b 4d d4	 mov	 ecx, DWORD PTR _i$2[ebp]
  001d5	8b 55 cc	 mov	 edx, DWORD PTR _pdwDst$[ebp]
  001d8	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax
  001db	eb 0a		 jmp	 SHORT $LN12@Invalidate
$LN11@Invalidate:

; 146  : 			else
; 147  : 				pdwDst[i] = 0;

  001dd	8b 45 d4	 mov	 eax, DWORD PTR _i$2[ebp]
  001e0	8b 4d cc	 mov	 ecx, DWORD PTR _pdwDst$[ebp]
  001e3	83 24 81 00	 and	 DWORD PTR [ecx+eax*4], 0
$LN12@Invalidate:

; 148  : 		}

  001e7	eb c0		 jmp	 SHORT $LN5@Invalidate
$LN6@Invalidate:

; 149  : 		pdwDst += dwDstWidth;

  001e9	8b 45 ac	 mov	 eax, DWORD PTR _dwDstWidth$[ebp]
  001ec	8b 4d cc	 mov	 ecx, DWORD PTR _pdwDst$[ebp]
  001ef	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  001f2	89 45 cc	 mov	 DWORD PTR _pdwDst$[ebp], eax

; 150  : 		pdwSrc += dwSrcWidth;

  001f5	8b 45 a8	 mov	 eax, DWORD PTR _dwSrcWidth$[ebp]
  001f8	8b 4d d0	 mov	 ecx, DWORD PTR _pdwSrc$[ebp]
  001fb	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  001fe	89 45 d0	 mov	 DWORD PTR _pdwSrc$[ebp], eax

; 151  : 	}

  00201	eb 91		 jmp	 SHORT $LN2@Invalidate
$LN3@Invalidate:

; 152  : 
; 153  : 	m_lpd3dTexture->UnlockRect(0);

  00203	6a 00		 push	 0
  00205	8b 45 d8	 mov	 eax, DWORD PTR _this$[ebp]
  00208	8b 40 34	 mov	 eax, DWORD PTR [eax+52]
  0020b	8b 4d d8	 mov	 ecx, DWORD PTR _this$[ebp]
  0020e	8b 00		 mov	 eax, DWORD PTR [eax]
  00210	ff 71 34	 push	 DWORD PTR [ecx+52]
  00213	ff 50 44	 call	 DWORD PTR [eax+68]
$LN1@Invalidate:

; 154  : }

  00216	5f		 pop	 edi
  00217	5e		 pop	 esi
  00218	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0021b	33 cd		 xor	 ecx, ebp
  0021d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00222	c9		 leave
  00223	c2 04 00	 ret	 4
?InvalidateRect@CBlockTexture@@QAEXABUtagRECT@@@Z ENDP	; CBlockTexture::InvalidateRect
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\BlockTexture.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\BlockTexture.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\BlockTexture.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\BlockTexture.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\BlockTexture.cpp
;	COMDAT ?Render@CBlockTexture@@QAEXHH@Z
_TEXT	SEGMENT
tv482 = -132						; size = 8
tv466 = -124						; size = 8
tv450 = -116						; size = 8
tv434 = -108						; size = 8
$T1 = -100						; size = 8
$T2 = -92						; size = 8
$T3 = -84						; size = 8
$T4 = -76						; size = 8
tv365 = -68						; size = 4
___t$ = -64						; size = 4
tv478 = -60						; size = 4
_idy$5 = -56						; size = 4
tv462 = -52						; size = 4
_idy$6 = -48						; size = 4
tv446 = -44						; size = 4
_idx$7 = -40						; size = 4
tv430 = -36						; size = 4
_idx$8 = -32						; size = 4
___n$ = -28						; size = 4
_ev$ = -24						; size = 4
_eu$ = -20						; size = 4
_su$ = -16						; size = 4
_sv$ = -12						; size = 4
_iey$ = -8						; size = 4
_iex$ = -4						; size = 4
_isx$ = 0						; size = 4
_isy$ = 4						; size = 4
_this$ = 8						; size = 4
_vertices$ = 12						; size = 96
__$ArrayPad$ = 108					; size = 4
_ix$ = 120						; size = 4
_iy$ = 124						; size = 4
?Render@CBlockTexture@@QAEXHH@Z PROC			; CBlockTexture::Render, COMDAT
; _this$ = ecx

; 15   : {

  00000	55		 push	 ebp
  00001	8d 6c 24 90	 lea	 ebp, DWORD PTR [esp-112]
  00005	81 ec f4 00 00
	00		 sub	 esp, 244		; 000000f4H
  0000b	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00010	33 c5		 xor	 eax, ebp
  00012	89 45 6c	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00015	89 4d 08	 mov	 DWORD PTR _this$[ebp], ecx

; 16   : 	int isx = ix + m_rect.left;

  00018	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b 4d 78	 mov	 ecx, DWORD PTR _ix$[ebp]
  0001e	03 48 08	 add	 ecx, DWORD PTR [eax+8]
  00021	89 4d 00	 mov	 DWORD PTR _isx$[ebp], ecx

; 17   : 	int isy = iy + m_rect.top;

  00024	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 4d 7c	 mov	 ecx, DWORD PTR _iy$[ebp]
  0002a	03 48 0c	 add	 ecx, DWORD PTR [eax+12]
  0002d	89 4d 04	 mov	 DWORD PTR _isy$[ebp], ecx

; 18   : 	int iex = ix + m_rect.left + m_dwWidth;

  00030	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00033	8b 4d 78	 mov	 ecx, DWORD PTR _ix$[ebp]
  00036	03 48 08	 add	 ecx, DWORD PTR [eax+8]
  00039	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	03 48 2c	 add	 ecx, DWORD PTR [eax+44]
  0003f	89 4d fc	 mov	 DWORD PTR _iex$[ebp], ecx

; 19   : 	int iey = iy + m_rect.top + m_dwHeight;

  00042	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b 4d 7c	 mov	 ecx, DWORD PTR _iy$[ebp]
  00048	03 48 0c	 add	 ecx, DWORD PTR [eax+12]
  0004b	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0004e	03 48 30	 add	 ecx, DWORD PTR [eax+48]
  00051	89 4d f8	 mov	 DWORD PTR _iey$[ebp], ecx

; 20   : 
; 21   : 	float su = 0.0f;

  00054	0f 57 c0	 xorps	 xmm0, xmm0
  00057	f3 0f 11 45 f0	 movss	 DWORD PTR _su$[ebp], xmm0

; 22   : 	float sv = 0.0f;

  0005c	0f 57 c0	 xorps	 xmm0, xmm0
  0005f	f3 0f 11 45 f4	 movss	 DWORD PTR _sv$[ebp], xmm0

; 23   : 	float eu = 1.0f;

  00064	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0006c	f3 0f 11 45 ec	 movss	 DWORD PTR _eu$[ebp], xmm0

; 24   : 	float ev = 1.0f;

  00071	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00079	f3 0f 11 45 e8	 movss	 DWORD PTR _ev$[ebp], xmm0

; 25   : 
; 26   : 	if (m_bClipEnable)

  0007e	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00081	83 78 28 00	 cmp	 DWORD PTR [eax+40], 0
  00085	0f 84 b6 01 00
	00		 je	 $LN10@Render

; 27   : 	{
; 28   : 		if (isx > m_clipRect.right)

  0008b	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0008e	8b 4d 00	 mov	 ecx, DWORD PTR _isx$[ebp]
  00091	3b 48 20	 cmp	 ecx, DWORD PTR [eax+32]
  00094	7e 05		 jle	 SHORT $LN3@Render

; 29   : 			return;

  00096	e9 ff 03 00 00	 jmp	 $LN1@Render
$LN3@Render:

; 30   : 		if (iex < m_clipRect.left)

  0009b	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0009e	8b 4d fc	 mov	 ecx, DWORD PTR _iex$[ebp]
  000a1	3b 48 18	 cmp	 ecx, DWORD PTR [eax+24]
  000a4	7d 05		 jge	 SHORT $LN4@Render

; 31   : 			return;

  000a6	e9 ef 03 00 00	 jmp	 $LN1@Render
$LN4@Render:

; 32   : 
; 33   : 		if (isy > m_clipRect.bottom)

  000ab	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  000ae	8b 4d 04	 mov	 ecx, DWORD PTR _isy$[ebp]
  000b1	3b 48 24	 cmp	 ecx, DWORD PTR [eax+36]
  000b4	7e 05		 jle	 SHORT $LN5@Render

; 34   : 			return;

  000b6	e9 df 03 00 00	 jmp	 $LN1@Render
$LN5@Render:

; 35   : 		if (iey < m_clipRect.top)

  000bb	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  000be	8b 4d f8	 mov	 ecx, DWORD PTR _iey$[ebp]
  000c1	3b 48 1c	 cmp	 ecx, DWORD PTR [eax+28]
  000c4	7d 05		 jge	 SHORT $LN6@Render

; 36   : 			return;

  000c6	e9 cf 03 00 00	 jmp	 $LN1@Render
$LN6@Render:

; 37   : 
; 38   : 		if (m_clipRect.left > isx)

  000cb	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  000ce	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  000d1	3b 45 00	 cmp	 eax, DWORD PTR _isx$[ebp]
  000d4	7e 4f		 jle	 SHORT $LN7@Render

; 39   : 		{
; 40   : 			int idx = m_clipRect.left - isx;

  000d6	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  000d9	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  000dc	2b 45 00	 sub	 eax, DWORD PTR _isx$[ebp]
  000df	89 45 e0	 mov	 DWORD PTR _idx$8[ebp], eax

; 41   : 			isx += idx;

  000e2	8b 45 00	 mov	 eax, DWORD PTR _isx$[ebp]
  000e5	03 45 e0	 add	 eax, DWORD PTR _idx$8[ebp]
  000e8	89 45 00	 mov	 DWORD PTR _isx$[ebp], eax

; 42   : 			su += float(idx) / float(m_dwWidth);

  000eb	f3 0f 2a 45 e0	 cvtsi2ss xmm0, DWORD PTR _idx$8[ebp]
  000f0	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  000f3	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  000f6	89 45 dc	 mov	 DWORD PTR tv430[ebp], eax
  000f9	f2 0f 2a 4d dc	 cvtsi2sd xmm1, DWORD PTR tv430[ebp]
  000fe	8b 45 dc	 mov	 eax, DWORD PTR tv430[ebp]
  00101	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00104	f2 0f 58 0c c5
	00 00 00 00	 addsd	 xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  0010d	f2 0f 11 4d 94	 movsd	 QWORD PTR tv434[ebp], xmm1
  00112	f2 0f 5a 4d 94	 cvtsd2ss xmm1, QWORD PTR tv434[ebp]
  00117	f3 0f 5e c1	 divss	 xmm0, xmm1
  0011b	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _su$[ebp]
  00120	f3 0f 11 45 f0	 movss	 DWORD PTR _su$[ebp], xmm0
$LN7@Render:

; 43   : 		}
; 44   : 		if (iex > m_clipRect.right)

  00125	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00128	8b 4d fc	 mov	 ecx, DWORD PTR _iex$[ebp]
  0012b	3b 48 20	 cmp	 ecx, DWORD PTR [eax+32]
  0012e	7e 53		 jle	 SHORT $LN8@Render

; 45   : 		{
; 46   : 			int idx = iex - m_clipRect.right;

  00130	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00133	8b 4d fc	 mov	 ecx, DWORD PTR _iex$[ebp]
  00136	2b 48 20	 sub	 ecx, DWORD PTR [eax+32]
  00139	89 4d d8	 mov	 DWORD PTR _idx$7[ebp], ecx

; 47   : 			iex -= idx;

  0013c	8b 45 fc	 mov	 eax, DWORD PTR _iex$[ebp]
  0013f	2b 45 d8	 sub	 eax, DWORD PTR _idx$7[ebp]
  00142	89 45 fc	 mov	 DWORD PTR _iex$[ebp], eax

; 48   : 			eu -= float(idx) / float(m_dwWidth);

  00145	f3 0f 2a 45 d8	 cvtsi2ss xmm0, DWORD PTR _idx$7[ebp]
  0014a	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  0014d	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  00150	89 45 d4	 mov	 DWORD PTR tv446[ebp], eax
  00153	f2 0f 2a 4d d4	 cvtsi2sd xmm1, DWORD PTR tv446[ebp]
  00158	8b 45 d4	 mov	 eax, DWORD PTR tv446[ebp]
  0015b	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0015e	f2 0f 58 0c c5
	00 00 00 00	 addsd	 xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00167	f2 0f 11 4d 8c	 movsd	 QWORD PTR tv450[ebp], xmm1
  0016c	f2 0f 5a 4d 8c	 cvtsd2ss xmm1, QWORD PTR tv450[ebp]
  00171	f3 0f 5e c1	 divss	 xmm0, xmm1
  00175	f3 0f 10 4d ec	 movss	 xmm1, DWORD PTR _eu$[ebp]
  0017a	f3 0f 5c c8	 subss	 xmm1, xmm0
  0017e	f3 0f 11 4d ec	 movss	 DWORD PTR _eu$[ebp], xmm1
$LN8@Render:

; 49   : 		}
; 50   : 
; 51   : 		if (m_clipRect.top > isy)

  00183	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00186	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  00189	3b 45 04	 cmp	 eax, DWORD PTR _isy$[ebp]
  0018c	7e 4f		 jle	 SHORT $LN9@Render

; 52   : 		{
; 53   : 			int idy = m_clipRect.top - isy;

  0018e	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00191	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  00194	2b 45 04	 sub	 eax, DWORD PTR _isy$[ebp]
  00197	89 45 d0	 mov	 DWORD PTR _idy$6[ebp], eax

; 54   : 			isy += idy;

  0019a	8b 45 04	 mov	 eax, DWORD PTR _isy$[ebp]
  0019d	03 45 d0	 add	 eax, DWORD PTR _idy$6[ebp]
  001a0	89 45 04	 mov	 DWORD PTR _isy$[ebp], eax

; 55   : 			sv += float(idy) / float(m_dwHeight);

  001a3	f3 0f 2a 45 d0	 cvtsi2ss xmm0, DWORD PTR _idy$6[ebp]
  001a8	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  001ab	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  001ae	89 45 cc	 mov	 DWORD PTR tv462[ebp], eax
  001b1	f2 0f 2a 4d cc	 cvtsi2sd xmm1, DWORD PTR tv462[ebp]
  001b6	8b 45 cc	 mov	 eax, DWORD PTR tv462[ebp]
  001b9	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001bc	f2 0f 58 0c c5
	00 00 00 00	 addsd	 xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  001c5	f2 0f 11 4d 84	 movsd	 QWORD PTR tv466[ebp], xmm1
  001ca	f2 0f 5a 4d 84	 cvtsd2ss xmm1, QWORD PTR tv466[ebp]
  001cf	f3 0f 5e c1	 divss	 xmm0, xmm1
  001d3	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _sv$[ebp]
  001d8	f3 0f 11 45 f4	 movss	 DWORD PTR _sv$[ebp], xmm0
$LN9@Render:

; 56   : 		}
; 57   : 		if (iey > m_clipRect.bottom)

  001dd	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  001e0	8b 4d f8	 mov	 ecx, DWORD PTR _iey$[ebp]
  001e3	3b 48 24	 cmp	 ecx, DWORD PTR [eax+36]
  001e6	7e 59		 jle	 SHORT $LN10@Render

; 58   : 		{
; 59   : 			int idy = iey - m_clipRect.bottom;

  001e8	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  001eb	8b 4d f8	 mov	 ecx, DWORD PTR _iey$[ebp]
  001ee	2b 48 24	 sub	 ecx, DWORD PTR [eax+36]
  001f1	89 4d c8	 mov	 DWORD PTR _idy$5[ebp], ecx

; 60   : 			iey -= idy;

  001f4	8b 45 f8	 mov	 eax, DWORD PTR _iey$[ebp]
  001f7	2b 45 c8	 sub	 eax, DWORD PTR _idy$5[ebp]
  001fa	89 45 f8	 mov	 DWORD PTR _iey$[ebp], eax

; 61   : 			ev -= float(idy) / float(m_dwHeight);

  001fd	f3 0f 2a 45 c8	 cvtsi2ss xmm0, DWORD PTR _idy$5[ebp]
  00202	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00205	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  00208	89 45 c4	 mov	 DWORD PTR tv478[ebp], eax
  0020b	f2 0f 2a 4d c4	 cvtsi2sd xmm1, DWORD PTR tv478[ebp]
  00210	8b 45 c4	 mov	 eax, DWORD PTR tv478[ebp]
  00213	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00216	f2 0f 58 0c c5
	00 00 00 00	 addsd	 xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  0021f	f2 0f 11 8d 7c
	ff ff ff	 movsd	 QWORD PTR tv482[ebp], xmm1
  00227	f2 0f 5a 8d 7c
	ff ff ff	 cvtsd2ss xmm1, QWORD PTR tv482[ebp]
  0022f	f3 0f 5e c1	 divss	 xmm0, xmm1
  00233	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _ev$[ebp]
  00238	f3 0f 5c c8	 subss	 xmm1, xmm0
  0023c	f3 0f 11 4d e8	 movss	 DWORD PTR _ev$[ebp], xmm1
$LN10@Render:

; 62   : 		}
; 63   : 	}
; 64   : 
; 65   : 	TPDTVertex vertices[4];	

  00241	c7 45 e4 04 00
	00 00		 mov	 DWORD PTR ___n$[ebp], 4
  00248	8d 45 0c	 lea	 eax, DWORD PTR _vertices$[ebp]
  0024b	89 45 c0	 mov	 DWORD PTR ___t$[ebp], eax
$LN14@Render:
  0024e	8b 45 e4	 mov	 eax, DWORD PTR ___n$[ebp]
  00251	89 45 bc	 mov	 DWORD PTR tv365[ebp], eax
  00254	8b 45 e4	 mov	 eax, DWORD PTR ___n$[ebp]
  00257	48		 dec	 eax
  00258	89 45 e4	 mov	 DWORD PTR ___n$[ebp], eax
  0025b	83 7d bc 00	 cmp	 DWORD PTR tv365[ebp], 0
  0025f	76 0b		 jbe	 SHORT $LN15@Render
  00261	8b 45 c0	 mov	 eax, DWORD PTR ___t$[ebp]
  00264	83 c0 18	 add	 eax, 24			; 00000018H
  00267	89 45 c0	 mov	 DWORD PTR ___t$[ebp], eax
  0026a	eb e2		 jmp	 SHORT $LN14@Render
$LN15@Render:

; 66   : 	vertices[0].position.x	= isx - 0.5f;

  0026c	f3 0f 2a 45 00	 cvtsi2ss xmm0, DWORD PTR _isx$[ebp]
  00271	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f000000
  00279	6a 18		 push	 24			; 00000018H
  0027b	58		 pop	 eax
  0027c	6b c0 00	 imul	 eax, eax, 0
  0027f	f3 0f 11 44 05
	0c		 movss	 DWORD PTR _vertices$[ebp+eax], xmm0

; 67   : 	vertices[0].position.y	= isy - 0.5f;

  00285	f3 0f 2a 45 04	 cvtsi2ss xmm0, DWORD PTR _isy$[ebp]
  0028a	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f000000
  00292	6a 18		 push	 24			; 00000018H
  00294	58		 pop	 eax
  00295	6b c0 00	 imul	 eax, eax, 0
  00298	f3 0f 11 44 05
	10		 movss	 DWORD PTR _vertices$[ebp+eax+4], xmm0

; 68   : 	vertices[0].position.z	= 0.0f;

  0029e	6a 18		 push	 24			; 00000018H
  002a0	58		 pop	 eax
  002a1	6b c0 00	 imul	 eax, eax, 0
  002a4	0f 57 c0	 xorps	 xmm0, xmm0
  002a7	f3 0f 11 44 05
	14		 movss	 DWORD PTR _vertices$[ebp+eax+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 41   :     x = fx;

  002ad	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _su$[ebp]
  002b2	f3 0f 11 45 b4	 movss	 DWORD PTR $T4[ebp], xmm0

; 42   :     y = fy;

  002b7	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _sv$[ebp]
  002bc	f3 0f 11 45 b8	 movss	 DWORD PTR $T4[ebp+4], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\BlockTexture.cpp

; 69   : 	vertices[0].texCoord	= TTextureCoordinate(su, sv);

  002c1	8b 45 b4	 mov	 eax, DWORD PTR $T4[ebp]
  002c4	8b 4d b8	 mov	 ecx, DWORD PTR $T4[ebp+4]
  002c7	6a 18		 push	 24			; 00000018H
  002c9	5a		 pop	 edx
  002ca	6b d2 00	 imul	 edx, edx, 0
  002cd	89 44 15 1c	 mov	 DWORD PTR _vertices$[ebp+edx+16], eax
  002d1	89 4c 15 20	 mov	 DWORD PTR _vertices$[ebp+edx+20], ecx

; 70   : 	vertices[0].diffuse		= 0xffffffff;

  002d5	6a 18		 push	 24			; 00000018H
  002d7	58		 pop	 eax
  002d8	6b c0 00	 imul	 eax, eax, 0
  002db	83 4c 05 18 ff	 or	 DWORD PTR _vertices$[ebp+eax+12], -1

; 71   : 
; 72   : 	vertices[1].position.x	= iex - 0.5f;

  002e0	f3 0f 2a 45 fc	 cvtsi2ss xmm0, DWORD PTR _iex$[ebp]
  002e5	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f000000
  002ed	6a 18		 push	 24			; 00000018H
  002ef	58		 pop	 eax
  002f0	c1 e0 00	 shl	 eax, 0
  002f3	f3 0f 11 44 05
	0c		 movss	 DWORD PTR _vertices$[ebp+eax], xmm0

; 73   : 	vertices[1].position.y	= isy - 0.5f;

  002f9	f3 0f 2a 45 04	 cvtsi2ss xmm0, DWORD PTR _isy$[ebp]
  002fe	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f000000
  00306	6a 18		 push	 24			; 00000018H
  00308	58		 pop	 eax
  00309	c1 e0 00	 shl	 eax, 0
  0030c	f3 0f 11 44 05
	10		 movss	 DWORD PTR _vertices$[ebp+eax+4], xmm0

; 74   : 	vertices[1].position.z	= 0.0f;

  00312	6a 18		 push	 24			; 00000018H
  00314	58		 pop	 eax
  00315	c1 e0 00	 shl	 eax, 0
  00318	0f 57 c0	 xorps	 xmm0, xmm0
  0031b	f3 0f 11 44 05
	14		 movss	 DWORD PTR _vertices$[ebp+eax+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 41   :     x = fx;

  00321	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _eu$[ebp]
  00326	f3 0f 11 45 ac	 movss	 DWORD PTR $T3[ebp], xmm0

; 42   :     y = fy;

  0032b	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _sv$[ebp]
  00330	f3 0f 11 45 b0	 movss	 DWORD PTR $T3[ebp+4], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\BlockTexture.cpp

; 75   : 	vertices[1].texCoord	= TTextureCoordinate(eu, sv);

  00335	8b 45 ac	 mov	 eax, DWORD PTR $T3[ebp]
  00338	8b 4d b0	 mov	 ecx, DWORD PTR $T3[ebp+4]
  0033b	6a 18		 push	 24			; 00000018H
  0033d	5a		 pop	 edx
  0033e	c1 e2 00	 shl	 edx, 0
  00341	89 44 15 1c	 mov	 DWORD PTR _vertices$[ebp+edx+16], eax
  00345	89 4c 15 20	 mov	 DWORD PTR _vertices$[ebp+edx+20], ecx

; 76   : 	vertices[1].diffuse		= 0xffffffff;

  00349	6a 18		 push	 24			; 00000018H
  0034b	58		 pop	 eax
  0034c	c1 e0 00	 shl	 eax, 0
  0034f	83 4c 05 18 ff	 or	 DWORD PTR _vertices$[ebp+eax+12], -1

; 77   : 
; 78   : 	vertices[2].position.x	= isx - 0.5f;

  00354	f3 0f 2a 45 00	 cvtsi2ss xmm0, DWORD PTR _isx$[ebp]
  00359	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f000000
  00361	6a 18		 push	 24			; 00000018H
  00363	58		 pop	 eax
  00364	d1 e0		 shl	 eax, 1
  00366	f3 0f 11 44 05
	0c		 movss	 DWORD PTR _vertices$[ebp+eax], xmm0

; 79   : 	vertices[2].position.y	= iey - 0.5f;

  0036c	f3 0f 2a 45 f8	 cvtsi2ss xmm0, DWORD PTR _iey$[ebp]
  00371	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f000000
  00379	6a 18		 push	 24			; 00000018H
  0037b	58		 pop	 eax
  0037c	d1 e0		 shl	 eax, 1
  0037e	f3 0f 11 44 05
	10		 movss	 DWORD PTR _vertices$[ebp+eax+4], xmm0

; 80   : 	vertices[2].position.z	= 0.0f;

  00384	6a 18		 push	 24			; 00000018H
  00386	58		 pop	 eax
  00387	d1 e0		 shl	 eax, 1
  00389	0f 57 c0	 xorps	 xmm0, xmm0
  0038c	f3 0f 11 44 05
	14		 movss	 DWORD PTR _vertices$[ebp+eax+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 41   :     x = fx;

  00392	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _su$[ebp]
  00397	f3 0f 11 45 a4	 movss	 DWORD PTR $T2[ebp], xmm0

; 42   :     y = fy;

  0039c	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _ev$[ebp]
  003a1	f3 0f 11 45 a8	 movss	 DWORD PTR $T2[ebp+4], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\BlockTexture.cpp

; 81   : 	vertices[2].texCoord	= TTextureCoordinate(su, ev);

  003a6	8b 45 a4	 mov	 eax, DWORD PTR $T2[ebp]
  003a9	8b 4d a8	 mov	 ecx, DWORD PTR $T2[ebp+4]
  003ac	6a 18		 push	 24			; 00000018H
  003ae	5a		 pop	 edx
  003af	d1 e2		 shl	 edx, 1
  003b1	89 44 15 1c	 mov	 DWORD PTR _vertices$[ebp+edx+16], eax
  003b5	89 4c 15 20	 mov	 DWORD PTR _vertices$[ebp+edx+20], ecx

; 82   : 	vertices[2].diffuse		= 0xffffffff;

  003b9	6a 18		 push	 24			; 00000018H
  003bb	58		 pop	 eax
  003bc	d1 e0		 shl	 eax, 1
  003be	83 4c 05 18 ff	 or	 DWORD PTR _vertices$[ebp+eax+12], -1

; 83   : 
; 84   : 	vertices[3].position.x	= iex - 0.5f;

  003c3	f3 0f 2a 45 fc	 cvtsi2ss xmm0, DWORD PTR _iex$[ebp]
  003c8	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f000000
  003d0	6a 18		 push	 24			; 00000018H
  003d2	58		 pop	 eax
  003d3	6b c0 03	 imul	 eax, eax, 3
  003d6	f3 0f 11 44 05
	0c		 movss	 DWORD PTR _vertices$[ebp+eax], xmm0

; 85   : 	vertices[3].position.y	= iey - 0.5f;

  003dc	f3 0f 2a 45 f8	 cvtsi2ss xmm0, DWORD PTR _iey$[ebp]
  003e1	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f000000
  003e9	6a 18		 push	 24			; 00000018H
  003eb	58		 pop	 eax
  003ec	6b c0 03	 imul	 eax, eax, 3
  003ef	f3 0f 11 44 05
	10		 movss	 DWORD PTR _vertices$[ebp+eax+4], xmm0

; 86   : 	vertices[3].position.z	= 0.0f;

  003f5	6a 18		 push	 24			; 00000018H
  003f7	58		 pop	 eax
  003f8	6b c0 03	 imul	 eax, eax, 3
  003fb	0f 57 c0	 xorps	 xmm0, xmm0
  003fe	f3 0f 11 44 05
	14		 movss	 DWORD PTR _vertices$[ebp+eax+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 41   :     x = fx;

  00404	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _eu$[ebp]
  00409	f3 0f 11 45 9c	 movss	 DWORD PTR $T1[ebp], xmm0

; 42   :     y = fy;

  0040e	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _ev$[ebp]
  00413	f3 0f 11 45 a0	 movss	 DWORD PTR $T1[ebp+4], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\BlockTexture.cpp

; 87   : 	vertices[3].texCoord	= TTextureCoordinate(eu, ev);	

  00418	8b 45 9c	 mov	 eax, DWORD PTR $T1[ebp]
  0041b	8b 4d a0	 mov	 ecx, DWORD PTR $T1[ebp+4]
  0041e	6a 18		 push	 24			; 00000018H
  00420	5a		 pop	 edx
  00421	6b d2 03	 imul	 edx, edx, 3
  00424	89 44 15 1c	 mov	 DWORD PTR _vertices$[ebp+edx+16], eax
  00428	89 4c 15 20	 mov	 DWORD PTR _vertices$[ebp+edx+20], ecx

; 88   : 	vertices[3].diffuse		= 0xffffffff;

  0042c	6a 18		 push	 24			; 00000018H
  0042e	58		 pop	 eax
  0042f	6b c0 03	 imul	 eax, eax, 3
  00432	83 4c 05 18 ff	 or	 DWORD PTR _vertices$[ebp+eax+12], -1

; 89   : 
; 90   : 	if (CGraphicBase::SetPDTStream(vertices, 4))

  00437	6a 04		 push	 4
  00439	8d 45 0c	 lea	 eax, DWORD PTR _vertices$[ebp]
  0043c	50		 push	 eax
  0043d	e8 00 00 00 00	 call	 ?SetPDTStream@CGraphicBase@@SA_NPAUSPDTVertex@@I@Z ; CGraphicBase::SetPDTStream
  00442	59		 pop	 ecx
  00443	59		 pop	 ecx
  00444	0f b6 c0	 movzx	 eax, al
  00447	85 c0		 test	 eax, eax
  00449	74 4f		 je	 SHORT $LN11@Render

; 91   : 	{
; 92   : 		CGraphicBase::SetDefaultIndexBuffer(CGraphicBase::DEFAULT_IB_FILL_RECT);

  0044b	6a 05		 push	 5
  0044d	e8 00 00 00 00	 call	 ?SetDefaultIndexBuffer@CGraphicBase@@SAXI@Z ; CGraphicBase::SetDefaultIndexBuffer
  00452	59		 pop	 ecx

; 93   : 
; 94   : 		STATEMANAGER.SetTexture(0, m_lpd3dTexture);

  00453	8b 45 08	 mov	 eax, DWORD PTR _this$[ebp]
  00456	ff 70 34	 push	 DWORD PTR [eax+52]
  00459	6a 00		 push	 0
  0045b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00461	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 95   : 		STATEMANAGER.SetTexture(1, NULL);

  00466	6a 00		 push	 0
  00468	6a 01		 push	 1
  0046a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00470	e8 00 00 00 00	 call	 ?SetTexture@CStateManager@@QAEXKPAUIDirect3DBaseTexture8@@@Z ; CStateManager::SetTexture

; 96   : 		STATEMANAGER.SetVertexShader(D3DFVF_XYZ|D3DFVF_TEX1|D3DFVF_DIFFUSE);

  00475	68 42 01 00 00	 push	 322			; 00000142H
  0047a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00480	e8 00 00 00 00	 call	 ?SetVertexShader@CStateManager@@QAEXK@Z ; CStateManager::SetVertexShader

; 97   : 		STATEMANAGER.DrawIndexedPrimitive(D3DPT_TRIANGLELIST, 0, 4, 0, 2);

  00485	6a 02		 push	 2
  00487	6a 00		 push	 0
  00489	6a 04		 push	 4
  0048b	6a 00		 push	 0
  0048d	6a 04		 push	 4
  0048f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ms_singleton@?$CSingleton@VCStateManager@@@@0PAVCStateManager@@A ; CSingleton<CStateManager>::ms_singleton
  00495	e8 00 00 00 00	 call	 ?DrawIndexedPrimitive@CStateManager@@QAEJW4_D3DPRIMITIVETYPE@@IIII@Z ; CStateManager::DrawIndexedPrimitive
$LN11@Render:
$LN1@Render:

; 98   : 	}
; 99   : }

  0049a	8b 4d 6c	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0049d	33 cd		 xor	 ecx, ebp
  0049f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004a4	83 c5 70	 add	 ebp, 112		; 00000070H
  004a7	c9		 leave
  004a8	c2 08 00	 ret	 8
?Render@CBlockTexture@@QAEXHH@Z ENDP			; CBlockTexture::Render
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\BlockTexture.cpp
;	COMDAT ?SetClipRect@CBlockTexture@@QAEXABUtagRECT@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_c_rRect$ = 8						; size = 4
?SetClipRect@CBlockTexture@@QAEXABUtagRECT@@@Z PROC	; CBlockTexture::SetClipRect, COMDAT
; _this$ = ecx

; 9    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 10   : 	m_bClipEnable = TRUE;

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	c7 40 28 01 00
	00 00		 mov	 DWORD PTR [eax+40], 1

; 11   : 	m_clipRect = c_rRect;

  00013	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00016	83 c7 18	 add	 edi, 24			; 00000018H
  00019	8b 75 08	 mov	 esi, DWORD PTR _c_rRect$[ebp]
  0001c	a5		 movsd
  0001d	a5		 movsd
  0001e	a5		 movsd
  0001f	a5		 movsd

; 12   : }

  00020	5f		 pop	 edi
  00021	5e		 pop	 esi
  00022	c9		 leave
  00023	c2 04 00	 ret	 4
?SetClipRect@CBlockTexture@@QAEXABUtagRECT@@@Z ENDP	; CBlockTexture::SetClipRect
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\BlockTexture.cpp
;	COMDAT ?Create@CBlockTexture@@QAE_NPAVCGraphicDib@@ABUtagRECT@@KK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pDIB$ = 8						; size = 4
_c_rRect$ = 12						; size = 4
_dwWidth$ = 16						; size = 4
_dwHeight$ = 20						; size = 4
?Create@CBlockTexture@@QAE_NPAVCGraphicDib@@ABUtagRECT@@KK@Z PROC ; CBlockTexture::Create, COMDAT
; _this$ = ecx

; 157  : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 158  : 	if (FAILED(ms_lpd3dDevice->CreateTexture(dwWidth, dwHeight, 0, 0, D3DFMT_A8R8G8B8, D3DPOOL_MANAGED, &m_lpd3dTexture)))

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	83 c0 34	 add	 eax, 52			; 00000034H
  0000f	50		 push	 eax
  00010	6a 01		 push	 1
  00012	6a 15		 push	 21			; 00000015H
  00014	6a 00		 push	 0
  00016	6a 00		 push	 0
  00018	ff 75 14	 push	 DWORD PTR _dwHeight$[ebp]
  0001b	ff 75 10	 push	 DWORD PTR _dwWidth$[ebp]
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
  00025	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_lpd3dDevice@CGraphicBase@@1PAUIDirect3DDevice8@@A ; CGraphicBase::ms_lpd3dDevice
  0002b	ff 50 50	 call	 DWORD PTR [eax+80]
  0002e	85 c0		 test	 eax, eax
  00030	7d 17		 jge	 SHORT $LN2@Create

; 159  : 	{
; 160  : 		Tracef("Failed to create block texture %u, %u\n", dwWidth, dwHeight);

  00032	ff 75 14	 push	 DWORD PTR _dwHeight$[ebp]
  00035	ff 75 10	 push	 DWORD PTR _dwWidth$[ebp]
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@GNLBGAOD@Failed?5to?5create?5block?5texture?5@
  0003d	e8 00 00 00 00	 call	 ?Tracef@@YAXPBDZZ	; Tracef
  00042	83 c4 0c	 add	 esp, 12			; 0000000cH

; 161  : 		return false;

  00045	32 c0		 xor	 al, al
  00047	eb 31		 jmp	 SHORT $LN1@Create
$LN2@Create:

; 162  : 	}
; 163  : 
; 164  : 	m_pDIB = pDIB;

  00049	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _pDIB$[ebp]
  0004f	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 165  : 	m_rect = c_rRect;

  00052	8b 7d fc	 mov	 edi, DWORD PTR _this$[ebp]
  00055	83 c7 08	 add	 edi, 8
  00058	8b 75 0c	 mov	 esi, DWORD PTR _c_rRect$[ebp]
  0005b	a5		 movsd
  0005c	a5		 movsd
  0005d	a5		 movsd
  0005e	a5		 movsd

; 166  : 	m_dwWidth = dwWidth;

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00062	8b 4d 10	 mov	 ecx, DWORD PTR _dwWidth$[ebp]
  00065	89 48 2c	 mov	 DWORD PTR [eax+44], ecx

; 167  : 	m_dwHeight = dwHeight;

  00068	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	8b 4d 14	 mov	 ecx, DWORD PTR _dwHeight$[ebp]
  0006e	89 48 30	 mov	 DWORD PTR [eax+48], ecx

; 168  : 	m_bClipEnable = FALSE;

  00071	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00074	83 60 28 00	 and	 DWORD PTR [eax+40], 0

; 169  : 
; 170  : 	return true;

  00078	b0 01		 mov	 al, 1
$LN1@Create:

; 171  : }

  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	c9		 leave
  0007d	c2 10 00	 ret	 16			; 00000010H
?Create@CBlockTexture@@QAE_NPAVCGraphicDib@@ABUtagRECT@@KK@Z ENDP ; CBlockTexture::Create
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\BlockTexture.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterbase\Stl.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\BlockTexture.cpp
;	COMDAT ??1CBlockTexture@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
_rpObject$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
??1CBlockTexture@@UAE@XZ PROC				; CBlockTexture::~CBlockTexture, COMDAT
; _this$ = ecx

; 180  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CBlockTexture@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	51		 push	 ecx
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00027	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CBlockTexture@@6B@

; 181  : 	safe_release(m_lpd3dTexture);

  00030	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00033	83 c0 34	 add	 eax, 52			; 00000034H
  00036	89 45 f0	 mov	 DWORD PTR _rpObject$[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\eterbase\Stl.h

; 138  : 	if (!rpObject)

  00039	8b 45 f0	 mov	 eax, DWORD PTR _rpObject$[ebp]
  0003c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0003f	75 02		 jne	 SHORT $LN4@CBlockText

; 139  : 		return;

  00041	eb 15		 jmp	 SHORT $LN3@CBlockText
$LN4@CBlockText:

; 140  : 	
; 141  : 	rpObject->Release();

  00043	8b 45 f0	 mov	 eax, DWORD PTR _rpObject$[ebp]
  00046	8b 00		 mov	 eax, DWORD PTR [eax]
  00048	8b 4d f0	 mov	 ecx, DWORD PTR _rpObject$[ebp]
  0004b	8b 00		 mov	 eax, DWORD PTR [eax]
  0004d	ff 31		 push	 DWORD PTR [ecx]
  0004f	ff 50 08	 call	 DWORD PTR [eax+8]

; 142  : 	rpObject = NULL;

  00052	8b 45 f0	 mov	 eax, DWORD PTR _rpObject$[ebp]
  00055	83 20 00	 and	 DWORD PTR [eax], 0
$LN3@CBlockText:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\BlockTexture.cpp

; 182  : 	m_lpd3dTexture = NULL;

  00058	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	83 60 34 00	 and	 DWORD PTR [eax+52], 0

; 183  : }

  0005f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ??1CGraphicBase@@UAE@XZ	; CGraphicBase::~CGraphicBase
  00067	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00071	59		 pop	 ecx
  00072	c9		 leave
  00073	c3		 ret	 0
  00074	cc		 int	 3
  00075	cc		 int	 3
  00076	cc		 int	 3
  00077	cc		 int	 3
  00078	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CBlockTexture@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CBlockTexture@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CBlockTexture@@UAE@XZ ENDP				; CBlockTexture::~CBlockTexture
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\BlockTexture.cpp
;	COMDAT ??0CBlockTexture@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBlockTexture@@QAE@XZ PROC				; CBlockTexture::CBlockTexture, COMDAT
; _this$ = ecx

; 174  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0CGraphicBase@@QAE@XZ	; CGraphicBase::CGraphicBase
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CBlockTexture@@6B@

; 175  : 	m_pDIB = NULL;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	83 60 04 00	 and	 DWORD PTR [eax+4], 0

; 176  : 	m_lpd3dTexture = NULL;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00022	83 60 34 00	 and	 DWORD PTR [eax+52], 0

; 177  : }

  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	c9		 leave
  0002a	c3		 ret	 0
??0CBlockTexture@@QAE@XZ ENDP				; CBlockTexture::CBlockTexture
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -4						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
$LN2@vector:
  00004	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  00007	89 45 fc	 mov	 DWORD PTR tv66[ebp], eax
  0000a	8b 45 10	 mov	 eax, DWORD PTR ___n$[ebp]
  0000d	48		 dec	 eax
  0000e	89 45 10	 mov	 DWORD PTR ___n$[ebp], eax
  00011	83 7d fc 00	 cmp	 DWORD PTR tv66[ebp], 0
  00015	76 11		 jbe	 SHORT $LN1@vector
  00017	8b 4d 08	 mov	 ecx, DWORD PTR ___t$[ebp]
  0001a	ff 55 14	 call	 DWORD PTR ___f$[ebp]
  0001d	8b 45 08	 mov	 eax, DWORD PTR ___t$[ebp]
  00020	03 45 0c	 add	 eax, DWORD PTR ___s$[ebp]
  00023	89 45 08	 mov	 DWORD PTR ___t$[ebp], eax
  00026	eb dc		 jmp	 SHORT $LN2@vector
$LN1@vector:
  00028	c9		 leave
  00029	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
