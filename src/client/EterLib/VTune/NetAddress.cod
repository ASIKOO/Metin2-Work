; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetAddress.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__snprintf
PUBLIC	?GetHostName@CNetworkAddress@@SA_NPADH@Z	; CNetworkAddress::GetHostName
PUBLIC	??0CNetworkAddress@@QAE@XZ			; CNetworkAddress::CNetworkAddress
PUBLIC	??1CNetworkAddress@@QAE@XZ			; CNetworkAddress::~CNetworkAddress
PUBLIC	?Clear@CNetworkAddress@@QAEXXZ			; CNetworkAddress::Clear
PUBLIC	?Set@CNetworkAddress@@QAE_NPBDH@Z		; CNetworkAddress::Set
PUBLIC	?SetLocalIP@CNetworkAddress@@QAEXXZ		; CNetworkAddress::SetLocalIP
PUBLIC	?SetIP@CNetworkAddress@@QAEXK@Z			; CNetworkAddress::SetIP
PUBLIC	?SetIP@CNetworkAddress@@QAEXPBD@Z		; CNetworkAddress::SetIP
PUBLIC	?SetDNS@CNetworkAddress@@QAE_NPBD@Z		; CNetworkAddress::SetDNS
PUBLIC	?SetPort@CNetworkAddress@@QAEXH@Z		; CNetworkAddress::SetPort
PUBLIC	?GetPort@CNetworkAddress@@QAEHXZ		; CNetworkAddress::GetPort
PUBLIC	?GetSize@CNetworkAddress@@QAEHXZ		; CNetworkAddress::GetSize
PUBLIC	?GetIP@CNetworkAddress@@QAEXPADH@Z		; CNetworkAddress::GetIP
PUBLIC	?GetIP@CNetworkAddress@@QAEKXZ			; CNetworkAddress::GetIP
PUBLIC	??BCNetworkAddress@@QBEABUsockaddr_in@@XZ	; CNetworkAddress::operator sockaddr_in const &
PUBLIC	?IsIP@CNetworkAddress@@AAE_NPBD@Z		; CNetworkAddress::IsIP
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_0M@PCENNPGA@?$CFd?4?$CFd?4?$CFd?4?$CFd@	; `string'
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	_htonl@4:PROC
EXTRN	_htons@4:PROC
EXTRN	_inet_addr@4:PROC
EXTRN	_ntohl@4:PROC
EXTRN	_ntohs@4:PROC
EXTRN	_gethostbyname@4:PROC
EXTRN	_gethostname@8:PROC
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ??_C@_0M@PCENNPGA@?$CFd?4?$CFd?4?$CFd?4?$CFd@
CONST	SEGMENT
??_C@_0M@PCENNPGA@?$CFd?4?$CFd?4?$CFd?4?$CFd@ DB '%d.%d.%d.%d', 00H ; `string'
CONST	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetAddress.cpp
;	COMDAT ?IsIP@CNetworkAddress@@AAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_c_szAddr$ = 8						; size = 4
?IsIP@CNetworkAddress@@AAE_NPBD@Z PROC			; CNetworkAddress::IsIP, COMDAT
; _this$ = ecx

; 34   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 35   : 	if (c_szAddr[0]<'0' || c_szAddr[0]>'9')

  00007	33 c0		 xor	 eax, eax
  00009	40		 inc	 eax
  0000a	6b c0 00	 imul	 eax, eax, 0
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _c_szAddr$[ebp]
  00010	0f be 04 01	 movsx	 eax, BYTE PTR [ecx+eax]
  00014	83 f8 30	 cmp	 eax, 48			; 00000030H
  00017	7c 12		 jl	 SHORT $LN3@IsIP
  00019	33 c0		 xor	 eax, eax
  0001b	40		 inc	 eax
  0001c	6b c0 00	 imul	 eax, eax, 0
  0001f	8b 4d 08	 mov	 ecx, DWORD PTR _c_szAddr$[ebp]
  00022	0f be 04 01	 movsx	 eax, BYTE PTR [ecx+eax]
  00026	83 f8 39	 cmp	 eax, 57			; 00000039H
  00029	7e 04		 jle	 SHORT $LN2@IsIP
$LN3@IsIP:

; 36   : 		return false;

  0002b	32 c0		 xor	 al, al
  0002d	eb 02		 jmp	 SHORT $LN1@IsIP
$LN2@IsIP:

; 37   : 	return true;

  0002f	b0 01		 mov	 al, 1
$LN1@IsIP:

; 38   : }

  00031	c9		 leave
  00032	c2 04 00	 ret	 4
?IsIP@CNetworkAddress@@AAE_NPBD@Z ENDP			; CNetworkAddress::IsIP
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetAddress.cpp
;	COMDAT ??BCNetworkAddress@@QBEABUsockaddr_in@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCNetworkAddress@@QBEABUsockaddr_in@@XZ PROC		; CNetworkAddress::operator sockaddr_in const &, COMDAT
; _this$ = ecx

; 23   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 24   : 	return m_sockAddrIn;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 25   : }

  0000a	c9		 leave
  0000b	c3		 ret	 0
??BCNetworkAddress@@QBEABUsockaddr_in@@XZ ENDP		; CNetworkAddress::operator sockaddr_in const &
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetAddress.cpp
;	COMDAT ?GetIP@CNetworkAddress@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetIP@CNetworkAddress@@QAEKXZ PROC			; CNetworkAddress::GetIP, COMDAT
; _this$ = ecx

; 90   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 91   : 	return ntohl(m_sockAddrIn.sin_addr.s_addr);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	ff 70 04	 push	 DWORD PTR [eax+4]
  0000d	e8 00 00 00 00	 call	 _ntohl@4

; 92   : }

  00012	c9		 leave
  00013	c3		 ret	 0
?GetIP@CNetworkAddress@@QAEKXZ ENDP			; CNetworkAddress::GetIP
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetAddress.cpp
;	COMDAT ?GetIP@CNetworkAddress@@QAEXPADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_IPs$ = -4						; size = 4
_szIP$ = 8						; size = 4
_len$ = 12						; size = 4
?GetIP@CNetworkAddress@@QAEXPADH@Z PROC			; CNetworkAddress::GetIP, COMDAT
; _this$ = ecx

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 96   : 	BYTE IPs[4];
; 97   : 	*((DWORD*)IPs)=m_sockAddrIn.sin_addr.s_addr;

  00008	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000b	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000e	89 45 fc	 mov	 DWORD PTR _IPs$[ebp], eax

; 98   : 
; 99   : 	_snprintf(szIP, len, "%d.%d.%d.%d", IPs[0], IPs[1], IPs[2], IPs[3]);

  00011	33 c0		 xor	 eax, eax
  00013	40		 inc	 eax
  00014	6b c0 03	 imul	 eax, eax, 3
  00017	0f b6 44 05 fc	 movzx	 eax, BYTE PTR _IPs$[ebp+eax]
  0001c	50		 push	 eax
  0001d	33 c0		 xor	 eax, eax
  0001f	40		 inc	 eax
  00020	d1 e0		 shl	 eax, 1
  00022	0f b6 44 05 fc	 movzx	 eax, BYTE PTR _IPs$[ebp+eax]
  00027	50		 push	 eax
  00028	33 c0		 xor	 eax, eax
  0002a	40		 inc	 eax
  0002b	c1 e0 00	 shl	 eax, 0
  0002e	0f b6 44 05 fc	 movzx	 eax, BYTE PTR _IPs$[ebp+eax]
  00033	50		 push	 eax
  00034	33 c0		 xor	 eax, eax
  00036	40		 inc	 eax
  00037	6b c0 00	 imul	 eax, eax, 0
  0003a	0f b6 44 05 fc	 movzx	 eax, BYTE PTR _IPs$[ebp+eax]
  0003f	50		 push	 eax
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PCENNPGA@?$CFd?4?$CFd?4?$CFd?4?$CFd@
  00045	ff 75 0c	 push	 DWORD PTR _len$[ebp]
  00048	ff 75 08	 push	 DWORD PTR _szIP$[ebp]
  0004b	e8 00 00 00 00	 call	 __snprintf
  00050	83 c4 1c	 add	 esp, 28			; 0000001cH

; 100  : }

  00053	c9		 leave
  00054	c2 08 00	 ret	 8
?GetIP@CNetworkAddress@@QAEXPADH@Z ENDP			; CNetworkAddress::GetIP
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetAddress.cpp
;	COMDAT ?GetSize@CNetworkAddress@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSize@CNetworkAddress@@QAEHXZ PROC			; CNetworkAddress::GetSize, COMDAT
; _this$ = ecx

; 85   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 86   : 	return sizeof(m_sockAddrIn);

  00007	6a 10		 push	 16			; 00000010H
  00009	58		 pop	 eax

; 87   : }

  0000a	c9		 leave
  0000b	c3		 ret	 0
?GetSize@CNetworkAddress@@QAEHXZ ENDP			; CNetworkAddress::GetSize
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetAddress.cpp
;	COMDAT ?GetPort@CNetworkAddress@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPort@CNetworkAddress@@QAEHXZ PROC			; CNetworkAddress::GetPort, COMDAT
; _this$ = ecx

; 103  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 104  : 	return ntohs(m_sockAddrIn.sin_port);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	0f b7 40 02	 movzx	 eax, WORD PTR [eax+2]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 _ntohs@4
  00014	0f b7 c0	 movzx	 eax, ax

; 105  : }

  00017	c9		 leave
  00018	c3		 ret	 0
?GetPort@CNetworkAddress@@QAEHXZ ENDP			; CNetworkAddress::GetPort
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetAddress.cpp
;	COMDAT ?SetPort@CNetworkAddress@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_port$ = 8						; size = 4
?SetPort@CNetworkAddress@@QAEXH@Z PROC			; CNetworkAddress::SetPort, COMDAT
; _this$ = ecx

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 81   : 	m_sockAddrIn.sin_port = htons(port);

  00007	ff 75 08	 push	 DWORD PTR _port$[ebp]
  0000a	e8 00 00 00 00	 call	 _htons@4
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	66 89 41 02	 mov	 WORD PTR [ecx+2], ax

; 82   : }

  00016	c9		 leave
  00017	c2 04 00	 ret	 4
?SetPort@CNetworkAddress@@QAEXH@Z ENDP			; CNetworkAddress::SetPort
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetAddress.cpp
;	COMDAT ?SetDNS@CNetworkAddress@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pHostent$ = -4						; size = 4
_c_szDNS$ = 8						; size = 4
?SetDNS@CNetworkAddress@@QAE_NPBD@Z PROC		; CNetworkAddress::SetDNS, COMDAT
; _this$ = ecx

; 72   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 73   : 	HOSTENT* pHostent=gethostbyname(c_szDNS);

  00008	ff 75 08	 push	 DWORD PTR _c_szDNS$[ebp]
  0000b	e8 00 00 00 00	 call	 _gethostbyname@4
  00010	89 45 fc	 mov	 DWORD PTR _pHostent$[ebp], eax

; 74   : 	if (!pHostent) return false;

  00013	83 7d fc 00	 cmp	 DWORD PTR _pHostent$[ebp], 0
  00017	75 04		 jne	 SHORT $LN2@SetDNS
  00019	32 c0		 xor	 al, al
  0001b	eb 22		 jmp	 SHORT $LN1@SetDNS
$LN2@SetDNS:

; 75   : 	memcpy(&m_sockAddrIn.sin_addr, pHostent->h_addr, sizeof(m_sockAddrIn.sin_addr));

  0001d	6a 04		 push	 4
  0001f	6a 04		 push	 4
  00021	58		 pop	 eax
  00022	6b c0 00	 imul	 eax, eax, 0
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _pHostent$[ebp]
  00028	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  0002b	ff 34 01	 push	 DWORD PTR [ecx+eax]
  0002e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00031	83 c0 04	 add	 eax, 4
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 _memcpy
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 76   : 	return true;

  0003d	b0 01		 mov	 al, 1
$LN1@SetDNS:

; 77   : }

  0003f	c9		 leave
  00040	c2 04 00	 ret	 4
?SetDNS@CNetworkAddress@@QAE_NPBD@Z ENDP		; CNetworkAddress::SetDNS
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetAddress.cpp
;	COMDAT ?SetIP@CNetworkAddress@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_c_szIP$ = 8						; size = 4
?SetIP@CNetworkAddress@@QAEXPBD@Z PROC			; CNetworkAddress::SetIP, COMDAT
; _this$ = ecx

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 68   : 	m_sockAddrIn.sin_addr.s_addr=inet_addr(c_szIP);

  00007	ff 75 08	 push	 DWORD PTR _c_szIP$[ebp]
  0000a	e8 00 00 00 00	 call	 _inet_addr@4
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 69   : }

  00015	c9		 leave
  00016	c2 04 00	 ret	 4
?SetIP@CNetworkAddress@@QAEXPBD@Z ENDP			; CNetworkAddress::SetIP
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetAddress.cpp
;	COMDAT ?SetIP@CNetworkAddress@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ip$ = 8						; size = 4
?SetIP@CNetworkAddress@@QAEXK@Z PROC			; CNetworkAddress::SetIP, COMDAT
; _this$ = ecx

; 62   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 63   : 	m_sockAddrIn.sin_addr.s_addr=htonl(ip);

  00007	ff 75 08	 push	 DWORD PTR _ip$[ebp]
  0000a	e8 00 00 00 00	 call	 _htonl@4
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 64   : }

  00015	c9		 leave
  00016	c2 04 00	 ret	 4
?SetIP@CNetworkAddress@@QAEXK@Z ENDP			; CNetworkAddress::SetIP
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetAddress.cpp
;	COMDAT ?SetLocalIP@CNetworkAddress@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SetLocalIP@CNetworkAddress@@QAEXXZ PROC		; CNetworkAddress::SetLocalIP, COMDAT
; _this$ = ecx

; 57   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 58   : 	SetIP(INADDR_ANY);	

  00007	6a 00		 push	 0
  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?SetIP@CNetworkAddress@@QAEXK@Z ; CNetworkAddress::SetIP

; 59   : }

  00011	c9		 leave
  00012	c3		 ret	 0
?SetLocalIP@CNetworkAddress@@QAEXXZ ENDP		; CNetworkAddress::SetLocalIP
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetAddress.cpp
;	COMDAT ?Set@CNetworkAddress@@QAE_NPBDH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_c_szAddr$ = 8						; size = 4
_port$ = 12						; size = 4
?Set@CNetworkAddress@@QAE_NPBDH@Z PROC			; CNetworkAddress::Set, COMDAT
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 42   : 	if (IsIP(c_szAddr))

  00007	ff 75 08	 push	 DWORD PTR _c_szAddr$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	e8 00 00 00 00	 call	 ?IsIP@CNetworkAddress@@AAE_NPBD@Z ; CNetworkAddress::IsIP
  00012	0f b6 c0	 movzx	 eax, al
  00015	85 c0		 test	 eax, eax
  00017	74 0d		 je	 SHORT $LN2@Set

; 43   : 	{
; 44   : 		SetIP(c_szAddr);

  00019	ff 75 08	 push	 DWORD PTR _c_szAddr$[ebp]
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?SetIP@CNetworkAddress@@QAEXPBD@Z ; CNetworkAddress::SetIP

; 45   : 	}

  00024	eb 16		 jmp	 SHORT $LN3@Set
$LN2@Set:

; 46   : 	else
; 47   : 	{
; 48   : 		if (!SetDNS(c_szAddr))

  00026	ff 75 08	 push	 DWORD PTR _c_szAddr$[ebp]
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?SetDNS@CNetworkAddress@@QAE_NPBD@Z ; CNetworkAddress::SetDNS
  00031	0f b6 c0	 movzx	 eax, al
  00034	85 c0		 test	 eax, eax
  00036	75 04		 jne	 SHORT $LN3@Set

; 49   : 			return false;

  00038	32 c0		 xor	 al, al
  0003a	eb 0d		 jmp	 SHORT $LN1@Set
$LN3@Set:

; 50   : 	}
; 51   : 
; 52   : 	SetPort(port);

  0003c	ff 75 0c	 push	 DWORD PTR _port$[ebp]
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ?SetPort@CNetworkAddress@@QAEXH@Z ; CNetworkAddress::SetPort

; 53   : 	return true;

  00047	b0 01		 mov	 al, 1
$LN1@Set:

; 54   : }

  00049	c9		 leave
  0004a	c2 08 00	 ret	 8
?Set@CNetworkAddress@@QAE_NPBDH@Z ENDP			; CNetworkAddress::Set
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetAddress.cpp
;	COMDAT ?Clear@CNetworkAddress@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CNetworkAddress@@QAEXXZ PROC			; CNetworkAddress::Clear, COMDAT
; _this$ = ecx

; 28   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 29   : 	memset(&m_sockAddrIn, 0, sizeof(m_sockAddrIn));

  00007	6a 10		 push	 16			; 00000010H
  00009	6a 00		 push	 0
  0000b	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 _memset
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH

; 30   : 	m_sockAddrIn.sin_family=AF_INET;

  00016	6a 02		 push	 2
  00018	58		 pop	 eax
  00019	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001c	66 89 01	 mov	 WORD PTR [ecx], ax

; 31   : }

  0001f	c9		 leave
  00020	c3		 ret	 0
?Clear@CNetworkAddress@@QAEXXZ ENDP			; CNetworkAddress::Clear
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetAddress.cpp
;	COMDAT ??1CNetworkAddress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CNetworkAddress@@QAE@XZ PROC				; CNetworkAddress::~CNetworkAddress, COMDAT
; _this$ = ecx

; 19   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 20   : }

  00007	c9		 leave
  00008	c3		 ret	 0
??1CNetworkAddress@@QAE@XZ ENDP				; CNetworkAddress::~CNetworkAddress
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetAddress.cpp
;	COMDAT ??0CNetworkAddress@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CNetworkAddress@@QAE@XZ PROC				; CNetworkAddress::CNetworkAddress, COMDAT
; _this$ = ecx

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 15   : 	Clear();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?Clear@CNetworkAddress@@QAEXXZ ; CNetworkAddress::Clear

; 16   : }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c9		 leave
  00013	c3		 ret	 0
??0CNetworkAddress@@QAE@XZ ENDP				; CNetworkAddress::CNetworkAddress
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EterLib\NetAddress.cpp
;	COMDAT ?GetHostName@CNetworkAddress@@SA_NPADH@Z
_TEXT	SEGMENT
_szName$ = 8						; size = 4
_size$ = 12						; size = 4
?GetHostName@CNetworkAddress@@SA_NPADH@Z PROC		; CNetworkAddress::GetHostName, COMDAT

; 7    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 8    : 	if (gethostname(szName, size)==SOCKET_ERROR)

  00003	ff 75 0c	 push	 DWORD PTR _size$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _szName$[ebp]
  00009	e8 00 00 00 00	 call	 _gethostname@8
  0000e	83 f8 ff	 cmp	 eax, -1
  00011	75 04		 jne	 SHORT $LN2@GetHostNam

; 9    : 		return false;

  00013	32 c0		 xor	 al, al
  00015	eb 02		 jmp	 SHORT $LN1@GetHostNam
$LN2@GetHostNam:

; 10   : 	return true;

  00017	b0 01		 mov	 al, 1
$LN1@GetHostNam:

; 11   : }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetHostName@CNetworkAddress@@SA_NPADH@Z ENDP		; CNetworkAddress::GetHostName
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __snprintf
_TEXT	SEGMENT
__Result$ = -20						; size = 4
__Format$ = -16						; size = 4
__ArgList$ = -12					; size = 4
tv86 = -8						; size = 4
__Result$1 = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__snprintf PROC						; COMDAT

; 1969 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 1970 :         int _Result;
; 1971 :         va_list _ArgList;
; 1972 :         __crt_va_start(_ArgList, _Format);

  00006	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00009	89 45 f4	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1973 :     #pragma warning(suppress:28719)    // 28719
; 1974 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);

  0000c	8b 45 10	 mov	 eax, DWORD PTR __Format$[ebp]
  0000f	89 45 f0	 mov	 DWORD PTR __Format$[ebp], eax

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00012	ff 75 f4	 push	 DWORD PTR __ArgList$[ebp]
  00015	6a 00		 push	 0
  00017	ff 75 f0	 push	 DWORD PTR __Format$[ebp]
  0001a	ff 75 0c	 push	 DWORD PTR __BufferCount$[ebp]
  0001d	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00020	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	83 c9 01	 or	 ecx, 1
  0002a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002d	50		 push	 eax
  0002e	51		 push	 ecx
  0002f	e8 00 00 00 00	 call	 ___stdio_common_vsprintf
  00034	83 c4 1c	 add	 esp, 28			; 0000001cH
  00037	89 45 fc	 mov	 DWORD PTR __Result$1[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  0003a	83 7d fc 00	 cmp	 DWORD PTR __Result$1[ebp], 0
  0003e	7d 06		 jge	 SHORT $LN7@snprintf
  00040	83 4d f8 ff	 or	 DWORD PTR tv86[ebp], -1
  00044	eb 06		 jmp	 SHORT $LN3@snprintf
$LN7@snprintf:
  00046	8b 45 fc	 mov	 eax, DWORD PTR __Result$1[ebp]
  00049	89 45 f8	 mov	 DWORD PTR tv86[ebp], eax
$LN3@snprintf:

; 1973 :     #pragma warning(suppress:28719)    // 28719
; 1974 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);

  0004c	8b 45 f8	 mov	 eax, DWORD PTR tv86[ebp]
  0004f	89 45 ec	 mov	 DWORD PTR __Result$[ebp], eax

; 1975 :         __crt_va_end(_ArgList);

  00052	83 65 f4 00	 and	 DWORD PTR __ArgList$[ebp], 0

; 1976 :         return _Result;

  00056	8b 45 ec	 mov	 eax, DWORD PTR __Result$[ebp]

; 1977 :     }

  00059	c9		 leave
  0005a	c3		 ret	 0
__snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00003	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
