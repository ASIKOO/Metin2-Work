; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\MilesLib\SoundManager2D.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0CSoundManager2D@@QAE@XZ			; CSoundManager2D::CSoundManager2D
PUBLIC	??1CSoundManager2D@@UAE@XZ			; CSoundManager2D::~CSoundManager2D
PUBLIC	?Initialize@CSoundManager2D@@QAE_NXZ		; CSoundManager2D::Initialize
PUBLIC	?Destroy@CSoundManager2D@@QAEXXZ		; CSoundManager2D::Destroy
PUBLIC	?GetInstance@CSoundManager2D@@QAEPAVISoundInstance@@PBD@Z ; CSoundManager2D::GetInstance
PUBLIC	??_GCSoundManager2D@@UAEPAXI@Z			; CSoundManager2D::`scalar deleting destructor'
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCSoundData@@@std@@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CSoundData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSoundData *> >,0> >::find
PUBLIC	??$_Find@K@?$_Tree@V?$_Tmap_traits@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@$0A@@std@@@std@@ABEPAU?$_Tree_node@U?$pair@$$CBKPAVCSoundData@@@std@@PAX@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CSoundData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSoundData *> >,0> >::_Find<unsigned long>
PUBLIC	??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCSoundData@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CSoundData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSoundData *> >,0> >::_Find_lower_bound<unsigned long>
PUBLIC	??_7CSoundManager2D@@6B@			; CSoundManager2D::`vftable'
PUBLIC	??_C@_0CM@LNGHBJHC@CSoundManager2D?3?3GetInstance?5?$CIf@ ; `string'
PUBLIC	??_R1A@?0A@EA@CSoundBase@@8			; CSoundBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCSoundBase@@@8				; CSoundBase `RTTI Type Descriptor'
PUBLIC	??_R3CSoundBase@@8				; CSoundBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSoundBase@@8				; CSoundBase::`RTTI Base Class Array'
PUBLIC	??_R4CSoundManager2D@@6B@			; CSoundManager2D::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCSoundManager2D@@@8			; CSoundManager2D `RTTI Type Descriptor'
PUBLIC	??_R3CSoundManager2D@@8				; CSoundManager2D::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CSoundManager2D@@8				; CSoundManager2D::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CSoundManager2D@@8		; CSoundManager2D::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_L@YGXPAXIIP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp__AIL_open_digital_driver@16:PROC
EXTRN	__imp__AIL_close_digital_driver@4:PROC
EXTRN	?TraceError@@YAXPBDZZ:PROC			; TraceError
EXTRN	??0CSoundBase@@QAE@XZ:PROC			; CSoundBase::CSoundBase
EXTRN	??1CSoundBase@@UAE@XZ:PROC			; CSoundBase::~CSoundBase
EXTRN	?Initialize@CSoundBase@@QAEXXZ:PROC		; CSoundBase::Initialize
EXTRN	?Destroy@CSoundBase@@QAEXXZ:PROC		; CSoundBase::Destroy
EXTRN	?AddFile@CSoundBase@@QAEPAVCSoundData@@KPBD@Z:PROC ; CSoundBase::AddFile
EXTRN	?GetFileCRC@CSoundBase@@QAEKPBD@Z:PROC		; CSoundBase::GetFileCRC
EXTRN	??0CSoundInstance2D@@QAE@XZ:PROC		; CSoundInstance2D::CSoundInstance2D
EXTRN	??1CSoundInstance2D@@UAE@XZ:PROC		; CSoundInstance2D::~CSoundInstance2D
EXTRN	??_ECSoundManager2D@@UAEPAXI@Z:PROC		; CSoundManager2D::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?ms_DIGDriver@CSoundBase@@1PAU_DIG_DRIVER@@A:DWORD ; CSoundBase::ms_DIGDriver
EXTRN	?ms_dataMap@CSoundBase@@1V?$map@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@@std@@A:QWORD ; CSoundBase::ms_dataMap
EXTRN	___security_cookie:DWORD
;	COMDAT ?k@?1??GetInstance@CSoundManager2D@@QAEPAVISoundInstance@@PBD@Z@4KA
_BSS	SEGMENT
?k@?1??GetInstance@CSoundManager2D@@QAEPAVISoundInstance@@PBD@Z@4KA DD 01H DUP (?) ; `CSoundManager2D::GetInstance'::`2'::k
_BSS	ENDS
;	COMDAT ??_R1A@?0A@EA@CSoundManager2D@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSoundManager2D@@8 DD FLAT:??_R0?AVCSoundManager2D@@@8 ; CSoundManager2D::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSoundManager2D@@8
rdata$r	ENDS
;	COMDAT ??_R2CSoundManager2D@@8
rdata$r	SEGMENT
??_R2CSoundManager2D@@8 DD FLAT:??_R1A@?0A@EA@CSoundManager2D@@8 ; CSoundManager2D::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CSoundBase@@8
rdata$r	ENDS
;	COMDAT ??_R3CSoundManager2D@@8
rdata$r	SEGMENT
??_R3CSoundManager2D@@8 DD 00H				; CSoundManager2D::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CSoundManager2D@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSoundManager2D@@@8
data$rs	SEGMENT
??_R0?AVCSoundManager2D@@@8 DD FLAT:??_7type_info@@6B@	; CSoundManager2D `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSoundManager2D@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CSoundManager2D@@6B@
rdata$r	SEGMENT
??_R4CSoundManager2D@@6B@ DD 00H			; CSoundManager2D::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCSoundManager2D@@@8
	DD	FLAT:??_R3CSoundManager2D@@8
rdata$r	ENDS
;	COMDAT ??_R2CSoundBase@@8
rdata$r	SEGMENT
??_R2CSoundBase@@8 DD FLAT:??_R1A@?0A@EA@CSoundBase@@8	; CSoundBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CSoundBase@@8
rdata$r	SEGMENT
??_R3CSoundBase@@8 DD 00H				; CSoundBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CSoundBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCSoundBase@@@8
data$rs	SEGMENT
??_R0?AVCSoundBase@@@8 DD FLAT:??_7type_info@@6B@	; CSoundBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCSoundBase@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@CSoundBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CSoundBase@@8 DD FLAT:??_R0?AVCSoundBase@@@8 ; CSoundBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CSoundBase@@8
rdata$r	ENDS
;	COMDAT ??_C@_0CM@LNGHBJHC@CSoundManager2D?3?3GetInstance?5?$CIf@
CONST	SEGMENT
??_C@_0CM@LNGHBJHC@CSoundManager2D?3?3GetInstance?5?$CIf@ DB 'CSoundManag'
	DB	'er2D::GetInstance (filename: %s)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSoundManager2D@@6B@
CONST	SEGMENT
??_7CSoundManager2D@@6B@ DD FLAT:??_R4CSoundManager2D@@6B@ ; CSoundManager2D::`vftable'
	DD	FLAT:??_ECSoundManager2D@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CSoundManager2D@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CSoundManager2D@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CSoundManager2D@@QAE@XZ$0
__ehfuncinfo$??0CSoundManager2D@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CSoundManager2D@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCSoundData@@@std@@PAX@std@@@1@ABK@Z
_TEXT	SEGMENT
__Result$ = -40						; size = 12
$T1 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
tv64 = -16						; size = 4
_this$ = -12						; size = 4
__Scary$ = -8						; size = 4
__Trynode$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCSoundData@@@std@@PAX@std@@@1@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CSoundData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSoundData *> >,0> >::_Find_lower_bound<unsigned long>, COMDAT
; _this$ = ecx

; 1699 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 2051 :         return _STD addressof(_Mypair._Myval2._Myval2);

  0000b	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  0000e	89 45 ec	 mov	 DWORD PTR $T3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 2051 :         return _STD addressof(_Mypair._Myval2._Myval2);

  00011	8b 45 ec	 mov	 eax, DWORD PTR $T3[ebp]
  00014	89 45 f8	 mov	 DWORD PTR __Scary$[ebp], eax

; 1700 :         const auto _Scary = _Get_scary();
; 1701 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  00017	8b 45 f8	 mov	 eax, DWORD PTR __Scary$[ebp]
  0001a	8b 00		 mov	 eax, DWORD PTR [eax]
  0001c	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001f	89 45 d8	 mov	 DWORD PTR __Result$[ebp], eax
  00022	83 65 dc 00	 and	 DWORD PTR __Result$[ebp+4], 0
  00026	8b 45 f8	 mov	 eax, DWORD PTR __Scary$[ebp]
  00029	8b 00		 mov	 eax, DWORD PTR [eax]
  0002b	89 45 e0	 mov	 DWORD PTR __Result$[ebp+8], eax

; 1702 :         _Nodeptr _Trynode = _Result._Location._Parent;

  0002e	8b 45 d8	 mov	 eax, DWORD PTR __Result$[ebp]
  00031	89 45 fc	 mov	 DWORD PTR __Trynode$[ebp], eax
$LN2@Find_lower:

; 1703 :         while (!_Trynode->_Isnil) {

  00034	8b 45 fc	 mov	 eax, DWORD PTR __Trynode$[ebp]
  00037	0f be 40 0d	 movsx	 eax, BYTE PTR [eax+13]
  0003b	85 c0		 test	 eax, eax
  0003d	75 5a		 jne	 SHORT $LN3@Find_lower

; 1704 :             _Result._Location._Parent = _Trynode;

  0003f	8b 45 fc	 mov	 eax, DWORD PTR __Trynode$[ebp]
  00042	89 45 d8	 mov	 DWORD PTR __Result$[ebp], eax

; 2035 :         return _Mypair._Get_first();

  00045	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1351 :         return *this;

  00048	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 2035 :         return _Mypair._Get_first();

  0004b	8b 45 e8	 mov	 eax, DWORD PTR $T2[ebp]
  0004e	89 45 e4	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  00051	8b 45 fc	 mov	 eax, DWORD PTR __Trynode$[ebp]
  00054	8b 4d 0c	 mov	 ecx, DWORD PTR __Keyval$[ebp]
  00057	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0005a	3b 01		 cmp	 eax, DWORD PTR [ecx]
  0005c	73 09		 jae	 SHORT $LN23@Find_lower
  0005e	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv64[ebp], 1
  00065	eb 04		 jmp	 SHORT $LN21@Find_lower
$LN23@Find_lower:
  00067	83 65 f0 00	 and	 DWORD PTR tv64[ebp], 0
$LN21@Find_lower:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1705 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  0006b	0f b6 45 f0	 movzx	 eax, BYTE PTR tv64[ebp]
  0006f	85 c0		 test	 eax, eax
  00071	74 0f		 je	 SHORT $LN4@Find_lower

; 1706 :                 _Result._Location._Child = _Tree_child::_Right;

  00073	83 65 dc 00	 and	 DWORD PTR __Result$[ebp+4], 0

; 1707 :                 _Trynode                 = _Trynode->_Right;

  00077	8b 45 fc	 mov	 eax, DWORD PTR __Trynode$[ebp]
  0007a	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0007d	89 45 fc	 mov	 DWORD PTR __Trynode$[ebp], eax

; 1708 :             } else {

  00080	eb 15		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1709 :                 _Result._Location._Child = _Tree_child::_Left;

  00082	c7 45 dc 01 00
	00 00		 mov	 DWORD PTR __Result$[ebp+4], 1

; 1710 :                 _Result._Bound           = _Trynode;

  00089	8b 45 fc	 mov	 eax, DWORD PTR __Trynode$[ebp]
  0008c	89 45 e0	 mov	 DWORD PTR __Result$[ebp+8], eax

; 1711 :                 _Trynode                 = _Trynode->_Left;

  0008f	8b 45 fc	 mov	 eax, DWORD PTR __Trynode$[ebp]
  00092	8b 00		 mov	 eax, DWORD PTR [eax]
  00094	89 45 fc	 mov	 DWORD PTR __Trynode$[ebp], eax
$LN5@Find_lower:

; 1712 :             }
; 1713 :         }

  00097	eb 9b		 jmp	 SHORT $LN2@Find_lower
$LN3@Find_lower:

; 1714 : 
; 1715 :         return _Result;

  00099	8d 75 d8	 lea	 esi, DWORD PTR __Result$[ebp]
  0009c	8b 7d 08	 mov	 edi, DWORD PTR ___$ReturnUdt$[ebp]
  0009f	a5		 movsd
  000a0	a5		 movsd
  000a1	a5		 movsd
  000a2	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1716 :     }

  000a5	5f		 pop	 edi
  000a6	5e		 pop	 esi
  000a7	c9		 leave
  000a8	c2 08 00	 ret	 8
??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCSoundData@@@std@@PAX@std@@@1@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CSoundData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSoundData *> >,0> >::_Find_lower_bound<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ??$_Find@K@?$_Tree@V?$_Tmap_traits@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@$0A@@std@@@std@@ABEPAU?$_Tree_node@U?$pair@$$CBKPAVCSoundData@@@std@@PAX@1@ABK@Z
_TEXT	SEGMENT
__Loc$ = -44						; size = 12
$T1 = -32						; size = 4
$T2 = -28						; size = 4
$T3 = -24						; size = 4
$T4 = -20						; size = 4
tv79 = -16						; size = 4
tv131 = -12						; size = 4
__Bound$ = -8						; size = 4
_this$ = -4						; size = 4
__Keyval$ = 8						; size = 4
??$_Find@K@?$_Tree@V?$_Tmap_traits@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@$0A@@std@@@std@@ABEPAU?$_Tree_node@U?$pair@$$CBKPAVCSoundData@@@std@@PAX@1@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CSoundData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSoundData *> >,0> >::_Find<unsigned long>, COMDAT
; _this$ = ecx

; 1457 :     _NODISCARD _Nodeptr _Find(const _Other& _Keyval) const {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1458 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

  00009	ff 75 08	 push	 DWORD PTR __Keyval$[ebp]
  0000c	8d 45 d4	 lea	 eax, DWORD PTR __Loc$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKPAVCSoundData@@@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CSoundData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSoundData *> >,0> >::_Find_lower_bound<unsigned long>

; 1459 :         if (_Lower_bound_duplicate(_Loc._Bound, _Keyval)) {

  00018	8b 45 dc	 mov	 eax, DWORD PTR __Loc$[ebp+8]
  0001b	89 45 f8	 mov	 DWORD PTR __Bound$[ebp], eax

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0001e	8b 45 f8	 mov	 eax, DWORD PTR __Bound$[ebp]
  00021	0f be 40 0d	 movsx	 eax, BYTE PTR [eax+13]
  00025	85 c0		 test	 eax, eax
  00027	75 37		 jne	 SHORT $LN30@Find

; 2035 :         return _Mypair._Get_first();

  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1351 :         return *this;

  0002c	89 45 ec	 mov	 DWORD PTR $T4[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 2035 :         return _Mypair._Get_first();

  0002f	8b 45 ec	 mov	 eax, DWORD PTR $T4[ebp]
  00032	89 45 e0	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 127  :         return _Left < _Right;

  00035	8b 45 08	 mov	 eax, DWORD PTR __Keyval$[ebp]
  00038	8b 4d f8	 mov	 ecx, DWORD PTR __Bound$[ebp]
  0003b	8b 00		 mov	 eax, DWORD PTR [eax]
  0003d	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
  00040	73 09		 jae	 SHORT $LN42@Find
  00042	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR tv131[ebp], 1
  00049	eb 04		 jmp	 SHORT $LN40@Find
$LN42@Find:
  0004b	83 65 f4 00	 and	 DWORD PTR tv131[ebp], 0
$LN40@Find:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 1695 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0004f	0f b6 45 f4	 movzx	 eax, BYTE PTR tv131[ebp]
  00053	85 c0		 test	 eax, eax
  00055	75 09		 jne	 SHORT $LN30@Find
  00057	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR tv79[ebp], 1
  0005e	eb 04		 jmp	 SHORT $LN28@Find
$LN30@Find:
  00060	83 65 f0 00	 and	 DWORD PTR tv79[ebp], 0
$LN28@Find:

; 1459 :         if (_Lower_bound_duplicate(_Loc._Bound, _Keyval)) {

  00064	0f b6 45 f0	 movzx	 eax, BYTE PTR tv79[ebp]
  00068	85 c0		 test	 eax, eax
  0006a	74 05		 je	 SHORT $LN2@Find

; 1460 :             return _Loc._Bound;

  0006c	8b 45 dc	 mov	 eax, DWORD PTR __Loc$[ebp+8]
  0006f	eb 11		 jmp	 SHORT $LN1@Find
$LN2@Find:

; 2051 :         return _STD addressof(_Mypair._Myval2._Myval2);

  00071	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00074	89 45 e8	 mov	 DWORD PTR $T3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 2051 :         return _STD addressof(_Mypair._Myval2._Myval2);

  00077	8b 45 e8	 mov	 eax, DWORD PTR $T3[ebp]
  0007a	89 45 e4	 mov	 DWORD PTR $T2[ebp], eax

; 1461 :         }
; 1462 : 
; 1463 :         return _Get_scary()->_Myhead;

  0007d	8b 45 e4	 mov	 eax, DWORD PTR $T2[ebp]
  00080	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1@Find:

; 1464 :     }

  00082	c9		 leave
  00083	c2 04 00	 ret	 4
??$_Find@K@?$_Tree@V?$_Tmap_traits@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@$0A@@std@@@std@@ABEPAU?$_Tree_node@U?$pair@$$CBKPAVCSoundData@@@std@@PAX@1@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CSoundData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSoundData *> >,0> >::_Find<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCSoundData@@@std@@@std@@@std@@@2@ABK@Z
_TEXT	SEGMENT
$T1 = -16						; size = 4
___param0$ = -12					; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCSoundData@@@std@@@std@@@std@@@2@ABK@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,CSoundData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSoundData *> >,0> >::find, COMDAT
; _this$ = ecx

; 1467 :     _NODISCARD iterator find(const key_type& _Keyval) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 2047 :         return _STD addressof(_Mypair._Myval2._Myval2);

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  0000c	89 45 f8	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 2047 :         return _STD addressof(_Mypair._Myval2._Myval2);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR $T2[ebp]
  00012	89 45 f0	 mov	 DWORD PTR $T1[ebp], eax

; 1468 :         return iterator(_Find(_Keyval), _Get_scary());

  00015	ff 75 0c	 push	 DWORD PTR __Keyval$[ebp]
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	e8 00 00 00 00	 call	 ??$_Find@K@?$_Tree@V?$_Tmap_traits@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@$0A@@std@@@std@@ABEPAU?$_Tree_node@U?$pair@$$CBKPAVCSoundData@@@std@@PAX@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CSoundData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSoundData *> >,0> >::_Find<unsigned long>
  00020	89 45 f4	 mov	 DWORD PTR ___param0$[ebp], eax

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00026	8b 4d f4	 mov	 ecx, DWORD PTR ___param0$[ebp]
  00029	89 08		 mov	 DWORD PTR [eax], ecx

; 1468 :         return iterator(_Find(_Keyval), _Get_scary());

  0002b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1469 :     }

  0002e	c9		 leave
  0002f	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCSoundData@@@std@@@std@@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,CSoundData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSoundData *> >,0> >::find
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_GCSoundManager2D@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCSoundManager2D@@UAEPAXI@Z PROC			; CSoundManager2D::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CSoundManager2D@@UAE@XZ ; CSoundManager2D::~CSoundManager2D
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0c		 je	 SHORT $LN2@scalar
  00017	6a 34		 push	 52			; 00000034H
  00019	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00021	59		 pop	 ecx
  00022	59		 pop	 ecx
$LN2@scalar:
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c9		 leave
  00027	c2 04 00	 ret	 4
??_GCSoundManager2D@@UAEPAXI@Z ENDP			; CSoundManager2D::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\MilesLib\SoundManager2D.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\MilesLib\SoundManager2D.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\MilesLib\SoundManager2D.cpp
;	COMDAT ?GetInstance@CSoundManager2D@@QAEPAVISoundInstance@@PBD@Z
_TEXT	SEGMENT
_end$ = -76						; size = 4
$T1 = -72						; size = 4
$T2 = -68						; size = 4
$T3 = -64						; size = 4
$T4 = -60						; size = 4
$T5 = -56						; size = 4
$T6 = -52						; size = 4
$T7 = -48						; size = 4
___param0$ = -44					; size = 4
__Scary$8 = -40						; size = 4
$T9 = -36						; size = 4
_pkSoundData$ = -32					; size = 4
_itor$ = -28						; size = 4
_dwFileCRC$ = -24					; size = 4
tv236 = -20						; size = 4
_this$ = -16						; size = 4
_start$ = -12						; size = 4
_pkInst$10 = -8						; size = 4
$T11 = -1						; size = 1
_c_pszFileName$ = 8					; size = 4
?GetInstance@CSoundManager2D@@QAEPAVISoundInstance@@PBD@Z PROC ; CSoundManager2D::GetInstance, COMDAT
; _this$ = ecx

; 46   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 47   : 	DWORD dwFileCRC = GetFileCRC(c_pszFileName);

  00009	ff 75 08	 push	 DWORD PTR _c_pszFileName$[ebp]
  0000c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000f	e8 00 00 00 00	 call	 ?GetFileCRC@CSoundBase@@QAEKPBD@Z ; CSoundBase::GetFileCRC
  00014	89 45 e8	 mov	 DWORD PTR _dwFileCRC$[ebp], eax

; 48   : 	TSoundDataMap::iterator itor = ms_dataMap.find(dwFileCRC);

  00017	8d 45 e8	 lea	 eax, DWORD PTR _dwFileCRC$[ebp]
  0001a	50		 push	 eax
  0001b	8d 45 e4	 lea	 eax, DWORD PTR _itor$[ebp]
  0001e	50		 push	 eax
  0001f	b9 00 00 00 00	 mov	 ecx, OFFSET ?ms_dataMap@CSoundBase@@1V?$map@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@@std@@A ; CSoundBase::ms_dataMap
  00024	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@$0A@@std@@@std@@QAE?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKPAVCSoundData@@@std@@@std@@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,CSoundData *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,CSoundData *> >,0> >::find
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00029	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T9[ebp], OFFSET ?ms_dataMap@CSoundBase@@1V?$map@KPAVCSoundData@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAVCSoundData@@@std@@@3@@std@@A ; CSoundBase::ms_dataMap
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 2047 :         return _STD addressof(_Mypair._Myval2._Myval2);

  00030	8b 45 dc	 mov	 eax, DWORD PTR $T9[ebp]
  00033	89 45 d8	 mov	 DWORD PTR __Scary$8[ebp], eax

; 1250 :         return iterator(_Scary->_Myhead, _Scary);

  00036	8b 45 d8	 mov	 eax, DWORD PTR __Scary$8[ebp]
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
  0003b	89 45 d4	 mov	 DWORD PTR ___param0$[ebp], eax

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

  0003e	8b 45 d4	 mov	 eax, DWORD PTR ___param0$[ebp]
  00041	89 45 d0	 mov	 DWORD PTR $T7[ebp], eax

; 1250 :         return iterator(_Scary->_Myhead, _Scary);

  00044	8d 45 d0	 lea	 eax, DWORD PTR $T7[ebp]
  00047	89 45 cc	 mov	 DWORD PTR $T6[ebp], eax

; 232  :         return this->_Ptr == _Right._Ptr;

  0004a	8b 45 cc	 mov	 eax, DWORD PTR $T6[ebp]
  0004d	8b 4d e4	 mov	 ecx, DWORD PTR _itor$[ebp]
  00050	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00052	75 09		 jne	 SHORT $LN77@GetInstanc
  00054	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR tv236[ebp], 1
  0005b	eb 04		 jmp	 SHORT $LN78@GetInstanc
$LN77@GetInstanc:
  0005d	83 65 ec 00	 and	 DWORD PTR tv236[ebp], 0
$LN78@GetInstanc:
  00061	8a 45 ec	 mov	 al, BYTE PTR tv236[ebp]
  00064	88 45 ff	 mov	 BYTE PTR $T11[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\MilesLib\SoundManager2D.cpp

; 52   : 	if (itor == ms_dataMap.end())

  00067	0f b6 45 ff	 movzx	 eax, BYTE PTR $T11[ebp]
  0006b	85 c0		 test	 eax, eax
  0006d	74 13		 je	 SHORT $LN4@GetInstanc

; 53   : 		pkSoundData = AddFile(dwFileCRC, c_pszFileName); // CSoundBase::AddFile

  0006f	ff 75 08	 push	 DWORD PTR _c_pszFileName$[ebp]
  00072	ff 75 e8	 push	 DWORD PTR _dwFileCRC$[ebp]
  00075	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00078	e8 00 00 00 00	 call	 ?AddFile@CSoundBase@@QAEPAVCSoundData@@KPBD@Z ; CSoundBase::AddFile
  0007d	89 45 e0	 mov	 DWORD PTR _pkSoundData$[ebp], eax
  00080	eb 2a		 jmp	 SHORT $LN5@GetInstanc
$LN4@GetInstanc:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 185  :         return this->_Ptr->_Myval;

  00082	8b 45 e4	 mov	 eax, DWORD PTR _itor$[ebp]
  00085	83 c0 10	 add	 eax, 16			; 00000010H
  00088	89 45 c8	 mov	 DWORD PTR $T5[ebp], eax

; 273  :         return const_cast<reference>(_Mybase::operator*());

  0008b	8b 45 c8	 mov	 eax, DWORD PTR $T5[ebp]
  0008e	89 45 c4	 mov	 DWORD PTR $T4[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00091	8b 45 c4	 mov	 eax, DWORD PTR $T4[ebp]
  00094	89 45 c0	 mov	 DWORD PTR $T3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 151  :         return _STD addressof(_Val);

  00097	8b 45 c0	 mov	 eax, DWORD PTR $T3[ebp]
  0009a	89 45 bc	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xtree

; 277  :         return pointer_traits<pointer>::pointer_to(**this);

  0009d	8b 45 bc	 mov	 eax, DWORD PTR $T2[ebp]
  000a0	89 45 b8	 mov	 DWORD PTR $T1[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\MilesLib\SoundManager2D.cpp

; 55   : 		pkSoundData = itor->second;

  000a3	8b 45 b8	 mov	 eax, DWORD PTR $T1[ebp]
  000a6	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000a9	89 45 e0	 mov	 DWORD PTR _pkSoundData$[ebp], eax
$LN5@GetInstanc:

; 56   : 
; 57   : 	assert(pkSoundData != NULL);
; 58   : 
; 59   : 	static DWORD k = 0;
; 60   : 
; 61   : 	DWORD start = k++;

  000ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?k@?1??GetInstance@CSoundManager2D@@QAEPAVISoundInstance@@PBD@Z@4KA
  000b1	89 45 f4	 mov	 DWORD PTR _start$[ebp], eax
  000b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?k@?1??GetInstance@CSoundManager2D@@QAEPAVISoundInstance@@PBD@Z@4KA
  000b9	40		 inc	 eax
  000ba	a3 00 00 00 00	 mov	 DWORD PTR ?k@?1??GetInstance@CSoundManager2D@@QAEPAVISoundInstance@@PBD@Z@4KA, eax

; 62   : 	DWORD end = start + INSTANCE_MAX_COUNT;

  000bf	8b 45 f4	 mov	 eax, DWORD PTR _start$[ebp]
  000c2	83 c0 04	 add	 eax, 4
  000c5	89 45 b4	 mov	 DWORD PTR _end$[ebp], eax
$LN2@GetInstanc:

; 63   : 
; 64   : 	while (start < end)

  000c8	8b 45 f4	 mov	 eax, DWORD PTR _start$[ebp]
  000cb	3b 45 b4	 cmp	 eax, DWORD PTR _end$[ebp]
  000ce	73 5b		 jae	 SHORT $LN3@GetInstanc

; 65   : 	{
; 66   : 		CSoundInstance2D * pkInst = &ms_Instances[start % INSTANCE_MAX_COUNT];

  000d0	8b 45 f4	 mov	 eax, DWORD PTR _start$[ebp]
  000d3	33 d2		 xor	 edx, edx
  000d5	6a 04		 push	 4
  000d7	59		 pop	 ecx
  000d8	f7 f1		 div	 ecx
  000da	6b c2 0c	 imul	 eax, edx, 12
  000dd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000e0	8d 44 01 04	 lea	 eax, DWORD PTR [ecx+eax+4]
  000e4	89 45 f8	 mov	 DWORD PTR _pkInst$10[ebp], eax

; 67   : 
; 68   : 		if (pkInst->IsDone())

  000e7	8b 45 f8	 mov	 eax, DWORD PTR _pkInst$10[ebp]
  000ea	8b 00		 mov	 eax, DWORD PTR [eax]
  000ec	8b 4d f8	 mov	 ecx, DWORD PTR _pkInst$10[ebp]
  000ef	ff 50 28	 call	 DWORD PTR [eax+40]
  000f2	0f b6 c0	 movzx	 eax, al
  000f5	85 c0		 test	 eax, eax
  000f7	74 29		 je	 SHORT $LN6@GetInstanc

; 69   : 		{
; 70   : 			if (!pkInst->SetSound(pkSoundData))

  000f9	ff 75 e0	 push	 DWORD PTR _pkSoundData$[ebp]
  000fc	8b 45 f8	 mov	 eax, DWORD PTR _pkInst$10[ebp]
  000ff	8b 00		 mov	 eax, DWORD PTR [eax]
  00101	8b 4d f8	 mov	 ecx, DWORD PTR _pkInst$10[ebp]
  00104	ff 50 0c	 call	 DWORD PTR [eax+12]
  00107	0f b6 c0	 movzx	 eax, al
  0010a	85 c0		 test	 eax, eax
  0010c	75 0f		 jne	 SHORT $LN7@GetInstanc

; 71   : 				TraceError("CSoundManager2D::GetInstance (filename: %s)", c_pszFileName);

  0010e	ff 75 08	 push	 DWORD PTR _c_pszFileName$[ebp]
  00111	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@LNGHBJHC@CSoundManager2D?3?3GetInstance?5?$CIf@
  00116	e8 00 00 00 00	 call	 ?TraceError@@YAXPBDZZ	; TraceError
  0011b	59		 pop	 ecx
  0011c	59		 pop	 ecx
$LN7@GetInstanc:

; 72   : 			return (pkInst);

  0011d	8b 45 f8	 mov	 eax, DWORD PTR _pkInst$10[ebp]
  00120	eb 0b		 jmp	 SHORT $LN1@GetInstanc
$LN6@GetInstanc:

; 73   : 		}
; 74   : 
; 75   : 		++start;

  00122	8b 45 f4	 mov	 eax, DWORD PTR _start$[ebp]
  00125	40		 inc	 eax
  00126	89 45 f4	 mov	 DWORD PTR _start$[ebp], eax

; 76   : 	}

  00129	eb 9d		 jmp	 SHORT $LN2@GetInstanc
$LN3@GetInstanc:

; 77   : 
; 78   : 	return NULL;

  0012b	33 c0		 xor	 eax, eax
$LN1@GetInstanc:

; 79   : }

  0012d	c9		 leave
  0012e	c2 04 00	 ret	 4
?GetInstance@CSoundManager2D@@QAEPAVISoundInstance@@PBD@Z ENDP ; CSoundManager2D::GetInstance
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\MilesLib\SoundManager2D.cpp
;	COMDAT ?Destroy@CSoundManager2D@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$1 = -4						; size = 4
?Destroy@CSoundManager2D@@QAEXXZ PROC			; CSoundManager2D::Destroy, COMDAT
; _this$ = ecx

; 32   : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 33   : 	for (int i = 0; i < INSTANCE_MAX_COUNT; ++i)

  00008	83 65 fc 00	 and	 DWORD PTR _i$1[ebp], 0
  0000c	eb 07		 jmp	 SHORT $LN4@Destroy
$LN2@Destroy:
  0000e	8b 45 fc	 mov	 eax, DWORD PTR _i$1[ebp]
  00011	40		 inc	 eax
  00012	89 45 fc	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@Destroy:
  00015	83 7d fc 04	 cmp	 DWORD PTR _i$1[ebp], 4
  00019	7d 1b		 jge	 SHORT $LN3@Destroy

; 34   : 		ms_Instances[i].Destroy();

  0001b	6b 45 fc 0c	 imul	 eax, DWORD PTR _i$1[ebp], 12
  0001f	6b 4d fc 0c	 imul	 ecx, DWORD PTR _i$1[ebp], 12
  00023	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00026	8d 4c 0a 04	 lea	 ecx, DWORD PTR [edx+ecx+4]
  0002a	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0002d	8b 44 02 04	 mov	 eax, DWORD PTR [edx+eax+4]
  00031	ff 50 08	 call	 DWORD PTR [eax+8]
  00034	eb d8		 jmp	 SHORT $LN2@Destroy
$LN3@Destroy:

; 35   : 	
; 36   : 	if (ms_DIGDriver != NULL)

  00036	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ms_DIGDriver@CSoundBase@@1PAU_DIG_DRIVER@@A, 0 ; CSoundBase::ms_DIGDriver
  0003d	74 13		 je	 SHORT $LN5@Destroy

; 37   : 	{
; 38   : 		AIL_close_digital_driver(ms_DIGDriver);

  0003f	ff 35 00 00 00
	00		 push	 DWORD PTR ?ms_DIGDriver@CSoundBase@@1PAU_DIG_DRIVER@@A ; CSoundBase::ms_DIGDriver
  00045	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AIL_close_digital_driver@4

; 39   : 		ms_DIGDriver = NULL;

  0004b	83 25 00 00 00
	00 00		 and	 DWORD PTR ?ms_DIGDriver@CSoundBase@@1PAU_DIG_DRIVER@@A, 0 ; CSoundBase::ms_DIGDriver
$LN5@Destroy:

; 40   : 	}	
; 41   : 
; 42   : 	CSoundBase::Destroy();

  00052	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00055	e8 00 00 00 00	 call	 ?Destroy@CSoundBase@@QAEXXZ ; CSoundBase::Destroy

; 43   : }

  0005a	c9		 leave
  0005b	c3		 ret	 0
?Destroy@CSoundManager2D@@QAEXXZ ENDP			; CSoundManager2D::Destroy
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\MilesLib\SoundManager2D.cpp
;	COMDAT ?Initialize@CSoundManager2D@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$1 = -4						; size = 4
?Initialize@CSoundManager2D@@QAE_NXZ PROC		; CSoundManager2D::Initialize, COMDAT
; _this$ = ecx

; 13   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 14   : 	CSoundBase::Initialize();

  00008	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e8 00 00 00 00	 call	 ?Initialize@CSoundBase@@QAEXXZ ; CSoundBase::Initialize

; 15   : 
; 16   : 	if (ms_DIGDriver)

  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ms_DIGDriver@CSoundBase@@1PAU_DIG_DRIVER@@A, 0 ; CSoundBase::ms_DIGDriver
  00017	74 04		 je	 SHORT $LN5@Initialize

; 17   : 		return true;

  00019	b0 01		 mov	 al, 1
  0001b	eb 46		 jmp	 SHORT $LN1@Initialize
$LN5@Initialize:

; 18   : 
; 19   : 	ms_DIGDriver = AIL_open_digital_driver(44100, 16, 2, 0);

  0001d	6a 00		 push	 0
  0001f	6a 02		 push	 2
  00021	6a 10		 push	 16			; 00000010H
  00023	68 44 ac 00 00	 push	 44100			; 0000ac44H
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__AIL_open_digital_driver@16
  0002e	a3 00 00 00 00	 mov	 DWORD PTR ?ms_DIGDriver@CSoundBase@@1PAU_DIG_DRIVER@@A, eax ; CSoundBase::ms_DIGDriver

; 20   : 	
; 21   : 	for (int i = 0; i < INSTANCE_MAX_COUNT; ++i)

  00033	83 65 fc 00	 and	 DWORD PTR _i$1[ebp], 0
  00037	eb 07		 jmp	 SHORT $LN4@Initialize
$LN2@Initialize:
  00039	8b 45 fc	 mov	 eax, DWORD PTR _i$1[ebp]
  0003c	40		 inc	 eax
  0003d	89 45 fc	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@Initialize:
  00040	83 7d fc 04	 cmp	 DWORD PTR _i$1[ebp], 4
  00044	7d 1b		 jge	 SHORT $LN3@Initialize

; 22   : 		ms_Instances[i].Initialize();

  00046	6b 45 fc 0c	 imul	 eax, DWORD PTR _i$1[ebp], 12
  0004a	6b 4d fc 0c	 imul	 ecx, DWORD PTR _i$1[ebp], 12
  0004e	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00051	8d 4c 0a 04	 lea	 ecx, DWORD PTR [edx+ecx+4]
  00055	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  00058	8b 44 02 04	 mov	 eax, DWORD PTR [edx+eax+4]
  0005c	ff 50 04	 call	 DWORD PTR [eax+4]
  0005f	eb d8		 jmp	 SHORT $LN2@Initialize
$LN3@Initialize:

; 23   : /*	ms_DIGDriver = AIL_open_digital_driver(44100,
; 24   : 										   (DIG_F_STEREO_16 & DIG_F_16BITS_MASK) ? 16 : 8,
; 25   : 										   (DIG_F_STEREO_16 & DIG_F_16BITS_MASK) ? 2 : 1,
; 26   : 										   0);
; 27   : */
; 28   : 	return true;

  00061	b0 01		 mov	 al, 1
$LN1@Initialize:

; 29   : }

  00063	c9		 leave
  00064	c3		 ret	 0
?Initialize@CSoundManager2D@@QAE_NXZ ENDP		; CSoundManager2D::Initialize
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\MilesLib\SoundManager2D.cpp
;	COMDAT ??1CSoundManager2D@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CSoundManager2D@@UAE@XZ PROC				; CSoundManager2D::~CSoundManager2D, COMDAT
; _this$ = ecx

; 9    : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1CSoundManager2D@@UAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00029	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CSoundManager2D@@6B@

; 10   : }

  0002f	68 00 00 00 00	 push	 OFFSET ??1CSoundInstance2D@@UAE@XZ ; CSoundInstance2D::~CSoundInstance2D
  00034	6a 04		 push	 4
  00036	6a 0c		 push	 12			; 0000000cH
  00038	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0003b	83 c0 04	 add	 eax, 4
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ??_M@YGXPAXIIP6EX0@Z@Z
  00044	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	e8 00 00 00 00	 call	 ??1CSoundBase@@UAE@XZ	; CSoundBase::~CSoundBase
  0004c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00056	59		 pop	 ecx
  00057	c9		 leave
  00058	c3		 ret	 0
  00059	cc		 int	 3
  0005a	cc		 int	 3
  0005b	cc		 int	 3
  0005c	cc		 int	 3
  0005d	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CSoundManager2D@@UAE@XZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1CSoundManager2D@@UAE@XZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1CSoundManager2D@@UAE@XZ ENDP				; CSoundManager2D::~CSoundManager2D
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\MilesLib\SoundManager2D.cpp
;	COMDAT ??0CSoundManager2D@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CSoundManager2D@@QAE@XZ PROC				; CSoundManager2D::CSoundManager2D, COMDAT
; _this$ = ecx

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CSoundManager2D@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ??0CSoundBase@@QAE@XZ	; CSoundBase::CSoundBase
  0002e	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00032	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00035	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CSoundManager2D@@6B@
  0003b	68 00 00 00 00	 push	 OFFSET ??1CSoundInstance2D@@UAE@XZ ; CSoundInstance2D::~CSoundInstance2D
  00040	68 00 00 00 00	 push	 OFFSET ??0CSoundInstance2D@@QAE@XZ ; CSoundInstance2D::CSoundInstance2D
  00045	6a 04		 push	 4
  00047	6a 0c		 push	 12			; 0000000cH
  00049	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	83 c0 04	 add	 eax, 4
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ??_L@YGXPAXIIP6EX0@Z1@Z

; 6    : }

  00055	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00059	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0005c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00066	59		 pop	 ecx
  00067	c9		 leave
  00068	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CSoundManager2D@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1CSoundBase@@UAE@XZ	; CSoundBase::~CSoundBase
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??0CSoundManager2D@@QAE@XZ:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CSoundManager2D@@QAE@XZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CSoundManager2D@@QAE@XZ ENDP				; CSoundManager2D::CSoundManager2D
END
