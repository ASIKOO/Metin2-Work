; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??0CEmitterProperty@@QAE@XZ			; CEmitterProperty::CEmitterProperty
PUBLIC	??1CEmitterProperty@@UAE@XZ			; CEmitterProperty::~CEmitterProperty
PUBLIC	?Clear@CEmitterProperty@@QAEXXZ			; CEmitterProperty::Clear
PUBLIC	?GetEmitterShape@CEmitterProperty@@QAEEXZ	; CEmitterProperty::GetEmitterShape
PUBLIC	?GetEmitterAdvancedType@CEmitterProperty@@QAEEXZ ; CEmitterProperty::GetEmitterAdvancedType
PUBLIC	?isEmitFromEdge@CEmitterProperty@@QAEHXZ	; CEmitterProperty::isEmitFromEdge
PUBLIC	?GetEmittingSize@CEmitterProperty@@QAEXMPAM@Z	; CEmitterProperty::GetEmittingSize
PUBLIC	?GetEmittingAngularVelocity@CEmitterProperty@@QAEXMPAM@Z ; CEmitterProperty::GetEmittingAngularVelocity
PUBLIC	?GetEmittingDirectionX@CEmitterProperty@@QAEXMPAM@Z ; CEmitterProperty::GetEmittingDirectionX
PUBLIC	?GetEmittingDirectionY@CEmitterProperty@@QAEXMPAM@Z ; CEmitterProperty::GetEmittingDirectionY
PUBLIC	?GetEmittingDirectionZ@CEmitterProperty@@QAEXMPAM@Z ; CEmitterProperty::GetEmittingDirectionZ
PUBLIC	?GetEmittingVelocity@CEmitterProperty@@QAEXMPAM@Z ; CEmitterProperty::GetEmittingVelocity
PUBLIC	?GetEmissionCountPerSecond@CEmitterProperty@@QAEXMPAM@Z ; CEmitterProperty::GetEmissionCountPerSecond
PUBLIC	?GetParticleLifeTime@CEmitterProperty@@QAEXMPAM@Z ; CEmitterProperty::GetParticleLifeTime
PUBLIC	?GetParticleSizeX@CEmitterProperty@@QAEXMPAM@Z	; CEmitterProperty::GetParticleSizeX
PUBLIC	?GetParticleSizeY@CEmitterProperty@@QAEXMPAM@Z	; CEmitterProperty::GetParticleSizeY
PUBLIC	??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
PUBLIC	?clear@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::clear
PUBLIC	?_Tidy@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Tidy
PUBLIC	??_GCEmitterProperty@@UAEPAXI@Z			; CEmitterProperty::`scalar deleting destructor'
PUBLIC	??$_Destroy_range@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@YAXPAV?$CTimeEvent@M@@QAV1@AAV?$allocator@V?$CTimeEvent@M@@@0@@Z ; std::_Destroy_range<std::allocator<CTimeEvent<float> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
PUBLIC	??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
PUBLIC	??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@MU?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABMU?$less@X@0@@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float,std::less<void> >
PUBLIC	??$lower_bound@PAV?$CTimeEvent@M@@MU?$less@X@std@@@std@@YAPAV?$CTimeEvent@M@@PAV1@QAV1@ABMU?$less@X@0@@Z ; std::lower_bound<CTimeEvent<float> *,float,std::less<void> >
PUBLIC	??$upper_bound@PAV?$CTimeEvent@M@@MU?$less@X@std@@@std@@YAPAV?$CTimeEvent@M@@PAV1@0ABMU?$less@X@0@@Z ; std::upper_bound<CTimeEvent<float> *,float,std::less<void> >
PUBLIC	??$_Refancy@PAV?$CTimeEvent@M@@$0A@@std@@YAPAV?$CTimeEvent@M@@PAV1@@Z ; std::_Refancy<CTimeEvent<float> *,0>
PUBLIC	??_7CEmitterProperty@@6B@			; CEmitterProperty::`vftable'
PUBLIC	??_R4CEmitterProperty@@6B@			; CEmitterProperty::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCEmitterProperty@@@8			; CEmitterProperty `RTTI Type Descriptor'
PUBLIC	??_R3CEmitterProperty@@8			; CEmitterProperty::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEmitterProperty@@8			; CEmitterProperty::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CEmitterProperty@@8		; CEmitterProperty::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	??_ECEmitterProperty@@UAEPAXI@Z:PROC		; CEmitterProperty::`vector deleting destructor'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ??_R1A@?0A@EA@CEmitterProperty@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEmitterProperty@@8 DD FLAT:??_R0?AVCEmitterProperty@@@8 ; CEmitterProperty::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CEmitterProperty@@8
rdata$r	ENDS
;	COMDAT ??_R2CEmitterProperty@@8
rdata$r	SEGMENT
??_R2CEmitterProperty@@8 DD FLAT:??_R1A@?0A@EA@CEmitterProperty@@8 ; CEmitterProperty::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CEmitterProperty@@8
rdata$r	SEGMENT
??_R3CEmitterProperty@@8 DD 00H				; CEmitterProperty::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CEmitterProperty@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEmitterProperty@@@8
data$rs	SEGMENT
??_R0?AVCEmitterProperty@@@8 DD FLAT:??_7type_info@@6B@	; CEmitterProperty `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCEmitterProperty@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CEmitterProperty@@6B@
rdata$r	SEGMENT
??_R4CEmitterProperty@@6B@ DD 00H			; CEmitterProperty::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCEmitterProperty@@@8
	DD	FLAT:??_R3CEmitterProperty@@8
rdata$r	ENDS
;	COMDAT ??_7CEmitterProperty@@6B@
CONST	SEGMENT
??_7CEmitterProperty@@6B@ DD FLAT:??_R4CEmitterProperty@@6B@ ; CEmitterProperty::`vftable'
	DD	FLAT:??_ECEmitterProperty@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CEmitterProperty@@QAE@XZ DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$??0CEmitterProperty@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CEmitterProperty@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CEmitterProperty@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CEmitterProperty@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CEmitterProperty@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CEmitterProperty@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CEmitterProperty@@QAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CEmitterProperty@@QAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CEmitterProperty@@QAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0CEmitterProperty@@QAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??0CEmitterProperty@@QAE@XZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??0CEmitterProperty@@QAE@XZ$9
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Refancy@PAV?$CTimeEvent@M@@$0A@@std@@YAPAV?$CTimeEvent@M@@PAV1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Refancy@PAV?$CTimeEvent@M@@$0A@@std@@YAPAV?$CTimeEvent@M@@PAV1@@Z PROC ; std::_Refancy<CTimeEvent<float> *,0>, COMDAT

; 261  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 262  :     return _Ptr;

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 263  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Refancy@PAV?$CTimeEvent@M@@$0A@@std@@YAPAV?$CTimeEvent@M@@PAV1@@Z ENDP ; std::_Refancy<CTimeEvent<float> *,0>
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
;	COMDAT ??$upper_bound@PAV?$CTimeEvent@M@@MU?$less@X@std@@@std@@YAPAV?$CTimeEvent@M@@PAV1@0ABMU?$less@X@0@@Z
_TEXT	SEGMENT
$T1 = -32						; size = 4
__UMid$2 = -28						; size = 4
tv91 = -24						; size = 4
__Count2$3 = -20					; size = 4
__First$ = -16						; size = 4
__First$ = -12						; size = 4
__UFirst$ = -8						; size = 4
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$upper_bound@PAV?$CTimeEvent@M@@MU?$less@X@std@@@std@@YAPAV?$CTimeEvent@M@@PAV1@0ABMU?$less@X@0@@Z PROC ; std::upper_bound<CTimeEvent<float> *,float,std::less<void> >, COMDAT

; 6725 : _NODISCARD _CONSTEXPR20 _FwdIt upper_bound(_FwdIt _First, _FwdIt _Last, const _Ty& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H

; 6726 :     // find first element that _Val is before
; 6727 :     _Adl_verify_range(_First, _Last);
; 6728 :     auto _UFirst                = _Get_unwrapped(_First);

  00006	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR __UFirst$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1303 :         return _It + 0;

  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000f	89 45 e0	 mov	 DWORD PTR $T1[ebp], eax

; 1794 :         return _Last - _First; // assume the iterator will do debug checking

  00012	8b 45 e0	 mov	 eax, DWORD PTR $T1[ebp]
  00015	2b 45 f8	 sub	 eax, DWORD PTR __UFirst$[ebp]
  00018	c1 f8 03	 sar	 eax, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6729 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));

  0001b	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
$LN2@upper_boun:

; 6730 : 
; 6731 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  0001e	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00022	7e 72		 jle	 SHORT $LN3@upper_boun

; 6732 :         _Iter_diff_t<_FwdIt> _Count2 = _Count / 2;

  00024	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  00027	99		 cdq
  00028	2b c2		 sub	 eax, edx
  0002a	d1 f8		 sar	 eax, 1
  0002c	89 45 ec	 mov	 DWORD PTR __Count2$3[ebp], eax

; 6733 :         const auto _UMid             = _STD next(_UFirst, _Count2);

  0002f	8b 45 f8	 mov	 eax, DWORD PTR __UFirst$[ebp]
  00032	89 45 f4	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1714 :         _Where += _Off;

  00035	8b 45 ec	 mov	 eax, DWORD PTR __Count2$3[ebp]
  00038	8b 4d f4	 mov	 ecx, DWORD PTR __First$[ebp]
  0003b	8d 04 c1	 lea	 eax, DWORD PTR [ecx+eax*8]
  0003e	89 45 f4	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6733 :         const auto _UMid             = _STD next(_UFirst, _Count2);

  00041	8b 45 f4	 mov	 eax, DWORD PTR __First$[ebp]
  00044	89 45 e4	 mov	 DWORD PTR __UMid$2[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 199  : 	return lhs < rhs.m_fTime;

  00047	8b 45 e4	 mov	 eax, DWORD PTR __UMid$2[ebp]
  0004a	8b 4d 10	 mov	 ecx, DWORD PTR __Val$[ebp]
  0004d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00051	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00054	76 09		 jbe	 SHORT $LN23@upper_boun
  00056	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR tv91[ebp], 1
  0005d	eb 04		 jmp	 SHORT $LN24@upper_boun
$LN23@upper_boun:
  0005f	83 65 e8 00	 and	 DWORD PTR tv91[ebp], 0
$LN24@upper_boun:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6734 :         if (_Pred(_Val, *_UMid)) {

  00063	0f b6 45 e8	 movzx	 eax, BYTE PTR tv91[ebp]
  00067	85 c0		 test	 eax, eax
  00069	74 08		 je	 SHORT $LN4@upper_boun

; 6735 :             _Count = _Count2;

  0006b	8b 45 ec	 mov	 eax, DWORD PTR __Count2$3[ebp]
  0006e	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax

; 6736 :         } else { // try top half

  00071	eb 21		 jmp	 SHORT $LN5@upper_boun
$LN4@upper_boun:

; 6737 :             _UFirst = _Next_iter(_UMid);

  00073	8b 45 e4	 mov	 eax, DWORD PTR __UMid$2[ebp]
  00076	89 45 f0	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1837 :     return ++_First;

  00079	8b 45 f0	 mov	 eax, DWORD PTR __First$[ebp]
  0007c	83 c0 08	 add	 eax, 8
  0007f	89 45 f0	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6737 :             _UFirst = _Next_iter(_UMid);

  00082	8b 45 f0	 mov	 eax, DWORD PTR __First$[ebp]
  00085	89 45 f8	 mov	 DWORD PTR __UFirst$[ebp], eax

; 6738 :             _Count -= _Count2 + 1;

  00088	8b 45 ec	 mov	 eax, DWORD PTR __Count2$3[ebp]
  0008b	40		 inc	 eax
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  0008f	2b c8		 sub	 ecx, eax
  00091	89 4d fc	 mov	 DWORD PTR __Count$[ebp], ecx
$LN5@upper_boun:

; 6739 :         }
; 6740 :     }

  00094	eb 88		 jmp	 SHORT $LN2@upper_boun
$LN3@upper_boun:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1492 :         _It = static_cast<_UIter&&>(_UIt);

  00096	8b 45 f8	 mov	 eax, DWORD PTR __UFirst$[ebp]
  00099	89 45 08	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6743 :     return _First;

  0009c	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]

; 6744 : }

  0009f	c9		 leave
  000a0	c3		 ret	 0
??$upper_bound@PAV?$CTimeEvent@M@@MU?$less@X@std@@@std@@YAPAV?$CTimeEvent@M@@PAV1@0ABMU?$less@X@0@@Z ENDP ; std::upper_bound<CTimeEvent<float> *,float,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
;	COMDAT ??$lower_bound@PAV?$CTimeEvent@M@@MU?$less@X@std@@@std@@YAPAV?$CTimeEvent@M@@PAV1@QAV1@ABMU?$less@X@0@@Z
_TEXT	SEGMENT
$T1 = -32						; size = 4
__UMid$2 = -28						; size = 4
tv91 = -24						; size = 4
__Count2$3 = -20					; size = 4
__First$ = -16						; size = 4
__First$ = -12						; size = 4
__UFirst$ = -8						; size = 4
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
__Pred$ = 20						; size = 1
??$lower_bound@PAV?$CTimeEvent@M@@MU?$less@X@std@@@std@@YAPAV?$CTimeEvent@M@@PAV1@QAV1@ABMU?$less@X@0@@Z PROC ; std::lower_bound<CTimeEvent<float> *,float,std::less<void> >, COMDAT

; 5849 : _NODISCARD _CONSTEXPR20 _FwdIt lower_bound(_FwdIt _First, const _FwdIt _Last, const _Ty& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H

; 5850 :     // find first element not before _Val
; 5851 :     _Adl_verify_range(_First, _Last);
; 5852 :     auto _UFirst                = _Get_unwrapped(_First);

  00006	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00009	89 45 f8	 mov	 DWORD PTR __UFirst$[ebp], eax

; 1303 :         return _It + 0;

  0000c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0000f	89 45 e0	 mov	 DWORD PTR $T1[ebp], eax

; 1794 :         return _Last - _First; // assume the iterator will do debug checking

  00012	8b 45 e0	 mov	 eax, DWORD PTR $T1[ebp]
  00015	2b 45 f8	 sub	 eax, DWORD PTR __UFirst$[ebp]
  00018	c1 f8 03	 sar	 eax, 3

; 5853 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));

  0001b	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
$LN2@lower_boun:

; 5854 : 
; 5855 :     while (0 < _Count) { // divide and conquer, find half that contains answer

  0001e	83 7d fc 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00022	7e 72		 jle	 SHORT $LN3@lower_boun

; 5856 :         const _Iter_diff_t<_FwdIt> _Count2 = _Count / 2;

  00024	8b 45 fc	 mov	 eax, DWORD PTR __Count$[ebp]
  00027	99		 cdq
  00028	2b c2		 sub	 eax, edx
  0002a	d1 f8		 sar	 eax, 1
  0002c	89 45 ec	 mov	 DWORD PTR __Count2$3[ebp], eax

; 5857 :         const auto _UMid                   = _STD next(_UFirst, _Count2);

  0002f	8b 45 f8	 mov	 eax, DWORD PTR __UFirst$[ebp]
  00032	89 45 f4	 mov	 DWORD PTR __First$[ebp], eax

; 1714 :         _Where += _Off;

  00035	8b 45 ec	 mov	 eax, DWORD PTR __Count2$3[ebp]
  00038	8b 4d f4	 mov	 ecx, DWORD PTR __First$[ebp]
  0003b	8d 04 c1	 lea	 eax, DWORD PTR [ecx+eax*8]
  0003e	89 45 f4	 mov	 DWORD PTR __First$[ebp], eax

; 5857 :         const auto _UMid                   = _STD next(_UFirst, _Count2);

  00041	8b 45 f4	 mov	 eax, DWORD PTR __First$[ebp]
  00044	89 45 e4	 mov	 DWORD PTR __UMid$2[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 193  : 	return lhs.m_fTime < rhs;

  00047	8b 45 10	 mov	 eax, DWORD PTR __Val$[ebp]
  0004a	8b 4d e4	 mov	 ecx, DWORD PTR __UMid$2[ebp]
  0004d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00051	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00054	76 09		 jbe	 SHORT $LN23@lower_boun
  00056	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR tv91[ebp], 1
  0005d	eb 04		 jmp	 SHORT $LN24@lower_boun
$LN23@lower_boun:
  0005f	83 65 e8 00	 and	 DWORD PTR tv91[ebp], 0
$LN24@lower_boun:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 5858 :         if (_Pred(*_UMid, _Val)) { // try top half

  00063	0f b6 45 e8	 movzx	 eax, BYTE PTR tv91[ebp]
  00067	85 c0		 test	 eax, eax
  00069	74 23		 je	 SHORT $LN4@lower_boun

; 5859 :             _UFirst = _Next_iter(_UMid);

  0006b	8b 45 e4	 mov	 eax, DWORD PTR __UMid$2[ebp]
  0006e	89 45 f0	 mov	 DWORD PTR __First$[ebp], eax

; 1837 :     return ++_First;

  00071	8b 45 f0	 mov	 eax, DWORD PTR __First$[ebp]
  00074	83 c0 08	 add	 eax, 8
  00077	89 45 f0	 mov	 DWORD PTR __First$[ebp], eax

; 5859 :             _UFirst = _Next_iter(_UMid);

  0007a	8b 45 f0	 mov	 eax, DWORD PTR __First$[ebp]
  0007d	89 45 f8	 mov	 DWORD PTR __UFirst$[ebp], eax

; 5860 :             _Count -= _Count2 + 1;

  00080	8b 45 ec	 mov	 eax, DWORD PTR __Count2$3[ebp]
  00083	40		 inc	 eax
  00084	8b 4d fc	 mov	 ecx, DWORD PTR __Count$[ebp]
  00087	2b c8		 sub	 ecx, eax
  00089	89 4d fc	 mov	 DWORD PTR __Count$[ebp], ecx

; 5861 :         } else {

  0008c	eb 06		 jmp	 SHORT $LN5@lower_boun
$LN4@lower_boun:

; 5862 :             _Count = _Count2;

  0008e	8b 45 ec	 mov	 eax, DWORD PTR __Count2$3[ebp]
  00091	89 45 fc	 mov	 DWORD PTR __Count$[ebp], eax
$LN5@lower_boun:

; 5863 :         }
; 5864 :     }

  00094	eb 88		 jmp	 SHORT $LN2@lower_boun
$LN3@lower_boun:

; 1492 :         _It = static_cast<_UIter&&>(_UIt);

  00096	8b 45 f8	 mov	 eax, DWORD PTR __UFirst$[ebp]
  00099	89 45 08	 mov	 DWORD PTR __First$[ebp], eax

; 5865 : 
; 5866 :     _Seek_wrapped(_First, _UFirst);
; 5867 :     return _First;

  0009c	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]

; 5868 : }

  0009f	c9		 leave
  000a0	c3		 ret	 0
??$lower_bound@PAV?$CTimeEvent@M@@MU?$less@X@std@@@std@@YAPAV?$CTimeEvent@M@@PAV1@QAV1@ABMU?$less@X@0@@Z ENDP ; std::lower_bound<CTimeEvent<float> *,float,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
;	COMDAT ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@MU?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABMU?$less@X@0@@Z
_TEXT	SEGMENT
$T1 = -104						; size = 4
$T2 = -100						; size = 4
__It$ = -96						; size = 4
__UFirst2$3 = -92					; size = 4
__It$ = -88						; size = 4
__ULast2$4 = -84					; size = 4
$T5 = -80						; size = 1
$T6 = -76						; size = 1
__It$ = -72						; size = 4
__It$ = -68						; size = 4
__ULast$ = -64						; size = 4
$T7 = -60						; size = 4
$T8 = -56						; size = 4
__Ptr$9 = -52						; size = 4
$T10 = -48						; size = 4
$T11 = -44						; size = 4
__Ptr$12 = -40						; size = 4
tv182 = -36						; size = 4
tv180 = -32						; size = 4
__First$ = -28						; size = 4
__Count2$13 = -24					; size = 4
__First$ = -20						; size = 4
__First$ = -16						; size = 4
__UMid$14 = -12						; size = 4
__Count$ = -8						; size = 4
__UFirst$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
__Val$ = 20						; size = 4
__Pred$ = 24						; size = 1
??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@MU?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABMU?$less@X@0@@Z PROC ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float,std::less<void> >, COMDAT

; 6812 : _NODISCARD _CONSTEXPR20 pair<_FwdIt, _FwdIt> equal_range(_FwdIt _First, _FwdIt _Last, const _Ty& _Val, _Pr _Pred) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  00006	8b 45 0c	 mov	 eax, DWORD PTR __First$[ebp]
  00009	89 45 d8	 mov	 DWORD PTR __Ptr$12[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  0000c	8b 45 d8	 mov	 eax, DWORD PTR __Ptr$12[ebp]
  0000f	89 45 d4	 mov	 DWORD PTR $T11[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  00012	8b 45 d4	 mov	 eax, DWORD PTR $T11[ebp]
  00015	89 45 d0	 mov	 DWORD PTR $T10[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6815 :     auto _UFirst      = _Get_unwrapped(_First);

  00018	8b 45 d0	 mov	 eax, DWORD PTR $T10[ebp]
  0001b	89 45 fc	 mov	 DWORD PTR __UFirst$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  0001e	8b 45 10	 mov	 eax, DWORD PTR __Last$[ebp]
  00021	89 45 cc	 mov	 DWORD PTR __Ptr$9[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  00024	8b 45 cc	 mov	 eax, DWORD PTR __Ptr$9[ebp]
  00027	89 45 c8	 mov	 DWORD PTR $T8[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 310  :         return _Unfancy(this->_Ptr);

  0002a	8b 45 c8	 mov	 eax, DWORD PTR $T8[ebp]
  0002d	89 45 c4	 mov	 DWORD PTR $T7[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6816 :     const auto _ULast = _Get_unwrapped(_Last);

  00030	8b 45 c4	 mov	 eax, DWORD PTR $T7[ebp]
  00033	89 45 c0	 mov	 DWORD PTR __ULast$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1794 :         return _Last - _First; // assume the iterator will do debug checking

  00036	8b 45 c0	 mov	 eax, DWORD PTR __ULast$[ebp]
  00039	2b 45 fc	 sub	 eax, DWORD PTR __UFirst$[ebp]
  0003c	c1 f8 03	 sar	 eax, 3
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6819 :     _Diff _Count = _STD distance(_UFirst, _ULast);

  0003f	89 45 f8	 mov	 DWORD PTR __Count$[ebp], eax
$LN2@equal_rang:

; 6820 : 
; 6821 :     for (;;) { // divide and conquer, check midpoint
; 6822 :         if (_Count <= 0) {

  00042	83 7d f8 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00046	7f 29		 jg	 SHORT $LN5@equal_rang
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1490 :         _It._Seek_to(static_cast<_UIter&&>(_UIt));

  00048	8b 45 fc	 mov	 eax, DWORD PTR __UFirst$[ebp]
  0004b	89 45 bc	 mov	 DWORD PTR __It$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0004e	ff 75 bc	 push	 DWORD PTR __It$[ebp]
  00051	e8 00 00 00 00	 call	 ??$_Refancy@PAV?$CTimeEvent@M@@$0A@@std@@YAPAV?$CTimeEvent@M@@PAV1@@Z ; std::_Refancy<CTimeEvent<float> *,0>
  00056	59		 pop	 ecx
  00057	89 45 10	 mov	 DWORD PTR __Last$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1490 :         _It._Seek_to(static_cast<_UIter&&>(_UIt));

  0005a	8b 45 fc	 mov	 eax, DWORD PTR __UFirst$[ebp]
  0005d	89 45 b8	 mov	 DWORD PTR __It$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00060	ff 75 b8	 push	 DWORD PTR __It$[ebp]
  00063	e8 00 00 00 00	 call	 ??$_Refancy@PAV?$CTimeEvent@M@@$0A@@std@@YAPAV?$CTimeEvent@M@@PAV1@@Z ; std::_Refancy<CTimeEvent<float> *,0>
  00068	59		 pop	 ecx
  00069	89 45 0c	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6825 :             break;

  0006c	e9 19 01 00 00	 jmp	 $LN3@equal_rang
$LN5@equal_rang:

; 6826 :         }
; 6827 : 
; 6828 :         _Diff _Count2    = _Count / 2;

  00071	8b 45 f8	 mov	 eax, DWORD PTR __Count$[ebp]
  00074	99		 cdq
  00075	2b c2		 sub	 eax, edx
  00077	d1 f8		 sar	 eax, 1
  00079	89 45 e8	 mov	 DWORD PTR __Count2$13[ebp], eax

; 6829 :         const auto _UMid = _STD next(_UFirst, _Count2);

  0007c	8b 45 fc	 mov	 eax, DWORD PTR __UFirst$[ebp]
  0007f	89 45 f0	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1714 :         _Where += _Off;

  00082	8b 45 e8	 mov	 eax, DWORD PTR __Count2$13[ebp]
  00085	8b 4d f0	 mov	 ecx, DWORD PTR __First$[ebp]
  00088	8d 04 c1	 lea	 eax, DWORD PTR [ecx+eax*8]
  0008b	89 45 f0	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6829 :         const auto _UMid = _STD next(_UFirst, _Count2);

  0008e	8b 45 f0	 mov	 eax, DWORD PTR __First$[ebp]
  00091	89 45 f4	 mov	 DWORD PTR __UMid$14[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 193  : 	return lhs.m_fTime < rhs;

  00094	8b 45 14	 mov	 eax, DWORD PTR __Val$[ebp]
  00097	8b 4d f4	 mov	 ecx, DWORD PTR __UMid$14[ebp]
  0009a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0009e	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  000a1	76 09		 jbe	 SHORT $LN49@equal_rang
  000a3	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR tv180[ebp], 1
  000aa	eb 04		 jmp	 SHORT $LN50@equal_rang
$LN49@equal_rang:
  000ac	83 65 e0 00	 and	 DWORD PTR tv180[ebp], 0
$LN50@equal_rang:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6830 :         if (_DEBUG_LT_PRED(_Pred, *_UMid, _Val)) { // range begins above _UMid, loop

  000b0	0f b6 45 e0	 movzx	 eax, BYTE PTR tv180[ebp]
  000b4	85 c0		 test	 eax, eax
  000b6	74 26		 je	 SHORT $LN6@equal_rang

; 6831 :             _UFirst = _Next_iter(_UMid);

  000b8	8b 45 f4	 mov	 eax, DWORD PTR __UMid$14[ebp]
  000bb	89 45 ec	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1837 :     return ++_First;

  000be	8b 45 ec	 mov	 eax, DWORD PTR __First$[ebp]
  000c1	83 c0 08	 add	 eax, 8
  000c4	89 45 ec	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6831 :             _UFirst = _Next_iter(_UMid);

  000c7	8b 45 ec	 mov	 eax, DWORD PTR __First$[ebp]
  000ca	89 45 fc	 mov	 DWORD PTR __UFirst$[ebp], eax

; 6832 :             _Count -= _Count2 + 1;

  000cd	8b 45 e8	 mov	 eax, DWORD PTR __Count2$13[ebp]
  000d0	40		 inc	 eax
  000d1	8b 4d f8	 mov	 ecx, DWORD PTR __Count$[ebp]
  000d4	2b c8		 sub	 ecx, eax
  000d6	89 4d f8	 mov	 DWORD PTR __Count$[ebp], ecx

; 6833 :         } else if (_Pred(_Val, *_UMid)) {

  000d9	e9 a7 00 00 00	 jmp	 $LN9@equal_rang
$LN6@equal_rang:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 199  : 	return lhs < rhs.m_fTime;

  000de	8b 45 f4	 mov	 eax, DWORD PTR __UMid$14[ebp]
  000e1	8b 4d 14	 mov	 ecx, DWORD PTR __Val$[ebp]
  000e4	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000e8	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  000eb	76 09		 jbe	 SHORT $LN57@equal_rang
  000ed	c7 45 dc 01 00
	00 00		 mov	 DWORD PTR tv182[ebp], 1
  000f4	eb 04		 jmp	 SHORT $LN58@equal_rang
$LN57@equal_rang:
  000f6	83 65 dc 00	 and	 DWORD PTR tv182[ebp], 0
$LN58@equal_rang:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6833 :         } else if (_Pred(_Val, *_UMid)) {

  000fa	0f b6 45 dc	 movzx	 eax, BYTE PTR tv182[ebp]
  000fe	85 c0		 test	 eax, eax
  00100	74 08		 je	 SHORT $LN8@equal_rang

; 6834 :             _Count = _Count2; // range in first half, loop

  00102	8b 45 e8	 mov	 eax, DWORD PTR __Count2$13[ebp]
  00105	89 45 f8	 mov	 DWORD PTR __Count$[ebp], eax

; 6835 :         } else { // range straddles _UMid, find each end and return

  00108	eb 7b		 jmp	 SHORT $LN9@equal_rang
$LN8@equal_rang:

; 6836 :             auto _UFirst2 = _STD lower_bound(_UFirst, _UMid, _Val, _Pass_fn(_Pred));

  0010a	8a 45 18	 mov	 al, BYTE PTR __Pred$[ebp]
  0010d	88 45 b4	 mov	 BYTE PTR $T6[ebp], al
  00110	ff 75 b4	 push	 DWORD PTR $T6[ebp]
  00113	ff 75 14	 push	 DWORD PTR __Val$[ebp]
  00116	ff 75 f4	 push	 DWORD PTR __UMid$14[ebp]
  00119	ff 75 fc	 push	 DWORD PTR __UFirst$[ebp]
  0011c	e8 00 00 00 00	 call	 ??$lower_bound@PAV?$CTimeEvent@M@@MU?$less@X@std@@@std@@YAPAV?$CTimeEvent@M@@PAV1@QAV1@ABMU?$less@X@0@@Z ; std::lower_bound<CTimeEvent<float> *,float,std::less<void> >
  00121	83 c4 10	 add	 esp, 16			; 00000010H
  00124	89 45 a4	 mov	 DWORD PTR __UFirst2$3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1714 :         _Where += _Off;

  00127	8b 45 f8	 mov	 eax, DWORD PTR __Count$[ebp]
  0012a	8b 4d fc	 mov	 ecx, DWORD PTR __UFirst$[ebp]
  0012d	8d 04 c1	 lea	 eax, DWORD PTR [ecx+eax*8]
  00130	89 45 fc	 mov	 DWORD PTR __UFirst$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6838 :             auto _ULast2 = _STD upper_bound(_Next_iter(_UMid), _UFirst, _Val, _Pass_fn(_Pred));

  00133	8a 45 18	 mov	 al, BYTE PTR __Pred$[ebp]
  00136	88 45 b0	 mov	 BYTE PTR $T5[ebp], al
  00139	8b 45 f4	 mov	 eax, DWORD PTR __UMid$14[ebp]
  0013c	89 45 e4	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1837 :     return ++_First;

  0013f	8b 45 e4	 mov	 eax, DWORD PTR __First$[ebp]
  00142	83 c0 08	 add	 eax, 8
  00145	89 45 e4	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6838 :             auto _ULast2 = _STD upper_bound(_Next_iter(_UMid), _UFirst, _Val, _Pass_fn(_Pred));

  00148	ff 75 b0	 push	 DWORD PTR $T5[ebp]
  0014b	ff 75 14	 push	 DWORD PTR __Val$[ebp]
  0014e	ff 75 fc	 push	 DWORD PTR __UFirst$[ebp]
  00151	ff 75 e4	 push	 DWORD PTR __First$[ebp]
  00154	e8 00 00 00 00	 call	 ??$upper_bound@PAV?$CTimeEvent@M@@MU?$less@X@std@@@std@@YAPAV?$CTimeEvent@M@@PAV1@0ABMU?$less@X@0@@Z ; std::upper_bound<CTimeEvent<float> *,float,std::less<void> >
  00159	83 c4 10	 add	 esp, 16			; 00000010H
  0015c	89 45 ac	 mov	 DWORD PTR __ULast2$4[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1490 :         _It._Seek_to(static_cast<_UIter&&>(_UIt));

  0015f	8b 45 ac	 mov	 eax, DWORD PTR __ULast2$4[ebp]
  00162	89 45 a8	 mov	 DWORD PTR __It$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00165	ff 75 a8	 push	 DWORD PTR __It$[ebp]
  00168	e8 00 00 00 00	 call	 ??$_Refancy@PAV?$CTimeEvent@M@@$0A@@std@@YAPAV?$CTimeEvent@M@@PAV1@@Z ; std::_Refancy<CTimeEvent<float> *,0>
  0016d	59		 pop	 ecx
  0016e	89 45 10	 mov	 DWORD PTR __Last$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xutility

; 1490 :         _It._Seek_to(static_cast<_UIter&&>(_UIt));

  00171	8b 45 a4	 mov	 eax, DWORD PTR __UFirst2$3[ebp]
  00174	89 45 a0	 mov	 DWORD PTR __It$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 195  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  00177	ff 75 a0	 push	 DWORD PTR __It$[ebp]
  0017a	e8 00 00 00 00	 call	 ??$_Refancy@PAV?$CTimeEvent@M@@$0A@@std@@YAPAV?$CTimeEvent@M@@PAV1@@Z ; std::_Refancy<CTimeEvent<float> *,0>
  0017f	59		 pop	 ecx
  00180	89 45 0c	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6841 :             break;

  00183	eb 05		 jmp	 SHORT $LN3@equal_rang
$LN9@equal_rang:

; 6842 :         }
; 6843 :     }

  00185	e9 b8 fe ff ff	 jmp	 $LN2@equal_rang
$LN3@equal_rang:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits

; 1443 :     return static_cast<_Ty&&>(_Arg);

  0018a	8d 45 0c	 lea	 eax, DWORD PTR __First$[ebp]
  0018d	89 45 9c	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  00190	8b 45 9c	 mov	 eax, DWORD PTR $T2[ebp]
  00193	8b 00		 mov	 eax, DWORD PTR [eax]
  00195	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00198	89 01		 mov	 DWORD PTR [ecx], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\type_traits

; 1443 :     return static_cast<_Ty&&>(_Arg);

  0019a	8d 45 10	 lea	 eax, DWORD PTR __Last$[ebp]
  0019d	89 45 98	 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\utility

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

  001a0	8b 45 98	 mov	 eax, DWORD PTR $T1[ebp]
  001a3	8b 00		 mov	 eax, DWORD PTR [eax]
  001a5	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  001a8	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6845 :     return {_First, _Last};

  001ab	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 6846 : }

  001ae	c9		 leave
  001af	c3		 ret	 0
??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@MU?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABMU?$less@X@0@@Z ENDP ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z PROC ; std::_Const_cast<CTimeEvent<float> const >, COMDAT

; 292  : auto _Const_cast(_Ty* _Ptr) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 293  :     return const_cast<remove_const_t<_Ty>*>(_Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 294  : }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ENDP ; std::_Const_cast<CTimeEvent<float> const >
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >, COMDAT
; _this$ = ecx

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __Parg$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx

; 43   :         this->_Adopt(_Pvector);
; 44   :     }

  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	c9		 leave
  00013	c2 08 00	 ret	 8
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@YAXPAV?$CTimeEvent@M@@QAV1@AAV?$allocator@V?$CTimeEvent@M@@@0@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@YAXPAV?$CTimeEvent@M@@QAV1@AAV?$allocator@V?$CTimeEvent@M@@@0@@Z PROC ; std::_Destroy_range<std::allocator<CTimeEvent<float> > >, COMDAT

; 962  :     _Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 963  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 964  :     using _Ty = typename _Alloc::value_type;
; 965  :     if _CONSTEXPR_IF (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 966  :         for (; _First != _Last; ++_First) {

  00004	eb 09		 jmp	 SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
  00006	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00009	83 c0 08	 add	 eax, 8
  0000c	89 45 08	 mov	 DWORD PTR __First$[ebp], eax
$LN4@Destroy_ra:
  0000f	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00012	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  00015	74 1b		 je	 SHORT $LN5@Destroy_ra
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 289  :     return _Ptr;

  00017	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0001a	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  0001d	33 c0		 xor	 eax, eax
  0001f	83 e0 01	 and	 eax, 1
  00022	74 0c		 je	 SHORT $LN9@Destroy_ra
  00024	6a 08		 push	 8
  00026	ff 75 fc	 push	 DWORD PTR $T1[ebp]
  00029	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0002e	59		 pop	 ecx
  0002f	59		 pop	 ecx
$LN9@Destroy_ra:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 968  :         }

  00030	eb d4		 jmp	 SHORT $LN2@Destroy_ra
$LN5@Destroy_ra:

; 969  :     }
; 970  : }

  00032	c9		 leave
  00033	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@YAXPAV?$CTimeEvent@M@@QAV1@AAV?$allocator@V?$CTimeEvent@M@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<CTimeEvent<float> > >
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_GCEmitterProperty@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCEmitterProperty@@UAEPAXI@Z PROC			; CEmitterProperty::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CEmitterProperty@@UAE@XZ ; CEmitterProperty::~CEmitterProperty
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0f		 je	 SHORT $LN2@scalar
  00017	68 b0 00 00 00	 push	 176			; 000000b0H
  0001c	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00024	59		 pop	 ecx
  00025	59		 pop	 ecx
$LN2@scalar:
  00026	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00029	c9		 leave
  0002a	c2 04 00	 ret	 4
??_GCEmitterProperty@@UAEPAXI@Z ENDP			; CEmitterProperty::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?_Tidy@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
$T1 = -52						; size = 4
__Ptr$ = -48						; size = 4
__Count$ = -44						; size = 4
$T2 = -40						; size = 4
__First$ = -36						; size = 4
__Last$ = -32						; size = 4
$T3 = -28						; size = 4
$T4 = -24						; size = 4
__Myend$ = -20						; size = 4
__Mylast$ = -16						; size = 4
_this$ = -12						; size = 4
__My_data$ = -8						; size = 4
__Myfirst$ = -4						; size = 4
?_Tidy@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEXXZ PROC ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Tidy, COMDAT
; _this$ = ecx

; 1686 :     void _Tidy() noexcept { // free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1687 :         auto& _My_data    = _Mypair._Myval2;

  00009	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 f8	 mov	 DWORD PTR __My_data$[ebp], eax

; 1688 :         pointer& _Myfirst = _My_data._Myfirst;

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00012	89 45 fc	 mov	 DWORD PTR __Myfirst$[ebp], eax

; 1689 :         pointer& _Mylast  = _My_data._Mylast;

  00015	8b 45 f8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00018	83 c0 04	 add	 eax, 4
  0001b	89 45 f0	 mov	 DWORD PTR __Mylast$[ebp], eax

; 1690 :         pointer& _Myend   = _My_data._Myend;

  0001e	8b 45 f8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00021	83 c0 08	 add	 eax, 8
  00024	89 45 ec	 mov	 DWORD PTR __Myend$[ebp], eax

; 1691 : 
; 1692 :         _My_data._Orphan_all();
; 1693 : 
; 1694 :         if (_Myfirst) { // destroy and deallocate old array

  00027	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0002a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0002d	74 74		 je	 SHORT $LN3@Tidy

; 1695 :             _Destroy(_Myfirst, _Mylast);

  0002f	8b 45 f0	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00032	8b 00		 mov	 eax, DWORD PTR [eax]
  00034	89 45 e0	 mov	 DWORD PTR __Last$[ebp], eax
  00037	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0003a	8b 00		 mov	 eax, DWORD PTR [eax]
  0003c	89 45 dc	 mov	 DWORD PTR __First$[ebp], eax

; 1733 :         return _Mypair._Get_first();

  0003f	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  00042	89 45 e8	 mov	 DWORD PTR $T4[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  00045	8b 45 e8	 mov	 eax, DWORD PTR $T4[ebp]
  00048	89 45 e4	 mov	 DWORD PTR $T3[ebp], eax

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0004b	ff 75 e4	 push	 DWORD PTR $T3[ebp]
  0004e	ff 75 e0	 push	 DWORD PTR __Last$[ebp]
  00051	ff 75 dc	 push	 DWORD PTR __First$[ebp]
  00054	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@YAXPAV?$CTimeEvent@M@@QAV1@AAV?$allocator@V?$CTimeEvent@M@@@0@@Z ; std::_Destroy_range<std::allocator<CTimeEvent<float> > >
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1733 :         return _Mypair._Get_first();

  0005c	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  0005f	89 45 d8	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  00062	8b 45 d8	 mov	 eax, DWORD PTR $T2[ebp]
  00065	89 45 cc	 mov	 DWORD PTR $T1[ebp], eax

; 1696 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00068	8b 45 ec	 mov	 eax, DWORD PTR __Myend$[ebp]
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR __Myfirst$[ebp]
  0006e	8b 00		 mov	 eax, DWORD PTR [eax]
  00070	2b 01		 sub	 eax, DWORD PTR [ecx]
  00072	c1 f8 03	 sar	 eax, 3
  00075	89 45 d4	 mov	 DWORD PTR __Count$[ebp], eax
  00078	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  0007b	8b 00		 mov	 eax, DWORD PTR [eax]
  0007d	89 45 d0	 mov	 DWORD PTR __Ptr$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 810  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00080	8b 45 d4	 mov	 eax, DWORD PTR __Count$[ebp]
  00083	c1 e0 03	 shl	 eax, 3
  00086	50		 push	 eax
  00087	ff 75 d0	 push	 DWORD PTR __Ptr$[ebp]
  0008a	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  0008f	59		 pop	 ecx
  00090	59		 pop	 ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1698 :             _Myfirst = pointer();

  00091	8b 45 fc	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  00094	83 20 00	 and	 DWORD PTR [eax], 0

; 1699 :             _Mylast  = pointer();

  00097	8b 45 f0	 mov	 eax, DWORD PTR __Mylast$[ebp]
  0009a	83 20 00	 and	 DWORD PTR [eax], 0

; 1700 :             _Myend   = pointer();

  0009d	8b 45 ec	 mov	 eax, DWORD PTR __Myend$[ebp]
  000a0	83 20 00	 and	 DWORD PTR [eax], 0
$LN3@Tidy:

; 1701 :         }
; 1702 :     }

  000a3	c9		 leave
  000a4	c3		 ret	 0
?_Tidy@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEXXZ ENDP ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ?clear@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__First$ = -32						; size = 4
__Last$ = -28						; size = 4
$T1 = -24						; size = 4
$T2 = -20						; size = 4
__Myfirst$ = -16					; size = 4
__Mylast$ = -12						; size = 4
_this$ = -8						; size = 4
__My_data$ = -4						; size = 4
?clear@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXXZ PROC ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::clear, COMDAT
; _this$ = ecx

; 1383 :     void clear() noexcept { // erase all

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1384 :         auto& _My_data    = _Mypair._Myval2;

  00009	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	89 45 fc	 mov	 DWORD PTR __My_data$[ebp], eax

; 1385 :         pointer& _Myfirst = _My_data._Myfirst;

  0000f	8b 45 fc	 mov	 eax, DWORD PTR __My_data$[ebp]
  00012	89 45 f0	 mov	 DWORD PTR __Myfirst$[ebp], eax

; 1386 :         pointer& _Mylast  = _My_data._Mylast;

  00015	8b 45 fc	 mov	 eax, DWORD PTR __My_data$[ebp]
  00018	83 c0 04	 add	 eax, 4
  0001b	89 45 f4	 mov	 DWORD PTR __Mylast$[ebp], eax

; 1387 : 
; 1388 :         _My_data._Orphan_all();
; 1389 :         _Destroy(_Myfirst, _Mylast);

  0001e	8b 45 f4	 mov	 eax, DWORD PTR __Mylast$[ebp]
  00021	8b 00		 mov	 eax, DWORD PTR [eax]
  00023	89 45 e4	 mov	 DWORD PTR __Last$[ebp], eax
  00026	8b 45 f0	 mov	 eax, DWORD PTR __Myfirst$[ebp]
  00029	8b 00		 mov	 eax, DWORD PTR [eax]
  0002b	89 45 e0	 mov	 DWORD PTR __First$[ebp], eax

; 1733 :         return _Mypair._Get_first();

  0002e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1347 :         return *this;

  00031	89 45 ec	 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1733 :         return _Mypair._Get_first();

  00034	8b 45 ec	 mov	 eax, DWORD PTR $T2[ebp]
  00037	89 45 e8	 mov	 DWORD PTR $T1[ebp], eax

; 1612 :         _Destroy_range(_First, _Last, _Getal());

  0003a	ff 75 e8	 push	 DWORD PTR $T1[ebp]
  0003d	ff 75 e4	 push	 DWORD PTR __Last$[ebp]
  00040	ff 75 e0	 push	 DWORD PTR __First$[ebp]
  00043	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@YAXPAV?$CTimeEvent@M@@QAV1@AAV?$allocator@V?$CTimeEvent@M@@@0@@Z ; std::_Destroy_range<std::allocator<CTimeEvent<float> > >
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1390 :         _Mylast = _Myfirst;

  0004b	8b 45 f4	 mov	 eax, DWORD PTR __Mylast$[ebp]
  0004e	8b 4d f0	 mov	 ecx, DWORD PTR __Myfirst$[ebp]
  00051	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00053	89 08		 mov	 DWORD PTR [eax], ecx

; 1391 :     }

  00055	c9		 leave
  00056	c3		 ret	 0
?clear@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXXZ ENDP ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::clear
_TEXT	ENDS
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
;	COMDAT ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ PROC ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >, COMDAT
; _this$ = ecx

; 672  :     ~vector() noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 673  :         _Tidy();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Tidy

; 674  : #if _ITERATOR_DEBUG_LEVEL != 0
; 675  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 676  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 677  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 678  :     }

  0000f	c9		 leave
  00010	c3		 ret	 0
??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ENDP ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
;	COMDAT ?GetParticleSizeY@CEmitterProperty@@QAEXMPAM@Z
_TEXT	SEGMENT
$T1 = -140						; size = 4
$T2 = -136						; size = 4
$T3 = -132						; size = 4
$T4 = -128						; size = 4
_Head$5 = -124						; size = 4
$T6 = -120						; size = 4
$T7 = -116						; size = 4
$T8 = -112						; size = 4
$T9 = -108						; size = 4
$T10 = -104						; size = 4
$T11 = -100						; size = 4
$T12 = -96						; size = 4
$T13 = -92						; size = 4
$T14 = -88						; size = 4
$T15 = -84						; size = 4
$T16 = -80						; size = 4
_this$ = -76						; size = 4
$T17 = -72						; size = 4
__First$ = -68						; size = 4
__Last$ = -64						; size = 4
$T18 = -60						; size = 1
$T19 = -56						; size = 4
$T20 = -52						; size = 4
$T21 = -48						; size = 4
___param0$22 = -44					; size = 4
$T23 = -40						; size = 4
___param0$24 = -36					; size = 4
$T25 = -32						; size = 4
__My_data$26 = -28					; size = 4
$T27 = -24						; size = 4
__My_data$28 = -20					; size = 4
$T29 = -16						; size = 4
__My_data$30 = -12					; size = 4
$T31 = -8						; size = 4
__My_data$32 = -4					; size = 4
$T33 = 0						; size = 4
__My_data$34 = 4					; size = 4
$T35 = 8						; size = 4
$T36 = 12						; size = 4
$T37 = 16						; size = 4
$T38 = 20						; size = 4
$T39 = 24						; size = 4
$T40 = 28						; size = 4
___param0$41 = 32					; size = 4
$T42 = 36						; size = 4
$T43 = 40						; size = 4
___param0$44 = 44					; size = 4
$T45 = 48						; size = 4
tv330 = 52						; size = 4
tv338 = 56						; size = 4
__My_data$46 = 60					; size = 4
__My_data$47 = 64					; size = 4
tv238 = 68						; size = 4
__My_data$48 = 72					; size = 4
__My_data$49 = 76					; size = 4
tv200 = 80						; size = 4
__My_data$50 = 84					; size = 4
__Tmp$51 = 88						; size = 4
_fElapsedTime$ = 92					; size = 4
_result$52 = 96						; size = 8
$T53 = 104						; size = 1
$T54 = 105						; size = 1
$T55 = 106						; size = 1
$T56 = 107						; size = 1
_rVector$ = 108						; size = 4
_fTime$ = 120						; size = 4
_pfValue$ = 124						; size = 4
?GetParticleSizeY@CEmitterProperty@@QAEXMPAM@Z PROC	; CEmitterProperty::GetParticleSizeY, COMDAT
; _this$ = ecx

; 63   : {

  00000	55		 push	 ebp
  00001	8d 6c 24 90	 lea	 ebp, DWORD PTR [esp-112]
  00005	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  0000b	89 4d b4	 mov	 DWORD PTR _this$[ebp], ecx

; 64   : 	//GetTimeEventBlendValue<TTimeEventTableFloat, float>(fTime, m_TimeEventSizeY, pfValue);
; 65   : 	GetTimeEventBlendValue(fTime, m_TimeEventSizeY, pfValue);

  0000e	8b 45 b4	 mov	 eax, DWORD PTR _this$[ebp]
  00011	05 a4 00 00 00	 add	 eax, 164		; 000000a4H
  00016	89 45 6c	 mov	 DWORD PTR _rVector$[ebp], eax
  00019	f3 0f 10 45 78	 movss	 xmm0, DWORD PTR _fTime$[ebp]
  0001e	f3 0f 11 45 5c	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1478 :         auto& _My_data = _Mypair._Myval2;

  00023	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00026	89 45 54	 mov	 DWORD PTR __My_data$50[ebp], eax

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00029	8b 45 54	 mov	 eax, DWORD PTR __My_data$50[ebp]
  0002c	8b 4d 54	 mov	 ecx, DWORD PTR __My_data$50[ebp]
  0002f	8b 00		 mov	 eax, DWORD PTR [eax]
  00031	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00034	75 09		 jne	 SHORT $LN13@GetParticl
  00036	c7 45 50 01 00
	00 00		 mov	 DWORD PTR tv200[ebp], 1
  0003d	eb 04		 jmp	 SHORT $LN14@GetParticl
$LN13@GetParticl:
  0003f	83 65 50 00	 and	 DWORD PTR tv200[ebp], 0
$LN14@GetParticl:
  00043	8a 45 50	 mov	 al, BYTE PTR tv200[ebp]
  00046	88 45 6b	 mov	 BYTE PTR $T56[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 229  : 	if (rVector.empty())

  00049	0f b6 45 6b	 movzx	 eax, BYTE PTR $T56[ebp]
  0004d	85 c0		 test	 eax, eax
  0004f	74 0f		 je	 SHORT $LN4@GetParticl

; 230  : 	{
; 231  : 		*pReturnValue = T();

  00051	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00054	0f 57 c0	 xorps	 xmm0, xmm0
  00057	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 232  : 		return;

  0005b	e9 d5 02 00 00	 jmp	 $LN3@GetParticl
$LN4@GetParticl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  00060	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00063	89 45 4c	 mov	 DWORD PTR __My_data$49[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00066	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  00069	89 45 30	 mov	 DWORD PTR $T45[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  0006c	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  0006f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00072	89 45 2c	 mov	 DWORD PTR ___param0$44[ebp], eax
  00075	ff 75 30	 push	 DWORD PTR $T45[ebp]
  00078	ff 75 2c	 push	 DWORD PTR ___param0$44[ebp]
  0007b	8d 4d 28	 lea	 ecx, DWORD PTR $T43[ebp]
  0007e	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  00083	8d 45 28	 lea	 eax, DWORD PTR $T43[ebp]
  00086	89 45 08	 mov	 DWORD PTR $T35[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  00089	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0008c	89 45 48	 mov	 DWORD PTR __My_data$48[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  0008f	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00092	89 45 24	 mov	 DWORD PTR $T42[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00095	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00098	8b 00		 mov	 eax, DWORD PTR [eax]
  0009a	89 45 20	 mov	 DWORD PTR ___param0$41[ebp], eax
  0009d	ff 75 24	 push	 DWORD PTR $T42[ebp]
  000a0	ff 75 20	 push	 DWORD PTR ___param0$41[ebp]
  000a3	8d 4d 1c	 lea	 ecx, DWORD PTR $T40[ebp]
  000a6	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  000ab	8d 45 1c	 lea	 eax, DWORD PTR $T40[ebp]
  000ae	89 45 18	 mov	 DWORD PTR $T39[ebp], eax

; 287  :         _Vector_iterator _Tmp = *this;

  000b1	8b 45 18	 mov	 eax, DWORD PTR $T39[ebp]
  000b4	8b 00		 mov	 eax, DWORD PTR [eax]
  000b6	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 120  :         _Ptr += _Off;

  000b9	33 c0		 xor	 eax, eax
  000bb	40		 inc	 eax
  000bc	c1 e0 03	 shl	 eax, 3
  000bf	03 45 58	 add	 eax, DWORD PTR __Tmp$51[ebp]
  000c2	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 283  :         return *this;

  000c5	8d 45 58	 lea	 eax, DWORD PTR __Tmp$51[ebp]
  000c8	89 45 14	 mov	 DWORD PTR $T38[ebp], eax

; 288  :         return _Tmp += _Off;

  000cb	8b 45 14	 mov	 eax, DWORD PTR $T38[ebp]
  000ce	8b 00		 mov	 eax, DWORD PTR [eax]
  000d0	89 45 10	 mov	 DWORD PTR $T37[ebp], eax
  000d3	8d 45 10	 lea	 eax, DWORD PTR $T37[ebp]
  000d6	89 45 0c	 mov	 DWORD PTR $T36[ebp], eax

; 149  :         return _Ptr == _Right._Ptr;

  000d9	8b 45 0c	 mov	 eax, DWORD PTR $T36[ebp]
  000dc	8b 4d 08	 mov	 ecx, DWORD PTR $T35[ebp]
  000df	8b 00		 mov	 eax, DWORD PTR [eax]
  000e1	3b 01		 cmp	 eax, DWORD PTR [ecx]
  000e3	75 09		 jne	 SHORT $LN48@GetParticl
  000e5	c7 45 44 01 00
	00 00		 mov	 DWORD PTR tv238[ebp], 1
  000ec	eb 04		 jmp	 SHORT $LN49@GetParticl
$LN48@GetParticl:
  000ee	83 65 44 00	 and	 DWORD PTR tv238[ebp], 0
$LN49@GetParticl:
  000f2	8a 45 44	 mov	 al, BYTE PTR tv238[ebp]
  000f5	88 45 6a	 mov	 BYTE PTR $T55[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 235  : 	if(rVector.begin()+1==rVector.end())

  000f8	0f b6 45 6a	 movzx	 eax, BYTE PTR $T55[ebp]
  000fc	85 c0		 test	 eax, eax
  000fe	74 1e		 je	 SHORT $LN5@GetParticl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  00100	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00103	89 45 04	 mov	 DWORD PTR __My_data$34[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00106	8b 45 04	 mov	 eax, DWORD PTR __My_data$34[ebp]
  00109	8b 00		 mov	 eax, DWORD PTR [eax]
  0010b	89 45 00	 mov	 DWORD PTR $T33[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 237  : 		*pReturnValue = rVector.front().m_Value;

  0010e	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00111	8b 4d 00	 mov	 ecx, DWORD PTR $T33[ebp]
  00114	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00117	89 08		 mov	 DWORD PTR [eax], ecx

; 238  : 		return;

  00119	e9 17 02 00 00	 jmp	 $LN3@GetParticl
$LN5@GetParticl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  0011e	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00121	89 45 fc	 mov	 DWORD PTR __My_data$32[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00124	8b 45 fc	 mov	 eax, DWORD PTR __My_data$32[ebp]
  00127	8b 00		 mov	 eax, DWORD PTR [eax]
  00129	89 45 f8	 mov	 DWORD PTR $T31[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 241  : 	if (fElapsedTime < rVector.front().m_fTime)

  0012c	8b 45 f8	 mov	 eax, DWORD PTR $T31[ebp]
  0012f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00133	0f 2f 45 5c	 comiss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00137	76 1e		 jbe	 SHORT $LN6@GetParticl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  00139	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0013c	89 45 f4	 mov	 DWORD PTR __My_data$30[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  0013f	8b 45 f4	 mov	 eax, DWORD PTR __My_data$30[ebp]
  00142	8b 00		 mov	 eax, DWORD PTR [eax]
  00144	89 45 f0	 mov	 DWORD PTR $T29[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 243  : 		*pReturnValue = rVector.front().m_Value;

  00147	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0014a	8b 4d f0	 mov	 ecx, DWORD PTR $T29[ebp]
  0014d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00150	89 08		 mov	 DWORD PTR [eax], ecx

; 244  : 		return;

  00152	e9 de 01 00 00	 jmp	 $LN3@GetParticl
$LN6@GetParticl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00157	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0015a	89 45 ec	 mov	 DWORD PTR __My_data$28[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0015d	6a 08		 push	 8
  0015f	58		 pop	 eax
  00160	6b c0 ff	 imul	 eax, eax, -1
  00163	8b 4d ec	 mov	 ecx, DWORD PTR __My_data$28[ebp]
  00166	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00169	89 45 e8	 mov	 DWORD PTR $T27[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 247  : 	if (fElapsedTime > rVector.back().m_fTime)

  0016c	8b 45 e8	 mov	 eax, DWORD PTR $T27[ebp]
  0016f	f3 0f 10 45 5c	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00174	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00177	76 25		 jbe	 SHORT $LN7@GetParticl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00179	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0017c	89 45 e4	 mov	 DWORD PTR __My_data$26[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0017f	6a 08		 push	 8
  00181	58		 pop	 eax
  00182	6b c0 ff	 imul	 eax, eax, -1
  00185	8b 4d e4	 mov	 ecx, DWORD PTR __My_data$26[ebp]
  00188	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  0018b	89 45 e0	 mov	 DWORD PTR $T25[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 249  : 		*pReturnValue = rVector.back().m_Value;

  0018e	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00191	8b 4d e0	 mov	 ecx, DWORD PTR $T25[ebp]
  00194	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00197	89 08		 mov	 DWORD PTR [eax], ecx

; 250  : 		return;

  00199	e9 97 01 00 00	 jmp	 $LN3@GetParticl
$LN7@GetParticl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  0019e	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  001a1	89 45 40	 mov	 DWORD PTR __My_data$47[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001a4	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001a7	89 85 74 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001ad	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001b0	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001b3	89 45 dc	 mov	 DWORD PTR ___param0$24[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001b6	8b 45 dc	 mov	 eax, DWORD PTR ___param0$24[ebp]
  001b9	89 45 d8	 mov	 DWORD PTR $T23[ebp], eax

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001bc	8d 45 d8	 lea	 eax, DWORD PTR $T23[ebp]
  001bf	89 45 cc	 mov	 DWORD PTR $T20[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  001c2	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  001c5	89 45 3c	 mov	 DWORD PTR __My_data$46[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001c8	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001cb	89 85 78 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001d1	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001d4	8b 00		 mov	 eax, DWORD PTR [eax]
  001d6	89 45 d4	 mov	 DWORD PTR ___param0$22[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001d9	8b 45 d4	 mov	 eax, DWORD PTR ___param0$22[ebp]
  001dc	89 45 d0	 mov	 DWORD PTR $T21[ebp], eax

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001df	8d 45 d0	 lea	 eax, DWORD PTR $T21[ebp]
  001e2	89 45 c8	 mov	 DWORD PTR $T19[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 255  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  001e5	8b 45 cc	 mov	 eax, DWORD PTR $T20[ebp]
  001e8	8b 00		 mov	 eax, DWORD PTR [eax]
  001ea	89 45 c0	 mov	 DWORD PTR __Last$[ebp], eax
  001ed	8b 45 c8	 mov	 eax, DWORD PTR $T19[ebp]
  001f0	8b 00		 mov	 eax, DWORD PTR [eax]
  001f2	89 45 bc	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6851 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  001f5	33 c0		 xor	 eax, eax
  001f7	88 45 c4	 mov	 BYTE PTR $T18[ebp], al
  001fa	ff 75 c4	 push	 DWORD PTR $T18[ebp]
  001fd	8d 45 5c	 lea	 eax, DWORD PTR _fElapsedTime$[ebp]
  00200	50		 push	 eax
  00201	ff 75 c0	 push	 DWORD PTR __Last$[ebp]
  00204	ff 75 bc	 push	 DWORD PTR __First$[ebp]
  00207	8d 45 60	 lea	 eax, DWORD PTR _result$52[ebp]
  0020a	50		 push	 eax
  0020b	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@MU?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABMU?$less@X@0@@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float,std::less<void> >
  00210	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  00213	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00216	3b 45 64	 cmp	 eax, DWORD PTR _result$52[ebp+4]
  00219	75 09		 jne	 SHORT $LN108@GetParticl
  0021b	c7 45 38 01 00
	00 00		 mov	 DWORD PTR tv338[ebp], 1
  00222	eb 04		 jmp	 SHORT $LN109@GetParticl
$LN108@GetParticl:
  00224	83 65 38 00	 and	 DWORD PTR tv338[ebp], 0
$LN109@GetParticl:
  00228	8a 45 38	 mov	 al, BYTE PTR tv338[ebp]
  0022b	88 45 69	 mov	 BYTE PTR $T54[ebp], al

; 153  :         return !(*this == _Right);

  0022e	0f b6 45 69	 movzx	 eax, BYTE PTR $T54[ebp]
  00232	85 c0		 test	 eax, eax
  00234	75 09		 jne	 SHORT $LN103@GetParticl
  00236	c7 45 34 01 00
	00 00		 mov	 DWORD PTR tv330[ebp], 1
  0023d	eb 04		 jmp	 SHORT $LN104@GetParticl
$LN103@GetParticl:
  0023f	83 65 34 00	 and	 DWORD PTR tv330[ebp], 0
$LN104@GetParticl:
  00243	8a 45 34	 mov	 al, BYTE PTR tv330[ebp]
  00246	88 45 68	 mov	 BYTE PTR $T53[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 257  : 	if (result.first != result.second)

  00249	0f b6 45 68	 movzx	 eax, BYTE PTR $T53[ebp]
  0024d	85 c0		 test	 eax, eax
  0024f	74 22		 je	 SHORT $LN8@GetParticl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  00251	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00254	89 45 b8	 mov	 DWORD PTR $T17[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00257	ff 75 b8	 push	 DWORD PTR $T17[ebp]
  0025a	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0025f	59		 pop	 ecx
  00260	89 45 94	 mov	 DWORD PTR $T9[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 258  : 		*pReturnValue = result.first->m_Value;

  00263	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00266	8b 4d 94	 mov	 ecx, DWORD PTR $T9[ebp]
  00269	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0026c	89 08		 mov	 DWORD PTR [eax], ecx
  0026e	e9 c2 00 00 00	 jmp	 $LN9@GetParticl
$LN8@GetParticl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 92   :         --_Ptr;

  00273	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00276	83 e8 08	 sub	 eax, 8
  00279	89 45 60	 mov	 DWORD PTR _result$52[ebp], eax

; 65   :         return _Ptr;

  0027c	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  0027f	89 45 b0	 mov	 DWORD PTR $T16[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00282	ff 75 b0	 push	 DWORD PTR $T16[ebp]
  00285	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0028a	59		 pop	 ecx
  0028b	89 45 a4	 mov	 DWORD PTR $T13[ebp], eax

; 65   :         return _Ptr;

  0028e	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  00291	89 45 ac	 mov	 DWORD PTR $T15[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00294	ff 75 ac	 push	 DWORD PTR $T15[ebp]
  00297	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0029c	59		 pop	 ecx
  0029d	89 45 a0	 mov	 DWORD PTR $T12[ebp], eax

; 65   :         return _Ptr;

  002a0	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002a3	89 45 a8	 mov	 DWORD PTR $T14[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002a6	ff 75 a8	 push	 DWORD PTR $T14[ebp]
  002a9	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002ae	59		 pop	 ecx
  002af	89 45 9c	 mov	 DWORD PTR $T11[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  002b2	8b 45 a4	 mov	 eax, DWORD PTR $T13[ebp]
  002b5	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002b9	f3 0f 5c 45 5c	 subss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  002be	8b 45 a0	 mov	 eax, DWORD PTR $T12[ebp]
  002c1	8b 4d 9c	 mov	 ecx, DWORD PTR $T11[ebp]
  002c4	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  002c8	f3 0f 5c 09	 subss	 xmm1, DWORD PTR [ecx]
  002cc	f3 0f 5e c1	 divss	 xmm0, xmm1
  002d0	f3 0f 11 45 84	 movss	 DWORD PTR _Head$5[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  002d5	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002d8	89 45 98	 mov	 DWORD PTR $T10[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002db	ff 75 98	 push	 DWORD PTR $T10[ebp]
  002de	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002e3	59		 pop	 ecx
  002e4	89 45 8c	 mov	 DWORD PTR $T7[ebp], eax

; 65   :         return _Ptr;

  002e7	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  002ea	89 85 7c ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002f0	ff b5 7c ff ff
	ff		 push	 DWORD PTR $T3[ebp]
  002f6	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002fb	59		 pop	 ecx
  002fc	89 45 88	 mov	 DWORD PTR $T6[ebp], eax

; 65   :         return _Ptr;

  002ff	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  00302	89 45 90	 mov	 DWORD PTR $T8[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00305	ff 75 90	 push	 DWORD PTR $T8[ebp]
  00308	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0030d	59		 pop	 ecx
  0030e	89 45 80	 mov	 DWORD PTR $T4[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 263  : 		*pReturnValue = T((result.first->m_Value-result.second->m_Value)*Head+(result.second->m_Value));

  00311	8b 45 8c	 mov	 eax, DWORD PTR $T7[ebp]
  00314	8b 4d 88	 mov	 ecx, DWORD PTR $T6[ebp]
  00317	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0031c	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00321	f3 0f 59 45 84	 mulss	 xmm0, DWORD PTR _Head$5[ebp]
  00326	8b 45 80	 mov	 eax, DWORD PTR $T4[ebp]
  00329	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  0032e	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00331	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN9@GetParticl:
$LN3@GetParticl:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 66   : }

  00335	83 c5 70	 add	 ebp, 112		; 00000070H
  00338	c9		 leave
  00339	c2 08 00	 ret	 8
?GetParticleSizeY@CEmitterProperty@@QAEXMPAM@Z ENDP	; CEmitterProperty::GetParticleSizeY
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
;	COMDAT ?GetParticleSizeX@CEmitterProperty@@QAEXMPAM@Z
_TEXT	SEGMENT
$T1 = -140						; size = 4
$T2 = -136						; size = 4
$T3 = -132						; size = 4
$T4 = -128						; size = 4
_Head$5 = -124						; size = 4
$T6 = -120						; size = 4
$T7 = -116						; size = 4
$T8 = -112						; size = 4
$T9 = -108						; size = 4
$T10 = -104						; size = 4
$T11 = -100						; size = 4
$T12 = -96						; size = 4
$T13 = -92						; size = 4
$T14 = -88						; size = 4
$T15 = -84						; size = 4
$T16 = -80						; size = 4
_this$ = -76						; size = 4
$T17 = -72						; size = 4
__First$ = -68						; size = 4
__Last$ = -64						; size = 4
$T18 = -60						; size = 1
$T19 = -56						; size = 4
$T20 = -52						; size = 4
$T21 = -48						; size = 4
___param0$22 = -44					; size = 4
$T23 = -40						; size = 4
___param0$24 = -36					; size = 4
$T25 = -32						; size = 4
__My_data$26 = -28					; size = 4
$T27 = -24						; size = 4
__My_data$28 = -20					; size = 4
$T29 = -16						; size = 4
__My_data$30 = -12					; size = 4
$T31 = -8						; size = 4
__My_data$32 = -4					; size = 4
$T33 = 0						; size = 4
__My_data$34 = 4					; size = 4
$T35 = 8						; size = 4
$T36 = 12						; size = 4
$T37 = 16						; size = 4
$T38 = 20						; size = 4
$T39 = 24						; size = 4
$T40 = 28						; size = 4
___param0$41 = 32					; size = 4
$T42 = 36						; size = 4
$T43 = 40						; size = 4
___param0$44 = 44					; size = 4
$T45 = 48						; size = 4
tv330 = 52						; size = 4
tv338 = 56						; size = 4
__My_data$46 = 60					; size = 4
__My_data$47 = 64					; size = 4
tv238 = 68						; size = 4
__My_data$48 = 72					; size = 4
__My_data$49 = 76					; size = 4
tv200 = 80						; size = 4
__My_data$50 = 84					; size = 4
__Tmp$51 = 88						; size = 4
_fElapsedTime$ = 92					; size = 4
_result$52 = 96						; size = 8
$T53 = 104						; size = 1
$T54 = 105						; size = 1
$T55 = 106						; size = 1
$T56 = 107						; size = 1
_rVector$ = 108						; size = 4
_fTime$ = 120						; size = 4
_pfValue$ = 124						; size = 4
?GetParticleSizeX@CEmitterProperty@@QAEXMPAM@Z PROC	; CEmitterProperty::GetParticleSizeX, COMDAT
; _this$ = ecx

; 58   : {

  00000	55		 push	 ebp
  00001	8d 6c 24 90	 lea	 ebp, DWORD PTR [esp-112]
  00005	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  0000b	89 4d b4	 mov	 DWORD PTR _this$[ebp], ecx

; 59   : 	//GetTimeEventBlendValue<TTimeEventTableFloat, float>(fTime, m_TimeEventSizeX, pfValue);
; 60   : 	GetTimeEventBlendValue(fTime, m_TimeEventSizeX, pfValue);

  0000e	8b 45 b4	 mov	 eax, DWORD PTR _this$[ebp]
  00011	05 98 00 00 00	 add	 eax, 152		; 00000098H
  00016	89 45 6c	 mov	 DWORD PTR _rVector$[ebp], eax
  00019	f3 0f 10 45 78	 movss	 xmm0, DWORD PTR _fTime$[ebp]
  0001e	f3 0f 11 45 5c	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1478 :         auto& _My_data = _Mypair._Myval2;

  00023	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00026	89 45 54	 mov	 DWORD PTR __My_data$50[ebp], eax

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00029	8b 45 54	 mov	 eax, DWORD PTR __My_data$50[ebp]
  0002c	8b 4d 54	 mov	 ecx, DWORD PTR __My_data$50[ebp]
  0002f	8b 00		 mov	 eax, DWORD PTR [eax]
  00031	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00034	75 09		 jne	 SHORT $LN13@GetParticl
  00036	c7 45 50 01 00
	00 00		 mov	 DWORD PTR tv200[ebp], 1
  0003d	eb 04		 jmp	 SHORT $LN14@GetParticl
$LN13@GetParticl:
  0003f	83 65 50 00	 and	 DWORD PTR tv200[ebp], 0
$LN14@GetParticl:
  00043	8a 45 50	 mov	 al, BYTE PTR tv200[ebp]
  00046	88 45 6b	 mov	 BYTE PTR $T56[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 229  : 	if (rVector.empty())

  00049	0f b6 45 6b	 movzx	 eax, BYTE PTR $T56[ebp]
  0004d	85 c0		 test	 eax, eax
  0004f	74 0f		 je	 SHORT $LN4@GetParticl

; 230  : 	{
; 231  : 		*pReturnValue = T();

  00051	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00054	0f 57 c0	 xorps	 xmm0, xmm0
  00057	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 232  : 		return;

  0005b	e9 d5 02 00 00	 jmp	 $LN3@GetParticl
$LN4@GetParticl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  00060	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00063	89 45 4c	 mov	 DWORD PTR __My_data$49[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00066	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  00069	89 45 30	 mov	 DWORD PTR $T45[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  0006c	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  0006f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00072	89 45 2c	 mov	 DWORD PTR ___param0$44[ebp], eax
  00075	ff 75 30	 push	 DWORD PTR $T45[ebp]
  00078	ff 75 2c	 push	 DWORD PTR ___param0$44[ebp]
  0007b	8d 4d 28	 lea	 ecx, DWORD PTR $T43[ebp]
  0007e	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  00083	8d 45 28	 lea	 eax, DWORD PTR $T43[ebp]
  00086	89 45 08	 mov	 DWORD PTR $T35[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  00089	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0008c	89 45 48	 mov	 DWORD PTR __My_data$48[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  0008f	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00092	89 45 24	 mov	 DWORD PTR $T42[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00095	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00098	8b 00		 mov	 eax, DWORD PTR [eax]
  0009a	89 45 20	 mov	 DWORD PTR ___param0$41[ebp], eax
  0009d	ff 75 24	 push	 DWORD PTR $T42[ebp]
  000a0	ff 75 20	 push	 DWORD PTR ___param0$41[ebp]
  000a3	8d 4d 1c	 lea	 ecx, DWORD PTR $T40[ebp]
  000a6	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  000ab	8d 45 1c	 lea	 eax, DWORD PTR $T40[ebp]
  000ae	89 45 18	 mov	 DWORD PTR $T39[ebp], eax

; 287  :         _Vector_iterator _Tmp = *this;

  000b1	8b 45 18	 mov	 eax, DWORD PTR $T39[ebp]
  000b4	8b 00		 mov	 eax, DWORD PTR [eax]
  000b6	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 120  :         _Ptr += _Off;

  000b9	33 c0		 xor	 eax, eax
  000bb	40		 inc	 eax
  000bc	c1 e0 03	 shl	 eax, 3
  000bf	03 45 58	 add	 eax, DWORD PTR __Tmp$51[ebp]
  000c2	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 283  :         return *this;

  000c5	8d 45 58	 lea	 eax, DWORD PTR __Tmp$51[ebp]
  000c8	89 45 14	 mov	 DWORD PTR $T38[ebp], eax

; 288  :         return _Tmp += _Off;

  000cb	8b 45 14	 mov	 eax, DWORD PTR $T38[ebp]
  000ce	8b 00		 mov	 eax, DWORD PTR [eax]
  000d0	89 45 10	 mov	 DWORD PTR $T37[ebp], eax
  000d3	8d 45 10	 lea	 eax, DWORD PTR $T37[ebp]
  000d6	89 45 0c	 mov	 DWORD PTR $T36[ebp], eax

; 149  :         return _Ptr == _Right._Ptr;

  000d9	8b 45 0c	 mov	 eax, DWORD PTR $T36[ebp]
  000dc	8b 4d 08	 mov	 ecx, DWORD PTR $T35[ebp]
  000df	8b 00		 mov	 eax, DWORD PTR [eax]
  000e1	3b 01		 cmp	 eax, DWORD PTR [ecx]
  000e3	75 09		 jne	 SHORT $LN48@GetParticl
  000e5	c7 45 44 01 00
	00 00		 mov	 DWORD PTR tv238[ebp], 1
  000ec	eb 04		 jmp	 SHORT $LN49@GetParticl
$LN48@GetParticl:
  000ee	83 65 44 00	 and	 DWORD PTR tv238[ebp], 0
$LN49@GetParticl:
  000f2	8a 45 44	 mov	 al, BYTE PTR tv238[ebp]
  000f5	88 45 6a	 mov	 BYTE PTR $T55[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 235  : 	if(rVector.begin()+1==rVector.end())

  000f8	0f b6 45 6a	 movzx	 eax, BYTE PTR $T55[ebp]
  000fc	85 c0		 test	 eax, eax
  000fe	74 1e		 je	 SHORT $LN5@GetParticl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  00100	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00103	89 45 04	 mov	 DWORD PTR __My_data$34[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00106	8b 45 04	 mov	 eax, DWORD PTR __My_data$34[ebp]
  00109	8b 00		 mov	 eax, DWORD PTR [eax]
  0010b	89 45 00	 mov	 DWORD PTR $T33[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 237  : 		*pReturnValue = rVector.front().m_Value;

  0010e	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00111	8b 4d 00	 mov	 ecx, DWORD PTR $T33[ebp]
  00114	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00117	89 08		 mov	 DWORD PTR [eax], ecx

; 238  : 		return;

  00119	e9 17 02 00 00	 jmp	 $LN3@GetParticl
$LN5@GetParticl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  0011e	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00121	89 45 fc	 mov	 DWORD PTR __My_data$32[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00124	8b 45 fc	 mov	 eax, DWORD PTR __My_data$32[ebp]
  00127	8b 00		 mov	 eax, DWORD PTR [eax]
  00129	89 45 f8	 mov	 DWORD PTR $T31[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 241  : 	if (fElapsedTime < rVector.front().m_fTime)

  0012c	8b 45 f8	 mov	 eax, DWORD PTR $T31[ebp]
  0012f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00133	0f 2f 45 5c	 comiss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00137	76 1e		 jbe	 SHORT $LN6@GetParticl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  00139	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0013c	89 45 f4	 mov	 DWORD PTR __My_data$30[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  0013f	8b 45 f4	 mov	 eax, DWORD PTR __My_data$30[ebp]
  00142	8b 00		 mov	 eax, DWORD PTR [eax]
  00144	89 45 f0	 mov	 DWORD PTR $T29[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 243  : 		*pReturnValue = rVector.front().m_Value;

  00147	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0014a	8b 4d f0	 mov	 ecx, DWORD PTR $T29[ebp]
  0014d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00150	89 08		 mov	 DWORD PTR [eax], ecx

; 244  : 		return;

  00152	e9 de 01 00 00	 jmp	 $LN3@GetParticl
$LN6@GetParticl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00157	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0015a	89 45 ec	 mov	 DWORD PTR __My_data$28[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0015d	6a 08		 push	 8
  0015f	58		 pop	 eax
  00160	6b c0 ff	 imul	 eax, eax, -1
  00163	8b 4d ec	 mov	 ecx, DWORD PTR __My_data$28[ebp]
  00166	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00169	89 45 e8	 mov	 DWORD PTR $T27[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 247  : 	if (fElapsedTime > rVector.back().m_fTime)

  0016c	8b 45 e8	 mov	 eax, DWORD PTR $T27[ebp]
  0016f	f3 0f 10 45 5c	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00174	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00177	76 25		 jbe	 SHORT $LN7@GetParticl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00179	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0017c	89 45 e4	 mov	 DWORD PTR __My_data$26[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0017f	6a 08		 push	 8
  00181	58		 pop	 eax
  00182	6b c0 ff	 imul	 eax, eax, -1
  00185	8b 4d e4	 mov	 ecx, DWORD PTR __My_data$26[ebp]
  00188	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  0018b	89 45 e0	 mov	 DWORD PTR $T25[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 249  : 		*pReturnValue = rVector.back().m_Value;

  0018e	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00191	8b 4d e0	 mov	 ecx, DWORD PTR $T25[ebp]
  00194	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00197	89 08		 mov	 DWORD PTR [eax], ecx

; 250  : 		return;

  00199	e9 97 01 00 00	 jmp	 $LN3@GetParticl
$LN7@GetParticl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  0019e	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  001a1	89 45 40	 mov	 DWORD PTR __My_data$47[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001a4	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001a7	89 85 74 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001ad	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001b0	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001b3	89 45 dc	 mov	 DWORD PTR ___param0$24[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001b6	8b 45 dc	 mov	 eax, DWORD PTR ___param0$24[ebp]
  001b9	89 45 d8	 mov	 DWORD PTR $T23[ebp], eax

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001bc	8d 45 d8	 lea	 eax, DWORD PTR $T23[ebp]
  001bf	89 45 cc	 mov	 DWORD PTR $T20[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  001c2	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  001c5	89 45 3c	 mov	 DWORD PTR __My_data$46[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001c8	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001cb	89 85 78 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001d1	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001d4	8b 00		 mov	 eax, DWORD PTR [eax]
  001d6	89 45 d4	 mov	 DWORD PTR ___param0$22[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001d9	8b 45 d4	 mov	 eax, DWORD PTR ___param0$22[ebp]
  001dc	89 45 d0	 mov	 DWORD PTR $T21[ebp], eax

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001df	8d 45 d0	 lea	 eax, DWORD PTR $T21[ebp]
  001e2	89 45 c8	 mov	 DWORD PTR $T19[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 255  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  001e5	8b 45 cc	 mov	 eax, DWORD PTR $T20[ebp]
  001e8	8b 00		 mov	 eax, DWORD PTR [eax]
  001ea	89 45 c0	 mov	 DWORD PTR __Last$[ebp], eax
  001ed	8b 45 c8	 mov	 eax, DWORD PTR $T19[ebp]
  001f0	8b 00		 mov	 eax, DWORD PTR [eax]
  001f2	89 45 bc	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6851 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  001f5	33 c0		 xor	 eax, eax
  001f7	88 45 c4	 mov	 BYTE PTR $T18[ebp], al
  001fa	ff 75 c4	 push	 DWORD PTR $T18[ebp]
  001fd	8d 45 5c	 lea	 eax, DWORD PTR _fElapsedTime$[ebp]
  00200	50		 push	 eax
  00201	ff 75 c0	 push	 DWORD PTR __Last$[ebp]
  00204	ff 75 bc	 push	 DWORD PTR __First$[ebp]
  00207	8d 45 60	 lea	 eax, DWORD PTR _result$52[ebp]
  0020a	50		 push	 eax
  0020b	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@MU?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABMU?$less@X@0@@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float,std::less<void> >
  00210	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  00213	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00216	3b 45 64	 cmp	 eax, DWORD PTR _result$52[ebp+4]
  00219	75 09		 jne	 SHORT $LN108@GetParticl
  0021b	c7 45 38 01 00
	00 00		 mov	 DWORD PTR tv338[ebp], 1
  00222	eb 04		 jmp	 SHORT $LN109@GetParticl
$LN108@GetParticl:
  00224	83 65 38 00	 and	 DWORD PTR tv338[ebp], 0
$LN109@GetParticl:
  00228	8a 45 38	 mov	 al, BYTE PTR tv338[ebp]
  0022b	88 45 69	 mov	 BYTE PTR $T54[ebp], al

; 153  :         return !(*this == _Right);

  0022e	0f b6 45 69	 movzx	 eax, BYTE PTR $T54[ebp]
  00232	85 c0		 test	 eax, eax
  00234	75 09		 jne	 SHORT $LN103@GetParticl
  00236	c7 45 34 01 00
	00 00		 mov	 DWORD PTR tv330[ebp], 1
  0023d	eb 04		 jmp	 SHORT $LN104@GetParticl
$LN103@GetParticl:
  0023f	83 65 34 00	 and	 DWORD PTR tv330[ebp], 0
$LN104@GetParticl:
  00243	8a 45 34	 mov	 al, BYTE PTR tv330[ebp]
  00246	88 45 68	 mov	 BYTE PTR $T53[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 257  : 	if (result.first != result.second)

  00249	0f b6 45 68	 movzx	 eax, BYTE PTR $T53[ebp]
  0024d	85 c0		 test	 eax, eax
  0024f	74 22		 je	 SHORT $LN8@GetParticl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  00251	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00254	89 45 b8	 mov	 DWORD PTR $T17[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00257	ff 75 b8	 push	 DWORD PTR $T17[ebp]
  0025a	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0025f	59		 pop	 ecx
  00260	89 45 94	 mov	 DWORD PTR $T9[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 258  : 		*pReturnValue = result.first->m_Value;

  00263	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00266	8b 4d 94	 mov	 ecx, DWORD PTR $T9[ebp]
  00269	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0026c	89 08		 mov	 DWORD PTR [eax], ecx
  0026e	e9 c2 00 00 00	 jmp	 $LN9@GetParticl
$LN8@GetParticl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 92   :         --_Ptr;

  00273	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00276	83 e8 08	 sub	 eax, 8
  00279	89 45 60	 mov	 DWORD PTR _result$52[ebp], eax

; 65   :         return _Ptr;

  0027c	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  0027f	89 45 b0	 mov	 DWORD PTR $T16[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00282	ff 75 b0	 push	 DWORD PTR $T16[ebp]
  00285	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0028a	59		 pop	 ecx
  0028b	89 45 a4	 mov	 DWORD PTR $T13[ebp], eax

; 65   :         return _Ptr;

  0028e	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  00291	89 45 ac	 mov	 DWORD PTR $T15[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00294	ff 75 ac	 push	 DWORD PTR $T15[ebp]
  00297	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0029c	59		 pop	 ecx
  0029d	89 45 a0	 mov	 DWORD PTR $T12[ebp], eax

; 65   :         return _Ptr;

  002a0	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002a3	89 45 a8	 mov	 DWORD PTR $T14[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002a6	ff 75 a8	 push	 DWORD PTR $T14[ebp]
  002a9	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002ae	59		 pop	 ecx
  002af	89 45 9c	 mov	 DWORD PTR $T11[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  002b2	8b 45 a4	 mov	 eax, DWORD PTR $T13[ebp]
  002b5	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002b9	f3 0f 5c 45 5c	 subss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  002be	8b 45 a0	 mov	 eax, DWORD PTR $T12[ebp]
  002c1	8b 4d 9c	 mov	 ecx, DWORD PTR $T11[ebp]
  002c4	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  002c8	f3 0f 5c 09	 subss	 xmm1, DWORD PTR [ecx]
  002cc	f3 0f 5e c1	 divss	 xmm0, xmm1
  002d0	f3 0f 11 45 84	 movss	 DWORD PTR _Head$5[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  002d5	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002d8	89 45 98	 mov	 DWORD PTR $T10[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002db	ff 75 98	 push	 DWORD PTR $T10[ebp]
  002de	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002e3	59		 pop	 ecx
  002e4	89 45 8c	 mov	 DWORD PTR $T7[ebp], eax

; 65   :         return _Ptr;

  002e7	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  002ea	89 85 7c ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002f0	ff b5 7c ff ff
	ff		 push	 DWORD PTR $T3[ebp]
  002f6	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002fb	59		 pop	 ecx
  002fc	89 45 88	 mov	 DWORD PTR $T6[ebp], eax

; 65   :         return _Ptr;

  002ff	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  00302	89 45 90	 mov	 DWORD PTR $T8[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00305	ff 75 90	 push	 DWORD PTR $T8[ebp]
  00308	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0030d	59		 pop	 ecx
  0030e	89 45 80	 mov	 DWORD PTR $T4[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 263  : 		*pReturnValue = T((result.first->m_Value-result.second->m_Value)*Head+(result.second->m_Value));

  00311	8b 45 8c	 mov	 eax, DWORD PTR $T7[ebp]
  00314	8b 4d 88	 mov	 ecx, DWORD PTR $T6[ebp]
  00317	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0031c	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00321	f3 0f 59 45 84	 mulss	 xmm0, DWORD PTR _Head$5[ebp]
  00326	8b 45 80	 mov	 eax, DWORD PTR $T4[ebp]
  00329	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  0032e	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00331	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN9@GetParticl:
$LN3@GetParticl:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 61   : }

  00335	83 c5 70	 add	 ebp, 112		; 00000070H
  00338	c9		 leave
  00339	c2 08 00	 ret	 8
?GetParticleSizeX@CEmitterProperty@@QAEXMPAM@Z ENDP	; CEmitterProperty::GetParticleSizeX
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
;	COMDAT ?GetParticleLifeTime@CEmitterProperty@@QAEXMPAM@Z
_TEXT	SEGMENT
$T1 = -140						; size = 4
$T2 = -136						; size = 4
$T3 = -132						; size = 4
$T4 = -128						; size = 4
_Head$5 = -124						; size = 4
$T6 = -120						; size = 4
$T7 = -116						; size = 4
$T8 = -112						; size = 4
$T9 = -108						; size = 4
$T10 = -104						; size = 4
$T11 = -100						; size = 4
$T12 = -96						; size = 4
$T13 = -92						; size = 4
$T14 = -88						; size = 4
$T15 = -84						; size = 4
$T16 = -80						; size = 4
_this$ = -76						; size = 4
$T17 = -72						; size = 4
__First$ = -68						; size = 4
__Last$ = -64						; size = 4
$T18 = -60						; size = 1
$T19 = -56						; size = 4
$T20 = -52						; size = 4
$T21 = -48						; size = 4
___param0$22 = -44					; size = 4
$T23 = -40						; size = 4
___param0$24 = -36					; size = 4
$T25 = -32						; size = 4
__My_data$26 = -28					; size = 4
$T27 = -24						; size = 4
__My_data$28 = -20					; size = 4
$T29 = -16						; size = 4
__My_data$30 = -12					; size = 4
$T31 = -8						; size = 4
__My_data$32 = -4					; size = 4
$T33 = 0						; size = 4
__My_data$34 = 4					; size = 4
$T35 = 8						; size = 4
$T36 = 12						; size = 4
$T37 = 16						; size = 4
$T38 = 20						; size = 4
$T39 = 24						; size = 4
$T40 = 28						; size = 4
___param0$41 = 32					; size = 4
$T42 = 36						; size = 4
$T43 = 40						; size = 4
___param0$44 = 44					; size = 4
$T45 = 48						; size = 4
tv330 = 52						; size = 4
tv338 = 56						; size = 4
__My_data$46 = 60					; size = 4
__My_data$47 = 64					; size = 4
tv238 = 68						; size = 4
__My_data$48 = 72					; size = 4
__My_data$49 = 76					; size = 4
tv200 = 80						; size = 4
__My_data$50 = 84					; size = 4
__Tmp$51 = 88						; size = 4
_fElapsedTime$ = 92					; size = 4
_result$52 = 96						; size = 8
$T53 = 104						; size = 1
$T54 = 105						; size = 1
$T55 = 106						; size = 1
$T56 = 107						; size = 1
_rVector$ = 108						; size = 4
_fTime$ = 120						; size = 4
_pfValue$ = 124						; size = 4
?GetParticleLifeTime@CEmitterProperty@@QAEXMPAM@Z PROC	; CEmitterProperty::GetParticleLifeTime, COMDAT
; _this$ = ecx

; 53   : {

  00000	55		 push	 ebp
  00001	8d 6c 24 90	 lea	 ebp, DWORD PTR [esp-112]
  00005	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  0000b	89 4d b4	 mov	 DWORD PTR _this$[ebp], ecx

; 54   : 	//GetTimeEventBlendValue<TTimeEventTableFloat, float>(fTime, m_TimeEventLifeTime, pfValue);
; 55   : 	GetTimeEventBlendValue(fTime, m_TimeEventLifeTime, pfValue);

  0000e	8b 45 b4	 mov	 eax, DWORD PTR _this$[ebp]
  00011	05 8c 00 00 00	 add	 eax, 140		; 0000008cH
  00016	89 45 6c	 mov	 DWORD PTR _rVector$[ebp], eax
  00019	f3 0f 10 45 78	 movss	 xmm0, DWORD PTR _fTime$[ebp]
  0001e	f3 0f 11 45 5c	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1478 :         auto& _My_data = _Mypair._Myval2;

  00023	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00026	89 45 54	 mov	 DWORD PTR __My_data$50[ebp], eax

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00029	8b 45 54	 mov	 eax, DWORD PTR __My_data$50[ebp]
  0002c	8b 4d 54	 mov	 ecx, DWORD PTR __My_data$50[ebp]
  0002f	8b 00		 mov	 eax, DWORD PTR [eax]
  00031	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00034	75 09		 jne	 SHORT $LN13@GetParticl
  00036	c7 45 50 01 00
	00 00		 mov	 DWORD PTR tv200[ebp], 1
  0003d	eb 04		 jmp	 SHORT $LN14@GetParticl
$LN13@GetParticl:
  0003f	83 65 50 00	 and	 DWORD PTR tv200[ebp], 0
$LN14@GetParticl:
  00043	8a 45 50	 mov	 al, BYTE PTR tv200[ebp]
  00046	88 45 6b	 mov	 BYTE PTR $T56[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 229  : 	if (rVector.empty())

  00049	0f b6 45 6b	 movzx	 eax, BYTE PTR $T56[ebp]
  0004d	85 c0		 test	 eax, eax
  0004f	74 0f		 je	 SHORT $LN4@GetParticl

; 230  : 	{
; 231  : 		*pReturnValue = T();

  00051	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00054	0f 57 c0	 xorps	 xmm0, xmm0
  00057	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 232  : 		return;

  0005b	e9 d5 02 00 00	 jmp	 $LN3@GetParticl
$LN4@GetParticl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  00060	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00063	89 45 4c	 mov	 DWORD PTR __My_data$49[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00066	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  00069	89 45 30	 mov	 DWORD PTR $T45[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  0006c	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  0006f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00072	89 45 2c	 mov	 DWORD PTR ___param0$44[ebp], eax
  00075	ff 75 30	 push	 DWORD PTR $T45[ebp]
  00078	ff 75 2c	 push	 DWORD PTR ___param0$44[ebp]
  0007b	8d 4d 28	 lea	 ecx, DWORD PTR $T43[ebp]
  0007e	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  00083	8d 45 28	 lea	 eax, DWORD PTR $T43[ebp]
  00086	89 45 08	 mov	 DWORD PTR $T35[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  00089	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0008c	89 45 48	 mov	 DWORD PTR __My_data$48[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  0008f	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00092	89 45 24	 mov	 DWORD PTR $T42[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00095	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00098	8b 00		 mov	 eax, DWORD PTR [eax]
  0009a	89 45 20	 mov	 DWORD PTR ___param0$41[ebp], eax
  0009d	ff 75 24	 push	 DWORD PTR $T42[ebp]
  000a0	ff 75 20	 push	 DWORD PTR ___param0$41[ebp]
  000a3	8d 4d 1c	 lea	 ecx, DWORD PTR $T40[ebp]
  000a6	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  000ab	8d 45 1c	 lea	 eax, DWORD PTR $T40[ebp]
  000ae	89 45 18	 mov	 DWORD PTR $T39[ebp], eax

; 287  :         _Vector_iterator _Tmp = *this;

  000b1	8b 45 18	 mov	 eax, DWORD PTR $T39[ebp]
  000b4	8b 00		 mov	 eax, DWORD PTR [eax]
  000b6	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 120  :         _Ptr += _Off;

  000b9	33 c0		 xor	 eax, eax
  000bb	40		 inc	 eax
  000bc	c1 e0 03	 shl	 eax, 3
  000bf	03 45 58	 add	 eax, DWORD PTR __Tmp$51[ebp]
  000c2	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 283  :         return *this;

  000c5	8d 45 58	 lea	 eax, DWORD PTR __Tmp$51[ebp]
  000c8	89 45 14	 mov	 DWORD PTR $T38[ebp], eax

; 288  :         return _Tmp += _Off;

  000cb	8b 45 14	 mov	 eax, DWORD PTR $T38[ebp]
  000ce	8b 00		 mov	 eax, DWORD PTR [eax]
  000d0	89 45 10	 mov	 DWORD PTR $T37[ebp], eax
  000d3	8d 45 10	 lea	 eax, DWORD PTR $T37[ebp]
  000d6	89 45 0c	 mov	 DWORD PTR $T36[ebp], eax

; 149  :         return _Ptr == _Right._Ptr;

  000d9	8b 45 0c	 mov	 eax, DWORD PTR $T36[ebp]
  000dc	8b 4d 08	 mov	 ecx, DWORD PTR $T35[ebp]
  000df	8b 00		 mov	 eax, DWORD PTR [eax]
  000e1	3b 01		 cmp	 eax, DWORD PTR [ecx]
  000e3	75 09		 jne	 SHORT $LN48@GetParticl
  000e5	c7 45 44 01 00
	00 00		 mov	 DWORD PTR tv238[ebp], 1
  000ec	eb 04		 jmp	 SHORT $LN49@GetParticl
$LN48@GetParticl:
  000ee	83 65 44 00	 and	 DWORD PTR tv238[ebp], 0
$LN49@GetParticl:
  000f2	8a 45 44	 mov	 al, BYTE PTR tv238[ebp]
  000f5	88 45 6a	 mov	 BYTE PTR $T55[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 235  : 	if(rVector.begin()+1==rVector.end())

  000f8	0f b6 45 6a	 movzx	 eax, BYTE PTR $T55[ebp]
  000fc	85 c0		 test	 eax, eax
  000fe	74 1e		 je	 SHORT $LN5@GetParticl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  00100	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00103	89 45 04	 mov	 DWORD PTR __My_data$34[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00106	8b 45 04	 mov	 eax, DWORD PTR __My_data$34[ebp]
  00109	8b 00		 mov	 eax, DWORD PTR [eax]
  0010b	89 45 00	 mov	 DWORD PTR $T33[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 237  : 		*pReturnValue = rVector.front().m_Value;

  0010e	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00111	8b 4d 00	 mov	 ecx, DWORD PTR $T33[ebp]
  00114	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00117	89 08		 mov	 DWORD PTR [eax], ecx

; 238  : 		return;

  00119	e9 17 02 00 00	 jmp	 $LN3@GetParticl
$LN5@GetParticl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  0011e	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00121	89 45 fc	 mov	 DWORD PTR __My_data$32[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00124	8b 45 fc	 mov	 eax, DWORD PTR __My_data$32[ebp]
  00127	8b 00		 mov	 eax, DWORD PTR [eax]
  00129	89 45 f8	 mov	 DWORD PTR $T31[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 241  : 	if (fElapsedTime < rVector.front().m_fTime)

  0012c	8b 45 f8	 mov	 eax, DWORD PTR $T31[ebp]
  0012f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00133	0f 2f 45 5c	 comiss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00137	76 1e		 jbe	 SHORT $LN6@GetParticl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  00139	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0013c	89 45 f4	 mov	 DWORD PTR __My_data$30[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  0013f	8b 45 f4	 mov	 eax, DWORD PTR __My_data$30[ebp]
  00142	8b 00		 mov	 eax, DWORD PTR [eax]
  00144	89 45 f0	 mov	 DWORD PTR $T29[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 243  : 		*pReturnValue = rVector.front().m_Value;

  00147	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0014a	8b 4d f0	 mov	 ecx, DWORD PTR $T29[ebp]
  0014d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00150	89 08		 mov	 DWORD PTR [eax], ecx

; 244  : 		return;

  00152	e9 de 01 00 00	 jmp	 $LN3@GetParticl
$LN6@GetParticl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00157	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0015a	89 45 ec	 mov	 DWORD PTR __My_data$28[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0015d	6a 08		 push	 8
  0015f	58		 pop	 eax
  00160	6b c0 ff	 imul	 eax, eax, -1
  00163	8b 4d ec	 mov	 ecx, DWORD PTR __My_data$28[ebp]
  00166	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00169	89 45 e8	 mov	 DWORD PTR $T27[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 247  : 	if (fElapsedTime > rVector.back().m_fTime)

  0016c	8b 45 e8	 mov	 eax, DWORD PTR $T27[ebp]
  0016f	f3 0f 10 45 5c	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00174	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00177	76 25		 jbe	 SHORT $LN7@GetParticl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00179	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0017c	89 45 e4	 mov	 DWORD PTR __My_data$26[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0017f	6a 08		 push	 8
  00181	58		 pop	 eax
  00182	6b c0 ff	 imul	 eax, eax, -1
  00185	8b 4d e4	 mov	 ecx, DWORD PTR __My_data$26[ebp]
  00188	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  0018b	89 45 e0	 mov	 DWORD PTR $T25[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 249  : 		*pReturnValue = rVector.back().m_Value;

  0018e	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00191	8b 4d e0	 mov	 ecx, DWORD PTR $T25[ebp]
  00194	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00197	89 08		 mov	 DWORD PTR [eax], ecx

; 250  : 		return;

  00199	e9 97 01 00 00	 jmp	 $LN3@GetParticl
$LN7@GetParticl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  0019e	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  001a1	89 45 40	 mov	 DWORD PTR __My_data$47[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001a4	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001a7	89 85 74 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001ad	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001b0	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001b3	89 45 dc	 mov	 DWORD PTR ___param0$24[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001b6	8b 45 dc	 mov	 eax, DWORD PTR ___param0$24[ebp]
  001b9	89 45 d8	 mov	 DWORD PTR $T23[ebp], eax

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001bc	8d 45 d8	 lea	 eax, DWORD PTR $T23[ebp]
  001bf	89 45 cc	 mov	 DWORD PTR $T20[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  001c2	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  001c5	89 45 3c	 mov	 DWORD PTR __My_data$46[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001c8	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001cb	89 85 78 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001d1	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001d4	8b 00		 mov	 eax, DWORD PTR [eax]
  001d6	89 45 d4	 mov	 DWORD PTR ___param0$22[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001d9	8b 45 d4	 mov	 eax, DWORD PTR ___param0$22[ebp]
  001dc	89 45 d0	 mov	 DWORD PTR $T21[ebp], eax

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001df	8d 45 d0	 lea	 eax, DWORD PTR $T21[ebp]
  001e2	89 45 c8	 mov	 DWORD PTR $T19[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 255  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  001e5	8b 45 cc	 mov	 eax, DWORD PTR $T20[ebp]
  001e8	8b 00		 mov	 eax, DWORD PTR [eax]
  001ea	89 45 c0	 mov	 DWORD PTR __Last$[ebp], eax
  001ed	8b 45 c8	 mov	 eax, DWORD PTR $T19[ebp]
  001f0	8b 00		 mov	 eax, DWORD PTR [eax]
  001f2	89 45 bc	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6851 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  001f5	33 c0		 xor	 eax, eax
  001f7	88 45 c4	 mov	 BYTE PTR $T18[ebp], al
  001fa	ff 75 c4	 push	 DWORD PTR $T18[ebp]
  001fd	8d 45 5c	 lea	 eax, DWORD PTR _fElapsedTime$[ebp]
  00200	50		 push	 eax
  00201	ff 75 c0	 push	 DWORD PTR __Last$[ebp]
  00204	ff 75 bc	 push	 DWORD PTR __First$[ebp]
  00207	8d 45 60	 lea	 eax, DWORD PTR _result$52[ebp]
  0020a	50		 push	 eax
  0020b	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@MU?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABMU?$less@X@0@@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float,std::less<void> >
  00210	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  00213	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00216	3b 45 64	 cmp	 eax, DWORD PTR _result$52[ebp+4]
  00219	75 09		 jne	 SHORT $LN108@GetParticl
  0021b	c7 45 38 01 00
	00 00		 mov	 DWORD PTR tv338[ebp], 1
  00222	eb 04		 jmp	 SHORT $LN109@GetParticl
$LN108@GetParticl:
  00224	83 65 38 00	 and	 DWORD PTR tv338[ebp], 0
$LN109@GetParticl:
  00228	8a 45 38	 mov	 al, BYTE PTR tv338[ebp]
  0022b	88 45 69	 mov	 BYTE PTR $T54[ebp], al

; 153  :         return !(*this == _Right);

  0022e	0f b6 45 69	 movzx	 eax, BYTE PTR $T54[ebp]
  00232	85 c0		 test	 eax, eax
  00234	75 09		 jne	 SHORT $LN103@GetParticl
  00236	c7 45 34 01 00
	00 00		 mov	 DWORD PTR tv330[ebp], 1
  0023d	eb 04		 jmp	 SHORT $LN104@GetParticl
$LN103@GetParticl:
  0023f	83 65 34 00	 and	 DWORD PTR tv330[ebp], 0
$LN104@GetParticl:
  00243	8a 45 34	 mov	 al, BYTE PTR tv330[ebp]
  00246	88 45 68	 mov	 BYTE PTR $T53[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 257  : 	if (result.first != result.second)

  00249	0f b6 45 68	 movzx	 eax, BYTE PTR $T53[ebp]
  0024d	85 c0		 test	 eax, eax
  0024f	74 22		 je	 SHORT $LN8@GetParticl
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  00251	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00254	89 45 b8	 mov	 DWORD PTR $T17[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00257	ff 75 b8	 push	 DWORD PTR $T17[ebp]
  0025a	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0025f	59		 pop	 ecx
  00260	89 45 94	 mov	 DWORD PTR $T9[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 258  : 		*pReturnValue = result.first->m_Value;

  00263	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00266	8b 4d 94	 mov	 ecx, DWORD PTR $T9[ebp]
  00269	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0026c	89 08		 mov	 DWORD PTR [eax], ecx
  0026e	e9 c2 00 00 00	 jmp	 $LN9@GetParticl
$LN8@GetParticl:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 92   :         --_Ptr;

  00273	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00276	83 e8 08	 sub	 eax, 8
  00279	89 45 60	 mov	 DWORD PTR _result$52[ebp], eax

; 65   :         return _Ptr;

  0027c	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  0027f	89 45 b0	 mov	 DWORD PTR $T16[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00282	ff 75 b0	 push	 DWORD PTR $T16[ebp]
  00285	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0028a	59		 pop	 ecx
  0028b	89 45 a4	 mov	 DWORD PTR $T13[ebp], eax

; 65   :         return _Ptr;

  0028e	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  00291	89 45 ac	 mov	 DWORD PTR $T15[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00294	ff 75 ac	 push	 DWORD PTR $T15[ebp]
  00297	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0029c	59		 pop	 ecx
  0029d	89 45 a0	 mov	 DWORD PTR $T12[ebp], eax

; 65   :         return _Ptr;

  002a0	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002a3	89 45 a8	 mov	 DWORD PTR $T14[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002a6	ff 75 a8	 push	 DWORD PTR $T14[ebp]
  002a9	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002ae	59		 pop	 ecx
  002af	89 45 9c	 mov	 DWORD PTR $T11[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  002b2	8b 45 a4	 mov	 eax, DWORD PTR $T13[ebp]
  002b5	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002b9	f3 0f 5c 45 5c	 subss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  002be	8b 45 a0	 mov	 eax, DWORD PTR $T12[ebp]
  002c1	8b 4d 9c	 mov	 ecx, DWORD PTR $T11[ebp]
  002c4	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  002c8	f3 0f 5c 09	 subss	 xmm1, DWORD PTR [ecx]
  002cc	f3 0f 5e c1	 divss	 xmm0, xmm1
  002d0	f3 0f 11 45 84	 movss	 DWORD PTR _Head$5[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  002d5	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002d8	89 45 98	 mov	 DWORD PTR $T10[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002db	ff 75 98	 push	 DWORD PTR $T10[ebp]
  002de	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002e3	59		 pop	 ecx
  002e4	89 45 8c	 mov	 DWORD PTR $T7[ebp], eax

; 65   :         return _Ptr;

  002e7	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  002ea	89 85 7c ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002f0	ff b5 7c ff ff
	ff		 push	 DWORD PTR $T3[ebp]
  002f6	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002fb	59		 pop	 ecx
  002fc	89 45 88	 mov	 DWORD PTR $T6[ebp], eax

; 65   :         return _Ptr;

  002ff	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  00302	89 45 90	 mov	 DWORD PTR $T8[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00305	ff 75 90	 push	 DWORD PTR $T8[ebp]
  00308	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0030d	59		 pop	 ecx
  0030e	89 45 80	 mov	 DWORD PTR $T4[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 263  : 		*pReturnValue = T((result.first->m_Value-result.second->m_Value)*Head+(result.second->m_Value));

  00311	8b 45 8c	 mov	 eax, DWORD PTR $T7[ebp]
  00314	8b 4d 88	 mov	 ecx, DWORD PTR $T6[ebp]
  00317	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0031c	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00321	f3 0f 59 45 84	 mulss	 xmm0, DWORD PTR _Head$5[ebp]
  00326	8b 45 80	 mov	 eax, DWORD PTR $T4[ebp]
  00329	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  0032e	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00331	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN9@GetParticl:
$LN3@GetParticl:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 56   : }

  00335	83 c5 70	 add	 ebp, 112		; 00000070H
  00338	c9		 leave
  00339	c2 08 00	 ret	 8
?GetParticleLifeTime@CEmitterProperty@@QAEXMPAM@Z ENDP	; CEmitterProperty::GetParticleLifeTime
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
;	COMDAT ?GetEmissionCountPerSecond@CEmitterProperty@@QAEXMPAM@Z
_TEXT	SEGMENT
$T1 = -140						; size = 4
$T2 = -136						; size = 4
$T3 = -132						; size = 4
$T4 = -128						; size = 4
_Head$5 = -124						; size = 4
$T6 = -120						; size = 4
$T7 = -116						; size = 4
$T8 = -112						; size = 4
$T9 = -108						; size = 4
$T10 = -104						; size = 4
$T11 = -100						; size = 4
$T12 = -96						; size = 4
$T13 = -92						; size = 4
$T14 = -88						; size = 4
$T15 = -84						; size = 4
$T16 = -80						; size = 4
_this$ = -76						; size = 4
$T17 = -72						; size = 4
__First$ = -68						; size = 4
__Last$ = -64						; size = 4
$T18 = -60						; size = 1
$T19 = -56						; size = 4
$T20 = -52						; size = 4
$T21 = -48						; size = 4
___param0$22 = -44					; size = 4
$T23 = -40						; size = 4
___param0$24 = -36					; size = 4
$T25 = -32						; size = 4
__My_data$26 = -28					; size = 4
$T27 = -24						; size = 4
__My_data$28 = -20					; size = 4
$T29 = -16						; size = 4
__My_data$30 = -12					; size = 4
$T31 = -8						; size = 4
__My_data$32 = -4					; size = 4
$T33 = 0						; size = 4
__My_data$34 = 4					; size = 4
$T35 = 8						; size = 4
$T36 = 12						; size = 4
$T37 = 16						; size = 4
$T38 = 20						; size = 4
$T39 = 24						; size = 4
$T40 = 28						; size = 4
___param0$41 = 32					; size = 4
$T42 = 36						; size = 4
$T43 = 40						; size = 4
___param0$44 = 44					; size = 4
$T45 = 48						; size = 4
tv330 = 52						; size = 4
tv338 = 56						; size = 4
__My_data$46 = 60					; size = 4
__My_data$47 = 64					; size = 4
tv238 = 68						; size = 4
__My_data$48 = 72					; size = 4
__My_data$49 = 76					; size = 4
tv200 = 80						; size = 4
__My_data$50 = 84					; size = 4
__Tmp$51 = 88						; size = 4
_fElapsedTime$ = 92					; size = 4
_result$52 = 96						; size = 8
$T53 = 104						; size = 1
$T54 = 105						; size = 1
$T55 = 106						; size = 1
$T56 = 107						; size = 1
_rVector$ = 108						; size = 4
_fTime$ = 120						; size = 4
_pfValue$ = 124						; size = 4
?GetEmissionCountPerSecond@CEmitterProperty@@QAEXMPAM@Z PROC ; CEmitterProperty::GetEmissionCountPerSecond, COMDAT
; _this$ = ecx

; 48   : {

  00000	55		 push	 ebp
  00001	8d 6c 24 90	 lea	 ebp, DWORD PTR [esp-112]
  00005	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  0000b	89 4d b4	 mov	 DWORD PTR _this$[ebp], ecx

; 49   : 	//GetTimeEventBlendValue<TTimeEventTableFloat, float>(fTime, m_TimeEventEmissionCountPerSecond, pfValue);
; 50   : 	GetTimeEventBlendValue(fTime, m_TimeEventEmissionCountPerSecond, pfValue);

  0000e	8b 45 b4	 mov	 eax, DWORD PTR _this$[ebp]
  00011	05 80 00 00 00	 add	 eax, 128		; 00000080H
  00016	89 45 6c	 mov	 DWORD PTR _rVector$[ebp], eax
  00019	f3 0f 10 45 78	 movss	 xmm0, DWORD PTR _fTime$[ebp]
  0001e	f3 0f 11 45 5c	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1478 :         auto& _My_data = _Mypair._Myval2;

  00023	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00026	89 45 54	 mov	 DWORD PTR __My_data$50[ebp], eax

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00029	8b 45 54	 mov	 eax, DWORD PTR __My_data$50[ebp]
  0002c	8b 4d 54	 mov	 ecx, DWORD PTR __My_data$50[ebp]
  0002f	8b 00		 mov	 eax, DWORD PTR [eax]
  00031	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00034	75 09		 jne	 SHORT $LN13@GetEmissio
  00036	c7 45 50 01 00
	00 00		 mov	 DWORD PTR tv200[ebp], 1
  0003d	eb 04		 jmp	 SHORT $LN14@GetEmissio
$LN13@GetEmissio:
  0003f	83 65 50 00	 and	 DWORD PTR tv200[ebp], 0
$LN14@GetEmissio:
  00043	8a 45 50	 mov	 al, BYTE PTR tv200[ebp]
  00046	88 45 6b	 mov	 BYTE PTR $T56[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 229  : 	if (rVector.empty())

  00049	0f b6 45 6b	 movzx	 eax, BYTE PTR $T56[ebp]
  0004d	85 c0		 test	 eax, eax
  0004f	74 0f		 je	 SHORT $LN4@GetEmissio

; 230  : 	{
; 231  : 		*pReturnValue = T();

  00051	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00054	0f 57 c0	 xorps	 xmm0, xmm0
  00057	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 232  : 		return;

  0005b	e9 d5 02 00 00	 jmp	 $LN3@GetEmissio
$LN4@GetEmissio:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  00060	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00063	89 45 4c	 mov	 DWORD PTR __My_data$49[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00066	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  00069	89 45 30	 mov	 DWORD PTR $T45[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  0006c	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  0006f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00072	89 45 2c	 mov	 DWORD PTR ___param0$44[ebp], eax
  00075	ff 75 30	 push	 DWORD PTR $T45[ebp]
  00078	ff 75 2c	 push	 DWORD PTR ___param0$44[ebp]
  0007b	8d 4d 28	 lea	 ecx, DWORD PTR $T43[ebp]
  0007e	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  00083	8d 45 28	 lea	 eax, DWORD PTR $T43[ebp]
  00086	89 45 08	 mov	 DWORD PTR $T35[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  00089	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0008c	89 45 48	 mov	 DWORD PTR __My_data$48[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  0008f	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00092	89 45 24	 mov	 DWORD PTR $T42[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00095	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00098	8b 00		 mov	 eax, DWORD PTR [eax]
  0009a	89 45 20	 mov	 DWORD PTR ___param0$41[ebp], eax
  0009d	ff 75 24	 push	 DWORD PTR $T42[ebp]
  000a0	ff 75 20	 push	 DWORD PTR ___param0$41[ebp]
  000a3	8d 4d 1c	 lea	 ecx, DWORD PTR $T40[ebp]
  000a6	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  000ab	8d 45 1c	 lea	 eax, DWORD PTR $T40[ebp]
  000ae	89 45 18	 mov	 DWORD PTR $T39[ebp], eax

; 287  :         _Vector_iterator _Tmp = *this;

  000b1	8b 45 18	 mov	 eax, DWORD PTR $T39[ebp]
  000b4	8b 00		 mov	 eax, DWORD PTR [eax]
  000b6	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 120  :         _Ptr += _Off;

  000b9	33 c0		 xor	 eax, eax
  000bb	40		 inc	 eax
  000bc	c1 e0 03	 shl	 eax, 3
  000bf	03 45 58	 add	 eax, DWORD PTR __Tmp$51[ebp]
  000c2	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 283  :         return *this;

  000c5	8d 45 58	 lea	 eax, DWORD PTR __Tmp$51[ebp]
  000c8	89 45 14	 mov	 DWORD PTR $T38[ebp], eax

; 288  :         return _Tmp += _Off;

  000cb	8b 45 14	 mov	 eax, DWORD PTR $T38[ebp]
  000ce	8b 00		 mov	 eax, DWORD PTR [eax]
  000d0	89 45 10	 mov	 DWORD PTR $T37[ebp], eax
  000d3	8d 45 10	 lea	 eax, DWORD PTR $T37[ebp]
  000d6	89 45 0c	 mov	 DWORD PTR $T36[ebp], eax

; 149  :         return _Ptr == _Right._Ptr;

  000d9	8b 45 0c	 mov	 eax, DWORD PTR $T36[ebp]
  000dc	8b 4d 08	 mov	 ecx, DWORD PTR $T35[ebp]
  000df	8b 00		 mov	 eax, DWORD PTR [eax]
  000e1	3b 01		 cmp	 eax, DWORD PTR [ecx]
  000e3	75 09		 jne	 SHORT $LN48@GetEmissio
  000e5	c7 45 44 01 00
	00 00		 mov	 DWORD PTR tv238[ebp], 1
  000ec	eb 04		 jmp	 SHORT $LN49@GetEmissio
$LN48@GetEmissio:
  000ee	83 65 44 00	 and	 DWORD PTR tv238[ebp], 0
$LN49@GetEmissio:
  000f2	8a 45 44	 mov	 al, BYTE PTR tv238[ebp]
  000f5	88 45 6a	 mov	 BYTE PTR $T55[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 235  : 	if(rVector.begin()+1==rVector.end())

  000f8	0f b6 45 6a	 movzx	 eax, BYTE PTR $T55[ebp]
  000fc	85 c0		 test	 eax, eax
  000fe	74 1e		 je	 SHORT $LN5@GetEmissio
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  00100	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00103	89 45 04	 mov	 DWORD PTR __My_data$34[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00106	8b 45 04	 mov	 eax, DWORD PTR __My_data$34[ebp]
  00109	8b 00		 mov	 eax, DWORD PTR [eax]
  0010b	89 45 00	 mov	 DWORD PTR $T33[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 237  : 		*pReturnValue = rVector.front().m_Value;

  0010e	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00111	8b 4d 00	 mov	 ecx, DWORD PTR $T33[ebp]
  00114	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00117	89 08		 mov	 DWORD PTR [eax], ecx

; 238  : 		return;

  00119	e9 17 02 00 00	 jmp	 $LN3@GetEmissio
$LN5@GetEmissio:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  0011e	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00121	89 45 fc	 mov	 DWORD PTR __My_data$32[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00124	8b 45 fc	 mov	 eax, DWORD PTR __My_data$32[ebp]
  00127	8b 00		 mov	 eax, DWORD PTR [eax]
  00129	89 45 f8	 mov	 DWORD PTR $T31[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 241  : 	if (fElapsedTime < rVector.front().m_fTime)

  0012c	8b 45 f8	 mov	 eax, DWORD PTR $T31[ebp]
  0012f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00133	0f 2f 45 5c	 comiss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00137	76 1e		 jbe	 SHORT $LN6@GetEmissio
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  00139	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0013c	89 45 f4	 mov	 DWORD PTR __My_data$30[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  0013f	8b 45 f4	 mov	 eax, DWORD PTR __My_data$30[ebp]
  00142	8b 00		 mov	 eax, DWORD PTR [eax]
  00144	89 45 f0	 mov	 DWORD PTR $T29[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 243  : 		*pReturnValue = rVector.front().m_Value;

  00147	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0014a	8b 4d f0	 mov	 ecx, DWORD PTR $T29[ebp]
  0014d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00150	89 08		 mov	 DWORD PTR [eax], ecx

; 244  : 		return;

  00152	e9 de 01 00 00	 jmp	 $LN3@GetEmissio
$LN6@GetEmissio:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00157	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0015a	89 45 ec	 mov	 DWORD PTR __My_data$28[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0015d	6a 08		 push	 8
  0015f	58		 pop	 eax
  00160	6b c0 ff	 imul	 eax, eax, -1
  00163	8b 4d ec	 mov	 ecx, DWORD PTR __My_data$28[ebp]
  00166	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00169	89 45 e8	 mov	 DWORD PTR $T27[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 247  : 	if (fElapsedTime > rVector.back().m_fTime)

  0016c	8b 45 e8	 mov	 eax, DWORD PTR $T27[ebp]
  0016f	f3 0f 10 45 5c	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00174	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00177	76 25		 jbe	 SHORT $LN7@GetEmissio
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00179	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0017c	89 45 e4	 mov	 DWORD PTR __My_data$26[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0017f	6a 08		 push	 8
  00181	58		 pop	 eax
  00182	6b c0 ff	 imul	 eax, eax, -1
  00185	8b 4d e4	 mov	 ecx, DWORD PTR __My_data$26[ebp]
  00188	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  0018b	89 45 e0	 mov	 DWORD PTR $T25[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 249  : 		*pReturnValue = rVector.back().m_Value;

  0018e	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00191	8b 4d e0	 mov	 ecx, DWORD PTR $T25[ebp]
  00194	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00197	89 08		 mov	 DWORD PTR [eax], ecx

; 250  : 		return;

  00199	e9 97 01 00 00	 jmp	 $LN3@GetEmissio
$LN7@GetEmissio:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  0019e	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  001a1	89 45 40	 mov	 DWORD PTR __My_data$47[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001a4	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001a7	89 85 74 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001ad	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001b0	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001b3	89 45 dc	 mov	 DWORD PTR ___param0$24[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001b6	8b 45 dc	 mov	 eax, DWORD PTR ___param0$24[ebp]
  001b9	89 45 d8	 mov	 DWORD PTR $T23[ebp], eax

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001bc	8d 45 d8	 lea	 eax, DWORD PTR $T23[ebp]
  001bf	89 45 cc	 mov	 DWORD PTR $T20[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  001c2	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  001c5	89 45 3c	 mov	 DWORD PTR __My_data$46[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001c8	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001cb	89 85 78 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001d1	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001d4	8b 00		 mov	 eax, DWORD PTR [eax]
  001d6	89 45 d4	 mov	 DWORD PTR ___param0$22[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001d9	8b 45 d4	 mov	 eax, DWORD PTR ___param0$22[ebp]
  001dc	89 45 d0	 mov	 DWORD PTR $T21[ebp], eax

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001df	8d 45 d0	 lea	 eax, DWORD PTR $T21[ebp]
  001e2	89 45 c8	 mov	 DWORD PTR $T19[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 255  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  001e5	8b 45 cc	 mov	 eax, DWORD PTR $T20[ebp]
  001e8	8b 00		 mov	 eax, DWORD PTR [eax]
  001ea	89 45 c0	 mov	 DWORD PTR __Last$[ebp], eax
  001ed	8b 45 c8	 mov	 eax, DWORD PTR $T19[ebp]
  001f0	8b 00		 mov	 eax, DWORD PTR [eax]
  001f2	89 45 bc	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6851 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  001f5	33 c0		 xor	 eax, eax
  001f7	88 45 c4	 mov	 BYTE PTR $T18[ebp], al
  001fa	ff 75 c4	 push	 DWORD PTR $T18[ebp]
  001fd	8d 45 5c	 lea	 eax, DWORD PTR _fElapsedTime$[ebp]
  00200	50		 push	 eax
  00201	ff 75 c0	 push	 DWORD PTR __Last$[ebp]
  00204	ff 75 bc	 push	 DWORD PTR __First$[ebp]
  00207	8d 45 60	 lea	 eax, DWORD PTR _result$52[ebp]
  0020a	50		 push	 eax
  0020b	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@MU?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABMU?$less@X@0@@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float,std::less<void> >
  00210	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  00213	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00216	3b 45 64	 cmp	 eax, DWORD PTR _result$52[ebp+4]
  00219	75 09		 jne	 SHORT $LN108@GetEmissio
  0021b	c7 45 38 01 00
	00 00		 mov	 DWORD PTR tv338[ebp], 1
  00222	eb 04		 jmp	 SHORT $LN109@GetEmissio
$LN108@GetEmissio:
  00224	83 65 38 00	 and	 DWORD PTR tv338[ebp], 0
$LN109@GetEmissio:
  00228	8a 45 38	 mov	 al, BYTE PTR tv338[ebp]
  0022b	88 45 69	 mov	 BYTE PTR $T54[ebp], al

; 153  :         return !(*this == _Right);

  0022e	0f b6 45 69	 movzx	 eax, BYTE PTR $T54[ebp]
  00232	85 c0		 test	 eax, eax
  00234	75 09		 jne	 SHORT $LN103@GetEmissio
  00236	c7 45 34 01 00
	00 00		 mov	 DWORD PTR tv330[ebp], 1
  0023d	eb 04		 jmp	 SHORT $LN104@GetEmissio
$LN103@GetEmissio:
  0023f	83 65 34 00	 and	 DWORD PTR tv330[ebp], 0
$LN104@GetEmissio:
  00243	8a 45 34	 mov	 al, BYTE PTR tv330[ebp]
  00246	88 45 68	 mov	 BYTE PTR $T53[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 257  : 	if (result.first != result.second)

  00249	0f b6 45 68	 movzx	 eax, BYTE PTR $T53[ebp]
  0024d	85 c0		 test	 eax, eax
  0024f	74 22		 je	 SHORT $LN8@GetEmissio
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  00251	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00254	89 45 b8	 mov	 DWORD PTR $T17[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00257	ff 75 b8	 push	 DWORD PTR $T17[ebp]
  0025a	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0025f	59		 pop	 ecx
  00260	89 45 94	 mov	 DWORD PTR $T9[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 258  : 		*pReturnValue = result.first->m_Value;

  00263	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00266	8b 4d 94	 mov	 ecx, DWORD PTR $T9[ebp]
  00269	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0026c	89 08		 mov	 DWORD PTR [eax], ecx
  0026e	e9 c2 00 00 00	 jmp	 $LN9@GetEmissio
$LN8@GetEmissio:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 92   :         --_Ptr;

  00273	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00276	83 e8 08	 sub	 eax, 8
  00279	89 45 60	 mov	 DWORD PTR _result$52[ebp], eax

; 65   :         return _Ptr;

  0027c	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  0027f	89 45 b0	 mov	 DWORD PTR $T16[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00282	ff 75 b0	 push	 DWORD PTR $T16[ebp]
  00285	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0028a	59		 pop	 ecx
  0028b	89 45 a4	 mov	 DWORD PTR $T13[ebp], eax

; 65   :         return _Ptr;

  0028e	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  00291	89 45 ac	 mov	 DWORD PTR $T15[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00294	ff 75 ac	 push	 DWORD PTR $T15[ebp]
  00297	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0029c	59		 pop	 ecx
  0029d	89 45 a0	 mov	 DWORD PTR $T12[ebp], eax

; 65   :         return _Ptr;

  002a0	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002a3	89 45 a8	 mov	 DWORD PTR $T14[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002a6	ff 75 a8	 push	 DWORD PTR $T14[ebp]
  002a9	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002ae	59		 pop	 ecx
  002af	89 45 9c	 mov	 DWORD PTR $T11[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  002b2	8b 45 a4	 mov	 eax, DWORD PTR $T13[ebp]
  002b5	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002b9	f3 0f 5c 45 5c	 subss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  002be	8b 45 a0	 mov	 eax, DWORD PTR $T12[ebp]
  002c1	8b 4d 9c	 mov	 ecx, DWORD PTR $T11[ebp]
  002c4	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  002c8	f3 0f 5c 09	 subss	 xmm1, DWORD PTR [ecx]
  002cc	f3 0f 5e c1	 divss	 xmm0, xmm1
  002d0	f3 0f 11 45 84	 movss	 DWORD PTR _Head$5[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  002d5	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002d8	89 45 98	 mov	 DWORD PTR $T10[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002db	ff 75 98	 push	 DWORD PTR $T10[ebp]
  002de	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002e3	59		 pop	 ecx
  002e4	89 45 8c	 mov	 DWORD PTR $T7[ebp], eax

; 65   :         return _Ptr;

  002e7	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  002ea	89 85 7c ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002f0	ff b5 7c ff ff
	ff		 push	 DWORD PTR $T3[ebp]
  002f6	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002fb	59		 pop	 ecx
  002fc	89 45 88	 mov	 DWORD PTR $T6[ebp], eax

; 65   :         return _Ptr;

  002ff	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  00302	89 45 90	 mov	 DWORD PTR $T8[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00305	ff 75 90	 push	 DWORD PTR $T8[ebp]
  00308	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0030d	59		 pop	 ecx
  0030e	89 45 80	 mov	 DWORD PTR $T4[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 263  : 		*pReturnValue = T((result.first->m_Value-result.second->m_Value)*Head+(result.second->m_Value));

  00311	8b 45 8c	 mov	 eax, DWORD PTR $T7[ebp]
  00314	8b 4d 88	 mov	 ecx, DWORD PTR $T6[ebp]
  00317	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0031c	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00321	f3 0f 59 45 84	 mulss	 xmm0, DWORD PTR _Head$5[ebp]
  00326	8b 45 80	 mov	 eax, DWORD PTR $T4[ebp]
  00329	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  0032e	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00331	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN9@GetEmissio:
$LN3@GetEmissio:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 51   : }

  00335	83 c5 70	 add	 ebp, 112		; 00000070H
  00338	c9		 leave
  00339	c2 08 00	 ret	 8
?GetEmissionCountPerSecond@CEmitterProperty@@QAEXMPAM@Z ENDP ; CEmitterProperty::GetEmissionCountPerSecond
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
;	COMDAT ?GetEmittingVelocity@CEmitterProperty@@QAEXMPAM@Z
_TEXT	SEGMENT
$T1 = -140						; size = 4
$T2 = -136						; size = 4
$T3 = -132						; size = 4
$T4 = -128						; size = 4
_Head$5 = -124						; size = 4
$T6 = -120						; size = 4
$T7 = -116						; size = 4
$T8 = -112						; size = 4
$T9 = -108						; size = 4
$T10 = -104						; size = 4
$T11 = -100						; size = 4
$T12 = -96						; size = 4
$T13 = -92						; size = 4
$T14 = -88						; size = 4
$T15 = -84						; size = 4
$T16 = -80						; size = 4
_this$ = -76						; size = 4
$T17 = -72						; size = 4
__First$ = -68						; size = 4
__Last$ = -64						; size = 4
$T18 = -60						; size = 1
$T19 = -56						; size = 4
$T20 = -52						; size = 4
$T21 = -48						; size = 4
___param0$22 = -44					; size = 4
$T23 = -40						; size = 4
___param0$24 = -36					; size = 4
$T25 = -32						; size = 4
__My_data$26 = -28					; size = 4
$T27 = -24						; size = 4
__My_data$28 = -20					; size = 4
$T29 = -16						; size = 4
__My_data$30 = -12					; size = 4
$T31 = -8						; size = 4
__My_data$32 = -4					; size = 4
$T33 = 0						; size = 4
__My_data$34 = 4					; size = 4
$T35 = 8						; size = 4
$T36 = 12						; size = 4
$T37 = 16						; size = 4
$T38 = 20						; size = 4
$T39 = 24						; size = 4
$T40 = 28						; size = 4
___param0$41 = 32					; size = 4
$T42 = 36						; size = 4
$T43 = 40						; size = 4
___param0$44 = 44					; size = 4
$T45 = 48						; size = 4
tv330 = 52						; size = 4
tv338 = 56						; size = 4
__My_data$46 = 60					; size = 4
__My_data$47 = 64					; size = 4
tv238 = 68						; size = 4
__My_data$48 = 72					; size = 4
__My_data$49 = 76					; size = 4
tv200 = 80						; size = 4
__My_data$50 = 84					; size = 4
__Tmp$51 = 88						; size = 4
_fElapsedTime$ = 92					; size = 4
_result$52 = 96						; size = 8
$T53 = 104						; size = 1
$T54 = 105						; size = 1
$T55 = 106						; size = 1
$T56 = 107						; size = 1
_rVector$ = 108						; size = 4
_fTime$ = 120						; size = 4
_pfValue$ = 124						; size = 4
?GetEmittingVelocity@CEmitterProperty@@QAEXMPAM@Z PROC	; CEmitterProperty::GetEmittingVelocity, COMDAT
; _this$ = ecx

; 43   : {

  00000	55		 push	 ebp
  00001	8d 6c 24 90	 lea	 ebp, DWORD PTR [esp-112]
  00005	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  0000b	89 4d b4	 mov	 DWORD PTR _this$[ebp], ecx

; 44   : 	//GetTimeEventBlendValue<TTimeEventTableFloat, float>(fTime, m_TimeEventEmittingVelocity, pfValue);
; 45   : 	GetTimeEventBlendValue(fTime, m_TimeEventEmittingVelocity, pfValue);

  0000e	8b 45 b4	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 c0 74	 add	 eax, 116		; 00000074H
  00014	89 45 6c	 mov	 DWORD PTR _rVector$[ebp], eax
  00017	f3 0f 10 45 78	 movss	 xmm0, DWORD PTR _fTime$[ebp]
  0001c	f3 0f 11 45 5c	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1478 :         auto& _My_data = _Mypair._Myval2;

  00021	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00024	89 45 54	 mov	 DWORD PTR __My_data$50[ebp], eax

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00027	8b 45 54	 mov	 eax, DWORD PTR __My_data$50[ebp]
  0002a	8b 4d 54	 mov	 ecx, DWORD PTR __My_data$50[ebp]
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
  0002f	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00032	75 09		 jne	 SHORT $LN13@GetEmittin
  00034	c7 45 50 01 00
	00 00		 mov	 DWORD PTR tv200[ebp], 1
  0003b	eb 04		 jmp	 SHORT $LN14@GetEmittin
$LN13@GetEmittin:
  0003d	83 65 50 00	 and	 DWORD PTR tv200[ebp], 0
$LN14@GetEmittin:
  00041	8a 45 50	 mov	 al, BYTE PTR tv200[ebp]
  00044	88 45 6b	 mov	 BYTE PTR $T56[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 229  : 	if (rVector.empty())

  00047	0f b6 45 6b	 movzx	 eax, BYTE PTR $T56[ebp]
  0004b	85 c0		 test	 eax, eax
  0004d	74 0f		 je	 SHORT $LN4@GetEmittin

; 230  : 	{
; 231  : 		*pReturnValue = T();

  0004f	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00052	0f 57 c0	 xorps	 xmm0, xmm0
  00055	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 232  : 		return;

  00059	e9 d5 02 00 00	 jmp	 $LN3@GetEmittin
$LN4@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  0005e	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00061	89 45 4c	 mov	 DWORD PTR __My_data$49[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00064	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  00067	89 45 30	 mov	 DWORD PTR $T45[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  0006a	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  0006d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00070	89 45 2c	 mov	 DWORD PTR ___param0$44[ebp], eax
  00073	ff 75 30	 push	 DWORD PTR $T45[ebp]
  00076	ff 75 2c	 push	 DWORD PTR ___param0$44[ebp]
  00079	8d 4d 28	 lea	 ecx, DWORD PTR $T43[ebp]
  0007c	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  00081	8d 45 28	 lea	 eax, DWORD PTR $T43[ebp]
  00084	89 45 08	 mov	 DWORD PTR $T35[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  00087	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0008a	89 45 48	 mov	 DWORD PTR __My_data$48[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  0008d	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00090	89 45 24	 mov	 DWORD PTR $T42[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00093	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00096	8b 00		 mov	 eax, DWORD PTR [eax]
  00098	89 45 20	 mov	 DWORD PTR ___param0$41[ebp], eax
  0009b	ff 75 24	 push	 DWORD PTR $T42[ebp]
  0009e	ff 75 20	 push	 DWORD PTR ___param0$41[ebp]
  000a1	8d 4d 1c	 lea	 ecx, DWORD PTR $T40[ebp]
  000a4	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  000a9	8d 45 1c	 lea	 eax, DWORD PTR $T40[ebp]
  000ac	89 45 18	 mov	 DWORD PTR $T39[ebp], eax

; 287  :         _Vector_iterator _Tmp = *this;

  000af	8b 45 18	 mov	 eax, DWORD PTR $T39[ebp]
  000b2	8b 00		 mov	 eax, DWORD PTR [eax]
  000b4	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 120  :         _Ptr += _Off;

  000b7	33 c0		 xor	 eax, eax
  000b9	40		 inc	 eax
  000ba	c1 e0 03	 shl	 eax, 3
  000bd	03 45 58	 add	 eax, DWORD PTR __Tmp$51[ebp]
  000c0	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 283  :         return *this;

  000c3	8d 45 58	 lea	 eax, DWORD PTR __Tmp$51[ebp]
  000c6	89 45 14	 mov	 DWORD PTR $T38[ebp], eax

; 288  :         return _Tmp += _Off;

  000c9	8b 45 14	 mov	 eax, DWORD PTR $T38[ebp]
  000cc	8b 00		 mov	 eax, DWORD PTR [eax]
  000ce	89 45 10	 mov	 DWORD PTR $T37[ebp], eax
  000d1	8d 45 10	 lea	 eax, DWORD PTR $T37[ebp]
  000d4	89 45 0c	 mov	 DWORD PTR $T36[ebp], eax

; 149  :         return _Ptr == _Right._Ptr;

  000d7	8b 45 0c	 mov	 eax, DWORD PTR $T36[ebp]
  000da	8b 4d 08	 mov	 ecx, DWORD PTR $T35[ebp]
  000dd	8b 00		 mov	 eax, DWORD PTR [eax]
  000df	3b 01		 cmp	 eax, DWORD PTR [ecx]
  000e1	75 09		 jne	 SHORT $LN48@GetEmittin
  000e3	c7 45 44 01 00
	00 00		 mov	 DWORD PTR tv238[ebp], 1
  000ea	eb 04		 jmp	 SHORT $LN49@GetEmittin
$LN48@GetEmittin:
  000ec	83 65 44 00	 and	 DWORD PTR tv238[ebp], 0
$LN49@GetEmittin:
  000f0	8a 45 44	 mov	 al, BYTE PTR tv238[ebp]
  000f3	88 45 6a	 mov	 BYTE PTR $T55[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 235  : 	if(rVector.begin()+1==rVector.end())

  000f6	0f b6 45 6a	 movzx	 eax, BYTE PTR $T55[ebp]
  000fa	85 c0		 test	 eax, eax
  000fc	74 1e		 je	 SHORT $LN5@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  000fe	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00101	89 45 04	 mov	 DWORD PTR __My_data$34[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00104	8b 45 04	 mov	 eax, DWORD PTR __My_data$34[ebp]
  00107	8b 00		 mov	 eax, DWORD PTR [eax]
  00109	89 45 00	 mov	 DWORD PTR $T33[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 237  : 		*pReturnValue = rVector.front().m_Value;

  0010c	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0010f	8b 4d 00	 mov	 ecx, DWORD PTR $T33[ebp]
  00112	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00115	89 08		 mov	 DWORD PTR [eax], ecx

; 238  : 		return;

  00117	e9 17 02 00 00	 jmp	 $LN3@GetEmittin
$LN5@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  0011c	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0011f	89 45 fc	 mov	 DWORD PTR __My_data$32[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00122	8b 45 fc	 mov	 eax, DWORD PTR __My_data$32[ebp]
  00125	8b 00		 mov	 eax, DWORD PTR [eax]
  00127	89 45 f8	 mov	 DWORD PTR $T31[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 241  : 	if (fElapsedTime < rVector.front().m_fTime)

  0012a	8b 45 f8	 mov	 eax, DWORD PTR $T31[ebp]
  0012d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00131	0f 2f 45 5c	 comiss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00135	76 1e		 jbe	 SHORT $LN6@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  00137	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0013a	89 45 f4	 mov	 DWORD PTR __My_data$30[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  0013d	8b 45 f4	 mov	 eax, DWORD PTR __My_data$30[ebp]
  00140	8b 00		 mov	 eax, DWORD PTR [eax]
  00142	89 45 f0	 mov	 DWORD PTR $T29[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 243  : 		*pReturnValue = rVector.front().m_Value;

  00145	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00148	8b 4d f0	 mov	 ecx, DWORD PTR $T29[ebp]
  0014b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0014e	89 08		 mov	 DWORD PTR [eax], ecx

; 244  : 		return;

  00150	e9 de 01 00 00	 jmp	 $LN3@GetEmittin
$LN6@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00155	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00158	89 45 ec	 mov	 DWORD PTR __My_data$28[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0015b	6a 08		 push	 8
  0015d	58		 pop	 eax
  0015e	6b c0 ff	 imul	 eax, eax, -1
  00161	8b 4d ec	 mov	 ecx, DWORD PTR __My_data$28[ebp]
  00164	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00167	89 45 e8	 mov	 DWORD PTR $T27[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 247  : 	if (fElapsedTime > rVector.back().m_fTime)

  0016a	8b 45 e8	 mov	 eax, DWORD PTR $T27[ebp]
  0016d	f3 0f 10 45 5c	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00172	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00175	76 25		 jbe	 SHORT $LN7@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00177	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0017a	89 45 e4	 mov	 DWORD PTR __My_data$26[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0017d	6a 08		 push	 8
  0017f	58		 pop	 eax
  00180	6b c0 ff	 imul	 eax, eax, -1
  00183	8b 4d e4	 mov	 ecx, DWORD PTR __My_data$26[ebp]
  00186	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00189	89 45 e0	 mov	 DWORD PTR $T25[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 249  : 		*pReturnValue = rVector.back().m_Value;

  0018c	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0018f	8b 4d e0	 mov	 ecx, DWORD PTR $T25[ebp]
  00192	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00195	89 08		 mov	 DWORD PTR [eax], ecx

; 250  : 		return;

  00197	e9 97 01 00 00	 jmp	 $LN3@GetEmittin
$LN7@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  0019c	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0019f	89 45 40	 mov	 DWORD PTR __My_data$47[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001a2	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001a5	89 85 74 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001ab	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001ae	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001b1	89 45 dc	 mov	 DWORD PTR ___param0$24[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001b4	8b 45 dc	 mov	 eax, DWORD PTR ___param0$24[ebp]
  001b7	89 45 d8	 mov	 DWORD PTR $T23[ebp], eax

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001ba	8d 45 d8	 lea	 eax, DWORD PTR $T23[ebp]
  001bd	89 45 cc	 mov	 DWORD PTR $T20[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  001c0	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  001c3	89 45 3c	 mov	 DWORD PTR __My_data$46[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001c6	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001c9	89 85 78 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001cf	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001d2	8b 00		 mov	 eax, DWORD PTR [eax]
  001d4	89 45 d4	 mov	 DWORD PTR ___param0$22[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001d7	8b 45 d4	 mov	 eax, DWORD PTR ___param0$22[ebp]
  001da	89 45 d0	 mov	 DWORD PTR $T21[ebp], eax

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001dd	8d 45 d0	 lea	 eax, DWORD PTR $T21[ebp]
  001e0	89 45 c8	 mov	 DWORD PTR $T19[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 255  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  001e3	8b 45 cc	 mov	 eax, DWORD PTR $T20[ebp]
  001e6	8b 00		 mov	 eax, DWORD PTR [eax]
  001e8	89 45 c0	 mov	 DWORD PTR __Last$[ebp], eax
  001eb	8b 45 c8	 mov	 eax, DWORD PTR $T19[ebp]
  001ee	8b 00		 mov	 eax, DWORD PTR [eax]
  001f0	89 45 bc	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6851 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  001f3	33 c0		 xor	 eax, eax
  001f5	88 45 c4	 mov	 BYTE PTR $T18[ebp], al
  001f8	ff 75 c4	 push	 DWORD PTR $T18[ebp]
  001fb	8d 45 5c	 lea	 eax, DWORD PTR _fElapsedTime$[ebp]
  001fe	50		 push	 eax
  001ff	ff 75 c0	 push	 DWORD PTR __Last$[ebp]
  00202	ff 75 bc	 push	 DWORD PTR __First$[ebp]
  00205	8d 45 60	 lea	 eax, DWORD PTR _result$52[ebp]
  00208	50		 push	 eax
  00209	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@MU?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABMU?$less@X@0@@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float,std::less<void> >
  0020e	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  00211	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00214	3b 45 64	 cmp	 eax, DWORD PTR _result$52[ebp+4]
  00217	75 09		 jne	 SHORT $LN108@GetEmittin
  00219	c7 45 38 01 00
	00 00		 mov	 DWORD PTR tv338[ebp], 1
  00220	eb 04		 jmp	 SHORT $LN109@GetEmittin
$LN108@GetEmittin:
  00222	83 65 38 00	 and	 DWORD PTR tv338[ebp], 0
$LN109@GetEmittin:
  00226	8a 45 38	 mov	 al, BYTE PTR tv338[ebp]
  00229	88 45 69	 mov	 BYTE PTR $T54[ebp], al

; 153  :         return !(*this == _Right);

  0022c	0f b6 45 69	 movzx	 eax, BYTE PTR $T54[ebp]
  00230	85 c0		 test	 eax, eax
  00232	75 09		 jne	 SHORT $LN103@GetEmittin
  00234	c7 45 34 01 00
	00 00		 mov	 DWORD PTR tv330[ebp], 1
  0023b	eb 04		 jmp	 SHORT $LN104@GetEmittin
$LN103@GetEmittin:
  0023d	83 65 34 00	 and	 DWORD PTR tv330[ebp], 0
$LN104@GetEmittin:
  00241	8a 45 34	 mov	 al, BYTE PTR tv330[ebp]
  00244	88 45 68	 mov	 BYTE PTR $T53[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 257  : 	if (result.first != result.second)

  00247	0f b6 45 68	 movzx	 eax, BYTE PTR $T53[ebp]
  0024b	85 c0		 test	 eax, eax
  0024d	74 22		 je	 SHORT $LN8@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  0024f	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00252	89 45 b8	 mov	 DWORD PTR $T17[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00255	ff 75 b8	 push	 DWORD PTR $T17[ebp]
  00258	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0025d	59		 pop	 ecx
  0025e	89 45 94	 mov	 DWORD PTR $T9[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 258  : 		*pReturnValue = result.first->m_Value;

  00261	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00264	8b 4d 94	 mov	 ecx, DWORD PTR $T9[ebp]
  00267	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0026a	89 08		 mov	 DWORD PTR [eax], ecx
  0026c	e9 c2 00 00 00	 jmp	 $LN9@GetEmittin
$LN8@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 92   :         --_Ptr;

  00271	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00274	83 e8 08	 sub	 eax, 8
  00277	89 45 60	 mov	 DWORD PTR _result$52[ebp], eax

; 65   :         return _Ptr;

  0027a	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  0027d	89 45 b0	 mov	 DWORD PTR $T16[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00280	ff 75 b0	 push	 DWORD PTR $T16[ebp]
  00283	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  00288	59		 pop	 ecx
  00289	89 45 a4	 mov	 DWORD PTR $T13[ebp], eax

; 65   :         return _Ptr;

  0028c	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  0028f	89 45 ac	 mov	 DWORD PTR $T15[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00292	ff 75 ac	 push	 DWORD PTR $T15[ebp]
  00295	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0029a	59		 pop	 ecx
  0029b	89 45 a0	 mov	 DWORD PTR $T12[ebp], eax

; 65   :         return _Ptr;

  0029e	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002a1	89 45 a8	 mov	 DWORD PTR $T14[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002a4	ff 75 a8	 push	 DWORD PTR $T14[ebp]
  002a7	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002ac	59		 pop	 ecx
  002ad	89 45 9c	 mov	 DWORD PTR $T11[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  002b0	8b 45 a4	 mov	 eax, DWORD PTR $T13[ebp]
  002b3	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002b7	f3 0f 5c 45 5c	 subss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  002bc	8b 45 a0	 mov	 eax, DWORD PTR $T12[ebp]
  002bf	8b 4d 9c	 mov	 ecx, DWORD PTR $T11[ebp]
  002c2	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  002c6	f3 0f 5c 09	 subss	 xmm1, DWORD PTR [ecx]
  002ca	f3 0f 5e c1	 divss	 xmm0, xmm1
  002ce	f3 0f 11 45 84	 movss	 DWORD PTR _Head$5[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  002d3	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002d6	89 45 98	 mov	 DWORD PTR $T10[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002d9	ff 75 98	 push	 DWORD PTR $T10[ebp]
  002dc	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002e1	59		 pop	 ecx
  002e2	89 45 8c	 mov	 DWORD PTR $T7[ebp], eax

; 65   :         return _Ptr;

  002e5	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  002e8	89 85 7c ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002ee	ff b5 7c ff ff
	ff		 push	 DWORD PTR $T3[ebp]
  002f4	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002f9	59		 pop	 ecx
  002fa	89 45 88	 mov	 DWORD PTR $T6[ebp], eax

; 65   :         return _Ptr;

  002fd	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  00300	89 45 90	 mov	 DWORD PTR $T8[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00303	ff 75 90	 push	 DWORD PTR $T8[ebp]
  00306	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0030b	59		 pop	 ecx
  0030c	89 45 80	 mov	 DWORD PTR $T4[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 263  : 		*pReturnValue = T((result.first->m_Value-result.second->m_Value)*Head+(result.second->m_Value));

  0030f	8b 45 8c	 mov	 eax, DWORD PTR $T7[ebp]
  00312	8b 4d 88	 mov	 ecx, DWORD PTR $T6[ebp]
  00315	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0031a	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  0031f	f3 0f 59 45 84	 mulss	 xmm0, DWORD PTR _Head$5[ebp]
  00324	8b 45 80	 mov	 eax, DWORD PTR $T4[ebp]
  00327	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  0032c	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0032f	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN9@GetEmittin:
$LN3@GetEmittin:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 46   : }

  00333	83 c5 70	 add	 ebp, 112		; 00000070H
  00336	c9		 leave
  00337	c2 08 00	 ret	 8
?GetEmittingVelocity@CEmitterProperty@@QAEXMPAM@Z ENDP	; CEmitterProperty::GetEmittingVelocity
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
;	COMDAT ?GetEmittingDirectionZ@CEmitterProperty@@QAEXMPAM@Z
_TEXT	SEGMENT
$T1 = -140						; size = 4
$T2 = -136						; size = 4
$T3 = -132						; size = 4
$T4 = -128						; size = 4
_Head$5 = -124						; size = 4
$T6 = -120						; size = 4
$T7 = -116						; size = 4
$T8 = -112						; size = 4
$T9 = -108						; size = 4
$T10 = -104						; size = 4
$T11 = -100						; size = 4
$T12 = -96						; size = 4
$T13 = -92						; size = 4
$T14 = -88						; size = 4
$T15 = -84						; size = 4
$T16 = -80						; size = 4
_this$ = -76						; size = 4
$T17 = -72						; size = 4
__First$ = -68						; size = 4
__Last$ = -64						; size = 4
$T18 = -60						; size = 1
$T19 = -56						; size = 4
$T20 = -52						; size = 4
$T21 = -48						; size = 4
___param0$22 = -44					; size = 4
$T23 = -40						; size = 4
___param0$24 = -36					; size = 4
$T25 = -32						; size = 4
__My_data$26 = -28					; size = 4
$T27 = -24						; size = 4
__My_data$28 = -20					; size = 4
$T29 = -16						; size = 4
__My_data$30 = -12					; size = 4
$T31 = -8						; size = 4
__My_data$32 = -4					; size = 4
$T33 = 0						; size = 4
__My_data$34 = 4					; size = 4
$T35 = 8						; size = 4
$T36 = 12						; size = 4
$T37 = 16						; size = 4
$T38 = 20						; size = 4
$T39 = 24						; size = 4
$T40 = 28						; size = 4
___param0$41 = 32					; size = 4
$T42 = 36						; size = 4
$T43 = 40						; size = 4
___param0$44 = 44					; size = 4
$T45 = 48						; size = 4
tv330 = 52						; size = 4
tv338 = 56						; size = 4
__My_data$46 = 60					; size = 4
__My_data$47 = 64					; size = 4
tv238 = 68						; size = 4
__My_data$48 = 72					; size = 4
__My_data$49 = 76					; size = 4
tv200 = 80						; size = 4
__My_data$50 = 84					; size = 4
__Tmp$51 = 88						; size = 4
_fElapsedTime$ = 92					; size = 4
_result$52 = 96						; size = 8
$T53 = 104						; size = 1
$T54 = 105						; size = 1
$T55 = 106						; size = 1
$T56 = 107						; size = 1
_rVector$ = 108						; size = 4
_fTime$ = 120						; size = 4
_pfValue$ = 124						; size = 4
?GetEmittingDirectionZ@CEmitterProperty@@QAEXMPAM@Z PROC ; CEmitterProperty::GetEmittingDirectionZ, COMDAT
; _this$ = ecx

; 38   : {

  00000	55		 push	 ebp
  00001	8d 6c 24 90	 lea	 ebp, DWORD PTR [esp-112]
  00005	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  0000b	89 4d b4	 mov	 DWORD PTR _this$[ebp], ecx

; 39   : 	//GetTimeEventBlendValue<TTimeEventTableFloat, float>(fTime, m_TimeEventEmittingDirectionZ, pfValue);
; 40   : 	GetTimeEventBlendValue(fTime, m_TimeEventEmittingDirectionZ, pfValue);

  0000e	8b 45 b4	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 c0 68	 add	 eax, 104		; 00000068H
  00014	89 45 6c	 mov	 DWORD PTR _rVector$[ebp], eax
  00017	f3 0f 10 45 78	 movss	 xmm0, DWORD PTR _fTime$[ebp]
  0001c	f3 0f 11 45 5c	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1478 :         auto& _My_data = _Mypair._Myval2;

  00021	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00024	89 45 54	 mov	 DWORD PTR __My_data$50[ebp], eax

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00027	8b 45 54	 mov	 eax, DWORD PTR __My_data$50[ebp]
  0002a	8b 4d 54	 mov	 ecx, DWORD PTR __My_data$50[ebp]
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
  0002f	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00032	75 09		 jne	 SHORT $LN13@GetEmittin
  00034	c7 45 50 01 00
	00 00		 mov	 DWORD PTR tv200[ebp], 1
  0003b	eb 04		 jmp	 SHORT $LN14@GetEmittin
$LN13@GetEmittin:
  0003d	83 65 50 00	 and	 DWORD PTR tv200[ebp], 0
$LN14@GetEmittin:
  00041	8a 45 50	 mov	 al, BYTE PTR tv200[ebp]
  00044	88 45 6b	 mov	 BYTE PTR $T56[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 229  : 	if (rVector.empty())

  00047	0f b6 45 6b	 movzx	 eax, BYTE PTR $T56[ebp]
  0004b	85 c0		 test	 eax, eax
  0004d	74 0f		 je	 SHORT $LN4@GetEmittin

; 230  : 	{
; 231  : 		*pReturnValue = T();

  0004f	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00052	0f 57 c0	 xorps	 xmm0, xmm0
  00055	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 232  : 		return;

  00059	e9 d5 02 00 00	 jmp	 $LN3@GetEmittin
$LN4@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  0005e	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00061	89 45 4c	 mov	 DWORD PTR __My_data$49[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00064	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  00067	89 45 30	 mov	 DWORD PTR $T45[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  0006a	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  0006d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00070	89 45 2c	 mov	 DWORD PTR ___param0$44[ebp], eax
  00073	ff 75 30	 push	 DWORD PTR $T45[ebp]
  00076	ff 75 2c	 push	 DWORD PTR ___param0$44[ebp]
  00079	8d 4d 28	 lea	 ecx, DWORD PTR $T43[ebp]
  0007c	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  00081	8d 45 28	 lea	 eax, DWORD PTR $T43[ebp]
  00084	89 45 08	 mov	 DWORD PTR $T35[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  00087	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0008a	89 45 48	 mov	 DWORD PTR __My_data$48[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  0008d	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00090	89 45 24	 mov	 DWORD PTR $T42[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00093	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00096	8b 00		 mov	 eax, DWORD PTR [eax]
  00098	89 45 20	 mov	 DWORD PTR ___param0$41[ebp], eax
  0009b	ff 75 24	 push	 DWORD PTR $T42[ebp]
  0009e	ff 75 20	 push	 DWORD PTR ___param0$41[ebp]
  000a1	8d 4d 1c	 lea	 ecx, DWORD PTR $T40[ebp]
  000a4	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  000a9	8d 45 1c	 lea	 eax, DWORD PTR $T40[ebp]
  000ac	89 45 18	 mov	 DWORD PTR $T39[ebp], eax

; 287  :         _Vector_iterator _Tmp = *this;

  000af	8b 45 18	 mov	 eax, DWORD PTR $T39[ebp]
  000b2	8b 00		 mov	 eax, DWORD PTR [eax]
  000b4	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 120  :         _Ptr += _Off;

  000b7	33 c0		 xor	 eax, eax
  000b9	40		 inc	 eax
  000ba	c1 e0 03	 shl	 eax, 3
  000bd	03 45 58	 add	 eax, DWORD PTR __Tmp$51[ebp]
  000c0	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 283  :         return *this;

  000c3	8d 45 58	 lea	 eax, DWORD PTR __Tmp$51[ebp]
  000c6	89 45 14	 mov	 DWORD PTR $T38[ebp], eax

; 288  :         return _Tmp += _Off;

  000c9	8b 45 14	 mov	 eax, DWORD PTR $T38[ebp]
  000cc	8b 00		 mov	 eax, DWORD PTR [eax]
  000ce	89 45 10	 mov	 DWORD PTR $T37[ebp], eax
  000d1	8d 45 10	 lea	 eax, DWORD PTR $T37[ebp]
  000d4	89 45 0c	 mov	 DWORD PTR $T36[ebp], eax

; 149  :         return _Ptr == _Right._Ptr;

  000d7	8b 45 0c	 mov	 eax, DWORD PTR $T36[ebp]
  000da	8b 4d 08	 mov	 ecx, DWORD PTR $T35[ebp]
  000dd	8b 00		 mov	 eax, DWORD PTR [eax]
  000df	3b 01		 cmp	 eax, DWORD PTR [ecx]
  000e1	75 09		 jne	 SHORT $LN48@GetEmittin
  000e3	c7 45 44 01 00
	00 00		 mov	 DWORD PTR tv238[ebp], 1
  000ea	eb 04		 jmp	 SHORT $LN49@GetEmittin
$LN48@GetEmittin:
  000ec	83 65 44 00	 and	 DWORD PTR tv238[ebp], 0
$LN49@GetEmittin:
  000f0	8a 45 44	 mov	 al, BYTE PTR tv238[ebp]
  000f3	88 45 6a	 mov	 BYTE PTR $T55[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 235  : 	if(rVector.begin()+1==rVector.end())

  000f6	0f b6 45 6a	 movzx	 eax, BYTE PTR $T55[ebp]
  000fa	85 c0		 test	 eax, eax
  000fc	74 1e		 je	 SHORT $LN5@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  000fe	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00101	89 45 04	 mov	 DWORD PTR __My_data$34[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00104	8b 45 04	 mov	 eax, DWORD PTR __My_data$34[ebp]
  00107	8b 00		 mov	 eax, DWORD PTR [eax]
  00109	89 45 00	 mov	 DWORD PTR $T33[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 237  : 		*pReturnValue = rVector.front().m_Value;

  0010c	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0010f	8b 4d 00	 mov	 ecx, DWORD PTR $T33[ebp]
  00112	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00115	89 08		 mov	 DWORD PTR [eax], ecx

; 238  : 		return;

  00117	e9 17 02 00 00	 jmp	 $LN3@GetEmittin
$LN5@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  0011c	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0011f	89 45 fc	 mov	 DWORD PTR __My_data$32[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00122	8b 45 fc	 mov	 eax, DWORD PTR __My_data$32[ebp]
  00125	8b 00		 mov	 eax, DWORD PTR [eax]
  00127	89 45 f8	 mov	 DWORD PTR $T31[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 241  : 	if (fElapsedTime < rVector.front().m_fTime)

  0012a	8b 45 f8	 mov	 eax, DWORD PTR $T31[ebp]
  0012d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00131	0f 2f 45 5c	 comiss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00135	76 1e		 jbe	 SHORT $LN6@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  00137	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0013a	89 45 f4	 mov	 DWORD PTR __My_data$30[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  0013d	8b 45 f4	 mov	 eax, DWORD PTR __My_data$30[ebp]
  00140	8b 00		 mov	 eax, DWORD PTR [eax]
  00142	89 45 f0	 mov	 DWORD PTR $T29[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 243  : 		*pReturnValue = rVector.front().m_Value;

  00145	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00148	8b 4d f0	 mov	 ecx, DWORD PTR $T29[ebp]
  0014b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0014e	89 08		 mov	 DWORD PTR [eax], ecx

; 244  : 		return;

  00150	e9 de 01 00 00	 jmp	 $LN3@GetEmittin
$LN6@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00155	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00158	89 45 ec	 mov	 DWORD PTR __My_data$28[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0015b	6a 08		 push	 8
  0015d	58		 pop	 eax
  0015e	6b c0 ff	 imul	 eax, eax, -1
  00161	8b 4d ec	 mov	 ecx, DWORD PTR __My_data$28[ebp]
  00164	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00167	89 45 e8	 mov	 DWORD PTR $T27[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 247  : 	if (fElapsedTime > rVector.back().m_fTime)

  0016a	8b 45 e8	 mov	 eax, DWORD PTR $T27[ebp]
  0016d	f3 0f 10 45 5c	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00172	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00175	76 25		 jbe	 SHORT $LN7@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00177	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0017a	89 45 e4	 mov	 DWORD PTR __My_data$26[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0017d	6a 08		 push	 8
  0017f	58		 pop	 eax
  00180	6b c0 ff	 imul	 eax, eax, -1
  00183	8b 4d e4	 mov	 ecx, DWORD PTR __My_data$26[ebp]
  00186	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00189	89 45 e0	 mov	 DWORD PTR $T25[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 249  : 		*pReturnValue = rVector.back().m_Value;

  0018c	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0018f	8b 4d e0	 mov	 ecx, DWORD PTR $T25[ebp]
  00192	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00195	89 08		 mov	 DWORD PTR [eax], ecx

; 250  : 		return;

  00197	e9 97 01 00 00	 jmp	 $LN3@GetEmittin
$LN7@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  0019c	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0019f	89 45 40	 mov	 DWORD PTR __My_data$47[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001a2	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001a5	89 85 74 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001ab	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001ae	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001b1	89 45 dc	 mov	 DWORD PTR ___param0$24[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001b4	8b 45 dc	 mov	 eax, DWORD PTR ___param0$24[ebp]
  001b7	89 45 d8	 mov	 DWORD PTR $T23[ebp], eax

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001ba	8d 45 d8	 lea	 eax, DWORD PTR $T23[ebp]
  001bd	89 45 cc	 mov	 DWORD PTR $T20[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  001c0	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  001c3	89 45 3c	 mov	 DWORD PTR __My_data$46[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001c6	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001c9	89 85 78 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001cf	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001d2	8b 00		 mov	 eax, DWORD PTR [eax]
  001d4	89 45 d4	 mov	 DWORD PTR ___param0$22[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001d7	8b 45 d4	 mov	 eax, DWORD PTR ___param0$22[ebp]
  001da	89 45 d0	 mov	 DWORD PTR $T21[ebp], eax

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001dd	8d 45 d0	 lea	 eax, DWORD PTR $T21[ebp]
  001e0	89 45 c8	 mov	 DWORD PTR $T19[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 255  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  001e3	8b 45 cc	 mov	 eax, DWORD PTR $T20[ebp]
  001e6	8b 00		 mov	 eax, DWORD PTR [eax]
  001e8	89 45 c0	 mov	 DWORD PTR __Last$[ebp], eax
  001eb	8b 45 c8	 mov	 eax, DWORD PTR $T19[ebp]
  001ee	8b 00		 mov	 eax, DWORD PTR [eax]
  001f0	89 45 bc	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6851 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  001f3	33 c0		 xor	 eax, eax
  001f5	88 45 c4	 mov	 BYTE PTR $T18[ebp], al
  001f8	ff 75 c4	 push	 DWORD PTR $T18[ebp]
  001fb	8d 45 5c	 lea	 eax, DWORD PTR _fElapsedTime$[ebp]
  001fe	50		 push	 eax
  001ff	ff 75 c0	 push	 DWORD PTR __Last$[ebp]
  00202	ff 75 bc	 push	 DWORD PTR __First$[ebp]
  00205	8d 45 60	 lea	 eax, DWORD PTR _result$52[ebp]
  00208	50		 push	 eax
  00209	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@MU?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABMU?$less@X@0@@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float,std::less<void> >
  0020e	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  00211	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00214	3b 45 64	 cmp	 eax, DWORD PTR _result$52[ebp+4]
  00217	75 09		 jne	 SHORT $LN108@GetEmittin
  00219	c7 45 38 01 00
	00 00		 mov	 DWORD PTR tv338[ebp], 1
  00220	eb 04		 jmp	 SHORT $LN109@GetEmittin
$LN108@GetEmittin:
  00222	83 65 38 00	 and	 DWORD PTR tv338[ebp], 0
$LN109@GetEmittin:
  00226	8a 45 38	 mov	 al, BYTE PTR tv338[ebp]
  00229	88 45 69	 mov	 BYTE PTR $T54[ebp], al

; 153  :         return !(*this == _Right);

  0022c	0f b6 45 69	 movzx	 eax, BYTE PTR $T54[ebp]
  00230	85 c0		 test	 eax, eax
  00232	75 09		 jne	 SHORT $LN103@GetEmittin
  00234	c7 45 34 01 00
	00 00		 mov	 DWORD PTR tv330[ebp], 1
  0023b	eb 04		 jmp	 SHORT $LN104@GetEmittin
$LN103@GetEmittin:
  0023d	83 65 34 00	 and	 DWORD PTR tv330[ebp], 0
$LN104@GetEmittin:
  00241	8a 45 34	 mov	 al, BYTE PTR tv330[ebp]
  00244	88 45 68	 mov	 BYTE PTR $T53[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 257  : 	if (result.first != result.second)

  00247	0f b6 45 68	 movzx	 eax, BYTE PTR $T53[ebp]
  0024b	85 c0		 test	 eax, eax
  0024d	74 22		 je	 SHORT $LN8@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  0024f	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00252	89 45 b8	 mov	 DWORD PTR $T17[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00255	ff 75 b8	 push	 DWORD PTR $T17[ebp]
  00258	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0025d	59		 pop	 ecx
  0025e	89 45 94	 mov	 DWORD PTR $T9[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 258  : 		*pReturnValue = result.first->m_Value;

  00261	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00264	8b 4d 94	 mov	 ecx, DWORD PTR $T9[ebp]
  00267	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0026a	89 08		 mov	 DWORD PTR [eax], ecx
  0026c	e9 c2 00 00 00	 jmp	 $LN9@GetEmittin
$LN8@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 92   :         --_Ptr;

  00271	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00274	83 e8 08	 sub	 eax, 8
  00277	89 45 60	 mov	 DWORD PTR _result$52[ebp], eax

; 65   :         return _Ptr;

  0027a	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  0027d	89 45 b0	 mov	 DWORD PTR $T16[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00280	ff 75 b0	 push	 DWORD PTR $T16[ebp]
  00283	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  00288	59		 pop	 ecx
  00289	89 45 a4	 mov	 DWORD PTR $T13[ebp], eax

; 65   :         return _Ptr;

  0028c	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  0028f	89 45 ac	 mov	 DWORD PTR $T15[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00292	ff 75 ac	 push	 DWORD PTR $T15[ebp]
  00295	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0029a	59		 pop	 ecx
  0029b	89 45 a0	 mov	 DWORD PTR $T12[ebp], eax

; 65   :         return _Ptr;

  0029e	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002a1	89 45 a8	 mov	 DWORD PTR $T14[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002a4	ff 75 a8	 push	 DWORD PTR $T14[ebp]
  002a7	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002ac	59		 pop	 ecx
  002ad	89 45 9c	 mov	 DWORD PTR $T11[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  002b0	8b 45 a4	 mov	 eax, DWORD PTR $T13[ebp]
  002b3	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002b7	f3 0f 5c 45 5c	 subss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  002bc	8b 45 a0	 mov	 eax, DWORD PTR $T12[ebp]
  002bf	8b 4d 9c	 mov	 ecx, DWORD PTR $T11[ebp]
  002c2	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  002c6	f3 0f 5c 09	 subss	 xmm1, DWORD PTR [ecx]
  002ca	f3 0f 5e c1	 divss	 xmm0, xmm1
  002ce	f3 0f 11 45 84	 movss	 DWORD PTR _Head$5[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  002d3	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002d6	89 45 98	 mov	 DWORD PTR $T10[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002d9	ff 75 98	 push	 DWORD PTR $T10[ebp]
  002dc	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002e1	59		 pop	 ecx
  002e2	89 45 8c	 mov	 DWORD PTR $T7[ebp], eax

; 65   :         return _Ptr;

  002e5	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  002e8	89 85 7c ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002ee	ff b5 7c ff ff
	ff		 push	 DWORD PTR $T3[ebp]
  002f4	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002f9	59		 pop	 ecx
  002fa	89 45 88	 mov	 DWORD PTR $T6[ebp], eax

; 65   :         return _Ptr;

  002fd	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  00300	89 45 90	 mov	 DWORD PTR $T8[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00303	ff 75 90	 push	 DWORD PTR $T8[ebp]
  00306	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0030b	59		 pop	 ecx
  0030c	89 45 80	 mov	 DWORD PTR $T4[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 263  : 		*pReturnValue = T((result.first->m_Value-result.second->m_Value)*Head+(result.second->m_Value));

  0030f	8b 45 8c	 mov	 eax, DWORD PTR $T7[ebp]
  00312	8b 4d 88	 mov	 ecx, DWORD PTR $T6[ebp]
  00315	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0031a	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  0031f	f3 0f 59 45 84	 mulss	 xmm0, DWORD PTR _Head$5[ebp]
  00324	8b 45 80	 mov	 eax, DWORD PTR $T4[ebp]
  00327	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  0032c	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0032f	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN9@GetEmittin:
$LN3@GetEmittin:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 41   : }

  00333	83 c5 70	 add	 ebp, 112		; 00000070H
  00336	c9		 leave
  00337	c2 08 00	 ret	 8
?GetEmittingDirectionZ@CEmitterProperty@@QAEXMPAM@Z ENDP ; CEmitterProperty::GetEmittingDirectionZ
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
;	COMDAT ?GetEmittingDirectionY@CEmitterProperty@@QAEXMPAM@Z
_TEXT	SEGMENT
$T1 = -140						; size = 4
$T2 = -136						; size = 4
$T3 = -132						; size = 4
$T4 = -128						; size = 4
_Head$5 = -124						; size = 4
$T6 = -120						; size = 4
$T7 = -116						; size = 4
$T8 = -112						; size = 4
$T9 = -108						; size = 4
$T10 = -104						; size = 4
$T11 = -100						; size = 4
$T12 = -96						; size = 4
$T13 = -92						; size = 4
$T14 = -88						; size = 4
$T15 = -84						; size = 4
$T16 = -80						; size = 4
_this$ = -76						; size = 4
$T17 = -72						; size = 4
__First$ = -68						; size = 4
__Last$ = -64						; size = 4
$T18 = -60						; size = 1
$T19 = -56						; size = 4
$T20 = -52						; size = 4
$T21 = -48						; size = 4
___param0$22 = -44					; size = 4
$T23 = -40						; size = 4
___param0$24 = -36					; size = 4
$T25 = -32						; size = 4
__My_data$26 = -28					; size = 4
$T27 = -24						; size = 4
__My_data$28 = -20					; size = 4
$T29 = -16						; size = 4
__My_data$30 = -12					; size = 4
$T31 = -8						; size = 4
__My_data$32 = -4					; size = 4
$T33 = 0						; size = 4
__My_data$34 = 4					; size = 4
$T35 = 8						; size = 4
$T36 = 12						; size = 4
$T37 = 16						; size = 4
$T38 = 20						; size = 4
$T39 = 24						; size = 4
$T40 = 28						; size = 4
___param0$41 = 32					; size = 4
$T42 = 36						; size = 4
$T43 = 40						; size = 4
___param0$44 = 44					; size = 4
$T45 = 48						; size = 4
tv330 = 52						; size = 4
tv338 = 56						; size = 4
__My_data$46 = 60					; size = 4
__My_data$47 = 64					; size = 4
tv238 = 68						; size = 4
__My_data$48 = 72					; size = 4
__My_data$49 = 76					; size = 4
tv200 = 80						; size = 4
__My_data$50 = 84					; size = 4
__Tmp$51 = 88						; size = 4
_fElapsedTime$ = 92					; size = 4
_result$52 = 96						; size = 8
$T53 = 104						; size = 1
$T54 = 105						; size = 1
$T55 = 106						; size = 1
$T56 = 107						; size = 1
_rVector$ = 108						; size = 4
_fTime$ = 120						; size = 4
_pfValue$ = 124						; size = 4
?GetEmittingDirectionY@CEmitterProperty@@QAEXMPAM@Z PROC ; CEmitterProperty::GetEmittingDirectionY, COMDAT
; _this$ = ecx

; 33   : {

  00000	55		 push	 ebp
  00001	8d 6c 24 90	 lea	 ebp, DWORD PTR [esp-112]
  00005	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  0000b	89 4d b4	 mov	 DWORD PTR _this$[ebp], ecx

; 34   : 	//GetTimeEventBlendValue<TTimeEventTableFloat, float>(fTime, m_TimeEventEmittingDirectionY, pfValue);
; 35   : 	GetTimeEventBlendValue(fTime, m_TimeEventEmittingDirectionY, pfValue);

  0000e	8b 45 b4	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 c0 5c	 add	 eax, 92			; 0000005cH
  00014	89 45 6c	 mov	 DWORD PTR _rVector$[ebp], eax
  00017	f3 0f 10 45 78	 movss	 xmm0, DWORD PTR _fTime$[ebp]
  0001c	f3 0f 11 45 5c	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1478 :         auto& _My_data = _Mypair._Myval2;

  00021	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00024	89 45 54	 mov	 DWORD PTR __My_data$50[ebp], eax

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00027	8b 45 54	 mov	 eax, DWORD PTR __My_data$50[ebp]
  0002a	8b 4d 54	 mov	 ecx, DWORD PTR __My_data$50[ebp]
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
  0002f	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00032	75 09		 jne	 SHORT $LN13@GetEmittin
  00034	c7 45 50 01 00
	00 00		 mov	 DWORD PTR tv200[ebp], 1
  0003b	eb 04		 jmp	 SHORT $LN14@GetEmittin
$LN13@GetEmittin:
  0003d	83 65 50 00	 and	 DWORD PTR tv200[ebp], 0
$LN14@GetEmittin:
  00041	8a 45 50	 mov	 al, BYTE PTR tv200[ebp]
  00044	88 45 6b	 mov	 BYTE PTR $T56[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 229  : 	if (rVector.empty())

  00047	0f b6 45 6b	 movzx	 eax, BYTE PTR $T56[ebp]
  0004b	85 c0		 test	 eax, eax
  0004d	74 0f		 je	 SHORT $LN4@GetEmittin

; 230  : 	{
; 231  : 		*pReturnValue = T();

  0004f	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00052	0f 57 c0	 xorps	 xmm0, xmm0
  00055	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 232  : 		return;

  00059	e9 d5 02 00 00	 jmp	 $LN3@GetEmittin
$LN4@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  0005e	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00061	89 45 4c	 mov	 DWORD PTR __My_data$49[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00064	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  00067	89 45 30	 mov	 DWORD PTR $T45[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  0006a	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  0006d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00070	89 45 2c	 mov	 DWORD PTR ___param0$44[ebp], eax
  00073	ff 75 30	 push	 DWORD PTR $T45[ebp]
  00076	ff 75 2c	 push	 DWORD PTR ___param0$44[ebp]
  00079	8d 4d 28	 lea	 ecx, DWORD PTR $T43[ebp]
  0007c	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  00081	8d 45 28	 lea	 eax, DWORD PTR $T43[ebp]
  00084	89 45 08	 mov	 DWORD PTR $T35[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  00087	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0008a	89 45 48	 mov	 DWORD PTR __My_data$48[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  0008d	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00090	89 45 24	 mov	 DWORD PTR $T42[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00093	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00096	8b 00		 mov	 eax, DWORD PTR [eax]
  00098	89 45 20	 mov	 DWORD PTR ___param0$41[ebp], eax
  0009b	ff 75 24	 push	 DWORD PTR $T42[ebp]
  0009e	ff 75 20	 push	 DWORD PTR ___param0$41[ebp]
  000a1	8d 4d 1c	 lea	 ecx, DWORD PTR $T40[ebp]
  000a4	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  000a9	8d 45 1c	 lea	 eax, DWORD PTR $T40[ebp]
  000ac	89 45 18	 mov	 DWORD PTR $T39[ebp], eax

; 287  :         _Vector_iterator _Tmp = *this;

  000af	8b 45 18	 mov	 eax, DWORD PTR $T39[ebp]
  000b2	8b 00		 mov	 eax, DWORD PTR [eax]
  000b4	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 120  :         _Ptr += _Off;

  000b7	33 c0		 xor	 eax, eax
  000b9	40		 inc	 eax
  000ba	c1 e0 03	 shl	 eax, 3
  000bd	03 45 58	 add	 eax, DWORD PTR __Tmp$51[ebp]
  000c0	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 283  :         return *this;

  000c3	8d 45 58	 lea	 eax, DWORD PTR __Tmp$51[ebp]
  000c6	89 45 14	 mov	 DWORD PTR $T38[ebp], eax

; 288  :         return _Tmp += _Off;

  000c9	8b 45 14	 mov	 eax, DWORD PTR $T38[ebp]
  000cc	8b 00		 mov	 eax, DWORD PTR [eax]
  000ce	89 45 10	 mov	 DWORD PTR $T37[ebp], eax
  000d1	8d 45 10	 lea	 eax, DWORD PTR $T37[ebp]
  000d4	89 45 0c	 mov	 DWORD PTR $T36[ebp], eax

; 149  :         return _Ptr == _Right._Ptr;

  000d7	8b 45 0c	 mov	 eax, DWORD PTR $T36[ebp]
  000da	8b 4d 08	 mov	 ecx, DWORD PTR $T35[ebp]
  000dd	8b 00		 mov	 eax, DWORD PTR [eax]
  000df	3b 01		 cmp	 eax, DWORD PTR [ecx]
  000e1	75 09		 jne	 SHORT $LN48@GetEmittin
  000e3	c7 45 44 01 00
	00 00		 mov	 DWORD PTR tv238[ebp], 1
  000ea	eb 04		 jmp	 SHORT $LN49@GetEmittin
$LN48@GetEmittin:
  000ec	83 65 44 00	 and	 DWORD PTR tv238[ebp], 0
$LN49@GetEmittin:
  000f0	8a 45 44	 mov	 al, BYTE PTR tv238[ebp]
  000f3	88 45 6a	 mov	 BYTE PTR $T55[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 235  : 	if(rVector.begin()+1==rVector.end())

  000f6	0f b6 45 6a	 movzx	 eax, BYTE PTR $T55[ebp]
  000fa	85 c0		 test	 eax, eax
  000fc	74 1e		 je	 SHORT $LN5@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  000fe	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00101	89 45 04	 mov	 DWORD PTR __My_data$34[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00104	8b 45 04	 mov	 eax, DWORD PTR __My_data$34[ebp]
  00107	8b 00		 mov	 eax, DWORD PTR [eax]
  00109	89 45 00	 mov	 DWORD PTR $T33[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 237  : 		*pReturnValue = rVector.front().m_Value;

  0010c	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0010f	8b 4d 00	 mov	 ecx, DWORD PTR $T33[ebp]
  00112	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00115	89 08		 mov	 DWORD PTR [eax], ecx

; 238  : 		return;

  00117	e9 17 02 00 00	 jmp	 $LN3@GetEmittin
$LN5@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  0011c	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0011f	89 45 fc	 mov	 DWORD PTR __My_data$32[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00122	8b 45 fc	 mov	 eax, DWORD PTR __My_data$32[ebp]
  00125	8b 00		 mov	 eax, DWORD PTR [eax]
  00127	89 45 f8	 mov	 DWORD PTR $T31[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 241  : 	if (fElapsedTime < rVector.front().m_fTime)

  0012a	8b 45 f8	 mov	 eax, DWORD PTR $T31[ebp]
  0012d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00131	0f 2f 45 5c	 comiss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00135	76 1e		 jbe	 SHORT $LN6@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  00137	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0013a	89 45 f4	 mov	 DWORD PTR __My_data$30[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  0013d	8b 45 f4	 mov	 eax, DWORD PTR __My_data$30[ebp]
  00140	8b 00		 mov	 eax, DWORD PTR [eax]
  00142	89 45 f0	 mov	 DWORD PTR $T29[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 243  : 		*pReturnValue = rVector.front().m_Value;

  00145	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00148	8b 4d f0	 mov	 ecx, DWORD PTR $T29[ebp]
  0014b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0014e	89 08		 mov	 DWORD PTR [eax], ecx

; 244  : 		return;

  00150	e9 de 01 00 00	 jmp	 $LN3@GetEmittin
$LN6@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00155	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00158	89 45 ec	 mov	 DWORD PTR __My_data$28[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0015b	6a 08		 push	 8
  0015d	58		 pop	 eax
  0015e	6b c0 ff	 imul	 eax, eax, -1
  00161	8b 4d ec	 mov	 ecx, DWORD PTR __My_data$28[ebp]
  00164	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00167	89 45 e8	 mov	 DWORD PTR $T27[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 247  : 	if (fElapsedTime > rVector.back().m_fTime)

  0016a	8b 45 e8	 mov	 eax, DWORD PTR $T27[ebp]
  0016d	f3 0f 10 45 5c	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00172	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00175	76 25		 jbe	 SHORT $LN7@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00177	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0017a	89 45 e4	 mov	 DWORD PTR __My_data$26[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0017d	6a 08		 push	 8
  0017f	58		 pop	 eax
  00180	6b c0 ff	 imul	 eax, eax, -1
  00183	8b 4d e4	 mov	 ecx, DWORD PTR __My_data$26[ebp]
  00186	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00189	89 45 e0	 mov	 DWORD PTR $T25[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 249  : 		*pReturnValue = rVector.back().m_Value;

  0018c	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0018f	8b 4d e0	 mov	 ecx, DWORD PTR $T25[ebp]
  00192	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00195	89 08		 mov	 DWORD PTR [eax], ecx

; 250  : 		return;

  00197	e9 97 01 00 00	 jmp	 $LN3@GetEmittin
$LN7@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  0019c	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0019f	89 45 40	 mov	 DWORD PTR __My_data$47[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001a2	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001a5	89 85 74 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001ab	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001ae	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001b1	89 45 dc	 mov	 DWORD PTR ___param0$24[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001b4	8b 45 dc	 mov	 eax, DWORD PTR ___param0$24[ebp]
  001b7	89 45 d8	 mov	 DWORD PTR $T23[ebp], eax

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001ba	8d 45 d8	 lea	 eax, DWORD PTR $T23[ebp]
  001bd	89 45 cc	 mov	 DWORD PTR $T20[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  001c0	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  001c3	89 45 3c	 mov	 DWORD PTR __My_data$46[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001c6	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001c9	89 85 78 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001cf	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001d2	8b 00		 mov	 eax, DWORD PTR [eax]
  001d4	89 45 d4	 mov	 DWORD PTR ___param0$22[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001d7	8b 45 d4	 mov	 eax, DWORD PTR ___param0$22[ebp]
  001da	89 45 d0	 mov	 DWORD PTR $T21[ebp], eax

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001dd	8d 45 d0	 lea	 eax, DWORD PTR $T21[ebp]
  001e0	89 45 c8	 mov	 DWORD PTR $T19[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 255  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  001e3	8b 45 cc	 mov	 eax, DWORD PTR $T20[ebp]
  001e6	8b 00		 mov	 eax, DWORD PTR [eax]
  001e8	89 45 c0	 mov	 DWORD PTR __Last$[ebp], eax
  001eb	8b 45 c8	 mov	 eax, DWORD PTR $T19[ebp]
  001ee	8b 00		 mov	 eax, DWORD PTR [eax]
  001f0	89 45 bc	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6851 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  001f3	33 c0		 xor	 eax, eax
  001f5	88 45 c4	 mov	 BYTE PTR $T18[ebp], al
  001f8	ff 75 c4	 push	 DWORD PTR $T18[ebp]
  001fb	8d 45 5c	 lea	 eax, DWORD PTR _fElapsedTime$[ebp]
  001fe	50		 push	 eax
  001ff	ff 75 c0	 push	 DWORD PTR __Last$[ebp]
  00202	ff 75 bc	 push	 DWORD PTR __First$[ebp]
  00205	8d 45 60	 lea	 eax, DWORD PTR _result$52[ebp]
  00208	50		 push	 eax
  00209	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@MU?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABMU?$less@X@0@@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float,std::less<void> >
  0020e	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  00211	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00214	3b 45 64	 cmp	 eax, DWORD PTR _result$52[ebp+4]
  00217	75 09		 jne	 SHORT $LN108@GetEmittin
  00219	c7 45 38 01 00
	00 00		 mov	 DWORD PTR tv338[ebp], 1
  00220	eb 04		 jmp	 SHORT $LN109@GetEmittin
$LN108@GetEmittin:
  00222	83 65 38 00	 and	 DWORD PTR tv338[ebp], 0
$LN109@GetEmittin:
  00226	8a 45 38	 mov	 al, BYTE PTR tv338[ebp]
  00229	88 45 69	 mov	 BYTE PTR $T54[ebp], al

; 153  :         return !(*this == _Right);

  0022c	0f b6 45 69	 movzx	 eax, BYTE PTR $T54[ebp]
  00230	85 c0		 test	 eax, eax
  00232	75 09		 jne	 SHORT $LN103@GetEmittin
  00234	c7 45 34 01 00
	00 00		 mov	 DWORD PTR tv330[ebp], 1
  0023b	eb 04		 jmp	 SHORT $LN104@GetEmittin
$LN103@GetEmittin:
  0023d	83 65 34 00	 and	 DWORD PTR tv330[ebp], 0
$LN104@GetEmittin:
  00241	8a 45 34	 mov	 al, BYTE PTR tv330[ebp]
  00244	88 45 68	 mov	 BYTE PTR $T53[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 257  : 	if (result.first != result.second)

  00247	0f b6 45 68	 movzx	 eax, BYTE PTR $T53[ebp]
  0024b	85 c0		 test	 eax, eax
  0024d	74 22		 je	 SHORT $LN8@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  0024f	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00252	89 45 b8	 mov	 DWORD PTR $T17[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00255	ff 75 b8	 push	 DWORD PTR $T17[ebp]
  00258	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0025d	59		 pop	 ecx
  0025e	89 45 94	 mov	 DWORD PTR $T9[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 258  : 		*pReturnValue = result.first->m_Value;

  00261	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00264	8b 4d 94	 mov	 ecx, DWORD PTR $T9[ebp]
  00267	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0026a	89 08		 mov	 DWORD PTR [eax], ecx
  0026c	e9 c2 00 00 00	 jmp	 $LN9@GetEmittin
$LN8@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 92   :         --_Ptr;

  00271	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00274	83 e8 08	 sub	 eax, 8
  00277	89 45 60	 mov	 DWORD PTR _result$52[ebp], eax

; 65   :         return _Ptr;

  0027a	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  0027d	89 45 b0	 mov	 DWORD PTR $T16[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00280	ff 75 b0	 push	 DWORD PTR $T16[ebp]
  00283	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  00288	59		 pop	 ecx
  00289	89 45 a4	 mov	 DWORD PTR $T13[ebp], eax

; 65   :         return _Ptr;

  0028c	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  0028f	89 45 ac	 mov	 DWORD PTR $T15[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00292	ff 75 ac	 push	 DWORD PTR $T15[ebp]
  00295	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0029a	59		 pop	 ecx
  0029b	89 45 a0	 mov	 DWORD PTR $T12[ebp], eax

; 65   :         return _Ptr;

  0029e	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002a1	89 45 a8	 mov	 DWORD PTR $T14[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002a4	ff 75 a8	 push	 DWORD PTR $T14[ebp]
  002a7	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002ac	59		 pop	 ecx
  002ad	89 45 9c	 mov	 DWORD PTR $T11[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  002b0	8b 45 a4	 mov	 eax, DWORD PTR $T13[ebp]
  002b3	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002b7	f3 0f 5c 45 5c	 subss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  002bc	8b 45 a0	 mov	 eax, DWORD PTR $T12[ebp]
  002bf	8b 4d 9c	 mov	 ecx, DWORD PTR $T11[ebp]
  002c2	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  002c6	f3 0f 5c 09	 subss	 xmm1, DWORD PTR [ecx]
  002ca	f3 0f 5e c1	 divss	 xmm0, xmm1
  002ce	f3 0f 11 45 84	 movss	 DWORD PTR _Head$5[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  002d3	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002d6	89 45 98	 mov	 DWORD PTR $T10[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002d9	ff 75 98	 push	 DWORD PTR $T10[ebp]
  002dc	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002e1	59		 pop	 ecx
  002e2	89 45 8c	 mov	 DWORD PTR $T7[ebp], eax

; 65   :         return _Ptr;

  002e5	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  002e8	89 85 7c ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002ee	ff b5 7c ff ff
	ff		 push	 DWORD PTR $T3[ebp]
  002f4	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002f9	59		 pop	 ecx
  002fa	89 45 88	 mov	 DWORD PTR $T6[ebp], eax

; 65   :         return _Ptr;

  002fd	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  00300	89 45 90	 mov	 DWORD PTR $T8[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00303	ff 75 90	 push	 DWORD PTR $T8[ebp]
  00306	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0030b	59		 pop	 ecx
  0030c	89 45 80	 mov	 DWORD PTR $T4[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 263  : 		*pReturnValue = T((result.first->m_Value-result.second->m_Value)*Head+(result.second->m_Value));

  0030f	8b 45 8c	 mov	 eax, DWORD PTR $T7[ebp]
  00312	8b 4d 88	 mov	 ecx, DWORD PTR $T6[ebp]
  00315	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0031a	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  0031f	f3 0f 59 45 84	 mulss	 xmm0, DWORD PTR _Head$5[ebp]
  00324	8b 45 80	 mov	 eax, DWORD PTR $T4[ebp]
  00327	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  0032c	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0032f	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN9@GetEmittin:
$LN3@GetEmittin:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 36   : }

  00333	83 c5 70	 add	 ebp, 112		; 00000070H
  00336	c9		 leave
  00337	c2 08 00	 ret	 8
?GetEmittingDirectionY@CEmitterProperty@@QAEXMPAM@Z ENDP ; CEmitterProperty::GetEmittingDirectionY
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
;	COMDAT ?GetEmittingDirectionX@CEmitterProperty@@QAEXMPAM@Z
_TEXT	SEGMENT
$T1 = -140						; size = 4
$T2 = -136						; size = 4
$T3 = -132						; size = 4
$T4 = -128						; size = 4
_Head$5 = -124						; size = 4
$T6 = -120						; size = 4
$T7 = -116						; size = 4
$T8 = -112						; size = 4
$T9 = -108						; size = 4
$T10 = -104						; size = 4
$T11 = -100						; size = 4
$T12 = -96						; size = 4
$T13 = -92						; size = 4
$T14 = -88						; size = 4
$T15 = -84						; size = 4
$T16 = -80						; size = 4
_this$ = -76						; size = 4
$T17 = -72						; size = 4
__First$ = -68						; size = 4
__Last$ = -64						; size = 4
$T18 = -60						; size = 1
$T19 = -56						; size = 4
$T20 = -52						; size = 4
$T21 = -48						; size = 4
___param0$22 = -44					; size = 4
$T23 = -40						; size = 4
___param0$24 = -36					; size = 4
$T25 = -32						; size = 4
__My_data$26 = -28					; size = 4
$T27 = -24						; size = 4
__My_data$28 = -20					; size = 4
$T29 = -16						; size = 4
__My_data$30 = -12					; size = 4
$T31 = -8						; size = 4
__My_data$32 = -4					; size = 4
$T33 = 0						; size = 4
__My_data$34 = 4					; size = 4
$T35 = 8						; size = 4
$T36 = 12						; size = 4
$T37 = 16						; size = 4
$T38 = 20						; size = 4
$T39 = 24						; size = 4
$T40 = 28						; size = 4
___param0$41 = 32					; size = 4
$T42 = 36						; size = 4
$T43 = 40						; size = 4
___param0$44 = 44					; size = 4
$T45 = 48						; size = 4
tv330 = 52						; size = 4
tv338 = 56						; size = 4
__My_data$46 = 60					; size = 4
__My_data$47 = 64					; size = 4
tv238 = 68						; size = 4
__My_data$48 = 72					; size = 4
__My_data$49 = 76					; size = 4
tv200 = 80						; size = 4
__My_data$50 = 84					; size = 4
__Tmp$51 = 88						; size = 4
_fElapsedTime$ = 92					; size = 4
_result$52 = 96						; size = 8
$T53 = 104						; size = 1
$T54 = 105						; size = 1
$T55 = 106						; size = 1
$T56 = 107						; size = 1
_rVector$ = 108						; size = 4
_fTime$ = 120						; size = 4
_pfValue$ = 124						; size = 4
?GetEmittingDirectionX@CEmitterProperty@@QAEXMPAM@Z PROC ; CEmitterProperty::GetEmittingDirectionX, COMDAT
; _this$ = ecx

; 28   : {

  00000	55		 push	 ebp
  00001	8d 6c 24 90	 lea	 ebp, DWORD PTR [esp-112]
  00005	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  0000b	89 4d b4	 mov	 DWORD PTR _this$[ebp], ecx

; 29   : 	//GetTimeEventBlendValue<TTimeEventTableFloat, float>(fTime, m_TimeEventEmittingDirectionX, pfValue);
; 30   : 	GetTimeEventBlendValue(fTime, m_TimeEventEmittingDirectionX, pfValue);

  0000e	8b 45 b4	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 c0 50	 add	 eax, 80			; 00000050H
  00014	89 45 6c	 mov	 DWORD PTR _rVector$[ebp], eax
  00017	f3 0f 10 45 78	 movss	 xmm0, DWORD PTR _fTime$[ebp]
  0001c	f3 0f 11 45 5c	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1478 :         auto& _My_data = _Mypair._Myval2;

  00021	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00024	89 45 54	 mov	 DWORD PTR __My_data$50[ebp], eax

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00027	8b 45 54	 mov	 eax, DWORD PTR __My_data$50[ebp]
  0002a	8b 4d 54	 mov	 ecx, DWORD PTR __My_data$50[ebp]
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
  0002f	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00032	75 09		 jne	 SHORT $LN13@GetEmittin
  00034	c7 45 50 01 00
	00 00		 mov	 DWORD PTR tv200[ebp], 1
  0003b	eb 04		 jmp	 SHORT $LN14@GetEmittin
$LN13@GetEmittin:
  0003d	83 65 50 00	 and	 DWORD PTR tv200[ebp], 0
$LN14@GetEmittin:
  00041	8a 45 50	 mov	 al, BYTE PTR tv200[ebp]
  00044	88 45 6b	 mov	 BYTE PTR $T56[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 229  : 	if (rVector.empty())

  00047	0f b6 45 6b	 movzx	 eax, BYTE PTR $T56[ebp]
  0004b	85 c0		 test	 eax, eax
  0004d	74 0f		 je	 SHORT $LN4@GetEmittin

; 230  : 	{
; 231  : 		*pReturnValue = T();

  0004f	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00052	0f 57 c0	 xorps	 xmm0, xmm0
  00055	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 232  : 		return;

  00059	e9 d5 02 00 00	 jmp	 $LN3@GetEmittin
$LN4@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  0005e	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00061	89 45 4c	 mov	 DWORD PTR __My_data$49[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00064	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  00067	89 45 30	 mov	 DWORD PTR $T45[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  0006a	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  0006d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00070	89 45 2c	 mov	 DWORD PTR ___param0$44[ebp], eax
  00073	ff 75 30	 push	 DWORD PTR $T45[ebp]
  00076	ff 75 2c	 push	 DWORD PTR ___param0$44[ebp]
  00079	8d 4d 28	 lea	 ecx, DWORD PTR $T43[ebp]
  0007c	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  00081	8d 45 28	 lea	 eax, DWORD PTR $T43[ebp]
  00084	89 45 08	 mov	 DWORD PTR $T35[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  00087	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0008a	89 45 48	 mov	 DWORD PTR __My_data$48[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  0008d	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00090	89 45 24	 mov	 DWORD PTR $T42[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00093	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00096	8b 00		 mov	 eax, DWORD PTR [eax]
  00098	89 45 20	 mov	 DWORD PTR ___param0$41[ebp], eax
  0009b	ff 75 24	 push	 DWORD PTR $T42[ebp]
  0009e	ff 75 20	 push	 DWORD PTR ___param0$41[ebp]
  000a1	8d 4d 1c	 lea	 ecx, DWORD PTR $T40[ebp]
  000a4	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  000a9	8d 45 1c	 lea	 eax, DWORD PTR $T40[ebp]
  000ac	89 45 18	 mov	 DWORD PTR $T39[ebp], eax

; 287  :         _Vector_iterator _Tmp = *this;

  000af	8b 45 18	 mov	 eax, DWORD PTR $T39[ebp]
  000b2	8b 00		 mov	 eax, DWORD PTR [eax]
  000b4	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 120  :         _Ptr += _Off;

  000b7	33 c0		 xor	 eax, eax
  000b9	40		 inc	 eax
  000ba	c1 e0 03	 shl	 eax, 3
  000bd	03 45 58	 add	 eax, DWORD PTR __Tmp$51[ebp]
  000c0	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 283  :         return *this;

  000c3	8d 45 58	 lea	 eax, DWORD PTR __Tmp$51[ebp]
  000c6	89 45 14	 mov	 DWORD PTR $T38[ebp], eax

; 288  :         return _Tmp += _Off;

  000c9	8b 45 14	 mov	 eax, DWORD PTR $T38[ebp]
  000cc	8b 00		 mov	 eax, DWORD PTR [eax]
  000ce	89 45 10	 mov	 DWORD PTR $T37[ebp], eax
  000d1	8d 45 10	 lea	 eax, DWORD PTR $T37[ebp]
  000d4	89 45 0c	 mov	 DWORD PTR $T36[ebp], eax

; 149  :         return _Ptr == _Right._Ptr;

  000d7	8b 45 0c	 mov	 eax, DWORD PTR $T36[ebp]
  000da	8b 4d 08	 mov	 ecx, DWORD PTR $T35[ebp]
  000dd	8b 00		 mov	 eax, DWORD PTR [eax]
  000df	3b 01		 cmp	 eax, DWORD PTR [ecx]
  000e1	75 09		 jne	 SHORT $LN48@GetEmittin
  000e3	c7 45 44 01 00
	00 00		 mov	 DWORD PTR tv238[ebp], 1
  000ea	eb 04		 jmp	 SHORT $LN49@GetEmittin
$LN48@GetEmittin:
  000ec	83 65 44 00	 and	 DWORD PTR tv238[ebp], 0
$LN49@GetEmittin:
  000f0	8a 45 44	 mov	 al, BYTE PTR tv238[ebp]
  000f3	88 45 6a	 mov	 BYTE PTR $T55[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 235  : 	if(rVector.begin()+1==rVector.end())

  000f6	0f b6 45 6a	 movzx	 eax, BYTE PTR $T55[ebp]
  000fa	85 c0		 test	 eax, eax
  000fc	74 1e		 je	 SHORT $LN5@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  000fe	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00101	89 45 04	 mov	 DWORD PTR __My_data$34[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00104	8b 45 04	 mov	 eax, DWORD PTR __My_data$34[ebp]
  00107	8b 00		 mov	 eax, DWORD PTR [eax]
  00109	89 45 00	 mov	 DWORD PTR $T33[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 237  : 		*pReturnValue = rVector.front().m_Value;

  0010c	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0010f	8b 4d 00	 mov	 ecx, DWORD PTR $T33[ebp]
  00112	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00115	89 08		 mov	 DWORD PTR [eax], ecx

; 238  : 		return;

  00117	e9 17 02 00 00	 jmp	 $LN3@GetEmittin
$LN5@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  0011c	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0011f	89 45 fc	 mov	 DWORD PTR __My_data$32[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00122	8b 45 fc	 mov	 eax, DWORD PTR __My_data$32[ebp]
  00125	8b 00		 mov	 eax, DWORD PTR [eax]
  00127	89 45 f8	 mov	 DWORD PTR $T31[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 241  : 	if (fElapsedTime < rVector.front().m_fTime)

  0012a	8b 45 f8	 mov	 eax, DWORD PTR $T31[ebp]
  0012d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00131	0f 2f 45 5c	 comiss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00135	76 1e		 jbe	 SHORT $LN6@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  00137	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0013a	89 45 f4	 mov	 DWORD PTR __My_data$30[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  0013d	8b 45 f4	 mov	 eax, DWORD PTR __My_data$30[ebp]
  00140	8b 00		 mov	 eax, DWORD PTR [eax]
  00142	89 45 f0	 mov	 DWORD PTR $T29[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 243  : 		*pReturnValue = rVector.front().m_Value;

  00145	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00148	8b 4d f0	 mov	 ecx, DWORD PTR $T29[ebp]
  0014b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0014e	89 08		 mov	 DWORD PTR [eax], ecx

; 244  : 		return;

  00150	e9 de 01 00 00	 jmp	 $LN3@GetEmittin
$LN6@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00155	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00158	89 45 ec	 mov	 DWORD PTR __My_data$28[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0015b	6a 08		 push	 8
  0015d	58		 pop	 eax
  0015e	6b c0 ff	 imul	 eax, eax, -1
  00161	8b 4d ec	 mov	 ecx, DWORD PTR __My_data$28[ebp]
  00164	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00167	89 45 e8	 mov	 DWORD PTR $T27[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 247  : 	if (fElapsedTime > rVector.back().m_fTime)

  0016a	8b 45 e8	 mov	 eax, DWORD PTR $T27[ebp]
  0016d	f3 0f 10 45 5c	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00172	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00175	76 25		 jbe	 SHORT $LN7@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00177	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0017a	89 45 e4	 mov	 DWORD PTR __My_data$26[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0017d	6a 08		 push	 8
  0017f	58		 pop	 eax
  00180	6b c0 ff	 imul	 eax, eax, -1
  00183	8b 4d e4	 mov	 ecx, DWORD PTR __My_data$26[ebp]
  00186	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00189	89 45 e0	 mov	 DWORD PTR $T25[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 249  : 		*pReturnValue = rVector.back().m_Value;

  0018c	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0018f	8b 4d e0	 mov	 ecx, DWORD PTR $T25[ebp]
  00192	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00195	89 08		 mov	 DWORD PTR [eax], ecx

; 250  : 		return;

  00197	e9 97 01 00 00	 jmp	 $LN3@GetEmittin
$LN7@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  0019c	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0019f	89 45 40	 mov	 DWORD PTR __My_data$47[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001a2	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001a5	89 85 74 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001ab	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001ae	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001b1	89 45 dc	 mov	 DWORD PTR ___param0$24[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001b4	8b 45 dc	 mov	 eax, DWORD PTR ___param0$24[ebp]
  001b7	89 45 d8	 mov	 DWORD PTR $T23[ebp], eax

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001ba	8d 45 d8	 lea	 eax, DWORD PTR $T23[ebp]
  001bd	89 45 cc	 mov	 DWORD PTR $T20[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  001c0	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  001c3	89 45 3c	 mov	 DWORD PTR __My_data$46[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001c6	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001c9	89 85 78 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001cf	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001d2	8b 00		 mov	 eax, DWORD PTR [eax]
  001d4	89 45 d4	 mov	 DWORD PTR ___param0$22[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001d7	8b 45 d4	 mov	 eax, DWORD PTR ___param0$22[ebp]
  001da	89 45 d0	 mov	 DWORD PTR $T21[ebp], eax

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001dd	8d 45 d0	 lea	 eax, DWORD PTR $T21[ebp]
  001e0	89 45 c8	 mov	 DWORD PTR $T19[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 255  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  001e3	8b 45 cc	 mov	 eax, DWORD PTR $T20[ebp]
  001e6	8b 00		 mov	 eax, DWORD PTR [eax]
  001e8	89 45 c0	 mov	 DWORD PTR __Last$[ebp], eax
  001eb	8b 45 c8	 mov	 eax, DWORD PTR $T19[ebp]
  001ee	8b 00		 mov	 eax, DWORD PTR [eax]
  001f0	89 45 bc	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6851 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  001f3	33 c0		 xor	 eax, eax
  001f5	88 45 c4	 mov	 BYTE PTR $T18[ebp], al
  001f8	ff 75 c4	 push	 DWORD PTR $T18[ebp]
  001fb	8d 45 5c	 lea	 eax, DWORD PTR _fElapsedTime$[ebp]
  001fe	50		 push	 eax
  001ff	ff 75 c0	 push	 DWORD PTR __Last$[ebp]
  00202	ff 75 bc	 push	 DWORD PTR __First$[ebp]
  00205	8d 45 60	 lea	 eax, DWORD PTR _result$52[ebp]
  00208	50		 push	 eax
  00209	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@MU?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABMU?$less@X@0@@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float,std::less<void> >
  0020e	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  00211	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00214	3b 45 64	 cmp	 eax, DWORD PTR _result$52[ebp+4]
  00217	75 09		 jne	 SHORT $LN108@GetEmittin
  00219	c7 45 38 01 00
	00 00		 mov	 DWORD PTR tv338[ebp], 1
  00220	eb 04		 jmp	 SHORT $LN109@GetEmittin
$LN108@GetEmittin:
  00222	83 65 38 00	 and	 DWORD PTR tv338[ebp], 0
$LN109@GetEmittin:
  00226	8a 45 38	 mov	 al, BYTE PTR tv338[ebp]
  00229	88 45 69	 mov	 BYTE PTR $T54[ebp], al

; 153  :         return !(*this == _Right);

  0022c	0f b6 45 69	 movzx	 eax, BYTE PTR $T54[ebp]
  00230	85 c0		 test	 eax, eax
  00232	75 09		 jne	 SHORT $LN103@GetEmittin
  00234	c7 45 34 01 00
	00 00		 mov	 DWORD PTR tv330[ebp], 1
  0023b	eb 04		 jmp	 SHORT $LN104@GetEmittin
$LN103@GetEmittin:
  0023d	83 65 34 00	 and	 DWORD PTR tv330[ebp], 0
$LN104@GetEmittin:
  00241	8a 45 34	 mov	 al, BYTE PTR tv330[ebp]
  00244	88 45 68	 mov	 BYTE PTR $T53[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 257  : 	if (result.first != result.second)

  00247	0f b6 45 68	 movzx	 eax, BYTE PTR $T53[ebp]
  0024b	85 c0		 test	 eax, eax
  0024d	74 22		 je	 SHORT $LN8@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  0024f	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00252	89 45 b8	 mov	 DWORD PTR $T17[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00255	ff 75 b8	 push	 DWORD PTR $T17[ebp]
  00258	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0025d	59		 pop	 ecx
  0025e	89 45 94	 mov	 DWORD PTR $T9[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 258  : 		*pReturnValue = result.first->m_Value;

  00261	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00264	8b 4d 94	 mov	 ecx, DWORD PTR $T9[ebp]
  00267	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0026a	89 08		 mov	 DWORD PTR [eax], ecx
  0026c	e9 c2 00 00 00	 jmp	 $LN9@GetEmittin
$LN8@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 92   :         --_Ptr;

  00271	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00274	83 e8 08	 sub	 eax, 8
  00277	89 45 60	 mov	 DWORD PTR _result$52[ebp], eax

; 65   :         return _Ptr;

  0027a	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  0027d	89 45 b0	 mov	 DWORD PTR $T16[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00280	ff 75 b0	 push	 DWORD PTR $T16[ebp]
  00283	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  00288	59		 pop	 ecx
  00289	89 45 a4	 mov	 DWORD PTR $T13[ebp], eax

; 65   :         return _Ptr;

  0028c	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  0028f	89 45 ac	 mov	 DWORD PTR $T15[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00292	ff 75 ac	 push	 DWORD PTR $T15[ebp]
  00295	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0029a	59		 pop	 ecx
  0029b	89 45 a0	 mov	 DWORD PTR $T12[ebp], eax

; 65   :         return _Ptr;

  0029e	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002a1	89 45 a8	 mov	 DWORD PTR $T14[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002a4	ff 75 a8	 push	 DWORD PTR $T14[ebp]
  002a7	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002ac	59		 pop	 ecx
  002ad	89 45 9c	 mov	 DWORD PTR $T11[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  002b0	8b 45 a4	 mov	 eax, DWORD PTR $T13[ebp]
  002b3	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002b7	f3 0f 5c 45 5c	 subss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  002bc	8b 45 a0	 mov	 eax, DWORD PTR $T12[ebp]
  002bf	8b 4d 9c	 mov	 ecx, DWORD PTR $T11[ebp]
  002c2	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  002c6	f3 0f 5c 09	 subss	 xmm1, DWORD PTR [ecx]
  002ca	f3 0f 5e c1	 divss	 xmm0, xmm1
  002ce	f3 0f 11 45 84	 movss	 DWORD PTR _Head$5[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  002d3	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002d6	89 45 98	 mov	 DWORD PTR $T10[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002d9	ff 75 98	 push	 DWORD PTR $T10[ebp]
  002dc	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002e1	59		 pop	 ecx
  002e2	89 45 8c	 mov	 DWORD PTR $T7[ebp], eax

; 65   :         return _Ptr;

  002e5	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  002e8	89 85 7c ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002ee	ff b5 7c ff ff
	ff		 push	 DWORD PTR $T3[ebp]
  002f4	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002f9	59		 pop	 ecx
  002fa	89 45 88	 mov	 DWORD PTR $T6[ebp], eax

; 65   :         return _Ptr;

  002fd	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  00300	89 45 90	 mov	 DWORD PTR $T8[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00303	ff 75 90	 push	 DWORD PTR $T8[ebp]
  00306	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0030b	59		 pop	 ecx
  0030c	89 45 80	 mov	 DWORD PTR $T4[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 263  : 		*pReturnValue = T((result.first->m_Value-result.second->m_Value)*Head+(result.second->m_Value));

  0030f	8b 45 8c	 mov	 eax, DWORD PTR $T7[ebp]
  00312	8b 4d 88	 mov	 ecx, DWORD PTR $T6[ebp]
  00315	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0031a	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  0031f	f3 0f 59 45 84	 mulss	 xmm0, DWORD PTR _Head$5[ebp]
  00324	8b 45 80	 mov	 eax, DWORD PTR $T4[ebp]
  00327	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  0032c	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0032f	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN9@GetEmittin:
$LN3@GetEmittin:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 31   : }

  00333	83 c5 70	 add	 ebp, 112		; 00000070H
  00336	c9		 leave
  00337	c2 08 00	 ret	 8
?GetEmittingDirectionX@CEmitterProperty@@QAEXMPAM@Z ENDP ; CEmitterProperty::GetEmittingDirectionX
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
;	COMDAT ?GetEmittingAngularVelocity@CEmitterProperty@@QAEXMPAM@Z
_TEXT	SEGMENT
$T1 = -140						; size = 4
$T2 = -136						; size = 4
$T3 = -132						; size = 4
$T4 = -128						; size = 4
_Head$5 = -124						; size = 4
$T6 = -120						; size = 4
$T7 = -116						; size = 4
$T8 = -112						; size = 4
$T9 = -108						; size = 4
$T10 = -104						; size = 4
$T11 = -100						; size = 4
$T12 = -96						; size = 4
$T13 = -92						; size = 4
$T14 = -88						; size = 4
$T15 = -84						; size = 4
$T16 = -80						; size = 4
_this$ = -76						; size = 4
$T17 = -72						; size = 4
__First$ = -68						; size = 4
__Last$ = -64						; size = 4
$T18 = -60						; size = 1
$T19 = -56						; size = 4
$T20 = -52						; size = 4
$T21 = -48						; size = 4
___param0$22 = -44					; size = 4
$T23 = -40						; size = 4
___param0$24 = -36					; size = 4
$T25 = -32						; size = 4
__My_data$26 = -28					; size = 4
$T27 = -24						; size = 4
__My_data$28 = -20					; size = 4
$T29 = -16						; size = 4
__My_data$30 = -12					; size = 4
$T31 = -8						; size = 4
__My_data$32 = -4					; size = 4
$T33 = 0						; size = 4
__My_data$34 = 4					; size = 4
$T35 = 8						; size = 4
$T36 = 12						; size = 4
$T37 = 16						; size = 4
$T38 = 20						; size = 4
$T39 = 24						; size = 4
$T40 = 28						; size = 4
___param0$41 = 32					; size = 4
$T42 = 36						; size = 4
$T43 = 40						; size = 4
___param0$44 = 44					; size = 4
$T45 = 48						; size = 4
tv330 = 52						; size = 4
tv338 = 56						; size = 4
__My_data$46 = 60					; size = 4
__My_data$47 = 64					; size = 4
tv238 = 68						; size = 4
__My_data$48 = 72					; size = 4
__My_data$49 = 76					; size = 4
tv200 = 80						; size = 4
__My_data$50 = 84					; size = 4
__Tmp$51 = 88						; size = 4
_fElapsedTime$ = 92					; size = 4
_result$52 = 96						; size = 8
$T53 = 104						; size = 1
$T54 = 105						; size = 1
$T55 = 106						; size = 1
$T56 = 107						; size = 1
_rVector$ = 108						; size = 4
_fTime$ = 120						; size = 4
_pfValue$ = 124						; size = 4
?GetEmittingAngularVelocity@CEmitterProperty@@QAEXMPAM@Z PROC ; CEmitterProperty::GetEmittingAngularVelocity, COMDAT
; _this$ = ecx

; 23   : {

  00000	55		 push	 ebp
  00001	8d 6c 24 90	 lea	 ebp, DWORD PTR [esp-112]
  00005	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  0000b	89 4d b4	 mov	 DWORD PTR _this$[ebp], ecx

; 24   : 	//GetTimeEventBlendValue<TTimeEventTableFloat, float>(fTime, m_TimeEventEmittingAngularVelocity, pfValue);
; 25   : 	GetTimeEventBlendValue(fTime, m_TimeEventEmittingAngularVelocity, pfValue);

  0000e	8b 45 b4	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 c0 44	 add	 eax, 68			; 00000044H
  00014	89 45 6c	 mov	 DWORD PTR _rVector$[ebp], eax
  00017	f3 0f 10 45 78	 movss	 xmm0, DWORD PTR _fTime$[ebp]
  0001c	f3 0f 11 45 5c	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1478 :         auto& _My_data = _Mypair._Myval2;

  00021	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00024	89 45 54	 mov	 DWORD PTR __My_data$50[ebp], eax

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00027	8b 45 54	 mov	 eax, DWORD PTR __My_data$50[ebp]
  0002a	8b 4d 54	 mov	 ecx, DWORD PTR __My_data$50[ebp]
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
  0002f	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00032	75 09		 jne	 SHORT $LN13@GetEmittin
  00034	c7 45 50 01 00
	00 00		 mov	 DWORD PTR tv200[ebp], 1
  0003b	eb 04		 jmp	 SHORT $LN14@GetEmittin
$LN13@GetEmittin:
  0003d	83 65 50 00	 and	 DWORD PTR tv200[ebp], 0
$LN14@GetEmittin:
  00041	8a 45 50	 mov	 al, BYTE PTR tv200[ebp]
  00044	88 45 6b	 mov	 BYTE PTR $T56[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 229  : 	if (rVector.empty())

  00047	0f b6 45 6b	 movzx	 eax, BYTE PTR $T56[ebp]
  0004b	85 c0		 test	 eax, eax
  0004d	74 0f		 je	 SHORT $LN4@GetEmittin

; 230  : 	{
; 231  : 		*pReturnValue = T();

  0004f	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00052	0f 57 c0	 xorps	 xmm0, xmm0
  00055	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 232  : 		return;

  00059	e9 d5 02 00 00	 jmp	 $LN3@GetEmittin
$LN4@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  0005e	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00061	89 45 4c	 mov	 DWORD PTR __My_data$49[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00064	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  00067	89 45 30	 mov	 DWORD PTR $T45[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  0006a	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  0006d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00070	89 45 2c	 mov	 DWORD PTR ___param0$44[ebp], eax
  00073	ff 75 30	 push	 DWORD PTR $T45[ebp]
  00076	ff 75 2c	 push	 DWORD PTR ___param0$44[ebp]
  00079	8d 4d 28	 lea	 ecx, DWORD PTR $T43[ebp]
  0007c	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  00081	8d 45 28	 lea	 eax, DWORD PTR $T43[ebp]
  00084	89 45 08	 mov	 DWORD PTR $T35[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  00087	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0008a	89 45 48	 mov	 DWORD PTR __My_data$48[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  0008d	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00090	89 45 24	 mov	 DWORD PTR $T42[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00093	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00096	8b 00		 mov	 eax, DWORD PTR [eax]
  00098	89 45 20	 mov	 DWORD PTR ___param0$41[ebp], eax
  0009b	ff 75 24	 push	 DWORD PTR $T42[ebp]
  0009e	ff 75 20	 push	 DWORD PTR ___param0$41[ebp]
  000a1	8d 4d 1c	 lea	 ecx, DWORD PTR $T40[ebp]
  000a4	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  000a9	8d 45 1c	 lea	 eax, DWORD PTR $T40[ebp]
  000ac	89 45 18	 mov	 DWORD PTR $T39[ebp], eax

; 287  :         _Vector_iterator _Tmp = *this;

  000af	8b 45 18	 mov	 eax, DWORD PTR $T39[ebp]
  000b2	8b 00		 mov	 eax, DWORD PTR [eax]
  000b4	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 120  :         _Ptr += _Off;

  000b7	33 c0		 xor	 eax, eax
  000b9	40		 inc	 eax
  000ba	c1 e0 03	 shl	 eax, 3
  000bd	03 45 58	 add	 eax, DWORD PTR __Tmp$51[ebp]
  000c0	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 283  :         return *this;

  000c3	8d 45 58	 lea	 eax, DWORD PTR __Tmp$51[ebp]
  000c6	89 45 14	 mov	 DWORD PTR $T38[ebp], eax

; 288  :         return _Tmp += _Off;

  000c9	8b 45 14	 mov	 eax, DWORD PTR $T38[ebp]
  000cc	8b 00		 mov	 eax, DWORD PTR [eax]
  000ce	89 45 10	 mov	 DWORD PTR $T37[ebp], eax
  000d1	8d 45 10	 lea	 eax, DWORD PTR $T37[ebp]
  000d4	89 45 0c	 mov	 DWORD PTR $T36[ebp], eax

; 149  :         return _Ptr == _Right._Ptr;

  000d7	8b 45 0c	 mov	 eax, DWORD PTR $T36[ebp]
  000da	8b 4d 08	 mov	 ecx, DWORD PTR $T35[ebp]
  000dd	8b 00		 mov	 eax, DWORD PTR [eax]
  000df	3b 01		 cmp	 eax, DWORD PTR [ecx]
  000e1	75 09		 jne	 SHORT $LN48@GetEmittin
  000e3	c7 45 44 01 00
	00 00		 mov	 DWORD PTR tv238[ebp], 1
  000ea	eb 04		 jmp	 SHORT $LN49@GetEmittin
$LN48@GetEmittin:
  000ec	83 65 44 00	 and	 DWORD PTR tv238[ebp], 0
$LN49@GetEmittin:
  000f0	8a 45 44	 mov	 al, BYTE PTR tv238[ebp]
  000f3	88 45 6a	 mov	 BYTE PTR $T55[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 235  : 	if(rVector.begin()+1==rVector.end())

  000f6	0f b6 45 6a	 movzx	 eax, BYTE PTR $T55[ebp]
  000fa	85 c0		 test	 eax, eax
  000fc	74 1e		 je	 SHORT $LN5@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  000fe	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00101	89 45 04	 mov	 DWORD PTR __My_data$34[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00104	8b 45 04	 mov	 eax, DWORD PTR __My_data$34[ebp]
  00107	8b 00		 mov	 eax, DWORD PTR [eax]
  00109	89 45 00	 mov	 DWORD PTR $T33[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 237  : 		*pReturnValue = rVector.front().m_Value;

  0010c	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0010f	8b 4d 00	 mov	 ecx, DWORD PTR $T33[ebp]
  00112	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00115	89 08		 mov	 DWORD PTR [eax], ecx

; 238  : 		return;

  00117	e9 17 02 00 00	 jmp	 $LN3@GetEmittin
$LN5@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  0011c	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0011f	89 45 fc	 mov	 DWORD PTR __My_data$32[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00122	8b 45 fc	 mov	 eax, DWORD PTR __My_data$32[ebp]
  00125	8b 00		 mov	 eax, DWORD PTR [eax]
  00127	89 45 f8	 mov	 DWORD PTR $T31[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 241  : 	if (fElapsedTime < rVector.front().m_fTime)

  0012a	8b 45 f8	 mov	 eax, DWORD PTR $T31[ebp]
  0012d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00131	0f 2f 45 5c	 comiss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00135	76 1e		 jbe	 SHORT $LN6@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  00137	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0013a	89 45 f4	 mov	 DWORD PTR __My_data$30[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  0013d	8b 45 f4	 mov	 eax, DWORD PTR __My_data$30[ebp]
  00140	8b 00		 mov	 eax, DWORD PTR [eax]
  00142	89 45 f0	 mov	 DWORD PTR $T29[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 243  : 		*pReturnValue = rVector.front().m_Value;

  00145	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00148	8b 4d f0	 mov	 ecx, DWORD PTR $T29[ebp]
  0014b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0014e	89 08		 mov	 DWORD PTR [eax], ecx

; 244  : 		return;

  00150	e9 de 01 00 00	 jmp	 $LN3@GetEmittin
$LN6@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00155	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00158	89 45 ec	 mov	 DWORD PTR __My_data$28[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0015b	6a 08		 push	 8
  0015d	58		 pop	 eax
  0015e	6b c0 ff	 imul	 eax, eax, -1
  00161	8b 4d ec	 mov	 ecx, DWORD PTR __My_data$28[ebp]
  00164	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00167	89 45 e8	 mov	 DWORD PTR $T27[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 247  : 	if (fElapsedTime > rVector.back().m_fTime)

  0016a	8b 45 e8	 mov	 eax, DWORD PTR $T27[ebp]
  0016d	f3 0f 10 45 5c	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00172	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00175	76 25		 jbe	 SHORT $LN7@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00177	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0017a	89 45 e4	 mov	 DWORD PTR __My_data$26[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0017d	6a 08		 push	 8
  0017f	58		 pop	 eax
  00180	6b c0 ff	 imul	 eax, eax, -1
  00183	8b 4d e4	 mov	 ecx, DWORD PTR __My_data$26[ebp]
  00186	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00189	89 45 e0	 mov	 DWORD PTR $T25[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 249  : 		*pReturnValue = rVector.back().m_Value;

  0018c	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0018f	8b 4d e0	 mov	 ecx, DWORD PTR $T25[ebp]
  00192	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00195	89 08		 mov	 DWORD PTR [eax], ecx

; 250  : 		return;

  00197	e9 97 01 00 00	 jmp	 $LN3@GetEmittin
$LN7@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  0019c	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0019f	89 45 40	 mov	 DWORD PTR __My_data$47[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001a2	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001a5	89 85 74 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001ab	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001ae	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001b1	89 45 dc	 mov	 DWORD PTR ___param0$24[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001b4	8b 45 dc	 mov	 eax, DWORD PTR ___param0$24[ebp]
  001b7	89 45 d8	 mov	 DWORD PTR $T23[ebp], eax

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001ba	8d 45 d8	 lea	 eax, DWORD PTR $T23[ebp]
  001bd	89 45 cc	 mov	 DWORD PTR $T20[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  001c0	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  001c3	89 45 3c	 mov	 DWORD PTR __My_data$46[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001c6	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001c9	89 85 78 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001cf	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001d2	8b 00		 mov	 eax, DWORD PTR [eax]
  001d4	89 45 d4	 mov	 DWORD PTR ___param0$22[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001d7	8b 45 d4	 mov	 eax, DWORD PTR ___param0$22[ebp]
  001da	89 45 d0	 mov	 DWORD PTR $T21[ebp], eax

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001dd	8d 45 d0	 lea	 eax, DWORD PTR $T21[ebp]
  001e0	89 45 c8	 mov	 DWORD PTR $T19[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 255  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  001e3	8b 45 cc	 mov	 eax, DWORD PTR $T20[ebp]
  001e6	8b 00		 mov	 eax, DWORD PTR [eax]
  001e8	89 45 c0	 mov	 DWORD PTR __Last$[ebp], eax
  001eb	8b 45 c8	 mov	 eax, DWORD PTR $T19[ebp]
  001ee	8b 00		 mov	 eax, DWORD PTR [eax]
  001f0	89 45 bc	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6851 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  001f3	33 c0		 xor	 eax, eax
  001f5	88 45 c4	 mov	 BYTE PTR $T18[ebp], al
  001f8	ff 75 c4	 push	 DWORD PTR $T18[ebp]
  001fb	8d 45 5c	 lea	 eax, DWORD PTR _fElapsedTime$[ebp]
  001fe	50		 push	 eax
  001ff	ff 75 c0	 push	 DWORD PTR __Last$[ebp]
  00202	ff 75 bc	 push	 DWORD PTR __First$[ebp]
  00205	8d 45 60	 lea	 eax, DWORD PTR _result$52[ebp]
  00208	50		 push	 eax
  00209	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@MU?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABMU?$less@X@0@@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float,std::less<void> >
  0020e	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  00211	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00214	3b 45 64	 cmp	 eax, DWORD PTR _result$52[ebp+4]
  00217	75 09		 jne	 SHORT $LN108@GetEmittin
  00219	c7 45 38 01 00
	00 00		 mov	 DWORD PTR tv338[ebp], 1
  00220	eb 04		 jmp	 SHORT $LN109@GetEmittin
$LN108@GetEmittin:
  00222	83 65 38 00	 and	 DWORD PTR tv338[ebp], 0
$LN109@GetEmittin:
  00226	8a 45 38	 mov	 al, BYTE PTR tv338[ebp]
  00229	88 45 69	 mov	 BYTE PTR $T54[ebp], al

; 153  :         return !(*this == _Right);

  0022c	0f b6 45 69	 movzx	 eax, BYTE PTR $T54[ebp]
  00230	85 c0		 test	 eax, eax
  00232	75 09		 jne	 SHORT $LN103@GetEmittin
  00234	c7 45 34 01 00
	00 00		 mov	 DWORD PTR tv330[ebp], 1
  0023b	eb 04		 jmp	 SHORT $LN104@GetEmittin
$LN103@GetEmittin:
  0023d	83 65 34 00	 and	 DWORD PTR tv330[ebp], 0
$LN104@GetEmittin:
  00241	8a 45 34	 mov	 al, BYTE PTR tv330[ebp]
  00244	88 45 68	 mov	 BYTE PTR $T53[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 257  : 	if (result.first != result.second)

  00247	0f b6 45 68	 movzx	 eax, BYTE PTR $T53[ebp]
  0024b	85 c0		 test	 eax, eax
  0024d	74 22		 je	 SHORT $LN8@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  0024f	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00252	89 45 b8	 mov	 DWORD PTR $T17[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00255	ff 75 b8	 push	 DWORD PTR $T17[ebp]
  00258	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0025d	59		 pop	 ecx
  0025e	89 45 94	 mov	 DWORD PTR $T9[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 258  : 		*pReturnValue = result.first->m_Value;

  00261	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00264	8b 4d 94	 mov	 ecx, DWORD PTR $T9[ebp]
  00267	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0026a	89 08		 mov	 DWORD PTR [eax], ecx
  0026c	e9 c2 00 00 00	 jmp	 $LN9@GetEmittin
$LN8@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 92   :         --_Ptr;

  00271	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00274	83 e8 08	 sub	 eax, 8
  00277	89 45 60	 mov	 DWORD PTR _result$52[ebp], eax

; 65   :         return _Ptr;

  0027a	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  0027d	89 45 b0	 mov	 DWORD PTR $T16[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00280	ff 75 b0	 push	 DWORD PTR $T16[ebp]
  00283	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  00288	59		 pop	 ecx
  00289	89 45 a4	 mov	 DWORD PTR $T13[ebp], eax

; 65   :         return _Ptr;

  0028c	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  0028f	89 45 ac	 mov	 DWORD PTR $T15[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00292	ff 75 ac	 push	 DWORD PTR $T15[ebp]
  00295	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0029a	59		 pop	 ecx
  0029b	89 45 a0	 mov	 DWORD PTR $T12[ebp], eax

; 65   :         return _Ptr;

  0029e	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002a1	89 45 a8	 mov	 DWORD PTR $T14[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002a4	ff 75 a8	 push	 DWORD PTR $T14[ebp]
  002a7	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002ac	59		 pop	 ecx
  002ad	89 45 9c	 mov	 DWORD PTR $T11[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  002b0	8b 45 a4	 mov	 eax, DWORD PTR $T13[ebp]
  002b3	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002b7	f3 0f 5c 45 5c	 subss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  002bc	8b 45 a0	 mov	 eax, DWORD PTR $T12[ebp]
  002bf	8b 4d 9c	 mov	 ecx, DWORD PTR $T11[ebp]
  002c2	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  002c6	f3 0f 5c 09	 subss	 xmm1, DWORD PTR [ecx]
  002ca	f3 0f 5e c1	 divss	 xmm0, xmm1
  002ce	f3 0f 11 45 84	 movss	 DWORD PTR _Head$5[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  002d3	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002d6	89 45 98	 mov	 DWORD PTR $T10[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002d9	ff 75 98	 push	 DWORD PTR $T10[ebp]
  002dc	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002e1	59		 pop	 ecx
  002e2	89 45 8c	 mov	 DWORD PTR $T7[ebp], eax

; 65   :         return _Ptr;

  002e5	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  002e8	89 85 7c ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002ee	ff b5 7c ff ff
	ff		 push	 DWORD PTR $T3[ebp]
  002f4	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002f9	59		 pop	 ecx
  002fa	89 45 88	 mov	 DWORD PTR $T6[ebp], eax

; 65   :         return _Ptr;

  002fd	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  00300	89 45 90	 mov	 DWORD PTR $T8[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00303	ff 75 90	 push	 DWORD PTR $T8[ebp]
  00306	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0030b	59		 pop	 ecx
  0030c	89 45 80	 mov	 DWORD PTR $T4[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 263  : 		*pReturnValue = T((result.first->m_Value-result.second->m_Value)*Head+(result.second->m_Value));

  0030f	8b 45 8c	 mov	 eax, DWORD PTR $T7[ebp]
  00312	8b 4d 88	 mov	 ecx, DWORD PTR $T6[ebp]
  00315	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0031a	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  0031f	f3 0f 59 45 84	 mulss	 xmm0, DWORD PTR _Head$5[ebp]
  00324	8b 45 80	 mov	 eax, DWORD PTR $T4[ebp]
  00327	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  0032c	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0032f	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN9@GetEmittin:
$LN3@GetEmittin:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 26   : }

  00333	83 c5 70	 add	 ebp, 112		; 00000070H
  00336	c9		 leave
  00337	c2 08 00	 ret	 8
?GetEmittingAngularVelocity@CEmitterProperty@@QAEXMPAM@Z ENDP ; CEmitterProperty::GetEmittingAngularVelocity
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
;	COMDAT ?GetEmittingSize@CEmitterProperty@@QAEXMPAM@Z
_TEXT	SEGMENT
$T1 = -140						; size = 4
$T2 = -136						; size = 4
$T3 = -132						; size = 4
$T4 = -128						; size = 4
_Head$5 = -124						; size = 4
$T6 = -120						; size = 4
$T7 = -116						; size = 4
$T8 = -112						; size = 4
$T9 = -108						; size = 4
$T10 = -104						; size = 4
$T11 = -100						; size = 4
$T12 = -96						; size = 4
$T13 = -92						; size = 4
$T14 = -88						; size = 4
$T15 = -84						; size = 4
$T16 = -80						; size = 4
_this$ = -76						; size = 4
$T17 = -72						; size = 4
__First$ = -68						; size = 4
__Last$ = -64						; size = 4
$T18 = -60						; size = 1
$T19 = -56						; size = 4
$T20 = -52						; size = 4
$T21 = -48						; size = 4
___param0$22 = -44					; size = 4
$T23 = -40						; size = 4
___param0$24 = -36					; size = 4
$T25 = -32						; size = 4
__My_data$26 = -28					; size = 4
$T27 = -24						; size = 4
__My_data$28 = -20					; size = 4
$T29 = -16						; size = 4
__My_data$30 = -12					; size = 4
$T31 = -8						; size = 4
__My_data$32 = -4					; size = 4
$T33 = 0						; size = 4
__My_data$34 = 4					; size = 4
$T35 = 8						; size = 4
$T36 = 12						; size = 4
$T37 = 16						; size = 4
$T38 = 20						; size = 4
$T39 = 24						; size = 4
$T40 = 28						; size = 4
___param0$41 = 32					; size = 4
$T42 = 36						; size = 4
$T43 = 40						; size = 4
___param0$44 = 44					; size = 4
$T45 = 48						; size = 4
tv330 = 52						; size = 4
tv338 = 56						; size = 4
__My_data$46 = 60					; size = 4
__My_data$47 = 64					; size = 4
tv238 = 68						; size = 4
__My_data$48 = 72					; size = 4
__My_data$49 = 76					; size = 4
tv200 = 80						; size = 4
__My_data$50 = 84					; size = 4
__Tmp$51 = 88						; size = 4
_fElapsedTime$ = 92					; size = 4
_result$52 = 96						; size = 8
$T53 = 104						; size = 1
$T54 = 105						; size = 1
$T55 = 106						; size = 1
$T56 = 107						; size = 1
_rVector$ = 108						; size = 4
_fTime$ = 120						; size = 4
_pfValue$ = 124						; size = 4
?GetEmittingSize@CEmitterProperty@@QAEXMPAM@Z PROC	; CEmitterProperty::GetEmittingSize, COMDAT
; _this$ = ecx

; 18   : {

  00000	55		 push	 ebp
  00001	8d 6c 24 90	 lea	 ebp, DWORD PTR [esp-112]
  00005	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  0000b	89 4d b4	 mov	 DWORD PTR _this$[ebp], ecx

; 19   : 	//GetTimeEventBlendValue<TTimeEventTableFloat, float>(fTime, m_TimeEventEmittingSize, pfValue);
; 20   : 	GetTimeEventBlendValue(fTime, m_TimeEventEmittingSize, pfValue);

  0000e	8b 45 b4	 mov	 eax, DWORD PTR _this$[ebp]
  00011	83 c0 38	 add	 eax, 56			; 00000038H
  00014	89 45 6c	 mov	 DWORD PTR _rVector$[ebp], eax
  00017	f3 0f 10 45 78	 movss	 xmm0, DWORD PTR _fTime$[ebp]
  0001c	f3 0f 11 45 5c	 movss	 DWORD PTR _fElapsedTime$[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1478 :         auto& _My_data = _Mypair._Myval2;

  00021	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00024	89 45 54	 mov	 DWORD PTR __My_data$50[ebp], eax

; 1479 :         return _My_data._Myfirst == _My_data._Mylast;

  00027	8b 45 54	 mov	 eax, DWORD PTR __My_data$50[ebp]
  0002a	8b 4d 54	 mov	 ecx, DWORD PTR __My_data$50[ebp]
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
  0002f	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00032	75 09		 jne	 SHORT $LN13@GetEmittin
  00034	c7 45 50 01 00
	00 00		 mov	 DWORD PTR tv200[ebp], 1
  0003b	eb 04		 jmp	 SHORT $LN14@GetEmittin
$LN13@GetEmittin:
  0003d	83 65 50 00	 and	 DWORD PTR tv200[ebp], 0
$LN14@GetEmittin:
  00041	8a 45 50	 mov	 al, BYTE PTR tv200[ebp]
  00044	88 45 6b	 mov	 BYTE PTR $T56[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 229  : 	if (rVector.empty())

  00047	0f b6 45 6b	 movzx	 eax, BYTE PTR $T56[ebp]
  0004b	85 c0		 test	 eax, eax
  0004d	74 0f		 je	 SHORT $LN4@GetEmittin

; 230  : 	{
; 231  : 		*pReturnValue = T();

  0004f	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00052	0f 57 c0	 xorps	 xmm0, xmm0
  00055	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 232  : 		return;

  00059	e9 d5 02 00 00	 jmp	 $LN3@GetEmittin
$LN4@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  0005e	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00061	89 45 4c	 mov	 DWORD PTR __My_data$49[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  00064	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  00067	89 45 30	 mov	 DWORD PTR $T45[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  0006a	8b 45 4c	 mov	 eax, DWORD PTR __My_data$49[ebp]
  0006d	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00070	89 45 2c	 mov	 DWORD PTR ___param0$44[ebp], eax
  00073	ff 75 30	 push	 DWORD PTR $T45[ebp]
  00076	ff 75 2c	 push	 DWORD PTR ___param0$44[ebp]
  00079	8d 4d 28	 lea	 ecx, DWORD PTR $T43[ebp]
  0007c	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  00081	8d 45 28	 lea	 eax, DWORD PTR $T43[ebp]
  00084	89 45 08	 mov	 DWORD PTR $T35[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  00087	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0008a	89 45 48	 mov	 DWORD PTR __My_data$48[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  0008d	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00090	89 45 24	 mov	 DWORD PTR $T42[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00093	8b 45 48	 mov	 eax, DWORD PTR __My_data$48[ebp]
  00096	8b 00		 mov	 eax, DWORD PTR [eax]
  00098	89 45 20	 mov	 DWORD PTR ___param0$41[ebp], eax
  0009b	ff 75 24	 push	 DWORD PTR $T42[ebp]
  0009e	ff 75 20	 push	 DWORD PTR ___param0$41[ebp]
  000a1	8d 4d 1c	 lea	 ecx, DWORD PTR $T40[ebp]
  000a4	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@QAE@PAV?$CTimeEvent@M@@PBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >
  000a9	8d 45 1c	 lea	 eax, DWORD PTR $T40[ebp]
  000ac	89 45 18	 mov	 DWORD PTR $T39[ebp], eax

; 287  :         _Vector_iterator _Tmp = *this;

  000af	8b 45 18	 mov	 eax, DWORD PTR $T39[ebp]
  000b2	8b 00		 mov	 eax, DWORD PTR [eax]
  000b4	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 120  :         _Ptr += _Off;

  000b7	33 c0		 xor	 eax, eax
  000b9	40		 inc	 eax
  000ba	c1 e0 03	 shl	 eax, 3
  000bd	03 45 58	 add	 eax, DWORD PTR __Tmp$51[ebp]
  000c0	89 45 58	 mov	 DWORD PTR __Tmp$51[ebp], eax

; 283  :         return *this;

  000c3	8d 45 58	 lea	 eax, DWORD PTR __Tmp$51[ebp]
  000c6	89 45 14	 mov	 DWORD PTR $T38[ebp], eax

; 288  :         return _Tmp += _Off;

  000c9	8b 45 14	 mov	 eax, DWORD PTR $T38[ebp]
  000cc	8b 00		 mov	 eax, DWORD PTR [eax]
  000ce	89 45 10	 mov	 DWORD PTR $T37[ebp], eax
  000d1	8d 45 10	 lea	 eax, DWORD PTR $T37[ebp]
  000d4	89 45 0c	 mov	 DWORD PTR $T36[ebp], eax

; 149  :         return _Ptr == _Right._Ptr;

  000d7	8b 45 0c	 mov	 eax, DWORD PTR $T36[ebp]
  000da	8b 4d 08	 mov	 ecx, DWORD PTR $T35[ebp]
  000dd	8b 00		 mov	 eax, DWORD PTR [eax]
  000df	3b 01		 cmp	 eax, DWORD PTR [ecx]
  000e1	75 09		 jne	 SHORT $LN48@GetEmittin
  000e3	c7 45 44 01 00
	00 00		 mov	 DWORD PTR tv238[ebp], 1
  000ea	eb 04		 jmp	 SHORT $LN49@GetEmittin
$LN48@GetEmittin:
  000ec	83 65 44 00	 and	 DWORD PTR tv238[ebp], 0
$LN49@GetEmittin:
  000f0	8a 45 44	 mov	 al, BYTE PTR tv238[ebp]
  000f3	88 45 6a	 mov	 BYTE PTR $T55[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 235  : 	if(rVector.begin()+1==rVector.end())

  000f6	0f b6 45 6a	 movzx	 eax, BYTE PTR $T55[ebp]
  000fa	85 c0		 test	 eax, eax
  000fc	74 1e		 je	 SHORT $LN5@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  000fe	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00101	89 45 04	 mov	 DWORD PTR __My_data$34[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00104	8b 45 04	 mov	 eax, DWORD PTR __My_data$34[ebp]
  00107	8b 00		 mov	 eax, DWORD PTR [eax]
  00109	89 45 00	 mov	 DWORD PTR $T33[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 237  : 		*pReturnValue = rVector.front().m_Value;

  0010c	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0010f	8b 4d 00	 mov	 ecx, DWORD PTR $T33[ebp]
  00112	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00115	89 08		 mov	 DWORD PTR [eax], ecx

; 238  : 		return;

  00117	e9 17 02 00 00	 jmp	 $LN3@GetEmittin
$LN5@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  0011c	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0011f	89 45 fc	 mov	 DWORD PTR __My_data$32[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  00122	8b 45 fc	 mov	 eax, DWORD PTR __My_data$32[ebp]
  00125	8b 00		 mov	 eax, DWORD PTR [eax]
  00127	89 45 f8	 mov	 DWORD PTR $T31[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 241  : 	if (fElapsedTime < rVector.front().m_fTime)

  0012a	8b 45 f8	 mov	 eax, DWORD PTR $T31[ebp]
  0012d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00131	0f 2f 45 5c	 comiss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00135	76 1e		 jbe	 SHORT $LN6@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1536 :         auto& _My_data = _Mypair._Myval2;

  00137	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0013a	89 45 f4	 mov	 DWORD PTR __My_data$30[ebp], eax

; 1537 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1538 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "front() called on empty vector");
; 1539 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1540 : 
; 1541 :         return *_My_data._Myfirst;

  0013d	8b 45 f4	 mov	 eax, DWORD PTR __My_data$30[ebp]
  00140	8b 00		 mov	 eax, DWORD PTR [eax]
  00142	89 45 f0	 mov	 DWORD PTR $T29[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 243  : 		*pReturnValue = rVector.front().m_Value;

  00145	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00148	8b 4d f0	 mov	 ecx, DWORD PTR $T29[ebp]
  0014b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0014e	89 08		 mov	 DWORD PTR [eax], ecx

; 244  : 		return;

  00150	e9 de 01 00 00	 jmp	 $LN3@GetEmittin
$LN6@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00155	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  00158	89 45 ec	 mov	 DWORD PTR __My_data$28[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0015b	6a 08		 push	 8
  0015d	58		 pop	 eax
  0015e	6b c0 ff	 imul	 eax, eax, -1
  00161	8b 4d ec	 mov	 ecx, DWORD PTR __My_data$28[ebp]
  00164	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00167	89 45 e8	 mov	 DWORD PTR $T27[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 247  : 	if (fElapsedTime > rVector.back().m_fTime)

  0016a	8b 45 e8	 mov	 eax, DWORD PTR $T27[ebp]
  0016d	f3 0f 10 45 5c	 movss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00172	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00175	76 25		 jbe	 SHORT $LN7@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1554 :         auto& _My_data = _Mypair._Myval2;

  00177	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0017a	89 45 e4	 mov	 DWORD PTR __My_data$26[ebp], eax

; 1555 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1556 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");
; 1557 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1558 : 
; 1559 :         return _My_data._Mylast[-1];

  0017d	6a 08		 push	 8
  0017f	58		 pop	 eax
  00180	6b c0 ff	 imul	 eax, eax, -1
  00183	8b 4d e4	 mov	 ecx, DWORD PTR __My_data$26[ebp]
  00186	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  00189	89 45 e0	 mov	 DWORD PTR $T25[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 249  : 		*pReturnValue = rVector.back().m_Value;

  0018c	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0018f	8b 4d e0	 mov	 ecx, DWORD PTR $T25[ebp]
  00192	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00195	89 08		 mov	 DWORD PTR [eax], ecx

; 250  : 		return;

  00197	e9 97 01 00 00	 jmp	 $LN3@GetEmittin
$LN7@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1420 :         auto& _My_data = _Mypair._Myval2;

  0019c	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  0019f	89 45 40	 mov	 DWORD PTR __My_data$47[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001a2	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001a5	89 85 74 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001ab	8b 45 40	 mov	 eax, DWORD PTR __My_data$47[ebp]
  001ae	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001b1	89 45 dc	 mov	 DWORD PTR ___param0$24[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001b4	8b 45 dc	 mov	 eax, DWORD PTR ___param0$24[ebp]
  001b7	89 45 d8	 mov	 DWORD PTR $T23[ebp], eax

; 1421 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  001ba	8d 45 d8	 lea	 eax, DWORD PTR $T23[ebp]
  001bd	89 45 cc	 mov	 DWORD PTR $T20[ebp], eax

; 1410 :         auto& _My_data = _Mypair._Myval2;

  001c0	8b 45 6c	 mov	 eax, DWORD PTR _rVector$[ebp]
  001c3	89 45 3c	 mov	 DWORD PTR __My_data$46[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstddef

; 275  :     return __builtin_addressof(_Val);

  001c6	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001c9	89 85 78 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001cf	8b 45 3c	 mov	 eax, DWORD PTR __My_data$46[ebp]
  001d2	8b 00		 mov	 eax, DWORD PTR [eax]
  001d4	89 45 d4	 mov	 DWORD PTR ___param0$22[ebp], eax

; 42   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

  001d7	8b 45 d4	 mov	 eax, DWORD PTR ___param0$22[ebp]
  001da	89 45 d0	 mov	 DWORD PTR $T21[ebp], eax

; 1411 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  001dd	8d 45 d0	 lea	 eax, DWORD PTR $T21[ebp]
  001e0	89 45 c8	 mov	 DWORD PTR $T19[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 255  : 	std::pair<iterator, iterator> result = std::equal_range(rVector.begin(), rVector.end(), fElapsedTime);

  001e3	8b 45 cc	 mov	 eax, DWORD PTR $T20[ebp]
  001e6	8b 00		 mov	 eax, DWORD PTR [eax]
  001e8	89 45 c0	 mov	 DWORD PTR __Last$[ebp], eax
  001eb	8b 45 c8	 mov	 eax, DWORD PTR $T19[ebp]
  001ee	8b 00		 mov	 eax, DWORD PTR [eax]
  001f0	89 45 bc	 mov	 DWORD PTR __First$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\algorithm

; 6851 :     return _STD equal_range(_First, _Last, _Val, less<>{});

  001f3	33 c0		 xor	 eax, eax
  001f5	88 45 c4	 mov	 BYTE PTR $T18[ebp], al
  001f8	ff 75 c4	 push	 DWORD PTR $T18[ebp]
  001fb	8d 45 5c	 lea	 eax, DWORD PTR _fElapsedTime$[ebp]
  001fe	50		 push	 eax
  001ff	ff 75 c0	 push	 DWORD PTR __Last$[ebp]
  00202	ff 75 bc	 push	 DWORD PTR __First$[ebp]
  00205	8d 45 60	 lea	 eax, DWORD PTR _result$52[ebp]
  00208	50		 push	 eax
  00209	e8 00 00 00 00	 call	 ??$equal_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@MU?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$CTimeEvent@M@@@std@@@std@@@0@0ABMU?$less@X@0@@Z ; std::equal_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<CTimeEvent<float> > > >,float,std::less<void> >
  0020e	83 c4 14	 add	 esp, 20			; 00000014H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 149  :         return _Ptr == _Right._Ptr;

  00211	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00214	3b 45 64	 cmp	 eax, DWORD PTR _result$52[ebp+4]
  00217	75 09		 jne	 SHORT $LN108@GetEmittin
  00219	c7 45 38 01 00
	00 00		 mov	 DWORD PTR tv338[ebp], 1
  00220	eb 04		 jmp	 SHORT $LN109@GetEmittin
$LN108@GetEmittin:
  00222	83 65 38 00	 and	 DWORD PTR tv338[ebp], 0
$LN109@GetEmittin:
  00226	8a 45 38	 mov	 al, BYTE PTR tv338[ebp]
  00229	88 45 69	 mov	 BYTE PTR $T54[ebp], al

; 153  :         return !(*this == _Right);

  0022c	0f b6 45 69	 movzx	 eax, BYTE PTR $T54[ebp]
  00230	85 c0		 test	 eax, eax
  00232	75 09		 jne	 SHORT $LN103@GetEmittin
  00234	c7 45 34 01 00
	00 00		 mov	 DWORD PTR tv330[ebp], 1
  0023b	eb 04		 jmp	 SHORT $LN104@GetEmittin
$LN103@GetEmittin:
  0023d	83 65 34 00	 and	 DWORD PTR tv330[ebp], 0
$LN104@GetEmittin:
  00241	8a 45 34	 mov	 al, BYTE PTR tv330[ebp]
  00244	88 45 68	 mov	 BYTE PTR $T53[ebp], al
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 257  : 	if (result.first != result.second)

  00247	0f b6 45 68	 movzx	 eax, BYTE PTR $T53[ebp]
  0024b	85 c0		 test	 eax, eax
  0024d	74 22		 je	 SHORT $LN8@GetEmittin
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  0024f	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00252	89 45 b8	 mov	 DWORD PTR $T17[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00255	ff 75 b8	 push	 DWORD PTR $T17[ebp]
  00258	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0025d	59		 pop	 ecx
  0025e	89 45 94	 mov	 DWORD PTR $T9[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 258  : 		*pReturnValue = result.first->m_Value;

  00261	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  00264	8b 4d 94	 mov	 ecx, DWORD PTR $T9[ebp]
  00267	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0026a	89 08		 mov	 DWORD PTR [eax], ecx
  0026c	e9 c2 00 00 00	 jmp	 $LN9@GetEmittin
$LN8@GetEmittin:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 92   :         --_Ptr;

  00271	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  00274	83 e8 08	 sub	 eax, 8
  00277	89 45 60	 mov	 DWORD PTR _result$52[ebp], eax

; 65   :         return _Ptr;

  0027a	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  0027d	89 45 b0	 mov	 DWORD PTR $T16[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00280	ff 75 b0	 push	 DWORD PTR $T16[ebp]
  00283	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  00288	59		 pop	 ecx
  00289	89 45 a4	 mov	 DWORD PTR $T13[ebp], eax

; 65   :         return _Ptr;

  0028c	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  0028f	89 45 ac	 mov	 DWORD PTR $T15[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00292	ff 75 ac	 push	 DWORD PTR $T15[ebp]
  00295	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0029a	59		 pop	 ecx
  0029b	89 45 a0	 mov	 DWORD PTR $T12[ebp], eax

; 65   :         return _Ptr;

  0029e	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002a1	89 45 a8	 mov	 DWORD PTR $T14[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002a4	ff 75 a8	 push	 DWORD PTR $T14[ebp]
  002a7	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002ac	59		 pop	 ecx
  002ad	89 45 9c	 mov	 DWORD PTR $T11[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 262  : 		float Head = (result.second->m_fTime - fElapsedTime) / (result.second->m_fTime - result.first->m_fTime);

  002b0	8b 45 a4	 mov	 eax, DWORD PTR $T13[ebp]
  002b3	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002b7	f3 0f 5c 45 5c	 subss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  002bc	8b 45 a0	 mov	 eax, DWORD PTR $T12[ebp]
  002bf	8b 4d 9c	 mov	 ecx, DWORD PTR $T11[ebp]
  002c2	f3 0f 10 08	 movss	 xmm1, DWORD PTR [eax]
  002c6	f3 0f 5c 09	 subss	 xmm1, DWORD PTR [ecx]
  002ca	f3 0f 5e c1	 divss	 xmm0, xmm1
  002ce	f3 0f 11 45 84	 movss	 DWORD PTR _Head$5[ebp], xmm0
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 65   :         return _Ptr;

  002d3	8b 45 60	 mov	 eax, DWORD PTR _result$52[ebp]
  002d6	89 45 98	 mov	 DWORD PTR $T10[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002d9	ff 75 98	 push	 DWORD PTR $T10[ebp]
  002dc	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002e1	59		 pop	 ecx
  002e2	89 45 8c	 mov	 DWORD PTR $T7[ebp], eax

; 65   :         return _Ptr;

  002e5	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  002e8	89 85 7c ff ff
	ff		 mov	 DWORD PTR $T3[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  002ee	ff b5 7c ff ff
	ff		 push	 DWORD PTR $T3[ebp]
  002f4	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  002f9	59		 pop	 ecx
  002fa	89 45 88	 mov	 DWORD PTR $T6[ebp], eax

; 65   :         return _Ptr;

  002fd	8b 45 64	 mov	 eax, DWORD PTR _result$52[ebp+4]
  00300	89 45 90	 mov	 DWORD PTR $T8[ebp], eax

; 256  :         return _Const_cast(_Mybase::operator->());

  00303	ff 75 90	 push	 DWORD PTR $T8[ebp]
  00306	e8 00 00 00 00	 call	 ??$_Const_cast@$$CBV?$CTimeEvent@M@@@std@@YAPAV?$CTimeEvent@M@@PBV1@@Z ; std::_Const_cast<CTimeEvent<float> const >
  0030b	59		 pop	 ecx
  0030c	89 45 80	 mov	 DWORD PTR $T4[ebp], eax
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\Type.h

; 263  : 		*pReturnValue = T((result.first->m_Value-result.second->m_Value)*Head+(result.second->m_Value));

  0030f	8b 45 8c	 mov	 eax, DWORD PTR $T7[ebp]
  00312	8b 4d 88	 mov	 ecx, DWORD PTR $T6[ebp]
  00315	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0031a	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  0031f	f3 0f 59 45 84	 mulss	 xmm0, DWORD PTR _Head$5[ebp]
  00324	8b 45 80	 mov	 eax, DWORD PTR $T4[ebp]
  00327	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  0032c	8b 45 7c	 mov	 eax, DWORD PTR _pfValue$[ebp]
  0032f	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN9@GetEmittin:
$LN3@GetEmittin:
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 21   : }

  00333	83 c5 70	 add	 ebp, 112		; 00000070H
  00336	c9		 leave
  00337	c2 08 00	 ret	 8
?GetEmittingSize@CEmitterProperty@@QAEXMPAM@Z ENDP	; CEmitterProperty::GetEmittingSize
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
;	COMDAT ?isEmitFromEdge@CEmitterProperty@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?isEmitFromEdge@CEmitterProperty@@QAEHXZ PROC		; CEmitterProperty::isEmitFromEdge, COMDAT
; _this$ = ecx

; 13   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 14   : 	return m_bEmitFromEdgeFlag;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 18	 mov	 eax, DWORD PTR [eax+24]

; 15   : }

  0000d	c9		 leave
  0000e	c3		 ret	 0
?isEmitFromEdge@CEmitterProperty@@QAEHXZ ENDP		; CEmitterProperty::isEmitFromEdge
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
;	COMDAT ?GetEmitterAdvancedType@CEmitterProperty@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetEmitterAdvancedType@CEmitterProperty@@QAEEXZ PROC	; CEmitterProperty::GetEmitterAdvancedType, COMDAT
; _this$ = ecx

; 9    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 10   : 	return m_byEmitterAdvancedType;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8a 40 15	 mov	 al, BYTE PTR [eax+21]

; 11   : }

  0000d	c9		 leave
  0000e	c3		 ret	 0
?GetEmitterAdvancedType@CEmitterProperty@@QAEEXZ ENDP	; CEmitterProperty::GetEmitterAdvancedType
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
;	COMDAT ?GetEmitterShape@CEmitterProperty@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetEmitterShape@CEmitterProperty@@QAEEXZ PROC		; CEmitterProperty::GetEmitterShape, COMDAT
; _this$ = ecx

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 6    : 	return m_byEmitterShape;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8a 40 14	 mov	 al, BYTE PTR [eax+20]

; 7    : }

  0000d	c9		 leave
  0000e	c3		 ret	 0
?GetEmitterShape@CEmitterProperty@@QAEEXZ ENDP		; CEmitterProperty::GetEmitterShape
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
;	COMDAT ?Clear@CEmitterProperty@@QAEXXZ
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T1 = -28						; size = 12
$T2 = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
?Clear@CEmitterProperty@@QAEXXZ PROC			; CEmitterProperty::Clear, COMDAT
; _this$ = ecx

; 69   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	89 4d e0	 mov	 DWORD PTR _this$[ebp], ecx

; 70   : 	m_dwMaxEmissionCount = 0;

  00015	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00018	83 60 04 00	 and	 DWORD PTR [eax+4], 0

; 71   : 
; 72   : 	m_fCycleLength = 0.0f;

  0001c	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0001f	0f 57 c0	 xorps	 xmm0, xmm0
  00022	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 73   : 	m_bCycleLoopFlag = FALSE;

  00027	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	83 60 0c 00	 and	 DWORD PTR [eax+12], 0

; 74   : 	m_iLoopCount = 0;

  0002e	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00031	83 60 10 00	 and	 DWORD PTR [eax+16], 0

; 75   : 
; 76   : 	m_byEmitterShape = EMITTER_SHAPE_POINT;

  00035	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00038	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0

; 77   : 	m_byEmitterAdvancedType = EMITTER_ADVANCED_TYPE_FREE;

  0003c	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  0003f	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 78   : 	m_bEmitFromEdgeFlag = FALSE;

  00043	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00046	83 60 18 00	 and	 DWORD PTR [eax+24], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 180  :     x = fx;

  0004a	0f 57 c0	 xorps	 xmm0, xmm0
  0004d	f3 0f 11 45 f0	 movss	 DWORD PTR $T2[ebp], xmm0

; 181  :     y = fy;

  00052	0f 57 c0	 xorps	 xmm0, xmm0
  00055	f3 0f 11 45 f4	 movss	 DWORD PTR $T2[ebp+4], xmm0

; 182  :     z = fz;

  0005a	0f 57 c0	 xorps	 xmm0, xmm0
  0005d	f3 0f 11 45 f8	 movss	 DWORD PTR $T2[ebp+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 79   : 	m_v3EmittingSize = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  00062	8b 7d e0	 mov	 edi, DWORD PTR _this$[ebp]
  00065	83 c7 1c	 add	 edi, 28			; 0000001cH
  00068	8d 75 f0	 lea	 esi, DWORD PTR $T2[ebp]
  0006b	a5		 movsd
  0006c	a5		 movsd
  0006d	a5		 movsd

; 80   : 	m_fEmittingRadius = 0.0f;

  0006e	8b 45 e0	 mov	 eax, DWORD PTR _this$[ebp]
  00071	0f 57 c0	 xorps	 xmm0, xmm0
  00074	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\M2Data\include\d3dx8math.inl

; 180  :     x = fx;

  00079	0f 57 c0	 xorps	 xmm0, xmm0
  0007c	f3 0f 11 45 e4	 movss	 DWORD PTR $T1[ebp], xmm0

; 181  :     y = fy;

  00081	0f 57 c0	 xorps	 xmm0, xmm0
  00084	f3 0f 11 45 e8	 movss	 DWORD PTR $T1[ebp+4], xmm0

; 182  :     z = fz;

  00089	0f 57 c0	 xorps	 xmm0, xmm0
  0008c	f3 0f 11 45 ec	 movss	 DWORD PTR $T1[ebp+8], xmm0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 82   : 	m_v3EmittingDirection = D3DXVECTOR3(0.0f, 0.0f, 0.0f);

  00091	8b 7d e0	 mov	 edi, DWORD PTR _this$[ebp]
  00094	83 c7 2c	 add	 edi, 44			; 0000002cH
  00097	8d 75 e4	 lea	 esi, DWORD PTR $T1[ebp]
  0009a	a5		 movsd
  0009b	a5		 movsd
  0009c	a5		 movsd

; 83   : 
; 84   : 	m_TimeEventEmittingSize.clear();

  0009d	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000a0	83 c1 38	 add	 ecx, 56			; 00000038H
  000a3	e8 00 00 00 00	 call	 ?clear@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::clear

; 85   : 	m_TimeEventEmittingDirectionX.clear();

  000a8	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ab	83 c1 50	 add	 ecx, 80			; 00000050H
  000ae	e8 00 00 00 00	 call	 ?clear@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::clear

; 86   : 	m_TimeEventEmittingDirectionY.clear();

  000b3	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000b6	83 c1 5c	 add	 ecx, 92			; 0000005cH
  000b9	e8 00 00 00 00	 call	 ?clear@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::clear

; 87   : 	m_TimeEventEmittingDirectionZ.clear();

  000be	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c1	83 c1 68	 add	 ecx, 104		; 00000068H
  000c4	e8 00 00 00 00	 call	 ?clear@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::clear

; 88   : 	m_TimeEventEmittingVelocity.clear();

  000c9	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000cc	83 c1 74	 add	 ecx, 116		; 00000074H
  000cf	e8 00 00 00 00	 call	 ?clear@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::clear

; 89   : 	m_TimeEventEmissionCountPerSecond.clear();

  000d4	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000d7	81 c1 80 00 00
	00		 add	 ecx, 128		; 00000080H
  000dd	e8 00 00 00 00	 call	 ?clear@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::clear

; 90   : 	m_TimeEventLifeTime.clear();

  000e2	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000e5	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  000eb	e8 00 00 00 00	 call	 ?clear@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::clear

; 91   : 	m_TimeEventSizeX.clear();

  000f0	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  000f3	81 c1 98 00 00
	00		 add	 ecx, 152		; 00000098H
  000f9	e8 00 00 00 00	 call	 ?clear@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::clear

; 92   : 	m_TimeEventSizeY.clear();

  000fe	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  00101	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  00107	e8 00 00 00 00	 call	 ?clear@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::clear

; 93   : 	m_TimeEventEmittingAngularVelocity.clear();

  0010c	8b 4d e0	 mov	 ecx, DWORD PTR _this$[ebp]
  0010f	83 c1 44	 add	 ecx, 68			; 00000044H
  00112	e8 00 00 00 00	 call	 ?clear@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::clear

; 94   : }

  00117	5f		 pop	 edi
  00118	5e		 pop	 esi
  00119	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0011c	33 cd		 xor	 ecx, ebp
  0011e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00123	c9		 leave
  00124	c3		 ret	 0
?Clear@CEmitterProperty@@QAEXXZ ENDP			; CEmitterProperty::Clear
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
;	COMDAT ??1CEmitterProperty@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CEmitterProperty@@UAE@XZ PROC			; CEmitterProperty::~CEmitterProperty, COMDAT
; _this$ = ecx

; 101  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CEmitterProperty@@6B@

; 102  : }

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 673  :         _Tidy();

  00019	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Tidy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 102  : }

  0001e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00021	81 c1 98 00 00
	00		 add	 ecx, 152		; 00000098H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 673  :         _Tidy();

  00027	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Tidy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 102  : }

  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 673  :         _Tidy();

  00035	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Tidy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 102  : }

  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	81 c1 80 00 00
	00		 add	 ecx, 128		; 00000080H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 673  :         _Tidy();

  00043	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Tidy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 102  : }

  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	83 c1 74	 add	 ecx, 116		; 00000074H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 673  :         _Tidy();

  0004e	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Tidy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 102  : }

  00053	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	83 c1 68	 add	 ecx, 104		; 00000068H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 673  :         _Tidy();

  00059	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Tidy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 102  : }

  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	83 c1 5c	 add	 ecx, 92			; 0000005cH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 673  :         _Tidy();

  00064	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Tidy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 102  : }

  00069	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	83 c1 50	 add	 ecx, 80			; 00000050H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 673  :         _Tidy();

  0006f	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Tidy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 102  : }

  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	83 c1 44	 add	 ecx, 68			; 00000044H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 673  :         _Tidy();

  0007a	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Tidy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 102  : }

  0007f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00082	83 c1 38	 add	 ecx, 56			; 00000038H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 673  :         _Tidy();

  00085	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@AAEXXZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::_Tidy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 102  : }

  0008a	c9		 leave
  0008b	c3		 ret	 0
??1CEmitterProperty@@UAE@XZ ENDP			; CEmitterProperty::~CEmitterProperty
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp
;	COMDAT ??0CEmitterProperty@@QAE@XZ
_TEXT	SEGMENT
_this$ = -136						; size = 4
_this$ = -132						; size = 4
_this$ = -128						; size = 4
_this$ = -124						; size = 4
_this$ = -120						; size = 4
_this$ = -116						; size = 4
_this$ = -112						; size = 4
_this$ = -108						; size = 4
_this$ = -104						; size = 4
_this$ = -100						; size = 4
_this$ = -96						; size = 4
_this$ = -92						; size = 4
_this$ = -88						; size = 4
_this$ = -84						; size = 4
_this$ = -80						; size = 4
_this$ = -76						; size = 4
_this$ = -72						; size = 4
_this$ = -68						; size = 4
_this$ = -64						; size = 4
_this$ = -60						; size = 4
_this$2 = -56						; size = 4
_this$3 = -52						; size = 4
_this$4 = -48						; size = 4
_this$5 = -44						; size = 4
_this$6 = -40						; size = 4
_this$7 = -36						; size = 4
_this$8 = -32						; size = 4
_this$9 = -28						; size = 4
_this$10 = -24						; size = 4
_this$11 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CEmitterProperty@@QAE@XZ PROC			; CEmitterProperty::CEmitterProperty, COMDAT
; _this$ = ecx

; 97   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0CEmitterProperty@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
  00028	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CEmitterProperty@@6B@
  00031	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00034	83 c0 38	 add	 eax, 56			; 00000038H
  00037	89 45 c4	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 445  :     vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

  0003a	8b 45 c4	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	89 45 c0	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  00040	8b 45 c0	 mov	 eax, DWORD PTR _this$[ebp]
  00043	89 45 ec	 mov	 DWORD PTR _this$11[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00046	8b 45 ec	 mov	 eax, DWORD PTR _this$11[ebp]
  00049	83 20 00	 and	 DWORD PTR [eax], 0
  0004c	8b 45 ec	 mov	 eax, DWORD PTR _this$11[ebp]
  0004f	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  00053	8b 45 ec	 mov	 eax, DWORD PTR _this$11[ebp]
  00056	83 60 08 00	 and	 DWORD PTR [eax+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 97   : {

  0005a	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  0005e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00061	83 c0 44	 add	 eax, 68			; 00000044H
  00064	89 45 bc	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 445  :     vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

  00067	8b 45 bc	 mov	 eax, DWORD PTR _this$[ebp]
  0006a	89 45 b8	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  0006d	8b 45 b8	 mov	 eax, DWORD PTR _this$[ebp]
  00070	89 45 e8	 mov	 DWORD PTR _this$10[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00073	8b 45 e8	 mov	 eax, DWORD PTR _this$10[ebp]
  00076	83 20 00	 and	 DWORD PTR [eax], 0
  00079	8b 45 e8	 mov	 eax, DWORD PTR _this$10[ebp]
  0007c	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  00080	8b 45 e8	 mov	 eax, DWORD PTR _this$10[ebp]
  00083	83 60 08 00	 and	 DWORD PTR [eax+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 97   : {

  00087	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0008b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0008e	83 c0 50	 add	 eax, 80			; 00000050H
  00091	89 45 b4	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 445  :     vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

  00094	8b 45 b4	 mov	 eax, DWORD PTR _this$[ebp]
  00097	89 45 b0	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  0009a	8b 45 b0	 mov	 eax, DWORD PTR _this$[ebp]
  0009d	89 45 e4	 mov	 DWORD PTR _this$9[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000a0	8b 45 e4	 mov	 eax, DWORD PTR _this$9[ebp]
  000a3	83 20 00	 and	 DWORD PTR [eax], 0
  000a6	8b 45 e4	 mov	 eax, DWORD PTR _this$9[ebp]
  000a9	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  000ad	8b 45 e4	 mov	 eax, DWORD PTR _this$9[ebp]
  000b0	83 60 08 00	 and	 DWORD PTR [eax+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 97   : {

  000b4	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  000b8	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000bb	83 c0 5c	 add	 eax, 92			; 0000005cH
  000be	89 45 ac	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 445  :     vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

  000c1	8b 45 ac	 mov	 eax, DWORD PTR _this$[ebp]
  000c4	89 45 a8	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  000c7	8b 45 a8	 mov	 eax, DWORD PTR _this$[ebp]
  000ca	89 45 e0	 mov	 DWORD PTR _this$8[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000cd	8b 45 e0	 mov	 eax, DWORD PTR _this$8[ebp]
  000d0	83 20 00	 and	 DWORD PTR [eax], 0
  000d3	8b 45 e0	 mov	 eax, DWORD PTR _this$8[ebp]
  000d6	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  000da	8b 45 e0	 mov	 eax, DWORD PTR _this$8[ebp]
  000dd	83 60 08 00	 and	 DWORD PTR [eax+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 97   : {

  000e1	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000e5	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  000e8	83 c0 68	 add	 eax, 104		; 00000068H
  000eb	89 45 a4	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 445  :     vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

  000ee	8b 45 a4	 mov	 eax, DWORD PTR _this$[ebp]
  000f1	89 45 a0	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  000f4	8b 45 a0	 mov	 eax, DWORD PTR _this$[ebp]
  000f7	89 45 dc	 mov	 DWORD PTR _this$7[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  000fa	8b 45 dc	 mov	 eax, DWORD PTR _this$7[ebp]
  000fd	83 20 00	 and	 DWORD PTR [eax], 0
  00100	8b 45 dc	 mov	 eax, DWORD PTR _this$7[ebp]
  00103	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  00107	8b 45 dc	 mov	 eax, DWORD PTR _this$7[ebp]
  0010a	83 60 08 00	 and	 DWORD PTR [eax+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 97   : {

  0010e	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  00112	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00115	83 c0 74	 add	 eax, 116		; 00000074H
  00118	89 45 9c	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 445  :     vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

  0011b	8b 45 9c	 mov	 eax, DWORD PTR _this$[ebp]
  0011e	89 45 98	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  00121	8b 45 98	 mov	 eax, DWORD PTR _this$[ebp]
  00124	89 45 d8	 mov	 DWORD PTR _this$6[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00127	8b 45 d8	 mov	 eax, DWORD PTR _this$6[ebp]
  0012a	83 20 00	 and	 DWORD PTR [eax], 0
  0012d	8b 45 d8	 mov	 eax, DWORD PTR _this$6[ebp]
  00130	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  00134	8b 45 d8	 mov	 eax, DWORD PTR _this$6[ebp]
  00137	83 60 08 00	 and	 DWORD PTR [eax+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 97   : {

  0013b	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0013f	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00142	05 80 00 00 00	 add	 eax, 128		; 00000080H
  00147	89 45 94	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 445  :     vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

  0014a	8b 45 94	 mov	 eax, DWORD PTR _this$[ebp]
  0014d	89 45 90	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  00150	8b 45 90	 mov	 eax, DWORD PTR _this$[ebp]
  00153	89 45 d4	 mov	 DWORD PTR _this$5[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00156	8b 45 d4	 mov	 eax, DWORD PTR _this$5[ebp]
  00159	83 20 00	 and	 DWORD PTR [eax], 0
  0015c	8b 45 d4	 mov	 eax, DWORD PTR _this$5[ebp]
  0015f	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  00163	8b 45 d4	 mov	 eax, DWORD PTR _this$5[ebp]
  00166	83 60 08 00	 and	 DWORD PTR [eax+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 97   : {

  0016a	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  0016e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00171	05 8c 00 00 00	 add	 eax, 140		; 0000008cH
  00176	89 45 8c	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 445  :     vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

  00179	8b 45 8c	 mov	 eax, DWORD PTR _this$[ebp]
  0017c	89 45 88	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  0017f	8b 45 88	 mov	 eax, DWORD PTR _this$[ebp]
  00182	89 45 d0	 mov	 DWORD PTR _this$4[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  00185	8b 45 d0	 mov	 eax, DWORD PTR _this$4[ebp]
  00188	83 20 00	 and	 DWORD PTR [eax], 0
  0018b	8b 45 d0	 mov	 eax, DWORD PTR _this$4[ebp]
  0018e	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  00192	8b 45 d0	 mov	 eax, DWORD PTR _this$4[ebp]
  00195	83 60 08 00	 and	 DWORD PTR [eax+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 97   : {

  00199	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  0019d	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001a0	05 98 00 00 00	 add	 eax, 152		; 00000098H
  001a5	89 45 84	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 445  :     vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

  001a8	8b 45 84	 mov	 eax, DWORD PTR _this$[ebp]
  001ab	89 45 80	 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  001ae	8b 45 80	 mov	 eax, DWORD PTR _this$[ebp]
  001b1	89 45 cc	 mov	 DWORD PTR _this$3[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  001b4	8b 45 cc	 mov	 eax, DWORD PTR _this$3[ebp]
  001b7	83 20 00	 and	 DWORD PTR [eax], 0
  001ba	8b 45 cc	 mov	 eax, DWORD PTR _this$3[ebp]
  001bd	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  001c1	8b 45 cc	 mov	 eax, DWORD PTR _this$3[ebp]
  001c4	83 60 08 00	 and	 DWORD PTR [eax+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 97   : {

  001c8	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8
  001cc	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  001cf	05 a4 00 00 00	 add	 eax, 164		; 000000a4H
  001d4	89 85 7c ff ff
	ff		 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 445  :     vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

  001da	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  001e0	89 85 78 ff ff
	ff		 mov	 DWORD PTR _this$[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory

; 1339 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  001e6	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _this$[ebp]
  001ec	89 45 c8	 mov	 DWORD PTR _this$2[ebp], eax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector

; 375  :     _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

  001ef	8b 45 c8	 mov	 eax, DWORD PTR _this$2[ebp]
  001f2	83 20 00	 and	 DWORD PTR [eax], 0
  001f5	8b 45 c8	 mov	 eax, DWORD PTR _this$2[ebp]
  001f8	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  001fc	8b 45 c8	 mov	 eax, DWORD PTR _this$2[ebp]
  001ff	83 60 08 00	 and	 DWORD PTR [eax+8], 0
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\EmitterProperty.cpp

; 97   : {

  00203	c6 45 fc 09	 mov	 BYTE PTR __$EHRec$[ebp+8], 9

; 98   : 	Clear();

  00207	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0020a	e8 00 00 00 00	 call	 ?Clear@CEmitterProperty@@QAEXXZ ; CEmitterProperty::Clear

; 99   : }

  0020f	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00213	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00216	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00219	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00220	59		 pop	 ecx
  00221	c9		 leave
  00222	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CEmitterProperty@@QAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 38	 add	 ecx, 56			; 00000038H
  00006	e9 00 00 00 00	 jmp	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
__unwindfunclet$??0CEmitterProperty@@QAE@XZ$1:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 44	 add	 ecx, 68			; 00000044H
  00011	e9 00 00 00 00	 jmp	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
__unwindfunclet$??0CEmitterProperty@@QAE@XZ$2:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 50	 add	 ecx, 80			; 00000050H
  0001c	e9 00 00 00 00	 jmp	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
__unwindfunclet$??0CEmitterProperty@@QAE@XZ$3:
  00021	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 5c	 add	 ecx, 92			; 0000005cH
  00027	e9 00 00 00 00	 jmp	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
__unwindfunclet$??0CEmitterProperty@@QAE@XZ$4:
  0002c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 68	 add	 ecx, 104		; 00000068H
  00032	e9 00 00 00 00	 jmp	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
__unwindfunclet$??0CEmitterProperty@@QAE@XZ$5:
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	83 c1 74	 add	 ecx, 116		; 00000074H
  0003d	e9 00 00 00 00	 jmp	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
__unwindfunclet$??0CEmitterProperty@@QAE@XZ$6:
  00042	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	81 c1 80 00 00
	00		 add	 ecx, 128		; 00000080H
  0004b	e9 00 00 00 00	 jmp	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
__unwindfunclet$??0CEmitterProperty@@QAE@XZ$7:
  00050	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  00059	e9 00 00 00 00	 jmp	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
__unwindfunclet$??0CEmitterProperty@@QAE@XZ$8:
  0005e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	81 c1 98 00 00
	00		 add	 ecx, 152		; 00000098H
  00067	e9 00 00 00 00	 jmp	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
__unwindfunclet$??0CEmitterProperty@@QAE@XZ$9:
  0006c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	81 c1 a4 00 00
	00		 add	 ecx, 164		; 000000a4H
  00075	e9 00 00 00 00	 jmp	 ??1?$vector@V?$CTimeEvent@M@@V?$allocator@V?$CTimeEvent@M@@@std@@@std@@QAE@XZ ; std::vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >::~vector<CTimeEvent<float>,std::allocator<CTimeEvent<float> > >
  0007a	cc		 int	 3
  0007b	cc		 int	 3
  0007c	cc		 int	 3
  0007d	cc		 int	 3
  0007e	cc		 int	 3
__ehhandler$??0CEmitterProperty@@QAE@XZ:
  0007f	90		 npad	 1
  00080	90		 npad	 1
  00081	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00085	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00088	8b 4a 80	 mov	 ecx, DWORD PTR [edx-128]
  0008b	33 c8		 xor	 ecx, eax
  0008d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00092	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0CEmitterProperty@@QAE@XZ
  00097	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0CEmitterProperty@@QAE@XZ ENDP			; CEmitterProperty::CEmitterProperty
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 213  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00016	33 c5		 xor	 eax, ebp
  00018	50		 push	 eax
  00019	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 214  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 215  : #if defined(_M_IX86) || defined(_M_X64)
; 216  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00022	81 7d 0c 00 10
	00 00		 cmp	 DWORD PTR __Bytes$[ebp], 4096 ; 00001000H
  00029	72 0f		 jb	 SHORT $LN2@Deallocate

; 217  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0002b	8d 45 0c	 lea	 eax, DWORD PTR __Bytes$[ebp]
  0002e	50		 push	 eax
  0002f	8d 45 08	 lea	 eax, DWORD PTR __Ptr$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
  00038	59		 pop	 ecx
  00039	59		 pop	 ecx
$LN2@Deallocate:

; 218  :     }
; 219  : #endif // defined(_M_IX86) || defined(_M_X64)
; 220  : 
; 221  :     ::operator delete(_Ptr, _Bytes);

  0003a	ff 75 0c	 push	 DWORD PTR __Bytes$[ebp]
  0003d	ff 75 08	 push	 DWORD PTR __Ptr$[ebp]
  00040	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00045	59		 pop	 ecx
  00046	59		 pop	 ecx

; 222  : }

  00047	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0004a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00051	59		 pop	 ecx
  00052	c9		 leave
  00053	c3		 ret	 0
  00054	cc		 int	 3
  00055	cc		 int	 3
  00056	cc		 int	 3
  00057	cc		 int	 3
  00058	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
; Function compile flags: /Odspy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z
_TEXT	SEGMENT
__Min_back_shift$ = -16					; size = 4
__Ptr_user$ = -12					; size = 4
__Ptr_container$ = -8					; size = 4
__Back_shift$ = -4					; size = 4
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 132  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 133  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 134  :     _Bytes += _Non_user_size;

  00006	8b 45 0c	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00009	8b 00		 mov	 eax, DWORD PTR [eax]
  0000b	83 c0 23	 add	 eax, 35			; 00000023H
  0000e	8b 4d 0c	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00011	89 01		 mov	 DWORD PTR [ecx], eax

; 135  : 
; 136  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00013	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00016	8b 00		 mov	 eax, DWORD PTR [eax]
  00018	89 45 f4	 mov	 DWORD PTR __Ptr_user$[ebp], eax

; 137  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001b	6a 04		 push	 4
  0001d	58		 pop	 eax
  0001e	6b c0 ff	 imul	 eax, eax, -1
  00021	8b 4d f4	 mov	 ecx, DWORD PTR __Ptr_user$[ebp]
  00024	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  00027	89 45 f8	 mov	 DWORD PTR __Ptr_container$[ebp], eax

; 138  : 
; 139  :     // If the following asserts, it likely means that we are performing
; 140  :     // an aligned delete on memory coming from an unaligned allocation.
; 141  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 142  : 
; 143  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 144  :     // in range [_Min_back_shift, _Non_user_size]
; 145  : #ifdef _DEBUG
; 146  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 147  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 148  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);

  0002a	c7 45 f0 04 00
	00 00		 mov	 DWORD PTR __Min_back_shift$[ebp], 4

; 149  : #endif // _DEBUG
; 150  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00031	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00034	8b 00		 mov	 eax, DWORD PTR [eax]
  00036	2b 45 f8	 sub	 eax, DWORD PTR __Ptr_container$[ebp]
  00039	89 45 fc	 mov	 DWORD PTR __Back_shift$[ebp], eax
$LN4@Adjust_man:

; 151  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0003c	83 7d fc 04	 cmp	 DWORD PTR __Back_shift$[ebp], 4
  00040	72 08		 jb	 SHORT $LN7@Adjust_man
  00042	83 7d fc 23	 cmp	 DWORD PTR __Back_shift$[ebp], 35 ; 00000023H
  00046	77 02		 ja	 SHORT $LN7@Adjust_man
  00048	eb 09		 jmp	 SHORT $LN2@Adjust_man
$LN7@Adjust_man:
  0004a	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
  0004f	33 c0		 xor	 eax, eax
  00051	75 f7		 jne	 SHORT $LN7@Adjust_man
$LN2@Adjust_man:
  00053	33 c0		 xor	 eax, eax
  00055	75 e5		 jne	 SHORT $LN4@Adjust_man

; 152  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00057	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0005a	8b 4d f8	 mov	 ecx, DWORD PTR __Ptr_container$[ebp]
  0005d	89 08		 mov	 DWORD PTR [eax], ecx
$LN10@Adjust_man:

; 153  : }

  0005f	c9		 leave
  00060	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
END
