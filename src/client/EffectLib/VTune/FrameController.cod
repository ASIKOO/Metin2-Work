; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

	TITLE	D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\FrameController.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0CFrameController@@QAE@XZ			; CFrameController::CFrameController
PUBLIC	??1CFrameController@@UAE@XZ			; CFrameController::~CFrameController
PUBLIC	?Clear@CFrameController@@QAEXXZ			; CFrameController::Clear
PUBLIC	?Update@CFrameController@@QAEXM@Z		; CFrameController::Update
PUBLIC	?SetCurrentFrame@CFrameController@@QAEXK@Z	; CFrameController::SetCurrentFrame
PUBLIC	?GetCurrentFrame@CFrameController@@QAEEXZ	; CFrameController::GetCurrentFrame
PUBLIC	?SetMaxFrame@CFrameController@@QAEXK@Z		; CFrameController::SetMaxFrame
PUBLIC	?SetFrameTime@CFrameController@@QAEXM@Z		; CFrameController::SetFrameTime
PUBLIC	?SetStartFrame@CFrameController@@QAEXK@Z	; CFrameController::SetStartFrame
PUBLIC	?SetLoopFlag@CFrameController@@QAEXH@Z		; CFrameController::SetLoopFlag
PUBLIC	?SetLoopCount@CFrameController@@QAEXH@Z		; CFrameController::SetLoopCount
PUBLIC	?SetActive@CFrameController@@QAEXH@Z		; CFrameController::SetActive
PUBLIC	?isActive@CFrameController@@QAEHK@Z		; CFrameController::isActive
PUBLIC	??_GCFrameController@@UAEPAXI@Z			; CFrameController::`scalar deleting destructor'
PUBLIC	??_7CFrameController@@6B@			; CFrameController::`vftable'
PUBLIC	??_R4CFrameController@@6B@			; CFrameController::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCFrameController@@@8			; CFrameController `RTTI Type Descriptor'
PUBLIC	??_R3CFrameController@@8			; CFrameController::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CFrameController@@8			; CFrameController::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CFrameController@@8		; CFrameController::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_ECFrameController@@UAEPAXI@Z:PROC		; CFrameController::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__fltused:DWORD
;	COMDAT ??_R1A@?0A@EA@CFrameController@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CFrameController@@8 DD FLAT:??_R0?AVCFrameController@@@8 ; CFrameController::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CFrameController@@8
rdata$r	ENDS
;	COMDAT ??_R2CFrameController@@8
rdata$r	SEGMENT
??_R2CFrameController@@8 DD FLAT:??_R1A@?0A@EA@CFrameController@@8 ; CFrameController::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CFrameController@@8
rdata$r	SEGMENT
??_R3CFrameController@@8 DD 00H				; CFrameController::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CFrameController@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCFrameController@@@8
data$rs	SEGMENT
??_R0?AVCFrameController@@@8 DD FLAT:??_7type_info@@6B@	; CFrameController `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCFrameController@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CFrameController@@6B@
rdata$r	SEGMENT
??_R4CFrameController@@6B@ DD 00H			; CFrameController::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCFrameController@@@8
	DD	FLAT:??_R3CFrameController@@8
rdata$r	ENDS
;	COMDAT ??_7CFrameController@@6B@
CONST	SEGMENT
??_7CFrameController@@6B@ DD FLAT:??_R4CFrameController@@6B@ ; CFrameController::`vftable'
	DD	FLAT:??_ECFrameController@@UAEPAXI@Z
CONST	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_GCFrameController@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCFrameController@@UAEPAXI@Z PROC			; CFrameController::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1CFrameController@@UAE@XZ ; CFrameController::~CFrameController
  0000f	8b 45 08	 mov	 eax, DWORD PTR ___flags$[ebp]
  00012	83 e0 01	 and	 eax, 1
  00015	74 0c		 je	 SHORT $LN2@scalar
  00017	6a 24		 push	 36			; 00000024H
  00019	ff 75 fc	 push	 DWORD PTR _this$[ebp]
  0001c	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00021	59		 pop	 ecx
  00022	59		 pop	 ecx
$LN2@scalar:
  00023	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c9		 leave
  00027	c2 04 00	 ret	 4
??_GCFrameController@@UAEPAXI@Z ENDP			; CFrameController::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\FrameController.cpp
;	COMDAT ?isActive@CFrameController@@QAEHK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwMainFrame$ = 8					; size = 4
?isActive@CFrameController@@QAEHK@Z PROC		; CFrameController::isActive, COMDAT
; _this$ = ecx

; 79   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 80   : 	if (dwMainFrame < m_dwStartFrame)

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _dwMainFrame$[ebp]
  0000d	3b 48 20	 cmp	 ecx, DWORD PTR [eax+32]
  00010	73 04		 jae	 SHORT $LN2@isActive

; 81   : 		return FALSE;

  00012	33 c0		 xor	 eax, eax
  00014	eb 06		 jmp	 SHORT $LN1@isActive
$LN2@isActive:

; 82   : 
; 83   : 	return m_isActive;

  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
$LN1@isActive:

; 84   : }

  0001c	c9		 leave
  0001d	c2 04 00	 ret	 4
?isActive@CFrameController@@QAEHK@Z ENDP		; CFrameController::isActive
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\FrameController.cpp
;	COMDAT ?SetActive@CFrameController@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bFlag$ = 8						; size = 4
?SetActive@CFrameController@@QAEXH@Z PROC		; CFrameController::SetActive, COMDAT
; _this$ = ecx

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 75   : 	m_isActive = bFlag;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _bFlag$[ebp]
  0000d	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 76   : }

  00010	c9		 leave
  00011	c2 04 00	 ret	 4
?SetActive@CFrameController@@QAEXH@Z ENDP		; CFrameController::SetActive
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\FrameController.cpp
;	COMDAT ?SetLoopCount@CFrameController@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iLoopCount$ = 8					; size = 4
?SetLoopCount@CFrameController@@QAEXH@Z PROC		; CFrameController::SetLoopCount, COMDAT
; _this$ = ecx

; 69   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 70   : 	m_iLoopCount = iLoopCount;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _iLoopCount$[ebp]
  0000d	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 71   : }

  00010	c9		 leave
  00011	c2 04 00	 ret	 4
?SetLoopCount@CFrameController@@QAEXH@Z ENDP		; CFrameController::SetLoopCount
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\FrameController.cpp
;	COMDAT ?SetLoopFlag@CFrameController@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bFlag$ = 8						; size = 4
?SetLoopFlag@CFrameController@@QAEXH@Z PROC		; CFrameController::SetLoopFlag, COMDAT
; _this$ = ecx

; 64   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 65   : 	m_isLoop = bFlag;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _bFlag$[ebp]
  0000d	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 66   : }

  00010	c9		 leave
  00011	c2 04 00	 ret	 4
?SetLoopFlag@CFrameController@@QAEXH@Z ENDP		; CFrameController::SetLoopFlag
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\FrameController.cpp
;	COMDAT ?SetStartFrame@CFrameController@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwStartFrame$ = 8					; size = 4
?SetStartFrame@CFrameController@@QAEXK@Z PROC		; CFrameController::SetStartFrame, COMDAT
; _this$ = ecx

; 59   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 60   : 	m_dwStartFrame = dwStartFrame;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _dwStartFrame$[ebp]
  0000d	89 48 20	 mov	 DWORD PTR [eax+32], ecx

; 61   : }

  00010	c9		 leave
  00011	c2 04 00	 ret	 4
?SetStartFrame@CFrameController@@QAEXK@Z ENDP		; CFrameController::SetStartFrame
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\FrameController.cpp
;	COMDAT ?SetFrameTime@CFrameController@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fTime$ = 8						; size = 4
?SetFrameTime@CFrameController@@QAEXM@Z PROC		; CFrameController::SetFrameTime, COMDAT
; _this$ = ecx

; 54   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 55   : 	m_fFrameTime = fTime;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fTime$[ebp]
  0000f	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 56   : 	m_fLastFrameTime = fTime;

  00014	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00017	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fTime$[ebp]
  0001c	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 57   : }

  00021	c9		 leave
  00022	c2 04 00	 ret	 4
?SetFrameTime@CFrameController@@QAEXM@Z ENDP		; CFrameController::SetFrameTime
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\FrameController.cpp
;	COMDAT ?SetMaxFrame@CFrameController@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwMaxFrame$ = 8					; size = 4
?SetMaxFrame@CFrameController@@QAEXK@Z PROC		; CFrameController::SetMaxFrame, COMDAT
; _this$ = ecx

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 51   : 	m_dwMaxFrame = dwMaxFrame;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _dwMaxFrame$[ebp]
  0000d	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 52   : }

  00010	c9		 leave
  00011	c2 04 00	 ret	 4
?SetMaxFrame@CFrameController@@QAEXK@Z ENDP		; CFrameController::SetMaxFrame
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\FrameController.cpp
;	COMDAT ?GetCurrentFrame@CFrameController@@QAEEXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCurrentFrame@CFrameController@@QAEEXZ PROC		; CFrameController::GetCurrentFrame, COMDAT
; _this$ = ecx

; 45   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 46   : 	return m_dwcurFrame;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8a 40 08	 mov	 al, BYTE PTR [eax+8]

; 47   : }

  0000d	c9		 leave
  0000e	c3		 ret	 0
?GetCurrentFrame@CFrameController@@QAEEXZ ENDP		; CFrameController::GetCurrentFrame
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\FrameController.cpp
;	COMDAT ?SetCurrentFrame@CFrameController@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwFrame$ = 8						; size = 4
?SetCurrentFrame@CFrameController@@QAEXK@Z PROC		; CFrameController::SetCurrentFrame, COMDAT
; _this$ = ecx

; 40   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 41   : 	m_dwcurFrame = dwFrame;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _dwFrame$[ebp]
  0000d	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 42   : }

  00010	c9		 leave
  00011	c2 04 00	 ret	 4
?SetCurrentFrame@CFrameController@@QAEXK@Z ENDP		; CFrameController::SetCurrentFrame
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\FrameController.cpp
;	COMDAT ?Update@CFrameController@@QAEXM@Z
_TEXT	SEGMENT
tv85 = -12						; size = 4
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
_fElapsedTime$ = 8					; size = 4
?Update@CFrameController@@QAEXM@Z PROC			; CFrameController::Update, COMDAT
; _this$ = ecx

; 5    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 6    : 	m_fLastFrameTime -= fElapsedTime;

  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00011	f3 0f 5c 45 08	 subss	 xmm0, DWORD PTR _fElapsedTime$[ebp]
  00016	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00019	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 7    : 
; 8    : 	for (int i = 0; i < 20; ++i)

  0001e	83 65 f8 00	 and	 DWORD PTR _i$1[ebp], 0
  00022	eb 07		 jmp	 SHORT $LN4@Update
$LN2@Update:
  00024	8b 45 f8	 mov	 eax, DWORD PTR _i$1[ebp]
  00027	40		 inc	 eax
  00028	89 45 f8	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@Update:
  0002b	83 7d f8 14	 cmp	 DWORD PTR _i$1[ebp], 20	; 00000014H
  0002f	0f 8d a1 00 00
	00		 jge	 $LN3@Update

; 9    : 	{
; 10   : 		if (m_fLastFrameTime < 0.0f)

  00035	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00038	0f 57 c0	 xorps	 xmm0, xmm0
  0003b	0f 2f 40 0c	 comiss	 xmm0, DWORD PTR [eax+12]
  0003f	0f 86 8a 00 00
	00		 jbe	 $LN5@Update

; 11   : 		{
; 12   : 			m_fLastFrameTime += m_fFrameTime;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004b	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00050	f3 0f 58 41 1c	 addss	 xmm0, DWORD PTR [ecx+28]
  00055	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00058	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 13   : 			++m_dwcurFrame;

  0005d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00060	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00063	40		 inc	 eax
  00064	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00067	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 14   : 
; 15   : 			if (m_dwcurFrame >= m_dwMaxFrame)

  0006a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00073	3b 41 18	 cmp	 eax, DWORD PTR [ecx+24]
  00076	72 55		 jb	 SHORT $LN9@Update

; 16   : 			{
; 17   : 				if (m_isLoop && --m_iLoopCount!=0)

  00078	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007b	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  0007f	74 32		 je	 SHORT $LN8@Update
  00081	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00084	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00087	48		 dec	 eax
  00088	89 45 f4	 mov	 DWORD PTR tv85[ebp], eax
  0008b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0008e	8b 4d f4	 mov	 ecx, DWORD PTR tv85[ebp]
  00091	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00094	83 7d f4 00	 cmp	 DWORD PTR tv85[ebp], 0
  00098	74 19		 je	 SHORT $LN8@Update

; 18   : 				{
; 19   : 					if (m_iLoopCount<0)

  0009a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0009d	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  000a1	7d 07		 jge	 SHORT $LN10@Update

; 20   : 						m_iLoopCount = 0;

  000a3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000a6	83 60 10 00	 and	 DWORD PTR [eax+16], 0
$LN10@Update:

; 21   : 					m_dwcurFrame = 0;

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000ad	83 60 08 00	 and	 DWORD PTR [eax+8], 0

; 22   : 				}

  000b1	eb 1a		 jmp	 SHORT $LN9@Update
$LN8@Update:

; 23   : 				else
; 24   : 				{
; 25   : 					m_iLoopCount = 1;

  000b3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b6	c7 40 10 01 00
	00 00		 mov	 DWORD PTR [eax+16], 1

; 26   : 					m_dwcurFrame = 0;

  000bd	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c0	83 60 08 00	 and	 DWORD PTR [eax+8], 0

; 27   : 					m_isActive = FALSE;

  000c4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000c7	83 60 04 00	 and	 DWORD PTR [eax+4], 0

; 28   : 					return;

  000cb	eb 09		 jmp	 SHORT $LN1@Update
$LN9@Update:

; 29   : 				}
; 30   : 			}
; 31   : 		}

  000cd	eb 02		 jmp	 SHORT $LN6@Update
$LN5@Update:

; 32   : 		else
; 33   : 		{
; 34   : 			break;

  000cf	eb 05		 jmp	 SHORT $LN3@Update
$LN6@Update:

; 35   : 		}
; 36   : 	}

  000d1	e9 4e ff ff ff	 jmp	 $LN2@Update
$LN3@Update:
$LN1@Update:

; 37   : }

  000d6	c9		 leave
  000d7	c2 04 00	 ret	 4
?Update@CFrameController@@QAEXM@Z ENDP			; CFrameController::Update
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\FrameController.cpp
;	COMDAT ?Clear@CFrameController@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Clear@CFrameController@@QAEXXZ PROC			; CFrameController::Clear, COMDAT
; _this$ = ecx

; 87   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 88   : 	m_isActive = TRUE;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 40 04 01 00
	00 00		 mov	 DWORD PTR [eax+4], 1

; 89   : 	m_dwcurFrame = 0;

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	83 60 08 00	 and	 DWORD PTR [eax+8], 0

; 90   : 	m_fLastFrameTime = 0.0f;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	0f 57 c0	 xorps	 xmm0, xmm0
  0001e	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 91   : }

  00023	c9		 leave
  00024	c3		 ret	 0
?Clear@CFrameController@@QAEXXZ ENDP			; CFrameController::Clear
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\FrameController.cpp
;	COMDAT ??1CFrameController@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CFrameController@@UAE@XZ PROC			; CFrameController::~CFrameController, COMDAT
; _this$ = ecx

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CFrameController@@6B@

; 106  : }

  00010	c9		 leave
  00011	c3		 ret	 0
??1CFrameController@@UAE@XZ ENDP			; CFrameController::~CFrameController
_TEXT	ENDS
; Function compile flags: /Odspy
; File D:\Metin2 Server Files\mainline\SRC_2014\Metin2Client\EffectLib\FrameController.cpp
;	COMDAT ??0CFrameController@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CFrameController@@QAE@XZ PROC			; CFrameController::CFrameController, COMDAT
; _this$ = ecx

; 94   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7CFrameController@@6B@

; 95   : 	m_isActive = TRUE;

  00010	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00013	c7 40 04 01 00
	00 00		 mov	 DWORD PTR [eax+4], 1

; 96   : 	m_dwcurFrame = 0;

  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	83 60 08 00	 and	 DWORD PTR [eax+8], 0

; 97   : 	m_fLastFrameTime = 0.0f;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	0f 57 c0	 xorps	 xmm0, xmm0
  00027	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 98   : 
; 99   : 	m_isLoop = FALSE;

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	83 60 14 00	 and	 DWORD PTR [eax+20], 0

; 100  : 	m_dwMaxFrame = 0;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00036	83 60 18 00	 and	 DWORD PTR [eax+24], 0

; 101  : 	m_fFrameTime = 0.0f;

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003d	0f 57 c0	 xorps	 xmm0, xmm0
  00040	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 102  : 	m_dwStartFrame = 0;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00048	83 60 20 00	 and	 DWORD PTR [eax+32], 0

; 103  : }

  0004c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004f	c9		 leave
  00050	c3		 ret	 0
??0CFrameController@@QAE@XZ ENDP			; CFrameController::CFrameController
_TEXT	ENDS
END
